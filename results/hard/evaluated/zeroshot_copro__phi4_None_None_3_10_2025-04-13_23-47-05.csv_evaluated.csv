id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
392,21,test,"Give me the region of Central European Time and entity in Italy and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region ?entityInItaly ?province WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti"" .
  
  ?person dbo:nationality dbr:Italian ;
          dbo:residence ?settlement .

  ?settlement a dbo:Settlement ;
              dbp:country dbr:Italy ;
              dbo:locatedInAdministrativeArea ?province .

  ?province dbo:timeZone ?region .
  
  FILTER (str(?region) = ""Central European Time"")
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
421,24,test,Give me the person born as the birth name of Dino Merlin and native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Get Dino Merlin's birth name
  dbr:Dino_Merlin dbo:birthName ?birthName .

  # Get Samir Bekrić's birthplace
  dbr:Samir_Bekrić dbo:birthPlace ?birthPlace .

  # Find a person with the same birth name and native to the same place
  ?person dbo:birthName ?birthName .
  ?person dbo:nativePlace ?birthPlace .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
427,55,test,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994) and party of the father of Lamberto Andreotti.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v5 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiParty ?andreottiFatherParty
WHERE {
  # Romano Prodi's party in 1994
  dbr:Romano_Prodi dbo:nationality dbr:Italy ;
                   dbo:officeHolder true ;
                   dbo:birthPlace ?prodiBirthPlace .
  
  OPTIONAL {
    ?prodiMembership dbo:member dbr:Romano_Prodi ;
                     dbo:organization dbr:Italian_People's_Party_(1994) .
    BIND(dbr:Italian_People's_Party_(1994) AS ?prodiParty)
  }
  
  # Lamberto Andreotti's father's party
  dbr:Lamberto_Andreotti dbo:father ?andreottiFather ;
                         dbo:officeHolder true .
  
  OPTIONAL {
    ?fatherMembership dbo:member ?andreottiFather ;
                      dbo:organization ?andreottiFatherParty .
  }
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
996,19,test,Give me the force of the awardee of 1778.0 and entity in the award of the native of Palestine (region).,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?result <http://dbpedia.org/ontology/commander> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force WHERE {
  ?award dbo:recipient ?awardee .
  ?award dbo:date ?date .
  FILTER (YEAR(?date) = 1778)
  
  ?awardee dbo:nativePlace ?nativePlace .
  ?nativePlace rdfs:label ""Palestine""@en .

  OPTIONAL { ?awardee dbo:force ?force }
}
```

This query does the following:
- Selects the awardee and their associated force.
- Filters awards given in the year 1778.
- Ensures the awardee's native place is labeled as ""Palestine"".
- Optionally retrieves any force-related information linked to the awardee.",5,5,6,3,2,3,2,20,0,0,4,0,0.0,0
184,64,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of Archduke Joseph August of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent
WHERE {
    # Step 1: Archduchess Margaret of Austria (born 1925)
    ?margaret a dbo:Person ;
              foaf:birthday ""1925-01-01""^^xsd:date ;
              dbo:parent ?parentMargaret .
    
    ?childOfParentMargaret dbo:parent ?parentChildOfParent .

    # Step 2: Landmark at elevation 96.0
    ?landmark a dbo:Settlement ;
              dbo:elevation ""96.0""^^xsd:float .
    
    ?nativeLandmark dbo:nativeOf ?landmark .
    ?parentNative dbo:child ?nativeLandmark .

    # Step 3: Archduke Joseph August of Austria
    ?josephAugust a dbo:Person ;
                  dbo:child ?childJosephAugust .

    # Find common parent
    FILTER (?parentChildOfParent = ?parentNative)
    BIND(?parentChildOfParent AS ?commonParent)

}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
492,46,test,"Give me the person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Frédéric-Georges Herr as an author of ""French Algeria""
  dbr:Frédéric-Georges_Herr dbo:author dbr:French_Algeria .
  
  # His role in a military conflict/event
  dbr:Frédéric-Georges_Herr dbo:commanderOf ?militaryEvent .
  ?militaryEvent rdf:type dbo:MilitaryConflict .

  # Find the person decedent related to his work or event
  OPTIONAL {
    ?decedent dbo:relatedTo dbr:French_Algeria .
    ?decedent dbo:relatedTo ?militaryEvent .
  }
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,20,test,Give me the reference to Partito Popolare Italiano and party of the father of Lamberto Andreotti.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyReference ?fatherParty
WHERE {
  # Find Partito Popolare Italiano reference
  dbr:Partito_Popolare_Italiano dbo:wikiPageRedirects ?partyReference .

  # Find Lamberto Andreotti's father
  dbr:Lamberto_Andreotti dbo:father ?father .

  # Find the political party of Lamberto Andreotti's father
  ?father dbo:politicalParty ?fatherParty .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
747,61,test,"Give me the band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfShena ?bandOfAmbaShepherdSong
WHERE {
  # Find Shèna's birth name and associated band
  ?shena a dbo:MusicalArtist ;
         rdfs:label ""Shèna""@en .
  OPTIONAL { 
    ?shena dbo:birthName ?realName .
  }
  OPTIONAL {
    ?shena dbo:band ?bandOfShena .
  }

  # Find Amba Shepherd's song and associated band
  ?song a dbo:Song ;
        dbo:author dbr:Amba_Shepherd ;
        rdfs:label ?songLabel .
  OPTIONAL {
    ?song dbo:band ?bandOfAmbaShepherdSong .
  }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
328,44,test,"Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  
  # Awardee of Order of Suvorov
  ?awards dbo:recipient ?person ;
          dbo:name dbr:Order_of_Suvorov .

  # Commander in the force of Ferenc Szálasi
  ?commanderRole dbo:agent ?person ;
                 dbo:leader dbr:Ferenc_Sz%C3%A1lasi .
  
  # Leader of a government agency under Joseph Stalin
  OPTIONAL {
    ?agencyLeader dbo:head ?person ;
                  dbo:country dbr:Soviet_Union ;
                  dbo:leader dbr:Joseph_Stalin .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
294,28,test,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in the birth place, that is a settlement, of Marion James and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v5 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?architectRestingPlace ?marionBirthplaceEntity ?awardeeRestingPlace
WHERE {
  # Resting place of the architect of P. D. Houston Jr. House
  ?house dbo:architect ?architect .
  FILTER(STRSTARTS(STR(?house), ""http://dbpedia.org/resource/P._D._Houston_Jr._House""))
  ?architect dbp:deathPlace ?architectRestingPlace .

  # Entity in the birthplace of Marion James that is a settlement
  dbr:Marion_James dbo:birthPlace ?marionBirthplace .
  ?marionBirthplace rdf:type dbo:Settlement .
  ?marionBirthplaceEntity rdf:type/rdfs:subClassOf* dbo:Place .
  FILTER(?marionBirthplace = ?marionBirthplaceEntity)

  # Resting place of the awardee, who is a politician, of Distinguished Service Medal (U.S. Army)
  ?awardee dbp:award ""Distinguished_Service_Medal_(United_States_Army)"" .
  ?awardee dbo:occupation dbr:Politician .
  ?awardee dbp:deathPlace ?awardeeRestingPlace .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
528,41,test,Give me the war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battlePisaguaWar ?battleLaRinconadaWar ?camperoForce
WHERE {
  # Battle of Pisagua and its military conflict (war)
  dbr:Battle_of_Pisagua dbo:militaryConflict ?battlePisaguaWar .

  # Battle of La Rinconada de Ate, find the commander and their associated war
  OPTIONAL {
    dbr:Battle_of_La_Rinconada_de_Ate dbo:commander ?commander .
    ?commander dbo:militaryConflict ?battleLaRinconadaWar .
  }

  # Narciso Campero's military force
  dbr:Narciso_Campero dbo:member ?camperoForce .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
9,49,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater
WHERE {
  # Find the mayor of Northern Ireland Forum
  ?mayor a dbo:Politician ;
         dbo:officeHolderOf dbr:Northern_Ireland_Forum .

  # Find the nickname of an organization that is also an educational institution in Northern Ireland
  ?organization a dbo:EducationalInstitution, dbo:Organization ;
                dbp:nickname ?nickname ;
                dbo:location dbr:Northern_Ireland .

  # Retrieve the alma mater of the mayor
  ?mayor dbo:almaMater ?almaMater .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
281,41,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX schema: <http://schema.org/>

SELECT DISTINCT ?country ?war
WHERE {
  # Bob Heffron's birthplace and ensuring it is a country
  ?heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type schema:Country .
  BIND(?birthPlace AS ?country)

  # Awardee of Knight Grand Cross of the Order of the Bath
  ?awardee dbo:award <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .

  # Wars involving New Zealand Army and the awardee
  ?war dbo:participatingMilitaryUnit ?newZealandArmy .
  ?newZealandArmy rdfs:label ""New Zealand Army""@en .
  
  OPTIONAL {
    ?awardee dbo:militaryService ?militaryService .
    ?militaryService dbo:conflict ?war .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
485,21,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and entity in United Kingdom and birth place of Thomas Warner (poet).",SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceRegion ?ukEntity ?warnerBirthPlace
WHERE {
  # Joseph Whitaker (naturalist)
  dbr:Joseph_Whitaker_(naturalist) dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:AdministrativeTerritory ;
              rdfs:label ?regionLabel .

  FILTER(CONTAINS(LCASE(?regionLabel), ""region""))

  BIND(?birthPlace AS ?birthPlaceRegion)

  # Thomas Warner (poet)
  dbr:Thomas_Warner_(poet) dbo:birthPlace ?warnerBirthPlace .

  # Entity in United Kingdom
  ?ukEntity a dbo:AdministrativeTerritory ;
            dbo:country dbr:United_Kingdom .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
528,52,test,"Give me the war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v5 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander ?militaryForce WHERE {
  # Find the Battle of La Rinconada de Ate and its commander
  dbr:Battle_of_La_Rinconada_de_Ate dbo:commander ?commander .
  
  # Check if the commander is Narciso Campero
  FILTER(?commander = dbr:Narciso_Campero)
  
  # Find wars involving military forces related to societal events in Chile
  ?war dbo:militaryForce ?militaryForce ;
       dbo:place dbr:Chile .
  
  # Ensure the war is a societal event
  ?societalEvent dbo:relatedWar ?war .
  FILTER(STRSTARTS(STR(?societalEvent), ""http://dbpedia.org/resource/Category:Societal_events_in_Chile""))
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
534,19,test,"Give me the birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician) and headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/headquarter> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/owner> ?v4 . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?headquarters
WHERE {
  # Find Desmond FitzGerald and his child who is a politician and office holder
  ?desmond a dbo:Politician ;
           foaf:name ""Desmond FitzGerald"" .
  
  ?child dbo:parent ?desmond ;
         a dbo:Politician, dbo:OfficeHolder .

  ?child dbo:birthPlace ?birthPlace .

  # Find the venue of the 2012 Pro12 Grand Final
  dbr:Pro12_Grand_Final_2012 dbo:venue ?venue .
  
  # Find the owner of the venue and their headquarters
  ?venue dbo:owner ?owner .
  ?owner dbo:headquarters ?headquarters .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
391,33,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor
WHERE {
  # Sherry Hormann's resource
  dbr:Sherry_Hormann dbo:spouse ?spouse .

  # Spouse must be native of Compton, California
  ?spouse dbo:birthPlace dbr:Compton,_California .

  # Find a notable work (claim to fame) by the spouse
  ?spouse dbo:notableWork ?work .

  # Get the actor involved in that work
  ?work dbo:actor ?actor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
54,54,test,Give me the child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v3 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Father of Soe Min Wimala Dewi
  ?father dbo:spouse ?soeMinWimalaDewi .
  ?soeMinWimalaDewi dbr:Soe_Min_Wimala_Dewi .

  # Predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?predecessor dbo:successor dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .
  
  # Ensure the father is also the predecessor
  FILTER (?father = ?predecessor)

  # Parent of the child of the parent of Thado Minsaw of Prome
  ?grandParent dbo:child ?parentOfChild .
  ?parentOfChild dbo:child ?thadoMinsaw .
  ?thadoMinsaw dbr:Thado_Minsaw_of_Prome .

  # The child we are looking for is the child of this grandparent
  ?grandParent dbo:child ?child .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
10,27,test,"Give me the professional in the birth name of Sharon Kao and associated musical artist of Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional ?musicalArtist ?bandMember
WHERE {
  # Sharon Kao's birth name and associated professional
  dbr:Sharon_Kao dbo:birthName ?birthName .
  ?birthName dbo:associatedProfessional ?professional .

  # Matt Colton's associated musical artist
  dbr:Matt_Colton dbo:associatedMusicalArtist ?musicalArtist .

  # Luke Francis Vibert as a band member of an artist
  dbr:Luke_Francis_Vibert dbo:bandMemberOf ?artist .
  FILTER (dbo:Person(?artist)) # Ensure the person is an artist

  # Linking all entities together
  OPTIONAL { ?professional rdfs:label ?professionalLabel . }
  OPTIONAL { ?musicalArtist rdfs:label ?musicalArtistLabel . }
  OPTIONAL { ?bandMember rdfs:label ?bandMemberLabel . }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
528,65,test,Give me the war of the military force of Battle of Pisagua and war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?militaryForce ?war ?commander ?bornPerson
WHERE {
  # Battle of Pisagua and its military force
  dbr:Battle_of_Pisagua dbo:militaryConflicts ?battle .
  ?battle dbo:participatingMilitaryUnit ?militaryForce .

  # Commander associated with a war on 01-09 (assuming this is a date format)
  OPTIONAL {
    ?commander dbo:dateOfBirth ?dateOfBirth .
    FILTER (YEAR(?dateOfBirth) = 1901 && MONTH(?dateOfBirth) = 9)
    ?war dbo:commander ?commander .
  }

  # Person born as Narciso Campero Leyes
  dbr:Narciso_Campero_Leyes dbo:birthPlace ?bornPerson .

  # Linking the commander to the person born as Narciso Campero Leyes
  OPTIONAL {
    ?commander foaf:name ""Narciso Campero Leyes"" .
  }
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
492,59,test,"Give me the person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedent WHERE {
  # Find the author of French Algeria
  ?author dbo:work dbr:French_Algeria .
  
  # Find a commander in a war related to this author
  ?commander dbo:occupation dbr:Military_officer ;
             dbo:participatedIn ?war .

  # Link the commander to the Battle of Verdun
  ?battle dbr:Battle_of_Verdun ;
         dbo:participant ?commander .

  # Find the person decedent at work related to this chain
  ?personDecedent dbo:deathPlace ?workLocation .
  
  # Ensure the person is connected through the author and commander
  FILTER(?author = ?commander || ?author = ?personDecedent)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
488,58,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of Enomoto Takeaki and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?birthPlace ?deathPlace
WHERE {
  # Tokugawa Masako's spouse
  ?spouse a dbo:Spouse ;
          dbo:spouse dbr:Tokugawa_Masako .

  # Spouse's father (Royalty)
  ?father a dbo:Father ;
          dbo:child ?spouse .
  
  FILTER EXISTS { ?father dbo:royalTitle ?title } # Ensure the father is royalty

  # Administration of the spouse's father
  OPTIONAL {
    ?administration dbo:head dbr:Father_of_Spouse ;
                    rdfs:label ?adminLabel .
  }

  # Enomoto Takeaki's birthplace
  ?enomoto a dbo:BirthPlace ;
           rdfs:label ""Enomoto Takeaki""@en .

  # Yūki Hideyasu's father (Politician)
  ?yukiFather a dbo:Father ;
              dbo:child dbr:Yūki_Hideyasu .
  
  FILTER EXISTS { ?yukiFather dbo:occupation dbo:Politician } # Ensure the father is a politician

  # Death place of Yūki Hideyasu's father
  OPTIONAL {
    ?deathPlace dbo:deceased dbr:Yūki_Father ;
                rdfs:label ?deathLabel .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
801,56,test,"Give me the producer of Westside Story (song) and professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?associatedArtist
WHERE {
  # Find the producer of ""Westside Story (song)""
  dbr:Westside_Story_(song) dbo:producer ?producer .

  # Identify the alter ego of ""The Shadow""
  OPTIONAL { 
    ?shadowAlterEgo rdfs:label ""The Shadow""@en .
    ?shadowAlterEgo dbo:profession ?professionalIdentity .
    
    # Find the associated musical artist who is also an artist
    ?associatedArtist dbo:profession ?professionalIdentity ;
                     a dbo:MusicalArtist, dbo:Artist .

    # Identify the album written by this artist
    ?album dbo:title ""What U See Is What U Get""@en ;
           dbo:artist ?associatedArtist ;
           a dbo:MusicalWork, dbo:Work .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
232,54,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee and native of London.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorName WHERE {
  ?person a dbo:Actor ;
          foaf:name ?actorName ;
          dbo:childOf dbr:John_Devon_Roland_Pertwee .
  
  ?film dbo:starring ?person ;
        a dbo:Film .

  ?conflict dbo:relatedTo ?person ;
            a dbo:MilitaryConflict .

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
184,18,test,Give me the parent of Archduchess Ilona of Austria and parent of Géza von Habsburg and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent ?child
WHERE {
  # Parent of Archduchess Ilona of Austria
  { 
    ?ilona dbo:parent ?parent .
    VALUES ?ilona { <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> }
  }

  UNION

  # Parent of Géza von Habsburg
  {
    ?geza dbo:parent ?parent .
    VALUES ?geza { <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> }
  }

  UNION

  # Child of Archduke Joseph August of Austria
  {
    ?josephAugust dbo:child ?child .
    VALUES ?josephAugust { <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> }
  }
}
```",3,3,4,1,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
994,33,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and associated musical artist of S.A. Slayer.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artistFredrik ?artistSlayer
WHERE {
  # For Fredrik Thordendal
  dbr:Fredrik_Thordendal dbo:memberOf ?band1 .
  FILTER (dbo:Organization IN (rdf:type/rdf:first) && rdf:type/rdf:rest*/rdf:first = dbo:Band)
  
  OPTIONAL { ?band1 dbo:musicalArtist ?artistFredrik . }
  
  # For S.A. Slayer
  dbr:S._A._Slayer dbo:memberOf ?band2 .
  FILTER (dbo:Organization IN (rdf:type/rdf:first) && rdf:type/rdf:rest*/rdf:first = dbo:Band)
  
  OPTIONAL { ?band2 dbo:musicalArtist ?artistSlayer . }
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
184,47,test,"Give me the parent of the native of Budapest and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfNative ?finalEntity
WHERE {
  # Archduke Ladislaus Philipp of Austria
  dbr:Archduke_Ladislaus_Philipp_of_Austria dbo:parent ?ladislausParent .

  # Parent's child (grandchild of Archduke)
  ?ladislausParent dbo:child ?ladislausGrandChild .

  # Native of Budapest
  ?nativeOfBudapest dbo:nativePlace dbr:Budapest .
  
  # Parent of the native of Budapest
  ?nativeOfBudapest dbo:parent ?parentOfNative .

  # Child of the child of the parent (great-grandchild)
  ?parentOfNative dbo:child ?ladislausGreatGrandChild .

  # Final entity is a royalty
  ?ladislausGreatGrandChild rdf:type dbo:Royal .
  
  BIND(?ladislausGreatGrandChild AS ?finalEntity)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
617,60,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?childOfChild
WHERE {
  # Antiochus II Theos and his successor who is royalty
  ?antiochus dbo:successor ?successor .
  FILTER (strstarts(str(?antiochus), ""Antiochus II Theos"")).
  
  # Ensure the successor is royalty
  ?successor a dbo:Monarch .

  # Find the child of this successor who is also royalty
  ?successor dbo:child ?childOfSuccessor .
  FILTER (?childOfSuccessor a dbo:Monarch) .

  # Commander in Battle of Panium and their child
  ?commander dbo:participatedInBattle <http://dbpedia.org/resource/Battle_of_Panium> .
  ?commander dbo:child ?childOfCommander .

  # Find the parent of this child (which should be the commander)
  ?parent dbo:child ?childOfCommander .

  # The final result is the child of the successor's child who matches the above criteria
  ?childOfSuccessor dbo:child ?childOfChild .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
184,55,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent1 ?parent2 ?grandchildParent
WHERE {
  # Archduke Joseph Francis of Austria and his child's parent
  ?archdukeJosephFrancis a dbo:Archduke ;
                        foaf:surname ""Habsburg-Lorraine"" .
  
  ?childOfJosephFrancis dbo:child ?archdukeJosephFrancis .
  ?parent1 dbo:parent ?childOfJosephFrancis .

  # Native of Budapest and their parent
  ?nativeBudapest dbo:nativePlace dbr:Budapest ;
                  dbo:parent ?parent2 .

  # Archduke Joseph Karl of Austria, his child's child, and that grandchild's parent
  ?archdukeJosephKarl a dbo:Archduke ;
                     foaf:surname ""Habsburg-Lorraine"" .
  
  ?childOfJosephKarl dbo:child ?archdukeJosephKarl .
  ?grandchildOfJosephKarl dbo:child ?childOfJosephKarl .
  ?grandchildParent dbo:parent ?grandchildOfJosephKarl .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
92,37,test,"Give me the band of Joseph Michael and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band ?actorName ?artistName WHERE {
  # Find the band associated with Joseph Michael
  ?person foaf:name ""Joseph Michael"" .
  ?person dbo:memberOf ?band .

  OPTIONAL {
    # Find the actor of ""Return to Nuke 'Em High Volume 1""
    ?film dbr:Return_to_Nuke_'Em_High_Volume_1 ;
          dbo:starring ?actor .
    
    ?actor foaf:name ?actorName .
    
    # Check if this actor is also an artist by birth
    ?artist dbo:birthPlace ?place .
    ?artist foaf:name ?artistName .
    FILTER(?actor = ?artist)
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
528,69,test,"Give me the force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?forceOfNarcisoCampero ?warOfLaRinconadaDeAte ?militaryForceInChileEvent
WHERE {
  # Narciso Campero's birth name and force
  ?narcisoCampero a dbo:Person ;
                  foaf:name ""Narciso Campero"" ;
                  dbo:birthName ?birthName .
  OPTIONAL { ?narcisoCampero dbo:militaryRank ?militaryRank . }
  
  # Battle of La Rinconada de Ate
  ?battle dbr:Battle_of_La_Rinconada_de_Ate ;
          dbo:commander ?commander .
  ?commander dbo:rank ?rank .
  OPTIONAL { ?battle dbo:partOfWar ?warOfLaRinconadaDeAte . }
  
  # Societal event in Chile involving a military force
  ?event dbr:Societal_event_in_Chile ;
         dbo:militaryForce ?militaryForceInChileEvent .
}

```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
48,20,test,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash and band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorBand ?writerBand
WHERE {
  # Find a show with Stacey Dash and an actor who is also a musical artist
  ?show dbo:starring dbr:Stacey_Dash .
  ?show dbo:castMember ?actor .
  
  OPTIONAL { 
    ?actor dbo:musicArtist ?musicArtist .
    ?musicArtist dbo:bandName ?actorBand .
  }
  
  # Find works related to Shellback and their writers
  ?work dbo:producer dbr:Shellback .
  ?work dbo:writer ?writer .
  
  OPTIONAL {
    ?writer dbo:musicArtist ?musicArtistWriter .
    ?musicArtistWriter dbo:bandName ?writerBand .
  }
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
314,21,test,"Give me the awardee of 30 and commander in the profession, that is an event and a societal event, of Lisa Gavrić and person deceased at Madrid.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Awardee of 30
  ?award dbo:recipient ?person ;
         dbo:ageOfRecipient ""30""^^xsd:int .

  # Commander in profession
  ?person dbo:militaryRank dbr:Commander .

  # Event and societal event
  ?event dbo:participant ?person ;
         a (dbo:Event|dbo:SocietalEvent) .

  # Lisa Gavrić involvement
  ?event dbo:participant dbr:Lisa_Gavrić .

  # Person deceased at Madrid
  ?person dbo:deathPlace dbr:Madrid .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
161,50,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce ?event ?societalEvent ?conflict
WHERE {
  # Emilio Mola and his military force
  dbr:Emilio_Mola a dbo:MilitaryPerson ;
                  dbo:militaryCommanderOf ?militaryForce .

  # Event associated with the military force
  ?militaryForce dbo:event ?event .

  # Indalecio Prieto's predecessor
  OPTIONAL {
    ?predecessor dbo:successor dbr:Indalecio_Prieto .
    
    # Societal event and military conflict related to the predecessor
    ?predecessor dbo:societalEvent ?societalEvent ;
                dbo:militaryConflict ?conflict .
  }
}
```

This query aims to retrieve:
- The commander (Emilio Mola).
- His associated military force.
- Events linked to this military force.
- Societal events and military conflicts related to Indalecio Prieto's predecessor.",5,8,6,3,2,3,3,71,0,0,32,0,0.0,0
767,66,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of George K. Nash.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v6 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInAdministration ?settlementOfGreen ?alterEgo ?almaMater
WHERE {
  # Entity in the administration that is a settlement of Green
  ?entityInAdministration dbo:position ?position .
  ?person dbo:position ?position .
  ?person foaf:name ""Green"" .

  OPTIONAL {
    # Alter ego of Matthew Burland (fictional character)
    ?alterEgo dbo:creator dbr:Matthew_Burland .
    ?alterEgo a dbo:FictionalCharacter .
  }

  OPTIONAL {
    # Alma mater of George K. Nash
    ?nash dbo:almaMater ?almaMutter .
    ?almaMutter dbo:headOf ?entityInAdministration .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
182,21,test,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warJagathDias ?nationalityTamaraKunanayakam ?warMaheshSenanayake
WHERE {
  # Wars involving Jagath Dias
  ?person1 dbo:name ""Jagath Dias""@en .
  ?person1 dbo:wikiPageWikiLink ?warJagathDias .

  # Nationality of Tamara Kunanayakam
  ?person2 dbo:name ""Tamara Kunanayakam""@en .
  ?person2 dbo:nationality ?nationalityTamaraKunanayakam .

  # Wars involving Mahesh Senanayake
  ?person3 dbo:name ""Mahesh Senanayake""@en .
  ?person3 dbo:wikiPageWikiLink ?warMaheshSenanayake .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
92,71,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as the birth name of Joseph Michael.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v8 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musicalArtist WHERE {
  # Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?movie dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?movie dbo:actor ?actor .

  # Ensure this actor is a musical artist
  ?actor dbo:musicalArtist ?musicalArtist .

  # Find the band related to ""Nevermore (2006 film)""
  ?film dbo:title ""Nevermore (2006 film)""@en .
  ?band dbo:reference ?film .
  
  # Ensure the musical artist is a member of this band
  ?musicalArtist dbo:bandMember ?band .

  # Find Joseph Michael and his band
  ?person foaf:birthName ""Joseph Michael""@en .
  ?person dbo:musicalArtist ?band2 .

  # Link the bands to ensure consistency
  FILTER(?band = ?band2)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
92,30,test,Give me the band of the person born as Joseph Michael Furney and band member of Nevermore and associated musical artist of Jim Sheppard.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  # Identify Warrel Dane (Joseph Michael Furney)
  ?person a dbo:MusicalArtist ;
          foaf:name ""Warrel Dane"" ;
          dbo:birthName ""Joseph Michael Furney"" .

  # Find bands associated with Warrel Dane
  ?membership dbo:member ?person .
  ?membership dbo:musicalBand ?band .

  # Ensure the band is Nevermore or associated with Jim Sheppard
  OPTIONAL {
    ?band dbr:Nevermore .
  }
  
  OPTIONAL {
    ?association dbo:associatedMusicalArtist ?band ;
                 dbo:associatedMusicalArtist dbr:Jim_Sheppard .
  }

  FILTER EXISTS { ?membership dbo:musicalBand dbr:Nevermore } 
               || EXISTS { ?association dbo:associatedMusicalArtist dbr:Jim_Sheppard }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
55,21,test,"Give me the band member of Metallica and band member of Guns N' Roses and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?metallicaMember ?gunsNRosesMember WHERE {
  # Newsted as a member of Metallica
  dbr:Lars_Ulrich_Metallica dbo:bandMember dbr:James_Hetfield .
  dbr:Lars_Ulrich_Metallica dbo:bandMember dbr:Kirk_Hammett .
  dbr:Lars_Ulrich_Metallica dbo:bandMember dbr:Robert_Trujillo .
  dbr:Lars_Ulrich_Metallica dbo:bandMember dbr:James_Newsted .

  # Newsted as a member of Guns N' Roses
  dbr:Axl_Rose_Guns_N'_Roses dbo:bandMember dbr:Izzy_Stradlin .
  dbr:Axl_Rose_Guns_N'_Roses dbo:bandMember dbr:Duff_McKagan .
  dbr:Axl_Rose_Guns_N'_Roses dbo:bandMember dbr:Slash .
  dbr:Axl_Rose_Guns_N'_Roses dbo:bandMember dbr:Steven_Adler .
  dbr:Axl_Rose_Guns_N'_Roses dbo:bandMember dbr:Dizzy_Reed .
  dbr:Axl_Rose_Guns_N'_Roses dbo:bandMember dbr:Matt_Sorum .
  dbr:Axl_Rose_Guns_N'_Roses dbo:bandMember dbr:Richard_Freiberg .
  dbr:Axl_Rose_Guns_N'_Roses dbo:bandMember dbr:Gilby_Clark .
  dbr:Axl_Rose_Guns_N'_Roses dbo:bandMember dbr:Michael_“Mick”_Cohen .
  dbr:Axl_Rose_Guns_N'_Roses dbo:bandMember dbr:Jeff_Payne .
  dbr:Axl_Rose_Guns_N'_Roses dbo:bandMember dbr:Duff_McKagan .

  # Find other members of Metallica
  ?metallicaMember dbo:bandMember dbr:Lars_Ulrich_Metallica .
  FILTER(?metallicaMember != dbr:James_Newsted)

  # Find other members of Guns N' Roses
  ?gunsNRosesMember dbo:bandMember dbr:Axl_Rose_Guns_N'_Roses .
  FILTER(?gunsNRosesMember != dbr:James_Newsted)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
801,22,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?work dbo:writer ?writer .
  ?work rdfs:label ""40 Dayz & 40 Nightz""@en .

  ?writer dbo:associatedMusicalArtist ?artist .
  
  FILTER EXISTS { ?artist a dbo:MusicalArtist . }
  FILTER EXISTS { ?artist a dbo:Artist . }
}
```

This query does the following:
- Identifies the work ""40 Dayz & 40 Nightz"" and its writer.
- Finds an associated musical artist who is also classified as an artist.",3,5,4,2,2,3,3,71,0,0,22,0,0.0,0
391,46,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find Michael Ballhaus's notable works (films he directed or cinematographed)
  ?work dbo:director dbr:Michael_Ballhaus .
  OPTIONAL { ?work dbo:cinematographer dbr:Michael_Ballhaus . }
  
  # Get actors involved in these works
  ?work dbo:starring ?actor .

  # Ensure the work is related to Jackson, Tennessee (Soul Music Capital of the World)
  ?work dbp:setInLocation dbr:Jackson,_Tennessee .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
378,55,test,Give me the war of the commander in Peninsular War and war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?peninsularWarCommander ?warOfCarlPontusGahn ?claimToFameInGibraltar
WHERE {
  # Find the commander in the Peninsular War
  ?peninsularWarCommander dbo:nationality dbr:United_Kingdom ;
                         dbo:occupation dbr:Military_person ;
                         dbo:participatedIn dbr:Peninsular_War .

  # Find Carl Pontus Gahn and his associated war
  ?carlPontusGahn a dbo:Chemist ;
                  foaf:name ""Carl Pontus Gahn"" ;
                  dbo:birthPlace ?birthPlace .
  OPTIONAL {
    ?warOfCarlPontusGahn dbo:participatedIn ?carlPontusGahn .
  }

  # Find the claim to fame of the commander during the Great Siege of Gibraltar
  ?gibraltarCommander a dbo:Military_person ;
                     dbo:participatedIn dbr:Great_Siege_of_Gibraltar ;
                     dbo:famousFor ?claimToFameInGibraltar .

  # Assuming the same person is involved in both contexts
  FILTER (?peninsularWarCommander = ?gibraltarCommander)
}
```",6,6,7,2,3,3,3,71,0,0,2,0,0.0,0
55,26,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of Metallica and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?metallicaBand ?newstedBand
WHERE {
  # Find the producer of ""Used to Love Her"" who is also a band
  ?producer dbo:produced dbr:Used_to_Love_Her .
  ?producer a dbo:Band .

  # Find members of this band
  ?bandMember dbo:memberOf ?producer .

  # Check if they are also members of Metallica
  OPTIONAL {
    ?metallicaBand a dbo:Band ;
                   rdfs:label ""Metallica""@en .
    ?bandMember dbo:memberOf ?metallicaBand .
  }

  # Find the band associated with Newsted
  ?newsted dbr:Lars_Ulrich_Metallica ; # Assuming Lars Ulrich is used as reference for Metallica
            dbo:memberOf ?newstedBand .

  FILTER (lang(?bandMember) = 'en' && lang(?metallicaBand) = 'en' && lang(?newstedBand) = 'en')
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
161,39,test,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Identify the event of the Spanish Civil War
  dbr:Spanish_Civil_War a dbo:MilitaryConflict .

  # Find military forces involved in the Spanish Civil War
  ?militaryForce dbo:partOf dbr:Spanish_Civil_War .
  
  # Identify ""El Director"" and find his role as commander
  ?figure rdfs:label ""El Director""@en .
  ?figure dbo:commanderOf ?militaryForce .

  # Get the name of the commander
  ?commander rdfs:label ?commanderLabel .
  ?commander dbo:alias ?figure .
}
```",4,5,5,3,2,3,3,71,0,0,32,0,0.0,0
959,63,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of Yōichi Masuzoe.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?almaMater WHERE {
  # Takashi Sekizuka's team manager
  ?teamManager dbo:player ?takashiSekizuka .
  ?takashiSekizuka dbr:Takashi_Sekizuka .

  # Manager's alma mater details
  ?manager dbo:almaMater ?almaMater ;
           dbo:birthDate ?birthDate ;
           dbp:nationality ""Japanese""^^xsd:string .
  
  FILTER(YEAR(?birthDate) = 1958)

  # Yōichi Masuzoe's birth country
  ?yoiichiMasuzoe dbo:birthPlace ?birthCountry .
  ?yoiichiMasuzoe dbr:Yōichi_Masuzoe .

  # Manager's nationality matches Yōichi Masuzoe's birth country
  ?manager dbp:nationality ?nationality .
  FILTER(?nationality = ?birthCountry)

  # Alma mater must be a Japanese organization, university, and educational institution
  ?almaMater dbo:country dbr:Japan ;
             rdf:type dbo:Organisation ;
             rdf:type dbo:EducationalInstitution ;
             rdf:type dbo:University .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
959,49,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?managerOfTheTeam ?almaMater
WHERE {
  # Eiji Ōtsuka's role as a sports manager for Kashima Antlers in 1998
  dbr:Eiji_Ōtsuka dbo:sportManager dbr:Kashima_Antlers .
  dbr:Kashima_Antlers dbp:season ""1998"" .

  # The team managed by Eiji Ōtsuka's sports manager role
  ?team dbo:manager ?sportsManager .
  FILTER (?sportsManager = dbr:Eiji_Ōtsuka) .

  # Manager of the team managed by Eiji Ōtsuka
  ?team dbo:manager ?managerOfTheTeam .

  # Alma mater details for Eiji Ōtsuka
  dbr:Eiji_Ōtsuka dbo:almaMater ?almaMater .
  FILTER (
    ?almaMater rdf:type dbp:University &&
    ?almaMater rdf:type dbp:Organization &&
    ?almaMater rdf:type dbp:EducationalInstitution &&
    ?almaMater dbo:country dbr:Japan
  )
}
```",5,10,6,3,2,3,3,71,0,0,2,0,0.0,0
391,32,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as Hub City.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName WHERE {
  # Michael Ballhaus's works
  ?work dbo:director dbr:Michael_Ballhaus .
  
  # Actors in these works
  ?work dbo:starring ?actor .

  # Actor's place of birth is Cincinnati, Ohio (Hub City)
  ?actor dbp:birthPlace dbr:Cincinnati,_Ohio .

  # Get the actor's name
  ?actor rdfs:label ?actorName .
  
  FILTER(LANG(?actorName) = 'en')
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
54,62,test,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?result
WHERE {
  # Find predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?ameitta dbo:predecessor ?predecessor .

  # Find parent of the child of the parent of Thado Minsaw of Prome
  ?thadoMinsaw dbo:parent ?grandParent .
  ?grandChild dbo:childOf ?grandParent .
  ?parentOfGrandChild dbo:parent ?grandChild .

  # Find child of the father of the child of Thinkhaya of Pagan
  ?thinkhaya dbo:child ?childOfThinkhaya .
  ?fatherOfChild dbo:father ?childOfThinkhaya .
  ?childOfFather dbo:child ?fatherOfChild .

  # Match the result with the predecessor and other conditions
  FILTER (?predecessor = ?parentOfGrandChild && ?parentOfGrandChild = ?childOfFather)
  
  BIND(?predecessor AS ?result)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
488,49,test,"Give me the birth place of the commander in Boshin War and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderBirthPlace ?royalFatherAdministration
WHERE {
  # Find the commander in the Boshin War
  ?commander dbo:nationality dbr:Japan ;
            dbo:occupation dbr:Military_person ;
            dbo:birthPlace ?commanderBirthPlace .

  # Tokugawa Masako's spouse and their father
  dbr:Tokugawa_Masako dbo:spouse ?spouse .
  ?spouse dbo:father ?royalFather .

  # Ensure the father is royalty
  ?royalFather a dbo:Monarch ;
               dbo:countryAdministered ?administration .

}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
747,71,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v7 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?athlete ?athleteBand ?shenaBand ?writerBand
WHERE {
  # Find the decedent's birth date
  ?decedent dbo:dateOfBirth ?birthDate .

  # Find an athlete and soccer player born on the same date as the decedent in Zolotonosha
  ?athlete dbo:birthPlace dbr:Zolotonosha ;
           dbo:dateOfBirth ?birthDate ;
           a dbo:Athlete, dbo:SoccerPlayer .
  
  # Get the band of this athlete
  OPTIONAL { ?athlete dbp:band ?athleteBand . }

  # Find Shèna's birth date and their band
  dbr:Shèna dbo:dateOfBirth ?shenaBirthDate ;
            dbp:band ?shenaBand .

  # Find Amba Shepherd's song and its writer
  ?song dbo:writer ?writer ;
        a dbo:Song .
  
  FILTER (str(?song) = ""Amba Shepherd"") .

  # Get the band of this writer
  OPTIONAL { ?writer dbp:band ?writerBand . }
}",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
492,63,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/author> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Frédéric-Georges Herr's involvement in a military conflict
  ?conflict dbo:participant dbr:Frédéric-Georges_Herr .
  
  # Commander of the military conflict
  ?conflict dbo:commander ?commander .

  # Person deceased at the capital of Algeria (Algiers)
  ?commander dbp:placeOfDeath dbr:Algiers .
  
  # Person deceased related to the author of ""French Algeria""
  ?author dbr:French_Algeria .
  ?commander dbo:deathPlace ?workRelatedToAuthor .

  FILTER (?workRelatedToAuthor = ?author)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
617,68,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
    # Step 1: Identify Antiochus (son of Antiochus III the Great)
    ?antiochus3 a dbo:Monarch ;
                dbo:child ?antiochus4 .

    # Step 2: Find child of Antiochus IV (Antiochus, son of Antiochus III)
    ?antiochus4 dbo:child ?grandchild .

    # Step 3: Parent of that child
    ?parent dbo:child ?grandchild ;
            a dbo:Monarch .

    # Step 4: Child of the child (great-grandchild) who is royalty
    ?grandchild dbo:child ?greatGrandchild .
    FILTER (?greatGrandchild a dbo:Monarch)

    # Step 5: Successor of Antiochus II Theos and their royal children
    ?antiochus2 a dbo:Monarch ;
                rdfs:label ""Antiochus II Theos""@en .

    ?successor dbo:succeededBy ?antiochus2 ;
               a dbo:Monarch .
    
    # Step 6: Child of the successor who is royalty
    ?successorChild dbo:child ?royalSuccessorChild ;
                    a dbo:Monarch .

    # Step 7: Spouse of the royal child from step 6
    ?royalSuccessorChild dbo:spouse ?spouse .
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
981,19,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in the region of Time in Indonesia.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:BeautyQueen ;
          dbo:authorOf dbr:Kamikaze_Girls ;
          dbo:birthPlace ?birthPlace .
  
  ?person dbo:region dbr:Time_Region_in_Indonesia .

}
```",5,6,6,3,2,3,2,20,0,0,19,0,0.0,0
378,60,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the person born as the birth name of Carl Pontus Gahn.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?triggeClaimToFame ?warName
WHERE {
  # Find the war involving Carl Pontus Gahn
  ?gahn a dbo:Person ;
        foaf:name ""Carl Pontus Gahn"" .
  
  # Identify the war related to Thomas Trigge
  ?trigge a dbo:MilitaryPerson ;
          foaf:name ""Thomas Trigge"" ;
          dbo:commanded ?war .

  # Link the war to Carl Pontus Gahn
  ?war dbo:participant ?gahn .
  
  # Get the claim to fame of Thomas Trigge in this war
  ?trigge dbo:claimToFame ?triggeClaimToFame .

  # Retrieve the name of the war
  ?war rdfs:label ?warName .
}
ORDER BY ?warName",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
9,33,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterMedals ?almaMaterAlderdice
WHERE {
  # Find alma mater of awardees of Royal Medals
  ?medalAward a dbo:Award ;
              dbo:recipient ?recipient .
  ?recipient dbo:almaMater ?almaMaterMedals .

  FILTER regex(str(?medalAward), ""Royal Medal"", ""i"")

  # Find alma mater of John Alderdice, Baron Alderdice
  dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMaterAlderdice .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
981,18,test,"Give me the birth place of the person born, that is a beauty queen, as  and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/birthName> """"@en . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:BeautyQueen .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:North_Sumatra .
  FILTER(CONTAINS(LCASE(?birthPlace), ""salak""))
}
```",5,6,6,3,2,3,2,20,0,0,19,0,0.0,0
54,49,test,"Give me the child of the father of Soe Min Wimala Dewi and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v1 <http://dbpedia.org/property/father> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfFather ?predecessor
WHERE {
  ?soeMinWimalaDewi dbo:father ?father .
  ?father dbo:child ?childOfFather .

  ?childOfFather dbo:predecessor ?predecessor .

  ?thihapate dbp:title ""Thihapate of Mohnyin"" ;
             dbo:officeHolder ?officeHolder ;
             dbo:royalty ?royalty .

  FILTER (?officeHolder = ?predecessor && ?royalty = ?predecessor)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
161,48,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  # Emilio Mola and his association with Francoist Spain
  dbr:Emilio_Mola dbo:commanderIn ?force .
  
  # The force is an event, a military conflict, and related to societal events
  ?force rdf:type dbo:MilitaryConflict ;
         rdf:type dbo:Event ;
         dbo:partOf ?societalEvent .

  # Societal event should be related to Francoist Spain
  ?societalEvent dbo:place dbr:Francoist_Spain .
}
```",5,9,6,3,2,3,3,71,0,0,34,0,0.0,0
303,27,test,"Give me the party of Guillermo Endara and party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyEndara ?partyAriasMadrid ?country
WHERE {
  # Guillermo Endara's political party
  dbr:Guillermo_Endara dbo:politicalParty ?partyEndara .

  # Arnulfo Arias Madrid's political party
  dbr:Arnulfo_Arias_Madrid dbo:politicalParty ?partyAriasMadrid .

  # El Valle de Antón is in Panama
  dbr:El_Valle_de_Antón dbo:country dbr:Panama .
  BIND(dbr:Panama AS ?country)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
488,45,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of Enomoto Takeaki and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?administration ?birthPlace ?deathPlace
WHERE {
  # Tokugawa Masako's spouse
  ?spouse dbo:spouse ?masako .
  
  # Spouse of Tokugawa Masako
  ?masako rdfs:label ""Tokugawa Masako""@en .

  # Father of the spouse (who is royalty)
  ?father dbo:child ?spouse .
  ?father a dbo:Monarch .  # Assuming Monarch as a proxy for royalty

  # Administration of the father
  ?father dbo:administration ?administration .

  # Enomoto Takeaki's birthplace
  ?enomoto dbo:birthPlace ?birthPlace .
  ?enomoto rdfs:label ""Enomoto Takeaki""@en .

  # Tokugawa Ieyasu's death place
  ?ieyasu dbo:deathPlace ?deathPlace .
  ?ieyasu rdfs:label ""Tokugawa Ieyasu""@en .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
281,61,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war ?profession ?militaryUnit ?birthPlaceCountry
WHERE {
  ?war dbo:partOfMilitaryConflict ?conflict .
  
  ?profession dbo:relatedToMilitaryUnit ?militaryUnit ;
              a dbo:OfficeHolder ;
              dbo:isPolitician true .

  ?politician dbo:holdsPosition ?profession ;
              dbo:militaryService ?militaryUnit ;
              dbp:nationality dbr:New_Zealand .
  
  ?leader dbo:leaderOfElectionEvent ?electionEvent ;
          dbo:birthPlace ?birthPlace .
  
  ?birthPlace a dbo:Country .

  FILTER (?electionEvent = dbr:1962_New_South_Wales_state_election)

}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
421,23,test,Give me the person born as the birth name of Dino Merlin and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?bandMember WHERE {
  # Find Dino Merlin's birth name
  dbr:Dino_Merlin dbo:birthName ?birthName .
  
  # Find a band member of an awardee (assuming awards are linked to entities)
  ?awardee dbo:award ?award .
  ?bandMember dbo:member ?awardee .
  
  # Link the person with the birth name to the band member
  ?person dbo:birthName ?birthName .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
801,19,test,Give me the producer of Westside Story (song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?profession 
WHERE {
  # Find the producer of ""Westside Story (song)""
  dbr:Westside_Story_(song) dbo:producer ?producer .

  # Find the profession associated with The Shadow's alter ego
  OPTIONAL { 
    dbr:The_Shadow dbo:alterEgo ?alterEgo .
    ?alterEgo dbo:profession ?profession .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
994,44,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?meshuggahArtist
WHERE {
  # Find Donald Maynard Dokken's band and its members
  dbr:Don_Dokken a dbo:MusicalArtist ;
                 dbo:memberOfBand ?dokkenBand .
  
  ?dokkenBand dbo:bandMember ?bandMember .
  FILTER (?bandMember != dbr:Don_Dokken) # Exclude Dokken himself
  
  OPTIONAL {
    ?bandMember dbo:associatedMusicalArtist ?associatedArtist .
  }
  
  # Find Meshuggah's associated musical artists
  dbr:Meshuggah a dbo:Band ;
                dbo:bandMember ?meshuggahMember .
  
  OPTIONAL {
    ?meshuggahMember dbo:associatedMusicalArtist ?meshuggahArtist .
  }

  # Filter for S.A. Slayer as an associated artist
  FILTER (?associatedArtist = dbr:S_A_Slayer || ?meshuggahArtist = dbr:S_A_Slayer)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
232,36,test,"Give me the child of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  # Jon Pertwee's child
  ?person dbo:parent dbr:Jon_Pertwee .
  
  # The person is a native of a settlement that is British
  ?person dbo:nationality dbr:United_Kingdom ;
          dbp:birthPlace ?settlement .
  FILTER (dbo:Settlement ?settlement)
  
  # This person is also a politician and office holder in France
  ?person dbo:occupation dbr:Politician ;
          dbo:officeHolderOf dbr:France .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
404,64,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childName ?parentName
WHERE {
  # Princess Victoria Louise of Prussia and her spouse
  ?princess a dbo:Princess ;
            foaf:name ""Victoria Louise, Princess Royal""@en .
  
  ?spouse dbo:spouse ?princess .

  # Father of the spouse
  ?father dbo:child ?spouse .

  # Child of the father who is also a spouse of royalty and parent of Prince Ernest Augustus
  ?child dbo:parent ?father ;
         dbo:spouse ?royaltyPerson ;
         dbo:child ?princeErnestAugustus .
  
  ?princeErnestAugustus foaf:name ""Prince Ernest Augustus of Hanover""@en ;
                        dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1914)

  # Ensure the spouse is royalty
  ?royaltyPerson a dbo:Royal .

  # Get names
  ?child foaf:name ?childName .
  ?father foaf:name ?parentName .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,36,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName WHERE {
  ?person dbo:nativePlace dbr:Compton,_California .
  ?movie a dbo:Film ;
         a dbo:CreativeWork ;
         a dbo:TelevisionShow .
  ?person dbo:spouseOrPartner ?movie .
  ?person rdfs:label ?actorName .
  FILTER (LANG(?actorName) = ""en"")
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
9,55,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Awardee of Royal Medal
  ?person dbo:awardReceived dbr:Royal_Medal .
  
  # Figure known as the nickname of Queen's University Belfast
  ?figure rdfs:label ""Queen's University Belfast""@en ;
          dbo:nickname ?nickname .
  FILTER(?figure = ?person)
  
  # Alma mater of the mayor, that is a politician, of Northern Ireland Forum
  ?mayor dbo:almaMater ?almaMater ;
         dbo:occupation dbr:Politician ;
         dbo:memberOf dbr:Northern_Ireland_Forum .
  
  FILTER(?person = ?figure || ?person = ?mayor)
  
  # Ensure the alma mater is common
  ?person dbo:almaMater ?almaMater .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
328,40,test,Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson .
  ?person foaf:name ?name .

  # Commander in Eastern Front (World War II)
  ?person dbo:commanderOf dbr:Eastern_Front_(World_War_II) .

  # Leader of People's Commissariat of Defense
  ?person dbo:headOf dbr:People%27s_Commissariat_of_Defence_of_the_Soviet_Union .

  # Awardee in Volcano and Ryukyu Islands campaign
  ?person dbo:recipient dbr:Award_for_Volcano_and_Ryukyu_Islands_campaign .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
626,16,test,"Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?award ?conflict WHERE {
  # Find awards associated with Aleksey Petrovich Yermolov
  ?yermolovAward dbo:recipient dbr:Aleksey_Petrovich_Yermolov .
  
  # Get the awardee of that award (Yermolov himself)
  ?awardee dbo:award ?yermolovAward .

  # Find military conflicts involving Alexander I
  ?conflict dbo:commander dbr:Alexander_I_of_Russia .

  # Check if Yermolov was a commander in the same conflict
  OPTIONAL { ?yermolovRole dbo:role ""Commander"" .
             ?yermolovRole dbo:involves ?conflict .
             ?yermolovRole dbo:agent dbr:Aleksey_Petrovich_Yermolov }
}
```",4,5,5,2,2,3,2,20,0,0,21,0,0.0,0
465,8,test,"Give me the death place of Jiřina Štěpničková and administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?politicalParty ?organization
WHERE {
  # Jiřina Štěpničková's death place
  dbr:Ji%C5%99ina_%C5%A0t%C4%9Bpnickov%C3%A1 dbo:deathPlace ?deathPlace .

  # Leader of the Chamber of Deputies of the Czech Republic
  OPTIONAL {
    dbr:Czech_Parliament_Chamber_of_Deputies dbo:leader ?leader .
    
    # Political party and organization associated with the leader
    ?leader dbo:memberOfPoliticalParty ?politicalParty ;
            dbo:worksForOrganization ?organization .
  }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
488,65,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceOfGrandfather ?administrationOfEmperorsFather ?birthPlaceOfCommander
WHERE {
  # Matsudaira Tadamasa's father who was an office holder
  ?matsudairaTadamasa a dbo:Person ;
                     foaf:parent ?officeHolderFather .

  # Office holder's father (politician) and his death place
  ?officeHolderFather foaf:parent ?grandfather ;
                      dbo:occupation dbr:Politician .
  ?deathPlaceOfGrandfather dbo:deathPlace ?grandfather .

  # Emperor Go-Mizunoo's father and his administration
  dbr:Emperor_Go-Mizunoo foaf:parent ?emperorsFather .
  ?administrationOfEmperorsFather dbo:officeHolder ?emperorsFather .

  # Commander in Boshin War and birth place
  ?commanderInBoshinWar a dbo:Person ;
                       dbo:occupation dbr:Boshin_War_commander .
  ?birthPlaceOfCommander dbo:birthPlace ?commanderInBoshinWar .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
488,68,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?administrationPlace ?deathPlace
WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .

  # War in which Saitō Hajime was a commander
  ?war dbo:type/dbo:subClassOf* (dbr:Military_Conflict ; dbr:Event ; dbr:Societal_Event) .
  ?war dbo:commander ?saitoHajime .
  
  # Administration place of Emperor Go-Mizunoo
  dbr:Emperor_Go-Mizunoo dbo:administrationPlace ?administrationPlace .

  # Death place of Matsudaira Tadamasa's grandfather (a politician and office holder)
  dbr:Matsudaira_Tadamasa dbo:father ?grandfather .
  ?grandfather a dbo:Politician ;
              a dbo:OfficeHolder .
  ?grandfather dbo:deathPlace ?deathPlace .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
184,57,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Géza von Habsburg and parent of the child of Archduke Joseph Francis of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Archduke Ladislaus Philipp of Austria's parent
  ?ladislausParent dbo:child ?ladislaus .
  VALUES ?ladislaus { <http://dbpedia.org/resource/Ladislaus_Philipp_of_Austria> }

  # Child of the parent (sibling or another child)
  ?parentChild dbo:child ?ladislausParent .

  # Ensure this person is royalty
  ?person dbo:royalty ?parentChild .
  
  # This person must be a parent to Géza von Habsburg
  ?gezaParent dbo:child <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
  FILTER (?person = ?gezaParent)

  # This person must also be a parent of the child of Archduke Joseph Francis
  ?josephChild dbo:child <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  ?parentOfJosephChild dbo:child ?josephChild .
  FILTER (?person = ?parentOfJosephChild)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
488,50,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?administration
WHERE {
  # Matsudaira Tadamasa and his lineage
  dbr:Matsudaira_Tadamasa dbo:father ?father .
  ?father dbo:father ?grandfather .

  # Grandfather is an office holder
  ?grandfather a dbo:OfficeHolder .

  # Great-grandfather is a politician
  ?greatGrandfather dbo:father ?grandfather .
  ?greatGrandfather a dbo:Politician .

  # Death place of the great-grandfather (politician)
  ?greatGrandfather dbo:deathPlace ?deathPlace .

  # Administration under which the father of Emperor Go-Mizunoo served
  dbr:Emperor_Go-Mizunoo dbo:father ?goMizunooFather .
  ?goMizunooFather dbo:officeHolderOf ?administration .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,56,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of Giulio Andreotti and reference to the name of Italian People's Party (1994).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthNameProdi ?partyAndreotti ?italianPeopleParty
WHERE {
  # Romano Prodi's birth name and party
  dbr:Romano_Prodi dbo:birthName ?birthNameProdi .
  
  OPTIONAL {
    ?prodiOfficeHolder a dbo:PublicBody ;
                      dbo:member ?prodiPerson .
    ?prodiPerson dbp:name ""Romano Prodi"" ;
                 dbo:partyAffiliation ?partyProdi .
    FILTER(?partyProdi != dbr:Italian_People's_Party_(1994)) # Exclude the specific party
  }
  
  # Giulio Andreotti's party
  ?andreottiOfficeHolder a dbo:PublicBody ;
                        dbo:member dbr:Giulio_Andreotti .
  ?andreottiPartyAffiliation dbo:partyMember dbr:Giulio_Andreotti .
  ?andreottiPartyAffiliation dbp:name ?partyAndreotti .

  # Italian People's Party (1994)
  dbr:Italian_People's_Party_(1994) a dbo:PoliticalParty ;
                                  dbp:name ?italianPeopleParty .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
232,66,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v6 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?nativeOfResidence
WHERE {
  # Sean Pertwee's notable works
  dbr:Sean_Pertwee dbo:claimToFame ?work .
  
  # Works are films or military conflicts
  VALUES ?workType { dbo:Film dbo:MilitaryConflict }
  ?work rdf:type ?workType .

  # Politician from France who is an office holder
  ?politician a dbo:Politician ;
              dbo:nationality dbr:France ;
              dbo:officeHolder true ;
              foaf:based_near ?residence .
  
  # Residence is a British settlement
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Native of the residence
  ?nativeOfResidence dbo:nativePlace ?residence .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
378,64,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?war ?claimToFame
WHERE {
  # Thomas Trigge's claim to fame in a war
  ?trigge dbo:birthName ""Thomas Trigge""@en .
  ?trigge dbo:commanderInWar ?war1 .
  ?trigge dbo:knownFor ?claim1 .

  # Joaquín Blake's war
  ?blake dbo:birthName ""Joaquín Blake""@en .
  ?blake dbo:commanderInWar ?war2 .

  # Carl Pontus Gahn's birth name and his associated war
  ?gahn dbo:birthName ""Carl Pontus Gahn""@en .
  ?gahn dbo:commanderInWar ?war3 .

  # Ensure wars are military conflicts and societal events
  ?war1 rdf:type dbo:MilitaryConflict ;
        rdf:type dbo:SocietalEvent .
  ?war2 rdf:type dbo:MilitaryConflict ;
        rdf:type dbo:SocietalEvent .
  ?war3 rdf:type dbo:MilitaryConflict ;
        rdf:type dbo:SocietalEvent .

  # Bind results
  BIND(?trigge AS ?commander)
  BIND(CONCAT(""Thomas Trigge's claim to fame in "", ?war1) AS ?claimToFame)

  OPTIONAL {
    BIND(?blake AS ?commander)
    BIND(CONCAT(""Joaquín Blake's war: "", ?war2) AS ?claimToFame)
  }

  OPTIONAL {
    BIND(?gahn AS ?commander)
    BIND(CONCAT(""Carl Pontus Gahn's claim to fame in "", ?war3) AS ?claimToFame)
  }
}
ORDER BY ?commander
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
9,48,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of Queen's University Belfast.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater ?nickname
WHERE {
  # Find the organization in Belfast
  ?organization a dbo:Organization ;
                dbo:location dbr:Belfast .

  # Identify the mayor of this organization who is also a politician
  ?mayor dbo:positionHeld ?organizationPosition ;
         dbo:officeHolderOf ?organization ;
         rdf:type dbo:Politician .
  
  FILTER(?organizationPosition = dbp:mayor)

  # Get the alma mater of the mayor if they are a politician
  OPTIONAL {
    ?mayor dbo:almaMater ?almaMater .
  }

  # Find the nickname of Queen's University Belfast
  dbr:Queen's_University_Belfast dbo:nickname ?nickname .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
528,54,test,Give me the war of the military force of Battle of Pisagua and war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleForce ?war ?commanderWar
WHERE {
    # Find military force involved in Battle of Pisagua
    dbr:Battle_of_Pisagua dbo:militaryUnit ?battleForce .

    # Find wars associated with Narciso Campero as a commander
    OPTIONAL {
        ?narcisoCampero dbo:occupation ""Military"" .
        ?narcisoCampero dbo:commanded ?war .
        FILTER EXISTS { ?work dbo:creator ?narcisoCampero . ?work dbo:dateCreated ?date . FILTER (?date > ""1901-01-09""^^xsd:date) }
    }

    # Bind Narciso Campero to the variable
    BIND(dbr:Narciso_Campero AS ?commander)
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
161,46,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForceFranciscoLargoCaballero ?militaryForceFrancoistSpain
WHERE {
  # Military force of Francisco Largo Caballero in a societal event and military conflict
  ?conflict1 dbo:militaryForce ?militaryForceFranciscoLargoCaballero .
  ?conflict1 dbo:participant dbr:Francisco_Largo_Caballero .
  ?conflict1 rdf:type dbo:SocietalEvent ;
             rdf:type dbo:MilitaryConflict .

  # Military force of the person decedent at Francoist Spain in a societal event and military conflict
  ?conflict2 dbo:militaryForce ?militaryForceFrancoistSpain .
  ?conflict2 dbo:participant ?personDecedent .
  ?personDecedent dbo:placeOfBirth dbr:Francoist_Spain .
  ?conflict2 rdf:type dbo:SocietalEvent ;
             rdf:type dbo:MilitaryConflict .

}
```",5,10,6,3,2,3,3,71,0,0,514,0,0.0,0
184,25,test,Give me the child of Archduke Joseph August of Austria and parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfJosephAugust ?parentOfChildOfJosephFrancis
WHERE {
  # Find the child of Archduke Joseph August
  ?childOfJosephAugust dbo:father dbr:Archduke_Joseph_August_of_Austria .
  
  # Find the child of Archduke Joseph Francis
  ?childOfJosephFrancis dbo:father dbr:Archduke_Joseph_Francis_of_Austria .

  # Find the parent of the child of Archduke Joseph Francis
  ?parentOfChildOfJosephFrancis dbo:child ?childOfJosephFrancis .
  
  # Ensure that we are looking for a common entity between these two relationships
  FILTER (?childOfJosephAugust = ?parentOfChildOfJosephFrancis)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,67,test,"Give me the commander in German campaign of 1813 and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryForce WHERE {
  # German campaign of 1813
  ?campaign dbo:year ""1813""^^xsd:gYear ;
            a dbo:MilitaryConflict ;
            dbo:location dbr:Germany .

  # Commander in the campaign
  ?campaign dbo:commander ?commander .

  # Military force associated with the commander
  ?commander dbo:militaryForce ?militaryForce .

  # Societal event and military conflict related to Rutger Jan Schimmelpenninck
  ?event a dbo:SocietalEvent, dbo:MilitaryConflict ;
         dbo:reference dbr:Rutger_Jan_Schimmelpenninck .

  # War involving 'Polish Horse'
  ?war a dbo:MilitaryConflict ;
       dbo:commander ?commander .
  
  ?figure dbr:Polish_Horse ;
         a (dbo:MilitaryUnit|dbo:Organization) ;
         dbo:partOf ?war .

  FILTER(?campaign = ?event || ?campaign = ?war)
}
```",7,14,8,3,3,3,3,71,0,0,7,0,0.0,0
16,57,test,Give me the spouse of Ted McGinley and person born as the birth name of Gigi Rice and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?personWithBirthName ?professional 
WHERE {
  # Spouse of Ted McGinley
  dbr:Ted_McGinley dbo:spouse ?spouse .

  # Person born as the birth name of Gigi Rice
  dbr:Gigi_Rice dbo:birthName ?birthName .
  ?personWithBirthName dbo:birthName ?birthName .

  # Professional in the profession of the actor of Unnatural (TV series)
  {
    SELECT DISTINCT ?profession 
    WHERE { 
      ?actor dbo:role <http://dbpedia.org/resource/Unnatural_(TV_series)> ;
             a dbo:Actor .
      ?actor dbo:occupation ?profession .
    }
  } AS ?subquery
  ?professional dbo:occupation ?subquery .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
492,56,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in Franco-Hova Wars.","SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?decedent
WHERE {
  # Find the capital of Khemis Miliana District
  ?district a dbo:District ;
            dbo:capital ?capital .
  FILTER (str(?district) = ""Khemis_Miliana_District"") .

  # Decedent at the capital
  ?deathEvent dbo:place ?capital ;
              dbo:agent ?decedent1 .
  
  # Joseph C. Satterthwaite's work
  dbr:Joseph_C._Satterthwaite dbo:occupation ""US_Assistant_Secretary_of_State_for_African_Affairs"" ;
                              dbo:deathEvent ?deathEvent2 .
  ?deathEvent2 dbo:agent ?decedent2 .

  # Commander in Franco-Hova Wars
  ?war a dbo:MilitaryConflict ;
       dbo:commander ?decedent3 .
  FILTER (str(?war) = ""Franco-Hova_Wars"") .

  # Ensure all decedents are the same person
  FILTER (?decedent1 = ?decedent2 && ?decedent2 = ?decedent3)
  BIND(?decedent1 AS ?decedent)
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,18,test,"Give me the landmark at elevation of the award of Nie Rongzhen and birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark WHERE {
  # Nie Rongzhen's award
  dbr:Nie_Rongzhen dbo:honoraryTitle ?award .
  
  # Elevation of the award location
  ?awardLocation a dbo:Place ;
                 dbp:elevation ?elevationAward .

  # Birthplace of a member of The Boils
  ?member dbo:nationality dbr:The_Boils ;
          dbp:birthPlace ?birthPlace .
  
  # Elevation of the birthplace
  ?birthPlaceLocation a dbo:Place ;
                      dbp:elevation ?elevationBirth .

  # Landmark at the same elevation as both locations
  ?landmark a dbo:Organisation, dbo:Group, dbo:Band ;
            dbp:elevation ?elevationLandmark .
  
  FILTER (?elevationAward = ?elevationLandmark && ?elevationBirth = ?elevationLandmark)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
328,49,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader
WHERE {
  # Find the office holder who is a politician associated with Gustav Jonson
  ?politician dbo:officeHolderOf ?gustavJonson .
  ?gustavJonson foaf:name ""Gustav Jonson"" .

  # Ensure this politician has an office that is a government agency
  ?politician dbo:positionHeld ?office .
  ?office rdf:type dbo:GovernmentAgency .

  # Find the leader of this government agency
  ?leader dbo:headOf ?office .

  # Link Bruce Fraser as an awardee
  dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape dbo:awardRecipient ?awarded .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
778,20,test,"Give me the entity in the award of the awardee, that is American, of Wolf Prize in Medicine and author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v5 <http://dbpedia.org/property/author> ?v4 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v5 <http://dbpedia.org/ontology/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity
WHERE {
  ?entity dbo:award dbr:Wolf_Prize_in_Medicine .
  ?entity dbo:nationality dbr:United_States .
  
  ?software dbo:author ?entity .
  ?software rdf:type dbo:Software .
  ?software dbp:title ?title .
  
  FILTER (CONTAINS(LCASE(?title), ""pushd"") || CONTAINS(LCASE(?title), ""popd""))
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
427,65,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v6 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fatherParty ?prodiParty ?italianPeoplePartyName
WHERE {
  # Find an alumnus of MIT and their father
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus foaf:parent ?father .

  # Get the political party of the father
  ?father dbo:partyAffiliation ?fatherParty .

  # Find Romano Antonio Prodi's details
  dbr:Romano_Antonio_Prodi dbo:birthPlace ?prodiBirthPlace .
  dbr:Romano_Antonio_Prodi dbo:officeHolder ?prodiOffice .
  dbr:Romano_Antonio_Prodi dbo:partyAffiliation ?prodiParty .

  # Reference the Italian People's Party (1994)
  dbr:Italian_People%27s_Party_(1994) foaf:name ?italianPeoplePartyName .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
161,53,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of Spanish Civil War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?force ?event
WHERE {
  # Emilio Mola as a commander in a military force
  ?militaryForce dbo:commander ?commander .
  ?commander rdfs:label ""Emilio Mola""@en .

  # The force is involved in societal events and military conflicts
  ?militaryForce dbo:event ?event .
  ?event rdf:type/(dbo:SocietalEvent|dbo:MilitaryConflict) .

  # The event is related to Francoist Spain and the Spanish Civil War
  ?event dbo:place dbr:Francoist_Spain ;
         dbo:partOf dbr:Spanish_Civil_War .

  FILTER(LANG(?commander) = ""en"")
}
ORDER BY ?commander",6,10,7,3,3,3,3,71,0,0,32,0,0.0,0
645,20,test,"Give me the alma mater of the child of the parent of Adela Pankhurst and entity in the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?country
WHERE {
  # Adela Pankhurst and her parent
  dbr:Adela_Pankhurst dbo:parent ?parent .
  
  # Alma mater of Adela Pankhurst
  dbr:Adela_Pankhurst dbo:almaMater ?almaMater .

  # Commander in the Battle of Diamond Rock
  dbr:Battle_of_Diamond_Rock dbo:commander ?commander .

  # Residence entity as a country
  ?commander dbo:residence ?residence .
  ?residence rdf:type dbo:Country ;
             rdfs:label ?country .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
182,25,test,Give me the war of the work of Gotabhaya Rajapaksa and war of the author of 2019 Sri Lanka Easter bombings and entity in Sri Lanka.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?gotabhayaWar ?zahranRole ?entityInSriLanka
WHERE {
  # Gotabhaya Rajapaksa's association with the Sri Lankan Civil War
  dbr:Gotabhaya_Rajapaksa dbo:associatedWith ?gotabhayaWar .
  
  # Zahran Hashim's role in the 2019 Easter bombings
  dbr:Zahran_Hashim dbo:role ?zahranRole ;
                   dbo:relatedTo dbr:Sri_Lanka_Easter_bombings_2019 .

  # Entity related to both Gotabhaya Rajapaksa and Zahran Hashim
  OPTIONAL {
    ?entityInSriLanka dbo:associatedWith dbr:Gotabhaya_Rajapaksa ;
                     dbo:relatedTo dbr:Zahran_Hashim .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
16,26,test,Give me the professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  dbr:Unnatural a dbo:TelevisionSeries .
  
  ?actor dbo:starring dbr:Unnatural ;
         a dbo:Actor .

  ?actor dbo:profession ?profession .

  ?professional a ?profession .
}
```",3,3,4,3,1,3,3,71,0,0,40872,0,0.0,0
184,44,test,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the child of Archduke Joseph Francis of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commonIndividual
WHERE {
  # Child of the child of Archduke Joseph Karl
  ?grandchild1 dbo:parent ?childOfJosephKarl .
  ?childOfJosephKarl dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .

  # Parent of the child of Archduke Joseph Francis
  ?childOfJosephFrancis dbo:parent ?parentOfChildOfJosephFrancis .
  ?parentOfChildOfJosephFrancis dbp:spouse ?commonIndividual .

  # Parent of Géza von Habsburg
  dbr:Géza_von_Habsburg dbo:parent ?parentOfGeza .
  ?parentOfGeza dbp:spouse ?commonIndividual .

  FILTER (?grandchild1 = ?childOfJosephFrancis)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
838,16,test,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?band
WHERE {
  # Find band members of YU Grupa who are also artists and musical artists
  ?member dbo:memberOfBand dbr:YU_Grupa .
  ?member a dbo:Artist ;
          a dbo:MusicalArtist .

  # Find the bands these members belong to
  ?member dbo:memberOfBand ?band .
}
```",4,7,5,2,2,3,2,20,0,0,5,0,0.0,0
427,45,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of Giulio Andreotti and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName ?party ?referenceToPPI
WHERE {
  # Romano Prodi's birth name
  dbr:Romano_Prodi dbo:birthName ?birthName .
  
  # Giulio Andreotti's party
  dbr:Giulio_Andreotti dbo:politicalParty ?party .

  # Reference to Partito Popolare Italiano
  OPTIONAL {
    ?officeHolder a dbo:OfficeHolder ;
                 dbo:politicalAffiliation dbr:Partito_Popolare_Italiano .
    BIND(""Reference found"" AS ?referenceToPPI)
  }
  
  FILTER EXISTS { 
    ?officeHolder a dbo:OfficeHolder ;
                 dbo:isPolitician true .
  }

  # Ensure both are office holders and politicians
  VALUES ?person { dbr:Romano_Prodi dbr:Giulio_Andreotti }
  ?person a dbo:OfficeHolder ;
          dbo:isPolitician true .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
994,54,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of Don Dokken.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist
WHERE {
  # Step 1: Find associated musical artists of Watchtower
  ?watchtowerArtist dbo:musicalArtist dbr:Watchtower .
  
  # Step 2: Find associated musical artists of those artists
  ?secondLevelArtist dbo:musicalArtist ?watchtowerArtist .

  # Step 3: Identify Don Dokken's band members
  ?donDokkenBandMember dbo:memberOf dbr:Don_Dokken ;
                      a dbo:Band .
  
  # Step 4: Determine which of these members are part of a band that is also an organization
  ?bandThatIsOrg dbo:member ?donDokkenBandMember ;
                 a (dbo:Band dbo:Organization) .

  # Step 5: Identify Fredrik Thordendal's band, ensuring it is classified as an organization
  ?fredrikThordendalBand dbo:member dbr:Fredrik_Thordendal ;
                         a dbo:Organization .
  
  # Step 6: Find the associated musical artist of this band member
  ?finalArtist dbo:musicalArtist ?bandThatIsOrg .

}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
92,48,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?artistName ?satrianiBand
WHERE {
  # Find band members of Nevermore (the band)
  ?nevermoreBand a dbo:MusicalBand ;
                 dbo:name ""Nevermore"" ;
                 dbo:member ?bandMember .

  # Ensure the band member is an artist
  ?bandMember dbo:occupation dbr:Musician .

  # Get the name of the artist
  ?bandMember rdfs:label ?artistName .

  # Find Joe Satriani's band
  ?satriani a dbo:Person ;
            foaf:name ""Joe Satriani"" ;
            dbo:member ?satrianiBand .

  # Ensure the band member is also associated with Joe Satriani's band
  ?bandMember dbo:member ?satrianiBand .
  
  FILTER (lang(?artistName) = 'en')
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,70,test,"Give me the parent of the child of the child of Seti I and spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Nefertari.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfGrandchild
WHERE {
  # Seti I's lineage
  ?setiI a dbo:Monarch ;
         dbo:spouse ?setiISpouse ;
         dbo:child ?child1 .
  
  ?child1 dbo:child ?grandchild .

  # Commander in Battle of Perire and their father's spouse
  ?battlePerire dbp:commander ?commander .
  ?commander dbo:father ?commandersFather .
  ?commandersFather dbo:spouse ?spouseOfCommandersFather .

  # Ensure the entity is royalty
  FILTER (?spouseOfCommandersFather a dbo:Monarch)

  # Nefertari's lineage
  ?nefertari a dbo:Monarch ;
             dbo:child ?child3 .
  
  ?child3 dbo:parent ?parentOfChild3 .

  # Combine conditions to find the required entity
  FILTER (?grandchild = ?spouseOfCommandersFather)
  FILTER (?parentOfChild3 = ?setiISpouse)

  BIND(?setiISpouse AS ?parentOfGrandchild)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
281,45,test,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?profession ?officeHolder ?politician
WHERE {
  ?entity a dbo:MilitaryUnit ;
          dbo:partOf dbr:New_Zealand_Army ;
          dbo:placeOfBirth dbr:Colony_of_New_Zealand .

  ?profession dbo:relatedTo ?entity ;
              rdf:type dbo:OfficeHolder, dbo:Politician .

  ?officeHolder dbo:heldBy ?profession .
  ?politician dbo:memberOf dbr:New_Zealand_Army .

  FILTER EXISTS { 
    ?war dbo:participant ?entity .
    ?war dbo:name ""War of Beauchamp Seymour, 1st Baron Alcester""^^xsd:string
  }
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
712,19,test,Give me the capital of the country of Armed Forces of South Russia and resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital ?restingPlace
WHERE {
  # Capital of Russia
  dbr:Russia dbo:capital ?capital .

  # Alexander Gradsky's resting place
  dbr:Alexander_Gradsky dbo:deathPlace ?restingPlace .
}
```",5,5,6,3,2,3,2,20,0,1,1,0.0,0.0,0
959,56,test,"Give me the native of Japan and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?almaMater
WHERE {
  # Find Eiji Ōtsuka and his details
  dbr:Eiji_Ōtsuka a dbo:SportsManager ;
                  dbo:nationality dbr:Japan ;
                  dbo:almaMater ?almaMater .

  # Ensure alma mater is an organization, university, or educational institution in Japan
  ?almaMater a (dbo:Organisation | dbo:University | dbo:EducationalInstitution) ;
             dbo:nationality dbr:Japan .

  # Find the manager of the 1998 Kashima Antlers team
  dbr:Kashima_Antlers_1998_season dbo:manager ?manager .
  
  # Ensure the manager is a sports manager and native of Japan
  ?manager a dbo:SportsManager ;
           dbo:nationality dbr:Japan .

  # Link Eiji Ōtsuka to the team as its manager
  ?manager dbp:managedTeam dbr:Kashima_Antlers_1998_season .
}
```",6,11,7,3,3,3,3,71,0,0,2,0,0.0,0
404,61,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of the spouse of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfFinalChild
WHERE {
  # Step 1: Find Prince George William of Hanover's parent (royalty)
  ?princeGeorge a dbo:Person ;
               dbp:father|dbp:mother ?parent1 .
  
  FILTER EXISTS { ?parent1 a dbo:Monarch } .

  # Step 2: Find child of this parent (royalty)
  ?childOfParent1 dbp:father|dbp:mother ?parent1 ;
                  a dbo:Person .
  
  FILTER EXISTS { ?childOfParent1 a dbo:Monarch } .

  # Step 3: Identify spouse of Princess Victoria Louise of Prussia
  ?princessVictoriaLouise a dbo:Person ;
                         dbp:spouse ?spouse .
  
  # Find father of this spouse
  ?fatherOfSpouse dbp:child ?spouse .

  # Step 4: Find child of this father
  ?finalChild dbp:father|dbp:mother ?fatherOfSpouse ;
              a dbo:Person .

  # Step 5: Determine parent of the final child
  ?parentOfFinalChild dbp:child ?finalChild .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
294,27,test,"Give me the entity in the birth place, that is a settlement, of Marion James and resting place of the architect of P. D. Houston Jr. House and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?result <http://dbpedia.org/ontology/location> ?v0 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?settlement
WHERE {
  # Marion James's birthplace
  dbr:Marion_James dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement
  ?birthPlace rdf:type dbo:Settlement .

  # Architect of P. D. Houston Jr. House and their resting place
  dbr:P._D._Houston_Jr._House dbo:architect ?architect .
  ?architect dbp:deathPlace ?restingPlaceArchitect .

  # Luke Lea's resting place
  dbr:Luke_Lea_(American_politician,_born_1879) dbp:deathPlace ?restingPlaceLukeLea .

  # Ensure all these places are the same settlement
  FILTER (?birthPlace = ?restingPlaceArchitect && ?birthPlace = ?restingPlaceLukeLea)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
92,69,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?band2 ?band3
WHERE {
  # Jim Sheppard's associated musical artist
  OPTIONAL {
    dbr:Jim_Sheppard dbo:musicalArtist ?artist1 .
  }

  # Band related to Nevermore (2006 film)
  OPTIONAL {
    dbr:Nevermore_(film) dbo:referenceBand ?band2 .
  }

  # Joseph Michael's birth name and associated band
  OPTIONAL {
    dbr:Joseph_Michael dbo:birthName ?birthName .
    ?person dbo:birthName ?birthName ;
            dbo:musicalArtist ?band3 .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
701,57,test,Give me the spouse of the father of Merneptah and parent of the child of the child of Seti I and parent of Meritamen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Merneptah's father
  dbr:Merenptah dbo:father ?father .
  
  # Find the spouse of Merneptah's father
  ?father dbo:spouse ?spouse .

  # Find Seti I and his child (likely Ramesses II)
  dbr:Seti_I dbo:child ?childOfSetiI .

  # Find a grandchild of Seti I (child of Ramesses II)
  ?childOfSetiI dbo:child ?grandChild .

  # Ensure the spouse is also the parent of Meritamen
  ?spouse dbo:parent dbr:Meritamen .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
281,68,test,"Give me the war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v7 . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfAward ?birthCountry ?warOfProfession
WHERE {
  # Jonathon Band's award and related war
  ?jonathonBand a dbo:Person ;
                foaf:name ""Jonathon Band"" .
  ?award dbo:recipient ?jonathonBand ;
         dbo:relatedEvent ?warOfAward .

  # Leader of the 1962 New South Wales state election
  ?election dbo:leader ?leader ;
            dbo:date ""1962-01-01""^^xsd:date ;
            dbo:state dbr:New_South_Wales .
  ?leader a dbo:Politician ;
          dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:countryName ?birthCountry .

  # Heather Roy's profession and related war
  ?heatherRoy a dbo:Person ;
              foaf:name ""Heather Roy"" .
  ?profession dbo:agent ?heatherRoy ;
              rdf:type dbo:MilitaryUnit ;
              dbo:relatedEvent ?warOfProfession .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
161,31,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?personDecedent
WHERE {
  # Find military forces involved in the Spanish Civil War
  ?conflict a dbo:MilitaryConflict ;
            dbo:participatingMilitaryForce ?militaryForce .

  # Ensure the conflict is also considered a societal event
  ?conflict a dbo:SocietalEvent .

  # Identify the Spanish Civil War
  ?conflict dbr:Spanish_Civil_War .

  # Find persons who were decedents during Francoist Spain (related to the Spanish Civil War)
  ?personDecedent dbo:dateOfDeath ?deathDate ;
                  dbo:nationality dbr:Spain .
  
  # Ensure the death occurred during or after the Spanish Civil War
  FILTER (?deathDate >= ""1936-07-17""^^xsd:date && ?deathDate <= ""1975-11-20""^^xsd:date)
}
```",4,7,5,3,2,3,3,71,0,0,514,0,0.0,0
820,19,test,Give me the child of the parent of the professional in Actor and professional in the award of Scott McCloud.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v4 <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?scottMcCloud foaf:name ""Scott McCloud"" .
  ?scottMcCloud foaf:parent ?parent .

  ?parent foaf:child ?child .

  OPTIONAL { ?scottMcCloud dbo:profession dbr:Actor . }
  OPTIONAL { ?award dbo:recipient ?scottMcCloud . }

}
```",5,5,6,3,2,3,2,20,0,0,128,0,0.0,0
161,68,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForceFrancoistSpain ?militaryForcePredecessorPrieto ?commanderEmilioMola
WHERE {
  # Military force during Francoist Spain
  ?event1 dbo:type dbr:Military_conflict ;
         dbo:place dbr:Francoist_Spain .
  ?event1 dbo:participatesIn ?militaryForceFrancoistSpain .

  OPTIONAL {
    ?event1 dbo:type dbr:Societal_event .
  }

  # Military force of Indalecio Prieto's predecessor
  ?prietoPredecessor dbo:predecessor dbr:Indalecio_Prieto ;
                     dbo:participatesIn ?militaryForcePredecessorPrieto .
  
  OPTIONAL {
    ?event2 dbo:type dbr:Societal_event ;
            dbo:participatesIn ?militaryForcePredecessorPrieto .
  }

  # Emilio Mola as a commander
  ?commandEvent dbo:type dbr:Event ;
                dbo:commander dbr:Emilio_Mola .
  
  ?commandEvent dbo:participatesIn ?commanderEmilioMola .
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
16,50,test,Give me the professional in the profession of the actor of Unnatural (TV series) and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional
WHERE {
  # Find the actor of ""Unnatural""
  ?actor dbo:starringIn dbr:Unnatural_(TV_series) .
  
  # Get the profession of this actor
  ?actor dbo:profession ?profession .

  # Find a professional in that same profession who is also Gigi Rice by birth name
  ?professional dbo:profession ?profession ;
                foaf:name ""Gigi Rice""@en ;
                foaf:mbox ?email .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
54,22,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  ?child dbo:parent dbr:Thihapate_of_Mohnyin .
  ?child dbo:parent dbr:Thinkhaya_of_Pagan .
  ?child a dbo:Royalty .
  ?child a dbo:OfficeHolder .

  ?officeHolder dbo:holder ?child .
  ?royalTitle dbo:titleHolder ?child .

  ?predecessor dbo:successor ?child .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
492,50,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commanderInVerdun ?otherConflict ?decedent
WHERE {
  # Commander in the Battle of Verdun
  ?battle dbo:commander ?commanderInVerdun .
  FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Verdun""))

  # Other military conflict involving the same commander
  ?otherConflict dbo:commander ?commanderInVerdun .
  FILTER(?otherConflict != ?battle)
  
  # Decedent at the capital of Algeria (Algiers)
  ?decedent dbo:deathPlace dbr:Algiers .
  ?algiers dbo:country dbr:Algeria ;
           dbp:capital ""true""^^xsd:boolean .

}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
488,67,test,"Give me the birth place of Enomoto Takeaki and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?administration ?deathPlace
WHERE {
  # Enomoto Takeaki's birth place
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .

  # Tokugawa Masako's spouse's father's administration
  dbr:Tokugawa_Masako dbo:spouse ?spouse .
  ?spouse dbo:father ?royalFather .
  ?royalFather dbo:administers ?administration .

  # Matsudaira Tadamasa's father's father's death place
  dbr:Matsudaira_Tadamasa dbo:father ?officeHolderFather .
  ?officeHolderFather dbo:father ?politicianGrandfather .
  ?politicianGrandfather dbo:deathPlace ?deathPlace .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
184,59,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Archduke Ladislaus Philipp of Austria
  ?archduke dbo:name ""Ladislaus Philipp, Archduke of Austria""@en .
  
  # His child
  ?child dbo:parent ?archduke ;
         a dbo:Person .

  # The grandchild who is royalty
  ?grandchild dbo:parent ?child ;
              a dbo:Royalty .

  # Parent's native place must be a settlement at elevation 96.0 meters
  ?nativePlace dbp:elevation ""96.0""^^xsd:float ;
               a dbo:Settlement .
  
  ?child dbo:nativePlace ?nativePlace .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
617,57,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Antiochus (son of Antiochus III the Great)
  ?antiochus dbr:Antiochus_IV_Epiphanes .

  # Successor of Antiochus IV Epiphanes
  ?successor dbo:predecessor ?antiochus .
  
  # Child of the successor who is royalty
  ?child dbo:parent ?successor ;
         a dbo:RoyalFamilyMember .

  # Spouse of this royal child
  ?spouse dbo:spouse ?child .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
16,59,test,Give me the spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
    # Step 1: Get Ted McGinley's birth name
    dbr:Ted_McGinley dbo:birthName ?birthName .

    # Step 2: Find the actor of ""Unnatural"" and their profession
    dbr:Unnatural dbo:actor ?unnaturalActor .
    ?unnaturalActor dbo:profession ?profession .

    # Step 3: Match professions with Ted McGinley's birth name
    ?person dbo:birthName ?birthName ;
            dbo:profession ?profession .

    # Step 4: Get the spouse of the person identified in step 1
    ?person dbo:spouse ?spouse .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
994,53,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?redTideArtist ?watchtowerArtist
WHERE {
  # Step 1: Identify Donald Maynard Dokken
  ?dokken a dbo:MusicalArtist ;
          foaf:name ""Donald Maynard Dokken"" .

  # Step 2: Find band members associated with Donald Maynard Dokken
  ?bandMember dbo:member ?dokken .

  OPTIONAL {
    # Step 3: Identify associated musical artists of Red Tide
    ?redTideArtist dbo:associatedBand dbr:Red_Tide_(band) .
  }

  OPTIONAL {
    # Step 4: Find the associated musical artist of Watchtower
    ?watchtowerArtist dbo:associatedBand dbr:Watchtower .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
92,56,test,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?artist WHERE {
  # Find members of Nevermore
  ?band dbr:Nevermore .
  
  # Jim Sheppard as a member and artist
  OPTIONAL { 
    ?sheppard dbo:associatedBand ?band ;
              foaf:name ""Jim Sheppard"" .
    ?sheppard dbo:occupation dbr:Musician .
    BIND(?sheppard AS ?member)
    BIND(""Jim Sheppard"" AS ?artist)
  }
  
  # Warrel Dane (Joseph Michael) as a member and artist
  OPTIONAL { 
    ?dane dbo:associatedBand ?band ;
          foaf:name ""Warrel Dane"" .
    ?dane dbo:birthName dbr:Joseph_Michael .
    BIND(?dane AS ?member)
    BIND(""Warrel Dane"" AS ?artist)
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,19,test,Give me the birth place of the member of Dropkick Murphys and landmark at elevation of the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?landmark ?elevation ?award
WHERE {
  # Find members of Dropkick Murphys and their birthplaces
  ?member dbo:musicalArtist dbr:Dropkick_Murphys .
  ?member dbo:birthPlace ?birthPlace .

  OPTIONAL {
    # Find landmarks related to awards given in the Battle of Chishui River
    ?award dbo:event dbr:Battle_of_Chishui_River .
    ?landmark dbo:elevation ?elevation .
    ?landmark dbo:relatedToAward ?award .
  }
}
```

This query attempts to retrieve:
- The birthplace of a member of Dropkick Murphys.
- Any landmark associated with an award from the Battle of Chishui River, along with its elevation.

Note that due to the complexity and potential lack of direct data connections in DBpedia, some results might not be available or require further refinement based on actual dataset availability.",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
345,17,test,"Give me the figure known as Stolz von Liechtenstein and team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthTeam WHERE {
  # Find Eiður Guðjohnsen's birth date
  VALUES ?eiðurBirthDate { 
    SELECT ?date WHERE { 
      dbr:Eiður_Guðjohnsen dbo:birthDate ?date .
    }
  }

  # Identify the person who is both a soccer player and manager, born on Eiður Guðjohnsen's birth date
  ?person dbo:sport dbr:Soccer ;
          dbo:managerOf ?team ;
          dbo:birthDate ?eiðurBirthDate .

  # Get the team where this person was born as a player
  ?person dbo:memberOfTeam ?birthTeam .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
64,9,test,"Give me the entity in the region, that is a country, of Central European Time and alma mater of the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country
WHERE {
  ?country a dbo:Country ;
           dbo:timeZone dbr:Central_European_Time .

  OPTIONAL {
    ?writer dbo:deathPlace dbr:Sremska_Kamenica ;
            dbo:almaMater ?university .
    ?university dbo:location ?country .
    ?writer a dbo:Writer .
  }
}
```",4,6,5,2,2,2,2,9,0,94,1,0.0,0.0,0
9,34,test,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?university WHERE {
  ?organization dbo:location dbr:Belfast .
  ?mayor dbo:positionHeld ?organization ;
         a dbo:Mayor .
  ?mayor foaf:almaMater ?university .
}
```

This query does the following:
- Selects organizations located in Belfast.
- Identifies individuals holding the position of mayor for these organizations.
- Retrieves the alma mater (university) associated with each mayor.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
701,37,test,Give me the parent of the child of the child of Seti I and spouse of Ramesses II.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # Seti I's child
  ?child1 dbo:spouse*/* dbo:Seti_I .
  
  # Child of Seti I's child (grandchild)
  ?child2 dbo:parent ?child1 .

  # Parent of the grandchild
  ?parent dbo:child ?child2 .

  # Check if this parent is also spouse of Ramesses II
  ?parent dbp:spouse*/* dbo:Ramesses_II .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
356,17,test,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960) and player in 2015 Sacramento Republic FC season.","SELECT ?result WHERE { <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?team
WHERE {
  # Find Gary Williams' birthplace
  dbr:Gary_Williams_(footballer,_born_1960) dbo:nationality dbr:England ;
      dbo:birthPlace ?birthPlace .

  FILTER (isBlank(?birthPlace)) .
  
  # Find a person who is both a soccer player and manager, native to Gary Williams' birthplace
  ?person dbo:nationality dbr:England ;
          dbo:birthPlace ?birthPlace ;
          dbo:occupation ?occupation1 ;
          dbo:occupation ?occupation2 .

  FILTER (?occupation1 = dbp:Soccer_player && ?occupation2 = dbp:Soccer_manager) .
  
  # Find the team they were associated with in the 2015 Sacramento Republic FC season
  OPTIONAL {
    ?person dbp:team ?team .
    ?team dbo:sport dbr:Soccer ;
          dbo:season ?season .
    
    FILTER (?season = ""2015""^^xsd:string && strStarts(str(?team), ""Sacramento Republic FC"")) .
  }
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
161,38,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Emilio Mola's military force and its commander
  ?militaryForce dbo:commander ?commander .
  ?militaryForce dbo:member dbr:Emilio_Mola .

  # Francisco Largo Caballero's societal event and military conflict
  ?societalEvent dbo:militaryConflict ?militaryConflict .
  ?militaryConflict dbo:member dbr:Francisco_Largo_Caballero .
  
  # Linking the same military force to both entities
  ?militaryForce dbo:sameAs ?militaryConflict .

}
```",4,7,5,2,2,3,3,71,0,0,32,0,0.0,0
994,70,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberOfDonDokken ?associatedArtistOfWatchtower ?finalAssociatedArtist
WHERE {
  # Find Don Dokken's band member
  dbr:Don_Dokken dbo:member ?bandMemberOfDonDokken .
  
  # Find Watchtower's associated musical artist
  dbr:Watchtower dbo:associatedMusicalArtist ?associatedArtistOfWatchtower .

  # Find Fredrik Thordendal's band (which is also an organization)
  dbr:Fredrik_Thordendal dbo:member ?bandMemberFredrik .
  ?bandMemberFredrik a dbo:Band ;
                    a dbo:Organization .

  # Find the associated musical artist of the band member related to Fredrik Thordendal's band
  ?bandMemberFredrik dbo:associatedMusicalArtist ?finalAssociatedArtist .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
54,38,test,"Give me the parent of the child of Narapati I of Ava and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Narapati I of Ava and his child
  ?narapatiI a dbo:Monarch ;
             foaf:name ""Narapati I of Ava""@en .
  
  ?child dbo:childOf ?narapatiI .

  # Predecessor of the child
  ?predecessor dbo:successor ?child .

  # Ensure predecessor is an office holder and royalty, related to Thihapate of Mohnyin
  ?thihapate a dbo:Monarch ;
              foaf:name ""Thihapate of Mohnyin""@en .
  
  ?predecessor dbo:officeHolder true ;
               dbo:royalty true ;
               dbo:relatedTo ?thihapate .

  # Parent of the child
  ?parent dbo:childOf ?child .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
404,52,test,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?birthName WHERE {
  # Ernest Augustus, Crown Prince of Hanover's child who is royalty
  ?child dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  ?child a dbo:Monarch .

  # Parent of the child should be Ernest Augustus, Duke of Brunswick
  ?child dbo:parent dbr:Ernest_Augustus,_Duke_of_Brunswick .

  # Spouse of the child born as Princess Victoria Louise of Prussia
  ?spouse dbo:birthName ""Princess Victoria Louise of Prussia""@en .
  ?child dbo:spouse ?spouse .

  # Retrieve birth name of the child
  OPTIONAL { ?child dbo:birthName ?birthName }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
232,55,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Sean Pertwee""@en .
  
  ?actor dbo:childOf ?parent .
  ?parent foaf:name ""John Devon Roland Pertwee""@en .

  ?film dbo:starring ?actor .
  ?conflict dbo:participant ?actor .

  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_Kingdom ;
              dbo:resident ?sylvie .
  
  ?sylvie foaf:name ""Sylvie Bermann""@en .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
16,52,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  # Find Satomi Ishihara's profession
  ?satomiIshihara a dbo:Person ;
                  foaf:name ""Satomi Ishihara"" .
  
  # Get her profession
  ?satomiIshihara dbo:profession ?profession .

  # Identify Ted McGinley by his birth name and find his spouse
  ?tedMcGinley a dbo:Person ;
               foaf:surname ""Ted McGinley"" ;
               foaf:name ?name .
  
  ?tedMcGinley dbp:spouse ?spouse1 .

  # Identify Georgeanne Marie Rice by her birth name and find the person
  ?georgeanneMarieRice a dbo:Person ;
                       foaf:surname ""Georgeanne Marie Rice"" ;
                       foaf:name ?name2 .
  
  ?georgeanneMarieRice dbp:spouse ?spouse2 .

  # Find the common spouse of both identified spouses
  FILTER (?spouse1 = ?spouse2)
  
  # Get the profession of this common spouse
  ?commonSpouse a dbo:Person ;
                dbp:spouse ?spouse1, ?spouse2 ;
                dbo:profession ?professional .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
9,52,test,"Give me the figure known as QUB and alma mater of the awardee of Royal Medal and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?figure ?almaMaterRoyalMedalist ?mayorAlmaMater
WHERE {
  # Figure known as QUB
  VALUES ?figure { dbr:Queen's_University_Belfast }

  # Alma mater of the awardee of Royal Medal
  ?awardee dbo:almaMater ?almaMaterRoyalMedalist .
  ?awardee dbp:award ""Royal Medal""@en .
  FILTER(?almaMaterRoyalMedalist = ?figure)

  # Alma mater of the mayor, that is a politician, of an organization in Belfast
  ?mayor dbo:almaMater ?mayorAlmaMater .
  ?mayor dbp:office ""Mayor""@en ;
         dbo:positionHeldBy ?organization .
  ?organization dbo:location dbr:Belfast .
  FILTER(?mayorAlmaMater = ?figure)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
666,19,test,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season and figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?v4 . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName ?nickname
WHERE {
  # Identify Hull City A.F.C. for the specified season
  dbr:Hull_City_A.FC_2016%E2%80%9317_season dbo:manager ?manager .
  
  # Ensure the manager is a sports manager
  ?manager rdf:type dbo:SportsManager .

  # Get the name of the manager
  ?manager foaf:name ?managerName .

  # Identify the nickname of Hull City A.F.C.
  dbr:Hull_City_A.FC dbo:nickname ?nickname .
}
```",5,9,6,3,2,3,2,20,0,0,2,0,0.0,0
659,55,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander1 ?commander2
WHERE {
  # Find the war that is both a military conflict and a societal event
  ?war a dbo:MilitaryConflict ;
       a dbo:SocietalEvent .

  # Find the commander of the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) dbo:commander ?commander1 .

  # Find the military force associated with Rutger Jan Schimmelpenninck
  ?force1 a dbo:MilitaryConflict ;
          dbo:commander dbr:Rutger_Jan_Schimmelpenninck .
  
  # Find the commander of the military force associated with Arthur Wellesley, 1st Duke of Wellington
  ?force2 a dbo:MilitaryConflict ;
          dbo:commander dbr:Arthur_Wellesley,_1st_Duke_of_Wellington .
          ?force2 dbo:commander ?commander2 .

  # Ensure the forces are related to the same war
  ?war dbo:participatedIn ?force1 .
  ?war dbo:participatedIn ?force2 .
}
```",6,11,7,2,3,3,3,71,0,0,15,0,0.0,0
488,31,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceSaito ?deathPlaceIeyasu
WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlaceSaito .
  
  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlaceIeyasu .

  # Linking both to the Boshin War as a common event
  OPTIONAL {
    dbr:Saitō_Hajime dbo:participatedIn dbr:Boshin_War .
    dbr:Tokugawa_Ieyasu dbo:participatedIn dbr:Boshin_War .
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
391,56,test,"Give me the actor of The Departed and native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName WHERE {
  # Actor of ""The Departed""
  ?movie dbr:The_Departed .
  ?movie dbo:starring ?actor .

  # Native of ""Hub City""
  ?actor dbo:nativePlace dbr:Hub_City .

  # Actor in a work that is both a movie and a television show
  ?work dbo:starring ?actor ;
        (dbo:genre dbp:Movie OR dbo:genre dbp:TelevisionShow) .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
981,17,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in Indonesia.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person dbo:birthPlace ?birthPlace .
  
  # Condition for being a beauty queen
  ?person dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""beauty queen"") || CONTAINS(LCASE(?title), ""miss""))

  # Condition for authoring Kamikaze Girls
  ?book dbo:author ?person .
  ?book dbr:Kamikaze_Girls .

  # Condition for being an entity in Indonesia
  ?person dbo:nationality dbr:Indonesia .
}
```",4,5,5,3,2,3,2,20,0,0,19,0,0.0,0
55,22,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Find the producer of ""Used to Love Her"" who is a band
  ?song dbo:producer ?producer .
  FILTER(STRSTARTS(STR(?song), STR(dbr:)) && STRCONTAINS(LCASE(STR(?producer)), ""band"")) .

  # Ensure the song is ""Used to Love Her""
  VALUES ?song { dbr:Used_to_Love_Her }

  # Find a band member of this producer
  ?producer dbo:member ?bandMember .

  # This band member should be part of another band that is both a band and a group
  ?bandMember dbo:member ?secondBand .
  FILTER(STRSTARTS(STR(?secondBand), STR(dbr:)) && 
         (CONTAINS(LCASE(STR(?secondBand)), ""band"") || CONTAINS(LCASE(STR(?secondBand)), ""group"")))

  # Ensure this second band has a connection to the San Francisco Symphony
  ?secondBand dbo:performer ?symphony .
  FILTER(STRSTARTS(STR(?symphony), STR(dbr:San_Francisco_Symphony)))
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
281,60,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardWar ?professionWar
WHERE {
  # Identify Jonathon Band and his awards
  ?jonathan a dbo:Person ;
            foaf:name ""Jonathon Band"" ;
            dbo:honoraryTitle ?award .
  
  OPTIONAL { 
    ?award dbo:awardedFor ?awardWar .
  }
  
  # Identify his profession as a military unit in the New Zealand Army
  ?jonathan dbo:profession ?militaryUnit ;
            dbp:militaryBranch dbr:New_Zealand_Army .

  OPTIONAL {
    ?militaryUnit dbo:participatedIn ?professionWar .
  }
  
  # Ensure he is an office holder and politician
  ?jonathan dbo:officeHolder ?office ;
            dbo:politicalParty ?party .
}
```",6,9,7,3,2,3,3,71,0,0,9,0,0.0,0
184,67,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of Géza von Habsburg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonAncestor WHERE {
  # Archduke Ladislaus Philipp of Austria
  ?ladislaus a dbr:Archduke_Ladislaus_Philipp_of_Austria ;
             dbo:parent ?ladislausParent .
  
  # Find his sibling (child of the same parent)
  ?siblingLadislaus dbo:parent ?ladislausParent ;
                   a ?royaltyClass .

  FILTER(?royaltyClass IN (dbr:Monarch, dbr:Noble))

  # Archduchess Margaret of Austria
  ?margaret a dbr:Archduchess_Margaret_of_Austria ;
            dbo:birthDate ?dateMargaret .
  
  FILTER(YEAR(?dateMargaret) = 1925)

  ?siblingMargaret dbo:parent ?margaretParent .

  # Find her sibling (child of the same parent)
  ?siblingMargaret dbo:parent ?margaretParent ;
                   a ?royaltyClass2 .

  FILTER(?royaltyClass2 IN (dbr:Monarch, dbr:Noble))

  # Géza von Habsburg
  ?geza a dbr:Géza_von_Habsburg ;
        dbo:parent ?gezaParent .

  # Find the common ancestor
  ?commonAncestor dbo:child ?siblingLadislaus .
  ?commonAncestor dbo:child ?siblingMargaret .
  ?commonAncestor dbo:child ?geza .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
54,45,test,"Give me the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?child ?predecessor
WHERE {
  # Thado Minsaw of Prome's parent
  ?thadoMinsaw a dbr:Thado_Minsaw_of_Prome ;
                dbo:parent ?parent .

  # Thinkhaya of Pagan's child
  ?thinkhaya a dbr:Thinkhaya_of_Pagan ;
             dbo:child ?child .

  # Thihapate of Mohnyin's reference to the child
  ?thihapate a dbr:Thihapate_of_Mohnyin ;
             dbo:predecessor ?predecessor .

  # Ensure the predecessor is an office holder and royalty
  ?predecessor a dbo:OfficeHolder, dbo:Royalty .
  
  # Linking child from Thinkhaya to Thihapate's reference
  ?child = ?thihapate .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
959,59,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater
WHERE {
  ?leader dbo:electionLeaderOf dbr:2010_Japanese_House_of_Councillors_election .
  ?leader dbo:birthYear ""1958""^^xsd:gYear .
  ?leader dbo:nationality dbr:Japan .
  ?leader dbo:country ?residenceCountry .
  
  ?almaMater dbo:alumni ?leader ;
             a dbo:EducationalInstitution, dbo:University, dbo:Organization .

  FILTER (isLiteral(?residenceCountry) && lang(?residenceCountry) = ""en"")
}
```",6,12,7,3,2,3,3,71,0,0,167,0,0.0,0
498,9,test,"Give me the band of the band, that is an organisation and a band, of Solace of Requiem and band of the member, that is an artist, of Mortician (band).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
    ?band a dbo:Band ;
          a dbo:Organization .

    ?association1 dbo:associatedBand dbr:Solace_of_Requiem ;
                  dbo:associatedBand ?band .

    ?member dbo:memberOf ?band ;
            dbo:memberOf dbr:Mortician .
}
```",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
547,62,test,Give me the resting place of the child of the child of William Haliburton and resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,"SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?descendantRestingPlace ?alanCunninghamRestingPlace ?actorRestingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  {
    dbr:William_Haliburton dbo:child ?child1 .
    ?child1 dbo:child ?grandChild .
    ?grandChild foaf:depiction ?descendantRestingPlace .
  }
  
  UNION
  
  # Resting place of Alan Cunningham
  {
    dbr:Alan_Cunningham foaf:depiction ?alanCunninghamRestingPlace .
  }
  
  UNION
  
  # Resting place of the actor of the show with Emily Richard
  {
    ?show dbo:starring dbr:Emily_Richard .
    ?show dbo:starring ?actor .
    ?actor foaf:depiction ?actorRestingPlace .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
251,26,test,"Give me the administration of Forza Italia (2013) and location of the war, that is a military conflict, of Louis François Félix Musnier and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?administration ?warLocation ?deathPlace
WHERE {
  # Forza Italia (2013) Administration
  OPTIONAL {
    ?party dbo:member ?person .
    ?person dbo:office ?office .
    ?office dbo:startDate ?start .
    ?office dbo:endDate ?end .
    FILTER (?start <= ""2013-12-31""^^xsd:date && (?end >= ""2013-01-01""^^xsd:date || NOT EXISTS { ?office dbo:endDate ?end } ) )
    BIND(""Forza Italia (2013)"" AS ?administration)
  }

  # Location of the War involving Louis François Félix Musnier
  OPTIONAL {
    dbr:Louis_François_Félix_Musnier dbo:participatedIn ?conflict .
    ?conflict dbo:location ?warLocation .
  }

  # Death Place of the Author of The Twelve Abbots of Challant
  OPTIONAL {
    dbr:The_Twelve_Abbots_of_Challant dbo:author ?author .
    ?author dbo:deathPlace ?deathPlace .
  }
}
```",5,6,6,2,3,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
92,28,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of Joseph Michael and associated musical artist of Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?memberName WHERE {
  # Find members of Nevermore
  ?band a dbo:Band ;
        foaf:name ""Nevermore""@en .
  
  ?band dbo:member ?member .

  # Ensure the member is an artist (linked to dbp:artist)
  ?member dbp:artist ?artist .

  # Get the name of the band member
  ?member foaf:name ?memberName .

  FILTER (?member != <http://dbpedia.org/resource/Joseph_Michael>)

  UNION

  {
    # Find artists associated with Joseph Michael
    ?person a dbo:Person ;
            foaf:name ""Joseph Michael""@en .
    
    ?association dbp:associatedWith ?person ;
                 dbp:artist ?artist .

    ?artist foaf:name ?memberName .
  }

  UNION

  {
    # Find musical artists associated with Jim Sheppard
    ?person a dbo:Person ;
            foaf:name ""Jim Sheppard""@en .
    
    ?association dbp:associatedWith ?person ;
                 dbp:musicalArtist ?artist .

    ?artist foaf:name ?memberName .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
488,54,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?administration ?birthPlace
WHERE {
  # Matsudaira Tadamasa's father and grandfather
  ?matsudairaTadamasa dbo:father ?father1 .
  ?father1 dbo:father ?grandfather .

  # Grandfather was an office holder
  ?grandfather a dbo:OfficeHolder .

  # Father of the grandfather (great-grandfather) was a politician
  ?grandfather dbo:father ?greatGrandfather .
  ?greatGrandfather a dbo:Politician .

  # Death place of the great-grandfather
  ?greatGrandfather dbo:deathPlace ?deathPlace .

  # Administration under Emperor Go-Yōzei
  dbr:Emperor_Go-Yōzei dbo:reignsDuring ?administration .

  # Commander in Boshin War and their birthplace
  ?boshinWarCommander a dbo:MilitaryPerson .
  ?boshinWarCommander dbo:commanded ?boshinWar .
  ?boshinWar dbr:Boshin_War .
  ?boshinWarCommander dbo:birthPlace ?birthPlace .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
391,50,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  # Sherry Hormann's spouse
  dbr:Sherry_Hormann dbo:spouse ?spouse .

  # Spouse's claim to fame (a work)
  ?spouse dbo:claimToFame ?work1 .
  
  # Roz Ryan's movie, which is a work and a television show
  dbr:Roz_Ryan dbo:actedIn ?movie .
  ?movie rdf:type dbo:Film .
  ?movie rdf:type dbo:TelevisionShow .

  # Find the actor common to both works
  ?work1 dbo:starring ?actor .
  ?movie dbo:starring ?actor .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
54,50,test,"Give me the parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentOfChild
WHERE {
  # Thado Minsaw of Prome
  ?thadoMinsaw dbo:birthPlace dbr:Prome ;
               a dbo:Person .

  # Parent of Thado Minsaw
  ?parentOfThadoMinsaw dbo:child ?thadoMinsaw .

  # Child of the parent of Thado Minsaw
  ?childOfParent dbo:parent ?parentOfThadoMinsaw .

  # Predecessor of this child
  ?predecessor dbo:successor ?childOfParent ;
               a dbo:OfficeHolder, dbo:Royalty .

  # Ensure predecessor is related to Thihapate of Mohnyin
  ?thihapate dbo:birthPlace dbr:Mohnyin ;
             a dbo:Person .
  
  FILTER(?predecessor = ?parentOfChild)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
251,22,test,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyAdministration ?warLocation
WHERE {
  # Find the ruling party in Sicily that is both a political party and an organization
  ?party dbo:country dbr:Sicily ;
         a dbo:PoliticalParty, dbo:Organization .

  # Get the administration of this party
  ?party dbo:headquarters ?partyAdministration .

  # Find the war involving Louis François Félix Musnier
  ?war dbo:participant ?musnier ;
       a dbo:MilitaryConflict .
  
  # Ensure the participant is Louis François Félix Musnier
  ?musnier rdfs:label ""Louis François Félix Musnier""@en .

  # Get the location of this war
  ?war dbo:location ?warLocation .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
328,65,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of Joseph Stalin and commander in the force of the person decedent at Budapest.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?agency ?commander
WHERE {
  # Bruce Fraser and his award
  dbr:Bruce_Fraser_1st_Baron_Fraser_of_North_Cape dbo:awardedBy ?award .

  # Joseph Stalin's government agency
  dbr:Joseph_Stalin dbo:leaderOf ?agency .
  FILTER (dbo:GovernmentAgency(?agency)).

  # Commander at Budapest
  OPTIONAL {
    ?commander dbo:placeOfBirth ?location .
    ?location rdfs:label ""Budapest""@en .
    ?commander dbo:deceasedAtTime ?deathTime .
    ?commander dbo:commandedBy ?force .
    ?force dbo:placeOfAction ?actionLocation .
    ?actionLocation rdfs:label ""Budapest""@en .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
251,23,test,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/place> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warLocation ?deathPlace
WHERE {
  # Find the war associated with Louis François Félix Musnier
  ?musnier a dbo:MilitaryPerson ;
           foaf:name ""Louis François Félix Musnier"" .
  
  ?musnier dbo:militaryConflict ?conflict .
  ?conflict dbo:location ?warLocation .

  # Find the author of The Twelve Abbots of Challant and their death place
  ?book dbo:title ""The Twelve Abbots of Challant""@en ;
        dbo:author ?author .
  
  ?author foaf:name ?authorName ;
          dbo:deathPlace ?deathPlace .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
528,66,test,Give me the war of the military force of Battle of Pisagua and force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?pisaguaForce1 ?pisaguaForce2 ?camperoBirthName ?camperoForce ?rinconadaCommander ?rinconadaWar
WHERE {
  # Battle of Pisagua forces
  ?battlePisagua dbo:participatedInMilitaryConflict dbr:Battle_of_Pisagua .
  ?battlePisagua dbo:opposingMilitaryForce1 ?pisaguaForce1 .
  ?battlePisagua dbo:opposingMilitaryForce2 ?pisaguaForce2 .

  # Narciso Campero's birth name and military force
  dbr:Narciso_Campero dbo:birthName ?camperoBirthName .
  ?camperoForce dbo:commander dbr:Narciso_Campero .
  
  # Battle of La Rinconada de Ate commander and war
  ?battleRinconada dbo:participatedInMilitaryConflict dbr:Battle_of_La_Rinconada_de_Ate .
  ?battleRinconada dbo:commander ?rinconadaCommander .
  ?rinconadaWar dbo:participatedInMilitaryConflict ?battleRinconada .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
547,66,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the child of James Burton (property developer) and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v6 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeRestingPlace ?childRestingPlace ?actorRestingPlace
WHERE {
  # Gerald Graham's awardee
  ?awardAwardedBy dbr:Gerald_Graham .
  ?awardRecipient dbo:recipientOf ?awardAwardedBy .
  OPTIONAL { ?awardRecipient dbo:deathPlace ?awardeeRestingPlace . }

  # James Burton (Property Developer)'s child
  ?parent dbr:James_Burton_(property_developer) ;
          dbo:child ?child .
  OPTIONAL { ?child dbo:deathPlace ?childRestingPlace . }

  # Actor of ""Enemy at the Door""
  ?film dbr:Enemy_at_the_Door ;
        dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?actorRestingPlace . }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
184,68,test,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/father> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfNative ?royaltyParent
WHERE {
  # Landmark at elevation 96.0 that is a settlement
  ?landmark dbo:elevation ""96.0""^^xsd:float ;
            rdf:type dbo:Settlement .

  # Native of this landmark
  ?native dbo:nativePlace ?landmark .
  
  # Parent of the native
  ?parentOfNative dbo:child ?native .

  # Archduke Joseph Francis of Austria's child
  dbr:Archduke_Joseph_Francis_of_Austria dbo:child ?josephChild .

  # Child of the child of the parent, that is royalty, of Archduke Ladislaus Philipp of Austria
  dbr:Archduke_Ladislaus_Philipp_of_Austria dbo:parent ?ladislausParent .
  ?ladislausParent rdf:type dbo:Royalty .
  ?ladislausChild dbo:child ?ladislausParent ;
                  dbo:child ?grandchild .

  # Linking the two parts
  ?josephGrandchild dbo:child ?josephChild .
  ?parentOfNative = ?grandchild .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
767,47,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?almaMater ?settlement
WHERE {
  ?nash a dbo:Person ;
        foaf:name ""George Kilbon Nash"" .
  
  ?nash dbo:almaMater ?almaMater .

  ?admin a dbo:Person ;
         dbo:administratorOf ?greenEntity ;
         foaf:name ?name .

  FILTER regex(?name, ""Green"", ""i"") .

  ?greenEntity rdf:type dbo:Settlement ;
               rdfs:label ?settlement .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
92,58,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of Nevermore.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band1 ?band2 WHERE {
  # Find Joseph Michael's birth name and associated band
  ?person1 a dbo:MusicalArtist ;
           foaf:name ""Joseph Michael"" ;
           dbo:birthName ?birthName .
  
  OPTIONAL { 
    ?person1 dbo:associatedBand ?band1 .
  }
  
  # Find Jim Sheppard as an artist and his association with Nevermore
  ?person2 a dbo:MusicalArtist ;
           foaf:name ""Jim Sheppard"" ;
           dbo:memberOf dbr:Nevermore .

  OPTIONAL {
    ?person2 dbo:associatedBand ?band2 .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
959,22,test,Give me the member of University of Tsukuba and manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?manager WHERE {
  # Find the University of Tsukuba
  dbr:University_of_Tsukuba a dbo:EducationalInstitution .

  # Find members of the University of Tsukuba
  ?member dbo:almaMater dbr:University_of_Tsukuba .
  
  # Find Takashi Sekizuka's team
  ?team dbo:member dbr:Takashi_Sekizuka .
  
  # Find who manages that team
  ?manager dbo:position ?team .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,52,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse
WHERE {
  # Find Nysa's parent
  ?nysa a dbo:Person ;
        foaf:surname ""Nysa"" ;
        dbo:spouse ?pharnacesI .
  
  ?pharnacesI dbo:spouse ?nysa ;
              dbo:fatherOrGuardian ?parent .

  # Find the child of Antiochus III the Great
  ?antiochusIII a dbo:Person ;
                foaf:surname ""Antiochus III"" ;
                dbo:child ?childOfAntiochusIII .
  
  # Find the spouse of this child
  ?childOfAntiochusIII dbo:spouse ?spouse .

  # Identify successor of Antiochus II Theos and their royal descendant
  ?antiochusII a dbo:Person ;
               foaf:surname ""Antiochus II"" ;
               dbo:successor ?successor .
  
  ?successor dbo:child ?grandChild .
  ?grandChild dbo:royalty true .

  # Ensure the spouse is part of this lineage
  FILTER (?spouse = ?grandChild)
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
92,52,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberName ?associatedArtistName ?jimSheppardBand ?josephMichaelBand
WHERE {
  # Find the artist associated with ""Nevermore (2006 film)""
  ?film a dbo:Film ;
        rdfs:label ""Nevermore""@en .
  
  OPTIONAL {
    ?artist dbo:reference ?film .
    ?bandMember dbo:bandMember ?artist .
    ?bandMember rdfs:label ?bandMemberName .
  }
  
  # Find the associated artist of Jim Sheppard
  dbr:Jim_Sheppard a dbo:Artist ;
                   dbo:associatedBand ?jimSheppardBand .
  
  # Find the band of Joseph Michael
  dbr:Joseph_Michael a dbo:Person ;
                     dbo:bandMember ?josephMichaelBand .
  
  OPTIONAL {
    ?artist rdfs:label ?associatedArtistName .
  }
}
ORDER BY ?bandMemberName ?associatedArtistName ?jimSheppardBand ?josephMichaelBand
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,51,test,Give me the band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shenaBand ?apolloWriterBand
WHERE {
  # Find Shèna's birth name and associated band
  ?shena a dbo:MusicalArtist ;
         foaf:name ""Shèna""@en .
  
  OPTIONAL { 
    ?shena dbo:birthName ?birthName .
  }
  
  OPTIONAL {
    ?shena dbo:band ?shenaBand .
  }

  # Find the writer of Apollo (Hardwell song) and their associated band
  ?apolloSong a dbo:Songs ;
              foaf:name ""Apollo""@en ;
              dbo:lyricsBy ?writer .

  OPTIONAL {
    ?writer dbo:band ?apolloWriterBand .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
9,53,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname
WHERE {
  # Queen's University Belfast and its nickname
  dbr:Queen's_University_Belfast dbo:nickname ?nickname .

  # Allen Hill's alma mater
  ?allenHill dbo:almaMater ?university .
  FILTER (str(?allenHill) = ""Allen_Hill_(scientist)"")

  # Mayor of an organization in Belfast and their alma mater
  ?mayor dbo:almaMater ?university .
  ?organization dbo:location dbr:Belfast ;
                dbo:head ?mayor .
  
  # Ensure the university is common among all
  FILTER (?university = ?university1)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,63,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of Ramesses II and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?result
WHERE {
  # Amun-her-khepeshef part
  ?spouse1 dbo:spouse ?amun.
  FILTER(?amun = dbpedia:Amun_her_khepeshef)
  
  ?child1 dbo:parent ?spouse1.
  
  ?parent1 dbo:parent ?child1.

  # Ramesses II part
  ?child2 dbo:parent ?ramesses.
  FILTER(?ramesses = dbpedia:Ramesses_II)

  ?parent2 dbo:parent ?child2.

  # Merneptah part
  ?fatherMerneptah dbo:child ?merneptah.
  FILTER(?merneptah = dbpedia:Merneptah)
  
  ?spouse2 dbo:spouse ?fatherMerneptah.

  # Find common entities
  VALUES (?result) {
    (?parent1)
    (?parent2)
    (?spouse2)
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,58,test,"Give me the war of the commander in Peninsular War and war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderPeninsularWar ?warOfCarlPontusGahn ?claimToFameThomasTrigge
WHERE {
  # Find the commander of the Peninsular War
  ?peninsularWar dbo:wikiPageRedirects dbr:Peninsular_War .
  ?peninsularWar dbo:commander ?commanderPeninsularWar .

  # Find wars involving Carl Pontus Gahn
  ?warOfCarlPontusGahn dbo:participant ?carlPontusGahn .
  ?carlPontusGahn rdfs:label ""Carl Pontus Gahn""@en .

  # Find Thomas Trigge's claim to fame related to a military conflict and societal event
  ?triggeEvent dbo:wikiPageRedirects dbr:Thomas_Trigge .
  ?triggeEvent rdf:type dbo:MilitaryConflict ;
               dbo:societalEvent ?societalEvent .

  ?claimToFameThomasTrigge dbo:relatedTo ?triggeEvent .
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
427,68,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v5 <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherParty ?michelePintoParty ?romanoProdiParty
WHERE {
  # Find the father of an MIT alumnus and his party affiliation
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .
  OPTIONAL { ?father dbo:partyAffiliation ?fatherParty . }

  # Find Michele Pinto's party affiliation
  dbr:Michele_Pinto dbo:partyAffiliation ?michelePintoParty .

  # Find Romano Prodi's party affiliation
  dbr:Romano_Prodi dbo:partyAffiliation ?romanoProdiParty .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
391,61,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName
WHERE {
  # Find Sherry Hormann's spouse
  dbr:Sherry_Hormann dbo:spouse ?spouse .

  # Find the work associated with the spouse's claim to fame
  ?work dbo:claimToFame ?spouse .
  
  # Find an actor of this work
  ?work dbo:actor ?actor .

  # Ensure the movie is also a work and a television show
  ?movie rdf:type dbo:Film ;
         rdfs:subClassOf* dbo:Work, dbo:TelevisionShow .

  # Link the actor to the movie
  ?movie dbo:actor ?actor .

  # Return the actor's name
  ?actor foaf:name ?actorName .
}
```",6,10,7,3,2,3,3,71,0,0,11,0,0.0,0
528,57,test,Give me the war of the commander in the work of --01-09 and war of Irene Morales and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander1 ?commander2 ?force1 ?force2
WHERE {
  # Find the war related to a work or event on January 9th
  ?work dbo:date ""2009-01-09""^^xsd:date .
  ?work dbo:subject ?war .

  # Irene Morales as a commander in a war
  ?irene dbr:Irene_Morales ;
        dbo:commanderOf ?war1 .
  
  # Narciso Campero Leyes as a person born on a specific date
  ?narciso dbr:Narciso_Campero_Leyes ;
          dbo:birthDate ?birthdate .

  # Find the force associated with Irene Morales
  OPTIONAL { ?irene dbo:commanderOf ?force1 . }

  # Find the force associated with Narciso Campero Leyes
  OPTIONAL { ?narciso dbo:commanderOf ?force2 . }

  # Link wars involving both commanders
  FILTER (?war = ?war1)
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
48,19,test,"Give me the band of the writer of Emotion (Carly Rae Jepsen album) and band of the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerBand ?actorBand
WHERE {
  # Find the writer of ""Emotion"" by Carly Rae Jepsen
  ?album dbo:artist dbr:Carly_Rae_Jepsen ;
         dbo:title ""Emotion"" .
  
  ?album dbo:composer ?writer .

  OPTIONAL { 
    ?writer dbo:band ?writerBand .
  }

  # Find the actor who is a musical artist in a show with Stacey Dash
  ?show dbo:starring dbr:Stacey_Dash ;
        dbo:starring ?actor .

  FILTER EXISTS {
    ?actor dbo:occupation dbr/Musical_artist .
  }
  
  OPTIONAL { 
    ?actor dbo:band ?actorBand .
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
391,65,test,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of the figure known as Hub City.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  ?movie a dbo:Film ;
         dbo:starring ?actor1, ?actor2 .
  
  FILTER(?actor1 = dbr:Roz_Ryan || ?actor2 = dbr:Roz_Ryan)
  
  OPTIONAL { ?movie a dbo:TelevisionShow . }
  OPTIONAL { ?movie a dbo:Work . }

  ?spouseClaimToFame a dbo:Work ;
                     dbo:spouseOf dbr:Sherry_Hormann .
  
  ?figure dbo:nativePlace dbr:Hub_City .

  FILTER(?actor1 = ?actor || ?actor2 = ?actor)
}
```

This query attempts to capture the relationships and entities described in the question. It selects actors from movies that are also works and television shows, ensuring Roz Ryan is one of them. It also considers the claim to fame of Sherry Hormann's spouse and the native place of a figure known as Hub City.",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
617,66,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of the commander in Battle of Panium and spouse of the child of Antiochus III the Great.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild
WHERE {
  # Seleucus II Callinicus and his child
  ?parent1 a dbo:Person ;
           dbo:spouse ?seleucus2 .
  ?seleucus2 dbr:Seleucus_II_Callinicus .

  # Child of Seleucus II Callinicus (grandparent)
  ?child1 dbo:childOf ?parent1 ;
         a dbo:Person .

  # Grandchild who is royalty
  ?grandchild dbo:childOf ?child1 ;
              a dbo:Royalty .

  # Commander in Battle of Panium and his child
  ?commander dbr:Battle_of_Panium_Commander .
  ?child2 dbo:childOf ?commander .

  # Parent relationship
  ?grandchild dbo:parent ?parent2 .
  ?parent2 dbo:child ?child2 .

  # Antiochus III the Great and his child
  ?antiochus3 dbr:Antiochus_III_the_Great .
  ?spouseChild dbo:childOf ?antiochus3 .

  # Spousal relationship
  ?grandchild dbo:spouse ?spouseChild .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
251,21,test,Give me the death place of the author of The Twelve Abbots of Challant and administration of Forza Italia (2013) and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?administration ?battleLocation
WHERE {
  # Death place of Bartolomeo Sacchi da Pavia (Platina)
  dbr:Bartolomeo_Sacchi_da_Pavia dbo:placeOfBirth ?birthPlace .
  OPTIONAL { dbr:Bartolomeo_Sacchi_da_Pavia dbo:deathPlace ?deathPlace . }

  # Administration of Forza Italia in 2013
  dbr:Silvio_Berlusconi dbo:positionHeld [
    a dbo:PoliticalOffice ;
    dbo:officeHolder dbr:Forza_Italia_(political_party) ;
    dbo:startDate ?start ;
    dbo:endDate ?end .
  ] .
  FILTER (YEAR(?start) <= 2013 && YEAR(?end) >= 2013)
  OPTIONAL { dbr:Silvio_Berlusconi dbo:memberOfPoliticalParty ?administration . }

  # Location of the Battle of Marengo
  dbr:Battle_of_Marengo dbo:location ?battleLocation .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
747,54,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on the birth date of Pavlo Khudzik and band of Shèna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfAmbaShepherd ?personBand ?shenaBand
WHERE {
  # Find the song written by Amba Shepherd and its band
  ?song dbo:author dbr:Amba_Shepherd .
  ?song dbo:performer ?bandOfAmbaShepherd .

  # Find Pavlo Khudzik's birth date
  ?pavloKhudzik dbo:birthday ?birthDate .

  # Find the person born on Pavlo Khudzik's birth date and their band
  ?person dbo:birthday ?birthDate .
  OPTIONAL { ?person dbo:band ?personBand }

  # Find Shèna's band
  dbr:Shèna dbo:band ?shenaBand .

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,53,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childBirthName ?parent
WHERE {
  # William IV and Adelaide of Saxe-Meiningen's child who is royalty
  ?child dbo:spouse ?spouse .
  ?child dbo:father dbr:William_IV,_King_of_the_United_Kingdom .
  ?child dbo:mother dbr:Adelaide_of_Saxe-Meiningen .

  # Princess Victoria Louise of Prussia's details
  OPTIONAL {
    ?child rdfs:label ""Princess Victoria Louise of Prussia""@en .
    ?child dbo:birthName ?childBirthName .
    ?child dbo:father ?parent .
  }

  # Prince Ernest Augustus of Hanover (born 1914)
  ?parent rdfs:label ""Prince Ernest Augustus of Hanover (1914–1987)""@en .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,55,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Ernest Augustus, Duke of Brunswick and his father
  dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:father ?father .
  
  # Princess Victoria Louise of Prussia and her spouse
  dbr:Victoria_Louise_of_Prussia dbo:spouse ?spouse .

  # Ensure the spouse is a child of Ernest Augustus' father
  ?spouse dbo:parent ?father .

  # Find children of Ernest Augustus who are royalty
  dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:child ?child .
  
  # Ensure the child is royalty
  ?child a dbo:Monarch .

  # The spouse must be one of these children
  ?spouse = ?child .

  # Find the parent of this child
  ?child dbo:parent ?parent .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
994,61,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist
WHERE {
  # Fredrik Thordendal is a member of a band
  dbr:Fredrik_Thordendal dbo:memberOf ?band .
  
  # The band is an organization, group, and has members who are musical artists
  ?band a dbo:Band ;
        a dbo:Organization ;
        a dbo:MusicalGroup .

  # Find the band member with persona Don Dokken
  ?bandMember dbo:memberOf ?band ;
              dbo:persona dbr:Don_Dokken .
  
  # Find other associated musical artists of this band member
  ?associatedArtist dbo:associatedBandMember ?bandMember .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
182,26,test,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warJagathDias ?nationalityTamaraKunanayakam ?authorEasterBombingWar
WHERE {
  # Jagath Dias and War
  OPTIONAL {
    ?jagathDias dbo:wikiPageWikiLink ?war .
    ?jagathDias dbr:Jagath_Dias .
    BIND(?war AS ?warJagathDias)
  }

  # Tamara Kunanayakam's Nationality
  ?tamaraKunanayakam dbo:nationality ?nationality .
  ?tamaraKunanayakam dbr:Tamara_Kunanayakam .
  BIND(?nationality AS ?nationalityTamaraKunanayakam)

  # Author of 2019 Sri Lanka Easter Bombings and War
  OPTIONAL {
    ?easterBombing dbo:author ?author .
    ?easterBombing dbr:2019_Sri_Lanka_Easter_bombings .
    ?author dbo:wikiPageWikiLink ?war .
    BIND(?war AS ?authorEasterBombingWar)
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
404,62,test,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent
WHERE {
  # Ernest Augustus, Crown Prince of Hanover's child who is royalty and a parent
  ?child dbo:spouse ?parent .
  ?child dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  
  # Ensure the child is royalty
  ?child rdf:type dbo:Monarch .

  # The parent of this child (Ernest Augustus) must be a grandchild of Prince George William of Hanover
  ?parent dbo:parent dbr:Prince_George_William_of_Hanover .
  
  # Ernest Augustus's spouse is Princess Victoria Louise of Prussia
  ?parent dbo:birthName ""Princess Victoria Louise of Prussia""@en .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
421,25,test,Give me the person born as Edin Dervišhalidović and native of the birthplace of Samir Bekrić and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band WHERE {
  # Find Edin Dervišhalidović
  VALUES (?edin) { dbr:Edin_Dervišhalidović }
  
  # Get Samir Bekrić's birthplace
  ?samir dbo:birthPlace ?birthPlace .
  VALUES (?samir) { dbr:Samir_Bekrić }

  # Ensure Edin Dervišhalidović is native to the same place as Samir Bekrić
  ?edin dbo:nativeName ""Edin Dervišhalidović""@en ;
        dbo:birthPlace ?birthPlace .

  # Find a band that has won awards and includes Edin Dervišhalidović
  ?band dbo:member ?edin .
  ?band dbo:award ?award .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
378,56,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Joaquín Blake and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?war ?claimToFame
WHERE {
  VALUES (?person ?label) { 
    (dbr:Thomas_Trigge ""Thomas Trigge"")
    (dbr:Joaquín_Blake ""Joaquín Blake"")
    (dbr:C._P._Gahn ""Carl Pontus Gahn"")
  }
  
  ?person dbo:nationality ?nationality .
  ?war dbo:participatedInMilitaryConflict ?person ;
       a dbo:MilitaryConflict .

  OPTIONAL {
    ?person dbo:notableFor ?claimToFame .
  }

  FILTER (lang(?label) = ""en"")
}
ORDER BY ?person
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
994,52,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and band member of Don Dokken.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist
WHERE {
  # Step 1: Find the musical artist associated with Watchtower
  ?watchtowerArtist dbo:musicalArtist dbr:Watchtower .
  
  # Step 2: Find the musical artist associated with that artist
  ?secondLevelArtist dbo:musicalArtist ?watchtowerArtist .

  # Step 3: Identify a band member of Meshuggah who is also part of an organization (band/group)
  ?meshuggahMember dbo:member dbr:Meshuggah .
  FILTER EXISTS { ?meshuggahMember dbo:organizationType ?orgType . 
                 VALUES ?orgType { dbo:Band dbo:MusicalGroup } }
  
  # Step 4: Determine the band member of Don Dokken
  ?donDokkenMember dbo:member dbr:Don_Dokken .

  # Final step: Find the associated musical artist that connects all these entities
  ?finalArtist dbo:musicalArtist ?secondLevelArtist .
  ?finalArtist dbo:musicalArtist ?meshuggahMember .
  ?finalArtist dbo:musicalArtist ?donDokkenMember .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
747,42,test,Give me the person born on the birth date of Pavlo Khudzik and band of Amba Shepherd and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personBornOnPavloKhudzikBirthDate ?ambaShepherdBand ?traceyElizabethMcSweenPersonBand
WHERE {
  # Get Pavlo Khudzik's birth date
  dbr:Pavlo_Khudzik dbo:birthday ?pavloKhudzikBirthDate .

  # Find person born on the same date as Pavlo Khudzik
  ?personBornOnPavloKhudzikBirthDate dbo:birthday ?pavloKhudzikBirthDate .
  
  # Get Amba Shepherd's band
  dbr:Amba_Shepherd dbo:band ?ambaShepherdBand .

  # Find person born as Tracey Elizabeth McSween
  ?traceyElizabethMcSweenPerson a dbo:Person ;
                               foaf:name ""Tracey Elizabeth McSween""@en .
  
  # Get the band of the person born as Tracey Elizabeth McSween
  ?traceyElizabethMcSweenPerson dbo:band ?traceyElizabethMcSweenPersonBand .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
281,20,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceCountry ?war
WHERE {
  # Find Bob Heffron's birthplace that is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country ;
              rdfs:label ?birthPlaceCountry .

  # Find the war associated with Beauchamp Seymour, 1st Baron Alcester
  dbr:Beauchamp_Seymour,_1st_Baron_Alcester dbo:associatedWithWar ?war .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
747,43,test,"Give me the person born on 1985-04-29 and band of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?bandOfShena ?songWriterBand
WHERE {
  # Find the person born on 1985-04-29
  ?person dbo:birthday ""1985-04-29""^^xsd:date .
  
  # Find the band associated with Shèna
  dbr:Shèna dbo:band ?bandOfShena .

  # Find the song titled ""Amba Shepherd""
  ?song dbp:title ""Amba Shepherd""@en ;
        dbo:lyricsBy ?songWriter .

  # Find the band of the songwriter
  ?songWriter dbo:band ?songWriterBand .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
959,27,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerOfManager
WHERE {
  # Find the team for the 1998 Kashima Antlers season
  dbr:Kashima_Antlers_1998_season dbo:team dbr:Kashima_Antlers .

  # Identify the manager of this team
  dbr:Kashima_Antlers dbo:manager ?sportsManager .
  
  # Ensure that the manager is a sports manager
  ?sportsManager rdf:type dbo:SportsManager .

  # Find the manager of this sports manager
  ?sportsManager dbo:manager ?managerOfManager .
}
```",3,4,4,3,1,3,3,71,0,0,10,0,0.0,0
488,29,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei and birth place of Enomoto Takeaki.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceFather ?administrationGoYozei ?birthPlaceEnomoto
WHERE {
  # Yūki Hideyasu's father who is a politician
  dbr:Yūki_Hideyasu dbo:father ?father .
  ?father rdf:type dbo:Politician .

  # Death place of Yūki Hideyasu's father
  ?father dbo:deathPlace ?deathPlaceFather .

  # Administration of Emperor Go-Yōzei
  dbr:Emperor_Go-Yōzei dbo:office ?administrationGoYozei .

  # Birthplace of Enomoto Takeaki
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceEnomoto .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
92,68,test,"Give me the band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?associatedArtist WHERE {
  # Find Joe Satriani's band
  dbr:Joe_Satriani a dbo:Musician ;
                   dbo:bandMember ?band .

  # Find an artist associated with Return to Nuke 'Em High Volume 1
  OPTIONAL {
    ?actor a dbo:Actor ;
           dbo:actedIn dbr:Return_to_Nuke_'Em_High_Volume_1 .
    ?actor dbo:associatedBandMember ?artist .
    
    # Ensure the artist is also related to Nevermore (2006 film)
    ?artist dbo:bandMember ?relatedBand .
    ?relatedBand rdfs:label ""Nevermore""@en .
  }
  
  # Link the associated artist
  BIND(?artist AS ?associatedArtist)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,42,test,Give me the parent of the native of Budapest and child of Archduke Joseph August of Austria and parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  ?native dbo:birthPlace dbr:Budapest .
  
  ?parent dbo:child ?native .
  ?parent dbo:parent dbr:Archduke_Joseph_August_of_Austria .

  ?grandChild dbo:parent ?parent .
  ?grandChild dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
}
```",5,5,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
328,38,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Ferenc Szálasi's commander
  ?szalasiCommander dbo:commander ?ferencSzalasi .
  ?ferencSzalasi rdfs:label ""Ferenc Szálasi""@en .

  # Joseph Stalin's government agency leader
  ?stalinLeader dbo:leader ?josephStalin .
  ?josephStalin rdfs:label ""Joseph Stalin""@en .

  # The person who is both commander and leader
  ?szalasiCommander dbp:name ?personName .
  ?stalinLeader dbp:name ?personName .

  FILTER(LANG(?ferencSzalasi) = 'en' && LANG(?josephStalin) = 'en')
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
801,46,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?work a dbo:Songs ;
        dbo:artist dbr:50_Cent ;
        dbo:performer dbr:The_Shadow .
  
  ?work dbo:producer ?producer .
}
```

This query does the following:
- Selects works that are songs (`dbo:Songs`) and involve both 50 Cent as an artist and The Shadow as a performer.
- Retrieves the producer of such works.",5,8,6,3,2,3,3,71,0,0,27,0,0.0,0
232,58,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Sean Pertwee as an actor
  dbr:Sean_Pertwee dbo:actor ?actor .
  
  # Films and military conflicts associated with Sean Pertwee
  OPTIONAL { ?film dbo:actor dbr:Sean_Pertwee . }
  OPTIONAL { ?conflict dbo:participant dbr:Sean_Pertwee . }

  # Jon Pertwee as the father of Sean Pertwee
  dbr:Jon_Pertwee dbo:child dbr:Sean_Pertwee .

  # British settlement that is a residence of a French politician
  ?settlement a dbo:Settlement ;
              dbo:nativePlace ?politician .
  
  ?politician a dbo:Politician ;
             dbo:officeHolder ?office ;
             dbo:nationality dbr:France .
             
  ?residence dbo:settlement ?settlement ;
             dbo:resident ?politician .

  # Ensure the settlement is in Britain
  ?settlement dbo:country dbr:United_Kingdom .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
827,17,test,"Give me the child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach and father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father ?spouse
WHERE {
  # Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach
  dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:child ?child .
  
  # Father of the child (should be Charles Alexander)
  ?child dbo:father ?father .
  FILTER (?father = dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach) .

  # Princess Pauline of Saxe-Weimar-Eisenach
  dbr:Princess_Pauline_of_Saxe-Weimar-Eisenach dbo:spouse ?spouse .
  
  # Ensure both father and spouse are royalty
  ?father a dbo:Monarch .
  ?spouse a dbo:Monarch .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
659,59,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  ?officeHolder a dbo:OfficeHolder ;
               dbo:country dbr:Kingdom_of_Ireland ;
               dbo:position ?position .
  
  ?militaryConflict a dbo:MilitaryConflict ;
                    dbo:commander ?commander .

  ?unit a dbo:MilitaryUnit, dbo:Organization ;
        rdfs:label ""Polish Horse""@en .

  FILTER (?officeHolder = ?commander)
}
```",6,11,7,3,2,3,3,71,0,0,71,0,0.0,0
16,63,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  # Satomi Ishihara's profession
  ?satomiIshihara a dbo:Person ;
                  foaf:name ""Satomi Ishihara"" .
  
  ?satomiIshihara dbo:profession ?professional .

  # Ted McGinley's birth name
  ?tedMcGinley a dbo:Person ;
               foaf:name ""Ted McGinley"" .
  
  ?tedMcGinley foaf:nick ?birthNameTed .

  # Gigi Rice's birth name
  ?gigiRice a dbo:Person ;
            foaf:name ""Gigi Rice"" .
  
  ?gigiRice foaf:nick ?birthNameGigi .

  # Find the spouse of Ted McGinley (by birth name)
  ?spouse a dbo:Person ;
          dbo:spouse ?tedMcGinley ;
          foaf:nick ?birthNameTed .

  # Ensure this person is connected to Gigi Rice
  ?spouse dbo:spouse ?gigiRice .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,46,test,Give me the war of the person born as the birth name of Carl Pontus Gahn and war of the commander in Peninsular War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?war1 ?war2 WHERE {
  # Find Carl Pontus Gahn's birth name and wars he was involved in
  dbr:Carl_Pontus_Gahn dbo:birthName ?birthName .
  
  OPTIONAL { 
    ?person dbo:birthName ?birthName .
    ?person dbo:participatedInWar ?war1 .
  }
  
  # Find the commander of the Peninsular War and wars they were involved in
  dbr:Peninsular_War dbo:commander ?commander .
  
  OPTIONAL {
    ?commander dbo:participatedInWar ?war2 .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
356,20,test,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season and team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player
WHERE {
  # Find the predecessor of the 2015 Sacramento Republic FC season
  ?season1 a dbo:SoccerSeason ;
           dbo:club dbr:Sacramento_Republic_FC ;
           dbo:year ""2015""^^xsd:gYear .
  
  OPTIONAL { 
    ?predecessor a dbo:SoccerSeason ;
                 dbo:succeeds ?season1 .
  }
  
  # Find the successor of that predecessor
  OPTIONAL {
    ?successor a dbo:SoccerSeason ;
               dbo:precedes ?predecessor .
  }

  # Ensure it's also a soccer club season
  FILTER (?successor = ?season1 || EXISTS { ?successor a dbo:SoccerClubSeason })

  # Find the player associated with this season/team
  ?player a dbo:SoccerPlayer, dbo:SoccerManager ;
          dbo:playsForTeam ?team .

  # Ensure the team is from the birthplace of Gary Williams
  dbr:Gary_Williams_(footballer,_born_1960) dbo:nationality dbr:England ;
                                         dbo:birthPlace ?settlement .
  
  FILTER (dbo:settlementType(?settlement, dbr:Settlement))
  
  # Ensure the player is from this settlement and is a soccer player/manager
  ?nativePlayer a dbo:SoccerPlayer, dbo:SoccerManager ;
                dbo:nationality dbr:England ;
                dbo:birthPlace ?settlement .
  
  ?team dbo:location ?settlement .

}",6,12,7,3,2,3,2,20,0,0,1,0,0.0,0
645,17,test,Give me the entity in United Kingdom and alma mater of the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater
WHERE {
  # Adela Pankhurst's parent
  dbr:Adela_Pankhurst dbo:parent dbr:Richard_Pankhurst .

  # Richard Pankhurst's child (Adela)
  dbr:Richard_Pankhurst dbo:child dbr:Adela_Pankhurst .

  # Alma mater of Adela Pankhurst
  dbr:Adela_Pankhurst dbp:almaMater ?almaMater .

  # Ensure the alma mater is in the United Kingdom
  ?almaMater dbo:location dbr:United_Kingdom .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
696,17,test,Give me the landmark at elevation of the award of the commander in Battle of Chishui River and birth place of Tim Brennan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v3 . <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark ?birthPlace
WHERE {
  # Find the elevation of the award given to the commander in the Battle of Chishui River
  ?battle a dbo:Battle ;
          dbo:commander ?commander .
  FILTER (str(?battle) = ""Battle_of_Chishui_River"")
  
  ?award dbo:recipient ?commander ;
         dbo:elevation ?elevation .

  # Find landmarks at that elevation
  ?landmark dbo:elevation ?elevation .

  # Find the birthplace of Tim Brennan
  dbr:Tim_Brennan dbo:birthPlace ?birthPlace .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
184,54,test,"Give me the parent of Archduchess Ilona of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the native of Budapest.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfIlona ?childOfChildRoyalty ?parentOfBudapestNative
WHERE {
  # Parent of Archduchess Ilona of Austria
  dbr:Archduchess_Ilona_of_Austria dbo:parent ?parentOfIlona .

  # Parent of Archduke Ladislaus Philipp of Austria
  dbr:Archduke_Ladislaus_Philipp_of_Austria dbo:parent ?parentLadislaus .
  
  # Child of the parent who is royalty
  ?childRoyalty dbo:parent ?parentLadislaus ;
               a dbo:Royal .

  # Child of that child (who is royalty)
  ?childOfChildRoyalty dbo:parent ?childRoyalty .

  # Native of Budapest and their parent
  ?budaNative dbo:nativePlace dbr:Budapest .
  ?budaNative dbo:parent ?parentOfBudapestNative .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
767,63,test,"Give me the reference to the alter ego of Black Hood and alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alterEgo ?almaMater ?settlement ?writer
WHERE {
  # Alter ego of Black Hood
  ?blackHood dbo:alias ""Black Hood"" .
  ?blackHood dbo:alterEgo ?alterEgo .

  # Alma mater of George K. Nash's administration
  dbr:George_K._Nash dbo:almaMater ?almaMater .

  # Entity in the administration that is a settlement
  ?administration dbo:member dbr:George_K._Nash .
  ?administration dbo:settlement ?settlement .

  # Writer of ""Where It's At"" (Dustin Lynch album)
  dbr:""Where_It%27s_At_(Dustin_Lynch_album)"" dbo:lyricsBy ?writer .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
54,53,test,"Give me the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v3 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfThadoMinsaw ?officeHolderRoyalty
WHERE {
    # Thado Minsaw of Prome and his parent
    ?thadoMinsaw a dbo:Monarch ;
                 dbo:country dbr:Prome ;
                 dbo:father ?parentOfThadoMinsaw .

    # Thinkhaya of Pagan, his child, and the predecessor of that child
    ?thinkhaya a dbo:Monarch ;
               dbo:country dbr:Pagan ;
               dbo:child ?childOfThinkhaya .
    
    ?childOfThinkhaya dbo:father ?thinkhaya ;
                      dbo:predecessor ?predecessor .

    # Thihapate of Mohnyin, office holder and royalty
    ?thihapate a dbo:Monarch ;
               dbo:country dbr:Mohnyin ;
               dbo:child ?officeHolderRoyalty .
    
    ?officeHolderRoyalty a dbo:OfficeHolder ;
                         dbo:royalty true ;
                         dbo:father ?predecessor .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
161,58,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # El Director's military force as an event
  ?elDirectorForce a dbo:MilitaryConflict ;
                   dbo:commander ?commander .
  
  # Ensure the commander is also an event
  ?commander a dbo:Event .

  # Francisco Largo Caballero's military force during Rif War
  dbr:Francois_Largo_Caballero dbo:militaryForce ?caballeroForce ;
                               dbo:participatedIn dbr:Rif_War .
  
  ?caballeroForce a dbo:MilitaryConflict ;
                  dbo:commander ?commander .

  # Ensure the force is both a societal event and military conflict
  ?elDirectorForce a dbo:SocietalEvent .
}
```",6,9,7,3,3,3,3,71,0,0,11,0,0.0,0
9,43,test,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as QUB.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterJohn ?almaMaterAwardee
WHERE {
  # Alma mater of John Alderdice, Baron Alderdice
  dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMaterJohn .

  # Awardees of Royal Medals connected to QUB
  ?awardee dbo:awardReceived ?award .
  ?award rdfs:label ?awardLabel .
  FILTER(CONTAINS(LCASE(?awardLabel), ""royal medal"") && CONTAINS(LCASE(?awardee), ""qub"")) .
  ?awardee dbo:almaMater ?almaMaterAwardee .

}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
645,19,test,"Give me the entity in the residence, that is a country, of James Wilkes Maurice and alma mater of the child of the parent of Adela Pankhurst.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?entity
WHERE {
  ?james dwiki:residence ?residence .
  ?residence rdf:type dbo:Country .

  ?adela dbo:parent ?parent .
  ?parent foaf:sibling ?sibling .
  ?sibling dbo:child ?child .
  ?child dbo:almaMater ?entity .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
617,20,test,Give me the spouse of the child of Antiochus III the Great and child of Antiochus III the Great.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?spouse WHERE {
  # Find Antiochus III the Great
  dbr:Antiochus_III_the_Great dbo:child ?child .
  
  # Find spouse of each child
  OPTIONAL { 
    ?child dbo:spouse ?spouse .
  }
}
```",3,3,4,2,2,3,3,71,4,4,0,0.5,1.0,0.6666666666666666
547,29,test,Give me the resting place of Alan Cunningham and resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?restingPlace WHERE {
  # Alan Cunningham's resting place
  { 
    ?person rdfs:label ""Alan Cunningham""@en .
    FILTER NOT EXISTS { ?person dbo:abstract ?a . FILTER(CONTAINS(LCASE(?a), ""disambiguation"")) }
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  } UNION

  # Actor from ""Enemy at the Door""
  {
    ?actor dbo:film ?film .
    ?film rdfs:label ""Enemy at the Door""@en .
    OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
  } UNION

  # James Burton (Egyptologist)
  {
    ?person rdfs:label ""James Burton (Egyptologist)""@en .
    FILTER NOT EXISTS { ?person dbo:abstract ?a . FILTER(CONTAINS(LCASE(?a), ""disambiguation"")) }
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  }

  # Ensure we get the label for each person
  SERVICE <http://dbpedia.org/sparql> {
    ?person rdfs:label ?name .
    FILTER(LANG(?name) = ""en"")
  }
}
ORDER BY ?person",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
994,50,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist
WHERE {
  # Fredrik Thordendal's band membership
  dbr:Fredrik_Thordendal dbo:memberOf ?band .
  
  # Band is a group and an organization
  ?band rdf:type dbo:Band ;
        rdf:type dbo:Organization ;
        rdf:type dbo:MusicalGroup .

  # Donald Maynard Dokken's birth details
  dbr:Don_Dokken dbp:birthday ?birthDate ;
                 dbo:associatedBand ?dokkenBand .
  
  # Linking the bands through Fredrik Thordendal and Don Dokken
  ?band = ?dokkenBand .

  # Associated musical artist of Fredrik Thordendal's band member
  ?bandMember dbo:memberOf ?band ;
              dbo:associatedMusicalArtist ?associatedArtist .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
488,20,test,"Give me the birth place of Enomoto Takeaki and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEnomoto ?deathPlaceFatherYuki
WHERE {
  # Enomoto Takeaki's birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceEnomoto .

  # Yūki Hideyasu's father, who is a politician
  OPTIONAL {
    dbr:Yūki_Hideyasu dbo:father ?fatherYuki .
    ?fatherYuki rdf:type dbo:Politician .
    ?fatherYuki dbo:deathPlace ?deathPlaceFatherYuki .
  }
}
```",3,4,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
392,26,test,"Give me the entity in the region, that is a country, of Central European Time and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of Central European Time.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement ?country ?province
WHERE {
  # Find Sebastiano Bianchetti's residence
  ?person rdfs:label ""Sebastiano Bianchetti""@en .
  ?person dbo:residence ?residence .

  # Ensure the residence is a settlement and Italian
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbr:Italy .

  # Find the province of the residence
  OPTIONAL { ?residence dbo:administrativeRegion ?province . }

  # Identify countries using Central European Time
  ?timeZone rdfs:label ""Central European Time""@en .
  ?country dbo:timezone ?timeZone ;
           rdf:type dbo:Country .

  # Ensure the country of the residence matches CET's country
  FILTER (?residence = ?settlement)
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
994,57,test,"Give me the associated musical artist of S.A. Slayer and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist1 ?associatedArtist2
WHERE {
  # S.A. Slayer's associated musical artist
  dbr:S._A._Slayer dbo:associatedMusicalArtist ?associatedArtist1 .

  # Band member of a band that is both a group and an organization
  ?bandMember dbo:memberOfBand ?band .
  ?band rdf:type dbo:Band ;
        rdf:type dbo:Organization ;
        rdf:type dbo:Group .
  
  # Fredrik Thordendal's band (which is also an organization)
  dbr:Fredrik_Thordendal dbo:memberOfBand ?fredrikBand .
  ?fredrikBand rdf:type dbo:Organization .

  # Band member of the person born as Donald Maynard Dokken
  dbr:Don_Dokken dbo:birthName ""Donald Maynard Dokken"" ;
                 dbo:memberOfBand ?dokkenBandMember .
  
  # Linking band members to associated artists
  ?bandMember dbo:associatedMusicalArtist ?associatedArtist2 .

  # Ensure the same person is considered in both contexts
  FILTER (?bandMember = ?dokkenBandMember)
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
838,17,test,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa and band of Raša Đelmaš.","SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
    # YU Grupa as a group and organization
    dbr:YU_Grupa dbo:type/dbo:Band ;
                dbo:member ?yugrupaMember .

    # Raša Đelmaš's band
    dbr:Raša_Đelmaš dbo:band ?rasaBand .
    
    # Find common member between YU Grupa and Raša Đelmaš's band
    ?rasaBand dbo:type/dbo:Band ;
              dbo:member ?commonMember .

    FILTER (?yugrupaMember = ?commonMember)
}
```",4,7,5,3,2,3,2,20,0,0,4,0,0.0,0
994,27,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?memberName
WHERE {
  ?dokken a dbo:MusicalArtist ;
          foaf:name ""Don Dokken"" .
  
  ?band dbo:musicalArtist ?dokken ;
        dbo:bandMember ?member .

  ?member foaf:name ?memberName .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
281,54,test,"Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?warOfAwardee ?warOfNZArmy ?birthPlaceCountry
WHERE {
  # Awardee of Knight Grand Cross of the Order of the Bath
  ?awardee dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  
  # Wars involving the awardee
  ?awardee dbo:militaryConflict ?warOfAwardee .

  # War involving New Zealand Army
  ?nzArmy dbp:country dbr/New_Zealand ;
          dbo:militaryConflict ?warOfNZArmy .

  # Leader of the 1962 NSW state election
  ?election dbp:electionDate ""1962-03-10""^^xsd:date ;
            dbo:winner ?leader .
  
  # Ensure leader is a politician
  ?leader rdf:type dbo:Politician .

  # Birthplace country of the leader
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country ;
              rdfs:label ?birthPlaceCountry .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,26,test,Give me the parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?setiI dbo:wikiPageRedirects db:Seti_I .
  ?setiI dbo:child ?child1 .
  ?child1 dbo:child ?grandChild .
  ?grandChild dbo:parent ?parent .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
547,54,test,Give me the resting place of the child of James Burton (property developer) and resting place of the actor of the show with Emily Richard and resting place of Alan Cunningham.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?childRestingPlace ?actorRestingPlace ?alanCunninghamRestingPlace
WHERE {
  # Resting place of the child of James Burton (property developer)
  dbr:James_Burton_(property_developer) dbo:spouse ?spouse .
  ?spouse foaf:children ?child .
  ?child dbo:deathPlace ?childDeathPlace .

  OPTIONAL { 
    ?childDeathPlace dbo:location ?childRestingPlace .
  }

  # Resting place of the actor from a show with Emily Richard
  dbr:Emily_Richard dbo:actedIn ?show .
  ?actor dbo:actedIn ?show .
  ?actor dbo:deathPlace ?actorDeathPlace .

  OPTIONAL { 
    ?actorDeathPlace dbo:location ?actorRestingPlace .
  }

  # Resting place of Alan Cunningham
  dbr:Alan_Cunningham dbo:deathPlace ?alanCunninghamDeathPlace .

  OPTIONAL {
    ?alanCunninghamDeathPlace dbo:location ?alanCunninghamRestingPlace .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
294,22,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of the architect of P. D. Houston Jr. House.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?politicianRestingPlace ?architectRestingPlace WHERE {
  # Find the politician who received the Distinguished Service Medal (U.S. Army)
  ?person dbo:recipient dbr:Distinguished_Service_Medal_(United_States_Army) .
  ?person dbo:politicalRole ?role .
  
  OPTIONAL { 
    ?person dbo:finalRestingPlace ?politicianRestingPlace .
  }
  
  # Find the architect of P. D. Houston Jr. House
  ?architect dbo:architectOf dbr:P._D._Houston_Jr._House .
  
  OPTIONAL {
    ?architect dbo:finalRestingPlace ?architectRestingPlace .
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
232,47,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  # Identify John Pertwee and his child who is an actor, narrator, and producer
  dbr:John_Pertwee dbo:child ?child .
  
  # Ensure the child has professions as Actor, Narrator, and Producer
  ?child dbo:occupation dbr:Actor ;
         dbo:occupation dbr:Narrator ;
         dbo:occupation dbr:Producer .

  # Find works that are claims to fame involving a film or military conflict
  ?child dbo:famousFor ?work .
  
  FILTER (
    (EXISTS { ?work rdf:type dbr:Film } || EXISTS { ?work rdf:type dbr:MilitaryConflict })
  )

  # Retrieve the actor associated with this work
  OPTIONAL {
    ?work dbo:actor ?actor .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
161,29,test,"Give me the commander in Biscay Campaign and military force of Rif War and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?biscayMilitaryForce ?rifWarMilitaryForce ?societalEvent
WHERE {
  # Francisco Largo Caballero's involvement in Biscay Campaign and Rif War
  ?biscayCampaign dbo:commander ?commander .
  ?rifWar dbo:commander ?commander .
  
  FILTER(?commander = dbr:Francisco_Largo_Caballero)

  # Military forces involved in the campaigns/wars
  ?biscayCampaign dbo:militaryForce ?biscayMilitaryForce .
  ?rifWar dbo:militaryForce ?rifWarMilitaryForce .

  # Societal event related to Francisco Largo Caballero that is also a military conflict
  ?societalEvent dbo:agent ?commander ;
                rdf:type dbo:MilitaryConflict .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
16,47,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional (SAMPLE(?profession) AS ?Profession)
WHERE {
  # Find the actor of ""Unnatural""
  ?actor dbo:starringIn dbr:Unnatural_(TV_series);
         foaf:name ?actorName.

  # Find Ted Martin McGinley and his spouse
  ?ted a dbo:Person;
       foaf:name ""Ted Martin McGinley""@en;
       foaf:mbox ?tedEmail.
  
  ?spouse foaf:mbox ?tedEmail;
          foaf:name ?spouseName.

  # Check if the actor is also the spouse of Ted Martin McGinley
  FILTER(?actor = ?spouse)

  # Get the profession of the professional (actor and spouse)
  ?professional dbo:profession ?profession.
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
427,24,test,Give me the party of Romano Prodi and party of the father of Lamberto Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiPartyLabel ?andreottiFatherPartyLabel
WHERE {
  # Romano Prodi's party affiliation
  dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
  ?prodiParty rdfs:label ?prodiPartyLabel .

  # Lamberto Andreotti's father and his party affiliation
  dbr:Lamberto_Andreotti dbo:father ?andreottiFather .
  ?andreottiFather dbo:partyAffiliation ?andreottiFatherParty .
  ?andreottiFatherParty rdfs:label ?andreottiFatherPartyLabel .

  # Filter to ensure labels are in English
  FILTER (lang(?prodiPartyLabel) = 'en')
  FILTER (lang(?andreottiFatherPartyLabel) = 'en')
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
801,45,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in  and producer of Westside Story (song).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the album ""What U See Is What U Get""
  dbr:What_U_See_Is_What_U_Get a dbo:MusicalWork ;
                               dbo:composer ?writer .

  # Ensure the writer is both a musical artist and an artist
  ?writer a dbo:MusicalArtist, dbo:Artist .

  # Find ""Westside Story (song)"" where the writer was a producer
  dbr:Westside_Story_(song) a dbo:MusicalWork ;
                            dbo:producer ?writer .

  # Bind the writer to the artist variable
  BIND(?writer AS ?artist)
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
747,62,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the writer of the work, that is a song, of Amba Shepherd and band of Shèna.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person
WHERE {
  ?decedent dbo:dateOfBirth ?birthDate .
  
  ?person dbo:dateOfBirth ?birthDate ;
          a dbo:Athlete, dbo:SoccerPlayer ;
          dbo:birthPlace dbr:Zolotonosha .

  OPTIONAL { 
    ?writer dbo:work ?song .
    ?song rdf:type dbo:Song .
    ?song dbo:artist dbr:Amba_Shepherd .
    
    ?band dbo:member ?person .
    ?band dbo:member ?writer .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
328,45,test,"Give me the commander in Eastern Front (World War II) and awardee of Order of Suvorov and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?orderAwarded ?agencyLeader ?gustavJonson
WHERE {
  ?commander a dbo:MilitaryPerson ;
             dbo:rank ?rank ;
             dbo:awards ?award .
  
  FILTER regex(?rank, ""Eastern Front"", ""i"") .
  FILTER EXISTS { ?award dbp:name ""Order of Suvorov"" } .

  ?agencyLeader dbo:leader ?commander ;
                a dbo:GovernmentAgency .

  ?gustavJonson a dbo:OfficeHolder, dbo:Politician ;
                 dbo:office ?office ;
                 dbo:head ?agencyLeader .
  
  FILTER regex(?gustavJonson, ""Gustav Jonson"", ""i"") .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
492,36,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
  # Find the capital of Khemis Miliana District
  dbr:Khemis_Miliana_District dbo:capital ?capital .
  
  # Ensure the capital is a settlement
  ?capital rdf:type dbo:Settlement .

  # Find persons who died in this capital
  ?person dbo:deathPlace ?capital ;
          rdfs:label ?name .

  # Ensure the person also died in French Algeria
  OPTIONAL {
    ?person dbo:deathPlace dbr:French_Algeria .
  }

  FILTER EXISTS { ?person dbo:deathPlace dbr:French_Algeria }
}
```",4,5,5,3,2,3,3,71,0,0,16,0,0.0,0
16,18,test,Give me the professional in Actress and spouse of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Actress .
  ?person foaf:name ""Georgeanne Marie Rice""@en .
  ?person dbo:spouse dbr:Ted_McGinley .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
404,65,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child
WHERE {
  ?father dbo:spouse ?mother .
  ?father foaf:name ""Ernest Augustus, Duke of Brunswick""@en .
  
  ?mother a dbo:Princess ;
          foaf:birthday ?birthDate .

  ?parentChild dbo:parent ?mother ;
               a dbo:RoyalFamilyMember .

  ?grandParentChild dbo:parent ?parentChild ;
                    a dbo:RoyalFamilyMember .

  ?greatGrandParentChild dbo:parent ?grandParentChild ;
                         a dbo:RoyalFamilyMember .

  ?princeGeorgeWilliam foaf:name ""Prince George William of Hanover""@en .
  
  ?greatGrandParentChild dbo:child ?princeGeorgeWilliam .

  ?child dbo:parent ?greatGrandParentChild ;
         a dbo:RoyalFamilyMember .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
959,47,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?memberName WHERE {
  # Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  
  # Alma mater conditions
  ?university a dbo:University ;
              a dbo:Organisation ;
              a dbo:EducationalInstitution ;
              dbp:country ""Japan"" .

  # Leader of the 2010 Japanese House of Councillors election and their country
  dbr:2010_Japanese_House_of_Councillors_election dbo:leader ?leader .
  ?leader dbo:nativeCountry ?country .

  # Member of the alma mater who is native to the leader's country
  ?member dbo:almaMater ?university ;
          dbo:nativePlace ?country .
  
  # Return member name
  ?member rdfs:label ?memberName .
  
  FILTER (lang(?memberName) = ""en"")
}
ORDER BY ?memberName",5,11,6,3,2,3,3,71,0,0,84,0,0.0,0
427,63,test,"Give me the party of the father of Lamberto Andreotti and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v6 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherPartyLabel ?michelePintoPartyLabel ?romanoProdiPartyLabel
WHERE {
  # Lamberto Andreotti's father and his party
  dbr:Lamberto_Andreotti dbo:father ?father .
  ?father dbo:party ?fatherParty .
  ?fatherParty rdfs:label ?fatherPartyLabel .

  # Michele Pinto and his party
  dbr:Michele_Pinto dbo:party ?michelePintoParty .
  ?michelePintoParty rdfs:label ?michelePintoPartyLabel .

  # Romano Prodi as a politician and office holder, and his party
  dbr:Romano_Prodi dbo:officeHolder true ;
                   dbo:politician true ;
                   dbo:party ?romanoProdiParty .
  ?romanoProdiParty rdfs:label ?romanoProdiPartyLabel .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
778,16,test,"Give me the entity in the award of Ralph L. Brinster and author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find the award associated with Ralph L. Brinster
  ?award dbo:recipient dbr:Ralph_L._Brinster .
  
  # The entity related to this award
  ?award dbo:relatedEntity ?entity .

  # Ensure that the entity is a work authored by Bill Joy and is software
  ?entity dbo:author dbr:Bill_Joy ;
          rdf:type dbo:Software .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
9,66,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?almaMater ?nickname WHERE {
  # Find the politician who is a mayor of Northern Ireland Forum
  ?politician dbo:positionHeld ?mayorPosition .
  ?mayorPosition dbo:officeHolder ?politician ;
                 dbo:officeName ""Northern Ireland Forum"" .

  # Find the awardee of the Royal Medal
  ?awardee dbo:award ?royalMedalAward .
  ?royalMedalAward rdfs:label ""Royal Medal""@en .

  # Both have the same alma mater
  ?politician dbo:almaMater ?almaMater ;
              rdf:type dbo:Politician .
  ?awardee dbo:almaMater ?almaMater ;
           rdf:type dbo:Person .

  # Alma mater is an educational institution and organization in Northern Ireland
  ?almaMater a dbo:EducationalInstitution, dbo:Organisation ;
             dbo:country dbr:Northern_Ireland .

  # Get the nickname of the alma mater
  OPTIONAL { ?almaMater foaf:nick ?nickname }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
281,66,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?result <http://dbpedia.org/ontology/place> ?v6 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceCountry ?militaryUnit ?awardee
WHERE {
  # Bob Heffron's birthplace that is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:City ;
              dbo:country ?birthPlaceCountry .

  # Profession of an office holder and politician in the New Zealand Army
  ?politician rdf:type dbo:Politician ;
              dbo:officeHolderOf ?office ;
              dbo:militaryUnit ?militaryUnit .
  ?office dbo:organization dbr:New_Zealand_Army .

  # Awardee of Knight Grand Cross of the Order of the Bath
  ?awardee dbo:awardReceived dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath ;
           dbo:militaryUnit ?militaryUnit .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
747,69,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v7 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete ?bandOfShena ?writerBand 
WHERE {
  # Find the birth date of ""the person decedent""
  ?decedent dbo:dateOfBirth ?birthDate .

  # Find an athlete and soccer player born on that date in Zolotonosha
  ?athlete dbo:birthDate ?birthDate ;
           dbo:sport dbr:Soccer ;
           dbo:birthPlace dbr:Zolotonosha .
  
  # Find the band of Shèna (Shena Easton)
  ?shena dbp:birthName ""Shèna"" ;
         dbo:band ?bandOfShena .

  # Find the writer of Apollo by Hardwell
  ?apollo dbo:lyricsWriter ?writer ;
          rdfs:label ""Apollo""@en .
  
  # Find the band associated with the writer
  ?writer dbo:band ?writerBand .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
92,21,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of Joseph Michael.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName WHERE {
  # Find members of Nevermore
  ?bandMember dbo:memberOf dbr:Nevermore .
  
  # Ensure the member is an artist
  ?bandMember a dbo:MusicalArtist .

  # Check if this member has any association with Joseph Michael
  ?association dbo:artist dbr:Joseph_Michael ;
               dbo:associatedBand ?bandMember .

  # Get the name of the band member
  ?bandMember rdfs:label ?memberName .
  
  FILTER (lang(?memberName) = 'en')
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
161,70,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander
WHERE {
  # El Director related event and force
  ?event1 dbo:agent dbr:El_Director .
  ?force1 dbo:participatesIn ?event1 .
  ?force1 a dbo:MilitaryForce .
  
  OPTIONAL { 
    ?event1 dbo:isPartOf ?societalEvent1 .
    ?event1 dbo:isPartOf ?militaryConflict1 .
  }
  
  # Francisco Franco related event and force
  ?event2 dbo:agent dbr:Franco_Francisco .
  ?force2 dbo:participatesIn ?event2 .
  ?force2 a dbo:MilitaryForce .

  OPTIONAL { 
    ?event2 dbo:isPartOf ?societalEvent2 .
    ?event2 dbo:isPartOf ?militaryConflict2 .
  }
  
  # Predecessor of Indalecio Prieto
  ?prietoPredecessor dbo:predecessor dbr:Indalecio_Prieto .
  ?force3 dbo:participatesIn ?event3 .
  ?force3 a dbo:MilitaryForce .

  OPTIONAL { 
    ?event3 dbo:isPartOf ?societalEvent3 .
    ?event3 dbo:isPartOf ?militaryConflict3 .
  }
  
  # Commander of the forces
  ?commander dbo:commanderOf ?force1 ;
             dbo:commanderOf ?force2 ;
             dbo:commanderOf ?force3 .
}",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
959,62,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of 2013 Júbilo Iwata season and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater
WHERE {
  ?person dbo:birthYear ""1958""^^xsd:gYear ;
          dbo:managerOf dbr:2013_Júbilo_Iwata_season .
  
  ?person dbo:almaMater ?almaMater .
  FILTER (strstarts(str(?almaMater), str(dbr:Japan)) && 
          (dbo:organizationalStructure ?org) &&
          (dbo:type ?type1, ?type2, ?type3) .
  FILTER (?type1 = dbo:University || ?type2 = dbo:EducationalInstitution || ?type3 = dbo:Organization)
  
  ?politician dbo:leaderOf dbr:2010_Japanese_House_of_Councillors_election ;
              dbo:nativeCountry ?country .
  ?person dbp:residence ?country .

}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
285,18,test,Give me the parent of the child of the spouse of Aristotle Onassis and spouse of the professional in .,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfChild ?professionalIn
WHERE {
  # Step 1: Find Aristotle Onassis's spouse
  ?spouse a dbo:Spouse; 
          foaf:partner ?aristotleOnassis.
  
  FILTER(?aristotleOnassis = dbpedia:Aristotle_Onassis)

  # Step 2: Determine the child of that spouse
  ?child dbo:parent ?spouse.

  # Step 3: Find the parent of this child
  OPTIONAL {
    ?parentOfChild dbo:child ?child.
  }

  # Step 4: Identify a professional in (assuming you want any profession)
  OPTIONAL {
    ?professionalIn a dbo:Professional;
                   foaf:name ?name.
  }
}
```",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
827,16,test,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859) and father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild ?fatherOfChild
WHERE {
  # Find a child of Maria Pavlovna who is royalty
  ?mariaPavlovnaChild dbo:parent dbr:Grand_Duchess_Maria_Pavlovna_of_Russia;
                      rdf:type dbo:Monarch.

  # Find the child of this child who is also royalty
  ?childOfChild dbo:parent ?mariaPavlovnaChild;
                rdf:type dbo:Monarch.

  # Find a child of Charles Augustus who is royalty
  ?charlesAugustusChild dbo:parent dbr:Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach;
                        rdf:type dbo:Monarch.

  # Find the father of this child
  ?fatherOfChild dbo:child ?charlesAugustusChild.
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
747,39,test,Give me the band of Amba Shepherd and band of the person born as the persona of Shèna.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?ambaBand ?shenaBand
WHERE {
  # Find Amba Shepherd and her band
  ?amba a dbo:Person ;
        foaf:name ""Amba Shepherd"" ;
        dbo:musicGroup ?ambaBand .

  # Find the person born as Shèna and their band
  ?shena a dbo:Person ;
         foaf:name ""Shèna"" ;
         dbo:birthName ""Shèna""@en ;
         dbo:musicGroup ?shenaBand .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
281,51,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?birthPlaceCountry WHERE {
  # Identify Bob Heffron's birthplace
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  
  # Get the country of the birthplace
  ?birthPlace dbp:countryName ?birthPlaceCountry .

  # Find wars related to his profession in the New Zealand Army
  OPTIONAL {
    ?profession dbo:fieldOfActivity dbr:Military .
    ?profession dbo:officeHolder dbr:Bob_Heffron .
    ?war dbo:participatingMilitaryUnit dbr:New_Zealand_Army .
    ?war dbo:relatedTo ?profession .
  }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
294,25,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?restingPlace1 ?restingPlace2 ?entityInNashvilleRestingPlace
WHERE {
  # Politician who received the Distinguished Service Medal (U.S. Army)
  ?politician dbo:award dbr:Distinguished_Service_Medal_(United_States_Army) .
  ?politician a dbo:Politician .

  # Resting place of the politician
  OPTIONAL { ?politician dbp:placeOfBurial ?restingPlace1 . }

  # Architect of P. D. Houston Jr. House
  ?architect dbo:work dbr:P._D._Houston_Jr._House .
  
  # Resting place of the architect
  OPTIONAL { ?architect dbp:placeOfBurial ?restingPlace2 . }

  # Entity in Nashville, Tennessee
  ?entityInNashville a dbo:PopulatedPlace ;
                    dbo:location dbr:Nashville,_Tennessee .
  
  # Resting place of the entity in Nashville
  OPTIONAL { ?entityInNashville dbp:placeOfBurial ?entityInNashvilleRestingPlace . }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
378,41,test,"Give me the war of the person born as Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfGahn ?peninsularWarCommander ?claimToFame
WHERE {
  # Find the war associated with Carl Pontus Gahn
  OPTIONAL {
    dbr:C._Pontus_Gahn dbo:participatedIn ?warOfGahn .
  }
  
  # Identify the commander of the Peninsular War
  OPTIONAL {
    dbr:Peninsular_War dbo:commander ?peninsularWarCommander .
  }

  # Find the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  OPTIONAL {
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:claimToFame ?claimToFame .
  }
}
```",5,5,6,2,3,3,3,71,0,37,2,0.0,0.0,0
303,21,test,"Give me the entity in Panama and party of the person born, that is a politician, as Arnulfo Arias Madrid and party of Guillermo Endara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?politician ?party
WHERE {
  # Arnulfo Arias Madrid details
  OPTIONAL {
    dbr:Arnulfo_Arias_Madrid dbo:nationality dbr:Panama ;
                              a dbo:Politician .
    ?politician dbo:birthPlace dbr:Panama ;
                a dbo:Politician ;
                dbp:party ?party .
  }
  
  # Guillermo Endara details
  OPTIONAL {
    dbr:Guillermo_Endara dbo:nationality dbr:Panama ;
                         a dbo:Politician .
    ?politician dbo:birthPlace dbr:Panama ;
                a dbo:Politician ;
                dbp:party ?party .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
701,27,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?battle dbp:battleOf ""Battle of Perire"" .
  ?commander dbo:commanderOf ?battle .
  ?father dbo:child ?commander .
  ?father dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse a dbo:Monarch } # Assuming 'dbo:Monarch' represents royalty
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
959,58,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of University of Tsukuba and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?secondLevelManager ?country
WHERE {
  # Yōichi Masuzoe as a sports manager in the 1998 Kashima Antlers season
  dbr:Yōichi_Masuzoe dbo:sport dbr:Soccer .
  
  # Team managed by Yōichi Masuzoe during the 1998 Kashima Antlers season
  ?team dbp:manager dbr:Yōichi_Masuzoe ;
        dbp:season ""1998"" .

  # Manager of that team (second-level manager)
  ?team dbo:manager ?secondLevelManager .
  
  # Second-level manager's membership in University of Tsukuba
  ?secondLevelManager dbo:almaMater dbr:University_of_Tsukuba .
  
  # Country of residence for the second-level manager
  ?secondLevelManager dbo:nationality ?country .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
421,20,test,Give me the band member of Senidah and native of the birthplace of Samir Bekrić and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?birthPlace
WHERE {
  # Find the birthplace of Samir Bekrić
  dbr:Samir_Bekrić dbo:nativePlace ?birthPlace .

  # Identify Edin Dervišhalidović (Senidah) and his band members
  OPTIONAL {
    dbr:Edin_Dervišhalidović dbp:memberOfBand ?band .
    ?bandMember dbo:memberOf ?band ;
               dbo:nativePlace ?birthPlace .
  }
}
```

This query does the following:
- Retrieves the native place of Samir Bekrić.
- Finds band members associated with Edin Dervišhalidović (Senidah) who are also natives of that birthplace.",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
767,44,test,Give me the alma mater of the administration of George K. Nash and reference to the alter ego of Black Hood and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?alterEgo ?entityInBW
WHERE {
  # Alma mater of George K. Nash
  OPTIONAL {
    dbr:George_K._Nash dbo:almaMater ?almaMater .
  }

  # Alter ego of Black Hood (assuming a fictional character, we might need to adjust based on available data)
  OPTIONAL {
    ?alterEgo rdfs:label ""Black Hood""@en .
    ?alterEgo dbo:alterEgoOf ?entity .
  }

  # Entity in Baden-Württemberg
  OPTIONAL {
    ?entityInBW dbo:location dbr:Baden-Württemberg .
  }
}
```",5,5,6,2,3,3,3,71,0,202,1,0.0,0.0,0
994,56,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonArtist WHERE {
  # Find associated artists of Watchtower
  ?watchtowerArtist dbo:associatedBand dbr:Watchtower .
  
  # Find associated artists of Red Tide
  ?redTideArtist dbo:associatedBand dbr:Red_Tide .

  # Identify common artist between the two bands
  FILTER (?watchtowerArtist = ?commonArtist)
  FILTER (?redTideArtist = ?commonArtist)

  # Ensure the common artist is a band member of Don Dokken's associated bands
  ?dokkenBand dbo:bandMember ?commonArtist .
  
  # Check if Don Dokken is associated with this band
  ?dokkenBand dbo:associatedBand dbr:Don_Dokken .

  # Ensure the common artist is also a musical artist and was born as such
  ?commonArtist a dbo:MusicalArtist ;
               dbo:birthPlace ?place .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
488,64,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceSaito ?war ?adminFatherSpouse ?deathPlaceIeyasu
WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlaceSaito .

  # War involving Saitō Hajime
  ?saitoWar dbo:participant dbr:Saitō_Hajime .
  ?saitoWar a dbo:MilitaryConflict ;
           a dbo:Event ;
           a dbo:SocietalEvent .
  BIND(?saitoWar AS ?war)

  # Tokugawa Masako's spouse's father (a royalty)
  dbr:Tokugawa_Masako dbo:spouse ?spouse .
  ?spouse dbo:father ?fatherSpouse .
  ?fatherSpouse a dbo:Royalty ;
               dbo:administered ?adminFatherSpouse .

  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlaceIeyasu .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
528,51,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?force ?commander ?war
WHERE {
  # Find Narciso Campero's birth name
  dbr:Narciso_Campero_Latorre dbo:birthName ?birthName .

  # Assume there is a property linking the birth name to a force (this might need adjustment based on actual data)
  OPTIONAL { ?birthName dbo:associatedForce ?force . }

  # Find the commander of the Battle of La Rinconada de Ate
  dbr:Battle_of_La_Rinconada_de_Ate dbo:commander ?commander .

  # Assume there is a property linking the commander to a war (this might need adjustment based on actual data)
  OPTIONAL { ?commander dbo:participatedInWar ?war . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
92,24,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v2 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist ?band
WHERE {
  # Find Jim Sheppard and his associated musical artist
  OPTIONAL {
    ?sheppard a dbo:MusicArtist ;
              foaf:name ""Jim Sheppard"" .
    ?sheppard dbo:associatedBand ?artist .
  }
  
  # Find Joseph Michael and the band he is part of
  OPTIONAL {
    ?michael a dbo:Person ;
             foaf:name ""Joseph Michael"" .
    ?michael dbo:memberOf ?band .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
617,42,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of Antiochus (son of Antiochus III the Great) and spouse of Laodice IV.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild
WHERE {
  # Seleucus II Callinicus and his child
  dbr:Seleucus_II_Callinicus dbo:spouse ?parent1 .
  ?parent1 dbo:child ?child .

  # The child of Seleucus II Callinicus who is royalty
  ?child dbo:child ?grandchild .
  ?grandchild a dbo:Monarch .

  # The grandchild's spouse is Laodice IV
  ?grandchild dbo:spouse dbr:Laodice_IV .

  # Antiochus (son of Antiochus III the Great) and his child
  dbr:Antiochus_III_the_Great dbo:child dbr:Antiochus_IV .
  dbr:Antiochus_IV dbo:child ?antiochusChild .

  # The grandchild is the parent of Antiochus's child
  ?grandchild dbo:parent ?antiochusChild .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
92,57,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v5 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?musicalArtist
WHERE {
  ?person dbo:birthName ""Joseph Michael Furney""@en .
  
  ?role dbo:actor ?movie .
  FILTER (str(?movie) = ""Return to Nuke 'Em High Volume 1""^^xsd:string)
  ?role dbp:musicalArtist ?musicalArtist .

  OPTIONAL {
    ?person dbo:bandMember ?nevermore .
    FILTER (str(?nevermore) = ""Nevermore""^^xsd:string)
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
92,35,test,"Give me the band of the person born as Joseph Michael Furney and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Warrel Dane"" ;
          dbo:birthName ""Joseph Michael Furney"" .
  
  ?membership dbo:band dbr:Nevermore ;
              dbo:musicians ?person .

  ?otherMembership dbo:band ?band ;
                   dbo:musicians ?person .

  FILTER(?band != dbr:Nevermore)

  ?band a dbo:MusicalArtist .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
345,19,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen and figure known as the nickname of FC Vaduz.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team ?nickname
WHERE {
  # Step 1: Get Eiður Guðjohnsen's birth date
  dbr:Eiður_Guðjohnsen dbo:birthday ?birthDate .

  # Step 2: Find a person who is both a soccer player and manager born on that date
  ?person dbo:birthday ?birthDate ;
          rdf:type dbo:SoccerPlayer, dbo:SoccerManager .

  # Step 3: Get the team associated with this person
  OPTIONAL { ?person dbp:team ?team . }

  # Step 4: Find the nickname of FC Vaduz
  dbr:FC_Vaduz dbp:nickname ?nickname .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
801,29,test,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in .","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist ?work WHERE {
  # Find Chris Taylor and his associated musical artist
  ?chris a dbo:MusicProducer ;
         foaf:name ""Chris Taylor"" .
  
  OPTIONAL { 
    ?chris dbo:musicalArtist ?artist .
  }
  
  # Find works produced by the artist that are songs of 50 Cent
  ?work dbo:producer ?artist ;
        a dbo:Songs ;
        dbo:lyricist dbr:50_Cent .

}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
184,69,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of the child of Archduke Joseph Karl of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v7 . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?result1 ?result2 WHERE {
  # Step 1: Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            foaf:name ""Margaret of Austria"" ;
            dbo:birthYear ""1925"" .
  
  ?parent_margaret dbo:child ?margaret .
  ?grandchild_parent_margaret dbo:child ?parent_margaret .

  # Step 2: Archduke Joseph Karl of Austria
  ?joseph_karl a dbo:Person ;
               foaf:name ""Joseph Karl of Austria"" .
  
  ?child_joseph_karl dbo:child ?joseph_karl .
  ?grandchild_child_joseph_karl dbo:child ?child_joseph_karl .

  # Step 3: Landmark at elevation 96.0
  ?landmark a dbo:Settlement ;
            geo:elevation ""96.0""^^xsd:float .
  
  ?native_landmark dbo:nativeOf ?landmark .

  # Combine results
  ?parent_native_landmark dbo:child ?native_landmark .

  # Final result combining all parts
  ?result1 ?p ?grandchild_parent_margaret .
  ?result2 ?q ?grandchild_child_joseph_karl .
  FILTER(?result1 = ?result2)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
391,62,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/nickname> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace
WHERE {
  # Find the nickname of Jackson, Tennessee
  ?jacksonNick a dbo:Nickname ;
               dbo:associatedWith dbr:Jackson,_Tennessee .

  # Identify the actor known for a work that is Sherry Hormann's spouse's claim to fame
  ?actor dbo:nativePlace ?nativePlace .
  ?work dbo:performer ?actor .
  ?spouse dbo:claimToFame ?work .
  ?sherry dbr:Sherry_Hormann ;
          dbo:spouse ?spouse .

  # Identify the actor from ""All About the Andersons""
  ?andersonWork a dbo:Film ;
                rdfs:label ""All About the Andersons""@en .
  ?actor dbo:actedIn ?andersonWork .

  FILTER(?jacksonNick = ?actor)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,45,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of Compton, California and actor of The Departed.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName
WHERE {
  ?movie a dbo:Film ;
         dbo:genre/dbo:subClassOf* dbo:TelevisionShow ;
         dbo:workExample ?theDeparted .
  
  ?theDeparted dbr:The_Departed .

  ?actor dbo:birthPlace dbr:Compton,_California ;
         dbo:profession dbp:Actor ;
         dbo:film ?movie ;
         foaf:name ?actorName .

}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
427,59,test,Give me the reference to the name of the party of Michele Pinto and party of the father of the alumnus of Massachusetts Institute of Technology.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?micheleParty ?fatherParty
WHERE {
  # Find Michele Pinto's political party
  OPTIONAL {
    dbr:Michele_Pinto dbo:party ?micheleParty .
  }

  # Find an alumnus of MIT and their father's political party
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
           foaf:parent ?father .

  OPTIONAL {
    ?father dbo:party ?fatherParty .
  }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
754,18,test,Give me the parent of the parent of the parent of Min Linka and parent of the child of Ram Khamhaeng.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?ancestorMinLinka ?ancestorRamKhamhaeng
WHERE {
  # Min Linka's ancestor chain
  ?minLinka dbo:parent ?child1 .
  ?child1 dbo:parent ?grandParent1 .
  ?grandParent1 dbo:parent ?greatGrandParent1 .

  # Ram Khamhaeng's child and its parent
  ?ramKhamhaeng dbo:parent ?child2 .
  ?child2 dbo:parent ?parentOfChild2 .

  # Bind the ancestors to variables for output
  BIND(?greatGrandParent1 AS ?ancestorMinLinka)
  BIND(?parentOfChild2 AS ?ancestorRamKhamhaeng)

  # Filter by specific individuals (replace with actual DBpedia URIs)
  VALUES (?minLinka ?ramKhamhaeng) {
    (<http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/resource/Ram_Khamhaeng>)
  }
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
378,54,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?carlWar ?crillonFame ?crillonWar WHERE {
  # Carl Pontus Gahn's war
  OPTIONAL {
    dbr:C._Pontus_Gahn dbo:militaryConflict ?carlWar .
  }
  
  # Louis des Balbes de Berton de Crillon's claim to fame and associated war
  OPTIONAL {
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:claimToFame ?crillonFame .
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:militaryConflict ?crillonWar .
  }
  
  # Filter for Peninsular War
  FILTER (
    EXISTS { ?carlWar rdfs:label ""Peninsular War""@en . } ||
    EXISTS { ?crillonWar rdfs:label ""Peninsular War""@en . }
  )
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
701,65,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Seti I's grandchild's parent
  ?setiIChild dbo:spouse ?parentOfGrandchild .
  ?setiIChild dbo:child ?grandchild .

  # Ramesses II is the spouse of Merneptah's father
  dbr:Ramesses_II dbo:spouse ?merneptahsFatherSpouse .

  # Nefertari's child's parent
  dbr:Nefertari dbo:spouse dbr:Ramesses_II .
  dbr:Ramesses_II dbo:child ?nefertarisChild .

  # Unifying the conditions
  FILTER (?parentOfGrandchild = ?merneptahsFatherSpouse && ?parentOfGrandchild = dbr:Ramesses_II)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
783,18,test,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberPriscilla ?associatedArtistSamuel
WHERE {
  # Priscilla Opoku-Kwarteng's band member
  dbr:Priscilla_Opoku-Kwarteng dbo:birthName ""Priscilla Opoku-Kwarteng"" .
  dbr:Priscilla_Opoku-Kwarteng a dbo:MusicalArtist ;
    dbo:bandMember ?bandMemberPriscilla .

  # Samuel Ofori Amponsah's band member
  dbr:Samuel_Ofori_Amponsah dbo:birthName ""Samuel Ofori Amponsah"" .
  dbr:Samuel_Ofori_Amponsah a dbo:MusicalArtist ;
    dbo:bandMember ?bandMemberSamuel .

  # Associated musical artists of Samuel's band member
  ?bandMemberSamuel dbo:associatedBandMember ?associatedArtistSamuel .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
959,57,test,"Give me the member of University of Tsukuba and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of Takashi Sekizuka.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v1 <http://dbpedia.org/property/residence> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?member
WHERE {
  # Find the leader of the 2010 Japanese House of Councillors election who is a politician
  ?leader dbo:office ""Member of the House of Councillors""@en;
          dbo:election ""2010 Japanese House of Councillors election""@en;
          rdf:type dbo:Politician.
  
  # Determine the country of residence for this leader
  ?leader dbp:nationality ?country.

  # Find members of the University of Tsukuba who are natives of that country
  ?member dbo:almaMater dbr:University_of_Tsukuba;
          dbo:nationality ?country.
  
  # Identify those who are also managers of Takashi Sekizuka's team
  ?manager dbp:team ""Takashi Sekizuka""@en;
           rdf:type dbo:Manager.
  FILTER (?member = ?manager)
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
328,46,test,Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee WHERE {
  # Awardee for Volcano and Ryukyu Islands campaign
  ?award1 dbo:campaign dbr:Volcano_and_Ryukyu_Islands_campaign .
  ?award1 dbo:recipient ?awardee .

  # Awardee as commander in the force of Ferenc Szálasi
  ?award2 dbo:commanderOfForce dbr:Ferenc_Szálasi .
  ?award2 dbo:recipient ?awardee .
}
```",5,5,6,3,2,3,3,71,0,0,5,0,0.0,0
404,66,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia and her spouse
  ?princess a dbo:Princess ;
           dbp:name ""Victoria Louise of Prussia"" .
  
  ?princess dbo:spouse ?spouse .

  # Step 2: Find the father of this spouse
  ?spouse dbo:father ?father .

  # Step 3: Identify the child of this father who is royalty and related to Ernest Augustus, Duke of Brunswick
  ?child dbo:parent ?father ;
         a dbo:RoyalFamilyMember .
  
  ?ernestAugustus a dbo:Duke ;
                  dbp:name ""Ernst August, Duke of Brunswick"" .

  # Assuming the child has some relation with Ernest Augustus (e.g., sibling)
  ?ernestAugustus dbo:sibling ?child .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
161,66,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # For Francisco Franco
  {
    ?event dbo:militaryConflict ?conflict .
    ?conflict dbo:commander ?commander .
    ?conflict dbo:participant dbr:Franco_Francisco .
  }
  
  UNION
  
  # For Francisco Largo Caballero
  {
    ?societalEvent dbo:societalEvent ?event .
    ?militaryConflict dbo:militaryConflict ?event .
    ?militaryConflict dbo:commander ?commander .
    ?militaryConflict dbo:participant dbr:Largo_Caballero_Francisco .
  }
}
```

This query attempts to find commanders involved in military conflicts related to Francisco Franco and societal events/military conflicts involving Francisco Largo Caballero. The `UNION` is used to combine results from both contexts.",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
184,21,test,Give me the parent of Archduchess Ilona of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentIlona ?parentBudapestNative
WHERE {
  # Find parent of Archduchess Ilona of Austria
  OPTIONAL {
    dbr:Archduchess_Ilona_of_Austria dbo:childOf ?parentIlona .
  }

  # Find native of Budapest and their parent
  OPTIONAL {
    ?native dbo:nativePlace dbr:Budapest ;
            dbo:childOf ?parentBudapestNative .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,70,test,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeOfCountry
WHERE {
  # Step 1: Find the politician leader of the 2010 Japanese House of Councillors election
  ?politician dbo:officeHolder dbr:Japanese_House_of_Councillors_election,_2010 .
  
  # Step 2: Identify the manager linked to the sports manager of the 1998 Kashima Antlers season
  ?sportsManager dbp:teamManaged dbr:Kashima_Antlers_season_1998 .
  ?manager dbp:managedBy ?sportsManager .

  # Step 3: Find the alma mater of Eiji Ōtsuka that is a Japanese university and organization
  ?almaMater dbo:type dbr:University_in_Japan ;
             dbo:country dbr:Japan ;
             dbo:isOrganizedAs dbp:educationalInstitution .
  ?eiji dbo:almaMater ?almaMater .
  
  # Link the politician to the manager through their alma mater
  ?politician dbo:almaMater ?almaMater .

  # Find the native country of residence of this linked person
  ?linkedPerson dbo:nativePlace ?nativePlace .
  ?nativePlace dbo:country ?nativeOfCountry .

  FILTER (?politician = ?manager)
}
```",8,15,9,3,3,3,3,71,0,0,2,0,0.0,0
547,49,test,Give me the resting place of the child of James Burton (property developer) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?childRestingPlace ?awardeeRestingPlace
WHERE {
  # Find James Burton (property developer)
  ?jamesBurton a dbo:Person ;
               foaf:name ""James Burton"" ;
               dbo:occupation dbo:PropertyDeveloper .

  # Find the child of James Burton and their resting place
  ?child dbo:parent ?jamesBurton .
  OPTIONAL { ?child dbo:placeOfBurial ?childRestingPlace . }

  # Find Gerald Graham
  ?geraldGraham a dbo:Person ;
                foaf:name ""Gerald Graham"" .

  # Find the awardee of an award by Gerald Graham and their resting place
  ?award dbp:awardedBy ?geraldGraham .
  ?awardee dbo:awardWinner ?award .
  OPTIONAL { ?awardee dbo:placeOfBurial ?awardeeRestingPlace . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
378,66,test,"Give me the war of the person born as Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?warOfGahn ?peninsularWar ?claimToFame
WHERE {
  # Find Carl Pontus Gahn and the war he was involved in
  ?gahn a dbo:Person ;
        foaf:name ""Carl Pontus Gahn"" ;
        dbo:nationality dbr:Sweden ;
        dbo:birthName ?birthName .
  
  OPTIONAL { 
    ?gahn dbo:militaryConflict ?warOfGahn .
  }
  
  # Find Thomas Trigge and his role in the Peninsular War
  ?trigge a dbo:Person ;
          foaf:name ""Thomas Trigge"" ;
          dbo:nationality dbr:Sweden ;
          dbo:militaryCommanderOf ?peninsularWar .

  FILTER(?peninsularWar = dbr:Peninsular_War)

  # Find Thomas Trigge's claim to fame
  OPTIONAL {
    ?trigge dbo:claimToFame ?claimToFame .
  }
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
9,56,test,"Give me the alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMaterAllenHill ?nicknameEntity ?almaMaterMayor
WHERE {
  # Allen Hill's alma mater
  dbr:Allen_Hill_(scientist) dbo:almaMater ?almaMaterAllenHill .

  # Organization and educational institution in Northern Ireland with a nickname
  ?entity a dbo:EducationalInstitution ;
          dbo:location dbr:Northern_Ireland ;
          OPTIONAL { ?entity dbp:nickname ?nicknameEntity } .
  
  # Mayor of the Northern Ireland Forum's alma mater
  ?mayor dbo:position dbr:Northern_Ireland_Forum ;
         dbo:almaMater ?almaMaterMayor .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
312,9,test,"Give me the entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy) and entity in the birthplace of Giorgio Grigolli.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInAdministration ?birthplaceEntity
WHERE {
  ?entityInAdministration a dbo:Settlement ;
                         dbo:country dbr:Italy ;
                         dbo:state dbr:Italy ;
                         dbo:region ?region ;
                         dbo:administrativeUnit ?administration .
  
  ?administration dbp:party dbr:Democratic_Party_(Italy) .

  ?birthplaceEntity dbo:birthPlace dbr:Giorgio_Grigolli .

  FILTER (?entityInAdministration = ?birthplaceEntity)
}
```",4,8,5,2,2,2,2,9,0,0,587,0,0.0,0
232,69,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Sean Pertwee and his father Jon Pertwee
  dbr:Sean_Pertwee a dbo:Actor ;
                   dbo:father dbr:Jon_Pertwee .

  # Films and military conflicts associated with Sean Pertwee
  OPTIONAL { dbr:Sean_Pertwee dbo:film ?film . }
  OPTIONAL { dbr:Sean_Pertwee dbo:militaryConflict ?conflict . }

  # Jon Pertwee's birthplace (a British settlement)
  dbr:Jon_Pertwee dbo:birthPlace ?settlement .
  FILTER (dbo:Country ?settlement dbp:countryName ""United Kingdom""@en)

  # French politician born in that settlement
  ?politician a dbo:Politician ;
              dbo:nationality dbr:France ;
              dbo:birthPlace ?settlement .

  # The actor of the claim to fame (film or military conflict)
  ?actor dbo:actor ?film .
  UNION
  ?actor dbo:soldier ?conflict .

}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
391,70,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of the figure known as Hub City and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v1 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v1 <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  ?movie a dbo:Film ;
         a dbo:CreativeWork ;
         a dbo:TelevisionShow .
  
  ?movie dbo:starring ?actor .

  ?actor dbo:nativePlace dbr:Hub_City ;
         dbo:profession dbr:Actor .

  ?spouseOfSherryHormann dbo:claimToFame ?work .
  ?work a dbo:CreativeWork .

  ?actor dbo:starring ?work .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
161,28,test,"Give me the military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?societalEvent ?biscayCampaignCommander
WHERE {
  # Military forces involved in the Spanish Civil War
  ?event a dbo:MilitaryConflict ;
         rdfs:label ""Spanish Civil War""@en .
  
  OPTIONAL {
    ?event dbo:militaryForce ?militaryForce .
  }
  
  # Societal events related to Francisco Franco
  ?francoEvent a dbo:Event ;
               dbo:agent dbr:Francisco_Franco ;
               rdfs:label ?societalEventLabel .
  
  FILTER (lang(?societalEventLabel) = ""en"")
  
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?societalEventLabel), "" "", ""_""))) AS ?societalEvent)
  
  # Events and military conflicts involving Francisco Franco in the Biscay Campaign
  ?biscayCampaign a dbo:MilitaryConflict ;
                  rdfs:label ""Biscay_Campaign""@en .
  
  OPTIONAL {
    ?biscayCampaign dbo:commander dbr:Francisco_Franco ;
                    dbo:militaryForce ?biscayMilitaryForce .
    
    ?biscayCampaignCommander dbo:commander ?biscayMilitaryForce .
  }
}
```",4,7,5,2,3,3,3,71,0,0,3,0,0.0,0
783,20,test,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberEbony ?associatedArtistSamuel
WHERE {
  # Find the band member of Ebony Reigns who is an artist and a musical artist
  dbr:Ebony_Reigns dbo:birthName ?ebonyPerson .
  ?ebonyPerson rdf:type dbo:MusicalArtist ;
               rdf:type dbo:Artist .

  OPTIONAL { 
    ?bandMemberEbony dbo:member ?ebonyPerson .
    ?associatedArtistSamuel dbo:associatedBandMember ?bandMemberEbony .
  }

  # Find the band member of Samuel Ofori Amponsah
  dbr:Samuel_Ofori_Amponsah dbo:birthName ?samuelPerson .
  OPTIONAL {
    ?bandMemberSamuel dbo:member ?samuelPerson .
    ?associatedArtistSamuel dbo:associatedBandMember ?bandMemberSamuel .
  }
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
281,64,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in Colony of New Zealand.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfAward ?warOfProfession
WHERE {
  # Find Jonathon Band and his awards
  ?jonathanBand a dbo:Person ;
               foaf:name ""Jonathon Band""@en .
  
  ?award dbo:recipient ?jonathanBand ;
         dbo:relatedEvent ?warOfAward .

  # Find military unit related to a profession (office holder, politician)
  ?profession a dbo:OfficeHolder, dbo:Politician ;
              dbo:memberOf ?militaryUnit .
  
  ?militaryUnit dbo:militaryBranch dbr:New_Zealand_Army ;
                dbo:relatedEvent ?warOfProfession .

  # Ensure the military unit is related to Colony of New Zealand
  ?militaryUnit dbo:locatedIn dbr:Colony_of_New_Zealand .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
801,50,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedMusicalArtist
WHERE {
  # Identify the musical work ""40 Dayz & 40 Nightz""
  dbr:40_Dayz_&_40_Nightz a dbo:MusicalWork ;
    dbo:producer ?producer .

  # Ensure the producer is also a professional rapper (musical artist)
  ?producer a dbo:MusicalArtist, dbo:Rapper .

  # Find the associated musical artist of this writer/producer
  ?producer dbo:musicalArtist ?associatedMusicalArtist .
}
```",5,11,6,3,2,3,3,71,0,0,9,0,0.0,0
435,20,test,"Give me the work of Article 62, Section IV of Constitution of Iceland and territory administered from Reykjavík and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT DISTINCT ?articleContent ?administeredTerritory ?timeZoneRegion
WHERE {
  # Article 62, Section IV of the Constitution of Iceland
  OPTIONAL {
    ?constitution dbo:part ?section .
    ?section rdfs:label ""Article 62, Section IV""@en .
    ?section dbo:text ?articleContent .
    FILTER(CONTAINS(LCASE(?articleContent), ""article 62 section iv""))
  }

  # Territory administered from Reykjavík
  OPTIONAL {
    dbr:Reykjavík dbo:administrativeTerritory ?administeredTerritory .
  }

  # Time zone region for Bombali Shebora Chiefdom
  OPTIONAL {
    wd:Q1234567 wdt:P421 ?timeZoneRegion .  # Replace Q1234567 with the actual Wikidata ID for Bombali Shebora Chiefdom
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
232,64,test,"Give me the actor of Dog Soldiers (film) and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?residenceName WHERE {
  # Find the actor of ""Dog Soldiers""
  ?film dbo:title ""Dog Soldiers""@en .
  ?film dbo:actor ?actor .

  # Determine the residence of this actor
  ?actor foaf:based_near ?settlement .
  
  # Ensure the settlement is British
  ?settlement dbo:nationality dbc:United_Kingdom .

  # Find a politician associated with this settlement
  ?politician dbo:residence ?settlement ;
              rdf:type dbo:Politician ;
              dbo:nationality dbr:France .

  # Ensure this politician is the child of someone born as Jon Pertwee
  ?politician foaf:child ?parent .
  ?parent foaf:name ""Jon Pertwee""@en .

  # Get the name of the settlement for output
  ?settlement rdfs:label ?residenceName .
  
  FILTER(LANG(?residenceName) = 'en')
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
232,49,test,"Give me the child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childName WHERE {
  # Identify John Pertwee
  dbr:John_Pertwee a dbo:Person ;
                   foaf:name ""John Devon Roland Pertwee""@en .

  # Find his children
  ?pertweeChild dbo:parent dbr:John_Pertwee .
  ?pertweeChild foaf:name ?childName .

  # Filter based on residence in a British settlement
  ?pertweeChild dbo:residence ?settlement .
  ?settlement dbo:country dbr:United_Kingdom ;
              rdf:type dbo:Settlement .

  # Ensure the settlement is linked to a French politician who holds an office
  ?politician dbo:nationality dbr:France ;
             dbo:officeHolder true ;
             dbo:residence ?settlement .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
701,50,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentOfPersonB ?spouseOfFatherOfMerneptah
WHERE {
  # Seti I's child (Person A)
  ?personA dbo:childOf dbr:Seti_I .
  
  # Person A's child (Person B)
  ?personB dbo:childOf ?personA .

  # Parent of Person B
  ?parentOfPersonB dbo:parentOf ?personB .

  # Merneptah's father (Person C)
  ?merneptah dbr:Merneptah .
  ?personC dbo:fatherOf ?merneptah .

  # Spouse of Person C
  ?spouseOfFatherOfMerneptah dbo:spouse ?personC .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
328,47,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of the person decedent at Budapest.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  # Bruce Fraser's details
  dbr:Bruce_Fraser_1st_Baron_Fraser_of_North_Cape dbo:awardReceived ?award .
  
  # Awardee of the award related to Bruce Fraser
  ?award dbo:recipient ?awardee .

  OPTIONAL {
    # Commander in the force at Budapest (assuming a military context)
    ?awardee dbo:militaryCommanderOf ?force .
    ?force dbo:location dbr:Budapest .
    ?awardee dbo:dateOfBirth ?dob .
    ?awardee dbo:dateOfDeath ?dod .
    FILTER (?dod != """" && ?dod < ""2023-10-01""^^xsd:date) # Assuming the person is deceased
  }
}
```",5,5,6,3,2,3,3,71,0,0,5,0,0.0,0
747,66,test,Give me the band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song) and person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandShena ?bandWriterApollo ?bandPersonBirthDate
WHERE {
  # Shèna's band
  OPTIONAL {
    dbr:Shèna dbo:birthName ?shenaBirthName .
    ?person dbo:birthName ?shenaBirthName ;
            dbo:musicalBand ?bandShena .
  }

  # Writer of Apollo (Hardwell song) and their band
  OPTIONAL {
    dbr:Apollo_(song) dbo:lyricsBy ?writerApollo .
    ?writerApollo dbo:musicalBand ?bandWriterApollo .
  }

  # Pavlo Khudzik's birth date and person born on that date with their band
  OPTIONAL {
    dbr:Pavlo_Khudzik dbo:birthday ?birthDatePavlo .
    ?personBirthDate dbo:birthday ?birthDatePavlo ;
                     dbo:musicalBand ?bandPersonBirthDate .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
492,64,test,"Give me the person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedent
WHERE {
  # Person decedent at the work of Frédéric Weisgerber (author of ""French Algeria"")
  ?work dbo:author dbr:Frédéric_Weisgerber .
  ?work dbo:subject dbr:French_Algeria .

  # Person decedent at Khemis Miliana
  ?personDecedent dbo:placeOfBirth dbr:Khemis_Miliana .

  # Commander in Franco-Hova Wars
  ?personDecedent dbo:militaryCommanderOf dbr:Franco_Hova_Wars .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
184,53,test,"Give me the child of Archduke Joseph August of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfJosephAugust ?parentOfNative ?childOfJosephFrancis
WHERE {
  # Child of Archduke Joseph August of Austria
  ?childOfJosephAugust dbo:father dbr:Archduke_Joseph_August_of_Austria .

  # Parent of the native of a landmark at elevation 96.0 that is a settlement
  ?parentOfNative dbo:nativePlace ?nativePlace .
  ?nativePlace dbp:elevation ""96.0""^^xsd:float ;
               rdf:type dbo:Settlement .

  # Linking child of Joseph August to parent of the native
  ?childOfJosephAugust dbo:mother|dbo:father ?parentOfNative .

  # Child of Archduke Joseph Francis of Austria
  ?childOfJosephFrancis dbo:father dbr:Archduke_Joseph_Francis_of_Austria .

  # Linking parent to child of Joseph Francis
  ?parentOfNative dbo:mother|dbo:father ?childOfJosephFrancis .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
701,31,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Find spouse of Amun-her-khepeshef
  ?spouse dbo:spouse ?amunHerKhepeshef .
  
  # Find child of the spouse
  ?child dbo:childOf ?spouse .

  # Find parent of this child (which should be the spouse)
  ?parent dbo:parent ?child .

  # Find parent of Henuttawy
  ?henuttawy dbp:name ""Henuttawy""@en .
  ?henuttawy dbo:parent ?parent .

  # Ensure Amun-her-khepeshef is in the 19th dynasty
  ?amunHerKhepeshef dbp:era ""Nineteenth Dynasty of Egypt"" .
  
  # Ensure Henuttawy is in the 19th dynasty
  ?henuttawy dbo:era ""Nineteenth Dynasty of Egypt"" .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
328,50,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?officeLeader
WHERE {
  # Find the commander in the force at Budapest related to Joseph Stalin
  ?forceCommander a dbo:MilitaryPerson ;
                  dbo:placeOfBirth dbr:Budapest ;
                  dbo:spouse|dbo:child|dbo:employer* dbr:Joseph_Stalin .

  # Find the leader of an office that is a government agency related to Joseph Stalin
  ?officeLeader a dbo:GovernmentOfficial ;
               dbo:positionHeld ?governmentAgency ;
               dbo:spouse|dbo:child|dbo:employer* dbr:Joseph_Stalin .
  
  FILTER(?forceCommander = ?officeLeader)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
179,19,test,Give me the parent of the child of the parent of Vajiralongkorn and person born as the birth name of Sirikit.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parentOfVajiralongkorn ?personBornAsSirikit
WHERE {
  # Vajiralongkorn's parent
  ?vajiralongkorn dbo:father|dbo:mother ?parentOfVajiralongkorn .
  VALUES ?vajiralongkorn { <http://dbpedia.org/resource/Vajiralongkorn> } .

  # Person born as Sirikit
  ?person foaf:name ""Sirikit""@en .
  ?person dbo:birthName ?birthName .
  FILTER(?birthName = ""Sirikit"")
  
  BIND(?parentOfVajiralongkorn AS ?personBornAsSirikit)
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
77,18,test,Give me the force of the mayor of Congress Poland and war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayorForce ?vlasovWar
WHERE {
  # Find the mayor of Congress Poland and their associated force
  ?mayor a dbo:Mayor ;
         dbo:officeLocation dbr:Congress_Poland .
  
  OPTIONAL { 
    ?mayor dbo:force ?mayorForce .
  }
  
  # Find Maxim Grigorievich Vlasov and his awards
  dbr:Maxim_Grigorievich_Vlasov a dbo:Person ;
                                 dbo:award ?award .

  # Find wars associated with the awards
  OPTIONAL {
    ?award dbo:relatedEvent ?war .
    ?war a dbo:MilitaryConflict ;
         rdfs:label ?vlasovWar .
  }
}
```",5,5,6,3,2,3,2,20,0,0,24,0,0.0,0
303,20,test,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Guillermo Endara and party of Arnulfo Arias.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  # El Valle de Antón is in Panama
  dbr:El_Valle_de_Antón dbo:locatedIn dbr:Panama .

  # Guillermo Endara's party
  dbr:Guillermo_Endara dbo:memberOf dbr:Partido_Democrático_Cristiano_Panamá .
  
  # Arnulfo Arias's party
  dbr:Arnulfo_Arias_Madrid dbo:memberOf dbr:Partido_Panameñista .

  # The country associated with both parties
  ?party1 dbo:country dbr:Panama ;
          rdfs:label ""Partido Democrático Cristiano""@en .
  
  ?party2 dbo:country dbr:Panama ;
          rdfs:label ""Partido Panameñista""@en .

  # Ensure the country is a country
  ?country rdf:type dbo:Country .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
959,24,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry
WHERE {
  # Identify Yōichi Masuzoe and his role as manager in 2013 Júbilo Iwata season
  dbr:Yōichi_Masuzoe dbo:managerOf dbr:Júbilo_Iwata_2013_season .

  # Find the residence of Yōichi Masuzoe
  OPTIONAL { dbr:Yōichi_Masuzoe dbo:residence ?residence . }

  # Determine the native country of the residence
  ?residence dbo:nativeCountry ?nativeCountry .
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
617,64,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of Laodice IV and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?childOfChild
WHERE {
  # Antiochus II Theos and his successor who is royalty
  ?antiochus dbo:successor ?successor .
  ?antiochus a dbo:AntiochusIITheos .

  FILTER (?successor a dbo:Royalty) .

  # Successor's spouse who is royalty
  ?successor dbo:spouse ?spouse .
  FILTER (?spouse a dbo:Royalty) .

  # Child of the spouse who is royalty
  ?spouse dbo:child ?childOfSpouse .
  FILTER (?childOfSpouse a dbo:Royalty) .

  # Commander in Battle of Panium and their parent
  ?commander dbo:parent ?parentCommander .
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Panium""@en .

  # The child of the spouse is also a parent of the commander's child
  ?childOfSpouse dbo:child ?childOfChild .
  ?childOfChild dbo:parent ?parentCommander .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
281,59,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInBirthPlace
WHERE {
  # Find the leader of the 1962 NSW state election
  ?election dbo:leader ?politician .
  FILTER (str(?election) = ""1962_New_South_Wales_state_election"")

  # Ensure the leader is a politician
  ?politician rdf:type dbo:Politician .

  # Get the birthplace of the politician and ensure it's a country
  ?politician dbp:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Find the entity in the birth place (country)
  ?entityInBirthPlace rdf:type dbo:Entity ;
                      dbo:location ?birthPlace .

  OPTIONAL {
    # Find the awardee of an award related to Jonathon Band
    ?award dbo:recipient ?awardee .
    ?award dbp:name ""Jonathon_Band""^^xsd:string .

    # Get the war associated with the awardee
    ?awardee dbo:war ?war .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
963,20,test,"Give me the administration of the ruling party, that is a political party, in the location for 21205 and entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton.","SELECT ?result WHERE { <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leaderParty> ?v5 . ?v4 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration WHERE {
  # Find the country of Herzegovina-Neretva Canton
  dbr:Herzegovina-Neretva_Canton dbo:country dbr:Bosnia_and_Herzegovina .
  
  # Find the postal code location and its ruling party
  ?location dbp:postalCode ""21205"" ;
            dbo:locatedIn dbr:Herzegovina-Neretva_Canton .

  ?party dbo:isRulingPartyOf ?location ;
         a dbo:PoliticalParty .
  
  # Find the administration of the ruling party
  ?administration dbo:headOf ?party .
}
```",6,8,7,3,2,3,2,20,0,0,84,0,0.0,0
328,42,test,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Commander in Eastern Front (World War II)
  ?commander dbo:rank ?rank .
  ?commander dbo:office ?office .
  ?office dbo:headOfStateOrGovernment dbr:Joseph_Stalin .

  # Leader of a government agency under Joseph Stalin
  ?agency dbo:head ?leader .
  ?leader foaf:name ?name .
  FILTER (CONTAINS(LCASE(?name), ""stalin"")) .

  # Awardee of an award from Bruce Fraser, 1st Baron Fraser of North Cape
  ?commander dbo:awardReceived ?award .
  ?award dbo:recipient ?recipient .
  ?recipient foaf:name ?awardeeName .
  FILTER (CONTAINS(LCASE(?awardeeName), ""bruce fraser"")) .

  # Ensure the same person fits all criteria
  FILTER (?commander = ?leader)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
488,66,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in Boshin War and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceYūkiFather ?birthPlaceCommander ?administrationSpouseFather
WHERE {
  # Yūki Hideyasu's father
  dbr:Yūki_Hideyasu dbo:father ?yukiFather .
  
  # Death place of Yūki Hideyasu's father
  ?yukiFather dbo:deathPlace ?deathPlaceYūkiFather .

  # Commander in the Boshin War who is also a politician
  ?commander dbo:occupation dbr:Politician ;
            dbo:participatedInBattle dbr:Boshin_War .
  
  # Birth place of the commander
  ?commander dbo:birthPlace ?birthPlaceCommander .

  # Tokugawa Masako's spouse and their father
  dbr:Tokugawa_Masako dbo:spouse ?tokugawaSpouse ;
                      dbo:spouse ?tokugawaSpouse .
  
  ?tokugawaSpouse dbo:father ?spouseFather .
  
  # Administration of the spouse's father (who is royalty)
  ?spouseFather dbo:royalty true ;
                dbo:administers ?administrationSpouseFather .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
10,22,test,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Matt Colton's associated artists
  {
    SELECT ?mattArtist WHERE {
      dbr:Matt_Colton dbo:associatedMusicalArtist ?mattArtist .
      ?mattArtist a dbo:MusicArtist .
    }
  }

  # Luke Francis Vibert's associated artists
  {
    SELECT ?lukeArtist WHERE {
      dbr:Luke_Francis_Vibert dbo:associatedMusicalArtist ?lukeArtist .
      ?lukeArtist a dbo:MusicArtist .
    }
  }

  # Find common band members
  FILTER (?mattArtist = ?lukeArtist)
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
92,46,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMemberArtist WHERE {
  # Find Jim Sheppard and his associated band
  ?jimSheppard a dbo:MusicalArtist ;
              foaf:name ""Jim Sheppard"" .
  
  ?jimSheppard dbo:memberOfBand ?band .

  # Find the artist related to Nevermore (2006 film)
  ?nevermoreFilm a dbo:Film ;
                foaf:name ""Nevermore (2006 film)"" .
  
  ?nevermoreFilm dbo:starring ?artistRelatedToFilm .

  # Ensure the artist is also a musical artist
  ?artistRelatedToFilm a dbo:MusicalArtist .

  # Find band members of this artist
  ?artistRelatedToFilm dbo:memberOfBand ?band2 .
  ?bandMember dbr:memberOf ?band2 ;
              a dbo:MusicalArtist .

  # Return the associated musical artist (band member)
  ?bandMember foaf:name ?bandMemberArtist .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
767,69,test,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater ?settlement ?writer ?alterEgo
WHERE {
  # George K. Nash's alma mater
  dbr:George_K._Nash dbo:almaMater ?almaMater .

  # Entity in the administration of George K. Nash that is a settlement
  OPTIONAL { 
    ?administration dbo:member dbr:George_K._Nash .
    ?administration dbo:location ?settlement .
    FILTER (isBlank(?settlement) || !isLiteral(?settlement))
  }

  # Writer of ""Where It's At"" by Dustin Lynch
  dbr:""Where_It%27s_At_(Dustin_Lynch_album)"" dbo:lyricsBy ?writer .

  # Alter ego of Matthew Burland, which is a fictional character
  OPTIONAL {
    ?fictionalCharacter dbo:alterEgoOf dbr:Matthew_Burland .
    FILTER (isLiteral(?fictionalCharacter) && !isBlank(?fictionalCharacter))
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
16,44,test,Give me the person born as the birth name of Gigi Rice and spouse of Ted McGinley and professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName ?spouse ?profession
WHERE {
  # Find Gigi Rice's birth name
  ?gigi a dbo:Person;
        dbp:birthName ?birthName.
  
  FILTER (str(?gigi) = ""Gigi_Rice"") .

  # Find the person with the same birth name as Gigi Rice
  ?person a dbo:Person;
          dbp:birthName ?birthName.

  # Ensure this person is married to Ted McGinley
  ?person dbo:spouse ?ted.
  
  FILTER (str(?ted) = ""Ted_McGinley"") .

  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person;
          dbo:profession ?profession.

  FILTER (str(?satomi) = ""Satomi_Ishihara"") .

  # Ensure the person has the same profession as Satomi Ishihara
  ?person dbo:profession ?sameProfession.
  
  FILTER (?sameProfession = ?profession)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
488,36,test,"Give me the birth place of Enomoto Takeaki and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?administration
WHERE {
  # Enomoto Takeaki's birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .

  # Tokugawa Masako's spouse who is royalty
  OPTIONAL {
    dbr:Tokugawa_Masako dbo:spouse ?royalSpouse .
    ?royalSpouse a dbo:Monarch .
    
    # Administration of the father of the royal spouse
    ?royalSpouse dbo:father ?father .
    ?father dbo:administers ?administration .
  }
}
```",4,5,5,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
161,57,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of Emilio Mola and military force of Rif War.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 ?militaryForce3
WHERE {
  # Indalecio Prieto's predecessor
  ?prietoPredecessor dbo:predecessor dbr:Indalecio_Prieto .
  
  # Military force of the predecessor (societal event and military conflict)
  ?prietoPredecessor dbo:militaryConflict ?militaryForce1 ;
                    dbo:socialEvent ?socialEvent .

  # Emilio Mola as a commander in an event
  ?emilioMolaEvent dbo:commanderIn dbr:Emilio_Mola .
  
  # Military force of the event (Emilio Mola)
  ?emilioMolaEvent dbo:militaryConflict ?militaryForce2 .

  # Rif War as a military conflict
  dbr:Rif_War dbo:militaryConflict ?militaryForce3 .
}
```",6,9,7,3,3,3,3,71,0,0,11,0,0.0,0
767,32,test,"Give me the entity in the administration, that is a settlement, of Green and alma mater of the administration of George K. Nash.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement ?almaMater
WHERE {
  # Find George K. Nash's administration role
  ?administrationRole dbo:agent dbr:George_K._Nash .
  
  # Ensure the entity is a settlement
  ?administrationRole dbo:location ?settlement .
  ?settlement a dbo:Settlement .

  # Find the alma mater of the administration
  ?administrationRole dbo:almaMater ?almaMater .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
391,23,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?native
WHERE {
  ?city dbo:officialName ""Jackson, Tennessee"" .
  ?city dbo:nickname ?nickname .
  ?person foaf:nativePlace ?city .
  ?person foaf:name ?nickname .
}
```",3,3,4,3,1,3,3,71,0,0,176,0,0.0,0
404,22,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  ?ernestAugustus a dbo:Duke ;
                  dbp:father ?father .
  
  ?princessVictoriaLouise a dbo:Princess ;
                          dbp:spouse ?spouse .

  FILTER (?father = ?spouse)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
427,58,test,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherParty ?personBirthName ?personParty (dbr:Partito_Popolare_Italiano AS ?ppiReference)
WHERE {
  # Lamberto Andreotti's father
  dbr:Lamberto_Andreotti dbo:father ?father .
  
  # Political party of Lamberto Andreotti's father
  ?father dbo:partyAffiliation ?fatherParty .

  # Romano Prodi's birth name
  dbr:Romano_Prodi dbo:birthName ?personBirthName .

  # Person who is an office holder and a politician with the same birth name as Romano Prodi
  ?person dbo:birthName ?personBirthName .
  ?person dbo:officeHolder true .
  ?person dbo:politician true .

  # Political party of this person
  ?person dbo:partyAffiliation ?personParty .

  # Reference to Partito Popolare Italiano
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,38,test,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfChild ?spouseOfFather
WHERE {
  # Ramesses II's child
  ?child dbo:father dbr:Ramesses_II .
  
  # Parent of the child (which is Ramesses II)
  ?parentOfChild dbo:child ?child .

  # Merneptah's father
  ?merneptah dbp:father dbr:Ramesses_II .

  # Spouse of Merneptah's father (Ramesses II)
  ?spouseOfFather dbo:spouse dbr:Ramesses_II .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
281,62,test,"Give me the war of New Zealand Army and war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v6 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warNZ ?awardee ?birthCountry
WHERE {
  # Wars involving New Zealand Army
  ?warNZ dbo:participatingMilitaryUnit dbr:New_Zealand_Army .
  
  # Awardee of an award associated with Jonathon Band
  ?award dbo:recipient ?awardee ;
         dbo:associatedWith dbr:Jonathon_Band .

  # Leader (politician) of the 1962 New South Wales state election
  ?election dbo:leader ?politician .
  FILTER (?election = dbr:1962_New_South_Wales_state_election)
  FILTER (dbo:Politician(?politician))

  # Birthplace country of this politician
  ?politician dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country ;
              rdfs:label ?birthCountry .

}
ORDER BY ?warNZ ?awardee ?birthCountry",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
994,39,test,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v2 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist ?bandMember
WHERE {
  dbr:Red_Tide_(band) dbo:associatedMusicalArtist ?associatedArtist .

  ?person dbo:birthName ""Don Dokken"" ;
          a dbo:Musician .

  ?person dbo:memberOfBand ?band .
  ?bandMember dbo:memberOf ?band .
  
  FILTER(?associatedArtist != ?bandMember)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
16,62,test,Give me the person born as Georgeanne Marie Rice and spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseName WHERE {
  # Find Georgeanne Marie Rice
  ?rice a dbo:Person ;
        foaf:name ""Georgeanne Marie Rice""@en .
  
  # Find Ted McGinley's birth name and profession
  ?mcginnely a dbo:Person ;
             foaf:name ""Ted McGinley""@en ;
             dbo:birthName ?birthName ;
             dbo:profession ?actorProfession .

  # Find the actor of Unnatural TV series
  ?unnaturalActor a dbo:Person ;
                  dbo:profession ?actorProfession ;
                  dbo:film ?unnaturalSeries .
  
  FILTER(STRSTARTS(STR(?unnaturalSeries), ""http://dbpedia.org/resource/Unnatural_(TV_series)""))

  # Establish spouse relationship
  ?rice dbo:spouse ?mcginnely .

  # Get the name of the spouse (Georgeanne Marie Rice)
  ?rice foaf:name ?spouseName .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
528,49,test,Give me the force of the person born as the birth name of Narciso Campero and war of the military force of Battle of Pisagua.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?force ?war
WHERE {
  # Find Narciso Campero's birth name and his force (role)
  dbr:Narciso_Campero_Latorre 
    dbo:birthName ?birthName ;
    dbo:positionHeld ?force .

  # Find the military force involved in the Battle of Pisagua
  OPTIONAL {
    dbr:Battle_of_Pisagua 
      dbo:militaryForce ?militaryForce .
    
    # Find the war associated with this military force
    ?militaryForce dbo:partOfWar ?war .
  }
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
747,52,test,"Give me the band of the writer of Apollo (Hardwell song) and band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?writerBand ?shenaBand ?personBornOnSameDate
WHERE {
  # Find the writer of ""Apollo"" by Hardwell
  ?song dbo:composer ?writer .
  ?song rdfs:label ""Apollo""@en .

  # Get the band associated with this writer
  OPTIONAL { ?writer dbo:musicalArtist ?writerBand . }

  # Identify Shèna and her band
  dbr:Shèna dbo:musicalArtist ?shenaBand .

  # Find a decedent who is an athlete, soccer player from Zolotonosha
  ?decedent dbo:nationality dbr:Ukraine ;
            dbo:sport dbr:Soccer ;
            dbo:birthPlace dbr:Zolotonosha ;
            dbo:deathDate ?deathDate .

  # Find a person born on the same date as the decedent
  ?person dbp:birthday ?sameBirthDate .
  FILTER (?sameBirthDate = ?decedentBirthDate)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,70,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v7 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryUnit ?birthPlaceCountry ?war
WHERE {
  # Find the military unit in New Zealand Army
  ?militaryUnit dbo:militaryBranch dbr:New_Zealand_Army .
  
  # Identify the professional who is an office holder and politician
  ?professional dbo:profession ?militaryUnit ;
                a dbo:Politician ;
                dbo:officeHolder true .

  # Determine the birthplace of the leader of the 1962 NSW state election
  ?election dbp:leader ?leader .
  FILTER (STRSTARTS(STR(?election), ""1962 New South Wales state election""))
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:countryName ?birthPlaceCountry .

  # Locate the war associated with the awardee of Knight Grand Cross of the Order of the Bath
  ?awardee dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath ;
           dbo:servedInWar ?war .
}",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
617,69,test,"Give me the spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antiochus III the Great and his child
  ?antiochusIII a dbo:Monarch ;
                foaf:surname ""Antiochus III"" .
  
  ?child1 dbo:parent ?antiochusIII .

  # Spouse of the child of Antiochus III who is royalty
  ?spouse dbo:spouse ?child1 ;
          a dbo:Monarch .

  OPTIONAL {
    # Successor of Antiochus II Theos and their royal child
    ?antiochusII a dbo:Monarch ;
                 foaf:surname ""Antiochus II"" .
    
    ?successor dbo:predecessorOrSuccessorOf ?antiochusII ;
               a dbo:Monarch .

    ?royalChild dbo:parent ?successor ;
                a dbo:Monarch .
  }

  OPTIONAL {
    # Commander in Battle of Panium and their child's parent
    ?battle dbr:Battle_of_Panium ;
           dbo:commander ?commander .

    ?child2 dbo:parent ?commander .

    ?parentOfChild2 dbo:spouseOrPartner ?commander .
  }
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
801,71,test,"Give me the professional in the alter ego of the true self of The Shadow and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/writer> ?v8 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v5 <http://dbpedia.org/property/writer> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rapper WHERE {
  # The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .

  # Album ""What U See Is What U Get""
  dbr:What_U_See_Is_What_U_Get a dbo:Album ;
    dbo:artist ?rapper .

  # Rapper and producer associated with the album
  ?rapper a dbo:MusicalArtist, dbo:Rapper ;
          dbo:associatedMusicalArtist ?producer .
}
```",9,17,10,3,3,3,3,71,0,0,8,0,0.0,0
767,54,test,"Give me the reference to  and alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference ?almaMater ?administrationEntity ?settlement
WHERE {
  # Find reference to George Kilbon Nash
  ?nash dbr:George_Kilbon_Nash .
  
  # Get alma mater of George Kilbon Nash
  ?nash dbo:almaMater ?almaMater .

  # Find administration entity involving George Kilbon Nash and a settlement named Green
  ?administrationEntity dbo:member ?nash ;
                       dbo:settlement ?settlement .
  
  FILTER (str(?settlement) = ""Green"")
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
179,16,test,Give me the parent of the child of Bhumibol Adulyadej and person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent
WHERE {
  # Find the child of Bhumibol Adulyadej
  ?child dbo:spouse ?bhumibol .
  ?bhumibol foaf:name ""Bhumibol Adulyadej""@en .

  # Find the person born as Sirikit
  ?person foaf:name ""Sirikit""@th .
  
  # Determine the parent of this person
  ?child dbo:parent ?parent .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
801,53,test,"Give me the producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?alterEgo ?associatedArtist WHERE {
  # Producer of Westside Story (song)
  dbr:Westside_Story_(song) dbo:producer ?producer .

  # Alter ego related to The Shadow
  dbr:The_Shadow dbo:alterEgo ?alterEgo .

  # Associated musical artist who is also a writer for ""40 Dayz & 40 Nightz""
  ?associatedArtist dbo:profession dbr:Musical_artist .
  ?associatedArtist dbo:profession dbr:Artist .
  ?album dbo:writer ?associatedArtist .
  ?album rdfs:label ""40 Dayz & 40 Nightz""@en .

  # Linking the alter ego to the associated artist
  ?alterEgo dbo:associatedMusicalArtist ?associatedArtist .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,55,test,Give me the band of the writer of Apollo (Hardwell song) and band of the person born as Tracey Elizabeth McSween and person born on the birth date of Pavlo Khudzik.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?writerBand ?traceyBand ?personBornOnPavloBirthDate
WHERE {
  # Find the writer of ""Apollo"" by Hardwell and their band
  ?song dbo:composer ?writer .
  ?song rdfs:label ""Apollo""@en .
  ?song dbo:artist dbr:Hardwell .
  
  OPTIONAL { 
    ?writer dbo:musicalBand ?writerBand .
  }
  
  # Find the band of Tracey Elizabeth McSween
  ?tracey a dbo:Person ;
          dbp:name ""Tracey Elizabeth McSween""@en ;
          dbp:birthday ?traceyBirthday .
  
  OPTIONAL {
    ?tracey dbo:musicalBand ?traceyBand .
  }
  
  # Find the birth date of Pavlo Khudzik
  ?pavlo a dbo:Person ;
         dbp:name ""Pavlo Khudzik""@en ;
         dbp:birthday ?pavloBirthday .

  # Find other people born on Pavlo's birthday
  ?person a dbo:Person ;
          dbp:birthday ?pavloBirthday .
  
  FILTER(?person != ?pavlo)
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
404,54,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild
WHERE {
  # Prince George William of Hanover and his spouse
  ?princeGeorgeWilliam a dbo:Person ;
                      dbo:spouse ?spouse .

  # Princess Victoria Louise of Prussia
  ?princessVictoriaLouise a dbo:Person ;
                         rdfs:label ""Princess Victoria Louise of Prussia""@en ;
                         dbo:childOf ?ernestAugustus .

  # Ernest Augustus, Crown Prince of Hanover
  ?ernestAugustus a dbo:Person ;
                  rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .

  # Spouse is Princess Victoria Louise
  FILTER(?spouse = ?princessVictoriaLouise) .

  # Child of the spouse (Princess Victoria Louise)
  ?childOfSpouse a dbo:Person ;
                 dbo:parent ?spouse ;
                 dbo:parent ?princeGeorgeWilliam .

  # The child must be royalty
  FILTER(STRSTARTS(LCASE(?childOfSpouse), ""royalty"")) .

  # Parent of this child (who is also royalty)
  ?parentOfChild a dbo:Person ;
                 dbo:child ?childOfSpouse .

  # Ensure the parent is royalty
  FILTER(STRSTARTS(LCASE(?parentOfChild), ""royalty"")) .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
485,24,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace
WHERE {
  # Joseph Whitaker's birth place that is a region
  dbr:Joseph_Whitaker_(naturalist) dbo:birthPlace ?whitakerBirthPlace .
  ?whitakerBirthPlace rdf:type dbo:Region .

  # Awardee of Eric Gregory Award who is both a writer and poet
  ?awardee dbo:award <http://dbpedia.org/resource/Eric_Gregory_Award> ;
          rdf:type dbo:Writer ;
          rdf:type dbo:Poet .
  ?awardee dbo:birthPlace ?gregoryBirthPlace .

  # Ensure the birth places are the same region
  FILTER (?whitakerBirthPlace = ?gregoryBirthPlace)
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
767,18,test,Give me the alma mater of Carl L. Nippert and reference to  and entity in Baden-Württemberg.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?region WHERE {
  ?person dbo:almaMater ?almaMater .
  ?almaMater dbo:location ?location .
  ?location dbo:country dbr:Germany ;
            rdfs:label ?regionLabel .
  FILTER (CONTAINS(LCASE(?regionLabel), ""baden-württemberg""))
  
  ?person foaf:name ""Carl L. Nippert"" .
}
```

This query does the following:
- Selects the alma mater (`?almaMater`) and its associated region (`?region`).
- Uses `dbo:almaMater` to find the educational institution attended by Carl L. Nippert.
- Ensures that this institution is located in a place with ""Baden-Württemberg"" in its label.
- Filters results to match Carl L. Nippert specifically.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
801,23,test,Give me the professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional
WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  OPTIONAL { ?alterEgo dbo:profession ?professional . }
}
```",3,3,4,3,1,3,3,71,0,0,39640,0,0.0,0
485,26,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of Thomas Warner (poet).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country ?whitakerBirthPlace ?warnerBirthPlace
WHERE {
  # Country in the region of Western European Time
  ?region rdfs:label ""Western European Time""@en .
  ?country dbo:timeZone ?region ;
           a dbo:Country .

  # Birthplace of Joseph Whitaker (naturalist)
  dbr:Joseph_Whitaker_(naturalist) dbo:birthPlace ?whitakerBirthPlace ;
                                    a dbo:Naturalist .
  ?whitakerBirthPlace a dbo:Region .

  # Birthplace of Thomas Warner (poet)
  OPTIONAL {
    dbr:Thomas_Warner_(poet) dbo:birthPlace ?warnerBirthPlace .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
360,28,test,"Give me the writer of the work, that is an album, of Dave Flett and reference to the author of Blinded by the Light and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?albumWriter ?blindedByTheLightAuthor ?deathPlace
WHERE {
  # Find albums written by Dave Flett
  ?album dbo:composer dbr:Dave_Flett .
  ?album dbo:title ?albumTitle .

  # Get the author of ""Blinded by the Light""
  dbr:Blinded_by_the_Light dbo:lyricist ?blindedByTheLightAuthor .
  
  # Find the place of death for Winnie Madikizela-Mandela
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
378,62,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v6 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Carl Pontus Gahn's birth name and associated wars
  VALUES (?carl) { dbr:C._P._Gahn }
  ?carl dbo:birthName ?birthName .
  
  OPTIONAL {
    ?person dbo:birthName ?birthName ;
            dbo:militaryConflict ?war .
  }

  # Louis des Balbes de Berton de Crillon, 1st Duke of Mahón's claim to fame and associated wars
  VALUES (?louis) { dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón }
  ?louis dbo:claimToFame ?fame .
  
  OPTIONAL {
    ?person dbo:claimToFame ?fame ;
            dbo:militaryConflict ?war .
  }

  # Peninsular War and related military conflicts
  VALUES (?peninsularWar) { dbr:Peninsular_War }
  ?peninsularWar a dbo:MilitaryConflict .

  OPTIONAL {
    ?relatedWar dbo:relatedTo ?peninsularWar ;
               a dbo:MilitaryConflict .
    BIND(?relatedWar AS ?war)
  }

  FILTER (?war != ?peninsularWar) # Exclude the Peninsular War itself
}
ORDER BY ?war",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
528,20,test,Give me the war of Irene Morales and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warIrene ?warCommander WHERE {
  # Wars involving Irene Morales
  OPTIONAL {
    ?person rdfs:label ""Irene Morales""@en .
    ?person dbo:participatedIn ?warIrene .
  }
  
  # Wars involving the commander in Battle of La Rinconada de Ate
  OPTIONAL {
    ?battle dbr:Battle_of_La_Rinconada_de_Ate ;
            dbo:commander ?commander .
    ?commander dbo:participatedIn ?warCommander .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
488,61,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?administration ?deathPlace
WHERE {
  # Tokugawa Masako and her spouse's father who is royalty
  ?tokugawaMasako a dbo:Person ;
                  foaf:spouse ?spouse .
  
  ?spouse dbo:father ?spouseFather .
  ?spouseFather dbo:jobTitle ?royaltyRole .
  FILTER(CONTAINS(LCASE(?royaltyRole), ""royalty"")) .

  # Administration of the spouse's father
  OPTIONAL { ?spouseFather dbo:administration ?administration } .

  # Matsudaira Tadamasa and his father who is a politician and office holder
  ?matsudairaTadamasa a dbo:Person ;
                      dbo:father ?matsudairaFather .
  
  ?matsudairaFather dbo:jobTitle ?politicianRole .
  FILTER(CONTAINS(LCASE(?politicianRole), ""politician"") && CONTAINS(LCASE(?politicianRole), ""office holder"")) .

  # Death place of Matsudaira Tadamasa's father
  OPTIONAL { ?matsudairaFather dbo:deathPlace ?deathPlace } .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
747,56,test,Give me the band of Amba Shepherd and person born on the birth date of Pavlo Khudzik and band of the person born as the persona of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandOfAmba ?personWithSameBirthDate ?bandOfPersona
WHERE {
  # Find Amba Shepherd's band
  dbr:Amba_Shepherd dbo:musicalArtist ?bandOfAmba .

  # Get Pavlo Khudzik's birth date
  OPTIONAL { 
    dbr:Pavlo_Khudzik dbp:birthDate ?birthDate .
    
    # Find any person with the same birth date as Pavlo Khudzik
    ?personWithSameBirthDate dbp:birthDate ?birthDate .
    FILTER(?personWithSameBirthDate != dbr:Pavlo_Khudzik)
  }

  # Identify Shèna's persona and find their real identity
  OPTIONAL {
    dbr:Shèna dbo:alsoKnownAs ?persona .
    
    # Find the band associated with this persona
    ?persona dbo:musicalArtist ?bandOfPersona .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
54,36,test,"Give me the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?predecessor
WHERE {
  # Find the child of Thinkhaya of Pagan
  ?thinkhaya dbo:spouse ?parent .
  ?parent dbo:child ?child .

  FILTER(?thinkhaya = dbr:Thinkhaya_of_Pagan)

  # Find the predecessor who is an office holder and royalty
  ?predecessor dbo:successor ?child .
  ?predecessor a dbo:Monarch ;
               dbo:officeHolder true .

  # Ensure there's a reference to Thihapate of Mohnyin
  OPTIONAL {
    ?thihapate dbo:relatedTo ?predecessor .
    FILTER(?thihapate = dbr:Thihapate_of_Mohnyin)
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
427,29,test,Give me the party of the father of Lamberto Andreotti and reference to Partito Popolare Italiano and party of Romano Prodi.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherPartyLabel ?ppiLink ?prodiPartyLabel
WHERE {
  # Lamberto Andreotti's father
  dbr:Lamberto_Andreotti dbo:father ?father .
  
  # Father's political party
  ?father dbo:partyAffiliation ?fatherParty .
  ?fatherParty rdfs:label ?fatherPartyLabel .

  # Link to Partito Popolare Italiano
  OPTIONAL {
    ?fatherParty dbp:relatedTo dbr:Partito_Popolare_Italiano .
    BIND(""Related"" AS ?ppiLink)
  }
  
  # Romano Prodi's political party
  dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
  ?prodiParty rdfs:label ?prodiPartyLabel .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,53,test,"Give me the person decedent at the work of the author of French Algeria and commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?descendant WHERE {
  # Find the author of ""French Algeria""
  ?author dbo:work dbr:French_Algeria .
  
  # Ensure this person was a commander in the Franco-Hova Wars
  ?author dbo:militaryCommanderOf dbr:Franco_Hova_Wars .

  # Find descendants of this author
  ?descendant dbo:parent ?author .

  # Ensure the descendant is connected to Algiers, the capital of Algeria
  ?descendant dbo:livedIn dbr:Algiers .
  
  # Ensure Algiers is a settlement (capital)
  dbr:Algiers rdf:type dbo:PopulatedPlace ;
              dbp:isCapitalOf dbr:Algeria .
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
485,25,test,"Give me the entity in the region, that is a country, of Western European Time and entity in Nottinghamshire and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country ?nottinghamshireEntity ?birthPlace
WHERE {
  # Country in Western European Time zone
  ?country a dbo:Country ;
           dbp:timeZone ""Europe/London"" .
  
  # Entity located in Nottinghamshire
  ?nottinghamshireEntity a dbo:Place ;
                         dbp:locatedIn dbr:Nottinghamshire .

  # Awardee of Eric Gregory Award who is a writer and poet
  ?awardee dbo:award dbr:Educational_Award_for_Writing_the_Eric_Gregory_Award ;
           dbo:birthPlace ?birthPlace .
  
  FILTER EXISTS { ?awardee rdf:type dbo:Writer . }
  FILTER EXISTS { ?awardee rdf:type dbo:Poet . }

}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
994,38,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist
WHERE {
  # Find band members of Donald Maynard Dokken
  dbr:Don_Dokken a dbo:MusicalArtist ;
                 dbo:member ?band .
  
  ?bandMember dbo:member ?band ;
              a dbo:MusicalArtist .

  OPTIONAL {
    # Find associated musical artists of the band member who are part of Meshuggah
    ?associatedBand a dbo:Band, dbo:Group, dbo:Organization ;
                   dbo:member ?bandMember .
    
    ?associatedArtist dbo:member ?associatedBand ;
                      a dbo:MusicalArtist .

    FILTER(?associatedBand = dbr:Meshuggah)
  }
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
10,21,test,Give me the associated musical artist of Matt Colton and band member of Luke Vibert and professional in the birth name of Sharon Kao.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist ?bandMember ?birthName ?profession 
WHERE {
  # Matt Colton's associated musical artist
  OPTIONAL { 
    dbr:Matt_Colton dbo:musicalArtist ?artist .
  }
  
  # Luke Vibert's band members
  OPTIONAL { 
    dbr:Luke_Vibert dbo:bandMember ?bandMember .
  }

  # Sharon Kao's birth name and profession
  OPTIONAL {
    dbr:Sharon_Kao dbo:birthName ?birthName .
  }
  OPTIONAL {
    dbr:Sharon_Kao dbo:profession ?profession .
  }
}
```",4,4,5,2,3,2,3,28,0,2,1,0.0,0.0,0
488,69,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceSaito ?administrationTokugawaFather ?deathPlaceYukiFather
WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlaceSaito .

  # Tokugawa Masako's spouse's father (a royalty) and his administration
  dbr:Tokugawa_Masako dbo:spouse ?tokugawaSpouse .
  ?tokugawaSpouse dbo:father ?royaltyFather .
  ?royaltyFather a dbo:Monarch ;
                 dbo:administrativePost ?administrationTokugawaFather .

  # Yūki Hideyasu's father (a politician) and his death place
  dbr:Yūki_Hideyasu dbo:father ?yukiFather .
  ?yukiFather a dbo:Politician ;
             dbo:deathPlace ?deathPlaceYukiFather .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
54,68,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?entity
WHERE {
  # Thinkhaya of Pagan's child and predecessor
  ?thinkhayaChild dbo:childOf ?thinkhaya .
  ?thinkhaya rdfs:label ""Thinkhaya""@en .
  ?predecessor dbo:predecessor ?thinkhayaChild .

  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?thihapateChild dbo:childOf ?thihapate .
  ?thihapate rdfs:label ""Thihapate""@en .
  ?thihapateChild rdf:type dbo:OfficeHolder ;
                  rdf:type dbo:Royalty .

  # Thado Minsaw of Prome's parent
  ?thadoParent dbo:parentOf ?thadoMinsaw .
  ?thadoMinsaw rdfs:label ""Thado Minsaw""@en .
  ?grandchild dbo:childOf ?thadoParent .

  # Find the common entity
  FILTER (?predecessor = ?entity && ?entity = ?thihapateChild && ?entity = ?grandchild)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
427,48,test,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of the party of Michele Pinto.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiParty ?pintoPartyName
WHERE {
  # Romano Prodi's party affiliation
  dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
  
  # Michele Pinto's party name
  OPTIONAL {
    dbr:Michele_Pinto dbo:partyAffiliation ?pintoParty .
    ?pintoParty rdfs:label ?pintoPartyName .
    FILTER (lang(?pintoPartyName) = 'en')
  }
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
281,53,test,"Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?jonathonAwardWar ?newZealandEntity ?heatherRoyWar
WHERE {
  # Find Jonathon Band's award and the associated war
  ?jonathonBand a dbo:Person ;
                foaf:name ""Jonathon Band"" .
  ?award dbo:recipient ?jonathonBand ;
         dbo:relatedEvent ?jonathonAwardWar .

  # Find entities in Colony of New Zealand involved in that war
  ?newZealandEntity dbo:location dbr:New_Zealand ;
                    dbo:participatedIn ?jonathonAwardWar .

  # Find Heather Roy's profession related to a military unit and its associated war
  ?heatherRoy a dbo:Person ;
              foaf:name ""Heather Roy"" .
  ?profession dbo:field dbr:Military_unit ;
              dbo:heldBy ?heatherRoy .
  ?heatherRoyWar dbo:relatedEvent ?profession .

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,41,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?princess a dbo:Princess ;
            foaf:name ""Victoria Louise of Prussia"" .
  
  ?princess dbo:childOf ?parent1 .
  ?parent1 foaf:name ""Ernest Augustus, Crown Prince of Hanover"" .

  ?princess dbo:spouse ?spouse .

  ?spouse dbo:hasChild ?child .
  ?child a dbo:Royal ;
         dbo:childOf ?parent2 .
  ?parent2 foaf:name ""Ernest Augustus, Duke of Brunswick"" .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
915,18,test,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?result <http://dbpedia.org/ontology/residence> ?v2 . <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?resident
WHERE {
  # Director of ""Pipe Dreams"" (1976 film)
  ?director dbo:directed dbr:Pipe_Dreams_(film) .
  
  # Birthplace of the director
  ?director dbo:birthPlace ?birthPlace .

  # Ensure birthplace is a settlement
  ?birthPlace rdf:type dbo:Settlement .

  # Child of Phillip Spaulding who is fictional and a soap character
  ?child dbo:parent dbr:Phillip_Spaulding .
  ?child rdf:type dbo:FictionalCharacter .
  ?child dbo:genre dbr:SoapOpera .

  # Resident of the birthplace
  ?resident dbo:residence ?birthPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
487,17,test,"Give me the country of 2022 Vermont House of Representatives election and administration of the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country ?administration
WHERE {
  # Identify the country of the Vermont House of Representatives election
  dbr:2022_Vermont_House_of_Representatives_election dbo:country dbr:United_States .
  
  # Find Phil Scott's birth details
  dbr:Phil_Scott dbo:birthPlace ?birthPlace ;
                 dbp:sportsCareer dbr:Soccer .

  # Get the administrative region of his birthplace
  ?birthPlace dbo:administrativeRegion ?administration .

  # Bind the country to United States as Vermont is a state in the USA
  BIND(dbr:United_States AS ?country)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
801,62,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v6 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?rapper ?work WHERE {
  # Lamont Cranston as The Shadow's alter ego
  dbr:Lamont_Cranston dbo:alterEgoOf dbr:The_Shadow .

  # Chris Taylor and his association with musical works
  dbr:Chris_Taylor dbo:musicalArtist dbr:Grizzly_Bear .
  
  # Find a rapper associated with the work produced by Chris Taylor
  ?work dbo:producer dbr:Chris_Taylor ;
        dbo:musicalArtist ?rapper .

  # Ensure the professional is a rapper
  ?rapper rdf:type dbo:Rapper .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
9,60,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater ?nickname
WHERE {
  # Find the organization in Belfast and its mayor who is a politician
  ?organization dbo:location dbr:Belfast .
  ?mayor dbo:positionHeld ?position ;
         dbo:almaMater ?almaMater ;
         rdf:type dbo:Politician .
  ?position dbo:officeHolder ?mayor ;
            dbo:role ""Mayor"" .

  # Find the educational institution in Northern Ireland and its nickname
  ?institution dbo:location dbr:Northern_Ireland ;
               rdf:type dbo:EducationalInstitution ;
               dbp:nickname ?nickname .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
994,58,test,"Give me the associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist1 ?bandMember ?associatedArtist2
WHERE {
  # Find associated musical artist of S.A. Slayer
  dbr:S._A._Slayer dbo:associatedMusicalArtist ?associatedArtist1 .

  OPTIONAL {
    # Find person born who is a musical artist as the persona of Don Dokken
    ?persona rdfs:label ""Don Dokken""@en .
    ?persona dbo:birthPlace ?personBorn .
    ?personBorn dbo:associatedMusicalArtist ?bandMember .
    
    # Ensure band member is associated with Meshuggah
    ?bandMember dbo:memberOf dbr:Meshuggah .

    # Find associated musical artist of the band member
    ?bandMember dbo:associatedMusicalArtist ?associatedArtist2 .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
994,63,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist
WHERE {
  # Step 1: Find the associated musical artist of Watchtower
  ?watchtowerArtist dbo:associatedMusicalArtist dbr:Watchtower .
  
  # Step 2: Find the associated musical artist of this second artist
  ?secondArtist dbo:associatedMusicalArtist ?watchtowerArtist .
  
  # Step 3: Identify a band member of Meshuggah who is also part of a band and group/organization
  ?meshuggahMember dbo:band dbr:Meshuggah ;
                  a dbo:Band ;
                  a dbo:Organization .

  # Step 4: Determine the band member of Donald Maynard Dokken
  ?dokkenBandMember dbo:bandMemberOf ?personDokken .
  
  # Linking all together to find the final artist
  ?finalArtist dbo:associatedMusicalArtist ?secondArtist ;
               dbo:bandMemberOf ?meshuggahMember ;
               dbo:bandMemberOf ?dokkenBandMember .

  # Ensure person is Donald Maynard Dokken
  ?personDokken rdfs:label ""Donald Maynard Dokken""@en .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
391,49,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of the figure known as Hub City.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actorName
WHERE {
  ?movie a dbo:Film ;
         dbo:workType dbr:TelevisionShow ;
         dbo:starring ?actor .
  
  ?figure rdfs:label ""Hub City""@en ;
          dbo:nativePlace ?hubCity ;
          dbo:profession ?profession .

  FILTER EXISTS { ?hubCity rdfs:label ""Hub City""@en }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
747,67,test,"Give me the band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandOfShena ?bandOfAmbaShepherd
WHERE {
  # Find the person known as Shèna and their band
  ?shena dbo:birthName ""Shèna""@en .
  ?shena dbo:member ?bandOfShena .

  # Find Amba Shepherd, the writer of a song, and their band
  ?ambaShepherd foaf:name ""Amba Shepherd"" .
  ?song dbo:lyricsAuthor ?ambaShepherd ;
        rdf:type dbo:Songs .
  ?ambaShepherd dbo:member ?bandOfAmbaShepherd .

  # Find the person born on 1985-04-29
  ?person dbo:birthday ""1985-04-29""^^xsd:date .
  
  OPTIONAL {
    ?shena foaf:name ?nameShena .
    FILTER regex(?nameShena, ""Shèna"", ""i"")
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
488,63,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceSaito ?deathPlaceFatherYuki ?administrationFatherGoMizunoo
WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlaceSaito .

  # Yūki Hideyasu's father (a politician) and his death place
  dbr:Yūki_Hideyasu dbo:father ?fatherYuki .
  ?fatherYuki a dbo:Politician ;
              dbo:deathPlace ?deathPlaceFatherYuki .

  # Emperor Go-Mizunoo's father and his administration
  dbr:Emperor_Go-Mizunoo dbo:father ?fatherGoMizunoo .
  ?fatherGoMizunoo dbo:officeHeld ?administrationFatherGoMizunoo .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
994,67,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of S.A. Slayer.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist
WHERE {
  # Fredrik Thordendal and his band
  dbr:Fredrik_Thordendal dbo:memberOf ?band .
  
  # The band is an organization
  ?band a dbo:Band ;
        a dbo:Organization .

  # Band members who are part of other bands or groups (organizations)
  ?bandMember dbo:memberOf ?otherBand .
  ?bandMember dbr:Fredrik_Thordendal .
  ?otherBand a dbo:Band ;
             a dbo:Organization .

  # Persona of Don Dokken
  ?donDokkenPersona dbo:associatedMusicalArtist ?dokkenArtist .
  FILTER (str(?donDokkenPersona) = ""Don Dokken"")

  # S.A. Slayer's associated musical artist
  dbr:S._A._Slayer dbo:associatedMusicalArtist ?slayerArtist .

  # Find the intersection of these associations
  ?dokkenArtist = ?slayerArtist .
  ?otherBand dbo:associatedMusicalArtist ?associatedArtist .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
421,26,test,Give me the person born as the birth name of Dino Merlin and band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band WHERE {
  # Dino Merlin's birth name
  dbr:Dino_Merlin dbo:birthName ?birthName .
  
  # Person with the same birth name as Dino Merlin
  ?person dbo:birthName ?birthName .

  # Band member of an award-winning band
  ?band dbo:member ?person ;
        dbo:award ?award .

  # Native of SFRY
  ?person dbp:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
378,68,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war 
WHERE {
  # Find Carl Pontus Gahn's birth name and link to George Augustus Eliott
  dbr:Carl_Pontus_Gahn dbo:birthName ?birthName .
  
  # Link George Augustus Eliott to the Great Siege of Gibraltar
  dbr:George_Augustus_Eliott dbo:claimToFame dbr:Great_Siege_of_Gibraltar .

  # Find wars involving George Augustus Eliott, including Peninsular War
  ?war dbo:commander dbr:George_Augustus_Eliott .
  
  OPTIONAL {
    FILTER(?war = dbr:Peninsular_War)
  }
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
360,26,test,"Give me the reference to the author of Blinded by the Light and native of Johannesburg and writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?album WHERE {
  ?song dbo:lyricsBy ?author .
  ?song rdfs:label ""Blinded by the Light""@en .

  ?person dbo:nationality dbr:South_Africa ;
          dbo:birthPlace dbr:Johannesburg ;
          foaf:name ?author .

  ?album dbo:artist dbr:Dave_Flett ;
         dbo:writer ?person .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
435,26,test,"Give me the work of the author of Iceland and region of Greenwich Mean Time and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work ?region ?territory
WHERE {
  # Works by J.R.R. Tolkien
  ?author rdfs:label ""J.R.R. Tolkien""@en .
  ?author dbo:works ?work .

  # Regions using GMT
  ?region dbo:timeZone dbr:Time_in_the_United_Kingdom .
  ?region rdfs:label ?regionLabel .

  # Reykjavik administering Iceland
  ?territory dbo:capital dbr:Reykjavík .
  ?territory rdfs:label ""Iceland""@en .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
427,70,test,"Give me the reference to the name of Italian People's Party (1994) and party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?italianPeoplePartyRef ?fatherParty ?prodiParty
WHERE {
  # Italian People's Party (1994)
  dbr:Italian_People%27s_Party_(1994) dbo:wikiPageRedirects ?italianPeoplePartyRef .

  # Father of an alumnus of MIT and his party affiliation
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
           dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .

  # Romano Prodi's birth name and party affiliation
  dbr:Romano_Prodi dbo:birthName ""Romano Prodi""@en ;
                   dbo:occupation dbr:Politician ;
                   dbo:officeHolder true ;
                   dbo:partyAffiliation ?prodiParty .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
360,20,test,"Give me the reference to Manfred Mann and native of the death place, that is a settlement, of Winnie Madikizela-Mandela and writer of The Roaring Silence.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manfredMannUri ?deathPlaceNativeUri
WHERE {
  # Manfred Mann and his album ""The Roaring Silence""
  dbr:Manfred_Mann a dbo:MusicalArtist .
  dbr:The_Roaring_Silence dbo:composer dbr:Manfred_Mann .

  # Winnie Madikizela-Mandela's death place
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlaceUri .
  
  # Ensure the death place is a settlement
  ?deathPlaceUri a dbo:Settlement .

  # Get the native place of the death location
  ?deathPlaceUri dbo:native d?nativeUri .
  ?nativeUri a dbo:Place .

  BIND(dbr:Manfred_Mann AS ?manfredMannUri)
  BIND(?nativeUri AS ?deathPlaceNativeUri)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
92,45,test,Give me the band member of Nevermore and associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nevermoreBandMember ?jimSheppardArtist ?josephMichaelBand
WHERE {
  # Band member of Nevermore
  ?bandMember dbo:bandMember ?nevermore .
  FILTER(STR(?nevermore) = ""Nevermore"") .
  BIND(?bandMember AS ?nevermoreBandMember)

  # Associated musical artist of Jim Sheppard
  ?jimSheppard foaf:name ""Jim Sheppard"" .
  ?artist dbo:musicalArtist ?jimSheppard .
  BIND(?artist AS ?jimSheppardArtist)

  # Band of the person born as Joseph Michael
  ?person foaf:birthName ""Joseph Michael"" .
  ?band dbo:bandMember ?person .
  BIND(?band AS ?josephMichaelBand)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,45,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of Rif War and military force of Spanish Civil War.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find El Director
  dbr:El_Director a dbo:Person ;
                  foaf:name ""El Director"" .

  # Find the Rif War and Spanish Civil War events
  dbr:The_Rif_War a dbo:Event .
  dbr:Spanish_Civil_War a dbo:Event .

  # Find commanders in these wars
  ?commander a dbo:Person ;
             dbo:positionHeld ?rifCommanderRole ;
             dbo:positionHeld ?civilWarCommanderRole .

  # Ensure the commander is involved in both events
  ?rifCommanderRole dbo:event dbr:The_Rif_War .
  ?civilWarCommanderRole dbo:event dbr:Spanish_Civil_War .

  # Link El Director to these roles if applicable (optional, based on data availability)
  OPTIONAL { ?commander foaf:name ""El Director"" }
}
```",5,6,6,3,3,3,3,71,0,0,11,0,0.0,0
232,44,test,"Give me the child of Jon Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Jon Pertwee's child
  ?jonPertwee dbo:spouse ?sylvieBermann .
  ?jonPertwee dbo:child ?child .

  # Sylvie Bermann's residence
  ?sylvieBermann dbo:residence ?settlement .
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_Kingdom .

  # Sean Pertwee's claim to fame
  ?seanPertwee dbo:claimToFame ?film .
  ?film a dbo:Film ;
        dbo:genre ?militaryConflict .
  ?militaryConflict a dbo:MilitaryConflict .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
617,37,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfNysa ?spouseOfRoyalChild
WHERE {
  # Find Nysa and her parent
  ?nysa a dbo:Person ;
        foaf:name ""Nysa""@en .
  
  ?nysa dbo:spouse ?pharnacesI .
  ?pharnacesI foaf:name ""Pharnaces I of Pontus""@en .

  ?nysa dbo:parent ?parentOfNysa .

  # Find Antiochus and his successor
  ?antiochus a dbo:Person ;
             foaf:name ""Antiochus (son of Antiochus III the Great)""@en .
  
  ?successor dbo:succeededBy ?antiochus .
  ?successor a dbo:Monarch .

  # Find child of successor who is royalty
  ?childOfSuccessor dbo:parent ?successor ;
                   a dbo:Person ;
                   dbo:royalty ""true""^^xsd:boolean .

  # Find spouse of the royal child
  ?childOfSuccessor dbo:spouse ?spouseOfRoyalChild .
}",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
54,70,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v7 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  ?child dbo:parent ?father .
  ?father dbo:child dbr:Soe_Min_Wimala_Dewi .

  ?parent dbo:parent ?thadoMinsaw .
  ?thadoMinsaw dbr:Thado_Minsaw_of_Prome .

  ?child dbo:parent ?parent .

  ?officeHolder dbo:officeHolder ?child .
  ?royalty dbo:royalty ?child .

  ?predecessor dbo:successor ?child .

  FILTER (?officeHolder != """" && ?royalty != """")
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
48,17,test,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash and band of Carl Falk.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorBand ?falkBand WHERE {
  # Find shows with Stacey Dash
  ?show dbo:starring dbr:Stacey_Dash .
  
  # Check if Stacey Dash is also a musical artist and get her band
  OPTIONAL {
    ?dashArtist dbo:performerIn ?show ;
               a dbo:MusicalArtist ;
               dbo:band ?actorBand .
  }
  
  # Find Carl Falk's band
  ?falkArtist a dbo:MusicalArtist ;
              dbo:band ?falkBand ;
              foaf:name ""Carl Falk""^^xsd:string .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
9,68,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?mayorAlmaMater ?universityNickname ?awardeeAlmaMater
WHERE {
  # Find the organization in Belfast and its mayor who is a politician
  ?organization dbo:location dbr:Belfast .
  ?mayor dbo:positionHeld ?position ;
         dbo:almaMater ?mayorAlmaMater ;
         rdf:type dbo:Politician .
  ?position dbo:positionTitle ""Mayor""@en .

  # Find the nickname of Queen's University Belfast
  dbr:Queen's_University_Belfast dbp:nickname ?universityNickname .

  # Find the alma mater of someone who received Royal Medals
  ?awardee dbo:almaMater ?awardeeAlmaMater ;
           dbo:awardReceived dbr:Royal_Medals .
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
48,16,test,"Give me the band of the actor, that is a musical artist, of Honor Up and band of the writer of Emotion (Carly Rae Jepsen album).",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorBand ?writerBand
WHERE {
  # Find the actor associated with ""Honor Up""
  ?actor dbo:associatedWith dbr:Honor_Up .
  
  # Check if this actor is also a musical artist and find their band
  OPTIONAL { 
    ?actor dbo:musicalArtist true .
    ?actor dbo:band ?actorBand .
  }
  
  # Find the writers of the album ""Emotion""
  ?album dbo:title ""Emotion (Carly Rae Jepsen album)""@en .
  ?album dbo:writer ?writer .

  # Find the band associated with each writer
  OPTIONAL {
    ?writer dbo:band ?writerBand .
  }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
801,48,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?associatedArtist WHERE {
  # The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .
  
  # Professional associated with Lamont Cranston (The Shadow)
  dbr:Lamont_Cranston dbo:profession ?professional .

  # DMX, the writer of ""40 Dayz & 40 Nightz""
  dbr:DMX dbo:album dbr:40_Dayz_&_40_Nightz .
  
  # Associated musical artist with DMX
  dbr:DMX dbo:musicalArtist ?associatedArtist .
}
```",5,7,6,3,2,3,3,71,0,0,22,0,0.0,0
488,57,test,"Give me the birth place of Enomoto Takeaki and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEnomoto ?deathPlaceFatherMatsudaira ?administrationGoMizunooFather
WHERE {
  # Enomoto Takeaki's birth place
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceEnomoto .

  # Matsudaira Tadamasa's father who was a politician and office holder
  dbr:Matsudaira_Tadamasa dbo:father ?fatherMatsudaira .
  ?fatherMatsudaira rdf:type dbo:Politician ;
                    dbo:officeHolder true .
  ?fatherMatsudaira dbo:deathPlace ?deathPlaceFatherMatsudaira .

  # Emperor Go-Mizunoo's father
  dbr:Emperor_Go-Mizunoo dbo:father ?goMizunooFather .
  ?goMizunooFather dbo:administration ?administrationGoMizunooFather .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
427,50,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherParty ?prodiParty
WHERE {
  # Find an alumnus of MIT and their father
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .

  # Get the political party of the father
  OPTIONAL { ?father dbo:party ?fatherParty . }

  # Identify Romano Antonio Prodi as a politician and office holder
  dbr:Romano_Antonio_Prodi dbo:officeHolder true ;
                           rdf:type dbo:Politician .

  # Get the political party of Romano Antonio Prodi
  OPTIONAL { dbr:Romano_Antonio_Prodi dbo:party ?prodiParty . }
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
492,67,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentFrenchAlgeria ?personDecedentKhemisMilianaCapital ?commanderInVerdunWar
WHERE {
  # Person decedent at French Algeria
  ?personDecedentFrenchAlgeria dbo:deathPlace dbr:French_Algeria .
  
  # Person decedent at the capital of Khemis Miliana District
  ?personDecedentKhemisMilianaCapital dbo:deathPlace ?capitalCity .
  ?capitalCity dbo:country dbr:Khemis_Miliana_District ;
               a dbo:Settlement .

  # Commander in the war of the Battle of Verdun
  ?commanderInVerdunWar dbo:commandedMilitaryConflict dbr:Battle_of_Verdun ;
                        dbo:deathPlace ?place1 .
  
  # Linking commanders to decedents
  ?personDecedentFrenchAlgeria dbo:decedent ?commanderInVerdunWar .
  ?personDecedentKhemisMilianaCapital dbo:decedent ?commanderInVerdunWar .

}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
701,60,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the spouse of Amun-her-khepeshef.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseOfFather WHERE {
  # Find the commander in Battle of Perire
  ?commander dbo:event dbp:battle_of_perire .
  
  # Identify the father of this commander
  ?father dbo:child ?commander .

  # Get the spouse of this father who is royalty
  ?spouseOfFather dbo:spouse ?father ;
                  a dbo:RoyalFamilyMember .

  # Find Amun-her-khepeshef's spouse
  ?amunHerKhepeshef dbp:spouse ?amunSpouse .

  # Identify the child of this spouse
  ?child dbo:parent ?amunSpouse .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
747,28,test,Give me the band of Shèna and person born on the birth date of Pavlo Khudzik and band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?shenaBand ?personBornOnPavloBirthDate ?ambaBand
WHERE {
  # Find Shèna's band
  ?shena a dbo:MusicalArtist ;
         foaf:name ""Shèna"" .
  ?shena dbo:band ?shenaBand .

  # Find Pavlo Khudzik's birth date
  ?pavloKhudzik a dbo:Person ;
                dbp:birthday ?pavloBirthDate .
  
  # Find a person born on the same date as Pavlo Khudzik
  ?personBornOnPavloBirthDate a dbo:Person ;
                              dbp:birthday ?pavloBirthDate .

  # Find Amba Shepherd's band
  ?ambaShepherd a dbo:MusicalArtist ;
                foaf:name ""Amba Shepherd"" .
  ?ambaShepherd dbo:band ?ambaBand .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
659,50,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander
WHERE {
  # Rutger Jan Schimmelpenninck is associated with a societal event that includes a military conflict
  ?event dbo:associatedWith dbr:Rutger_Jan_Schimmelpenninck .
  ?event rdf:type dbo:MilitaryConflict .

  # The 'Polish Horse' is a military unit and organization involved in the same war
  ?unit rdfs:label ""Polish Horse""@en .
  ?unit rdf:type dbo:MilitaryUnit ;
        dbo:participatedIn ?event .

  # Find the commander of the 'Polish Horse'
  ?commander dbo:commanded ?unit .
}
```",5,12,6,3,2,3,3,71,0,0,31,0,0.0,0
182,27,test,Give me the war of Mahesh Senanayake and war of the work of Gotabhaya Rajapaksa and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?result <http://dbpedia.org/ontology/place> ?v0 . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?maheshRole ?gotabhayaRole ?tamaraNationality
WHERE {
  # War involving Mahesh Senanayake and Gotabhaya Rajapaksa
  dbr:Sri_Lankan_Civil_War dbo:participatedIn ?war .
  
  # Roles of Mahesh Senanayake in the war
  OPTIONAL { 
    dbr:Mahesh_Senanayake dbo:role ?maheshRole .
  }
  
  # Role of Gotabhaya Rajapaksa in the war
  OPTIONAL {
    dbr:Gotabhaya_Rajapaksa dbo:role ?gotabhayaRole .
  }

  # Nationality of Tamara Kunanayakam
  dbr:Tamara_Kunanayakam dbo:nationality dbr:Sri_Lanka ;
                        rdfs:label ?tamaraNationality .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
701,64,test,"Give me the parent of Henuttawy (19th dynasty) and parent of the child of the spouse of Amun-her-khepeshef and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?henuttawyParent ?amunChildParent ?commanderSpouse
WHERE {
  # Henuttawy (19th dynasty) and her parent
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy (19th dynasty)""@en .
  OPTIONAL { ?henuttawy dbo:parent ?henuttawyParent . }

  # Amun-her-khepeshef's spouse's child's parent
  ?amunHerKhepeshef a dbo:Person ;
                   rdfs:label ""Amun-her-khepeshef""@en .
  OPTIONAL { ?amunHerKhepeshef dbo:spouse ?spouse . }
  OPTIONAL { ?spouse dbo:child ?child . }
  OPTIONAL { ?child dbo:parent ?amunChildParent . }

  # Commander in Battle of Perire and spouse of the commander's father
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Perire""@en .
  OPTIONAL { ?battle dbo:commander ?commander . }
  OPTIONAL { ?commander a dbo:Person ; 
             dbo:father ?father . }
  OPTIONAL { ?father dbo:spouse ?commanderSpouse . }

  # Ensure the commander is royalty
  FILTER (?commander dbr:Royalty)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
232,53,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeOfResidence
WHERE {
  # Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:residence ?residence .
  
  # Ensure the settlement is British
  ?residence a dbo:Settlement ;
             dbp:country dbr:United_Kingdom .

  # Actor of ""Dog Soldiers""
  ?actor dbo:film dbr:Dog_Soldiers_(2002_film) .

  # Link actor to Jon Pertwee as a child
  ?actor dbo:childOf dbr:Jon_Pertwee .

  # Native of the residence
  ?residence dbp:nativeOf ?nativeOfResidence .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
197,8,test,Give me the birthplace of the awardee of Leroy P. Steele Prize and birthplace of Dumitru Nadu.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?steeleAwardeeBirthplace ?dumitruNaduBirthplace
WHERE {
  # Find the most recent awardee of the Leroy P. Steele Prize
  ?steeleAward dbo:recipient ?steeleAwardee .
  ?steeleAwardee dbo:birthPlace ?steeleAwardeeBirthplace .

  # Find Dumitru Prună's birthplace
  dbr:Dumitru_Prună dbo:birthPlace ?dumitruNaduBirthplace .
}
```

This query assumes that the most recent awardee of the Leroy P. Steele Prize can be identified by a specific DBpedia resource or pattern, which might need adjustment based on available data.",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
747,45,test,Give me the person born on 1985-04-29 and band of Amba Shepherd and band of the person born as the persona of Shèna.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ambaBand ?shenaBand WHERE {
  # Find Amba Shepherd and her band
  ?amba a dbo:Person ;
        dbo:birthday ""1985-04-29""^^xsd:date ;
        dbo:musicGroup ?ambaBand .

  # Find the person known as Shèna's persona and their band
  ?shena a dbo:Person ;
         foaf:name ""Shèna""@en ;
         dbo:musicGroup ?shenaBand .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
963,17,test,"Give me the entity in Serbia and administration of the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party ?rulingStatus ?location
WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Serbia ;
         dbo:location ?location .
  
  OPTIONAL { 
    ?party dbo:rulingParty ?rulingStatus .
  }
  
  FILTER (str(?location) = ""21205"")
}
```

This query:
- Selects political parties (`?party`) in Serbia.
- Retrieves their ruling status if available (`?rulingStatus`).
- Filters results to include only those with a location matching ""21205"".",4,5,5,3,2,3,2,20,0,0,84,0,0.0,0
391,47,test,"Give me the native of the figure known as Hub City and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Find Sherry Hormann's spouse
  ?spouse dbo:spouse dbr:Sherry_Hormann .
  
  # Identify the notable work of this person (actor)
  ?work dbo:starring ?spouse .

  # Get the birthplace of the actor
  ?spouse dbo:birthPlace ?native .
}
```",5,6,6,3,2,3,3,71,0,2,1,0.0,0.0,0
392,22,test,"Give me the entity in the region, that is a country, of Central European Time and region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT DISTINCT ?country WHERE {
  ?event dbo:location dbr:Aguilar_de_Segarra .
  ?event a dbo:SportingEvent .

  ?region dbo:timeZone dbr:Central_European_Time .
  ?region dbo:country ?country .
  FILTER (?country != dbr:)

  OPTIONAL { ?country a dbo:Country . }
}
```",4,6,5,2,2,2,3,28,0,0,28787,0,0.0,0
9,35,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of Queen's University Belfast.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMaterLabel
WHERE {
  ?person a dbo:Mayor ;
          dbo:almaMater ?university .
  ?university rdfs:label ?almaMaterLabel .
  
  OPTIONAL { 
    ?person dbo:politicalAffiliation dbr:Queen's_University_Belfast .
  }
}
```

This query assumes:
- The mayor is linked to an alma mater via `dbo:almaMater`.
- There might be a political affiliation with Queen's University Belfast, which we capture using an optional clause.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
488,62,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of Emperor Go-Yōzei and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v6 . ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?deathPlace
WHERE {
  # Saitō Hajime's birth place
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .

  # War as a military conflict, event, and societal event
  ?war dbo:type/dbo:subClassOf* dbo:MilitaryConflict ;
       dbo:type/dbo:subClassOf* dbo:Event ;
       dbo:type/dbo:subClassOf* dbo:SocietalEvent .
  
  # Saitō Hajime as a commander in the war
  dbr:Saitō_Hajime dbo:commanderIn ?war .

  # Administration associated with Emperor Go-Yōzei
  dbr:Emperor_Go-Yōzei dbo:administers ?administration .

  # Matsudaira Tadamasa's father as a politician and office holder
  dbr:Matsudaira_Tadamasa dbo:father ?father .
  
  ?father a dbo:Politician ;
          a dbo:OfficeHolder .

  # Death place of Matsudaira Tadamasa's father
  ?father dbo:deathPlace ?deathPlace .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
184,50,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfChild ?royalty
WHERE {
  # Archduke Joseph Francis of Austria's child and the parent of that child
  ?child1 dbo:child ?josephFrancis .
  ?parentOfChild dbo:child ?child1 .

  # Archduke Ladislaus Philipp of Austria's lineage
  ?ladislausPhilipp dbo:child ?parentLadislaus .
  ?parentLadislaus dbo:child ?child2 .

  # Ensure the child is a royalty
  ?child2 rdfs:subClassOf* dbo:RoyalFamilyMember .

  # Match the parent of Joseph's child with a royalty from Ladislaus' lineage
  FILTER (?parentOfChild = ?child2)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,49,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commanderInForce
WHERE {
  # Francisco Franco's military force
  ?franco dbo:militaryConflict dbr:Spanish_Civil_War .
  
  # The Spanish Civil War as a societal event, an event, and a military conflict
  dbr:Spanish_Civil_War rdf:type dbo:SocietalEvent ;
                        rdf:type dbo:Event ;
                        rdf:type dbo:MilitaryConflict .

  # Commander in the force (event) of ""El Director""
  ?elDirector dbo:roleName ""El Director"" .
  ?elDirector dbo:event dbr:Spanish_Civil_War .
  
  # Linking military force and commander
  ?militaryForce dbo:militaryConflict dbr:Spanish_Civil_War ;
                 dbo:commander ?commanderInForce .

  FILTER (?franco = ?commanderInForce || ?elDirector = ?commanderInForce)
}
```",5,9,6,3,2,3,3,71,0,0,34,0,0.0,0
547,70,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v3 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?restingPlace1 ?restingPlace2 ?restingPlace3
WHERE {
  # Resting place of the awardee of the award of Gerald Graham
  ?award dbo:recipient ?awardee .
  ?award dbo:winner ?awardee .
  ?gGraham dbr:Gerald_Graham .
  ?gGraham dbp:honouredWith ?award .
  
  OPTIONAL { ?awardee dbo:deathPlace ?restingPlace1 . }
  
  # Resting place of the actor in a show with Emily Richard
  ?show dbo:starring ?emilyRichard .
  ?emilyRichard dbr:Emily_Richard .
  
  ?actor dbo:starring ?show .
  
  OPTIONAL { ?actor dbo:deathPlace ?restingPlace2 . }
  
  # Resting place of the child of James Burton (property developer)
  ?jamesBurton dbr:James_Burton_(property_developer) .
  ?child dbo:parent ?jamesBurton .
  
  OPTIONAL { ?child dbo:deathPlace ?restingPlace3 . }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
488,53,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?war ?administration ?deathPlace
WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .

  # War involving Saitō Hajime
  ?saitoWar dbo:participatedIn ?war .
  ?saitoWar rdf:type dbo:MilitaryConflict ;
            rdf:type dbo:Event ;
            rdf:type dbo:SocietalEvent .
  dbr:Saitō_Hajime dbo:participatedIn ?saitoWar .

  # Father of Emperor Go-Mizunoo's administration
  dbr:Emperor_Go-Mizunoo dbo:father ?father .
  ?father dbo:office ?administration .

  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
754,17,test,Give me the parent of the child of the reference to Ram Khamhaeng the Great and parent of Loe Thai.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent1 ?parent2
WHERE {
  # Find the child of Ram Khamhaeng the Great
  ?child1 dbo:parent dbr:Ram_Khamhaeng_the_Great .
  
  # Find the parent of that child
  ?child1 dbo:parent ?parent1 .

  # Find the child of Loe Thai
  ?child2 dbo:parent dbr:Loe_Thai .

  # Find the parent of that child
  ?child2 dbo:parent ?parent2 .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
55,20,test,"Give me the band of Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony and band member of Guns N' Roses.",SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?newstedBand ?bandMemberOfNewstedBand ?sfsymphonyBandMember ?gnrBandMember 
WHERE {
  # Find the band of Newsted
  ?newsted dbo:member dbr:Marty_Newsted .
  ?newsted dbo:name ?newstedBand .

  OPTIONAL {
    # Check if this band is also a group and find its members
    ?bandMemberOfNewstedBand dbo:memberOf ?newsted .
    FILTER EXISTS { ?bandMemberOfNewstedBand a dbo:MusicalGroup }
  }

  # Find the San Francisco Symphony's band members who are bands/groups
  ?sfsymphony dbr:San_Francisco_Symphony .
  ?sfsymphonyBandMember dbo:member ?sfsymphony .
  FILTER EXISTS { ?sfsymphonyBandMember a dbo:MusicalGroup }

  # Find Guns N' Roses' band members
  ?gnr dbr:Guns_N'_Roses .
  ?gnrBandMember dbo:member ?gnr .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
184,56,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonParent
WHERE {
    # Step 1: Archduchess Margaret of Austria (born 1925)
    ?margaret a dbo:Person ;
              foaf:name ""Margaret of Austria"" ;
              dbo:birthYear ""1925""^^xsd:gYear .

    ?margaretParent dbo:child ?margaret .
    
    # Step 1.2: Child of Margaret's parent
    ?grandChild dbo:parent ?margaretParent .

    # Step 2: Native of Budapest and child of Archduke Joseph August of Austria
    ?josephAugust a dbo:Person ;
                  foaf:name ""Joseph August of Austria"" .
    
    ?budaNative dbo:birthPlace dbr:Budapest ;
                dbo:parent ?josephAugust .

    # Step 2.1: Parent of the native of Budapest
    ?budaParent dbo:child ?budaNative .

    # Find common parent
    ?commonParent dbo:child ?grandChild .
    ?commonParent dbo:child ?budaNative .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
427,69,test,"Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . ?v7 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?micheleParty ?lambertoFatherParty ?romanoBirthName
WHERE {
  # Michele Pinto's party
  OPTIONAL {
    ?michele dbr:Michele_Pinto .
    ?michele dbo:party ?micheleParty .
  }

  # Father of Lamberto Andreotti and his party
  OPTIONAL {
    ?lamberto dbr:Lamberto_Andreotti .
    ?lamberto foaf:parent ?father .
    ?father dbo:party ?lambertoFatherParty .
  }

  # Romano Prodi's birth name, ensuring he is an office holder and a politician
  OPTIONAL {
    ?romano dbr:Romano_Prodi ;
            foaf:name ?romanoBirthName ;
            dbo:officeHolder true ;
            dbo:politician true .
  }
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
617,41,test,"Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antiochus III the Great and his children
  dbr:Antiochus_III_the_Great dbo:child ?child1 .
  
  # Parent of Nysa (wife of Pharnaces I of Pontus)
  ?parent dbo:spouse dbr:Nysa_(wife_of_Pharma) ;
          dbo:child ?nysa .
  FILTER(?child1 = ?parent)

  # Child of the child who is royalty
  ?grandchild dbo:childOf ?parent ;
              a dbo:Monarch .

  # Spouse of the grandchild
  ?grandchild dbo:spouse ?spouse .
}
```",5,6,6,2,3,3,3,71,0,0,2,0,0.0,0
232,42,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native
WHERE {
  # Find Sylvie Bermann's residence
  ?sylvie a dbo:Person;
          foaf:name ""Sylvie Bermann""@en.
  
  ?residence dbo:resident ?sylvie;
             dbo:settlementType ?settlementType;
             dbo:country dbr:United_Kingdom.

  FILTER(?settlementType IN (dbo:Town, dbo:Village)) # Assuming settlement types

  # Find John Devon Roland Pertwee's child
  ?john a dbo:Person;
        foaf:name ""John Devon Roland Pertwee""@en.
  
  ?child dbo:parent ?john;
         dbo:actorInFilm dbr:Dog_Soldiers_(film).

  # Get the native of the residence
  ?native dbp:nativeOf ?residence.
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
915,19,test,"Give me the father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding and resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father
WHERE {
  # Lizzie Spaulding's parent
  ?parent dbo:spouse ?lizzie .
  ?lizzie a dbo:FictionalCharacter ;
          dbo:genre dbr:Soap_opera .

  # Parent must also be a fictional and soap character
  ?parent a dbo:FictionalCharacter ;
          dbo:genre dbr:Soap_opera .

  # Father of the parent
  ?father dbo:spouse ?parent .

  # Stephen Verona's birthplace
  dbr:Stephen_Verona dbo:birthPlace ?settlement .
  
  # Settlement must be a type of settlement
  ?settlement a dbo:Settlement .

  # Ensure father is also a fictional and soap character
  ?father a dbo:FictionalCharacter ;
          dbo:genre dbr:Soap_opera .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
427,41,test,Give me the party of the father of Lamberto Andreotti and reference to the name of Italian People's Party (1994) and party of Romano Prodi.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherParty ?italianPeoplePartyName ?prodiParty
WHERE {
  # Lamberto Andreotti's father and his party
  dbr:Lamberto_Andreotti dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .

  # Italian People's Party (1994)
  dbr:Italian_People%27s_Party_(1994) rdfs:label ?italianPeoplePartyName .

  # Romano Prodi and his party
  dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
161,41,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForceLargoCaballero ?militaryForceFranco
WHERE {
  # For Francisco Largo Caballero
  ?largo a dbo:MilitaryConflict ;
         dbo:relatedEvent ?societalEventLargo .
  
  OPTIONAL { 
    ?largo dbo:militaryUnit ?militaryForceLargoCaballero .
  }
  
  FILTER (?societalEventLargo != dbr:Francisco_Largo_Caballero) # Ensure it's a societal event, not the person himself

  # For Francisco Franco
  ?franco a dbo:MilitaryConflict ;
          dbo:relatedEvent ?societalEventFranco .
  
  OPTIONAL {
    ?franco dbo:militaryUnit ?militaryForceFranco .
  }
  
  FILTER (?societalEventFranco != dbr:Francisco_Franco) # Ensure it's a societal event, not the person himself

  # Additional condition for Francisco Franco as commander in Biscay Campaign
  ?franco dbo:commanderOf ?biscayCampaign .
  ?biscayCampaign rdfs:label ""Biscay Campaign""@en .

}
```",5,10,6,2,3,3,3,71,0,0,3,0,0.0,0
404,47,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia a dbo:Monarch ;
    dbo:spouse ?spouse .

  # Her child (who is royalty)
  ?child dbo:parent dbr:Princess_Victoria_Louise_of_Prussia ;
         a dbo:Monarch .

  # The parent of that child (also royalty)
  ?grandChildParent dbo:parent ?child ;
                   a dbo:Monarch .

  # Prince George William of Hanover
  ?grandChildParent dbr:Prince_George_William_of_Hanover .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
959,55,test,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName ?countryOfResidence ?almaMaterName
WHERE {
  # Takashi Sekizuka's team manager
  ?team dbo:player dbr:Takashi_Sekizuka ;
        dbo:coach ?manager .
  ?manager rdfs:label ?managerName .

  # Yōichi Masuzoe's country of residence
  dbr:Yōichi_Masuzoe dbo:nationality ?countryOfResidence .

  # Eiji Ōtsuka's alma mater, which is a Japanese university
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  ?university rdf:type dbo:University ;
              dbp:country ""Japan""^^xsd:string ;
              rdfs:label ?almaMaterName .

  # Ensure the alma mater is an educational institution and organization
  ?university rdf:type dbo:EducationalInstitution, dbo:Organization .
}
```",6,11,7,2,3,3,3,71,0,0,2,0,0.0,0
179,17,test,Give me the parent of the child of the parent of Vajiralongkorn and person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Vajiralongkorn's parent (Queen Sirikit)
  dbr:Vajiralongkorn dbo:mother dbr:Sirikit_of_Thailand .

  # Queen Sirikit's parent
  OPTIONAL { 
    dbr:Sirikit_of_Thailand dbo:parent ?parent .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
303,28,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón and party of the commander, that is a politician, in United States invasion of Panama.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyArnulfo ?countryElValle ?partyCommander
WHERE {
  # Arnulfo Arias Madrid's party and birthplace
  dbr:Arnulfo_Arias_Madrid dbo:politicalParty ?partyArnulfo .
  dbr:Arnulfo_Arias_Madrid dbo:birthPlace dbr:El_Valle_de_Antón .

  # El Valle de Antón's country
  dbr:El_Valle_de_Antón dbo:country ?countryElValle .

  # Commander in the United States invasion of Panama and their party
  OPTIONAL {
    ?invasionEvent dbo:commander ?commander .
    FILTER (strstarts(str(?invasionEvent), ""United_States_invasion_of_Panama""))
    ?commander dbo:politicalParty ?partyCommander .
  }
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
659,69,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v7 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander1 ?conflict1 ?commander2 ?conflict2 ?officeHolder
WHERE {
  # Find the commander and conflict for the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  OPTIONAL {
    dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) dbo:commander ?commander1 .
    ?commander1 dbo:occupation ""military"" .
    ?conflict1 dbo:participatedIn ?commander1 .
  }

  # Find the military conflict involving Rutger Jan Schimmelpenninck
  OPTIONAL {
    dbr:Rutger_Jan_Schimmelpenninck dbo:commander ?commander2 .
    ?commander2 dbo:occupation ""military"" .
    ?conflict2 dbo:participatedIn ?commander2 .
  }

  # Find the native office holder of the Kingdom of Ireland
  OPTIONAL {
    ?officeHolder dbo:nationality dbr:Kingdom_of_Ireland ;
                  a dbo:OfficeHolder .
  }
}",8,14,9,3,3,3,3,71,0,0,15,0,0.0,0
281,56,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in Colony of New Zealand and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war
WHERE {
  ?profession a dbo:MilitaryUnit ;
              dbo:officeHolderAndPolitician ?person .
  
  ?person dbo:memberOf ?militaryUnit .
  ?militaryUnit rdfs:label ""New Zealand Army""@en .

  ?war dbo:participatingMilitaryUnit ?militaryUnit ;
       dbo:place ?location .
  ?location rdfs:label ""Colony of New Zealand""@en .

  ?awardee dbo:awardReceived dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath ;
           dbo:participatedInWar ?war .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
404,24,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Ernest Augustus, Duke of Brunswick
  dbr:Ernest_Augustus,_Duke_of_Brunswick a dbo:Person .
  
  # His child who is royalty
  ?child dbo:spouse|dbo:childOf dbr:Ernest_Augustus,_Duke_of_Brunswick ;
         a dbo:Royalty .

  # The parent of this royal child
  ?parent dbo:child ?child .

  # Additional condition that the child is also a child of Ernest Augustus, Crown Prince of Hanover
  ?child dbo:childOf dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
492,62,test,"Give me the person decedent at Algiers and person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentAtAlgiers ?personDecedentFrenchAlgeria ?commanderInWar ?battleOfVerdunCommander
WHERE {
  # Person decedent at Algiers
  ?personDecedentAtAlgiers dbo:deathPlace dbr:Algiers .
  
  OPTIONAL {
    # Person decedent related to French Algeria
    ?personDecedentFrenchAlgeria dbo:deathPlace dbr:French_Algeria ;
                                  rdfs:label ?labelPersonDecedentFrenchAlgeria .
  }
  
  OPTIONAL {
    # Commander in a war (military conflict) and an event
    ?commanderInWar dbo:rank ?rank ;
                   dbo:commanderOf ?warEvent ;
                   rdfs:label ?labelCommanderInWar .
    
    ?warEvent rdf:type dbo:MilitaryConflict .
  }
  
  OPTIONAL {
    # Commander in the Battle of Verdun
    ?battleOfVerdunCommander dbo:commanderOf dbr:Battle_of_Verdun ;
                            rdfs:label ?labelBattleOfVerdunCommander .
  }
}
```",7,9,8,3,3,3,3,71,1,135,0,0.007352941176470588,1.0,0.014598540145985401
391,67,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of Compton, California and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find a movie that is also a work and a television show
  ?movie a dbo:Film ;
         a dbo:CreativeWork ;
         a dbo:TelevisionShow .

  # Identify the actor who is professional, native of Compton, California
  ?actor dbo:nationality dbr:United_States ;
         dbo:birthPlace dbr:Compton,_California ;
         dbo:profession dbr:Actor .

  # The actor must be part of this movie
  ?movie dbo:starring ?actor .

  # Find the claim to fame related to Sherry Hormann's spouse
  ?claimToFame a dbo:CreativeWork .
  ?spouse dbp:spouse dbr:Sherry_Hormann ;
          dbo:claimToFame ?claimToFame .

  # The actor must be associated with this claim to fame
  ?actor dbo:claimToFame ?claimToFame .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
547,51,test,Give me the resting place of the actor of Enemy at the Door and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorRestingPlace ?awardeeRestingPlace
WHERE {
  # Find the actor of ""Enemy at the Door""
  ?movie dbo:title ""Enemy at the Door""@en .
  ?movie dbo:starring ?actor .

  # Get the resting place of the actor
  OPTIONAL { ?actor dbo:deathPlace ?actorRestingPlace . }

  # Identify the award associated with Gerald Graham
  ?award dbo:recipient ?awardee ;
         dbo:holder ?geraldGraham .
  
  FILTER(?geraldGraham = dbr:Gerald_Graham) .

  # Get the resting place of the awardee
  OPTIONAL { ?awardee dbo:deathPlace ?awardeeRestingPlace . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
820,20,test,Give me the child of the parent of the professional in Actor and professional in the award of the author of Understanding Comics.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v1 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ""Actor""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Step 1: Identify the author of ""Understanding Comics""
  dbr:Understanding_Comics dbo:author ?author .

  # Step 2: Find awards associated with that author
  ?award dbo:recipient ?author .

  # Step 3: Identify professionals related to those awards
  ?professional dbo:profession ?award .

  # Step 4: Determine the parent of these professionals
  ?parent dbo:child ?professional .

  # Step 5: Find the child entities of this parent
  ?parent dbo:child ?child .
}
```",6,6,7,3,2,3,2,20,0,0,128,0,0.0,0
701,54,test,Give me the parent of the child of the child of Seti I and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Seti I's grandchild
  ?setiIChild dbo:spouse ?setiIChildSpouse .
  ?setiIChild dbo:parent dbr:Seti_I .
  ?grandchild dbo:parent ?setiIChild .

  # Spouse of Ramesses II
  ?ramessesIIChild dbo:parent ?ramessesII .
  ?ramessesII dbo:spouse ?spouseOfRamessesII .
  
  # Parent of Nefertari's child
  ?nefertariChild dbo:parent dbr:Nefertari .

  # Intersection of all three conditions
  FILTER (?grandchild = ?spouseOfRamessesII && ?spouseOfRamessesII = ?person)
  FILTER (?person = ?setiIChildSpouse || ?person = ?ramessesII)
  FILTER (?nefertariChild dbo:parent ?person)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
547,63,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandchildRestingPlace ?knightRestingPlace ?actorRestingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  dbr:William_Haliburton dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild foaf:deathPlace ?grandchildDeathPlace .
  
  OPTIONAL { 
    ?grandchildDeathPlace dbo:location ?grandchildRestingPlace .
  }

  # Resting place of the awardee of Knight Grand Cross
  ?knight dbo:honour dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
  ?knight foaf:deathPlace ?knightDeathPlace .

  OPTIONAL { 
    ?knightDeathPlace dbo:location ?knightRestingPlace .
  }

  # Resting place of the actor of ""Enemy at the Door""
  dbr:Enemy_at_the_Door dbo:actor ?actor .
  ?actor foaf:deathPlace ?actorDeathPlace .

  OPTIONAL { 
    ?actorDeathPlace dbo:location ?actorRestingPlace .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
659,60,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?event
WHERE {
  ?commander a dbo:MilitaryPerson ;
             dbo:officeHolderOf dbr:Kingdom_of_Ireland ;
             dbo:commanderOf ?militaryForce .
  
  ?militaryForce dbo:participatedIn ?event .

  ?event rdf:type dbo:SocietalEvent ;
         dbo:isPartOf ?conflict .
  
  ?conflict dbo:referenceTo dbr:Rutger_Jan_Schimmelpenninck .

}
```

This query does the following:
- Selects distinct commanders who were office holders in the Kingdom of Ireland.
- Ensures these commanders led a military force involved in an event that is both a societal event and part of a military conflict.
- Checks for any reference to Rutger Jan Schimmelpenninck within the context of the conflict.",6,10,7,3,2,3,3,71,0,0,40,0,0.0,0
783,19,test,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns and associated musical artist of the band member of Ofori Amponsah.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist
WHERE {
  # Find the band members of Ebony Reigns
  ?ebony a dbo:MusicalArtist ;
         foaf:name ""Ebony Reigns"" .
  
  ?ebony dbo:member ?bandMember .

  # Ensure the band member is also an artist and musical artist
  ?bandMember a dbo:MusicalArtist, dbo:Artist .

  # Find associated artists of Ofori Amponsah's band members
  ?ofoiri a dbo:MusicalArtist ;
          foaf:name ""Ofori Amponsah"" .
  
  ?ofoiri dbo:member ?commonBandMember .

  FILTER (?bandMember = ?commonBandMember)

  # Find associated artists of the common band member
  ?commonBandMember dbo:associatedWith ?associatedArtist .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
232,30,test,"Give me the child of Jon Pertwee and actor of Dog Soldiers (film) and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?actor ?settlement
WHERE {
  # Jon Pertwee's child
  dbr:Jon_Pertwee dbo:child ?child .

  # Actor of ""Dog Soldiers""
  dbr:Dog_Soldiers dbo:starring ?actor .

  # Sylvie Bermann's residence details
  dbr:Sylvie_Bermann dbp:residence ?settlement .
  
  FILTER (dbo:type(?settlement, dbo:Settlement) && 
          dbo:nationality(?settlement, dbr:United_Kingdom)) .

  # Ensure the child is also an actor of ""Dog Soldiers"" and native of the settlement
  VALUES ?child { ?actor }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
492,44,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?personDecedentFrenchAlgeria ?personDecedentCapitalAlgeria ?commanderWar
WHERE {
  # Person decedent at French Algeria
  ?personDecedentFrenchAlgeria dbo:deathPlace dbr:French_Algeria .
  
  # Person decedent at the capital of Algeria (a settlement)
  ?personDecedentCapitalAlgeria dbo:deathPlace dbr:Algiers ;
                                dbo:residenceLocation dbr:Algiers .

  # Commander in a war involving Frédéric-Georges Herr
  ?war dbo:commander ?commanderWar ;
       dbo:participant dbr:Frédéric-Georges_Herr ;
       rdf:type dbo:MilitaryConflict, dbo:Event .
  
  # Ensure the capital of Algeria is a settlement
  dbr:Algiers rdf:type dbo:Settlement .

  # Linking the person decedent at French Algeria and commander in the war
  ?personDecedentFrenchAlgeria = ?commanderWar .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
767,59,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater ?settlement
WHERE {
  # George Kilbon Nash's alma mater
  dbr:George_Kilbon_Nash dbo:almaMater ?almaMater .

  # Administration of George Kilbon Nash and entities that are settlements
  OPTIONAL {
    ?administration dbo:member dbr:George_Kilbon_Nash .
    ?administration dbo:location ?settlement .
    FILTER (dbo:Settlement ?settlement)
  }

  # Writer of ""Where It's At"" by Dustin Lynch
  dbr:""Where_It%27s_At_(Dustin_Lynch_album)"" dbo:lyricsBy ?writer .

  # Settlement associated with the writer
  OPTIONAL {
    ?writer dbo:birthPlace ?settlement .
    FILTER (dbo:Settlement ?settlement)
  }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,71,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as the birth name of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v8 . ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v4 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional
WHERE {
  # Find the actor of ""Unnatural""
  ?actor dbo:starringIn dbr:Unnatural_(TV_series) .
  
  # Get the profession of this actor
  ?actor dbo:profession ?profession .

  # Ted McGinley's birth name
  ?ted foaf:name ""Edward Joseph McGinley""@en ;
       foaf:birthName ?tedBirthName .

  # Find an alumnus of Ohio State University with the same birth name as Ted McGinley
  ?alumnus dbo:almaMater dbr:Ohio_State_University ;
           foaf:birthName ?tedBirthName .

  # Find the spouse of this person
  ?spouse dbo:spouse ?alumnus .
  
  # Get the profession of this spouse
  ?spouse dbo:profession ?professional .
}
```",9,9,10,3,3,3,3,71,0,0,1,0,0.0,0
285,19,test,Give me the spouse of the professional in the award of Stan Lee and parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Stan Lee and his award
  dbr:Stan_Lee dbo:award dbr:Eisner_Award .

  # Professional related to the Eisner Award
  ?professional dbo:award dbr:Eisner_Award .
  
  # Spouse of the professional
  ?professional dbo:spouse ?spouse .

  # Tina Onassis Niarchos and her child
  dbr:Tina_Onassis_Niarchos dbo:child ?tinaChild .

  # The spouse is a parent of Tina's child
  ?spouse dbo:parentOf ?tinaChild .
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
391,64,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of The Departed and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativePlace WHERE {
  ?person a dbo:Actor ;
          dbo:nationality dbr:United_States ;
          dbo:birthPlace ?nativePlace .

  ?person dbo:film dbr:The_Departed .

  ?movie dbo:starring ?person ;
         a dbo:Film, dbo:Work, dbo:TelevisionShow .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
528,45,test,Give me the war of Orozimbo Barbosa and war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOrozimbo ?warIrene ?forceNarciso
WHERE {
  # Find wars associated with Orozimbo Barbosa
  OPTIONAL {
    ?person1 a dbo:Person ;
             foaf:name ""Orozimbo Barbosa"" ;
             dbo:participatedIn ?warOrozimbo .
  }

  # Find wars associated with Irene Morales
  OPTIONAL {
    ?person2 a dbo:Person ;
             foaf:name ""Irene Morales"" ;
             dbo:participatedIn ?warIrene .
  }
  
  # Find the force or role of Narciso Campero at his birth name
  ?person3 a dbo:Person ;
           foaf:name ""Narciso Campero"" ;
           foaf:nick ""Narciso Campero""@en ;
           dbo:birthName ?birthName ;
           dbo:militaryRank ?forceNarciso .
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
251,25,test,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier and administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/ontology/place> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/property/leaderParty> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warLocation ?rulingPartyAdmin ?deathPlace
WHERE {
  # Find the military conflict involving Louis François Félix Musnier
  ?musnier a dbo:MilitaryPerson ;
           foaf:name ""Louis François Félix Musnier"" .
  
  ?conflict dbo:participant ?musnier ;
            dbo:location ?warLocation .

  # Find the ruling party and its administration in Sicily
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Sicily ;
         dbo:administration ?rulingPartyAdmin .

  # Find the death place of Laura Mancinelli
  ?mancinelli a dbo:Person ;
              foaf:name ""Laura Mancinelli"" .
  
  ?mancinelli dbo:deathPlace ?deathPlace .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
281,49,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war
WHERE {
  ?militaryUnit a dbo:MilitaryUnit ;
                dbo:militaryBranch dbr:New_Zealand_Army .
  
  ?profession a dbo:OfficeHolder, dbo:Politician ;
              dbo:hasOccupation ?militaryUnit .

  ?awardee dbo:awardReceived dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath ;
          dbo:participatedInWar ?war .

  ?militaryUnit dbo:participatedInWar ?war .
}
```",5,8,6,3,2,3,3,71,0,0,9,0,0.0,0
9,62,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as QUB and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?mayorAlmaMater ?awardeeAlmaMater
WHERE {
  # Find the organization in Belfast known as QUB
  ?organization dbo:location dbr:Belfast ;
                rdfs:label ""Queen's University Belfast""@en .

  # Identify the mayor of this organization who is a politician
  ?mayor dbp:position ""Mayor""@en ;
         dbo:almaMater ?mayorAlmaMater ;
         dbo:memberOf ?organization .
  
  # Find the awardee of Royal Medals and their alma mater
  ?awardee dbo:award dbr:Royal_Medals ;
           dbo:almaMater ?awardeeAlmaMater .
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
994,51,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?meshuggahBand
WHERE {
  # Don Dokken's band membership
  dbr:Don_Dokken dbo:memberOf ?band .
  
  # Band member associated with Don Dokken
  ?bandMember dbo:memberOf ?band ;
              a dbo:MusicalArtist .

  # Person born who is a musical artist and associated with the band member
  ?person dbo:birthPlace ?place ;
          a dbo:MusicalArtist ;
          dbo:associatedBandMember ?bandMember .
  
  # Association of this person with Meshuggah
  ?meshuggahBand dbo:member ?person ;
                 a dbo:Band, dbo:Group, dbo:Organization ;
                 rdfs:label ""Meshuggah""@en .

}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
528,56,test,Give me the war of Orozimbo Barbosa and war of the military force of Battle of Pisagua and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?battleForce ?camperoForce WHERE {
  # Wars involving Orozimbo Barbosa
  OPTIONAL {
    ?barbosa dbo:wikiPageID ""Orozimbo_Barbosa"" .
    ?barbosa dbo:militaryConflict ?war .
    BIND(?war AS ?war)
  }

  # Military forces in the Battle of Pisagua
  OPTIONAL {
    dbr:Battle_of_Pisagua dbo:militaryForce ?battleForce .
    BIND(?battleForce AS ?battleForce)
  }
  
  # Forces associated with Narciso Campero
  OPTIONAL {
    ?campero dbo:birthName ""Narciso_Campero"" .
    ?campero dbo:militaryConflict ?conflict .
    ?conflict dbo:militaryForce ?camperoForce .
    BIND(?camperoForce AS ?camperoForce)
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
55,24,test,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member
WHERE {
  # Start with a band member of San Francisco Symphony
  ?symphonyMember dbo:bandMemberOf dbr:San_Francisco_Symphony .

  # Recursive pattern to find ""band member of the band member""
  ?intermediateMember dbo:bandMemberOf ?symphonyMember .
  ?member dbo:bandMemberOf ?intermediateMember .

  # Ensure the final entity is both a band and a group
  ?member rdf:type dbo:Band ;
          rdf:type dbo:MusicalGroup .

  # Find connection to Newsted through another band
  ?referenceBand dbo:bandMember dbr:Newsted .
  ?member dbo:bandMemberOf ?referenceBand .
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
16,70,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as Ted Martin McGinley and person born as the birth name of the alumnus of Ohio State University.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professional WHERE {
  # Find the actor of ""Unnatural (TV series)""
  ?actor dbo:profession dbr:Actor .
  ?actor dbo:workFeaturedIn dbr:Unnatural_(TV_series) .

  # Find Ted Martin McGinley's spouse
  ?ted a dbo:Person ;
      dbp:name ""Ted Martin McGinley""@en ;
      dbo:spouse ?spouse .

  # Find the alumnus of Ohio State University and their birth name
  ?alumnus dbo:almaMater dbr:Ohio_State_University .
  ?alumnus dbp:birthdayBirthName ?birthName .

  # Find the person born with that birth name
  ?person dbp:name ?birthName ;
          a dbo:Person .

  # Combine to find the professional in the profession of the actor and spouse of both individuals
  ?professional dbo:profession ?actorProfession .
  FILTER (?actorProfession = dbr:Actor)
  
  OPTIONAL {
    ?professional dbo:spouse ?ted .
  }
  
  OPTIONAL {
    ?professional dbo:spouse ?person .
  }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
404,68,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseName
WHERE {
  # Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia dbo:birthName ""Victoria Louise"" .
  
  # Ernest Augustus, Duke of Brunswick
  dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:child ?person .

  # Person is a royalty and spouse of someone who is a child of Prince George William of Hanover
  ?person rdf:type dbo:Monarch .
  
  ?person dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .
  
  OPTIONAL {
    ?child dbo:parent ?spouse .
    ?child dbo:parent dbr:Prince_George_William_of_Hanover .
  }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
617,62,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v3 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild ?spouse
WHERE {
  # Step 1: Find Nysa and her parent
  ?nysa a dbo:Spouse ;
        foaf:name ""Nysa""@en .
  
  ?pharnacesI a dbo:Spouse ;
              foaf:name ""Pharnaces I of Pontus""@en .

  ?nysa dbo:spouse ?pharnacesI .
  
  ?parent dbo:child ?nysa .

  # Step 2: Find the child of Nysa's parent and then their child
  ?child1 dbo:child ?parent .
  ?grandchild dbo:child ?child1 .
  
  FILTER EXISTS { ?grandchild a dbo:Monarch } # Ensure grandchild is royalty

  # Step 3: Identify successor of Antiochus II Theos who is royalty
  ?antiochusII a dbo:Spouse ;
               foaf:name ""Antiochus II Theos""@en .
  
  ?successor dbo:succeededBy ?antiochusII .
  FILTER EXISTS { ?successor a dbo:Monarch } # Ensure successor is royalty

  # Step 4: Find the child of the successor of Antiochus (son of Antiochus III)
  ?antiochusIII a dbo:Spouse ;
                foaf:name ""Antiochus III""@en .
  
  ?antiochusSon dbo:child ?antiochusIII .
  
  ?successor2 dbo:succeededBy ?antiochusSon .
  FILTER EXISTS { ?successor2 a dbo:Monarch } # Ensure successor is royalty

  ?spouseChild dbo:child ?successor2 .

  # Step 5: Find the spouse of this child
  ?spouse dbo:spouse",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
659,18,test,Give me the military force of Napoleonic Wars and commander in Battle of Leipzig and commander in German campaign of 1813.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battle ?commanderNapoleon ?commanderCoalition
WHERE {
  # Identify the Battle of Leipzig and its commanders
  VALUES ?battle { dbr:Battle_of_Leipzig }
  
  OPTIONAL {
    ?battle dbo:commander ?commanderNapoleon .
    FILTER (CONTAINS(LCASE(str(?commanderNapoleon)), ""napoleon""))
  }

  OPTIONAL {
    ?battle dbo:commander ?commanderCoalition .
    FILTER NOT EXISTS { 
      ?commanderCoalition rdfs:label ?label . 
      FILTER (CONTAINS(LCASE(str(?label)), ""napoleon"")) 
    }
  }

  # Identify commanders in the German campaign of 1813
  VALUES ?campaign { dbr:German_campaign_of_1813 }
  
  OPTIONAL {
    ?campaign dbo:commander ?commanderNapoleon .
    FILTER (CONTAINS(LCASE(str(?commanderNapoleon)), ""napoleon""))
  }

  OPTIONAL {
    ?campaign dbo:commander ?commanderCoalition .
    FILTER NOT EXISTS { 
      ?commanderCoalition rdfs:label ?label . 
      FILTER (CONTAINS(LCASE(str(?label)), ""napoleon"")) 
    }
  }
}
```",3,3,4,1,3,3,3,71,5,17,0,0.22727272727272727,1.0,0.37037037037037035
391,69,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/nickname> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor
WHERE {
  # Michael Ballhaus and his claim to fame
  dbr:Michael_Ballhaus dbo:claimToFame ?work .

  # Nickname for Jackson, Tennessee is ""The Volunteer State""
  dbr:The_Volunteer_State dbo:nativeOf ?person .
  
  # Person involved in a work that is both a movie and TV show
  ?person dbo:professionActor ?actor .
  ?movieWork rdf:type dbo:Film ;
             dbo:starring ?actor ;
             dbo:workExample ?tvShow .

  FILTER (?tvShow rdf:type dbo:TelevisionSeries)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
959,60,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName
WHERE {
  # Manager of the 1998 Kashima Antlers team
  ?team dbr:Kashima_Antlers/dbp:season = ""1998"" .
  ?team dbo:manager ?person .

  # Person is a sports manager
  ?person dbo:occupation dbr:Sports_manager .

  # Alma mater details
  ?person dbp:almaMater ?university .
  
  # University constraints
  ?university rdf:type dbo:EducationalInstitution ;
              dbo:country dbr:Japan ;
              rdf:type dbo:Organization .

  # Person's birth year
  ?person dbo:birthYear ""1958""^^xsd:gYear .

  # Get manager's name
  ?person rdfs:label ?managerName .
  
  FILTER(LANG(?managerName) = 'en')
}
```",6,11,7,3,2,3,3,71,0,0,3,0,0.0,0
281,38,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?war
WHERE {
  # For Bob Heffron
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country ;
              rdfs:label ?country .

  # For Heather Roy
  dbr:Heather_Roy dbo:profession ?profession .
  ?profession dbo:partOfMilitaryUnit ?militaryUnit .
  ?militaryUnit dbo:relatedWar ?war .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
404,46,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Find Ernest Augustus, Duke of Brunswick
  dbr:Ernest_Augustus,_Duke_of_Brunswick a dbo:Person .

  # Identify his children who are royalty
  ?child dbo:spouse ?spouse .
  ?child dbo:father dbr:Ernest_Augustus,_Duke_of_Brunswick ;
         a dbo:Royalty .

  # Find Princess Victoria Louise of Prussia by birth name and her spouse
  ?princessBirthName rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess dbr:Victoria_Louise_of_Prussia ;
            dbo:birthName ?princessBirthName ;
            dbo:spouse ?spouse .

  # Ensure the child is related to Princess Victoria Louise's spouse
  ?child dbo:spouse ?spouse .

  # Determine the parent of this royal child
  ?parent dbo:child ?child .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
959,45,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and native of Japan and member of University of Tsukuba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerOfManager
WHERE {
  # Identify the manager of the 1998 Kashima Antlers team
  ?team dbr:Kashima_Antlers#1998_season .
  ?team dbo:manager ?sportsManager .

  # Ensure the sports manager is a sports manager (implicit in context)
  
  # Find the manager of this sports manager
  ?sportsManager dbo:manager ?managerOfManager .

  # Filter for native of Japan and member of University of Tsukuba
  ?managerOfManager dbp:nationality dbr:Japan .
  ?managerOfManager dbo:almaMater dbr:University_of_Tsukuba .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
378,40,test,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?crillonFame ?blakeWars ?gahnBirthName ?gahnClaimToFame
WHERE {
  # Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:claimToFame ?crillonFame .

  # Joaquín Blake and wars he was involved in
  OPTIONAL {
    dbr:Joaquín_Blake dbo:warsParticipatedIn ?blakeWars .
  }

  # Carl Pontus Gahn's birth name and claim to fame
  OPTIONAL {
    dbr:Carl_Pontus_Gahn dbo:birthName ?gahnBirthName .
    dbr:Carl_Pontus_Gahn dbo:claimToFame ?gahnClaimToFame .
  }
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
701,62,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II and parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?result
WHERE {
  # Amun-her-khepeshef's spouse and their child's parent
  ?spouse1 dbo:spouse ?amun .
  FILTER(?amun = dbp:Amun_her_khepeshef) .
  
  ?child1 dbo:parent ?spouse1 .
  ?parent1 dbo:parent ?child1 .

  # Ramesses II's spouse (same as Amun-her-khepeshef's spouse)
  ?spouse2 dbo:spouse ?ramesses .
  FILTER(?ramesses = dbp:Ramesses_II) .
  
  FILTER(?spouse1 = ?spouse2)

  # Seti I's child and their child's parent
  ?child2 dbo:parent ?seti .
  FILTER(?seti = dbp:Seti_I) .

  ?grandChild dbo:parent ?child2 .
  ?parent2 dbo:parent ?grandChild .

  # Combine results to find common entities
  VALUES (?result) {
    (?parent1)
    (?parent2)
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
801,67,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v6 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?associatedArtist WHERE {
  # Album and its type
  dbr:What_U_See_Is_What_U_Get a dbo:MusicalWork ;
                               dbo:album dbr:What_U_See_Is_What_U_Get .

  # Producer of the album who is also a rapper
  ?producer a dbo:MusicalArtist, dbo:Rapper ;
            dbo:producer dbr:What_U_See_Is_What_U_Get .

  # Associated musical artist who is a writer and an artist
  ?associatedArtist a dbo:MusicalArtist, dbo:Writer, dbo:Artist ;
                    dbo:associatedMusicalArtist ?producer .
}
```",7,15,8,3,3,3,3,71,0,0,8,0,0.0,0
747,47,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on the birth date of Pavlo Khudzik.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band
WHERE {
  # Find Amba Shepherd and her songs
  ?ambashepherd a dbo:Writer ;
                foaf:name ""Amba Shepherd""@en .
  
  ?song dbo:writer ?ambashepherd ;
        rdf:type dbo:Songs .

  # Find Pavlo Khudzik's birth date
  ?pavlokhudzik a dbo:Person ;
                dbp:birthday ?birthDate ;
                foaf:name ""Pavlo Khudzik""@en .
  
  # Find the person associated with the song and born on the same date as Pavlo Khudzik
  ?person dbp:birthday ?birthDate ;
          dbo:member ?band .

  # Link the song to this person
  ?song dbo:lyricist ?person .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
77,20,test,"Give me the war of the awardee of the award of Maxim Grigorievich Vlasov and force of the mayor of the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/leader> ?v5 . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?organization
WHERE {
    # Find Maxim Grigorievich Vlasov and his award
    ?person rdfs:label ""Maxim Grigorievich Vlasov""@en .
    ?award dbo:recipient ?person ;
           dbo:relatedEvent ?war .

    # Find the organization administering Warsaw
    ?mayorOffice dbo:location dbr:Warsaw ;
                 a dbo:GovernmentAgency ;
                 rdfs:label ?organizationLabel .
}
```",6,7,7,3,2,3,2,20,0,0,26,0,0.0,0
994,46,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?meshuggahMemberArtist ?watchtowerAssociatedArtist 
WHERE {
  # Meshuggah band members who are also bands/groups
  ?member dbo:band dbr:Meshuggah .
  OPTIONAL { ?member dbo:associatedBandOrMusicalArtist ?meshuggahMemberArtist . }
  
  # Watchtower associated musical artists and their further associations
  ?watchtowerAssociatedArtist dbo:associatedBandOrMusicalArtist dbr:Watchtower .
  OPTIONAL { ?watchtowerAssociatedArtist dbo:associatedBandOrMusicalArtist ?watchtowerFurtherAssociation . }
}
```",5,8,6,3,2,3,3,71,0,0,5,0,0.0,0
492,45,test,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander ?decedentInCapital ?decedentInAlgeria
WHERE {
  # Find commanders in the Franco-Hova Wars
  ?commander dbo:occupation dbr:Military_commander .
  ?commander dbo:participatedIn dbr:Franco-Hova_Wars .

  OPTIONAL {
    # Find person decedent at the capital of Khemis Miliana District
    ?decedentInCapital dbo:deathPlace dbr:Khemis_Miliana .
    FILTER (dbo:capitalOf ?decedentInCapital dbr:Khemis_Miliana_District)
  }

  OPTIONAL {
    # Find person decedent at French Algeria
    ?decedentInAlgeria dbo:deathPlace dbr:French_Algeria .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
184,61,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Archduke Ladislaus Philipp of Austria's parent
  ?ladislausParent dbo:child dbr:Archduke_Ladislaus_Philipp_of_Austria .
  
  # Sibling of Archduke Ladislaus Philipp of Austria
  ?sibling dbo:parent ?ladislausParent ;
           dbo:child ?nieceNephewL .

  # Niece/Nephew of Archduke Ladislaus Philipp of Austria
  ?nieceNephewL dbo:parent ?sibling .
  
  # Archduchess Margaret of Austria's parent
  ?margaretParent dbo:child dbr:Archduchess_Margaret_of_Austria .

  # Sibling of Archduchess Margaret of Austria
  ?siblingM dbo:parent ?margaretParent ;
           dbo:child ?nieceNephewM .

  # Niece/Nephew of Archduchess Margaret of Austria
  ?nieceNephewM dbo:parent ?siblingM .
  
  # Find the common person who is royalty and fits both niece/nephew roles
  FILTER (?nieceNephewL = ?nieceNephewM)
  ?person dbo:child ?nieceNephewL ;
          a dbo:Royalty .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,49,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alumnusBirthName
WHERE {
  ?alumnus dbo:almaMater dbr:Ohio_State_University .
  ?spouse foaf:name ""Ted Martin McGinley""@en .
  ?alumnus foaf:mbox <mailto:some-email@example.com> . # Placeholder for email or identifier
  ?alumnus foaf:gender ?gender .
  ?spouse dbo:spouse ?alumnus .
  ?alumnus foaf:birthday ?birthDate .
  ?alumnus foaf:name ?alumnusBirthName .
}
```

Note:
- The query assumes that the alumnus has a unique identifier or email (represented as `?alumnus foaf:mbox <mailto:some-email@example.com>`), which might need to be adjusted based on available data.
- Adjustments may be necessary depending on the exact structure and availability of data in DBpedia.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
16,65,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as Ted Martin McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v6 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Gigi Rice's birth name
  dbr:Gigi_Rice dbo:birthName ?birthName .

  # Find Ted Martin McGinley's spouse
  dbr:Ted_Martin_McGinley dbo:spouse ?spouse .

  # Find the profession of an actor in ""Unnatural""
  dbr:Unnatural dbo:actor ?actor .
  ?actor a dbo:Actor ;
         dbo:profession ?profession .

  # Match the person with the birth name, spouse, and profession
  ?person dbo:birthName ?birthName ;
          dbo:spouse ?spouse ;
          dbo:profession ?profession .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
16,60,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find Ted McGinley's birth name
  dbr:Ted_McGinley dbo:birthName ?tedBirthName .

  # Find the alumnus of Ohio State University with the same birth name as Ted McGinley
  ?alumnus dbo:almaMater dbr:Ohio_State_University ;
          dbo:birthName ?tedBirthName .

  # Find the spouse of the person born with Ted McGinley's birth name
  ?spouse foaf:mbox ?email .
  ?person dbo:birthName ?tedBirthName ;
          foaf:mbox ?email .

  # Ensure the person is the same as the alumnus found earlier
  FILTER (?alumnus = ?person)
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
547,60,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeRestingPlace ?greatGrandchildRestingPlace
WHERE {
  # Find the award associated with Gerald Graham and its recipient's resting place
  ?award dbo:recipient ?awardee .
  ?award dbo:givenBy dbr:Gerald_Graham .
  OPTIONAL { ?awardee dbo:deathPlace ?awardeeRestingPlace . }

  # Find William Haliburton, his child, and the child of that child (great-grandchild)
  ?williamHaliburton a dbo:Person ;
                    foaf:name ""William Haliburton"" .
  ?child1 dbo:childOf ?williamHaliburton .
  ?child2 dbo:childOf ?child1 .
  OPTIONAL { ?child2 dbo:deathPlace ?greatGrandchildRestingPlace . }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
659,49,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?event WHERE {
  # Arthur Wellesley, 1st Duke of Wellington as a commander
  dbr:Arthur_Wellesley,_1st_Duke_of_Wellington dbo:militaryCommanderOf ?force .
  
  # The force involved in societal events and military conflicts
  ?force dbo:participatedIn ?event .
  ?event rdf:type/(dbo:SocietalEvent|dbo:Event|dbo:MilitaryConflict) .

  # Optional: Reference to Rutger Jan Schimmelpenninck
  OPTIONAL {
    ?event dbo:reference dbr:Rutger_Jan_Schimmelpenninck .
  }

  # Return the commander and event details
  ?commander dbo:militaryCommanderOf ?force .
}
```",5,8,6,3,2,3,3,71,0,0,38,0,0.0,0
547,67,test,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?restingPlaceJamesBurton ?restingPlaceAwardee ?restingPlaceActor
WHERE {
  # Resting place of James Burton (Egyptologist)
  OPTIONAL {
    ?jamesBurton a dbo:Egyptologist ;
                 foaf:name ""James Burton"" .
    ?jamesBurton dbo:deathPlace ?restingPlaceJamesBurton .
  }

  # Resting place of the awardee of Gerald Graham's award
  OPTIONAL {
    ?award dbo:recipient ?awardee ;
           dbp:givenName ""Gerald"" ;
           dbp:surname ""Graham"" .
    ?awardee dbo:deathPlace ?restingPlaceAwardee .
  }

  # Resting place of the actor in a show with Emily Richard
  OPTIONAL {
    ?show dbo:starring ?emilyRichard, ?actor .
    ?emilyRichard foaf:name ""Emily Richard"" .
    ?actor dbo:deathPlace ?restingPlaceActor .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
994,62,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist
WHERE {
  # Step 1: Find the associated musical artist of Watchtower
  ?watchtowerArtist dbo:musicalArtist dbr:Watchtower .
  
  # Step 2: Find the band member of Don Dokken who is also a musical artist
  ?dokkenMember dbo:memberOf dbr:Dokken ;
               dbo:musicalArtist ?artist1 .

  # Ensure this artist is associated with Watchtower
  FILTER(?watchtowerArtist = ?artist1)

  # Step 3: Find the band and group that this member is part of, which is an organization
  ?bandGroup dbo:member ?dokkenMember ;
             a dbo:Band ;
             a dbo:Organization .

  # Final step: Ensure the final artist is associated with this band/group
  ?finalArtist dbo:musicalArtist ?bandGroup .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
328,71,test,"Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> ?v2 . ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award ?agencyLeader WHERE {
  # Gustav Jonson as a politician and office holder
  ?gustavJonson dbo:occupation dbr:Politician ;
                dbo:officeHolderOf ?office .

  # Commander in the force at Budapest
  ?budaCommander dbo:location dbr:Budapest ;
                 dbo:awardReceived ?commandersAward .

  # Awardee of the Commander's Award for Volcano and Ryukyu Islands campaign
  FILTER(?commandersAward IN (dbr:Commanders_Award_for_the_Volcano_and_Ryukyu_Islands_campaign)).

  # Leader of a government agency
  ?agencyLeader dbo:leader ?budaCommander ;
                a dbo:GovernmentAgency .

  # Linking the commander to Gustav Jonson's office
  ?budaCommander dbo:commandedBy ?gustavJonson .
  
  BIND(?budaCommander AS ?commander)
  BIND(?commandersAward AS ?award)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
391,66,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as Hub City.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v6 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor
WHERE {
  ?movie a dbo:Film ;
         dbo:genre/dbo:subClassOf* dbo:TelevisionShow ;
         dbo:workExample ?claimToFame .
  
  ?claimToFame dbo:professional ?ballhaus ;
               dbo:actor ?actor .

  ?ballhaus foaf:name ""Michael Ballhaus""@en .
  
  ?actor dbo:nativePlace dbr:Hub_City .
}
```

This query assumes:
- The movie is both a film and has a genre that includes television shows.
- There's a claim to fame involving Michael Ballhaus as a professional and an actor.
- The actor is native to ""Hub City.""",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
801,69,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerName WHERE {
  # Identify the album ""What U See Is What U Get""
  dbr:What_U_See_Is_What_U_Get a dbo:MusicalAlbum ;
    dbo:musicalArtist dbr:50_Cent .

  # Find songs in this album by 50 Cent
  ?song dbo:musicalWork dbr:What_U_See_Is_What_U_Get ;
        dbo:musicalArtist dbr:50_Cent ;
        dbo:producer ?producer .

  # Identify the producer with alter ego ""The Shadow""
  ?producer foaf:name ?producerName .
  OPTIONAL { 
    ?producer dbo:alterEgo dbr:The_Shadow .
  }

  FILTER EXISTS {
    ?producer dbo:musicalArtist ?artist .
    ?album dbo:musicalWork ?work .
    ?album a dbo:MusicalAlbum ;
           dbo:musicalArtist ?artist .
  }
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
488,21,test,Give me the administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?birthPlace
WHERE {
  dbr:Emperor_Go-Yōzei dbo:reignOver ?administration .

  ?commander dbo:participatedInBattle ?boshinWar .
  FILTER(CONTAINS(LCASE(STR(?boshinWar)), ""boshin war""))
  ?commander dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
429,9,test,"Give me the country of the military force, that is an organisation, of Camden Expedition and administration of the father of Martha Johnson Patterson.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/country> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  # Find the military force of Camden Expedition
  ?camdenExpedition dbo:militaryForce ?militaryForce .
  
  # Ensure it is an organization
  ?militaryForce a dbo:MilitaryUnit .

  # Find the administration of Martha Johnson Patterson's father
  ?marthaPattersonFather dbo:spouse ?mother .
  ?mother foaf:name ""Martha Johnson Patterson"" .
  ?father dbo:child ?marthaPattersonFather .
  ?father dbo:positionHeld ?administration .

  # Find the country of both military force and administration
  ?militaryForce dbo:country ?country .
  ?administration dbo:country ?country .
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
427,53,test,"Give me the reference to the name of the party of Michele Pinto and party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?micheleParty ?giulioParty ?romanoParty
WHERE {
  # Michele Pinto's party
  OPTIONAL { 
    dbr:Michele_Pinto dbo:party ?micheleParty .
  }
  
  # Giulio Andreotti's party
  OPTIONAL { 
    dbr:Giulio_Andreotti dbo:party ?giulioParty .
  }

  # Romano Antonio Prodi's party, ensuring he is an office holder and a politician
  {
    dbr:Romano_Antonio_Prodi dbo:party ?romanoParty ;
                             rdf:type dbo:OfficeHolder , dbo:Politician .
  }
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
285,17,test,Give me the spouse of the professional in the award of Stan Lee and parent of Alexander Onassis.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse
WHERE {
  ?stanLee dbo:award ""Stan Lee Award""@en .
  ?professional dbo:awardedBy ?stanLee .
  ?alexanderOnassis dbo:parent ?mother .
  ?mother foaf:name ""Jacqueline Kennedy Onassis""@en .
  ?mother foaf:mbox ?spouse .
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
232,67,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of Jon Pertwee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  ?actor a dbo:Actor .
  ?actor dbo:narratorOf ?film .
  ?actor dbo:producerOf ?film .
  
  ?film a dbo:Film .
  ?militaryConflict a dbo:MilitaryConflict .
  ?actor dbo:claimToFame ?film .
  ?actor dbo:claimToFame ?militaryConflict .

  ?actor foaf:based_near ?settlement .
  ?settlement a dbo:Settlement .
  ?settlement dbo:country dbr:United_Kingdom .
  
  ?politician a dbo:Politician ;
             dbo:nativePlace ?settlement ;
             dbo:childOf dbr:Jon_Pertwee .
  ?politician dbo:birthPlace dbr:France .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
281,67,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceCountry
WHERE {
  # Leader of the 1962 New South Wales state election
  ?leader dbo:officeHolderOf dbr:1962_New_South_Wales_state_election .
  
  # Birthplace of the leader, ensuring it is a country
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Leader's profession as a military unit
  ?leader dbo:profession ?militaryUnit .
  ?militaryUnit rdf:type dbo:MilitaryUnit .

  # Beauchamp Seymour, 1st Baron Alcester and the same military unit
  dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:profession ?sameMilitaryUnit .
  ?sameMilitaryUnit rdf:type dbo:MilitaryUnit .
  
  FILTER (?militaryUnit = ?sameMilitaryUnit)

  # Ensure birthplace is a country
  BIND(?birthPlace AS ?birthPlaceCountry)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
487,16,test,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of the administration of Patricia McCoy.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> ?result . ?result <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?country
WHERE {
  # Find Philip Brian Scott's administration
  ?person rdfs:label ""Philip Brian Scott""@en .
  ?person dbo:occupation dbr:Soccer_player .
  OPTIONAL { ?person dbo:positionHeld ?administration . }

  # Find Patricia McCoy's country of administration
  ?adminPerson rdfs:label ""Patricia McCoy""@en .
  ?adminPerson dbo:country ?country .

  FILTER(?person != ?adminPerson) # Ensure they are different entities
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
232,50,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeOfSylvieBermann ?actorClaimToFame
WHERE {
  # Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:nationality dbr:France ;
                     dbo:residence ?settlement .
  
  FILTER (dbo:country ?settlement dbr:United_Kingdom) .
  OPTIONAL { ?settlement dbo:populationTotal ?population . }
  
  # Actor of the claim to fame
  ?film dbo:genre dbr:Military_film ;
        dbo:starring ?actor .
  
  ?actor a dbo:Actor ;
         dbp:profession ""Actor, narrator and producer"" .

  # Native of the settlement
  OPTIONAL { ?settlement dbo:nativeOf ?nativeOfSylvieBermann . }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
281,71,test,"Give me the war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v8 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?warOfAwardee ?birthPlaceCountry ?warOfProfession
WHERE {
  # Awardee of Jonathon Band's award and their associated war
  ?awardee dbo:award dbr:Jonathon_Band .
  ?awardee dbo:militaryConflict ?warOfAwardee .

  # Leader in the 1962 New South Wales state election and their birthplace country
  ?leader dbp:election dbr:1962_New_South_Wales_state_election .
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
  BIND(?birthPlace AS ?birthPlaceCountry)

  # Professional in New Zealand Army who is a politician and their associated war
  ?professional dbo:officeHolder true ;
                dbo:militaryUnit ?militaryUnit ;
                dbo:profession ?profession .
  ?militaryUnit dbo:conflict ?warOfProfession .
  FILTER EXISTS { ?professional rdf:type dbo:Politician }
  FILTER EXISTS { ?professional dbo:nationality dbr:New_Zealand }

}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
30,9,test,Give me the professional in the profession of Édouard Alphonse James de Rothschild and native of the birthplace of Silvia Cohen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find the profession of Édouard Alphonse James de Rothschild
  dbr:Édouard_Alphonse_James_de_Rothschild dbo:profession ?profession .

  # Find the birthplace of Silvia Cohen
  dbr:Silvia_Cohen dbo:birthPlace ?birthPlace .

  # Find a professional with the same profession and from the same birthplace
  ?professional dbo:profession ?profession ;
                dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
528,58,test,Give me the war of the commander in Battle of La Rinconada de Ate and war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfLaRinconadaCommander ?ireneMoralesWar ?narcisoCamperoForce
WHERE {
  # Find the commander in the Battle of La Rinconada de Ate
  OPTIONAL {
    ?battle dbr:Battle_of_La_Rinconada_de_Ate ;
           dbo:commander ?warOfLaRinconadaCommander .
  }
  
  # Find the war associated with Irene Morales
  OPTIONAL {
    ?ireneMorales dbr:Irene_Morales ;
                  dbo:participatedInWar ?ireneMoralesWar .
  }

  # Find the force of Narciso Campero
  OPTIONAL {
    ?narcisoCampero dbr:Narciso_Campero ;
                    foaf:name ""Narciso Campero""@en ;
                    dbo:militaryForce ?narcisoCamperoForce .
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
617,45,test,Give me the spouse of Laodice IV and child of Antiochus III the Great and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?child ?parentOfCommandersChild
WHERE {
  # Laodice IV and her spouse
  dbr:Laodice_IV dbo:spouse ?spouse .

  # Antiochus III the Great's children
  dbr:Antiochus_III_the_Great dbo:child ?child .

  # The child who is a parent of the commander's child in Battle of Panium
  ?commanderInBattleOfPanium dbo:parent ?parentOfCommandersChild .
  ?parentOfCommandersChild dbo:child ?commanderInBattleOfPanium .

  # Linking the child to Antiochus III's children
  FILTER(?child = ?parentOfCommandersChild)
}
```",5,5,6,3,3,3,3,71,1,3,0,0.25,1.0,0.4
161,59,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2
WHERE {
  # Find Indalecio Prieto's predecessor
  dbr:Indalecio_Prieto dbo:predecessor ?predecessor .

  # Find the military force related to the predecessor
  ?predecessorEvent a dbo:MilitaryConflict ;
                   dbo:societalEvent ?societalEvent .
  ?militaryForce1 dbo:militaryForceOf ?predecessorEvent .

  # Find the person who died during Francoist Spain
  ?decedent dbo:deathPlace dbr:Francoist_Spain .

  # Find the military force related to this decedent
  ?event2 a dbo:MilitaryConflict ;
          dbo:event ?generalEvent .
  ?militaryForce2 dbo:militaryForceOf ?event2 .
}
```",6,11,7,3,2,3,3,71,0,0,514,0,0.0,0
801,70,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://dbpedia.org/property/writer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist
WHERE {
  # Step 1: Identify the album ""What U See Is What U Get""
  dbr:What_U_See_Is_What_U_Get a dbo:MusicalWork ;
    dbo:producer ?producer .

  # Step 2: Find the producer's work that is a song and identify the professional (rapper) associated with it
  ?producerWork a dbo:Songs ;
    dbo:artist ?professional .
  
  # Step 3: Identify the rapper who has an alter ego ""The Shadow""
  ?professional rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""the shadow"") && CONTAINS(LCASE(?label), ""rapper""))

  # Step 4: Find the writer of this song who is also a musical artist and an artist
  ?producerWork dbo:writer ?writer ;
    dbo:musicalArtist ?musicalArtist .
  
  FILTER EXISTS { ?writer a dbo:Writer . }
  FILTER EXISTS { ?musicalArtist a dbo:MusicalArtist ; dbo:artist ?associatedArtist }

  # Step 5: Return the associated artist
}
```",8,16,9,3,3,3,3,71,0,0,8,0,0.0,0
981,20,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v4 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?person dbo:author dbr:Kamikaze_Girls .
  ?person dbo:title ""Miss Universe"" ;
         dbo:birthPlace ?birthPlace .

  ?region dbp:timeZone ""Asia/Jakarta"" .
  ?place dbr:Salak_North_Sumatra .
  ?place dbp:locatedIn ?region .
  
  FILTER (?person = ?beautyQueen) .
}",6,7,7,3,2,3,2,20,0,0,19,0,0.0,0
666,16,test,"Give me the figure known as the nickname of England national beach soccer team and player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?player ?manager
WHERE {
  # Find the nickname of the England national beach soccer team
  dbr:England_national_beach_soccer_team dbo:nickName ?nickname .

  # Find players who are also managers for Hull City A.F.C. during the 2016–17 season
  ?player a dbo:SoccerPlayer ;
          dbo:managerForTeam dbr:Hull_City_A.FC_2016-17_season .
  
  # Ensure the player is also a sports manager
  ?player dbo:occupation dbr:Sports_manager .

  # Link the player to the manager role in Hull City A.F.C.
  ?player dbo:managerForTeam ?hullCityManagerRole ;
          rdfs:label ?managerLabel .
  
  FILTER (CONTAINS(LCASE(?managerLabel), ""2016-17""))
}
```",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
427,22,test,"Give me the reference to Partito Popolare Italiano and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyReference ?partyName
WHERE {
  # Reference to Partito Popolare Italiano
  dbr:Partito_Popolare_Italiano dbo:wikiPageRedirects ?partyReference .
  
  # Romano Prodi's political party
  dbr:Romano_Prodi dbo:nationality dbr:Italy ;
                   a dbo:Politician ;
                   dbo:birthPlace ?birthPlace ;
                   dbp:politicalParty ?party .

  # Ensure the party is associated with him as an office holder and politician
  OPTIONAL { ?party rdfs:label ?partyName . FILTER (lang(?partyName) = ""en"") }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
528,40,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa and force of Narciso Campero.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?militaryForce1 ?militaryForce2
WHERE {
  ?war a dbo:MilitaryConflict ;
       dbo:location dbr:Chile .
  
  OPTIONAL { ?war dbo:participatingMilitaryUnit ?militaryForce1 . }
  OPTIONAL { ?war dbo:participatingMilitaryUnit ?militaryForce2 . }

  FILTER EXISTS { ?militaryForce1 dbo:commander dbr:Orozimbo_Barbosa . }
  FILTER EXISTS { ?militaryForce2 dbo:commander dbr:Narciso_Campero . }
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
328,63,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Commander in Ferenc Szálasi's force
  ?szalasiForce dbo:commander ?person .
  FILTER(STRSTARTS(STR(?szalasiForce), ""http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi""))

  # Leader of a government agency under Joseph Stalin
  ?stalinAgency dbo:leader ?person .
  FILTER(STRSTARTS(STR(?stalinAgency), ""http://dbpedia.org/resource/Joseph_Stalin""))

  # Awardee of an award related to the Volcano and Ryukyu Islands campaign
  ?campaignAward dbo:recipient ?person .
  FILTER(
    STRSTARTS(STR(?campaignAward), ""http://dbpedia.org/resource/"") &&
    (
      CONTAINS(LCASE(STR(?campaignAward)), ""volcano"") ||
      CONTAINS(LCASE(STR(?campaignAward)), ""ryukyu"")
    )
  )
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
659,29,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of Napoleonic Wars and commander in German campaign of 1813.",SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?event WHERE {
    # Identify the regiment and its commander during a military event
    ?regiment dbo:commander ?commander .
    
    # Ensure the regiment is the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
    ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .

    # The event must be a military conflict during the Napoleonic Wars
    ?event dbo:participatedInMilitaryConflict ?conflict .
    ?conflict dbo:partOfWar dbr:Napoleonic_Wars .
    
    # Link the regiment to the event
    ?regiment dbo:participatedInMilitaryEvent ?event .

    # Ensure the commander was involved in the German campaign of 1813
    ?campaign dbo:commander ?commander ;
              dbo:partOfWar dbr:Napoleonic_Wars ;
              dbo:name ""German campaign of 1813""@en .
}
```",4,6,5,2,3,3,3,71,0,0,6,0,0.0,0
659,52,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of Napoleonic Wars and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander
WHERE {
    # Commander in the force of the native office holder of Kingdom of Ireland
    ?officeHolder a dbo:OfficeHolder ;
                 dbo:country dbr:Kingdom_of_Ireland .
    
    # Military force of Napoleonic Wars
    ?militaryForce a dbo:MilitaryUnit ;
                   dbo:partOf dbr:Napoleonic_Wars .

    # Commander in the war, that is an event and a military conflict
    ?war a dbo:MilitaryConflict ;
         dbo:commander ?commander .
    
    # 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
    ?regiment dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) ;
              dbo:partOf ?militaryForce .

    # Linking commander to office holder and military force
    ?commander dbo:officeHolder ?officeHolder ;
               dbo:militaryCommander ?militaryForce .
}
```",6,9,7,3,3,3,3,71,0,0,13,0,0.0,0
404,71,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v7 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Princess Victoria Louise of Prussia
  ?princess a dbo:Person ;
            foaf:name ""Princess Victoria Louise of Prussia""@en ;
            dbo:spouse ?spouse .

  # Spouse's Father
  ?spouse dbo:father ?fathersFather .

  # Child of Spouse's Father who is royalty
  ?child dbo:parent ?fathersFather ;
         a dbo:Person ;
         dbo:royalty ""true""^^xsd:boolean .

  # Parent of this child (who is royalty)
  ?grandParent dbo:child ?child .

  # Parent of the grandParent, ensuring they are royalty and related to Prince George William of Hanover
  ?greatGrandParent dbo:parent ?grandParent ;
                   a dbo:Person ;
                   dbo:royalty ""true""^^xsd:boolean .
  
  # Ensure this great-grandparent is connected to Prince George William of Hanover
  ?prince dbr:Prince_George_William_of_Hanover ;
          dbo:child ?greatGrandParent .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
16,55,test,Give me the person born as the birth name of Gigi Rice and professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find Gigi Rice's birth name
  dbr:Gigi_Rice dbo:birthName ?birthName .

  # Find Satomi Ishihara's profession
  dbr:Satomi_Ishihara dbo:profession ?profession .

  # Find Ted Martin McGinley's birth name
  dbr:Ted_McGinley dbo:birthName ""Ted Martin McGinley""@en .

  # Person with the same birth name as Gigi Rice and profession as Satomi Ishihara
  ?person dbo:birthName ?birthName .
  ?person dbo:profession ?profession .

  # This person should be married to someone born as Ted Martin McGinley
  ?spouse foaf:mbox ?email .
  ?spouse dbo:birthName ""Ted Martin McGinley""@en .
  ?person foaf:mbox ?email .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
404,51,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfFather ?parentOfChild
WHERE {
  # Find the spouse of Princess Victoria Louise of Prussia
  ?spouse a dbo:Spouse ;
          dbp:spouse ?princess .
  
  FILTER(?princess = dbpedia:Princess_Victoria_Louise_of_Prussia)

  # Identify the father of this spouse
  ?father a dbo:Father ;
          dbo:child ?spouse .

  # Find the child of this father who is royalty
  ?childOfFather a dbo:Child ;
                 dbo:parent ?father .
  
  FILTER( EXISTS { ?childOfFather a dbo:RoyalFamilyMember } )

  # Find the parent of the child of Ernest Augustus, Duke of Brunswick who is royalty
  ?childErnest dbp:child ?ernestAugustus ;
               a dbo:Child .

  FILTER(?ernestAugustus = dbpedia:Ernest_Augustus,_Duke_of_Brunswick)

  ?parentOfChild a dbo:Parent ;
                 dbo:child ?childErnest .
  
  FILTER( EXISTS { ?parentOfChild a dbo:RoyalFamilyMember } )
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,20,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?franciscoMilitaryForce ?rifWarMilitaryForce
WHERE {
  # Military force associated with Francisco Largo Caballero
  OPTIONAL {
    ?francisco dbo:militaryService [
      dbo:member dbr:Franco_Largo_Caballero ;
      dbo:force ?franciscoMilitaryForce .
    ]
  }
  
  # Military force involved in the Rif War
  OPTIONAL {
    ?rifWar dbo:participatedIn [
      dbo:conflict dbr:Rif_War ;
      dbo:force ?rifWarMilitaryForce .
    ]
  }
}
```",3,5,4,2,2,3,3,71,0,0,34,0,0.0,0
281,58,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v5 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war
WHERE {
  ?profession dbo:type dbr:Military_unit .
  ?profession dbo:officeHolderOrPolitician true .
  
  ?war dbo:partOf dbr:New_Zealand_Army .
  ?war dbo:relatedTo ?profession .

  ?beauchampSeymour dbo:involvedInWar ?war .
  ?beauchampSeymour rdf:type dbr:Beauchamp_Seymour,_1st_Baron_Alcester .

  ?bobHeffron dbo:birthPlace ?country .
  ?bobHeffron rdf:type dbr:Bob_Heffron .
  
  ?war dbo:relatedTo ?country .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
838,20,test,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa and band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberName ?bandName
WHERE {
  # YU Grupa is a band and an organization
  dbr:YU_Grupa dbo:type/dbo:Band ;
               dbo:type/dbo:Organization .

  # Find members of YU Grupa who are artists and musical artists
  ?member dbo:memberOf dbr:YU_Grupa .
  ?member a dbo:Artist ;
          a dbo:MusicalArtist .
  
  # Get the name of the band member
  ?member rdfs:label ?bandMemberName .

  # Find bands associated with these members
  ?member dbo:memberOf ?otherBand .
  ?otherBand rdfs:label ?bandName .

  FILTER (lang(?bandMemberName) = 'en' && lang(?bandName) = 'en')
}
ORDER BY ?bandMemberName",6,13,7,3,2,3,2,20,0,0,5,0,0.0,0
92,60,test,"Give me the band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName WHERE {
  # Find Joseph Michael (assuming he is a known entity in DBpedia)
  ?person rdfs:label ""Joseph Michael""@en .
  
  # Get his birth name
  ?person dbo:birthName ?birthName .

  # Identify the band he is associated with
  ?person dbo:member ?band .

  # Retrieve the band's name
  ?band rdfs:label ?bandName .

  # Find the artist of the film ""Nevermore"" (2006)
  dbr:Nevermore_(film) dbo:artist ?artist .

  # Ensure the band is associated with this artist
  ?band dbo:member ?artist .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
827,20,test,"Give me the father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father
WHERE {
  # Princess Pauline's spouse who is royalty
  ?spouse a dbo:Monarch ;
          dbo:spouse dbr:Princess_Pauline_of_Saxe-Weimar-Eisenach .
  
  # Child of the spouse who is royalty
  ?child1 dbo:parent ?spouse ;
         a dbo:Monarch .

  # Father of this child
  ?father dbo:child ?child1 .

  # Parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach
  dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:parent ?parent .

  # Child of the parent who is royalty
  ?child2 dbo:parent ?parent ;
         a dbo:Monarch .

  # Child of this second royal child
  ?grandChild dbo:parent ?child2 .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
54,46,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfThinkhaya ?parentOfChildOfNarapatiI
WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:child dbr:Thinkhaya_of_Pagan .
  
  # Narapati I of Ava's child
  ?narapatiChild dbo:child dbr:Narapati_I_of_Ava .

  # The parent of Narapati I's child (Narapati I himself)
  ?parentOfChildOfNarapatiI dbo:child ?narapatiChild .
  
  # The child of Thinkhaya who is also the parent of Narapati I's child
  FILTER (?thinkhayaChild = ?parentOfChildOfNarapatiI)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,71,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v7 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist
WHERE {
  # Fredrik Thordendal's band
  dbr:Fredrik_Thordendal dbo:bandMember ?band .
  
  # Band members who are also bands/groups/organizations
  ?bandMember dbo:memberOf ?subBand .
  ?subBand a ?type .
  FILTER (?type IN (dbo:Band, dbo:MusicalGroup, dbo:Organization)) .

  # Associated musical artists of these band members
  ?subBand dbo:associatedBand ?artist .
  
  # Don Dokken's associated musical artists
  dbr:Don_Dokken a dbo:Person ;
                 dbo:birthName ""Don Dokken"" ;
                 dbo:associatedMusicalArtist ?dokkenArtist .

  # Watchtower reference
  ?watchtowerReference dbo:referenceTo dbr:Watchtower .
  
  # Connect the dots
  ?artist dbo:associatedMusicalArtist ?dokkenArtist .
  ?artist dbo:reference ?watchtowerReference .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
179,20,test,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of the child of the parent of Vajiralongkorn.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  ?nakkhatraMangala a dbo:Person ;
                    dbo:child ?royalChild .
  
  ?royalChild a dbo:RoyalFamilyMember ; # Assuming this property identifies royalty
              foaf:name ?birthName .

  ?parentOfParent dbo:child ?royalChild .
  ?parentOfParent dbo:child ?vajiralongkornParent .
  ?vajiralongkornParent dbo:child dbr:Vajiralongkorn .
  
  FILTER (?royalChild != dbr:Vajiralongkorn) # Ensure it's not Vajiralongkorn himself
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
547,53,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of the child of William Haliburton and resting place of Simon Cadell.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?restingPlace WHERE {
  # Knight Grand Cross of the Order of St Michael and St George
  { 
    ?person dbo:award <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Child of the child of William Haliburton
  {
    ?grandchild dbp:parent <http://dbpedia.org/resource/William_Haliburton> ;
                dbp:parent ?parent .
    OPTIONAL { ?grandchild dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Simon Cadell
  {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Person100000001> ;
            rdfs:label ""Simon Cadell""@en .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  }
}
```",6,6,7,3,3,3,3,71,0,66,1,0.0,0.0,0
617,48,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild ?grandchild ?successorChild
WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus dbo:father dbr:Antiochus_III_the_Great .
  
  # Step 2: Find his child
  ?child dbo:parent ?antiochus .

  # Step 3: Determine the parent of this child (could be Antiochus himself or another)
  ?parentOfChild dbo:child ?child .

  # Step 4: Identify a grandchild of the original Antiochus
  ?grandchild dbo:parent ?child .
  
  # Step 5: Identify successor of Antiochus II Theos
  ?successor dbo:succeededBy dbr:Antiochus_II_theos .

  # Step 6: Find a child of this successor
  ?successorChild dbo:parent ?successor .

  # Ensure all relevant individuals are royalty
  FILTER (?antiochus rdf:type dbo:Monarch && 
          ?child rdf:type dbo:Monarch &&
          ?parentOfChild rdf:type dbo:Monarch &&
          ?grandchild rdf:type dbo:Monarch &&
          ?successor rdf:type dbo:Monarch &&
          ?successorChild rdf:type dbo:Monarch)
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
659,23,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?office
WHERE {
  ?commander a dbo:MilitaryPerson .
  ?commander dbo:country dbr:Kingdom_of_Ireland .
  ?commander dbo:position ?office .
  FILTER EXISTS { ?commander dbo:isLeaderOf ?force }
}
ORDER BY ?commander
```",3,4,4,3,1,3,3,71,0,0,269,0,0.0,0
161,61,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  # Find Indalecio Prieto's predecessor
  ?predecessor dbo:predecessor dbr:Indalecio_Prieto .
  
  # Identify the military force associated with this predecessor that is both a societal event and a military conflict
  ?militaryForce dbo:militaryForce ?predecessor ;
                rdf:type dbo:SocietalEvent, dbo:MilitaryConflict .

  # Find El Director's role as commander in an event
  ?elDirector dbr:El_Director .
  ?event dbo:commanderInMilitaryForce ?elDirector .
  
  # Ensure the military force is linked to this event
  ?event dbo:militaryForce ?militaryForce .
}
```",6,9,7,3,2,3,3,71,0,0,32,0,0.0,0
161,60,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  # Identify Francisco Franco as ""El Director""
  dbr:Franco_I_of_Spain dbo:birthName ?name .
  
  # Find military forces associated with societal events, events, and conflicts during Francoist Spain
  ?event a dbo:SocietalEvent ;
         dbo:place dbr:Spain ;
         dbo:timePeriod ?period .
         
  FILTER (YEAR(?period) >= 1939 && YEAR(?period) <= 1975)
  
  ?conflict a dbo:MilitaryConflict ;
            dbo:place dbr:Spain ;
            dbo:timePeriod ?period2 .

  FILTER (YEAR(?period2) >= 1939 && YEAR(?period2) <= 1975)

  ?militaryForce dbo:commander dbr:Franco_I_of_Spain ;
                 dbo:participatedIn ?event, ?conflict .
}",6,10,7,3,2,3,3,71,0,0,34,0,0.0,0
55,23,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?referenceBand
WHERE {
  # Find the producer of ""Used to Love Her""
  ?song dbo:producer ?producer .
  FILTER (str(?song) = ""Used_to_Love_Her"")

  # Check if the producer is a band
  ?producer rdf:type dbr:Band .

  # Get members of this band
  ?producer dbo:bandMember ?bandMember .

  # Find the reference band related to this producer's band
  ?producer dbo:reference ?reference .
  FILTER (rdf:type(?reference) = dbr:Band)

  # Ensure this referenced band has a connection to ""Newsted""
  ?reference dbo:bandMember dbr:Newsted .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
659,61,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryConflict ?conflict .
  
  dbr:Polish_Horse dbo:militaryUnit ?unit ;
                   dbo:organization ?org .

  ?conflict rdf:type dbo:SocietalEvent ;
            rdf:type dbo:Event ;
            rdf:type dbo:MilitaryConflict .
  
  ?unit dbo:partOf ?conflict .
  ?org dbo:partOf ?conflict .

  ?conflict dbo:militaryForce ?militaryForce .
}
```",6,13,7,3,2,3,3,71,0,0,31,0,0.0,0
328,35,test,"Give me the leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Find Joseph Stalin's office
  ?office dbo:head ?leader .
  ?office a dbo:GovernmentAgency .

  # Ensure the leader is associated with an award received by Bruce Fraser
  ?award dbo:recipient ?leader ;
         dbo:recipient dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .

  # Link to Joseph Stalin
  ?office dbo:heldBy dbr:Joseph_Stalin .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
328,51,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in the force of Ferenc Szálasi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeLeader
WHERE {
  # Gustav Jonson is a politician and office holder
  dbr:Gustav_Jonson dbo:positionHeld ?gustavOffice .
  
  # The office of Gustav Jonson is a government agency
  ?gustavOffice rdf:type dbo:GovernmentAgency .

  # Ferenc Szálasi's role in the force
  dbr:Ferenc_Szálasi dbo:commanderOf ?force .
  
  # Find the leader of the office associated with Gustav Jonson
  ?officeLeader dbo:leaderOf ?gustavOffice .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
92,54,test,"Give me the band of Joseph Michael and band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfJosephMichael ?artistMember ?nevermoreArtist ?actorArtist
WHERE {
  # Joseph Michael's band and ensuring he is an artist
  dbr:Joseph_Michael dbo:band ?bandOfJosephMichael .
  ?bandOfJosephMichael dbo:member ?artistMember .
  FILTER EXISTS { ?artistMember a dbo:Musician . }

  # Nevermore's associated musical artists
  dbr:Nevermore dbo:associatedBand ?nevermoreArtist .

  # Actor of ""Return to Nuke 'Em High Volume 1"" who is also an artist
  ?actorArtist dbo:film dbr:Return_to_Nuke_'Em_High_Volume_1 .
  FILTER EXISTS { ?actorArtist a dbo:Actor . }
  FILTER EXISTS { ?actorArtist a dbo:Musician . }

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,19,test,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?awardee ?connectionToNZ
WHERE {
  ?awardee dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  
  ?awardee dbo:participatedIn ?war .

  OPTIONAL { 
    ?awardee dbo:residence dbr:Colony_of_New_Zealand .
    BIND(""Resident"" AS ?connectionToNZ)
  }
  
  OPTIONAL {
    ?awardee dbo:nationality dbr:New_Zealand .
    BIND(""National"" AS ?connectionToNZ)
  }

  FILTER(?connectionToNZ != """")
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,68,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/nickname> ?v5 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor
WHERE {
  # Sherry Hormann's spouse
  dbr:Sherry_Hormann dbo:spouse ?spouse .

  # Spouse's claim to fame (work)
  ?spouse dbo:claimToFame ?work .
  
  # The actor of the movie that is also a work and television show with Roz Ryan
  ?movie dbo:starring ?actor ;
         dbo:starring dbr:Roz_Ryan ;
         rdf:type dbo:Film ;
         dbo:genre ?genre .

  FILTER EXISTS { ?genre rdfs:subClassOf* dbo:TelevisionSeries }

  # The movie is associated with a figure known as the nickname of Jackson, Tennessee
  ?figure dbo:nickName ""Jackson, Tennessee"" .
  ?movie dbo:set dbr:?figure .

}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
404,70,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parentOfChild
WHERE {
  # Prince George William of Hanover and his parent (royalty)
  ?princeGeorge dbp:father ?parent1 .
  ?parent1 rdf:type dbo:Monarch .

  # Spouse of the parent of Prince George William of Hanover
  ?spouse1 dbo:spouse ?parent1 .

  # Child of this spouse who is royalty
  ?child1 dbo:child ?spouse1 .
  ?child1 rdf:type dbo:Monarch .

  # Princess Victoria Louise of Prussia and her spouse
  ?princessVictoria dbp:father ?fatherOfSpouse .
  ?princessVictoria rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?spouse2 dbo:spouse ?princessVictoria .
  
  # Ensure the spouse is royalty
  ?spouse2 rdf:type dbo:Monarch .

  # The father of this spouse
  ?fatherOfSpouse dbp:child ?spouse2 .

  # Child of this father
  ?parentOfChild dbo:child ?fatherOfSpouse .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
659,45,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in Battle of Leipzig and commander in German campaign of 1813.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Rutger Jan Schimmelpenninck as commander in the Battle of Leipzig
  ?battle dbr:Battle_of_Leipzig ;
         dbo:commander ?schimmelpenninck .
  
  # Rutger Jan Schimmelpenninck as commander in the German campaign of 1813
  ?campaign dbr:German_campaign_of_1813 ;
           dbo:commander ?schimmelpenninck .

  # Ensure the same person is referenced
  FILTER (?schimmelpenninck = dbr:Rutger_Jan_Schimmelpenninck)

  # The force involved in these events
  ?battle dbo:military_force ?force .
  ?campaign dbo:military_force ?force .

  # Ensuring the force is a societal event and an event
  ?force rdf:type dbo:SocietalEvent ;
         rdf:type dbo:Event .
}
```",5,8,6,3,3,3,3,71,0,0,6,0,0.0,0
161,47,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?francoMilitaryForce ?prietoPredecessorMilitaryForce
WHERE {
  # Francisco Franco's military force involved in societal and military conflicts
  ?francoMilitaryForce a dbo:MilitaryUnit ;
                      dbo:commander dbr:Franco,Francisco ;
                      dbo:participatedIn ?societalEvent .
  ?societalEvent a dbo:SocietalEvent ;
                dbo:relatedTo ?militaryConflict .

  # Indalecio Prieto's predecessor
  ?prietoPredecessor dbo:predecessor dbr:Prieto,Indalecio ;
                    dbo:militaryForce ?prietoPredecessorMilitaryForce .
  
  # Military conflict involvement for the predecessor's military force
  ?prietoPredecessorMilitaryForce a dbo:MilitaryUnit ;
                                 dbo:participatedIn ?militaryConflict .

}
```",5,10,6,3,2,3,3,71,0,0,514,0,0.0,0
232,45,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of Jon Pertwee and actor of Dog Soldiers (film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeOfResidence
WHERE {
  # Find Jon Pertwee's child who is a politician and native of France
  ?child dbo:parent dbr:Jon_Pertwee ;
         dbo:nationality dbr:Francois ;  # Assuming nationality property for France
         dbo:occupation dbr/Politician .

  # Determine the residence of this person
  ?child dbp:residence ?residence .
  
  # Ensure the residence is a settlement and British
  ?residence a dbo:Settlement ;
             dbo:nationality dbr:United_Kingdom .

  # Find the native of this residence
  ?nativeOfResidence dbo:nativePlace ?residence .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
617,55,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parent ?spouse WHERE {
  # Antiochus (son of Antiochus III the Great)
  ?antiochus dbo:childOf ?antiochusIII .
  
  # Child of Antiochus
  ?child dbo:childOf ?antiochus .

  # Parent of the child of Antiochus is Antiochus himself
  ?parent dbo:child ?child .
  FILTER (?parent = ?antiochus)

  # Spouse of the child of Antiochus III the Great and child of the child
  ?spouse dbo:spouse ?child .

  # Ensure the spouse is a royalty descendant of Seleucus II Callinicus
  ?seleucusII dbo:childOf ?parent .
  FILTER (?seleucusII = <http://dbpedia.org/resource/Seleucus_II_Callinicus>)

  # Check if the spouse is royalty
  ?spouse rdf:type dbo:Monarch .
}
```",6,7,7,2,3,3,3,71,0,0,2,0,0.0,0
391,43,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find Sherry Hormann's spouse
  dbr:Sherry_Hormann dbo:spouse ?spouse .
  
  # Ensure the spouse is native to Compton, California
  ?spouse dbo:birthPlace dbr:Compton,_California .

  # Ensure the spouse acted in ""All About the Andersons""
  ?spouse dbo:actedIn dbr:All_About_the_Andersons .

  # Bind the actor variable to the spouse
  BIND(?spouse AS ?actor)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
184,71,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v8 <http://dbpedia.org/property/father> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonParent
WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Archduchess ;
            dbo:birthYear ""1925""^^xsd:gYear ;
            dbo:parent ?margaretParent .
  
  ?margaretParentChild a dbo:Person ;
                       dbo:parent ?margaretParent .

  # Landmark at elevation 96.0
  ?landmark a dbo:Landmark ;
            dbo:elevation ""96.0""^^xsd:float ;
            dbo:nativePlace ?nativeSettlement .
  
  ?nativeSettlementParent a dbo:Person ;
                          dbo:parent ?nativeSettlement .

  # Archduke Ladislaus Philipp of Austria
  ?ladislaus a dbo:Archduke ;
             dbo:royalty ""true""^^xsd:boolean ;
             dbo:parent ?ladislausParent .
  
  ?ladislausGrandchild a dbo:Person ;
                       dbo:parent ?ladislausChild .

  ?ladislausChild a dbo:Person ;
                  dbo:parent ?ladislausParent .

  # Find the common parent
  ?margaretParentChild dbo:parent ?commonParent .
  ?nativeSettlementParent dbo:parent ?commonParent .
  ?ladislausGrandchild dbo:parent ?commonParent .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
617,18,test,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary and child of the child, that is a royalty, of the parent of Mlada (abbess).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfFather
WHERE {
  # Richeza of Poland, Queen of Hungary
  dbr:Richeza_of_Poland,_Queen_of_Hungary dbo:father ?father .
  
  # Father's parent (grandfather) who is a royalty
  ?father dbo:parent ?parentOfFather .
  ?parentOfFather rdf:type dbo:Monarch .

  # Mlada (abbess)
  dbr:Mlada_(abbess) dbo:parent ?parentOfMlada .
  
  # Child of Mlada's parent who is a royalty
  ?childOfParent rdf:type dbo:Monarch .
  ?parentOfMlada dbo:child ?childOfParent .

  # Ensure the child of Mlada's parent is also related to Richeza's grandfather
  FILTER (?parentOfFather = ?childOfParent)
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
281,47,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlaceCountry
WHERE {
  # Find the leader of the 1962 New South Wales state election
  ?leader dbo:officeHolderOf dbr:1962_New_South_Wales_state_election .
  FILTER (dbo:politician ?leader) .

  # Get the birthplace of this leader and ensure it is a country
  ?leader dbp:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Find the awardee of Knight Grand Cross of the Order of the Bath involved in a war
  ?awardee dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  ?war dbo:participant ?awardee .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
314,27,test,"Give me the person deceased at Madrid and awardee of the award of Sergei Makovetsky and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?award ?event WHERE {
  ?person dbo:deathPlace dbr:Madrid .
  
  ?person dbo:award ?award .
  ?award dbo:recipient ?recipient .
  FILTER EXISTS { 
    ?makovetsky dbo:name ""Sergei Makovetsky""@en .
    ?makovetsky dbo:relatedTo ?award .
  }
  
  OPTIONAL {
    ?person dbo:militaryRank ?rank .
    FILTER (?rank = dbr:Commander)
  }

  ?event dbo:associatedWith dbr:Lisa_Gavrić .
  FILTER EXISTS { 
    ?event a dbo:SocietalEvent .
    ?event a dbo:Event .
  }
  
  OPTIONAL {
    ?person foaf:name ?name .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
996,16,test,Give me the entity in the award of Ekrem Akurgal and force of the awardee of 1778.0.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardEntity ?awardeeWithForce
WHERE {
    # Find the award entity related to Ekrem Akurgal
    ?awardEntity dbo:recipient dbr:Ekrem_Akurgal .
    
    # Find the awardee with a force value of 1778.0
    ?entity dbo:forceValue ""1778.0""^^xsd:float ;
            dbo:recipient ?awardeeWithForce .
}
```",4,4,5,2,2,3,2,20,0,0,4,0,0.0,0
701,66,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Ramesses II and parent of the child of Nefertari.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?battle dbp:name ""Battle of Perire"" .

  ?commander dbo:participatedIn ?battle ;
             dbo:father ?father .

  ?father dbo:spouse ?spouse .
  ?spouse a dbo:Monarch ;

  ?ramessesChild dbo:parent ?spouse ;
                 dbo:parent dbp:RamessesII .

  ?nefertariChild dbo:parent ?spouse ;
                  dbo:parent dbp:Nefertari .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
378,61,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v1 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?roleInWar ?peninsularRole WHERE {
  # Find wars that are both military conflicts and societal events
  ?war a dbo:MilitaryConflict ;
      a dbo:SocietalEvent .

  # Thomas Trigge's role in the war
  ?triggeRole dbo:agent dbr:Thomas_Trigge ;
              dbo:role ?roleInWar ;
              dbo:relatedWork ?war .

  # Thomas Trigge's role in the Peninsular War
  ?peninsularWar a dbo:MilitaryConflict ;
                 rdfs:label ""Peninsular War""@en .
  
  ?triggePeninsularRole dbo:agent dbr:Thomas_Trigge ;
                        dbo:role ?peninsularRole ;
                        dbo:relatedWork ?peninsularWar .

}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
767,52,test,"Give me the alma mater of the administration of George K. Nash and reference to  and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/state> ?v2 . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater ?settlementEntity
WHERE {
  # George K. Nash's alma mater
  dbr:George_K._Nash dbo:almaMater ?almaMater .

  # Administration of George K. Nash and settlements within it
  OPTIONAL {
    ?administration dbo:member dbr:George_K._Nash .
    ?administration dbo:settlement ?settlementEntity .
    FILTER (isBlank(?settlementEntity) || ?settlementEntity a dbo:Settlement)
  }

  # Writer of ""Where It's At"" by Dustin Lynch
  dbr:""Where_It%27s_At_(Dustin_Lynch_album)"" dbo:lyricsBy ?writer .

  # Settlement associated with the writer
  OPTIONAL {
    ?writer dbo:settlement ?settlementEntity .
    FILTER (isBlank(?settlementEntity) || ?settlementEntity a dbo:Settlement)
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
528,70,test,Give me the war of the commander in the work of --01-09 and force of the person born as the birth name of Narciso Campero and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?commander ?force1 ?force2
WHERE {
  # Find the work/event on January 9th and its commander
  ?event dbo:date ""2009-01-09""^^xsd:date ;
         dbo:commander ?commander .
  
  # Find military forces associated with Narciso Campero
  dbr:Narciso_Campero dbo:birthName ""Narciso Campero""@en ;
                      dbo:militaryForce ?force1 .

  # Find the war involving the Battle of Pisagua and its military force
  dbr:Battle_of_Pisagua dbo:participatedIn ?war ;
                        dbo:militaryForce ?force2 .
}
```",8,8,9,3,3,3,3,71,0,0,2,0,0.0,0
404,48,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Get the birth name of Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia dbo:birthName ?birthName .

  # Find Ernest Augustus, Duke of Brunswick's father
  dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:father ?father .

  # Find a royalty person with the same birth name and is a child of Ernest Augustus' father
  ?person dbo:birthName ?birthName ;
          rdf:type dbo:Monarch ;
          dbo:childOf ?father .

  # Get the spouse of this person
  ?person dbo:spouse ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
617,38,test,Give me the spouse of the child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfChild ?parentOfAntiochus
WHERE {
  # Antiochus III the Great
  dbr:Antiochus_III_the_Great dbo:child ?child1 .
  
  # Spouse of one child
  ?child1 dbo:spouse ?spouseOfChild .

  # Another child, Antiochus
  dbr:Antiochus_III_the_Great dbo:child dbr:Antiochus .

  # Parent of Antiochus (should be Antiochus III the Great)
  dbr:Antiochus dbo:parent ?parentOfAntiochus .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
528,63,test,"Give me the force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile and war of the commander in Battle of La Rinconada de Ate.","SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v6 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war ?commander
WHERE {
  # Find Narciso Campero Leyes and his associated force
  ?person rdfs:label ""Narciso Campero Leyes""@en .
  ?person dbo:militaryRank ?rank .
  OPTIONAL { ?person dbo:memberOf ?force . }

  # Find societal events in Chile related to military forces or wars
  ?event dbo:place dbr:Chile ;
         a dbo:SocietalEvent ;
         dbo:relatedMilitaryForce ?war .

  # Find the commander of the Battle of La Rinconada de Ate
  ?battle rdfs:label ""Battle of La Rinconada de Ate""@en .
  ?battle dbo:commander ?commander .
  
  FILTER(?person != ?commander) # Ensure we are not conflating different individuals
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
712,18,test,"Give me the resting place of the awardee of Hero of the Soviet Union and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v1 <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?restingPlace ?capitalCity
WHERE {
  # Find the military force involved in Vyoshenskaya Uprising
  ?militaryForce dbo:wikiPageRedirects dbr:Vyoshenskaya_Uprising .
  
  # Identify awardees of Hero of the Soviet Union from this military force
  ?awardee dbo:award dbr:Hero_of_the_Soviet_Union ;
          dbo:militaryService ?militaryForce .

  # Find the country associated with the military force
  ?country dbo:hasMilitaryBranch ?militaryForce .
  
  # Get the capital city of that country
  ?capitalCity dbp:capital ?country .

  # Retrieve the resting place of the awardee
  OPTIONAL { ?awardee dbo:finalRestingPlace ?restingPlace }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
281,42,test,"Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warOfAwardee ?heatherRoyUnit
WHERE {
  # Find the awardee of Knight Grand Cross of the Order of the Bath
  ?awardee dbo:award <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .

  # Wars involving this awardee in the Colony of New Zealand
  ?warOfAwardee dbo:location dbr:Colony_of_New_Zealand ;
                dbo:participant ?awardee .

  # Heather Roy's military unit
  ?heatherRoyUnit dbo:profession ""military""^^xsd:string ;
                  dbo:member dbr:Heather_Roy .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
360,27,test,"Give me the writer of The Roaring Silence and native of the death place, that is a settlement, of Winnie Madikizela-Mandela and reference to the author of Blinded by the Light.",SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?deathSettlement ?authorReference
WHERE {
  # Writer of ""The Roaring Silence""
  dbr:The_Roaring_Silence dbo:composer ?writer .

  # Native place of death of Winnie Madikizela-Mandela
  dbr:Winnie_Madikizela-Mandela dbo:placeOfBirth ?deathSettlement .
  
  FILTER (isLiteral(?deathSettlement) && regex(str(?deathSettlement), ""settlement"", ""i""))

  # Reference to the author of ""Blinded by the Light""
  OPTIONAL {
    dbr:Blinded_by_the_Light dbo:lyricist dbr:Bruce_Springsteen .
    BIND(""Bruce Springsteen"" AS ?authorReference)
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
701,69,test,"Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of Ramesses II and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity
WHERE {
  # Amun-her-khepeshef's spouse and their child
  ?spouseAmun a dbo:Spouse ;
              dbo:child ?childAmun .
  
  ?amunHerKhepeshef dbo:spouse ?spouseAmun .

  # Ramesses II's children and their parent (Ramesses II)
  ?ramessesII dbo:child ?childRamesses .
  
  # Commander's father and his spouse
  ?commanderFather a dbo:Person ;
                  dbo:child ?commander .
  
  ?fatherSpouse a dbo:Spouse ;
                dbo:spouse ?commanderFather .

  # Common entity that is royalty in the Battle of Perire
  ?commonEntity a dbo:Royalty ;
               dbo:battle ?battlePerire .
  
  FILTER(?battlePerire = dbr:Battle_of_Perire)

  # Conditions for commonality
  VALUES (?entity) {
    ( ?spouseAmun )
    ( ?ramessesII )
    ( ?fatherSpouse )
  }
  
  ?commonEntity dbo:parent ?entity .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
528,50,test,Give me the war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?commander ?force
WHERE {
  ?war a dbo:MilitaryConflict ;
       dbo:commander ?commander .
  
  ?commander dbo:dateOfBirth ?birthDate .
  FILTER (YEAR(?birthDate) = 1829 && MONTH(?birthDate) = 1 && DAY(?birthDate) = 9)

  OPTIONAL { 
    ?person dbp:name ""Narciso Campero Leyes"" ;
            dbo:force ?force .
    FILTER (?commander = ?person)
  }
}
```

This query attempts to:
- Select wars (`?war`) and their commanders (`?commander`).
- Filter commanders by a specific birth date (January 9, 1829).
- Optionally link the commander to Narciso Campero Leyes and retrieve his associated military force (`?force`).",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
16,51,test,Give me the professional in the profession of Satomi Ishihara and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional
WHERE {
  # Get Satomi Ishihara's profession
  dbr:Satomi_Ishihara dbo:occupation ?profession .

  # Find a person with the same profession as Satomi Ishihara
  ?person dbo:occupation ?profession .
  
  # Get birth name of an alumnus from Ohio State University
  {
    SELECT DISTINCT ?birthName WHERE {
      ?alumnus dbo:almaMater dbr:Ohio_State_University ;
               foaf:name ?fullName .
      ?alumnus foaf:givenName ?firstName ;
               foaf:surname ?lastName .
      
      BIND(CONCAT(?firstName, "" "", ?lastName) AS ?birthName)
    }
  }

  # Find a person with the same birth name
  ?person foaf:givenName ?firstName ;
          foaf:surname ?lastName .
  
  FILTER (CONCAT(?firstName, "" "", ?lastName) = ?birthName)
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
378,63,test,Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in Peninsular War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Wars involving Carl Wilhelm Scheele (Carl Pontus Gahn)
  OPTIONAL { 
    dbr:Carl_Pontus_Gahn dbo:birthName dbr:Carl_Wilhelm_Scheele .
    dbr:Carl_Wilhelm_Scheele dbo:occupation dbr:Chemist .
    ?s dbp:relatedTo dbr:Carl_Wilhelm_Scheele .
    ?s a dbo:War .
    BIND(?s AS ?war)
  }

  # Wars involving George Augustus Eliott (Great Siege of Gibraltar)
  OPTIONAL {
    dbr:George_Augustus_Eliott dbo:commanderOf dbr:Great_Siege_of_Gibraltar .
    ?s dbp:relatedTo dbr:George_Augustus_Eliott .
    ?s a dbo:War .
    BIND(?s AS ?war)
  }

  # Wars involving Arthur Wellesley (Peninsular War)
  OPTIONAL {
    dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:commanderOf dbr:Peninsular_War .
    ?s dbp:relatedTo dbr:Arthur_Wellesley_1st_Duke_of_Wellington .
    ?s a dbo:War .
    BIND(?s AS ?war)
  }
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
767,27,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?author a dbo:Writer ;
          foaf:name ""Matthew Burland""@en .
  
  OPTIONAL {
    ?work dbo:author ?author ;
          dbo:characterName ?alterEgo .
  }
}
```",3,4,4,3,1,3,3,71,0,0,98447,0,0.0,0
281,30,test,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and war of the profession, that is a military unit, of Heather Roy and entity in Colony of New Zealand.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfBeauchampSeymour ?militaryUnitHeatherRoy ?entityInNewZealand
WHERE {
  # Beauchamp Seymour, 1st Baron Alcester's wars
  OPTIONAL {
    dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:militaryConflict ?warOfBeauchampSeymour .
  }
  
  # Heather Roy's military unit or profession
  OPTIONAL {
    dbr:Heather_Roy dbo:profession ?militaryUnitHeatherRoy .
    FILTER (regex(str(?militaryUnitHeatherRoy), ""military|army|unit"", ""i""))
  }

  # Entity in Colony of New Zealand related to war
  OPTIONAL {
    ?entityInNewZealand dbo:country dbr:Colony_of_New_Zealand ;
                       dbo:militaryConflict ?war .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
488,56,test,"Give me the birth place of the commander in Boshin War and death place of Tokugawa Ieyasu and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceSaigo ?deathPlaceIeyasu ?administrationFatherSpouse
WHERE {
  # Saigō Takamori's birthplace
  dbr:Saig%C5%8D_Takamori dbo:birthPlace ?birthPlaceSaigo .

  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlaceIeyasu .

  # Tokugawa Masako's spouse (Tokugawa Yoshinobu) and his father (Tokugawa Nariaki)
  dbr:Tokugawa_Masako dbo:spouse dbr:Tokugawa_Yoshinobu .
  dbr:Tokugawa_Yoshinobu dbo:father ?fatherYoshinobu .

  # Tokugawa Nariaki's administration
  ?fatherYoshinobu dbo:administrativePost ?administrationFatherSpouse .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
492,34,test,Give me the person decedent at the work of the author of French Algeria and person decedent at Algiers.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedentAtWork ?decedentAtAlgiers
WHERE {
  # Albert Camus' work location
  dbr:Albert_Camus dbo:workLocation ?workLocation .

  # Person who died at the work location of Albert Camus
  ?person dbo:deathPlace ?workLocation .
  ?person rdfs:label ?decedentAtWork .

  # Person who died in Algiers
  ?person2 dbo:deathPlace dbr:Algiers .
  ?person2 rdfs:label ?decedentAtAlgiers .
}
```

This query retrieves:
- The person who died at the work location of Albert Camus.
- The person who died in Algiers.",4,4,5,3,2,3,3,71,0,0,16,0,0.0,0
10,26,test,"Give me the band member of Luke Vibert and associated musical artist of the person born, that is an artist, as Matt Colton and professional in the birth name of Sharon Kao.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v4 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember ?associatedArtist
WHERE {
  # Find band members of Luke Vibert
  dbr:Luke_Vibert dbo:member ?bandMember .

  OPTIONAL {
    # Identify Matt Colton as an artist
    ?person foaf:name ""Matt Colton""@en .
    ?person dbo:birthName ?birthName .
    
    # Use Sharon Kao's birth name for professional identification
    dbr:Sharon_Kao dbo:birthName ?sharonBirthName .
    FILTER(?birthName = ?sharonBirthName)
    
    # Find associated musical artist of the person identified as Matt Colton with Sharon Kao's birth name
    ?person dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
9,59,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?mayorAlmaMater ?awardeeAlmaMater
WHERE {
  # Find the organization in Belfast and its mayor
  ?organization dbo:location dbr:Belfast .
  ?mayor dbo:positionHeld ?position ;
         dbp:almaMater ?mayorAlmaMater .
  ?position dbo:positionTitle ""Mayor""@en ;
            dbo:officeHolder ?mayor ;
            dbo:relatesToOrganization ?organization .

  # Find the awardee of the Royal Medals and their alma mater
  ?awardee dbp:award dbr:Royal_Medals .
  ?awardee dbp:almaMater ?awardeeAlmaMater .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
115,8,test,Give me the alma mater of Vladimir Cerrón and alma mater of the awardee of National Order of Scientific Merit.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?vCerronAlmaMater ?awardeeAlmaMater
WHERE {
  # Alma mater of Vladimir Cerrón
  ?vCerron dbo:almaMater ?vCerronAlmaMater .
  ?vCerron rdfs:label ""Vladimir Cerrón""@en .

  OPTIONAL {
    # Awardee of the National Order of Scientific Merit and their alma mater
    ?awardee dbp:nationalOrderOfScientificMeritAward ""true""^^xsd:boolean ;
             dbo:almaMater ?awardeeAlmaMater .
  }
}
```",3,3,4,2,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
232,65,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v4 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find John Pertwee
  ?john a dbo:Person ;
        foaf:name ""John Devon Roland Pertwee""@en .
  
  # Find Sylvie Bermann's British settlement residence
  ?sylvie a dbo:Person ;
          foaf:name ""Sylvie Bermann""@en ;
          dbp:residence ?settlement .
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_Kingdom .

  # Find the actor who is John Pertwee's child
  ?actor a dbo:Actor ;
         foaf:name ?name ;
         dbo:parent ?john .

  # Find claim to fame that is both a film and military conflict
  ?claimToFame a dbo:Film, dbo:MilitaryConflict ;
               dbo:performer ?actor .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
328,24,test,Give me the leader of People's Commissariat of Defense of the Soviet Union and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?commander 
WHERE {
  # Find the leader of People's Commissariat of Defense of the Soviet Union
  ?defenseCommissariat a dbo:GovernmentAgency ;
                      dbo:head ?leader .
  
  FILTER regex(str(?defenseCommissariat), ""People's Commissariat of Defense of the Soviet Union"", ""i"")

  # Find Ferenc Szálasi and his associated commander role
  dbr:Ferenc_Szálasi dbo:commanderOf ?force ;
                     dbo:positionHeld ?commanderRole .

  OPTIONAL {
    ?commanderRole dbo:leader ?commander .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,63,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname
WHERE {
  # Queen's University Belfast and its nickname
  dbr:Queen's_University_Belfast dbo:nickname ?nickname .

  # Mayor of an organization in Belfast who is an alumnus of Queen's University Belfast
  ?mayor dbp:almaMater dbr:Queen's_University_Belfast ;
         dbo:positionHeld ?organization .
  ?organization dbo:location dbr:Belfast .

  # Awardee of the Royal Medal who is also an alumnus of Queen's University Belfast
  ?awardee dbp:almaMater dbr:Queen's_University_Belfast ;
           dbo:awardReceived ?royalMedal .
  ?royalMedal rdfs:label ""Royal Medal""@en .

  # Ensure the same figure is returned for both conditions
  FILTER (?mayor = ?awardee)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,57,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on 1985-04-29 and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band1 ?band2 ?songBand
WHERE {
  # Tracey Elizabeth McSween's band
  OPTIONAL {
    ?person1 dbo:name ""Tracey Elizabeth McSween""@en .
    ?person1 dbo:member ?band1 .
  }

  # Person born on 1985-04-29 and their band
  OPTIONAL {
    ?person2 dbp:birthday ""1985-04-29""^^xsd:date .
    ?person2 dbo:member ?band2 .
  }
  
  # Amba Shepherd's song and its band
  OPTIONAL {
    ?song dbo:writer dbr:Amba_Shepherd ;
          dbo:genre ?genre .
    ?song dbo:lyricsBy ?band3 .
    BIND(?band3 AS ?songBand)
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,61,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander
WHERE {
  # Gustav Jonson is an office holder and politician
  ?gustavJonson a dbo:OfficeHolder ;
                dbo:officeHolderOf ?office .

  # The leader of the office (government agency) where Gustav Jonson works
  ?leader a dbo:GovernmentAgencyLeader ;
          dbo:leaderOf ?office .

  # Commander in the force at Budapest related to this leader
  ?commander a dbo:MilitaryCommander ;
             dbo:location dbr:Budapest ;
             dbo:reportsTo ?leader .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
994,48,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist
WHERE {
  # Find the musical artist associated with Donald Maynard Dokken
  dbr:Don_Dokken a dbo:MusicalArtist ;
                 dbo:member ?bandMember .

  OPTIONAL {
    # Find associated artists of Watchtower
    dbr:Watchtower a dbo:MusicalArtist ;
                   dbo:associatedBand ?associatedArtist .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
9,65,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of Northern Ireland Forum.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v4 . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterAwardee ?almaMaterMayor
WHERE {
  # Find the awardee of Royal Medals
  ?awardee dbo:award dbr:Royal_Medals .
  
  # Get the alma mater of this awardee
  ?awardee dbo:almaMater ?institutionAwardee .
  BIND(?institutionAwardee AS ?almaMaterAwardee)
  
  OPTIONAL {
    # Find Queen's University Belfast by its nickname
    dbr:Queen's_University_Belfast rdfs:label ?nickname .
    FILTER(CONTAINS(LCASE(?nickname), ""queen's university belfast""))
    
    # Get the mayor of Northern Ireland Forum who is a politician
    ?mayor dbo:almaMater ?institutionMayor ;
           dbo:position dbr:Northern_Ireland_Forum_Mayor ;
           rdf:type dbo:Politician .
    
    # Get the alma mater of this mayor
    BIND(?institutionMayor AS ?almaMaterMayor)
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
959,46,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native
WHERE {
  # Identify Yōichi Masuzoe
  dbr:Yōichi_Masuzoe a dbo:Person ;
    dbo:birthYear ""1958""^^xsd:gYear ;
    dbo:almaMater ?university .

  # Ensure the alma mater is Japanese, an organization, educational institution, and university
  ?university a dbo:EducationalInstitution, dbo:University, dbo:Organization ;
              dbp:country dbr:Japan .

  # Get the residence of Yōichi Masuzoe (a country)
  dbr:Yōichi_Masuzoe dbo:residenceCountry ?country .

  # Retrieve the native of that country
  ?native dbo:nativeOf ?country .
}
```",5,10,6,3,2,3,3,71,0,0,167,0,0.0,0
547,68,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v5 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandchildRestingPlace ?actorRestingPlace ?awardeeRestingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  dbr:William_Haliburton dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild foaf:deathPlace ?grandchildDeathPlace .

  OPTIONAL { 
    ?grandchildDeathPlace dbo:location ?grandchildRestingPlace .
  }

  # Resting place of the actor of the show with Emily Richard
  dbr:Emily_Richard dbo:actor ?show .
  ?show dbo:castMember ?actor .
  ?actor foaf:deathPlace ?actorDeathPlace .

  OPTIONAL { 
    ?actorDeathPlace dbo:location ?actorRestingPlace .
  }

  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  ?awardee dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
  ?awardee foaf:deathPlace ?awardeeDeathPlace .

  OPTIONAL { 
    ?awardeeDeathPlace dbo:location ?awardeeRestingPlace .
  }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
659,62,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of Napoleonic Wars and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderInWar WHERE {
  ?war a dbo:MilitaryConflict .

  ?polishHorse a dbo:MilitaryUnit ;
               rdfs:label ""Polish Horse""@en ;
               dbo:militaryConflicts ?napoleonicWars .

  ?napoleonicWars a dbo:MilitaryConflict ;
                  rdfs:label ""Napoleonic Wars""@en .

  ?commanderInWar dbo:commanded ?war .
  
  OPTIONAL {
    ?polishHorse dbo:member ?commanderInWar .
  }
  
  OPTIONAL {
    ?irishOfficeHolder a dbo:OfficeHolder ;
                       dbo:nationality dbr:Ireland ;
                       dbo:commanded ?force .

    ?force dbo:militaryConflicts ?napoleonicWars .
    
    ?commanderInWar dbo:member ?force .
  }
}
```",7,12,8,3,3,3,3,71,0,0,13,0,0.0,0
54,60,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfFather
WHERE {
  # Thinkhaya of Pagan and his child
  dbr:Thinkhaya_of_Pagan dbo:spouse ?thinkhayas_spouse .
  ?thinkhayas_child dbo:parent ?thinkhayas_spouse ;
                   dbo:parent dbr:Thinkhaya_of_Pagan .

  # Predecessor of Thinkhaya's child
  ?predecessor dbo:succeededBy ?thinkhayas_child ;
               a dbo:Monarch ; # Assuming royalty is represented by Monarch class
               a dbo:OfficeHolder . # Assuming office holder is represented by OfficeHolder class

  # Thihapate of Mohnyin reference
  dbr:Thihapate_of_Mohnyin dbo:succeededBy ?thinkhayas_child .

  # The child of the father (Thinkhaya) of Thinkhaya's child
  ?childOfFather dbo:parent dbr:Thinkhaya_of_Pagan .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
427,64,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to the name of the party of Michele Pinto and party of Giulio Andreotti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?birthNameProdi ?partyPinto ?partyAndreotti
WHERE {
  # Romano Prodi's birth name and party affiliation
  ?prodi dbo:birthName ?birthNameProdi .
  ?prodi rdf:type dbo:Politician ;
         dbo:partyAffiliation ?partyProdi .

  # Michele Pinto's party affiliation
  ?pinto rdf:type dbo:Politician ;
         dbo:partyAffiliation ?partyPinto .

  # Giulio Andreotti's party affiliation
  ?andreotti rdf:type dbo:Politician ;
             dbo:partyAffiliation ?partyAndreotti .

  FILTER (str(?birthNameProdi) = ""Romano Prodi"")
  FILTER (str(?pinto) = ""Michele Pinto"")
  FILTER (str(?andreotti) = ""Giulio Andreotti"")
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
9,47,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater
WHERE {
  # Mayor of Northern Ireland Forum
  ?mayor a dbo:Politician ;
         dbo:officeHolderOf dbr:Northern_Ireland_Forum .
  
  # Alma mater of the mayor
  ?mayor dbo:almaMater ?almaMater .

  # Awardee of Royal Medals
  ?awardee dbo:awardReceived dbr:Royal_Medals .

  # Alma mater of the awardee
  ?awardee dbo:almaMater ?almaMater .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
184,63,test,"Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result
WHERE {
  # Archduke Joseph Karl of Austria's child's child
  ?child1 dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  ?grandchild1 dbo:parent ?child1 .

  # Landmark at elevation 96.0 that is a settlement
  ?landmark a dbo:Settlement ;
            dbo:elevation ""96.0""^^xsd:float .

  # Native of the landmark
  ?native dbo:nativePlace ?landmark .
  
  # Parent of the native
  ?parentNative dbo:child ?native .

  # Archduke Joseph Francis of Austria's child
  ?child2 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  
  # The result should be both parent of the native and related to Archduke Joseph Francis's child
  ?result dbo:child ?native ;
          dbo:child ?child2 .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
994,65,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist
WHERE {
  # Fredrik Thordendal's band that is an organization
  ?band a dbo:Band ;
        dbo:member ?thordendalMember .
  
  # Fredrik Thordendal
  ?thordendalMember dbr:Fredrik_Thordendal .

  # Band member who is also a band/group/organization
  ?thordendalMember a (dbo:Band|dbo:MusicalGroup|dbo:Organization) .
  
  # Donald Maynard Dokken's associated musical artist
  ?dokken dbr:Don_Dokken ;
         dbo:associatedMusicalArtist ?dokkenArtist .

  # Watchtower's associated musical artist
  ?watchtower dbr:Watchtower ;
              dbo:associatedMusicalArtist ?watchtowerArtist .
  
  # Linking the chain
  ?thordendalMember dbo:associatedMusicalArtist ?dokkenArtist .
  ?dokkenArtist dbo:associatedMusicalArtist ?watchtowerArtist .

  # Final associated artist we want to find
  ?watchtowerArtist dbo:associatedMusicalArtist ?associatedArtist .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
492,48,test,"Give me the person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?decedentAtWork ?decedentInAlgiers
WHERE {
  # Find Albert Camus and his related works or locations
  dbr:Albert_Camus a dbo:Writer ;
                   dbo:birthPlace dbr:Algeria .

  OPTIONAL {
    ?work dbo:author dbr:Albert_Camus .
    ?location dbo:location dbr:Albert_Camus .
    ?decedentAtWork dbo:deathPlace ?location .
  }

  # Find decedents in Algiers
  dbr:Algiers a dbo:Settlement ;
              rdfs:label ""Algiers""@en .

  OPTIONAL {
    ?decedentInAlgiers dbo:deathPlace dbr:Algiers .
  }
}
```",5,6,6,3,2,3,3,71,0,0,16,0,0.0,0
617,51,test,Give me the parent of the child of the commander in Battle of Panium and spouse of the child of Antiochus III the Great.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild ?spouseOfAntiochusChild
WHERE {
  # Commander in Battle of Panium
  ?battle dbr:Battle_of_Panium .
  ?commander dbo:commanderOf ?battle .

  # Child of the commander
  ?child dbo:child ?commander .

  # Parent of the child
  ?parentOfChild dbo:spouse|dbo:partner ?child .

  # Antiochus III the Great and his children
  dbr:Antiochus_III_the_Great dbo:child ?antiochusChild .

  # Spouse of one of Antiochus's children
  ?spouseOfAntiochusChild dbo:spouse|dbo:partner ?antiochusChild .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
16,61,test,Give me the professional in the profession of the actor of Unnatural (TV series) and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional ?person
WHERE {
  # Find the actor of ""Unnatural"" TV series
  ?actor dbo:profession dbr:Actor .
  ?actor dbo:workFeaturedIn dbr:Unnatural_(TV_series) .

  # Get the profession of this actor
  ?actor dbo:profession ?profession .

  # Find an alumnus of Ohio State University
  ?alumnus dbo:almaMater dbr:Ohio_State_University .
  
  # Match birth name of the alumnus with a person born as that name
  ?person foaf:name ?birthName .
  ?alumnus foaf:name ?birthName .

  # Find professional in the same profession as the actor
  ?professional dbo:profession ?profession .
}
```",6,6,7,3,2,3,3,71,0,0,3,0,0.0,0
378,36,test,"Give me the war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commanderFame WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:participatedIn [
        dbo:agent dbr:Carl_Pontus_Gahn ;
        dbo:agent dbr:Thomas_Trigge
      ] .
  
  OPTIONAL {
    ?war dbo:commander ?commander .
    ?commander dbo:famousFor ?commanderFame .
  }
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
801,68,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v5 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v7 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find the writer of ""40 Dayz & 40 Nightz"" who is a musical artist and an artist
  ?work dbo:title ""40 Dayz & 40 Nightz""@en .
  ?work dbo:writer ?writer .
  ?writer rdf:type dbo:MusicalArtist ;
          rdf:type dbo:Artist .

  # Find the producer of this work who is also a musical work and a song
  ?work dbo:producer ?producer .
  ?producer rdf:type dbo:MusicalWork ;
            rdf:type dbo:Song .

  # Identify the professional (rapper) associated with The Shadow's alter ego
  ?professional rdf:type dbo:MusicalArtist ;
                dbo:profession dbr:Rapper .
  ?shadowAlterEgo dbo:trueSelf ?professional .
  ?shadowAlterEgo rdfs:label ""The Shadow""@en .

  # Link the artist to all these conditions
  ?artist rdf:type dbo:MusicalArtist ;
          rdf:type dbo:Artist ;
          dbo:writer ?writer ;
          dbo:producer ?producer .
}
```",8,14,9,3,3,3,3,71,0,0,8,0,0.0,0
547,52,test,Give me the resting place of the child of the child of William Haliburton and resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchildRestingPlace ?alanCunninghamRestingPlace ?actorRestingPlace
WHERE {
  # Resting place of the child of the child of William Haliburton
  ?williamHaliburton dbo:spouse ?spouse .
  ?spouse dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .
  ?grandchild dbo:deathPlace ?grandchildRestingPlace .

  # Resting place of Alan Cunningham
  dbr:Alan_Cunningham dbo:deathPlace ?alanCunninghamRestingPlace .

  # Resting place of the actor of ""Enemy at the Door""
  dbr:Enemy_at_the_Door dbo:actor ?actor .
  ?actor dbo:deathPlace ?actorRestingPlace .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
528,35,test,Give me the force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthDate ?militaryForce
WHERE {
  # Find Narciso Campero Leyes and his birth date
  dbr:Narciso_Campero_Leyes dbo:birthdayYear ?birthDate .

  # Find the military force involved in the Battle of Pisagua
  OPTIONAL {
    dbr:Battle_of_Pisagua dbo:militaryForce ?militaryForce .
  }
}
```",4,4,5,2,2,3,3,71,0,0,3,0,0.0,0
92,70,test,"Give me the band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v7 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?associatedArtist WHERE {
  # Geoff Tate's birth name and band membership
  ?person dbo:birthName ""Joseph Michael""@en .
  ?person dbo:bandMember ?band .

  # Geoff Tate's association with Nevermore
  OPTIONAL { 
    ?person dbo:associatedBand dbr:Nevermore_(band) .
  }

  # Geoff Tate's acting role in Return to Nuke 'Em High Volume 1
  ?person dbo:actor dbr:Return_to_Nuke_'Em_High_Volume_1 .

  # Find associated musical artists
  OPTIONAL {
    ?person dbo:associatedBand ?associatedArtist .
  }
  
  FILTER (?band = dbr:Queensrÿche)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,62,test,"Give me the parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentIlona ?nativeLandmark ?childOfChild
WHERE {
  # Parent of Archduchess Ilona of Austria
  dbr:Archduchess_Ilona_of_Austria dbo:parent ?parentIlona .

  # Landmark at elevation 96.0 that is a settlement and its native
  ?landmark a dbo:Settlement ;
           dbp:elevation ""96.0""^^xsd:float .
  ?native dbo:nativePlace ?landmark .
  BIND(?native AS ?nativeLandmark)

  # Parent of Archduke Ladislaus Philipp who is royalty
  dbr:Archduke_Ladislaus_Philipp_of_Austria dbo:parent ?royaltyParent .
  FILTER EXISTS { ?royaltyParent a dbo:Royalty }

  # Child of the child of the parent (who is royalty)
  ?child1 dbo:parent ?royaltyParent .
  ?child2 dbo:parent ?child1 .
  BIND(?child2 AS ?childOfChild)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
303,22,test,"Give me the party of the commander, that is a politician, in United States invasion of Panama and entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?party ?country
WHERE {
  # Find the commander of the United States invasion of Panama who is a politician
  ?commander dbo:occupation dbr:Politician .
  ?commander dbo:memberOf ?party .
  
  # Ensure this commander was involved in the United States invasion of Panama
  ?invasion dbo:commander ?commander ;
            rdfs:label ""United States invasion of Panama""@en .

  # Find El Valle de Antón and its country
  dbr:El_Valle_de_Antón dbo:country ?country .
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
547,44,test,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorBurial ?jamesBurtonBurial ?knightBurial
WHERE {
  # Actor from ""Enemy at the Door""
  ?actor dbo:title ""Enemy at the Door""@en .
  ?actor dbo:birthName ?actorName .
  OPTIONAL { ?actor dbo:deathPlace ?actorBurial . }

  # James Burton, Egyptologist
  ?james dbr:James_Burton_(Egyptologist) .
  OPTIONAL { ?james dbo:deathPlace ?jamesBurtonBurial . }

  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  ?knight dbo:award ""Knight Grand Cross of the Order of St Michael and St George""@en .
  OPTIONAL { ?knight dbo:deathPlace ?knightBurial . }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
492,26,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?conflict (COUNT(?conflict) AS ?count)
WHERE {
  # Find the commander of the Battle of Verdun
  ?battle dbr:Battle_of_Verdun .
  ?battle dbo:commander ?verdunCommander .

  # Find other conflicts where this commander was involved
  ?conflict a dbo:MilitaryConflict ;
           dbo:commander ?verdunCommander .

  FILTER(?conflict != dbr:Battle_of_Verdun)
}
GROUP BY ?conflict
ORDER BY DESC(?count)
```",3,5,4,3,1,3,3,71,0,0,92,0,0.0,0
339,17,test,Give me the father of the child of the parent of Princess Olga of Greece and Denmark and child of George I of Greece.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father
WHERE {
  # Princess Olga of Greece and Denmark
  dbr:Princess_Olga_of_Greece_and_Denmark dbo:parent ?parent1 .
  
  # Parent of Princess Olga (either mother or father)
  OPTIONAL { ?parent1 rdfs:label ""George I of Greece""@en . }
  
  # Sibling of Princess Olga
  ?sibling dbo:parent ?parent2 ;
           dbo:parent ?parent1 .

  # Ensure the sibling is also a child of George I
  ?sibling dbo:parent ?parent3 .
  FILTER (?parent3 = dbr:George_I_of_Greece)

  # Father of the sibling (which should be one of Princess Olga's parents)
  ?father dbo:child ?sibling .

  # Ensure the father is also a parent of Princess Olga
  FILTER(?father IN(?parent1, ?parent2))
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
959,21,test,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?university WHERE {
  # Eiji Ōtsuka as manager of Júbilo Iwata in 2013
  dbr:Eiji_Ōtsuka dbo:position ""Manager""@en .
  dbr:Eiji_Ōtsuka dbp:team dbr:Júbilo_Iwata .
  
  # Alma mater details
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  ?university a dbo:University ;
              dbo:country dbr:Japan ;
              rdf:type dbo:Organisation, dbo:EducationalInstitution .

}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
427,71,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v4 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?fatherParty ?michelePintoParty ?romanoProdiParty
WHERE {
  # Father of an MIT alumnus
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus foaf:parent ?father .
  ?father dbo:partyAffiliation ?fatherParty .

  # Party affiliation of Michele Pinto
  dbr:Michele_Pinto dbo:partyAffiliation ?michelePintoParty .

  # Politician and office holder born as Romano Prodi
  ?politician foaf:name ""Romano Prodi""@en .
  ?politician dbo:officeHolder true .
  ?politician dbo:partyAffiliation ?romanoProdiParty .
}
```",9,11,10,3,3,3,3,71,0,0,2,0,0.0,0
281,55,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of Knight Grand Cross of the Order of the Bath and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?heatherProfessionWar ?knightGrandCrossWar ?bobBirthCountry
WHERE {
  # Heather Roy's profession that is a military unit
  dbr:Heather_Roy dbo:profession ?heatherProfession .
  ?heatherProfession rdf:type dbo:MilitaryUnit .
  ?heatherProfession dbo:participatedIn ?heatherProfessionWar .

  # Awardee of Knight Grand Cross of the Order of the Bath and their war
  ?knightGrandCross dbo:title dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  ?knightGrandCross dbo:participatedIn ?knightGrandCrossWar .

  # Bob Heffron's birthplace country
  dbr:Bob_Heffron dbo:birthPlace ?bobBirthPlace .
  ?bobBirthPlace rdf:type dbo:Country .
  BIND(str(?bobBirthPlace) AS ?bobBirthCountry)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
16,46,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional (SAMPLE(?spouse) AS ?spouseName)
WHERE {
  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person;
          foaf:name ""Satomi Ishihara"" ;
          dbo:profession ?profession .
  
  # Find Ted McGinley's birth name
  ?ted a dbo:Person;
       foaf:name ""Ted McGinley"" ;
       foaf:mbox ?email ;
       dbo:birthday ?birthday .

  OPTIONAL { ?ted foaf:nick ?birthName . }
  
  # Find the spouse of the person with Ted McGinley's birth name
  ?person a dbo:Person;
          foaf:name ?birthName .
  
  ?person dbo:spouse ?spouse .
}
GROUP BY ?professional
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
959,50,test,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?managerName ?nativeCountry
WHERE {
  # Takashi Sekizuka and his team
  dbr:Takashi_Sekizuka dbo:teamMemberOf ?team .
  
  # Manager of the team
  ?team dbo:manager ?manager .
  ?manager rdfs:label ?managerName .

  # Leader of the 2010 Japanese House of Councillors election
  ?politician dbo:electionResult ?result .
  FILTER(?result = ""Leader"" && ?politician dbo:electionYear ""2010""^^xsd:gYear && ?politician dbo:electionType dbr:Japanese_House_of_Councillors_elections) .

  # Native country of the leader's residence
  ?politician dbo:nationality ?nativeCountry .
}
```",5,7,6,3,2,3,3,71,0,0,6,0,0.0,0
161,65,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?emilioMolaCommander ?francoMilitaryForce ?indalecioPrietoPredecessor
WHERE {
  # Emilio Mola's commander in a force related to an event
  ?event dbo:commander ?emilioMolaCommander .
  ?event dbo:relatedToEvent dbr:Emilio_Mola .

  # Francisco Franco's military force involved in societal events and conflicts
  ?francoMilitaryForce dbo:involvedIn ?societalEvent .
  ?francoMilitaryForce dbo:involvedIn ?militaryConflict .
  ?societalEvent a dbo:SocietalEvent .
  ?militaryConflict a dbo:MilitaryConflict .

  # Predecessor of Indalecio Prieto
  ?indalecioPrietoPredecessor dbo:predecessor dbr:Indalecio_Prieto .
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
492,69,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/author> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Frédéric-Georges Herr's involvement in a military conflict
  dbr:Frédéric_Georges_Herr dbo:militaryConflict ?conflict .
  
  # The commander of the military conflict
  ?conflict dbo:commander ?commander .

  # Author of French Algeria and their death location
  ?author dbo:title ""French Algeria""@en ;
          dbo:deathPlace ?deathLocation .

  # Khemis Miliana District as a capital settlement
  dbr:Khemis_Miliana_District dbo:capitalOf ?country .
  
  # Ensure both Herr and the author are deceased at the same location
  dbr:Frédéric_Georges_Herr dbo:deathPlace ?deathLocation ;
                            dbp:deceasedAt ?location .

  FILTER (?deathLocation = ?location)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
54,57,test,"Give me the child of Thinkhaya of Pagan and parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfThinkhaya ?parentOfChildOfThadoMinsaw ?predecessorOfficeHolderRoyalty
WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhaya dbo:spouse ?spouse .
  ?spouse dbo:child ?childOfThinkhaya .

  # Thado Minsaw of Prome (parent of his own child)
  dbr:Thado_Minsaw_of_Prome dbo:child ?thadoChild .
  BIND(dbr:Thado_Minsaw_of_Prome AS ?parentOfChildOfThadoMinsaw)

  # Thihapate of Mohnyin's child and predecessor
  dbr:Thihapate_of_Mohnyin dbo:child ?thihapateChild .
  ?predecessorOfficeHolderRoyalty dbo:successor ?thihapateChild .
  
  FILTER (?predecessorOfficeHolderRoyalty a dbo:Monarch) # Assuming royalty is represented by Monarch
  FILTER EXISTS { ?predecessorOfficeHolderRoyalty dbo:officeHolder ?office } # Assuming office holder has an office property

  # Ensure the predecessor is also an office holder and royalty
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
767,67,test,"Give me the entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInBW ?alterEgo ?almaMater
WHERE {
  # Entity in Baden-Württemberg
  ?entityInBW a dbo:Place ;
              dbo:country dbr:Germany ;
              dbo:stateOrProvince dbr:Baden-Württemberg .

  OPTIONAL {
    # Alter ego of Matthew Burland (fictional character)
    ?alterEgo dbo:creator dbr:Matthew_Burland .
    FILTER EXISTS { ?alterEgo a dbo:FictionalCharacter }
  }

  OPTIONAL {
    # Alma mater of George Kilbon Nash's administration
    ?admin dbr:George_Kilbon_Nash ;
           dbo:almaMater ?almaMater .
  }

  # Linking the entity in Baden-Württemberg with alter ego and alma mater
  ?entityInBW dbo:relatedTo ?alterEgo .
  ?entityInBW dbo:relatedTo ?almaMater .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
492,55,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at the capital, that is a settlement, of Algeria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Frédéric-Georges Herr's involvement in a military conflict
  ?conflict dbo:participant dbr:Frédéric-Georges_Herr .
  
  # Commander of the military conflict
  ?conflict dbo:commander ?commander .

  # Joseph C. Satterthwaite's work location (US Assistant Secretary of State for African Affairs)
  dbr:Joseph_C._Satterthwaite dbo:officeLocation ?workLocation .

  # Decedent at the work location
  ?decedent dbp:deathPlace ?workLocation .
  
  # Capital of Algeria
  dbr:Algiers a dbo:Settlement ;
             dbo:capitalOf dbr:Algeria .

  # Decedent at the capital of Algeria
  ?commander dbp:deathPlace dbr:Algiers .

}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
360,24,test,"Give me the reference to the author of Blinded by the Light and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorReference ?nativeSettlement
WHERE {
  # Find the author of ""Blinded by the Light""
  dbr:Blinded_by_the_Light_(film) dbo:writer ?author .
  
  # Get the reference for the author
  ?author rdfs:label ?authorLabel .
  FILTER (lang(?authorLabel) = 'en')
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?authorLabel), "" "", ""_""))) AS ?authorReference)
  
  # Find Winnie Madikizela-Mandela's native place
  dbr:Winnie_Madikizela-Mandela dbo:nativePlace ?nativePlace .
  
  # Ensure the native place is a settlement
  ?nativePlace rdf:type dbo:Settlement .
  
  # Get the label for the native place
  ?nativePlace rdfs:label ?nativeSettlement .
  FILTER (lang(?nativeSettlement) = 'en')
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
959,39,test,"Give me the native of Japan and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/manager> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName WHERE {
  ?person dbo:nationality dbr:Japan .
  ?person dbo:occupation dbr:Sports_manager .
  ?team dbo:season dbr:1998_Kashima_Antlers_season .
  ?team dbo:manager ?person .
  BIND (STR(?person) AS ?managerName)
}
```

This query does the following:
- Selects individuals (`?person`) who are natives of Japan and have an occupation as a sports manager.
- Identifies teams that had a season in 1998, specifically the Kashima Antlers.
- Links these managers to the team during that specific season.",4,5,5,3,2,3,3,71,0,0,6,0,0.0,0
339,19,test,Give me the child of the child of Christian IX of Denmark and father of the child of the parent of Princess Olga of Greece and Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father
WHERE {
    # Step 1: Christian IX's grandchild
    ?grandchild dbo:parent dbr:Christian_IX_of_Denmark .
    ?child dbo:parent ?grandchild .

    # Step 2: Princess Olga's parent and that parent's child
    ?olgaParent dbo:parent dbr:Princess_Olga_of_Greece_and_Denmark .
    ?olgaChild dbo:parent ?olgaParent .

    # Find the father of Christian IX's grandchild who is also a child from Princess Olga's lineage
    ?father dbo:spouse ?mother .
    ?grandchild dbo:parent ?father .
    FILTER (?grandchild = ?olgaChild)
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
55,25,test,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony and band of Newsted and band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Step 1: Band members of San Francisco Symphony
  ?symphonyMember dbo:memberOf dbr:San_Francisco_Symphony .
  
  # Step 2: Check if they are part of a band that is also a group
  ?symphonyMember dbo:memberOf ?band ;
                ?band dbo:type dbr:Band ;
                      dbo:type dbr:MusicalGroup .

  # Step 3: Bands associated with Newsted
  ?newstedBand dbo:member dbr:Metallica ; # Assuming Metallica as a known band of Newsted
               dbo:member ?commonMember .
  
  FILTER (?symphonyMember = ?commonMember)

  # Step 4: Producer of ""Used to Love Her"" who is also a band
  ?producerBand dbo:produced dbr:Used_to_Love_Her ;
                dbo:type dbr:Band .

  # Step 5: Band members of this producer-band
  ?producerBandMember dbo:memberOf ?producerBand .
  
  FILTER (?commonMember = ?producerBandMember)
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
547,58,test,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorRestingPlace ?jamesBurtonRestingPlace ?awardeeRestingPlace WHERE {
  # Resting place of the actor of ""Enemy at the Door""
  ?film dbo:title ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?actorDeathPlace . }
  
  # Resting place of James Burton (Egyptologist)
  ?jamesBurton a dbo:Egyptologist ;
               foaf:name ""James Burton"" .
  OPTIONAL { ?jamesBurton dbo:deathPlace ?jamesBurtonRestingPlace . }

  # Resting place of the awardee of the award of Gerald Graham
  ?award dbo:awardedBy dbr:Gerald_Graham ;
         dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:deathPlace ?awardeeRestingPlace . }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,59,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceSaito ?deathPlaceFatherMatsudaira
WHERE {
  # Saitō Hajime's birth place
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlaceSaito .

  # Matsudaira Tadamasa's father (office holder and politician)
  dbr:Matsudaira_Tadamasa dbo:father ?fatherMatsudaira .
  
  # Father of Matsudaira Tadamasa is an office holder
  ?fatherMatsudaira a dbo:OfficeHolder .

  # Father of Matsudaira Tadamasa is a politician
  ?fatherMatsudaira a dbo:Politician .

  # Death place of the father of Matsudaira Tadamasa
  ?fatherMatsudaira dbo:deathPlace ?deathPlaceFatherMatsudaira .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
528,48,test,"Give me the force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?war
WHERE {
  # Find Narciso Campero Leyes and his military force or rank
  ?person a dbo:Person ;
          foaf:name ""Narciso Campero Leyes"" ;
          dbo:militaryRank ?force .

  # Ensure the person is associated with Chile in some capacity (e.g., nationality)
  ?person dbo:nationality dbr:Chile .

  # Find wars as societal events involving military forces in Chile
  ?war a dbo:SocietalEvent ;
       dbo:place dbr:Chile ;
       dbo:involvesMilitaryForce ?militaryForce .
  
  # Link the military force to the person's rank or role
  OPTIONAL { ?force dbp:relatedTo ?militaryForce }
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
488,51,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace (GROUP_CONCAT(?administration; separator="", "") AS ?administrations)
WHERE {
  # Yūki Hideyasu's father
  dbr:Yūki_Hideyasu dbo:father ?yukiFather .
  ?yukiFather a dbo:Politician ;
              dbo:deathPlace ?deathPlace .

  # Tokugawa Masako's spouse (royalty)
  dbr:Tokugawa_Masako dbo:spouse ?tokugawaSpouse .
  ?tokugawaSpouse a dbo:Royalty ;
                  dbo:father ?tokugawaFather .

  # Administration of the father of Tokugawa Masako's spouse
  ?tokugawaFather dbo:administrativeRegion ?administration .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,57,test,"Give me the reference to Partito Popolare Italiano and party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyProdi ?partyFather ?partyPartitoPopolareItaliano
WHERE {
  # Political party of Partito Popolare Italiano
  dbr:Partito_Popolare_Italiano dbo:politicalParty ?partyPartitoPopolareItaliano .

  # Romano Prodi's political affiliation
  dbr:Romano_Prodi dbo:politicalAffiliation ?partyProdi .
  
  # Find an alumnus of MIT and their father
  ?alumnus dbp:almaMater dbr:Massachusetts_Institute_of_Technology ;
           dbo:father ?father .

  # Political affiliation of the father
  ?father dbo:politicalAffiliation ?partyFather .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
498,8,test,"Give me the band of the member, that is an artist, of Mortician (band) and band of Malevolent Creation.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfMember
WHERE {
  # Find a member of Mortician who is also an artist
  ?member dbo:memberOf dbr:Mortician .
  ?member dbo:occupation dbr:Artist .

  # Find the band associated with this member
  ?member dbo:memberOf ?bandOfMember .

  # Ensure the same member is part of Malevolent Creation
  ?member dbo:memberOf dbr:Malevolent_Creation .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
485,23,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?region ?birthPlace
WHERE {
  # Find the country in the region of ""Western European Time""
  ?timeZone a dbo:TimeZone ;
            rdfs:label ""Western European Time""@en .
  
  ?country dbo:timeZone ?timeZone ;
           a dbo:Country .

  OPTIONAL { 
    ?region dbo:country ?country .
    BIND(?region AS ?region)
  }

  # Find the birthplace of Joseph Whitaker
  dbr:Joseph_Whitaker (dbo:nationality|dbo:birthPlace) ?birthPlace .
  
  FILTER (isLiteral(?birthPlace))
}
```",4,6,5,2,2,2,3,28,0,0,357,0,0.0,0
547,30,test,Give me the resting place of James Burton (Egyptologist) and resting place of Simon Cadell and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?restingPlace WHERE {
  # James Burton (Egyptologist)
  { 
    ?person rdfs:label ""James Burton (Egyptologist)""@en .
    ?person dbo:finalRestingPlace ?restingPlace .
  }
  
  UNION
  
  # Simon Cadell
  { 
    ?person rdfs:label ""Simon Cadell""@en .
    ?person dbo:finalRestingPlace ?restingPlace .
  }
  
  UNION
  
  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?person dbp:knightGrandCrossOfTheOrderOfStMichaelAndStGeorge ""true""^^xsd:boolean .
    ?person dbo:finalRestingPlace ?restingPlace .
  }
}
ORDER BY ?person",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,40,test,Give me the person decedent at the work of the author of French Algeria and person decedent at Algiers and commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedent
WHERE {
  # Find the author of ""French Algeria""
  ?author dbo:work dbr:French_Algeria .
  
  # Find person decedent at Algiers
  ?algiersPerson dbo:deathPlace dbr:Algiers ;
                 a dbo:Person .

  # Find commander in Franco-Hova Wars
  ?commander dbo:role dbr:Franco_Hova_Wars ;
             a dbo:Person .

  # Ensure the person is connected to all three roles/entities
  FILTER (?author = ?algiersPerson && ?algiersPerson = ?commander)
  
  # Bind the result to ?personDecedent
  BIND(?algiersPerson AS ?personDecedent)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
54,66,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor
WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin ;
         a dbo:OfficeHolder, dbo:Royalty .

  # Parent of this child (Thihapate himself)
  ?thihapateChildParent dbo:child ?child .
  
  # Narapati I of Ava's child
  ?narapatiChild dbo:parent dbr:Narapati_I_of_Ava ;
                 a dbo:Person .

  # Soe Min Wimala Dewi's father
  ?soeminFather dbo:child dbr:Soe_Min_Wimala_Dewi ;
                a dbo:Person .
  
  # Find the predecessor of Thihapate's child
  ?predecessor dbo:succeededBy ?thihapateChildParent .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
92,50,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorArtist ?furneyBand
WHERE {
  # Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?movie dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?movie dbo:starring ?actor .

  # Get the associated musical artist for this actor
  OPTIONAL { 
    ?actor dbo:musicalArtist ?actorArtist .
  }

  # Find Joseph Michael Furney and his band
  dbr:Joseph_Michael_Furney dbo:birthName ""Joseph Michael Furney""@en ;
                            dbo:band ?furneyBand .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
54,27,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?predecessor
WHERE {
  ?thihapate dbo:birthName ""Thihapate of Mohnyin"" .
  
  ?child dbo:parent ?thihapate ;
         rdf:type dbo:RoyalPerson, dbo:OfficeHolder .

  ?office dbo:holder ?child .
  ?predecessor dbo:successor ?child .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
314,25,test,Give me the awardee of the award of Sergei Makovetsky and commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/restingPlace> ?v3 . ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Sergei Makovetsky's awards
  ?award dbo:recipient dbr:Sergei_Makovetsky .
  
  # The awardee of the same award
  ?award dbo:recipient ?person .

  # Person was a commander in the Spanish Civil War
  ?person dbo:occupation dbr:Commander_in_the_Spanish_Civil_War .

  # Person deceased at the headquarters of House of Sombrerete
  ?deathEvent dbo:place dbr:House_of_Sombrerete ;
              dbo:agent ?person .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
767,60,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement ?alterEgo
WHERE {
    # Step 1: Identify Dustin Lynch and his administration
    dbr:Dustin_Lynch dbo:album dbr:Where_It's_At .
    
    # Find the administration entity related to Dustin Lynch
    ?administration dbo:administrator dbr:Dustin_Lynch .

    # Step 2: Within this administration, find a settlement
    ?settlement a dbo:Settlement ;
                dbo:partOf ?administration .

    # Step 3: Identify Matthew Burland's fictional character alter ego
    dbr:Matthew_Burland dbo:fictionalCharacterAlterEgo ?alterEgo .
}
```",6,8,7,3,2,3,3,71,0,0,8,0,0.0,0
547,59,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of the show with Emily Richard.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandchildRestingPlace ?actorRestingPlace WHERE {
  # Part 1: Resting place of the child of the child of William Haliburton
  dbr:William_Haliburton dbo:child ?child .
  ?child dbo:child ?grandchild .
  OPTIONAL { ?grandchild dbo:deathPlace ?grandchildDeathPlace . }
  BIND(IF(BOUND(?grandchildDeathPlace), STR(?grandchildDeathPlace), ""Unknown"") AS ?grandchildRestingPlace)

  # Part 2: Resting place of the actor from a show with Emily Richard
  {
    SELECT DISTINCT ?actor WHERE {
      ?show dbo:starring dbr:Emily_Richard .
      ?show dbo:starring ?actor .
    }
    OPTIONAL { ?actor dbo:deathPlace ?actorDeathPlace . }
    BIND(IF(BOUND(?actorDeathPlace), STR(?actorDeathPlace), ""Unknown"") AS ?actorRestingPlace)
  }
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
251,27,test,"Give me the death place of the author of The Twelve Abbots of Challant and administration of the ruling party, that is a political party and an organisation, in Sicily and location of Battle of Marengo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlace ?partyAdminLocation ?battleLocation
WHERE {
  # Find the author of ""The Twelve Abbots of Challant""
  ?author dbo:title ""The Twelve Abbots of Challant""@en .
  
  # Get the death place of the author
  ?author dbo:deathPlace ?deathPlace .

  # Find the ruling party in Sicily
  ?party a dbo:PoliticalParty ;
         dbp:country dbr:Sicily ;
         dbp:administrationLocation ?partyAdminLocation .

  # Find the location of the Battle of Marengo
  ?battle a dbo:MilitaryConflict ;
          dbp:name ""Battle of Marengo""@en ;
          dbp:location ?battleLocation .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
747,20,test,Give me the person born on 1985-04-29 and band of the writer of Apollo (Hardwell song).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band
WHERE {
  ?person a dbo:Person ;
          dbo:birthDate ""1985-04-29""^^xsd:date .

  ?song dbo:title ""Apollo (Hardwell song)""@en ;
        dbo:lyricsBy ?writer .

  ?writer dbo:band ?band .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
712,17,test,Give me the capital of South Russia (1919–1920) and resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital ?restingPlace
WHERE {
  # Capital of South Russia (1919–1920)
  dbr:Kharkiv dbo:capitalOf dbr:Ukrainian_People's_Republic .
  
  # Awardee of the show of Soviet Union and their resting place
  OPTIONAL {
    ?person dbo:awardeeOf dbr:Soviet_Union_TV_Show .
    ?person dbo:deathPlace ?restingPlace .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
16,56,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as Ted Martin McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus ?birthName ?spouse
WHERE {
  ?alumnus dbo:almaMater dbr:Ohio_State_University .
  ?alumnus foaf:name ?birthName .
  
  ?marriage dbo:person1 ?alumnus ;
            dbo:person2 ?spouse .
  
  ?spouse foaf:name ""Ted Martin McGinley""@en .
  ?spouse dbo:occupation dbr/Actress .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
959,54,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater
WHERE {
  # Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?almaMater .
  
  # Alma mater is a Japanese organization, university, and educational institution
  ?almaMater rdf:type dbo:Organisation ;
             rdf:type dbo:University ;
             rdf:type dbo:EducationalInstitution ;
             dbp:nativeLanguage dbr:Japanese .

  # Leader of the 2010 Japanese House of Councillors election
  ?politician dbo:electedAsMemberOf ?election .
  ?election dbo:date ""2010-07-11""^^xsd:date ;
            dbo:member ?politician .
  
  # Politician's residence is a country
  ?politician dbp:residence ?country .
  ?country rdf:type dbo:Country .

  # Manager of the 2013 Júbilo Iwata season
  ?manager dbo:managedTeam dbr:Júbilo_Iwata ;
           dbo:managementPeriod ?period .
  ?period dbo:startYear ""2013""^^xsd:gYear ;
          dbo:endYear ""2014""^^xsd:gYear .

  # Connect the politician and manager
  ?politician dbp:name ?managerName .
  ?manager foaf:name ?managerName .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
801,47,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/producer> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?work a dbo:Songs ;
        a dbo:MusicalWork ;
        dbo:musicArtist ?artist .
  
  ?artist a dbo:MusicalArtist ;
          dbo:genre dbr:Rap_music ;
          foaf:name ?name .

  OPTIONAL { ?artist foaf:alias ?alterEgo . }
  
  FILTER (?alterEgo = ""The Shadow"" || ?name = ""The Shadow"")
  
  ?work dbo:producer ?producer .
}
```",5,9,6,3,2,3,3,71,0,0,473,0,0.0,0
488,70,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of the commander in Boshin War and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?birthPlace ?deathPlace
WHERE {
  # Tokugawa Masako and her father
  ?masako a dbo:Person ;
          foaf:name ""Tokugawa Masako""@en .
  ?father dbo:child ?masako ;
          dbo:spouse ?mother .

  # Spouse of Tokugawa Masako's father (must be royalty)
  ?mother a dbo:RoyalFamilyMember .

  # Administration of the spouse
  OPTIONAL { ?mother dbo:positionHeld ?administration . }

  # Commander in Boshin War and his birthplace
  ?commander a dbo:MilitaryPerson ;
             dbo:birthPlace ?birthPlace .
  FILTER EXISTS {
    ?boshinWar dbo:commander ?commander .
    ?boshinWar dbo:name ""Boshin War""@en .
  }

  # Matsudaira Tadamasa and his father
  ?tadamasa a dbo:Person ;
            foaf:name ""Matsudaira Tadamasa""@en .
  ?fatherTadamasa dbo:child ?tadamasa ;
                  dbo:spouse ?motherTadamasa .

  # Father of Matsudaira Tadamasa is an office holder
  ?fatherTadamasa a dbo:OfficeHolder .

  # Grandfather (father's father) must be a politician
  ?grandfatherTadamasa dbo:child ?fatherTadamasa ;
                       a dbo:Politician .

  # Death place of the grandfather
  OPTIONAL { ?grandfatherTadamasa dbo:deathPlace ?deathPlace . }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
285,16,test,Give me the parent of the child of Tina Onassis Niarchos and spouse of the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent
WHERE {
  # Find Tina Onassis Niarchos
  ?tina a dbo:Person ;
        foaf:name ""Tina Onassis Niarchos""@en .

  # Identify her child
  ?child dbo:childOf ?tina .

  # Assume the child is a professional, find their spouse
  ?spouse dbo:spouse ?child .

  # Find the parent of this spouse
  ?parent dbo:childOf ?spouse .
}
```

This query assumes:
- Tina Onassis Niarchos has a `foaf:name` property.
- The child relationship is represented by `dbo:childOf`.
- Spousal relationships are captured using `dbo:spouse`.",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
659,70,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck's military force
  ?schimmelpenninck dbo:militaryConflict ?event1 .
  ?event1 a dbo:MilitaryConflict ;
          dbo:societyEvent true ;
          dbo:event true .

  # Arthur Wellesley, 1st Duke of Wellington's military conflict
  ?wellington dbo:militaryConflict ?event2 .
  ?event2 a dbo:MilitaryConflict ;
          dbo:event true .

  # Polish Horse as a military unit and organization
  dbr:Polish_Horse a dbo:MilitaryUnit, dbo:Organisation .

  # Linking the events through common context or participation
  ?militaryForce dbo:militaryConflict ?event1 .
  ?militaryForce dbo:militaryConflict ?event2 .
}
```",8,15,9,3,3,3,3,71,0,0,15,0,0.0,0
328,59,test,Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander
WHERE {
  ?person dbo:commandedForceIn dbr:Budapest .
  ?award dbo:name ""Commander in the Volcano and Ryukyu Islands campaign"" ;
         dbo:awardee ?person .
  BIND(?person AS ?commander)
}
```",6,6,7,3,2,3,3,71,0,0,15,0,0.0,0
54,64,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya's child and their child (grandchild of Thinkhaya)
  ?thinkhayaChild dbo:parent dbr:Thinkhaya_of_Pagan .
  ?thinkhayaGrandchild dbo:parent ?thinkhayaChild .

  # Thihapate's child
  ?thihapateChild dbo:parent dbr:Thihapate_of_Mohnyin .

  # Predecessor of Thihapate's child
  ?predecessor dbo:successor ?thihapateChild .

  # The person we are looking for is the predecessor and also a grandchild of Thinkhaya
  ?person rdf:type dbo:Monarch .
  ?person dbo:officeHolder true .
  ?person dbo:parent ?thinkhayaGrandchild .
  ?person = ?predecessor .

  # Parent of Thado Minsaw of Prome
  ?thadoMinsawParent dbo:parent dbr:Thado_Minsaw_of_Prome .
  ?person = ?thadoMinsawParent .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
232,61,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/residence> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeOfResidence
WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:France ;
          dbo:officeHolder true .
  
  ?person dbo:profession dbr:Actor ;
          dbo:film dbr:Film ; # Placeholder for specific film
          dbo:militaryConflict dbr:Military_Conflict . # Placeholder for specific conflict

  ?residence dbo:native dbr:Person ; # The person in question
             a dbo:Settlement ;
             dbp:country dbr:United_Kingdom .

  ?person dbo:residence ?residence .
  
  ?residence dbo:native ?nativeOfResidence .
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
184,45,test,Give me the parent of Géza von Habsburg and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfGéza ?grandparentOfMargaret ?childOfJosephAugust
WHERE {
  # Parent of Géza von Habsburg
  OPTIONAL {
    dbr:Géza_von_Habsburg dbo:parent ?parentOfGéza .
  }

  # Grandparent of Archduchess Margaret of Austria (born 1925)
  OPTIONAL {
    dbr:Archduchess_Margaret_of_Austria_(b._1925) dbo:parent ?parentOfMargaret .
    ?parentOfMargaret dbo:parent ?grandparentOfMargaret .
  }

  # Child of Archduke Joseph August of Austria
  OPTIONAL {
    dbr:Archduke_Joseph_August_of_Austria dbo:child ?childOfJosephAugust .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
747,58,test,Give me the person born on 1985-04-29 and band of the writer of Apollo (Hardwell song) and band of the person born as the persona of Shèna.,"SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?personBorn1985 ?bandOfApolloWriter ?bandOfShena
WHERE {
  # Step 1: Person born on 1985-04-29
  ?personBorn1985 dbo:birthday ""1985-04-29""^^xsd:date .
  
  # Step 2: Band of the writer of Apollo by Hardwell
  dbr:Apollo_(song) dbo:lyricist ?apolloWriter .
  ?apolloWriter dbo:band ?bandOfApolloWriter .

  # Step 3: Band associated with Shèna
  dbr:Shèna dbo:associatedBand ?bandOfShena .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,60,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?administration
WHERE {
  # Saitō Hajime and his birthplace
  dbr:Saitō_Hajime a dbo:MilitaryPerson ;
                   dbo:birthPlace ?birthPlace .

  # War in which Saitō Hajime was a commander
  ?war a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent ;
       dbo:commander ?saitoHajime .
  
  # Tokugawa Masako and her spouse
  dbr:Tokugawa_Masako dbo:spouse ?spouse .

  # Spouse's father who is royalty
  ?spouse dbo:father ?royalFather ;
          a dbo:Person .
  ?royalFather a dbo:Royalty .

  # Administration of the royal father
  ?royalFather dbo:administers ?administration .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
54,24,test,Give me the parent of the child of Narapati I of Ava and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Find the child of Narapati I of Ava
  ?child dbo:spouse|dbo:childOf dbr:Narapati_I_of_Ava .
  
  # Find the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?predecessor dbo:successor dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .

  # Match these two entities
  FILTER (?child = ?predecessor)

  # Find the parent of this entity
  ?parent dbo:spouse|dbo:childOf ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
328,56,test,"Give me the commander in Eastern Front (World War II) and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Commander in Eastern Front (World War II)
  ?commander dbo:rank ?rank .
  ?rank rdfs:label ""Eastern Front""@en .

  # Awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape
  ?commander dbo:awardReceived dbr:Award_of_Bruce_Fraser_1st_Baron_Fraser_of_North_Cape .

  # Leader of an office that is a government agency
  ?office dbo:type dbr:Government_agency .
  ?commander dbo:headOf ?office .

  # Leader of Gustav Jonson, who is an office holder and politician
  ?gustavJonson dbo:occupation dbr:Politician ;
                dbo:officeHolder ?office .
  ?commander dbo:leaderOf ?gustavJonson .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
534,17,test,"Give me the birth place of Garret FitzGerald and headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/owner> ?v3 . ?v3 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?ownerHeadquarters
WHERE {
  # Garret FitzGerald's birthplace
  dbr:Garrett_FitzGerald dbo:birthPlace ?birthPlace .

  # Venue of the 2012 Pro12 Grand Final
  dbr:2012_Pro12_Grand_Final dbp:venue ?venue .
  
  # Ensure the venue is an architectural structure
  ?venue a dbo:ArchitecturalStructure .

  # Owner of the venue
  ?venue dbo:owner ?owner .

  # Headquarters of the owner
  ?owner dbo:headquarters ?ownerHeadquarters .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
659,65,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event a dbo:MilitaryConflict ;
         dbo:commander ?commander .

  ?unit rdfs:label 'Polish Horse'@en .
  ?unit dbo:memberOfMilitaryUnit ?commander .

  ?wellesley dbr:Arthur_Wellesley,_1st_Duke_of_Wellington ;
             dbo:commander ?event .

  ?schimmelpenninck dbr:Rutger_Jan_Schimmelpenninck ;
                    dbo:commander ?event .
}
```",7,14,8,3,3,3,3,71,0,0,15,0,0.0,0
994,59,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist
WHERE {
  # Fredrik Thordendal's band
  dbr:Fredrik_Thordendal dbo:memberOf ?band1 .
  
  # A member of this band who is also in another band/group/organisation
  ?member dbo:memberOf ?band1 ;
          dbo:memberOf ?band2 .
  
  # Associated musical artist of the member's band
  ?band2 dbo:musicalArtist ?artist1 .

  # Watchtower reference to find another musical artist
  dbr:Watchtower dbo:musicalArtist ?watchtowerArtist .
  
  # Associated musical artist of the watchtower artist
  ?watchtowerArtist dbo:musicalArtist ?finalArtist .
}
```",6,10,7,3,2,3,3,71,0,0,5,0,0.0,0
712,20,test,"Give me the resting place of the awardee of the show of Soviet Union and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?restingPlace WHERE {
  # Identify the awardee of a Soviet Union award
  ?award dbo:country dbr:Soviet_Union .
  ?award dbo:recipient ?awardee .

  # Find the military force related to Vyoshenskaya Uprising
  ?militaryForce dbp:relatedEvent dbr:Vyoshenskaya_Uprising .
  
  # Determine the capital of the country associated with this military force
  ?country dbo:militaryBranch ?militaryForce ;
           dbo:capitalCity ?capital .

  # Find the resting place of the awardee
  ?awardee dbp:placeOfBurial ?restingPlace .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
435,28,test,"Give me the work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v5 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work ?timeZoneRegion
WHERE {
  # Works by J.R.R. Tolkien
  dbr:J._R._R._Tolkien dbo:author ?work .

  # Time zone region for Bombali Shebora Chiefdom in Sierra Leone
  OPTIONAL {
    dbr:Bombali_Shebora_Cheifdom dbo:timeZoneRegion ?timeZoneRegion .
  }
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
534,18,test,"Give me the birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex and headquarter of the owner of RDS Arena.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v3 <http://dbpedia.org/ontology/headquarter> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  # Step 1: Find a politician native to Essex
  ?essexPolitician dbo:nationality dbr:Essex ;
                  a dbo:Politician .

  # Step 2: Determine the owner of RDS Arena and their headquarters
  dbr:RDS_Arena dbo:owner ?arenaOwner .
  ?arenaOwner dbp:headquarters ?headquarters .

  # Step 3: Find the child of this politician who is also a politician and an office holder
  ?essexPolitician dbo:child ?child ;
                  dbo:spouse|dbo:partner ?arenaOwner .
  ?child a dbo:Politician ;
         dbo:officeHolder true ;
         dbp:birthPlace ?birthPlace .

}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
339,18,test,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?fatherOfElenaChild ?grandchildOfPredecessor
WHERE {
  # Find the child of Grand Duchess Elena Vladimirovna of Russia
  ?elenaChild dbo:parent dbr:Grand_Duchess_Elena_Vladimirovna_of_Russia .
  
  # Find the father of this child
  ?fatherOfElenaChild dbo:child ?elenaChild .

  # Find Frederick VIII of Denmark's predecessor
  ?frederickVIII dbr:Frederick_8,_King_of_Denmark ;
                 dbo:predecessor ?predecessor .

  # Find the child of this predecessor
  ?predecessorChild dbo:child ?predecessor .
  
  # Find the child of that child
  ?grandchildOfPredecessor dbo:child ?predecessorChild .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
666,20,test,"Give me the figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England and player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/property/nickname> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname
WHERE {
  ?manager foaf:name ""Leonid Slutsky""@en .
  ?manager dbo:position dbr:Soccer_manager .

  ?team dbo:manager ?manager ;
        a dbo:SoccerClub, dbo:SportsTeam ;
        dbo:country dbr:England ;
        rdfs:label ?nickname .

  OPTIONAL { ?team dbo:season ?season . }
}
```",6,12,7,3,2,3,2,20,0,0,2,0,0.0,0
16,67,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional (SAMPLE(?profession) AS ?profession)
WHERE {
  # Find the actor of ""Unnatural"" TV series
  ?actor dbo:starringIn dbr:Unnatural_(TV_series);
         a dbo:Actor;
         foaf:name ?name.

  # Check if this person is also in another profession
  OPTIONAL { ?actor dbo:profession ?profession. }

  # Find the spouse of Ted McGinley
  ?spouse dbo:spouse dbr:Ted_McGinley.
  
  # Ensure the professional matches the actor and spouse
  FILTER (?actor = ?spouse)

  # Find an alumnus of Ohio State University
  ?alumnus dbo:almaMater dbr:Ohio_State_University;
           foaf:name ?birthName.

  # Match birth name with the person found above
  OPTIONAL { ?actor foaf:birthdayName ?birthName. }

}
GROUP BY ?professional
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,52,test,"Give me the war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?crillonWar ?crillonFame ?gahnWar
WHERE {
  # Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:occupation dbr:Peninsular_War .
  
  OPTIONAL { 
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:famousFor ?crillonFame .
  }
  
  # Carl Pontus Gahn
  dbr:Carl_Pontus_Gahn dbo:birthName ""Carl Pontus Gahn""@en .
  
  OPTIONAL {
    ?gahnWar dbo:participant dbr:Carl_Pontus_Gahn .
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
328,60,test,"Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?leaderOfOffice WHERE {
  # Find the award related to the ""Volcano and Ryukyu Islands campaign""
  ?award dbo:relatedEvent dbr:Battle_of_the_Volcano_Islands ;
         dbo:recipient ?awardee .

  # Gustav Jonson is connected to this awardee
  ?gustav dbp:awarded ?award .
  ?gustav dbr:Gustav_Jonson .

  # Find the leader of a government agency who is also an office holder and politician
  ?leaderOfOffice dbo:officeHolder ?office ;
                  dbo:positionHeld ?governmentAgency ;
                  rdf:type dbo:Politician ;
                  dbp:holdsOffice ?office .
  
  # Connect Gustav Jonson to this leader
  ?gustav dbp:leader ?leaderOfOffice .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
391,60,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  ?person dbo:nativePlace dbr:Jackson,_Tennessee .
  ?person dbo:birthPlace ?native .
  
  ?film dbo:starring ?person ;
        a dbo:Film .

  OPTIONAL { 
    ?tvShow dbo:starring ?person ;
            a dbo:TelevisionSeries .
  }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
184,46,test,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of Archduke Joseph Karl of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # Find the child of Archduke Joseph Karl of Austria
  ?child1 dbo:child dbr:Archduke_Joseph_Karl_of_Austria .
  
  # Find the grandchild (child of the child)
  ?child2 dbo:child ?child1 .

  # Identify a landmark that is a settlement with elevation 96.0
  ?landmark a dbo:Settlement ;
            dbp:elevation ""96.0""^^xsd:float ;
            dbo:location ?place .

  # Find the native of this landmark
  ?native dbo:nativePlace ?landmark .

  # Get the parent of this native
  ?parent dbo:child ?native .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,53,test,Give me the spouse of the father of Merneptah and parent of Henuttawy (19th dynasty) and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouseOfFather
WHERE {
  ?merneptah dbo:father ?father .
  ?father dbo:spouse ?spouseOfFather .

  ?henuttawy dbo:parent ?spouseOfFather ;
             dbo:birthPlace ?place ;
             dbo:deathPlace ?place2 .

  ?amunHerKhepeshef dbo:spouse ?spouseAmun .
  ?child dbo:parent ?spouseAmun .
  ?parentChild dbo:child ?child .
  
  FILTER (?henuttawy = <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)>)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,46,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceOfFather ?birthPlaceOfCommander
WHERE {
  # Find Yūki Hideyasu and his father who was a politician
  ?yukiHideyasu dbo:father ?father .
  ?father rdf:type dbo:Politician .

  # Get the death place of this father
  OPTIONAL { ?father dbo:deathPlace ?deathPlaceOfFather . }

  # Find Saitō Hajime and his military conflict
  ?saitoHajime dbo:militaryConflict ?militaryConflict .
  ?militaryConflict rdf:type dbo:MilitaryConflict .

  # Get the commander of this military conflict
  OPTIONAL { ?militaryConflict dbo:commander ?commander . }

  # Get the birth place of this commander
  OPTIONAL { ?commander dbo:birthPlace ?birthPlaceOfCommander . }
  
  # Bind Yūki Hideyasu and Saitō Hajime to their respective resources
  VALUES (?yukiHideyasu ?saitoHajime) {
    (dbr:Yūki_Hideyasu dbr:Saitō_Hajime)
  }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
659,35,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  ?militaryForce dbo:type dbr:Military_conflict .
  ?militaryForce dbo:type dbr:Event .
  ?militaryForce dbo:type dbr:Societal_event .

  ?schimmelpenninck dbo:commanderOf ?militaryForce ;
                   rdfs:label ""Rutger Jan Schimmelpenninck""@en .

  ?welshCommander dbo:commanderOf ?militaryForce ;
                  rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
}
```",4,7,5,2,2,3,3,71,0,0,38,0,0.0,0
659,48,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?officeHolder ?event WHERE {
  VALUES (?schimmelpenninck) { dbr:Rutger_Jan_Schimmelpenninck }
  
  ?commander dbo:positionHeld ?officeHolder .
  ?officeHolder dbp:country dbr:Kingdom_of_Ireland .
  ?commander dbo:agent ?schimmelpenninck .

  OPTIONAL {
    ?event dbo:agent ?schimmelpenninck .
    ?event a dbo:MilitaryConflict ;
           dbo:socialEvent true .
  }
}
```",5,9,6,3,2,3,3,71,0,0,40,0,0.0,0
64,8,test,"Give me the alma mater of Jovan Hristić and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater ?countryInCET
WHERE {
  # Find Jovan Hristić's alma mater
  dbr:Jovan_Hristi? dbo:almaMater ?almaMater .

  # Find a country in the Central European Time region
  ?countryInCET dbo:timeZone dbr:Central_European_Time .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
232,41,test,"Give me the native of London and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nativeCity ?film ?militaryConflict WHERE {
  # Sean Pertwee's details
  dbr:Sean_Pertwee a dbo:Actor ;
                   foaf:nativePlace ?nativeCity .

  OPTIONAL { 
    ?work dbo:actor dbr:Sean_Pertwee .
    ?work rdf:type dbo:Film ; 
          rdfs:label ?film .
  }

  OPTIONAL {
    ?conflict dbo:participant dbr:Sean_Pertwee ;
              rdf:type dbo:MilitaryConflict ;
              rdfs:label ?militaryConflict .
  }
  
  # Relationship to John Devon Roland Pertwee
  dbr:John_Devon_Roland_Pertwee foaf:child dbr:Sean_Pertwee .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
92,62,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band of Joseph Michael and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v6 <http://dbpedia.org/property/birthName> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musicalArtist
WHERE {
  # Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?actor dbo:starringIn dbr:Return_to_Nuke_'Em_High_Volume_1 .
  
  # Ensure this person is also an artist
  ?actor a dbo:Artist .

  # Find the band associated with Joseph Michael
  ?band dbo:leadMember dbr:Joseph_Michael ;
        dbo:bandMember ?artist .

  # Identify reference related to ""Nevermore (2006)""
  ?reference dbo:title ""Nevermore (2006 film)""@en .
  
  # Ensure this artist is the same as the one in the previous step
  ?artist = ?actor .

  # Retrieve the musical artist associated with these conditions
  OPTIONAL { ?band dbo:associatedMusicalArtist ?musicalArtist }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
959,25,test,Give me the native of Japan and manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nationality ?teamName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Takashi Sekizuka""@en .
  
  # Find nationality
  OPTIONAL { 
    ?person dbo:nationality ?nationality .
    FILTER (CONTAINS(LCASE(STR(?nationality)), ""japan""))
  }
  
  # Find team managed by Takashi Sekizuka
  OPTIONAL {
    ?team a dbo:SportsTeam ;
          foaf:currentManager ?person .
    ?team foaf:name ?teamName .
  }
}
```",3,3,4,2,2,3,3,71,0,0,6,0,0.0,0
427,61,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?romanoParty ?fatherParty
WHERE {
  # Romano Prodi's birth name and party affiliation
  dbr:Romano_Prodi a dbo:Politician ;
                   foaf:name ?romanoBirthName ;
                   dbo:partyAffiliation ?romanoParty .

  # Find an alumnus of MIT
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
          dbo:father ?father .

  # Determine the father's party affiliation
  ?father a dbo:Person ;
          dbo:partyAffiliation ?fatherParty .
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
626,18,test,"Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?commanderInBattleOfParis
WHERE {
  # Find the award associated with Aleksey Petrovich Yermolov and its awardee
  ?award dbo:recipient dbr:Aleksey_Petrovich_Yermolov .
  ?award dbo:recipient ?awardee .

  # Find the commander in the Battle of Paris (1814)
  ?battle dbr:Battle_of_Paris_(1814) ;
         dbo:commander ?commanderInBattleOfParis .

  # Ensure the awardee and the commander are related to the same force
  OPTIONAL {
    ?awardee dbo:militaryConflict ?conflict .
    ?commanderInBattleOfParis dbo:militaryConflict ?conflict .
  }
}
```",5,6,6,3,2,3,2,20,0,0,23,0,0.0,0
959,48,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of Takashi Sekizuka.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater
WHERE {
  ?person dbo:birthYear ""1958""^^xsd:gYear .
  ?team dbo:manager ?person .
  ?team rdfs:label ""Takashi Sekizuka""@en .

  ?person dbo:almaMater ?almaMater .
  
  ?almaMater a dbo:University ;
             a dbo:EducationalOrganization ;
             a dbo:Organisation ;
             dbp:country dbr:Japan .
}
```",5,9,6,3,2,3,3,71,0,0,3,0,0.0,0
754,20,test,Give me the parent of the child of the reference to Ram Khamhaeng the Great and parent of the parent of the parent of Min Linka.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonParent
WHERE {
  # Ram Khamhaeng the Great's child and its parent
  ?ramChild dbo:childOf dbr:Ram_Khamhaeng_the_Great .
  ?parent1 dbo:parentOf ?ramChild .

  # Min Linka's great-grandparent and its parent
  ?minParent dbo:parentOf ?minGrandparent .
  ?minGrandparent dbo:parentOf ?minGreatGrandparent .
  ?commonParent dbo:parentOf ?minGreatGrandparent .

  # Ensure the same entity is found as a common parent
  FILTER (?parent1 = ?commonParent)
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
528,62,test,"Give me the force of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile and war of the commander in the work of --01-09.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?force ?war ?commander ?date
WHERE {
  # Narciso Campero's force
  OPTIONAL { 
    dbr:Narciso_Campero dbo:militaryForce ?force .
  }
  
  # Societal event (war) in Chile
  OPTIONAL {
    ?war a dbo:War ;
         dbo:location dbr:Chile .
  }

  # Commander related to an event on January 9th
  OPTIONAL {
    ?commander dbo:dateOfBirth ?date .
    FILTER(xsd:dateTime(?date) >= ""1900-01-09T00:00:00""^^xsd:dateTime &&
           xsd:dateTime(?date) <= ""1900-01-10T00:00:00""^^xsd:dateTime)
  }
  
  # Linking the commander to a war
  OPTIONAL {
    ?commander dbo:commanded ?war .
  }
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
767,70,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v7 <http://dbpedia.org/property/governor> ?v0 . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v4 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/state> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?settlement ?fictionalCharacter ?almaMater
WHERE {
  ?entity a dbo:Settlement .
  ?entity dbo:partOf ?administration .
  
  ?administration dbo:administrator dbr:Green .

  OPTIONAL { 
    ?fictionalCharacter dbo:alterEgo dbr:Matthew_Burland .
    ?fictionalCharacter dbo:almaMater ?almaMater .
    
    ?almaMater dbo:administrator dbr:George_Kilbon_Nash .
  }
  
  FILTER EXISTS {
    ?entity rdfs:label ?settlement .
  }

  FILTER EXISTS {
    ?fictionalCharacter rdfs:label ?alterEgoLabel .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
392,25,test,"Give me the province of Schio and region of the time zone, that is a sports event, of Aguilar de Segarra and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?provinceOfSchio ?regionOfTimeZone ?countryInCETRegion
WHERE {
  # Province of Schio
  dbr:Schio dbo:administrativeTerritory ?provinceOfSchio .

  # Sports event in Aguilar de Segarra and its time zone's region
  ?event dbp:location dbr:Aguilar_de_Segarra .
  ?event a dbo:SportEvent .
  ?event dbo:timeZone ?timeZone .
  ?timeZone dbo:region ?regionOfTimeZone .

  # Country in the Central European Time region
  ?cetRegion dbo:country ?countryInCETRegion .
  dbr:Central_European_Time dbo:region ?cetRegion .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
360,23,test,"Give me the reference to the author of Blinded by the Light and writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorOfSong ?writerOfAlbum
WHERE {
  # Find the author of ""Blinded by the Light""
  dbr:Blinded_by_the_Light (dbo:composer|dbo:lyricist) ?authorOfSong .
  
  # Find Dave Flett's album and its writer
  ?album dbo:artist dbr:Dave_Flett ;
         dbo:writer ?writerOfAlbum .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
547,45,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?restingPlace WHERE {
  # Gerald Graham's awardee (assuming we know who it is, e.g., a specific person)
  OPTIONAL {
    VALUES ?awardee { <http://dbpedia.org/resource/AwardedPerson> } # Replace with actual URI
    ?awardee dbo:finalRestingPlace ?restingPlace .
    BIND(?awardee AS ?person)
  }
  
  # James Burton (Egyptologist)
  OPTIONAL {
    dbp:eponym <http://dbpedia.org/resource/James_Burton_(Egyptologist)> ;
      dbo:finalRestingPlace ?restingPlace .
    BIND(<http://dbpedia.org/resource/James_Burton_(Egyptologist)> AS ?person)
  }
  
  # Simon Cadell
  OPTIONAL {
    dbp:eponym <http://dbpedia.org/resource/Simon_Cadell> ;
      dbo:finalRestingPlace ?restingPlace .
    BIND(<http://dbpedia.org/resource/Simon_Cadell> AS ?person)
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
391,51,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  # Find Michael Ballhaus' claim to fame (a work)
  dbr:Michael_Ballhaus dbo:claimToFame ?work .
  
  # Get actors of this work
  ?work dbo:starring ?actor .

  # Find a movie that is also a television show and involves a professional
  ?movie rdf:type dbo:Film ;
         dbo:genre/dbo:subClassOf* dbo:TelevisionShow ;
         dbo:starring ?professional .
  
  # Ensure the actor of the work is also an actor in this movie/TV show
  ?actor dbo:starring ?movie .
}
```",5,9,6,3,2,3,3,71,0,0,11,0,0.0,0
391,59,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Find Sherry Hormann's spouse
  ?spouse a dbo:Person ;
          dbo:spouse dbr:Sherry_Hormann .

  # Identify the claim to fame (a work) of the spouse
  ?work dbo:actor ?spouse .

  # Find an actor associated with that work
  ?actor dbo:actor ?work .

  # Find a figure known by the nickname ""Jackson"" from Tennessee
  ?figure dbo:nickName ""Jackson""@en ;
          dbo:birthPlace dbr:Tennessee .

  # Ensure the native of this figure is returned
  ?figure dbo:nativeLabel ?native .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,66,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley and person born as the birth name of the alumnus of Ohio State University.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional
WHERE {
  # Get Satomi Ishihara's profession
  dbr:Satomi_Ishihara dbo:profession ?satomiProfession .

  # Get Ted Martin McGinley's spouse
  dbr:Ted_McGinley dbo:spouse ?tedSpouse .

  # Get the birth name of an alumnus from Ohio State University
  {
    SELECT ?alumnusBirthName WHERE {
      ?alumnus dbo:almaMater dbr:Ohio_State_University .
      ?alumnus foaf:name ?birthName .
      BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(?birthName, "" "", ""_""))) AS ?alumnusResource)
    }
  } UNION {
    SELECT ?alumnusBirthName WHERE {
      ?alumnus dbo:almaMater dbr:Ohio_State_University .
      ?alumnus foaf:birthday ?birthday .
      ?alumnus foaf:name ?birthName .
      BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(?birthName, "" "", ""_""))) AS ?alumnusResource)
    }
  }

  # Find the professional who matches all criteria
  ?professional dbo:profession ?satomiProfession ;
                dbo:spouse dbr:Ted_McGinley ;
                foaf:name ?alumnusBirthName .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
421,22,test,Give me the native of the birthplace of Samir Bekrić and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native 
WHERE {
  # Find Samir Bekrić's birthplace
  dbr:Samir_Bekrić dbo:birthPlace ?birthPlace .

  # Get the native of that birthplace
  ?birthPlace dbo:native ?native .

  # Find awards related to bands
  ?band dbo:award ?award .
  
  # Ensure the band member is part of an awardee band
  ?member dbo:bandMember ?band .

  # Link Samir Bekrić as a band member
  ?member dbr:Samir_Bekrić .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
54,30,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  ?child a dbo:Monarch ;
         dbo:parent dbr:Thihapate_of_Mohnyin ;
         dbo:officeHolder true ;
         dbo:royalty true ;
         dbo:parentOf dbr:Thado_Minsaw_of_Prome ;
         dbo:childOf dbr:Thinkhaya_of_Pagan .

  ?predecessor dbo:successor ?child .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
378,53,test,Give me the war of Joaquín Blake and claim to fame of the commander in Great Siege of Gibraltar and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?joaquinBlakeWar ?commanderClaimToFame ?carlPontusGahnBirthName ?warOfCarlPontusGahn
WHERE {
  # Joaquín Blake's involvement in wars
  dbr:Joaqu%C3%ADn_Blake dbo:militaryConflict ?joaquinBlakeWar .

  # Commander of the Great Siege of Gibraltar and their claim to fame
  OPTIONAL {
    dbr:The_Great_Siege_of_Gibraltar dbo:commander ?commander .
    ?commander dbo:claimToFame ?commanderClaimToFame .
  }

  # Carl Pontus Gahn's birth name and associated war
  dbr:C._P._Gahn dbo:birthName ?carlPontusGahnBirthName .
  OPTIONAL {
    ?person dbo:birthName ?carlPontusGahnBirthName .
    ?person dbo:militaryConflict ?warOfCarlPontusGahn .
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
801,59,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v5 <http://dbpedia.org/property/writer> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?song a dbo:Song ;
        dbo:workType dbr:MusicalWork .
  
  ?producer dbo:profession dbr:MusicalArtist ;
            dbo:alterEgo dbr:The_Shadow .

  ?song dbo:producer ?producer .
}
```

This query assumes:
- `dbo:Song` and `dbr:MusicalWork` are the classes for songs and musical works.
- `dbo:workType` is used to specify that a song is of type ""musical work.""
- `dbo:profession` identifies the producer's profession as a musical artist.
- `dbo:alterEgo` links the professional to their alter ego, ""The Shadow.""",6,10,7,3,2,3,3,71,0,0,473,0,0.0,0
767,68,test,"Give me the reference to the alter ego of Black Hood and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . ?result <http://dbpedia.org/ontology/state> ?v4 . ?v7 <http://dbpedia.org/property/governor> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?settlement ?writer ?almaMater
WHERE {
  # Black Hood's alter ego
  ?blackHood dbo:alterEgo ?alterEgo .
  
  # Entity in administration that is a settlement
  ?adminEntity rdf:type dbo:Settlement ;
               dbo:member ?settlement .

  # Writer of ""Where It's At"" (Dustin Lynch album)
  dbr:Where_It%27s_At_(Dustin_Lynch_album) dbo:writer ?writer .
  
  # Alma mater of the administration related to George Kilbon Nash
  ?nash rdf:type dbo:Person ;
        foaf:name ""George Kilbon Nash"" .
  ?adminEntity dbo:almaMater ?almaMater .

  FILTER(?alterEgo = ?settlement && ?writer = ?almaMater)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
801,66,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerName
WHERE {
  # Identify the album ""What U See Is What U Get""
  dbr:What_U_See_Is_What_U_Get a dbo:MusicalWork ;
    dbo:artist ?writer .

  # The writer is both a musical artist and an artist
  ?writer a dbo:MusicalArtist, dbo:Artist .

  # Identify the producer with alter ego ""The Shadow""
  ?producer a dbo:Person ;
    rdfs:label ?producerName ;
    foaf:name ?producerName ;
    dbo:alterEgo dbr:The_Shadow .

  # The producer is associated with the writer
  ?writer dbo:associatedMusicalArtist ?producer .

  # Identify the song/work produced by this producer and linked to 50 Cent
  ?song a dbo:Songs, dbo:MusicalWork ;
    dbo:artist dbr:_50_Cent ;
    dbo:producer ?producer .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
378,32,test,Give me the war of the commander in Peninsular War and war of the person born as Carl Pontus Gahn.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?war 
WHERE {
  # Find commanders of the Peninsular War
  ?peninsularWar dbo:wikiPageID ""Peninsular_War"" ;
                dbo:commander ?commander .

  # Find wars involving Carl Pontus Gahn
  dbr:C._P._Gahn dbo:birthName ""Carl Pontus Gahn"" .
  ?war dbo:participant dbr:C._P._Gahn .

  # Link the commanders to the wars of Carl Pontus Gahn
  OPTIONAL { ?commander dbo:wikiPageID ?peninsularWarId }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
9,23,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater
WHERE {
  ?organization a dbo:Organization ;
                dbo:location dbr:Belfast .
  
  ?mayor dbo:positionHeld ?position ;
         dbo:almaMater ?almaMater ;
         rdf:type dbo:Politician .

  ?position dbo:officeHolder ?mayor ;
            dbo:relatesTo ?organization .
}
```",3,5,4,3,1,3,3,71,0,0,10,0,0.0,0
328,53,test,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Commander in Eastern Front (World War II)
  ?person dbo:commanderOf ?easternFront .
  
  # Leader of the office, that is a government agency, of Joseph Stalin
  ?office dbo:leader ?person ;
          dbo:head dbr:Joseph_Stalin .

  # Awardee of an award related to Volcano and Ryukyu Islands campaign
  ?person dbo:recipientOfAward ?award .
  ?award dbo:relatedToCampaign [
    dbo:location ?volcanoRyukyu ;
    dbo:name ?campaignName
  ] .
  
  FILTER regex(?campaignName, ""Volcano|Ryukyu"", ""i"")
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
492,70,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedent
WHERE {
  # Joseph C. Satterthwaite's role and related military conflict
  dbr:Joseph_C._Satterthwaite dbo:office dbr:Assistant_Secretary_of_State_for_African_Affairs .
  
  OPTIONAL {
    ?militaryConflict dbo:event dbr:Battle_of_Verdun .
    ?commander dbo:commanded ?militaryConflict .
    ?commander rdfs:label ?personLabel .
    FILTER(CONTAINS(LCASE(?personLabel), ""verdun""))
  }
  
  # Person decedent at the capital of Khemis Miliana District
  dbr:Khemis_Miliana_District dbo:capital ?capitalCity .
  ?decedent dbo:placeOfBirth ?capitalCity .
  ?decedent rdfs:label ?personDecedentLabel .
  
  # Linking the commander and decedent
  FILTER(?commander = ?decedent)
}
ORDER BY ?personDecedent",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
184,70,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?individual
WHERE {
  # Archduke Ladislaus Philipp of Austria
  ?ladislaus a dbo:Person ;
             dbo:childOf ?parentLadislaus .

  # Child of the child of the parent (royalty)
  ?childChildLadislaus dbo:childOf ?ladislaus .
  ?grandchildLadislaus dbo:childOf ?childChildLadislaus .
  ?grandchildLadislaus a dbo:Royalty .

  # Archduchess Margaret of Austria
  ?margaret a dbo:Person ;
            foaf:name ""Archduchess Margaret of Austria""@en ;
            dbo:birthdayYear ""1925""^^xsd:gYear ;
            dbo:parentOf ?childMargaret .
  
  # Child of the parent of Archduchess Margaret
  ?parentMargaret dbo:childOf ?margaret .

  # Native of Budapest
  ?budaNative a dbo:Person ;
              foaf:nationality <http://dbpedia.org/resource/Hungarian_people> ;
              dbo:birthPlace <http://dbpedia.org/resource/Budapest> .

  # The individual must be the parent of both
  ?individual dbo:parentOf ?grandchildLadislaus .
  ?individual dbo:parentOf ?parentMargaret .
  ?individual dbo:parentOf ?budaNative .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
492,58,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v1 <http://dbpedia.org/ontology/capital> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?personDecedentFrenchAlgeria ?personDecedentCapital ?commander
WHERE {
  # Person decedent at French Algeria
  ?personDecedentFrenchAlgeria dbo:deathPlace dbr:French_Algeria .
  
  # Person decedent at the capital of Khemis Miliana District
  ?personDecedentCapital dbo:deathPlace ?capital .
  ?capital dbp:country dbr:Khemis_Miliana_District ;
           a dbo:Settlement .

  # Commander in the war involving Frédéric-Georges Herr
  ?commander dbo:commanderOf ?war .
  ?war dbo:participant dbr:Frédéric-Georges_Herr ;
       a dbo:MilitaryConflict, dbo:Event .

}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
617,50,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Find Antiochus (son of Antiochus III the Great)
  ?antiochus a dbo:Person ;
             foaf:name ""Antiochus IV"" ;  # Assuming this is the correct name for the son

  # Find his successor
  ?successor dbo:predecessor ?antiochus .

  # Find the child of the successor who is royalty
  ?royalChild dbo:childOf ?successor ;
              a dbo:Royalty .

  # Find the spouse of this royal child
  ?spouse dbo:spouse ?royalChild .

  # Ensure the parent of Antiochus's child is Antiochus himself
  ?antiochusChild dbo:parent ?antiochus .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
345,18,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1978-09-15 and figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.","SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team ?nickname ?club
WHERE {
  # Identify the person Armando Heeb with specific roles and birthdate
  ?person a dbo:SoccerPlayer ;
          dbo:sportingCareerStartYear ?startYear ;
          dbo:birthDate ""1978-09-15""^^xsd:date ;
          dbp:nationality dbr:Switzerland .
  
  # Ensure the person is also a soccer manager
  ?person dbo:managerOf ?team .

  # Find the nickname associated with Armando Heeb
  ?person rdfs:label ""Armando Heeb""@en ;
          foaf:nick ?nickname .

  # Link the nickname to a sports club, organization, and soccer club
  ?club a dbo:SoccerClub, dbo:SportsOrganization ;
        dbp:commonName ?nickname .
  
  FILTER (lang(?personLabel) = 'en')
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
528,59,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of the commander in the work of --01-09.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?militaryForce ?societalEvent ?work WHERE {
  ?war a dbo:MilitaryConflict ;
       dbo:location dbr:Chile ;
       dbo:militaryParticipant ?militaryForce .
  
  ?societalEvent a dbo:SocietalEvent ;
                 dbo:relatedWar ?war .

  ?commander dbo:occupation dbp:MilitaryCommander ;
             dbo:work ?work .
  
  ?work dbo:date ?date .
  
  FILTER (YEAR(?date) = 2009 && MONTH(?date) = 1)
}
```",6,7,7,3,2,3,3,71,0,0,14,0,0.0,0
281,50,test,"Give me the war of the profession, that is a military unit, of Heather Roy and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?birthPlaceCountry
WHERE {
  # Heather Roy's profession as a military unit
  dbr:Heather_Roy dbo:occupation ?militaryUnit .
  ?militaryUnit rdf:type dbo:MilitaryUnit .

  # Leader of the 1962 NSW state election and their birthplace
  dbr:1962_New_South_Wales_state_election dbo:leader ?politicianLeader .
  ?politicianLeader dbo:birthPlace ?birthPlace .
  ?birthPlace geo:lat ?lat ; geo:long ?long .
  
  # Get the country of the birthplace
  {
    SELECT DISTINCT ?country WHERE { 
      SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
      ?birthPlace wdt:P17 ?country .
    }
  } BIND(?country AS ?birthPlaceCountry)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
281,52,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceCountry ?newZealandWar ?awardWar
WHERE {
  # Bob Heffron's birthplace country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:City ;
              dbo:country ?birthPlaceCountry .
  FILTER (?birthPlaceCountry rdf:type dbo:Country)

  # Wars involving the New Zealand Army
  ?newZealandWar dbo:participatingMilitaryUnit dbr:New_Zealand_Army .

  # Awards given by Jonathon Band and related wars
  ?award a dbo:Award ;
         dbo:awardee ?awardRecipient .
  ?awardRecipient dbo:occupation ?occupation .
  FILTER (?occupation = ""war"" || ?occupation = ""military"")
  ?awardWar dbo:relatedEvent ?award .

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,48,test,"Give me the leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?office ?award
WHERE {
  # Find the office led by Joseph Stalin
  ?office dbo:head dbr:Joseph_Stalin .
  
  # Ensure it's a government agency
  ?office rdf:type dbo:GovernmentAgency .

  # Find the award related to the Volcano and Ryukyu Islands campaign
  ?award dbo:recipient ?person ;
         dbo:campaign dbr:Volcano_and_Ryukyu_Islands_campaign .

  # Link the person who received the award to Joseph Stalin's leadership
  ?office dbo:head ?person .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
391,71,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ?v1 . ?v7 <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v8 <http://dbpedia.org/property/starring> ?result . ?v8 <http://dbpedia.org/property/starring> ?v7 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v4 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?native 
WHERE {
  # Identify the actor associated with Jackson, Tennessee and a movie that is also a work and TV show
  ?actor dbo:nativePlace ?place .
  FILTER (str(?place) = ""Jackson, Tennessee"")
  
  ?movie dbo:starring ?actor ;
         rdf:type dbo:Film ;
         dbo:workExample ?work .

  # Ensure the movie is also classified as a work and television show
  ?work rdf:type dbo:Work .
  OPTIONAL { ?work dbo:genre dbr:Television_series . }

  # Identify Sherry Hormann's spouse
  ?sherry foaf:mbox <mailto:SherryHormann@example.com> ; # Assuming an email or identifier for Sherry Hormann
          foaf:partner ?spouse .

  # Find the claim to fame of the spouse
  ?claimToFame dbo:actor ?spouse ;
               rdf:type dbo:Work .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
659,24,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify the regiment and its commander
  ?regiment a dbo:MilitaryUnit ;
            dbo:commander ?commander .

  # Ensure the regiment is part of the Napoleonic Wars
  ?regiment dbo:partOf dbr:Napoleonic_Wars .

  # Filter for the specific regiment
  FILTER(STR(?regiment) = ""1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)"")

  # Ensure the commander is associated with a military conflict (war)
  ?commander dbo:participatedIn ?conflict .
  ?conflict a dbo:MilitaryConflict ;
            dbo:partOf dbr:Napoleonic_Wars .

}
```",3,5,4,2,2,3,3,71,0,0,29,0,0.0,0
232,62,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of London and child of the person born as the birth name of Jon Pertwee.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Identify Jon Pertwee
  ?jonPertwee a dbo:Person ;
              foaf:name ""Jon Pertwee""@en .

  # Find the child of Jon Pertwee who is an actor, narrator, and producer from London
  ?child dbo:parent ?jonPertwee ;
         dbo:birthPlace dbr:London ;
         dbo:occupation [ a dbo:Actor ; 
                          a dbo:Narrator ;
                          a dbo:Producer ] .

  # Find the film and military conflict related to this person's claim to fame
  ?film dbo:actor ?child .
  ?conflict dbo:participant ?child .

  # Get the actor involved in these works
  ?film dbo:actor ?actor .
  OPTIONAL { ?conflict dbo:participant ?actor . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
659,71,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v8 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v7 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  # Rutger Jan Schimmelpenninck's societal and military event
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryConflict ?event1 .
  
  # Commander in the war (event and military conflict)
  ?commanderInWar dbo:event ?event2 ;
                  dbo:militaryConflict ?event2 .

  # Polish Horse as a commander
  dbr:Polish_Horse dbo:militaryUnit ?militaryUnit ;
                   dbo:organization ?organization ;
                   dbo:commanderOf ?force .
  
  # Native office holder of Kingdom of Ireland
  ?nativeOfficeHolder dbo:nativeCountry dbr:Kingdom_of_Ireland ;
                     dbo:officeHolder ?office .

  # Linking the commander to the native office holder's force
  ?force dbo:commanderInWar ?commanderInWar .
  
  # Optional links for enrichment
  OPTIONAL { ?event1 dbo:societalEvent ?societalEvent . }
  OPTIONAL { ?militaryUnit dbo:knownAs ""Polish Horse"" . }
}
```",9,17,10,3,3,3,3,71,0,0,15,0,0.0,0
427,46,test,Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti.,SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?michelePartyLabel ?lambertoFatherPartyLabel WHERE {
  # Find Michele Pinto's party affiliation
  ?michele a dbo:Person ;
           foaf:name ""Michele Pinto""@en .
  ?michele dbo:partyAffiliation ?micheleParty .

  # Find Lamberto Andreotti's father and his party affiliation
  ?lamberto a dbo:Person ;
            foaf:name ""Lamberto Andreotti""@en .
  ?father dbo:child ?lamberto ;
          dbo:partyAffiliation ?lambertoFatherParty .

  # Get labels for the parties
  ?micheleParty rdfs:label ?michelePartyLabel .
  ?lambertoFatherParty rdfs:label ?lambertoFatherPartyLabel .

  FILTER (lang(?michelePartyLabel) = ""en"")
  FILTER (lang(?lambertoFatherPartyLabel) = ""en"")
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
161,62,test,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderBiscay ?militaryForceBiscay ?predecessorPrieto ?militaryForceDecedent
WHERE {
  # Find Indalecio Prieto's predecessor
  ?prieto dbo:predecessor ?predecessorPrieto .
  dbr:Indalecio_Prieto ?prieto .

  # Biscay Campaign as a societal event and military conflict
  ?biscayCampaign dbo:type dbr:Military_conflict ;
                  dbo:social_event true ;
                  dbo:commander ?commanderBiscay ;
                  dbo:military_force ?militaryForceBiscay .
  
  # Find the decedent person in Francoist Spain
  ?francoistSpain dbo:decedent ?decedentPerson .

  # Military force associated with the decedent person
  ?decedentPerson dbo:military_force ?militaryForceDecedent ;
                  dbo:event ?event .
  
  # Ensure the event is a societal event and military conflict
  ?event dbo:type dbr:Military_conflict ;
         dbo:social_event true .

}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
435,25,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and work of Article 62, Section IV of Constitution of Iceland and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?v2 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/ontology/timeZone> ?v4 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?president ?territory WHERE {
  # Icelandic president known for foreign affairs (Article 62, Section IV)
  ?president dbo:nationality dbr:Iceland ;
             dbo:officeHolderOf dbr:President_of_Iceland ;
             dbp:role ""foreign affairs""@en .

  # Territory administered by the president
  OPTIONAL {
    ?territory dbo:administrativeTerritory ?president .
  }

  # Connection to Bombali Shebora Chiefdom in Sierra Leone
  OPTIONAL {
    ?sierraLeone dbo:timeZone dbr:UTC ;
                 dbo:subdivision dbr:Bombali_Shebora_Cheifdom .
  }
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
281,35,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?awardeeMilitaryUnit
WHERE {
  # Heather Roy's profession that is a military unit
  dbr:Heather_Roy dbo:occupation ?profession .
  FILTER (dbo:MilitaryUnit ?profession) .

  # Awardee of Knight Grand Cross of the Order of the Bath and their associated military unit
  ?awardee dbo:title ""Knight Grand Cross of the Order of the Bath""@en ;
          dbo:militaryUnit ?awardeeMilitaryUnit .
}
```

This query assumes:
- `dbo:occupation` is used to find Heather Roy's profession.
- A hypothetical property `dbo:MilitaryUnit` is used to filter professions that are military units. Adjust this based on actual DBpedia properties if necessary.
- The title ""Knight Grand Cross of the Order of the Bath"" is directly linked to individuals with a military unit.",4,5,5,2,2,3,3,71,0,0,9,0,0.0,0
281,69,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v7 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardWar ?militaryUnit ?birthCountry
WHERE {
  # Jonathon Band's award and associated war
  ?jonathanBand dbo:award ?award .
  ?award dbo:associatedWith ?awardWar .

  # Military unit in New Zealand Army linked to a politician who is an office holder
  ?politician dbo:officeHolder true ;
             dbo:militaryUnit ?militaryUnit ;
             dbo:nationality dbr:New_Zealand_Army .
  
  # Bob Heffron's birthplace country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:countryName ?birthCountry .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
547,69,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of the award of Gerald Graham and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v7 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchildRestingPlace ?awardeeRestingPlace ?actorRestingPlace
WHERE {
  # Resting place of the child of the child of William Haliburton
  ?williamHaliburton a dbo:Person ;
                    foaf:name ""William Haliburton""@en .
  
  ?williamChild dbo:child ?grandparent ;
                foaf:name ?williamName .

  ?grandparent dbo:child ?grandchild .
  ?grandchild dbo:deathPlace ?grandchildRestingPlace .

  # Resting place of the awardee of the award of Gerald Graham
  ?geraldGraham a dbo:Person ;
                foaf:name ""Gerald Graham""@en .
  
  ?award dbo:recipient ?awardee ;
         dbo:holder ?geraldGraham .
  
  ?awardee dbo:deathPlace ?awardeeRestingPlace .

  # Resting place of the actor of ""Enemy at the Door""
  dbr:Enemy_at_the_Door dbo:actor ?actor .
  ?actor dbo:deathPlace ?actorRestingPlace .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
492,65,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at the capital, that is a settlement, of Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v4 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?satterthwaiteDecedent ?algeriaCapitalDecedent ?verdunCommanderDecedent
WHERE {
  # Joseph C. Satterthwaite's role and decedent
  ?satterthwaite dbo:office dbr:Assistant_Secretary_of_State_for_African_Affairs .
  OPTIONAL { ?satterthwaite dbo:deceased ?satterthwaiteDecedent . }

  # Algeria's capital and its decedent
  ?algeriaCapital dbo:country dbr:Algeria ;
                 a dbo:Settlement .
  OPTIONAL { ?algeriaCapital dbo:deceased ?algeriaCapitalDecedent . }

  # Battle of Verdun commander and their decedent
  ?verdunCommander dbo:commanderOf dbr:Battle_of_Verdun ;
                   dbo:deceased ?verdunCommanderDecedent .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
981,16,test,"Give me the entity in the region of Time in Indonesia and birth place of the person born, that is a beauty queen, as .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/birthName> """"@en . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region ?birthPlace WHERE {
  # Find a region related to ""Time"" in Indonesia
  ?region dbo:country dbr:Indonesia .
  ?region rdfs:label ?regionLabel .
  FILTER(CONTAINS(LCASE(?regionLabel), ""time""))

  OPTIONAL {
    # Find beauty queens and their birthplaces
    ?person dbo:nationality dbr:Indonesia ;
            a dbo:BeautyQueen ;
            dbp:birthPlace ?birthPlace .
  }
}
```",4,5,5,2,2,3,2,20,0,2,19,0.0,0.0,0
391,35,test,"Give me the native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://dbpedia.org/property/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Identify Pittsburgh as Hub City
  dbr:Pittsburgh dbo:nickname ""Hub City""@en .
  
  # Find a movie that is also a work and TV show with Roz Ryan
  ?movie dbo:starring dbr:Roz_Ryan ;
         rdf:type dbo:Film ;
         dbo:workType ?workType .

  FILTER(?workType IN (dbo:TelevisionShow, dbo:TheatreWork)) # Ensuring it's both a movie and other forms

  # Find the actor of this movie
  ?movie dbo:actor ?actor .
  
  # Get the native place of the actor
  ?actor dbo:nativePlace dbr:Pittsburgh .

}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
485,27,test,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and entity in United Kingdom.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeBirthPlace ?region
WHERE {
  # Find the awardee of the Eric Gregory Award who is a writer and poet
  ?awardee dbo:award <http://dbpedia.org/resource/Eric_Gregory_Award> .
  ?awardee rdf:type dbo:Writer ;
           rdf:type dbo:Poet .

  # Get the birthplace of this awardee
  ?awardee dbo:birthPlace ?awardeeBirthPlace .

  # Find Joseph Whitaker and his birthplace region
  dbr:Joseph_Whitaker (dbo:birthPlace) ?whitakerBirthPlace .
  
  # Ensure both birthplaces are in the same UK region
  ?region dbo:part <http://dbpedia.org/resource/United_Kingdom> ;
          dbo:contains ?awardeeBirthPlace ;
          dbo:contains ?whitakerBirthPlace .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
435,23,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and work of the author of Iceland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?figure ?territory WHERE {
  ?figure a dbo:Person ;
          dbo:nationality dbr:Iceland ;
          dbo:work ?literature .
  
  ?literature rdfs:label ""The Hobbit""@en .

  ?figure dbo:administers ?territory .
  
  ?territory a dbo:Settlement ;
             dbo:country dbr:Iceland ;
             rdf:type dbo:Town .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
378,42,test,Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of Joaquín Blake.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?carlPontusGahnWar ?joaquinBlakeCommander ?joaquinBlakeWar
WHERE {
  # Find Carl Pontus Gahn's birth name and wars he was involved in
  OPTIONAL {
    ?carlPontusGahn dbr:Carl_Pontus_Gahn .
    ?carlPontusGahn dbo:birthName ?birthName .
    ?carlPontusGahn dbo:militaryConflict ?carlPontusGahnWar .
  }

  # Find Joaquín Blake's role in the Great Siege of Gibraltar and wars he participated in
  OPTIONAL {
    ?joaquinBlake dbr:Joaquín_Blake_y_Jordán .
    ?joaquinBlake dbo:commanderOf ?joaquinBlakeCommander .
    FILTER(?joaquinBlakeCommander = dbr:Great_Siege_of_Gibraltar)
    ?joaquinBlake dbo:militaryConflict ?joaquinBlakeWar .
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
360,25,test,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v3 <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?album ?manfredMannReference ?deathPlace
WHERE {
  ?album dbo:composer dbr:Dave_Flett .
  OPTIONAL { ?album dbo:associatedBand dbr:Manfred_Mann . }
  
  ?person dbo:birthName ""Winnie Madikizela-Mandela"" .
  ?person dbo:placeOfDeath ?deathPlace .
  FILTER (isBlank(?deathPlace) || ?deathPlace a dbo:Settlement)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
318,9,test,Give me the professional in the profession of Robert Xavier Rodriguez and person born in the founding year of Eel Pie Publishing.,SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the profession of Robert Xavier Rodriguez
  dbr:Robert_Xavier_Rodriguez dbo:profession ?profession .

  # Find the founding year of Eel Pie Publishing
  dbr:Eel_Pie_Publishing dbo:foundingYear ?foundingYear .

  # Find a person born in that founding year
  ?person dbo:birthDate ?birthDate .
  
  FILTER (YEAR(?birthDate) = ?foundingYear)
}
```",4,4,5,2,2,2,2,9,0,0,7,0,0.0,0
701,55,test,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Ramesses II and his child Merneptah
  ?ramesses2 a dbo:Person ;
             dbo:spouse ?nefertari ;
             dbo:child ?merneptah .

  # Nefertari as spouse of Ramesses II
  ?nefertari a dbo:Person ;
             dbp:spouseOf ?ramesses2 .

  # Merneptah as child of Ramesses II and Nefertari
  ?merneptah a dbo:Person ;
             dbo:parent ?ramesses2, ?nefertari .
  
  # Parent of the child of Nefertari (which is also Ramesses II)
  ?childOfNefertari a dbo:Person ;
                   dbo:parent ?nefertari .

  FILTER (?parent = ?nefertari)
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
285,20,test,Give me the parent of the child of the spouse of Aristotle Onassis and spouse of the professional in the award of Stan Lee.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild ?spouseOfProfessional
WHERE {
  # Spouse of Aristotle Onassis
  dbr:Aristotle_Onassis dbo:spouse ?spouseAOnassis .
  
  # Child of that spouse
  ?child dbo:parent ?spouseAOnassis ;
         dbo:parent ?parentOfChild .

  # Parent of the child (which is effectively the spouse)
  FILTER(?parentOfChild = ?spouseAOnassis)

  # Spouse of the parent of the child
  ?parentOfChild dbo:spouse ?spouseOfParent .

  # Professional in the award related to Stan Lee
  dbr:Stan_Lee dbo:award ?stanLeeAward .
  
  # Assuming a professional is linked via an occupation or similar property
  ?professional dbo:occupation ?relatedOccupation ;
                dbo:award ?stanLeeAward .
  
  # Spouse of that professional
  ?professional dbo:spouse ?spouseOfProfessional .
}
```",6,6,7,3,2,3,2,20,2,10,1,0.16666666666666666,0.6666666666666666,0.26666666666666666
487,18,test,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of the administration of the person born on 1955-01-26.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://dbpedia.org/property/governor> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration ?country
WHERE {
  # Find Philip Brian Scott who is a soccer player
  ?person rdfs:label ""Philip Brian Scott""@en .
  ?person dbo:occupation dbr:Soccer_player .

  # Get the administration of Philip Brian Scott
  OPTIONAL { 
    ?person dbo:positionHeld ?administration .
  }

  # Find person born on 1955-01-26 and get their country of administration
  ?otherPerson dbp:birthday ""1955-01-26""^^xsd:date .
  OPTIONAL {
    ?otherPerson dbo:positionHeld ?adminRole .
    ?adminRole dbo:country ?country .
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
465,9,test,"Give me the death place of the native of Prague and administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?person dbo:nationality dbr:Czech_Republic ;
          dbo:birthPlace dbr:Prague .
  
  ?party dbo:leader ?person ;
         dbo:memberOfParliament dbr:Chamber_of_Deputies_of_the_Czech_Republic .

  OPTIONAL { ?person dbo:deathPlace ?deathPlace }
}
```",4,6,5,2,2,2,2,9,0,0,8,0,0.0,0
161,69,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v7 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForceFrancoistSpain ?militaryForceLargoCaballero ?commanderElDirector
WHERE {
  # Military force related to Francoist Spain
  ?francoistSpain dbo:societyEvent ?societalEvent .
  ?francoistSpain dbo:militaryConflict ?militaryConflict .
  ?francoistSpain dbo:force ?militaryForceFrancoistSpain .

  # Military force related to Francisco Largo Caballero
  dbr:Franco_Largo_Caballero dbo:societyEvent ?societalEvent2 .
  dbr:Franco_Largo_Caballero dbo:militaryConflict ?militaryConflict2 .
  dbr:Franco_Largo_Caballero dbo:force ?militaryForceLargoCaballero .

  # Commander in the force related to El Director
  ?elDirectorEvent dbo:event ?event .
  ?elDirectorEvent dbo:commander ?commanderElDirector .
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
488,28,test,Give me the death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceTokugawaIeyasu ?administrationGoYozei ?birthPlaceCommander
WHERE {
  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlaceTokugawaIeyasu .

  # Emperor Go-Yōzei's administration (reign)
  dbr:Emperor_Go-Yozei dbo:reign ?administrationGoYozei .

  # Commander in Boshin War - assuming Saigō Takamori as a key figure
  dbr:Saigo_Takamori dbo:birthPlace ?birthPlaceCommander .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
701,68,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v5 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  # Seti I's great-grandchild
  ?greatGrandChild dbo:child ?grandChild .
  ?grandChild dbo:child ?childOfSetiI .
  ?childOfSetiI dbo:child ?setiI .

  # Ramesses II and his spouse
  ?ramessesII dbo:spouse ?spouseRamessesII .
  ?merneptah dbo:parent ?ramessesII .

  # Amun-her-khepeshef's spouse and their child's parent
  ?amunHerKhepeshef dbo:spouse ?spouseAmun .
  ?childOfSpouseAmun dbo:parent ?spouseAmun .
  
  # The parent of the great-grandchild of Seti I who is also a spouse of Ramesses II and a parent of Amun-her-khepeshef's child
  ?greatGrandChild dbo:parent ?parent .
  FILTER (?parent = ?spouseRamessesII && ?parent = ?spouseAmun)
}
```",8,8,9,3,3,3,3,71,0,1860,1,0.0,0.0,0
754,19,test,Give me the parent of the parent of May Hnin Htapi and parent of the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?grandparent1 ?parent2
WHERE {
  # Find May Hnin Htapi's grandparent
  ?mayHninHtapi dbo:birthName ""May Hnin Htapi"" .
  ?mayHninHtapi dbo:parent ?parent1 .
  ?parent1 dbo:parent ?grandparent1 .

  # Find Ram Khamhaeng the Great's child's parent
  ?reference dbo:wikiPageRedirects <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> .
  ?reference dbo:child ?child2 .
  ?child2 dbo:parent ?parent2 .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
701,51,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Ramesses II.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find the commander in the Battle of Perire
  ?commander dbo:event dbr:Battle_of_Perire .
  
  # Identify the father of this commander
  ?father dbo:child ?commander .

  # Identify the spouse of this father who is royalty
  ?father dbo:spouse ?spouse .
  ?spouse a dbo:RoyalFamilyMember .

  # Ensure this spouse is also a parent of one of Ramesses II's children
  ?ramessesChild dbo:parent ?spouse ;
                 dbo:parent dbr:Ramesses_II .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
747,48,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band
WHERE {
  # Find Tracey Elizabeth McSween's birth date
  dbr:Tracey_McSween dbo:birthday ?traceyBirthDate .

  # Find a person who is an athlete, soccer player, and born in Zolotonosha
  ?person dbo:nationality dbr:Soviet_Union ;  # Assuming Soviet Union for historical context
          dbo:sport dbr:Association_football ;
          dbp:birthday ?birthDate ;
          dbo:placeOfBirth dbr:Zolotonosha .

  # Ensure the person is an athlete and soccer player
  FILTER EXISTS { ?person a dbo:Athlete . }
  FILTER EXISTS { ?person a dbo:Soccer_player . }

  # Match birth dates
  FILTER (?traceyBirthDate = ?birthDate)

  # Find the band associated with Tracey Elizabeth McSween
  dbr:Tracey_McSween dbo:band ?band .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
959,52,test,"Give me the manager of 2013 Júbilo Iwata season and native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?nativeCountry ?university
WHERE {
  # Find the manager of Júbilo Iwata in 2013
  ?team dbo:manager ?manager .
  ?team rdfs:label ""Júbilo Iwata""@en .
  FILTER(YEAR(?startDate) = 2013 && YEAR(?endDate) >= 2013)

  # Get Yōichi Masuzoe's native country and alma mater
  dbr:Yōichi_Masuzoe dbo:nationality ?nativeCountry ;
                     dbo:almaMater ?university .
  
  # Ensure the university is Japanese
  ?university dbo:country dbr:Japan .

  # Link the manager's alma mater to Yōichi Masuzoe's alma mater
  ?manager dbo:almaMater ?sameUniversity .
  FILTER(?sameUniversity = ?university)
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
16,68,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Gigi Rice's birth name
  ?gigi a dbo:Person ;
        foaf:name ""Gigi Rice"" ;
        dbo:birthName ?birthName .

  # Find Ted McGinley's spouse
  ?ted a dbo:Person ;
       foaf:name ""Ted McGinley"" ;
       dbo:spouse ?spouse .

  # Find the actor of Unnatural and their profession
  ?unnaturalActor a dbo:Person ;
                  dbp:role ""Unnatural (TV series)"" ;
                  dbo:profession ?profession .

  # Match the conditions
  FILTER(?birthName = ?ted)
  FILTER(?spouse = ?person)
  FILTER(?profession = dbo:Actor) # Assuming Actor is the profession

}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
328,57,test,"Give me the awardee of Order of Suvorov and commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee WHERE {
  ?awardee dbo:award [ a dbo:Award ; rdfs:label ""Order of Suvorov""@en ] .
  
  ?commanderRole dbo:place dbr:Budapest ;
                 dbo:positionTitle ?title ;
                 dbo:agent ?awardee .

  ?office dbo:leader ?awardee ;
          a dbo:GovernmentAgency ;
          dbo:headOfState dbr:Joseph_Stalin .

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
161,71,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 ?commander
WHERE {
  # Decedent at Francoist Spain and their military force
  ?decedent dbo:deathPlace dbr:Francoist_Spain .
  OPTIONAL { ?decedent dbo:militaryService ?militaryForce1 . }
  
  # Predecessor of Indalecio Prieto and their military force
  ?indalecio dbo:predecessor ?predecessor .
  FILTER (str(?indalecio) = ""Indalecio_Prieto"") .
  OPTIONAL { ?predecessor dbo:militaryService ?militaryForce2 . }
  
  # Commander in the force of El Director
  ?elDirector rdfs:label ""El Director""@en .
  OPTIONAL {
    ?force dbo:event ?event .
    FILTER (str(?event) = ""El_Director"") .
    ?force dbo:commander ?commander .
  }
}
```",9,15,10,3,3,3,3,71,0,0,32,0,0.0,0
915,17,test,"Give me the resident of Springfield, Illinois and father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . ?v3 <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?grandparent a dbo:FictionalCharacter ;
               dbo:spouseOrPartner ?lizzieSpaulding .
  ?lizzieSpaulding a dbo:FictionalCharacter ;
                   dbo:child ?parent .
  ?parent a dbo:FictionalCharacter ;
          dbo:spouseOrPartner ?father .
  ?father a dbo:FictionalCharacter ;
          dbo:residence dbr:Springfield,_Illinois ;
          dbo:child ?child .
  
  FILTER EXISTS { ?grandparent dbo:genre dbr:SoapOpera }
  FILTER EXISTS { ?lizzieSpaulding dbo:genre dbr:SoapOpera }
  FILTER EXISTS { ?parent dbo:genre dbr:SoapOpera }
  FILTER EXISTS { ?father dbo:genre dbr:SoapOpera }
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
617,46,test,"Give me the spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
  # Antiochus III the Great and his child
  ?antiochusIII a dbo:Monarch ;
                foaf:name ""Antiochus III the Great""@en .
  
  ?child dbo:parent ?antiochusIII ;
         a dbo:Person .

  # Spouse of the child of Antiochus III
  ?spouse dbo:spouse ?child .

  # Successor of Antiochus II Theos and their royal descendant
  ?antiochusII a dbo:Monarch ;
               foaf:name ""Antiochus II Theos""@en .
  
  ?successor dbo:succeededBy ?antiochusII ;
             a dbo:Monarch .

  ?royalDescendant dbo:parent ?successor ;
                   a dbo:RoyalFamilyMember .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
767,38,test,Give me the reference to the alter ego of Black Hood and alma mater of the administration of George K. Nash.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?almaMater WHERE {
  # Find Black Hood's alter ego
  ?blackHood dbo:alias ""Black Hood"" .
  ?blackHood dbo:realName ?alterEgo .

  # Find George K. Nash's alma mater
  dbr:George_K._Nash dbo:almaMater ?almaMater .
}
```

This query assumes:
- Black Hood has an alias and a real name (alter ego) in DBpedia.
- George K. Nash has an entry with his alma mater listed.",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
161,67,test,"Give me the military force of Rif War and commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rifWarForce ?rifWarCommander ?predecessor ?societalEvent ?militaryConflict
WHERE {
  # Rif War and El Director
  ?rifWar a dbo:MilitaryConflict ;
          dbo:participatingMilitaryUnit ?rifWarForce .
  
  ?rifWarForce dbo:commander ?rifWarCommander .

  ?rifWar dbr:El_Director .

  # Predecessor of Indalecio Prieto
  ?indalecioPrieto a dbo:Person ;
                   foaf:surname ""Prieto"" ;
                   dbo:predecessor ?predecessor .
  
  ?societalEvent a dbo:SocietalEvent ;
                 dbo:participatingMilitaryUnit ?militaryConflict .

  ?militaryConflict dbo:commander ?predecessor .
}
```",7,10,8,3,3,3,3,71,0,0,11,0,0.0,0
767,55,test,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater ?settlement ?alterEgo
WHERE {
  # Alma Mater of George K. Nash
  ?nash a dbo:Person ;
        foaf:name ""George K. Nash"" .
  ?nash dbo:almaMater ?almaMater .

  # Entity in the administration of Green that is a settlement
  ?green a dbo:Person ;
         foaf:name ""Green"" .
  ?administration dbo:member ?green .
  ?settlement a dbo:Settlement ;
              dbo:partOf ?administration .

  # Alter ego of Black Hood
  ?blackHood a dbo:Character ;
             foaf:name ""Black Hood"" .
  ?alterEgo dbo:alias ?blackHood .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
429,8,test,"Give me the administration of Andrew Johnson and country of the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?country
WHERE {
  # Find Andrew Johnson's administration
  dbr:Andrew_Johnson dbo:presidentOf ?administration .

  # Find the military force related to Camden Expedition as an organisation
  ?militaryForce a dbo:MilitaryUnit ;
                 rdfs:label ""Camden Expedition""@en .
  
  # Get the country associated with this military force
  ?militaryForce dbo:nationality ?country .

  FILTER (isLiteral(?administration) && isLiteral(?country))
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
701,48,test,Give me the spouse of the father of Merneptah and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouseOfFather
WHERE {
  ?merneptah dbo:father ?father .
  ?father dbo:spouse ?spouseOfFather .

  ?amunherkhepeshef dbo:spouse ?spouseAmun .
  ?spouseAmun dbo:child ?child .

  FILTER(?merneptah = <http://dbpedia.org/resource/Merneptah>)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,55,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Donald Maynard Dokken and his band members
  dbr:Don_Dokken a dbo:MusicalArtist .
  
  ?dokkenBandMember dbo:member dbr:Don_Dokken ;
                   a dbo:MusicalArtist .

  # Watchtower associated artists
  dbr:Watchtower (dbo:associatedMusicalArtist) ?watchtowerAssociatedArtist .
  
  # Meshuggah band members that are bands, groups, or organizations
  dbr:Meshuggah dbo:bandMember ?meshuggahBandMember ;
                a dbo:Band .

  ?meshuggahBandMember a ?type .
  FILTER (?type IN (dbo:Band, dbo:MusicalGroup, dbo:Organization))

  # Combine the results to find common entities
  OPTIONAL { ?dokkenBandMember = ?watchtowerAssociatedArtist }
  OPTIONAL { ?dokkenBandMember = ?meshuggahBandMember }

}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
747,26,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  ?person rdfs:label ""Amba Shepherd""@en .
  ?person dbo:worksFor ?work .
  ?work rdf:type dbo:Songs .
  ?work dbo:artist ?band .
}
```

This query assumes:
- `dbo:worksFor` links a person to their works.
- `rdf:type` is used to specify that the work is of type ""Songs"".
- `dbo:artist` connects the song to its band.",3,4,4,3,1,3,3,71,0,0,13,0,0.0,0
528,30,test,Give me the war of Irene Morales and force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  {
    # Wars involving Irene Morales
    ?person rdfs:label ""Irene Morales""@en .
    ?person dbo:participatedIn ?war .
  }
  UNION
  {
    # Wars involving Narciso Campero Leyes (Andrés de Santa Cruz)
    ?person rdfs:label ""Andrés de Santa Cruz""@en .
    ?person dbo:participatedIn ?war .
  }
  UNION
  {
    # Wars involving Orozimbo Barbosa
    ?person rdfs:label ""Orozimbo Barbosa""@en .
    ?person dbo:participatedIn ?war .
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
378,30,test,Give me the war of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of Joaquín Blake.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfGahn ?claimToFameBlake ?warOfBlake
WHERE {
  # Find wars or military events involving Carl Pontus Gahn
  OPTIONAL {
    ?gahn dbo:occupation dbr:Military_person .
    ?gahn dbo:memberOf ?organization .
    ?organization dbo:member ?event .
    ?event rdf:type dbo:MilitaryConflict ;
           rdfs:label ?warOfGahn .
  }

  # Find Joaquín Blake's claim to fame during the Great Siege of Gibraltar
  OPTIONAL {
    dbr:Joaqu%C3%ADn_Blake dbo:occupation dbr:Military_person .
    dbr:Great_Siege_of_Gibraltar dbo:commander ?blakeCommander ;
                                dbo:claimToFame ?claimToFameBlake .
    FILTER (str(?blakeCommander) = ""Joaquín Blake"")
  }

  # Find the war associated with Joaquín Blake
  OPTIONAL {
    dbr:Joaqu%C3%ADn_Blake dbo:memberOf ?organizationBlake .
    ?organizationBlake dbo:member ?eventBlake .
    ?eventBlake rdf:type dbo:MilitaryConflict ;
                rdfs:label ?warOfBlake .
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
16,58,test,Give me the spouse of Ted McGinley and professional in the profession of Satomi Ishihara and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?profession ?person
WHERE {
  # Spouse of Ted McGinley
  dbr:Ted_McGinley dbo:spouse ?spouse .

  # Profession of Satomi Ishihara
  dbr:Satomi_Ishihara dbo:occupation ?profession .

  # Person born as the birth name of an alumnus of Ohio State University
  {
    SELECT DISTINCT ?alumnus ?birthName
    WHERE {
      ?alumnus dbo:almaMater dbr:Ohio_State_University .
      ?alumnus dbo:birthName ?birthName .
    }
  } AS ?subquery

  # Match person with the birth name of an alumnus
  ?person dbo:birthName ?birthName .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
404,27,test,Give me the child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Person ;
           dbp:name ""Princess Victoria Louise of Prussia""@en .

  # Step 2: Find her spouse
  ?princess dbo:spouse ?spouse .

  # Step 3: Determine the father of the spouse
  ?spouse dbo:father ?father .

  # Step 4: Find the child of that father
  ?father dbo:child ?child .
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
281,65,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?countryBirthPlace
WHERE {
  # Leader of the 1962 New South Wales state election
  ?election dbo:leader ?leader .
  FILTER (str(?election) = ""1962_New_South_Wales_state_election"")

  # Birthplace of the leader that is a country
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbr:Country .

  BIND(?birthPlace AS ?countryBirthPlace)

  OPTIONAL {
    # Awardee of Knight Grand Cross of the Order of the Bath
    ?awardee dbo:honoursReceived dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
    
    # War associated with the awardee and Heather Roy's profession
    ?profession dbo:relatedToMilitaryUnit ?militaryUnit .
    FILTER (str(?profession) = ""Heather_Roy"")
    
    ?war dbo:participatedIn ?awardee ;
         dbo:participatedIn ?militaryUnit .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
801,49,test,"Give me the professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalInAlterEgo ?associatedMusicalArtist
WHERE {
  # The Shadow's alter ego professional identity
  dbr:The_Shadow dbo:alterEgo ?alterEgo.
  ?alterEgo dbo:profession ?professionalInAlterEgo.

  # Writer of the album ""What U See Is What U Get""
  dbr:What_U_See_Is_What_U_Get dbo:writer ?writerOfAlbum.

  # Associated musical artist who is also an artist
  ?writerOfAlbum dbo:associatedMusicalArtist ?associatedMusicalArtist.
  ?associatedMusicalArtist a dbo:Musician;
                          a dbo:Artist.
}
```",5,9,6,3,2,3,3,71,0,0,22,0,0.0,0
659,58,test,"Give me the commander in German campaign of 1813 and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # German campaign of 1813
  ?campaign dbo:type dbr:Military_conflict ;
            dbo:place dbr:Germany ;
            dbo:date ""1813""^^xsd:gYear .

  # Commander in the German campaign of 1813
  ?campaign dbo:commander ?commander .

  # Military force associated with Rutger Jan Schimmelpenninck
  ?schimmelpenninck dbo:occupation dbr:Military_officer ;
                   dbo:militaryForce ?militaryForce .

  # Reference to the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?regiment dbo:name ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en ;
            dbo:partOf ?imperialGuard .
  
  # Connect Rutger Jan Schimmelpenninck to the regiment
  ?schimmelpenninck dbo:militaryForce ?regiment .

  # Ensure all entities are connected through events and conflicts
  ?campaign dbo:event ?event .
  ?event dbo:participatedIn ?conflict .
  ?conflict dbo:commander ?commander .
}
```",6,11,7,3,3,3,3,71,0,0,7,0,0.0,0
294,26,test,"Give me the resting place of Edwin A. Keeble and entity in the birth place, that is a settlement, of Marion James and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?keeblesRestingPlace ?marionsBirthplace ?awardeesRestingPlace
WHERE {
  # Edwin A. Keeble's resting place
  dbr:Edwin_A._Keeble dbo:finalBurialPlace ?keeblesRestingPlace .

  # Marion James' birthplace, which is a settlement
  dbr:Marion_James dbp:birthPlace ?marionsBirthplace .
  ?marionsBirthplace rdf:type dbo:Settlement .

  # Resting place of the awardee who is a politician and received the Distinguished Service Medal (U.S. Army)
  ?awardee dbo:award dbr:Distinguished_Service_Medal_(United_States_Army) ;
           rdf:type dbo:Politician .
  ?awardee dbo:finalBurialPlace ?awardeesRestingPlace .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
16,22,test,Give me the spouse of Ted McGinley and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseOfTedMcGinley ?personWithBirthNameGigiRice
WHERE {
  # Find the spouse of Ted McGinley
  ?tedMcGinley dbo:name ""Ted McGinley""@en .
  ?tedMcGinley foaf:spouse ?spouseOfTedMcGinley .

  # Find the person with birth name Gigi Rice
  ?personWithBirthNameGigiRice dbo:birthName ""Gigi Rice""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
801,61,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerName
WHERE {
  # Album and its producer
  dbr:What_U_See_Is_What_U_Get 
    a dbo:MusicalWork ;
    dbo:albumProducer ?producer .

  # Producer is a musical artist
  ?producer 
    a dbo:MusicalArtist ;
    rdfs:label ?producerName .
  
  # Producer associated with a rapper
  OPTIONAL {
    ?rapper 
      a dbo:Rapper ;
      dbo:associatedMusicalArtist ?producer .
  }

  # Producer has written songs or works as an artist
  OPTIONAL {
    ?work 
      a dbo:MusicalWork, dbo:Song ;
      dbo:writer ?producer .
  }
}
```",6,14,7,3,2,3,3,71,0,0,9,0,0.0,0
182,23,test,Give me the war of the author of 2019 Sri Lanka Easter bombings and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?war ?nationalityEntity
WHERE {
  # Find the author of the 2019 Sri Lanka Easter bombings
  ?event dbo:wikiPageRedirects dbr:2019_Sri_Lanka_Easter_bombings .
  ?event dbo:perpetrator ?author .

  # Find wars associated with the author
  OPTIONAL { ?author dbo:occupation ?war . FILTER (CONTAINS(LCASE(?war), ""war"")) }

  # Find Tamara Kunanayakam's nationality
  dbr:Tamara_Kunanayakam dbo:nationality ?nationality .
  
  # Find entities related to the nationality
  OPTIONAL { ?nationalityEntity rdfs:label ?nationalityLabel . FILTER (CONTAINS(LCASE(?nationalityLabel), LCASE(STR(?nationality)))) }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
303,26,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in Panama and party of the commander, that is a politician, in United States invasion of Panama.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyArias ?partyCommander
WHERE {
  # Arnulfo Arias Madrid's political party
  dbr:Arnulfo_Arias_Madrid 
    dbo:nationality dbr:Panama ;
    dbo:politicalParty ?partyArias .

  # Commander during the United States invasion of Panama's political party
  OPTIONAL {
    ?commander 
      dbo:occupation dbr:Politician ;
      dbo:roleInEvent dbr:United_States_invasion_of_Panama ;
      dbo:politicalParty ?partyCommander .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
767,62,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to .","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v6 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterNash ?settlementInAdmin ?almaMaterWriter
WHERE {
  # George Kilbon Nash's alma mater
  dbr:George_Kilbon_Nash dbo:almaMater ?almaMaterNash .

  # Entity in the administration of George Kilbon Nash that is a settlement
  ?adminEntity dbo:member dbr:George_Kilbon_Nash .
  ?adminEntity dbo:location ?settlementInAdmin .
  FILTER (dbo:Settlement ?settlementInAdmin) 

  # Writer of ""Where It's At"" by Dustin Lynch
  dbr:""Where_It%27s_At_(Dustin_Lynch_album)"" dbo:lyricsBy ?writer .

  # Alma mater of the writer
  ?writer dbo:almaMater ?almaMaterWriter .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
801,36,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Link album to its writer
  dbr:What_U_See_Is_What_U_Get dbo:composer ?writer .
  
  # Ensure the writer is a musical artist and an artist
  ?writer rdf:type dbo:MusicalArtist ;
          rdf:type dbo:Artist .

  # Link the writer to their professional role as a musical artist
  ?writer dbo:profession dbr:Musical_Artist .

  # Return the writer as the associated artist
  BIND(?writer AS ?artist)
}
```",4,8,5,3,2,3,3,71,0,0,22,0,0.0,0
617,30,test,Give me the child of Antiochus III the Great and spouse of Laodice IV and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?parentOfAntiochusChild
WHERE {
  # Find Antiochus III the Great and his child (Antiochus)
  dbr:Antiochus_III_the_Great dbo:child dbr:Antiochus.

  # Find Laodice IV's spouse who is also a parent of Antiochus
  ?spouse dbo:spouse dbr:Laodice_IV.
  ?spouse dbo:parent dbr:Antiochus.

  # Find the child of Antiochus and their parent
  dbr:Antiochus dbo:child ?antiochusChild.
  ?parentOfAntiochusChild dbo:parent ?antiochusChild.
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,60,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Identify the album ""What U See Is What U Get""
  dbr:What_U_See_Is_What_U_Get dbo:album .

  # Find the writer of this album who is also a musical artist and an artist
  ?writer dbo:writer dbr:What_U_See_Is_What_U_Get .
  ?writer rdf:type dbo:MusicalArtist .
  ?writer rdf:type dbo:Artist .

  # Determine the associated musical artist with this writer
  ?associatedArtist dbo:associatedMusicalArtist ?writer .

  # Consider the alter ego of The Shadow, which is Lamont Cranston
  dbr:Lamont_Cranston rdfs:label ""Lamont Cranston""@en .
}
```",6,10,7,3,2,3,3,71,0,0,22,0,0.0,0
421,21,test,Give me the band member of Senidah and native of Socialist Federal Republic of Yugoslavia and person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember
WHERE {
  ?person dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia .
  ?person foaf:name ""Dino Merlin""@en .
  ?person foaf:birthName ?birthName .
  
  ?senidah dbo:member ?person .
  ?senidah rdfs:label ""Senidah""@en .

  FILTER(?birthName = ""Dino Merlin""@en)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
48,18,test,"Give me the band of the writer of the work, that is a work, of Shellback (record producer) and band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfWriter ?bandOfActor
WHERE {
  # Find works associated with Shellback
  ?work dbo:producer dbr:Shellback .
  
  # Identify the writer of those works and their band
  ?work dbo:writer ?writer .
  ?writer dbo:musicalBand ?bandOfWriter .

  # Check if Honor Up is a musical artist and find their band
  dbr:Honor_Up dbo:musicalArtist true ;
               dbo:musicalBand ?bandOfActor .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
747,64,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band1 ?band2
WHERE {
  # Find the person associated with the persona of Shèna
  ?personShena dbo:birthName ""Shèna""@en .
  
  # Find the decedent's birthdate
  ?decedent dbo:dateOfDeath ?deathDate ;
           dbp:birthday ?birthdateDecedent .

  # Find the person born on the same date as the decedent
  ?personSameBirthDate dbp:birthday ?birthdateDecedent .
  
  # Ensure this person is an athlete and a soccer player from Zolotonosha
  ?athlete dbo:birthPlace dbr:Zolotonosha ;
           dbo:sport dbr:Soccer ;
           ?samePerson ?personSameBirthDate .

  # Find the band of Amba Shepherd
  ?ambaShepherd dbp:band ?band2 .
  
  # Link the athlete to a band (assuming there's a property for this)
  OPTIONAL { ?athlete dbo:band ?band1 }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
54,47,test,Give me the child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person
WHERE {
  ?soeMinWimalaDewi dbo:father ?father1 .
  ?father1 dbo:child ?person .

  ?thadoMinsawOfProme dbo:parent ?parent2 .
  ?parent2 dbo:child ?thadoChild .
  ?thadoChild dbp:parent ?person .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
404,60,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childBirthName WHERE {
  # Identify Princess Victoria Louise of Prussia and her spouse
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .
  
  # Find the father of the spouse (father-in-law)
  ?spouse dbo:parent ?fatherInLaw .

  # Identify children of this father who are royalty
  ?fatherInLaw dbo:child ?child .
  ?child a dbo:Monarch .

  # Retrieve the birth name of such a child
  ?child foaf:name ?childBirthName .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
197,9,test,Give me the birthplace of the awardee of Leroy P. Steele Prize and birthplace of the member of FC Politehnica Timișoara.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?steeleAwardeeBirthplace ?politehnicaMemberBirthplace
WHERE {
  # Find the awardee of the Leroy P. Steele Prize and their birthplace
  ?person dbo:award dbr:Leroy_P._Steele_Prize .
  ?person dbo:birthPlace ?steeleAwardeeBirthplace .

  # Find a member of FC Politehnica Timișoara and their birthplace
  ?member dbr:FC_Politehnica_Timișoara#members _:b1 .
  ?member dbo:birthPlace ?politehnicaMemberBirthplace .
}
```",4,4,5,2,2,2,2,9,0,0,4,0,0.0,0
54,31,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?childOfFather
WHERE {
  ?thinkhaya dbo:child ?child1 .
  FILTER (str(?thinkhaya) = ""Thinkhaya_of_Pagan"") .

  ?father dbo:child ?child1 .
  
  ?fatherChild dbo:father ?father .
  ?fatherChild dbo:child ?childOfFather .

  ?thadoMinsaw dbo:parent ?childOfFather .
  FILTER (str(?thadoMinsaw) = ""Thado_Minsaw_of_Prome"") .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
9,26,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
PREFIX db: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?almaMater WHERE {
  ?person dbo:awardReceived <http://dbpedia.org/resource/Royal_Medals> .
  ?person db:almaMater ?almaMater .
}
```",3,4,4,3,1,3,3,71,0,0,31,0,0.0,0
391,54,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons and native of the figure known as Hub City.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?claimToFame WHERE {
  # Sherry Hormann's spouse
  ?spouse a dbo:Spouse;
          dbo:spouse dbr:Sherry_Hormann.
  
  # Actor of ""All About the Andersons""
  ?actor a dbo:Actor;
         dbo:film dbr:All_About_the_Andersons;
         dbo:spouse ?spouse.

  # Native of Greenville, South Carolina (Hub City)
  ?actor dbo:nativePlace dbr:Greenville,_South_Carolina.

  # Claim to fame
  ?actor dbo:claimToFame ?claimToFame.
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
345,20,test,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb and team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://dbpedia.org/ontology/birthDate> ?v4 . <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/manager> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname
WHERE {
  # Find Eiður Guðjohnsen's birthdate
  dbr:Eiður_Guðjohnsen dbo:birthDate ?birthDate .

  # Find a person who is both a soccer player and manager, born on the same date as Eiður Guðjohnsen
  ?person dbo:birthDate ?birthDate ;
          rdf:type dbo:SoccerPlayer , dbo:SoccerManager .

  # Find Armando Heeb's team
  dbr:Armando_Heeb dbp:team ?team .

  # Ensure the person is part of a sports club, organization, and soccer club
  ?team rdf:type dbo:SportsClub , dbo:Organization , dbo:SoccerClub .

  # The player should be in Armando Heeb's team
  ?person dbp:team ?team .

  # Retrieve the nickname of this player
  ?person dbp:nickname ?nickname .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
617,43,test,"Give me the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfAntiochusIII ?parentOfNysa ?spouseOfChildOfSuccessor
WHERE {
  # Antiochus III the Great and his child
  dbr:Antiochus_III_the_Great dbo:child ?childOfAntiochusIII .
  
  # Nysa and her parent
  dbr:Nysa_of_Pontus dbo:parent ?parentOfNysa .

  # Antiochus (son of Antiochus III the Great) and his successor
  ?antiochusChild dbo:child dbr:Antiochus_III_the_Great .
  ?successor dbo:succeededBy ?antiochusChild .
  
  # Child of the successor and their spouse
  ?successorChild dbo:child ?successor .
  ?successorChild dbo:spouse ?spouseOfChildOfSuccessor .

  # Ensure all are royalty
  ?childOfAntiochusIII a dbo:Monarch ;
                      rdfs:label ?antiochusLabel .
  ?parentOfNysa a dbo:Monarch ;
                rdfs:label ?nysaParentLabel .
  ?spouseOfChildOfSuccessor a dbo:Monarch ;
                           rdfs:label ?successorSpouseLabel .

  FILTER (CONTAINS(LCASE(?antiochusLabel), ""royalty"") &&
          CONTAINS(LCASE(?nysaParentLabel), ""royalty"") &&
          CONTAINS(LCASE(?successorSpouseLabel), ""royalty""))
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
801,20,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work ?artist ?producer
WHERE {
  ?work a dbo:MusicalWork ;
        dbo:song true ;
        dbo:creator ?artist .
  
  OPTIONAL { 
    ?work dbo:producer ?producer .
  }
  
  FILTER (str(?artist) = ""50 Cent"" || str(?producer) = ""50 Cent"")
}
```",3,6,4,2,2,3,3,71,0,0,27,0,0.0,0
360,21,test,Give me the writer of The Roaring Silence and native of Johannesburg and reference to the author of Blinded by the Light.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?nativeCity ?blindedByTheLightAuthor
WHERE {
  # Find the writer of ""The Roaring Silence""
  dbr:The_Roaring_Silence dbo:composer ?writer .
  
  # Ensure the writer is a native of Johannesburg
  ?writer dbo:nativePlace dbr:Johannesburg .

  # Reference to the author of ""Blinded by the Light""
  OPTIONAL {
    dbr:Blinded_by_the_Light dbo:lyricist ?blindedByTheLightAuthor .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
801,39,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of Westside Story (song).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find the writer of ""What U See Is What U Get""
  ?album dbo:writer ?writer .
  
  # Ensure the album is ""What U See Is What U Get""
  FILTER(STR(?album) = STR(dbr:What_U_See_Is_What_U_Get))
  
  # Find the producer of ""Westside Story (song)""
  ?westsideStory dbo:producer ?producer .

  # Ensure it's ""Westside Story (song)""
  FILTER(STR(?westsideStory) = STR(dbr:Westside_Story_(song)))

  # The writer must be a musical artist and an artist
  ?writer rdf:type dbo:MusicalArtist .
  ?writer rdf:type dbo:Artist .

  # The producer of ""Westside Story"" is the same as the writer of ""What U See Is What U Get""
  ?producer = ?writer .

  # Retrieve the associated artist
  ?writer foaf:name ?artist .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
314,26,test,"Give me the person deceased at the headquarter of House of Sombrerete and commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of 30.","SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?event ?awardNumber
WHERE {
  ?person a dbo:Person .
  
  # Deceased at the headquarters of House of Sombrerete
  ?deathEvent dbo:place dbr:Headquarters_of_House_of_Sombrerete ;
              dbo:agent ?person ;
              rdf:type dbo:Death .

  # Commander in profession
  ?profession dbp:title ""Commander"" ;
              dbo:agent ?person .
  
  # Event involving Lisa Gavrić and is a societal event
  ?event dbo:agent ?person, dbr:Lisa_Gavrić ;
         rdf:type dbo:Event, dbo:SocietalEvent .

  # Awardee of award number 30
  ?awardEvent dbo:recipient ?person ;
              dbp:number ""30""^^xsd:integer .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
281,57,test,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of Heather Roy.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfBeauchampSeymour ?countryOfBirthLeader1962Election ?warOfHeatherRoyProfession
WHERE {
  # War involving Beauchamp Seymour, 1st Baron Alcester
  dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:participatedIn ?warOfBeauchampSeymour .

  # Leader of the 1962 New South Wales state election and their birthplace country
  {
    SELECT DISTINCT ?leader1962Election (SAMPLE(?birthPlace) AS ?countryOfBirthLeader1962Election)
    WHERE {
      ?election dbo:winner ?leader1962Election .
      FILTER regex(str(?election), ""1962 New South Wales state election"", ""i"") .
      ?leader1962Election dbo:birthPlace ?birthPlace .
      ?birthPlace a dbo:Country .
    }
  }

  # Profession of Heather Roy involving a military unit
  dbr:Heather_Roy dbo:profession ?heatherRoyProfession .
  ?heatherRoyProfession dbo:partOf ?warOfHeatherRoyProfession .
  FILTER EXISTS { ?warOfHeatherRoyProfession a dbo:MilitaryUnit }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,63,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?native ?actor ?child
WHERE {
  # Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:residence ?residence .
  
  # The residence is a settlement and British
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Native of the residence
  ?native dbo:nativePlace ?residence .

  # Sean Pertwee's claim to fame (film and military conflict)
  dbr:Sean_Pertwee dbo:claimToFame ?fame .
  
  # The fame is both a film and a military conflict
  ?fame rdf:type dbo:Film ;
        dbo:relatedMilitaryConflict ?conflict .

  # Actor of the claim to fame (film)
  ?actor dbo:actedIn ?fame .

  # Jon Pertwee's child
  dbr:Jon_Pertwee dbp:birthName ""Jon Pertwee"" .
  ?child dbo:parent dbr:Jon_Pertwee .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
659,63,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander1 ?commander2
WHERE {
  # Find the war related to the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) dbo:participatedIn ?war .
  
  # Find the commander in that war
  ?war dbo:commander ?commander1 .

  # Find the military conflict involving Rutger Jan Schimmelpenninck
  dbr:Rutger_Jan_Schimmelpenninck dbo:involvedInMilitaryConflict ?conflict .
  
  # Find the commander in that conflict
  ?conflict dbo:commander ?commander2 .

  OPTIONAL {
    # Find the native office holder of Kingdom of Ireland
    ?officeHolder a dbo:OfficeHolder ;
                 dbo:nativeCountry dbr:Kingdom_of_Ireland ;
                 dbo:positionHeld ?position .
    
    # Link the commander to this office holder if applicable
    ?commander2 dbo:officeHolder ?officeHolder .
  }
}
```",7,13,8,3,3,3,3,71,0,0,15,0,0.0,0
232,31,test,Give me the actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?child
WHERE {
  # Find the actor of ""Dog Soldiers""
  dbr:Dog_Soldiers_(film) dbo:starring ?actor .

  # Get Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?birthName .

  # Find children of the person with that birth name
  ?person dbo:birthName ?birthName .
  ?person dbo:child ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
528,60,test,"Give me the force of the person born as the birth name of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?force ?warEvent
WHERE {
  # Find Narciso Campero's birth name
  dbr:Narciso_Campero_Latorre dbo:birthName ?birthName .

  # Find military forces involved in societal events (wars) in Chile
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:country dbr:Chile ;
                 dbo:participatedIn ?warEvent .
  
  # Link the birth name to any relevant force or event if applicable
  OPTIONAL {
    ?person dbo:birthName ?birthName .
    ?person dbo:militaryService ?militaryForce .
  }
}
```",6,7,7,3,2,3,3,71,0,0,4,0,0.0,0
232,24,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of London.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName WHERE {
    ?film dbo:actor dbr:Sean_Pertwee .
    ?conflict dbo:actor dbr:Sean_Pertwee .
    FILTER (rdf:type(?film, dbo:Film) && rdf:type(?conflict, dbo:MilitaryConflict))
    
    ?person dbo:birthPlace dbr:London .
    ?person rdfs:label ?actorName .
    FILTER (CONTAINS(LCASE(?actorName), ""sean pertwee""))
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
659,53,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find a commander in the Kingdom of Ireland's forces who holds an office
  ?commander dbo:officeHolderOf dbr:Kingdom_of_Ireland .
  ?commander dbo:militaryCommanderOf ?kingdomForce .

  # Ensure this person was also a commander in the Battle of Leipzig
  ?commander dbo:militaryCommanderOf dbr:Battle_of_Leipzig .

  # Find a societal event or military conflict involving Rutger Jan Schimmelpenninck
  ?event dbo:agent dbr:Rutger_Jan_Schimmelpenninck .
  FILTER (dbo:societalEvent(?event) || dbo:militaryConflict(?event))

  # Link the commander to this event
  ?commander dbo:participatedIn ?event
}
```",6,10,7,3,3,3,3,71,0,0,6,0,0.0,0
54,59,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya of Pagan
  ?thinkhaya a dbo:Monarch ;
             foaf:name ""Thinkhaya""@en .
  
  # Child of Thinkhaya
  ?child1 dbo:parent ?thinkhaya .

  # Father of the child of Thinkhaya (which is Thinkhaya himself)
  ?father dbo:child ?child1 .
  
  # Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Monarch ;
                foaf:name ""Thado Minsaw""@en .

  # Parent of Thado Minsaw
  ?parent dbo:child ?thadoMinsaw .

  # The person we are looking for is the child of Thinkhaya and parent of Thado Minsaw
  ?person dbo:parent ?thinkhaya ;
          dbo:child ?thadoMinsaw .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
10,25,test,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert and associated musical artist of the person born, that is an artist, as Matt Colton and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist
WHERE {
  # Find band members of Luke Francis Vibert
  ?person dbo:birthName ""Luke Francis Vibert""@en .
  ?person dbo:memberOfBand ?band .
  ?band dbo:bandMember ?bandMember .

  # Find associated musical artists with Matt Colton
  ?artist dbo:birthName ""Matt Colton""@en .
  ?artist dbo:associatedMusicalArtist ?associatedArtist .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
801,54,test,"Give me the professional in the alter ego of The Shadow and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of Chris Taylor (music producer).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional ?work WHERE {
  # Find the professional associated with ""The Shadow""
  ?shadowAlterEgo dbo:alterEgoName ""The Shadow"" .
  ?shadowAlterEgo dbo:associatedMusicalArtist ?professional .

  # Ensure the professional is a rapper
  ?professional rdf:type dbo:MusicalArtist ;
                dbo:genre dbr:Hip_hop_music .

  # Find works produced by this professional that are songs
  ?work dbo:producer ?professional ;
        rdf:type dbo:Songs .

  # Establish connection with Chris Taylor as a music producer
  ?chrisTaylor foaf:name ""Chris Taylor"" .
  ?chrisTaylor rdf:type dbo:MusicProducer .
  OPTIONAL { ?work dbo:associatedMusicalArtist ?chrisTaylor }
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
994,49,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist
WHERE {
  # Step 1: Find associated musical artist of Watchtower
  ?watchtower a dbo:Band ;
              dbo:associatedMusicalArtist ?artist1 .

  # Step 2: Find associated musical artist of the first result
  ?artist1 dbo:associatedMusicalArtist ?artist2 .

  # Step 3: Identify band member who is also a musical artist and born as a person
  ?person dbo:birthPlace ?place ;
          a dbo:Person, dbo:MusicalArtist ;
          dbo:bandMember ?bandMember .
  
  # Step 4: Ensure this person has a persona of Don Dokken
  ?persona dbo:associatedBand dbr:Don_Dokken ;
           dbo:person ?person .

  # Link the final artist to the band member
  ?artist2 dbo:bandMember ?bandMember .

  FILTER(?watchtower = dbr:Watchtower_(band))
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
392,28,test,"Give me the entity in the region, that is a country, of Central European Time and region of the time zone, that is a sports event, of Aguilar de Segarra and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v5 . ?v5 <http://dbpedia.org/ontology/province> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  ?timeZone a dbo:TimeZone ;
            rdfs:label ""Central European Time""@en .
  
  ?region dbo:timeZone ?timeZone .

  ?country a dbo:Country ;
           dbo:locatedIn ?region .

  ?sportsEvent a dbo:SportsEvent ;
               dbo:location dbr:Aguilar_de_Segarra .

  ?province dbo:contains ?sportsEvent ;
            dbo:residence ?settlement .

  ?settlement a dbo:Settlement ;
              dbo:resident ?person .
  
  ?person rdfs:label ""Sebastiano Bianchetti""@en ;
          dbo:nationality dbr:Italy .

}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
356,18,test,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton and player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v1 <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team
WHERE {
    # Find a person who is both a soccer player and manager, associated with Wolverhampton Wanderers
    ?person dbo:nationality dbr:Wolverhampton_Wanderers .
    ?person dbo:sport dbr:Soccer .
    ?person dbo:occupation dbr:Soccer_player .
    ?person dbo:occupation dbr:Soccer_manager .

    # Find the team of this person
    ?team dbo:manager ?person ;
          dbo:location dbr:Wolverhampton_Wanderers .

    # Determine the season that follows the predecessor of 2015 Sacramento Republic FC season
    ?sacramentoSeason dbo:sportTeam dbr:Sacramento_Republic_FC ;
                     dbo:year ""2015""^^xsd:gYear .
    
    ?predecessorSeason dbo:successor ?sacramentoSeason .

    ?successorSeason dbo:predecessor ?predecessorSeason .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
312,8,test,Give me the entity in the birthplace of Giorgio Grigolli and entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?bergamoEntity
WHERE {
  # Find Giorgio Grigolli's birthplace
  dbr:Giorgio_Grigolli dbo:birthPlace ?birthPlace .

  # Find entities in the Province of Bergamo
  ?bergamoEntity dbo:locatedIn dbr:Province_of_Bergamo .
}
```",3,3,4,2,2,2,2,9,0,0,228,0,0.0,0
314,22,test,Give me the awardee of the award of Sergei Makovetsky and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?awardeeName WHERE {
  # Find awards associated with Sergei Makovetsky
  ?award dbo:recipient dbr:Sergei_Makovetsky .
  
  # Find the awardee of that award
  ?award dbo:recipient ?awardee .

  # Get the name of the awardee
  ?awardee foaf:name ?awardeeName .

  OPTIONAL {
    # Find deceased persons at House of Sombrerete
    ?deceased dbo:deathPlace dbr:House_of_Sombrerete .
    
    # Ensure the awardee is the same as the deceased person
    FILTER (?awardee = ?deceased)
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
54,51,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of Narapati I of Ava.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin ;
         a dbo:OfficeHolder, dbo:Royalty .

  # This child must be the parent of Narapati I of Ava's child
  ?nChild dbo:parent ?child .
  ?nChild dbo:parent dbr:Narapati_I_of_Ava .

  # Find the predecessor (likely parent) of this identified child
  ?predecessor dbo:child ?child .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
182,28,test,Give me the war of the work of Gotabhaya Rajapaksa and entity in the nationality of Tamara Kunanayakam and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?nationality ?author
WHERE {
  # Gotabhaya Rajapaksa's works
  dbr:Gotabhaya_Rajapaksa dbo:works ?work .

  # Tamara Kunanayakam's nationality
  dbr:Tamara_Kunanayakam dbo:nationality ?nationality .

  # Author or related entity to the 2019 Sri Lanka Easter bombings
  dbr:Sri_Lanka_Easter_bombings_2019 dbo:author ?author .
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
959,61,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName
WHERE {
  # Find the manager of the 1998 Kashima Antlers season
  ?team dbr:Kashima_Antlers_season_1998 .
  ?team dbo:manager ?sportsManager .

  # Ensure the manager is a sports manager
  ?sportsManager rdf:type dbo:SportsManager .
  
  # Find the politician leader of the 2010 Japanese House of Councillors election
  ?election dbr:Japanese_House_of_Councillors_election,_2010 .
  ?election dbo:leader ?politician .

  # Get the country of residence for this politician
  ?politician dbp:nationality ?country .

  # Find the manager's name and ensure it matches the country of the politician
  ?sportsManager foaf:name ?managerName .
  
  FILTER(?country = ?teamResidence)
}
```",6,9,7,3,2,3,3,71,0,0,6,0,0.0,0
179,18,test,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of the child of Bhumibol Adulyadej.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?person ?birthName WHERE {
  # Find Nakkhatra Mangala's child who is royalty
  ?child dbo:parent dbr:Nakkhatra_Mangala ;
         foaf:name ?birthName ;
         schema:jobTitle ?royalty .

  FILTER(?royalty IN (dbo:King, dbo:Queen)).

  # Find Bhumibol Adulyadej's child and their parent
  ?bhumibolChild dbo:parent dbr:Bhumibol_Adulyadej .
  ?person dbo:child ?bhumibolChild .

  # Ensure the person is the same as Nakkhatra Mangala's royal child
  FILTER(?child = ?person)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
547,36,test,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?burialPlaceJamesBurton ?awardeeName ?burialPlaceAwardee
WHERE {
  # James Burton's resting place
  OPTIONAL {
    dbr:James_Burton_(Egyptologist) dbo:deathPlace ?burialPlaceJamesBurton .
  }

  # Awardee of Gerald Graham's award and their resting place
  OPTIONAL {
    ?awardee dbo:awardReceived dbr:Award_of_Gerald_Graham ;
             foaf:name ?awardeeName .
    OPTIONAL { 
      ?awardee dbo:deathPlace ?burialPlaceAwardee .
    }
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
427,51,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of Lamberto Andreotti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?romanoProdiBirthName ?romanoProdiParty ?andreottiFatherParty
WHERE {
  # Romano Prodi's birth name and party
  dbr:Romano_Prodi dbo:birthName ?romanoProdiBirthName .
  OPTIONAL { 
    dbr:Romano_Prodi dbo:partyAffiliation ?romanoProdiParty .
  }

  # Lamberto Andreotti's father's political party
  dbr:Lamberto_Andreotti dbo:father ?andreottiFather .
  OPTIONAL {
    ?andreottiFather dbo:partyAffiliation ?andreottiFatherParty .
  }
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
747,50,test,"Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMcSween ?songShepherd ?bandSong
WHERE {
  # Find the band of Tracey Elizabeth McSween
  OPTIONAL {
    ?person a dbo:Person ;
            foaf:name ""Tracey Elizabeth McSween"" .
    ?person dbo:musicGroup ?bandMcSween .
  }

  # Find a song written by Amba Shepherd and its associated band
  OPTIONAL {
    ?song dbo:writer dbr:Amba_Shepherd ;
          dbo:musicalWork ?work .
    ?work dbo:title ?songShepherd .
    ?work dbo:performer ?bandSong .
  }
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
9,28,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as QUB and alma mater of Allen Hill (scientist).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater
WHERE {
  # Find the mayor who is also a politician and associated with QUB
  ?mayor dbo:position dbr:Northern_Ireland_Forum ;
         dbo:almaMater ?almaMater ;
         dbo:politicalParty ?party .
  
  # Ensure this person has an association with Queen's University Belfast (QUB)
  ?person dbo:almaMater dbr:Queen's_University_Belfast ;
          rdf:type dbo:Politician .

  FILTER (?mayor = ?person)

  # Find Allen Hill and his alma mater
  dbr:Allen_Hill dbo:almaMater ?hillAlmaMater .
  
  # Ensure the alma maters match
  FILTER (?almaMater = ?hillAlmaMater)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
9,70,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  ?institution a dbo:EducationalInstitution ;
               dbo:location dbr:Northern_Ireland ;
               dbp:nickname ?nickname .

  ?politician dbo:almaMater ?institution ;
              rdf:type dbo:Politician ;
              dbo:positionTitle ""Mayor of the Northern Ireland Forum""^^xsd:string .

  ?award a dbo:Award ;
         rdfs:label ""Royal Medals""@en .
  
  ?awardee dbo:recipientOf ?award ;
           dbo:almaMater ?institution .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
184,52,test,"Give me the child of the child of Archduke Joseph Karl of Austria and parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity
WHERE {
  # Child of the child of Archduke Joseph Karl of Austria
  ?child1 dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  ?grandchild dbo:parent ?child1 .

  # Parent of Archduchess Ilona of Austria
  ?ilonaParent dbo:child dbr:Archduchess_Ilona_of_Austria .

  # Settlement at elevation 96.0 meters
  ?settlement a dbo:Settlement ;
              dbo:elevation ""96.0""^^xsd:float .

  # Find common entity among the three
  FILTER (?grandchild = ?ilonaParent && ?ilonaParent = ?settlement)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
391,52,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of All About the Andersons and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  ?person dbo:nickName ""Jackson, Tennessee"" .
  ?person dbo:spouseOrPartner ?partner .
  ?film dbo:starring ?person ;
        rdfs:label ""All About the Andersons""@en .
  ?work dbo:director ?ballhaus ;
         dbo:starring ?person .
  ?ballhaus rdfs:label ""Michael Ballhaus""@en .
  ?person dbo:nativePlace ?native .
}
```

- **Explanation**:
  - We use `dbo:nickName` to find the person associated with Jackson, Tennessee.
  - The `dbo:spouseOrPartner` is used as a placeholder for any relational link that might exist; this can be adjusted based on more specific data available in DBpedia.
  - We identify films and works involving the person using `dbo:starring`.
  - We ensure Michael Ballhaus is linked to one of these works with `dbo:director`.
  - Finally, we retrieve the native place using `dbo:nativePlace`.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
994,47,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist1 ?finalArtist2
WHERE {
  # Step 1: Find associated musical artist of Watchtower (band)
  dbr:Watchtower_(band) dbo:musicalArtist ?artist1 .
  
  # Step 2: Find associated musical artist of the first artist
  ?artist1 dbo:musicalArtist ?finalArtist1 .

  # Step 3: Identify Fredrik Thordendal's band which is a group and an organization
  dbr:Fredrik_Thordendal dbo:memberOfBand ?band .
  FILTER (dbo:Group IN (rdf:type/rdf:first) && dbo:Organization IN (rdf:type/rdf:first))
  
  # Step 4: Find associated musical artist of this band
  ?band dbo:musicalArtist ?artist2 .
  ?artist2 dbo:musicalArtist ?finalArtist2 .

}
```",5,9,6,3,2,3,3,71,0,0,5,0,0.0,0
659,66,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?event ?conflict
WHERE {
  # Arthur Wellesley, 1st Duke of Wellington's military force
  dbr:Athur_Wellesley_1st_Duke_of_Wellington dbo:militaryCommander ?wellingtonForce .
  
  # Rutger Jan Schimmelpenninck's involvement in a war
  dbr:Rutger_Jan_Schimmelpenninck dbo:commanderInWar ?schimmelpenninckConflict .

  # 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) dbo:militaryUnitOf ?polishGuard .
  
  # Societal event and military conflict related to Wellington's force
  ?wellingtonForce dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict .

  # Event and military conflict related to Schimmelpenninck
  ?schimmelpenninckConflict rdf:type dbo:MilitaryConflict .

  # Commander in the war involving the Polish regiment
  ?polishGuard dbo:commanderInWar ?commander .
  
  OPTIONAL {
    ?event dbo:participatedIn ?conflict .
    FILTER (?conflict != ?event)
  }
}
```",7,12,8,3,3,3,3,71,0,0,15,0,0.0,0
547,65,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorRestingPlace ?knightRestingPlace ?childRestingPlace WHERE {
  # Resting place of the actor from the show with Emily Richard
  {
    ?show dbo:starring dbr:Emily_Richard .
    ?show dbo:starring ?actor .
    ?actor dbo:deathPlace ?actorDeathPlace .
    OPTIONAL { ?actorDeathPlace dbp:burialPlace ?actorRestingPlace }
  }

  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?person dbo:honoursReceived dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
    ?person dbo:deathPlace ?knightDeathPlace .
    OPTIONAL { ?knightDeathPlace dbp:burialPlace ?knightRestingPlace }
  }

  # Resting place of the child of James Burton (property developer)
  {
    dbr:James_Burton_(property_developer) dbo:child ?child .
    ?child dbo:deathPlace ?childDeathPlace .
    OPTIONAL { ?childDeathPlace dbp:burialPlace ?childRestingPlace }
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
547,71,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/awards> ?v7 . ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v8 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v7 . ?v4 <http://dbpedia.org/property/starring> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace1 ?restingPlace2 ?restingPlace3 WHERE {
  # Resting place of the awardee of the award of Gerald Graham
  {
    ?award dbo:recipient ?awardee .
    ?award dbo:winner ?awardee .
    ?gGraham dbr:Gerald_Graham .
    ?gGraham dbo:award ?award .
    OPTIONAL { ?awardee dbo:deathPlace ?restingPlace1 }
  }

  # Resting place of the actor of the show with Emily Richard
  UNION
  {
    ?show dbo:starring ?actor .
    ?emilyRichard dbr:Emily_Richard .
    ?emilyRichard dbo:starring ?show .
    OPTIONAL { ?actor dbo:deathPlace ?restingPlace2 }
  }

  # Resting place of the child of the child of William Haliburton
  UNION
  {
    ?williamHaliburton dbr:William_Haliburton .
    ?child1 dbo:child ?williamHaliburton .
    ?grandChild dbo:child ?child1 .
    OPTIONAL { ?grandChild dbo:deathPlace ?restingPlace3 }
  }
}",9,9,10,3,3,3,3,71,0,0,1,0,0.0,0
55,28,test,"Give me the band of the reference, that is a band, to Newsted and band member of the producer, that is a band, of Used to Love Her and band member of the band member, that is a band and a group, of San Francisco Symphony.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band1 ?band2 ?band3
WHERE {
  # Find band associated with Newsted
  ?newsted a dbo:Band ;
           dbo:member ?person .
  
  ?person dbo:associatedBand ?band1 .

  # Find producer of ""Used to Love Her"" and their band membership
  dbr:Used_to_Love_Her dbo:producer ?producer .
  ?producer dbo:associatedBand ?band2 .

  # Find members of the San Francisco Symphony who are also in a band or group
  dbr:San_Francisco_Symphony dbo:member ?symphonyMember .
  ?symphonyMember dbo:associatedBandOrGroup ?band3 .
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
303,25,test,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Arnulfo Arias and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v4 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # El Valle de Antón is in Panama
  dbr:El_Valle_de_Ant%C3%B3n dbo:country dbr:Panama .

  # Arnulfo Arias was associated with a political party
  OPTIONAL { 
    dbr:Arnulfo_Arias dbo:party ?party .
    ?party rdf:type dbo:PoliticalParty .
  }

  # Politicians involved in the United States invasion of Panama
  OPTIONAL {
    ?politician rdf:type dbo:Politician ;
                dbo:participatedIn dbr:United_States_invasion_of_Panama .
  }
  
  # Union to find entities that are countries, political parties, or politicians
  VALUES (?entity) { 
    (dbr:Panama)
    ?party
    ?politician
  }
}",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
404,49,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  ?princess a dbo:Princess ;
            dbp:name ""Victoria Louise of Prussia"" .
  
  ?princess dbo:spouse ?spouse .

  ?father dbo:spouse ?princess .
  ?father dbo:child ?spouseChild .

  FILTER(?spouse = ?spouseChild) .

  ?spouseChild dbo:child ?child .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
427,62,test,Give me the reference to the name of the party of Michele Pinto and party of the father of the alumnus of Massachusetts Institute of Technology and party of Romano Prodi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v6 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?michelePartyLabel ?fatherPartyLabel ?prodiPartyLabel
WHERE {
  # Michele Pinto's party
  OPTIONAL {
    dbr:Michele_Pinto dbo:party ?micheleParty.
    ?micheleParty rdfs:label ?michelePartyLabel.
    FILTER(LANG(?michelePartyLabel) = ""en"")
  }

  # Alumnus of MIT and his father's party
  OPTIONAL {
    ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology.
    ?father dbo:child ?alumnus.
    ?father dbo:party ?fatherParty.
    ?fatherParty rdfs:label ?fatherPartyLabel.
    FILTER(LANG(?fatherPartyLabel) = ""en"")
  }

  # Romano Prodi's party
  OPTIONAL {
    dbr:Romano_Prodi dbo:party ?prodiParty.
    ?prodiParty rdfs:label ?prodiPartyLabel.
    FILTER(LANG(?prodiPartyLabel) = ""en"")
  }
}
```",7,7,8,3,3,3,3,71,0,12,2,0.0,0.0,0
547,48,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandchildRestingPlace ?knightRestingPlace
WHERE {
  # Part 1: Resting place of the child of the child of William Haliburton
  dbr:William_Haliburton dbo:spouse ?parent .
  ?parent dbo:child ?child .
  ?child dbo:child ?grandchild .
  OPTIONAL { ?grandchild dbo:deathPlace ?grandchildRestingPlace . }

  # Part 2: Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  ?knight dbo:honour dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
  OPTIONAL { ?knight dbo:deathPlace ?knightRestingPlace . }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
16,38,test,Give me the professional in the profession of Satomi Ishihara and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find Satomi Ishihara's profession
  ?satomiIshihara a dbo:Person ;
                  foaf:name ""Satomi Ishihara"" .
  
  ?satomiIshihara dbo:profession ?profession .

  # Find Gigi Rice's birth name
  ?gigiRice a dbo:Person ;
            foaf:name ""Gigi Rice"" .
  
  ?gigiRice foaf:mbox ?birthNameResource .
  ?birthNameResource rdfs:label ?birthName .

  # Find a person with the same profession and birth name
  ?person a dbo:Person ;
          dbo:profession ?profession ;
          foaf:name ?name .
  
  FILTER (?name = ?birthName)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
404,31,test,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?spouseBirthName WHERE {
  # Find Prince Ernest Augustus of Hanover (born 1914)
  ?person dbo:birthDate ?date .
  FILTER(YEAR(?date) = 1914 && STRSTARTS(STR(?person), ""http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover""))
  
  # Find his parent
  ?parent dbo:child ?person .

  # Find the spouse of that parent who is royalty
  ?spouse dbo:spouse ?parent .
  FILTER(STRSTARTS(STR(?spouse), ""http://dbpedia.org/resource/"") && EXISTS { ?spouse a dbo:RoyalFamilyMember })

  # Get the birth name of Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia dbp:birthName ?spouseBirthName .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
492,49,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedentKhemisMilianaCapital ?decedentSatterthwaiteWorkplace
WHERE {
  # Find the capital of Khemis Miliana District
  dbr:Khemis_Miliana_District dbo:capital ?capitalCity .
  
  # Find the decedent at the capital city
  ?decedentKhemisMilianaCapital dbo:location ?capitalCity .

  # Identify Joseph C. Satterthwaite's workplace
  dbr:Joseph_C._Satterthwaite dbo:officeLocation ?satterthwaiteWorkplace .
  
  # Find the decedent at Satterthwaite's workplace
  ?decedentSatterthwaiteWorkplace dbo:location ?satterthwaiteWorkplace .
}
```",5,6,6,3,2,3,3,71,0,0,16,0,0.0,0
10,20,test,"Give me the professional in  and associated musical artist of Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?associatedArtist ?bandMember
WHERE {
  # Matt Colton as a professional mastering engineer
  dbr:Matt_Colton dbo:profession dbr:Mastering_engineer .
  
  # Associated musical artist of Matt Colton
  ?professional dbo:worksFor ?associatedArtist .
  FILTER(?professional = dbr:Matt_Colton) .

  # Luke Francis Vibert as an artist and band member
  dbr:Luke_Francis_Vibert a dbo:MusicalArtist ;
                          dbo:memberOfBand ?bandMember .
  
  # Ensure the band member is also an artist
  ?bandMember a dbo:MusicalArtist .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
328,66,test,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/property/office> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Ferenc Szálasi's commander
  ?commander dbo:commanderOf dbr:Ferenc_Szálasi .
  
  # Awardee of Bruce Fraser's award
  ?awardee dbo:awardWinner dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .

  # Leader of a government agency led by Gustav Jonson
  ?agency dbo:leader dbr:Gustav_Jonson .
  ?person dbo:headOf ?agency .

  # The person must satisfy all conditions
  FILTER (?commander = ?awardee && ?awardee = ?person)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
427,34,test,Give me the party of Romano Prodi and reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?prodiPartyLabel ?pintoPartyLabel
WHERE {
  ?prodi dbo:partyAffiliation ?prodiParty .
  ?prodi rdfs:label ""Romano Prodi""@en .

  ?pinto dbo:partyAffiliation ?pintoParty .
  ?pinto rdfs:label ""Michele Pinto""@en .

  ?prodiParty rdfs:label ?prodiPartyLabel .
  ?pintoParty rdfs:label ?pintoPartyLabel .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
617,70,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Antiochus (son of Antiochus III the Great)
  ?antiochus a dbo:Person ;
             foaf:name ""Antiochus""@en ;
             dbo:father dbr:Antiochus_III_the_Great .

  # Successor of Antiochus
  ?successor dbo:predecessor ?antiochus .
  
  # Child of the successor who is royalty
  ?royalChild dbo:childOf ?successor ;
              a dbo:RoyalPerson .

  # Spouse of the royal child
  ?spouse dbo:spouse ?royalChild .

  # Commander in Battle of Panium and his child
  ?commander dbo:participatedIn dbr:Battle_of_Panium .
  ?childOfCommander dbo:parent ?commander ;
                   dbo:parent ?spouse .

  # Seleucus II Callinicus and his royal child
  ?seleucus a dbo:Person ;
            foaf:name ""Seleucus_II_Callinicus""@en .
  ?royalChildOfSeleucus dbo:childOf ?seleucus ;
                        a dbo:RoyalPerson ;
                        dbo:parent ?spouse .

}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
184,58,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of Géza von Habsburg and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commonParent
WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret dbo:birthYear ""1925""^^xsd:gYear .
  ?margaret foaf:name ""Margaret of Austria""@en .

  # Parent of Margaret
  ?parent1 dbo:child ?margaret .
  
  # Child of the parent of Margaret
  ?grandchild1 dbo:parent ?parent1 .

  # Géza von Habsburg
  ?geza foaf:name ""Géza von Habsburg""@en .

  # Parent of Géza
  ?parent2 dbo:child ?geza .

  # Archduke Joseph Karl of Austria
  ?josephKarl foaf:name ""Joseph Karl of Austria""@en .

  # Child of Joseph Karl
  ?child1 dbo:parent ?josephKarl .
  
  # Grandchild of Joseph Karl
  ?grandchild2 dbo:parent ?child1 .

  # Find a common entity that fits all these relationships
  FILTER (?grandchild1 = ?geza || ?grandchild1 = ?grandchild2)
  FILTER (?parent2 = ?parent1)

  # Return the parent of this common entity
  ?commonParent dbo:child ?grandchild1 .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
404,69,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Princess Victoria Louise of Prussia
  ?princess a dbo:Person ;
            foaf:name ""Princess Victoria Louise of Prussia""@en ;
            dbo:birthName ?birthName .

  # Her spouse (who is royalty)
  ?princess dbo:spouse ?spouse .
  ?spouse a dbo:Monarch .

  # Child of her spouse and Ernest Augustus, Duke of Brunswick
  ?child dbo:parent ?spouse ;
         dbo:parent dbr:Ernest_Augustus,_Duke_of_Brunswick ;
         a dbo:RoyalFamilyMember .

  # Father of the spouse
  ?father dbo:child ?spouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,24,test,Give me the parent of Archduchess Ilona of Austria and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild
WHERE {
  ?parent dbo:child dbr:Archduchess_Ilona_of_Austria .
  
  ?child dbo:child dbr:Archduke_Joseph_Karl_of_Austria .
  ?grandchild dbo:child ?child .

  FILTER (?parent = ?grandchild)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
820,17,test,Give me the child of the parent of the professional in Actor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?child
WHERE {
  ?actor a dbo:Actor .
  ?actor dbo:profession ?profession .
  FILTER(CONTAINS(LCASE(str(?profession)), ""actor"")) .

  ?parent dbo:spouseOrPartner ?actor ;
          foaf:child ?child .

}
```",4,4,5,3,2,3,2,20,0,0,128,0,0.0,0
767,71,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v8 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . ?v5 <http://dbpedia.org/property/governor> ?v4 . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v4 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v7 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoReference WHERE {
  # Matthew Burland's alter ego (fictional character)
  ?matthew a dbo:Person ;
           dbo:fictionalCharacter ?alterEgo .
  
  # Alma mater of the administration related to George Kilbon Nash
  ?georgeKilbonNash a dbo:Person ;
                    dbo:almaMater ?administrationAlmaMater .

  # Entity in the administration that is a settlement where ""Where It's At"" was written
  ?dustinLynchAlbum dbr:Where_It%27s_At_(Dustin_Lynch_album) ;
                    dbo:writer ?writer .
  
  ?settlement a dbo:Settlement ;
              dbo:location ?writer .

  # Linking the fictional character to the settlement via alma mater
  ?alterEgoReference dbo:almaMater ?administrationAlmaMater ;
                     dbo:location ?settlement .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
77,17,test,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw and war of Alexander Chechenskiy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?force WHERE {
  # Find the mayor of Warsaw
  ?mayor dbo:position dbr:Mayor_of_Warsaw .
  
  # Find an organization administering a territory related to Alexander Chechenskiy
  ?organization dbo:administers ?territory .
  ?territory dbo:relatedTo dbr:Aleksandr_Chechenetskiy .

  # Assuming 'force' is represented by military strength or similar attribute
  OPTIONAL { ?mayor dbo:militaryStrength ?force . }
  
  FILTER EXISTS {
    ?organization a dbo:Organization .
  }
}
```",4,5,5,3,2,3,2,20,0,0,6,0,0.0,0
54,58,test,"Give me the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:childOf dbr:Thinkhaya_of_Pagan .
  
  # Narapati I of Ava's child's parent (Narapati I himself)
  ?narapatiIChild dbo:parent dbr:Narapati_I_of_Ava ;
                  dbo:childOf ?person .

  # Thihapate of Mohnyin's child's predecessor
  ?thihapateChild dbo:predecessor ?person ;
                  dbo:childOf dbr:Thihapate_of_Mohnyin .
  
  # Ensure the person is an office holder and royalty
  ?person a dbo:Monarch ;
          dbo:officeHolder true .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
391,55,test,"Give me the native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor ?nativeCity WHERE {
  # Hub City (Pittsburgh) and its native actors
  dbr:Pittsburgh dbo:nativeName ""Hub City"" .
  
  ?actor dbo:nationality dbr:United_States ;
         dbo:birthPlace dbr:Pittsburgh .

  OPTIONAL {
    ?movie dbo:starring ?actor ;
           dbp:starringRozRyan true ;
           a dbo:Film .
    
    ?work dbo:starring ?actor ;
          a dbo:Work, dbo:TelevisionShow .
  }
  
  # Michael Ballhaus's claim to fame
  dbr:Michael_Ballhaus dbo:claimToFame ?fameWork .
  OPTIONAL {
    ?fameWork dbo:starring ?actor .
  }

}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
701,28,test,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?henuttawyParent ?ramessesSpouse WHERE {
  # Henuttawy (19th dynasty) and her parent
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy (19th dynasty)""@en .
  OPTIONAL { ?henuttawy dbo:parent ?henuttawyParent . }

  # Ramesses II's spouse who is also the parent of Nefertari's child
  ?ramesses dbr:Ramesses_II ;
            dbo:spouse ?ramessesSpouse .

  ?nefertari a dbo:Person ;
             rdfs:label ""Nefertari""@en .
  OPTIONAL { ?nefertariChild dbo:parent ?nefertari . }
  OPTIONAL { ?nefertariChild dbo:parent ?ramessesSpouse . }

  # Ensure the spouse is also a parent of Nefertari's child
  FILTER (?ramessesSpouse = ?henuttawyParent)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
16,45,test,Give me the spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University and professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?birthName
WHERE {
  # Find Ted McGinley's spouse
  dbr:Ted_McGinley dbo:spouse ?spouse .

  # Find an actress who is an alumnus of Ohio State University and get her birth name
  ?alum a dbo:Alumni ;
        foaf:name ?name ;
        dbo:almaMater dbr:Ohio_State_University ;
        rdf:type dbo:Actress .
  
  OPTIONAL { ?alum foaf:mbox ?email . } # Optional to enrich data if needed

  ?alum foaf:birthday ?birthDate .

  # Get the birth name of the alum
  ?alum foaf:name ?birthName .

  FILTER(?name != ?spouse) # Ensure we don't match the same person
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
328,64,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in Eastern Front (World War II) and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader
WHERE {
  # Gustav Jonson as commander in Eastern Front (World War II)
  ?gustavJonson dbo:commanderInMilitaryUnit dbr:Eastern_Front_(World_War_II) .
  
  # Gustav Jonson as awardee of an award related to Volcano and Ryukyu Islands campaign
  ?gustavJonson dbo:award dbr:Award_for_Volcano_and_Ryukyu_Islands_campaign .

  # The leader of the office that is a government agency
  ?office dbo:type dbr:Government_agency .
  
  # The leader of this office is an office holder and a politician
  ?leader dbo:positionHeld ?office ;
          dbo:occupation dbr:Politician ;
          dbo:officeHolder ?office .

  # Link Gustav Jonson to the office through its leader
  ?gustavJonson dbo:subordinateOf ?leader .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
54,52,test,Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Narapati I of Ava's child and their parent
  ?narapatiI dbr:Narapati_I_of_Ava .
  ?child1 dbo:childOf ?narapatiI .
  ?parent dbo:parentOf ?child1 .

  # Thinkhaya of Pagan's child and his father (Thinkhaya)
  ?thinkhaya dbr:Thinkhaya_of_Pagan .
  ?child2 dbo:childOf ?thinkhaya .
  
  # Ameitta Thiri Maha Dhamma Dewi of Ava's predecessor
  ?ameitta dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .
  ?predecessor dbo:predecessor ?ameitta .

  # Find the common entity between Thinkhaya's child and Ameitta's predecessor
  FILTER (?child2 = ?predecessor)

  # The parent of this common entity is what we need
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
9,54,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as QUB.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeName ?awardeeAlmaMater ?mayorName ?mayorAlmaMater ?qubFigure ?qubFigureAlmaMater
WHERE {
  # Awardees of Royal Medals and their alma mater
  ?awardee dbo:award dbr:Royal_Medal .
  ?awardee foaf:name ?awardeeName .
  OPTIONAL { ?awardee dbo:almaMater ?awardeeAlmaMater . }
  
  # Mayor of Northern Ireland Forum and their alma mater
  ?mayor dbo:position dbr:Northern_Ireland_Forum_Mayor .
  ?mayor foaf:name ?mayorName .
  OPTIONAL { ?mayor dbo:almaMater ?mayorAlmaMater . }
  
  # Figure known as QUB (Queen's University Belfast)
  ?qubFigure dbo:almaMater dbr:Queens_University_Belfast .
  ?qubFigure foaf:name ?qubFigureName .
  OPTIONAL { ?qubFigure dbo:almaMater ?qubFigureAlmaMater . }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
492,68,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/author> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v5 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commanderInVerdun ?militaryConflict ?personDecedentAlgiers ?authorFrenchAlgeria ?personDecedentAuthorWork
WHERE {
  # Commander in the Battle of Verdun
  dbr:Battle_of_Verdun dbo:commander ?commanderInVerdun .
  
  # Military conflict involving this commander
  ?militaryConflict a dbo:MilitaryConflict ;
                   dbo:commander ?commanderInVerdun .

  # Capital of Algeria and person decedent there
  dbr:Algiers a dbo:Settlement, dbo:CapitalCity ;
              dbp:country dbr:Algeria .
  
  ?personDecedentAlgiers dbo:deathPlace dbr:Algiers .

  # Author of ""French Algeria"" and person decedent at their work location
  dbr:François_Mitterrand dbo:author dbr:French_Algeria .
  ?workLocation dbo:author dbr:François_Mitterrand .
  
  ?personDecedentAuthorWork dbo:deathPlace ?workLocation .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
488,55,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in Boshin War and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceYūkiFather ?birthPlaceBoshinCommander ?administrationGoMizunooFather
WHERE {
  # Yūki Hideyasu's father and his death place
  dbr:Yūki_Hideyasu dbo:father ?yukiFather .
  ?yukiFather dbo:deathPlace ?deathPlaceYūkiFather .

  # Commander in Boshin War and their birth place
  ?boshinCommander dbo:occupation dbr:Boshin_War_commander .
  ?boshinCommander dbo:birthPlace ?birthPlaceBoshinCommander .

  # Emperor Go-Mizunoo's father and his administration
  dbr:Emperor_Go-Mizunoo dbo:father ?goMizunooFather .
  ?goMizunooFather dbo:positionHeld ?administrationGoMizunooFather .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
378,70,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?commander ?claimToFame
WHERE {
  # Thomas Trigge and his wars
  OPTIONAL {
    ?trigge dbo:occupation dbr:Military_person .
    ?trigge dbo:knownFor ?claimToTriggeFame .
    ?trigge dbo:participatedIn ?war .
    FILTER(?war != dbr:Peninsular_War) # Exclude Peninsular War for Trigge
  }
  
  # Peninsular War details
  {
    ?peninsularWar a dbo:MilitaryConflict ;
                   rdfs:label ""Peninsular War""@en .
    OPTIONAL { ?peninsularWar dbo:commander ?commander . }
    OPTIONAL { ?peninsularWar dbo:claimToFame ?claimToPeninsularFame . }
  }

  # Carl Pontus Gahn and his wars
  OPTIONAL {
    ?gahn a dbo:Military_person ;
          rdfs:label ""Carl Pontus Gahn""@en .
    ?gahn dbo:participatedIn ?war .
    FILTER(?war != dbr:Peninsular_War) # Exclude Peninsular War for Gahn
  }
}
ORDER BY ?commander",8,12,9,3,3,3,3,71,0,37,2,0.0,0.0,0
617,67,test,"Give me the parent of the child of the commander in Battle of Panium and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Commander in Battle of Panium
  ?commander dbo:participatedInBattle dbr:Battle_of_Panium .
  
  # Child of the commander
  ?child dbo:parent ?commander .

  # Antiochus (son of Antiochus III)
  ?antiochus dbr:Antiochus_III_the_Great dbo:son ?antiochusSon .

  # Successor of Antiochus
  ?successor dbo:succeededBy ?antiochusSon .

  # Child of the successor
  ?childOfSuccessor dbo:parent ?successor .

  # Spouse of the child of the successor, who is royalty and a child of Antiochus III
  ?spouse dbo:spouse ?childOfSuccessor ;
          rdf:type dbo:RoyalPerson ;
          dbo:parent ?antiochusIII .
  
  # Parent of the child of the commander in Battle of Panium
  ?parent dbo:parent ?child .

  FILTER (?spouse = ?child)
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
747,60,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band
WHERE {
  # Find the person known as Shèna
  ?shena a dbo:Person ;
         rdfs:label ""Shèna""@en .

  # Get the birth date of the decedent
  ?decedent a dbo:Person ;
            dbp:dateOfBirth ?birthDateDecedent .

  # Find another person with the same birth date as the decedent
  ?person a dbo:Person ;
          dbp:dateOfBirth ?birthDateDecedent .

  # Ensure this person is an athlete and soccer player at Zolotonosha
  ?person dbo:sport dbr:Soccer ;
          dbo:placeOfBirth dbr:Zolotonosha ;
          dbo:occupation dbr:Athlete .

  # Find the band of this person
  ?person dbp:band ?band .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
492,66,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v6 . ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v6 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentCapital ?personDecedentSatterthwaite ?commanderHerr
WHERE {
  # Find the capital of Khemis Miliana District
  dbr:Khemis_Miliana_District dbo:capital ?capital .
  
  # Ensure the capital is a settlement
  ?capital rdf:type dbo:Settlement .

  # Find person decedent at this capital
  ?personDecedentCapital dbo:placeOfBirth ?capital .

  # Find Joseph C. Satterthwaite's work and associated person decedent
  dbr:Joseph_C._Satterthwaite dbo:occupation dbr:US_Assistant_Secretary_of_State_for_African_Affairs .
  ?personDecedentSatterthwaite dbo:employer dbr:Joseph_C._Satterthwaite .

  # Find the military conflict involving Frédéric-Georges Herr
  ?conflict rdf:type dbo:MilitaryConflict ;
            dbo:commander ?frédéricHerr .
  
  # Ensure Frédéric-Georges Herr is involved
  dbr:Frédéric-Georges_Herr dbo:commanderIn ?conflict .

  # Find the commander in this conflict
  ?commanderHerr dbo:commanderIn ?conflict .
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
778,19,test,"Give me the author of the work, that is a software, of the author of Pushd and popd and entity in the award of Ralph L. Brinster.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorOfSoftware ?awardEntity
WHERE {
  # Find the author of ""pushd"" and ""popd""
  ?software dbo:wikiPageRedirects dbr:Pushd .
  ?software dbo:wikiPageRedirects dbr:Popd .
  ?software dbo:creator ?authorOfSoftware .

  # Find the award associated with Ralph L. Brinster
  ?award dbo:recipient dbr:Ralph_L._Brinster .
  ?award dbo:name ?awardEntity .

  # Link the author of the software to the award entity
  ?authorOfSoftware dbo:wikiPageRedirects ?awardEntity .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
360,22,test,"Give me the writer of the work, that is an album, of Dave Flett and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # Find the album associated with Dave Flett
  ?album dbo:composer dbr:Dave_Flett .
  
  # Get the writer of that album
  ?album dbo:writer ?writer .

  # Find the death place of Winnie Madikizela-Mandela
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?settlement .

  # Ensure the settlement is a type of settlement
  ?settlement rdf:type dbo:Settlement .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
666,18,test,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach) and figure known as the nickname of England national beach soccer team.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . },"SELECT ?playerInManager ?nickname
WHERE {
  # Find Leonid Slutsky's team
  ?team a dbo:SoccerClub ;
        dbo:manager dbr:Leonid_Slutsky .
  
  # Ensure the team is also a sports team season
  ?teamSeason a dbo:SportsTeamSeason ;
              dbo:sportsTeam ?team .

  # Get the player in the manager who is a sports manager
  ?playerInManager a dbo:Person ;
                   dbo:occupation dbr:Sports_Manager ;
                   dbo:managerOf ?team .
  
  # Find the nickname of the England national beach soccer team
  dbr:England_national_beach_soccer_team a dbo:NationalSoccerTeam ;
                                          rdfs:label ?nickname .
}
```",5,8,6,3,2,3,2,20,0,0,2,0,0.0,0
701,20,test,Give me the parent of the child of Ramesses II and parent of Meritamen.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfChild ?parentOfMeritamen
WHERE {
  # Find a child of Ramesses II
  ?child dbo:father dbr:Ramesses_II .
  
  # Find the parent of that child (could be mother or father)
  OPTIONAL { ?child dbo:mother ?mother . BIND(?mother AS ?parentOfChild) }
  OPTIONAL { ?child dbo:father ?father . FILTER(?father != dbr:Ramesses_II). BIND(?father AS ?parentOfChild) }

  # Find the parent of Meritamen
  OPTIONAL { ?meritamen dbp:father ?fatherMeritamen . BIND(?fatherMeritamen AS ?parentOfMeritamen) }
  OPTIONAL { ?meritamen dbp:mother ?motherMeritamen . BIND(?motherMeritamen AS ?parentOfMeritamen) }

  # Ensure we have both parents identified
  FILTER(?parentOfChild != """" && ?parentOfMeritamen != """")
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,68,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v7 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander ?war
WHERE {
  # Rutger Jan Schimmelpenninck's military force
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryCommanded ?militaryForce .
  
  # The military force is a societal event and a military conflict
  ?militaryForce rdf:type dbo:SocietalEvent ;
                rdf:type dbo:MilitaryConflict .

  # Commander in the military force who is also an office holder in Kingdom of Ireland
  ?commander dbo:officeHolderOf dbr:Kingdom_of_Ireland .
  ?militaryForce dbo:militaryCommandedBy ?commander .

  # The commander's involvement in another war
  ?war rdf:type dbo:Event ;
       rdf:type dbo:MilitaryConflict .
  ?commander dbo:militaryCommandedBy ?war .

  # Figure known as 'Polish Horse'
  dbr:Polish_Horse rdf:type dbo:MilitaryUnit ;
                   rdf:type dbo:Organization .
}
```",8,16,9,3,3,3,3,71,0,0,15,0,0.0,0
9,45,test,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMaterJohn ?almaMaterAllen ?institution ?nickname
WHERE {
  # Alma mater of John Alderdice, Baron Alderdice
  dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMaterJohn .

  # Alma mater of Allen Hill (scientist)
  dbr:Allen_Hill_(scientist) dbo:almaMater ?almaMaterAllen .

  # Organization and educational institution in Northern Ireland with a nickname
  ?institution a dbo:EducationalInstitution ;
               dbp:country dbr:Northern_Ireland ;
               dbp:nickname ?nickname .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
281,25,test,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Heather Roy""@en .
  
  ?person dbo:profession ?profession .
  FILTER (CONTAINS(LCASE(?profession), ""war"") || CONTAINS(LCASE(?profession), ""military""))

  ?person dbo:militaryUnit ?militaryUnit .

  OPTIONAL {
    ?militaryUnit dbo:country dbr:New_Zealand ;
                  dbo:era dbr:Colonial_New_Zealand .
  }
}
```

- **Explanation**:
  - We start by identifying Heather Roy as a `Person`.
  - We filter her professions to include those related to war or military.
  - We link her to a military unit and optionally check if this unit is associated with New Zealand during its colonial era.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
182,24,test,Give me the entity in the nationality of Tamara Kunanayakam and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?nationality ?war
WHERE {
  # Tamara Kunanayakam's nationality
  ?tamara a dbo:Person ;
          foaf:name ""Tamara Kunanayakam"" .
  ?tamara dbo:nationality ?nationality .

  # Gotabhaya Rajapaksa's work related to war
  ?gotabhaya a dbo:Person ;
             foaf:name ""Gotabhaya Rajapaksa"" .
  ?work foaf:primaryTopic ?gotabhaya ;
        dbo:subject ?war .
  FILTER(?war a dbo:MilitaryConflict)
}
```",4,4,5,2,2,2,3,28,0,0,5,0,0.0,0
994,19,test,Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of Red Tide (band).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Find associated artists for Watchtower
  ?watchtowerArtist dbo:associatedMusicalArtist dbr:Watchtower .
  
  # Find associated artists of the artist found above
  ?artist1 dbo:associatedMusicalArtist ?watchtowerArtist .

  # Find associated artists for Red Tide
  ?redTideArtist dbo:associatedMusicalArtist dbr:Red_Tide .
  
  # Find associated artists of the artist found above
  ?artist2 dbo:associatedMusicalArtist ?redTideArtist .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
747,41,test,Give me the person born on the birth date of Pavlo Khudzik and band of Shèna and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?band1 ?band2
WHERE {
  # Find Pavlo Khudzik's birth date
  VALUES ?khudzikBirthDate { 
    SELECT ?birthDate WHERE { dbr:Pavlo_Khudzik dbo:birthday ?birthDate }
  }

  # Find person born on the same date as Pavlo Khudzik
  ?person dbo:birthday ?sameBirthDate .
  FILTER (?sameBirthDate = ?khudzikBirthDate)

  # Find Shèna's band
  dbr:Shèna dbo:band ?band1 .

  # Find writer of ""Apollo"" by Hardwell and their band
  ?apolloSong dbo:lyricsBy ?writer .
  ?writer dbo:band ?band2 .
  FILTER (str(?apolloSong) = ""Hardwell:Apollo"")

}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
915,16,test,"Give me the resident of the birthplace, that is a settlement, of Stephen Verona and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://dbpedia.org/ontology/residence> ?v2 . <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?resident ?father
WHERE {
  # Stephen Verona's birthplace that is a settlement
  ?verona dbo:birthPlace ?settlement .
  FILTER (rdf:type(?settlement, dbo:Settlement)) .

  # Resident of the settlement
  ?residence dbo:location ?settlement .
  ?resident dbp:residence ?residence .

  # Phillip Spaulding's child who is a fictional and soap character
  ?spauldingChild dbo:childOf ?spaulding ;
                  rdf:type dbo:FictionalCharacter, dbo:SoapCharacter .

  # Father of the child
  ?spaulding dbp:child ?spauldingChild .
  ?father dbp:child ?spauldingChild .
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
184,49,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChildOfParent ?parentOfNative
WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            foaf:name ""Margaret of Austria"" ;
            dbo:birthYear ""1925""^^xsd:gYear ;
            dbo:parent ?parent1 .

  ?childOfParent a dbo:Person ;
                 dbo:parent ?parent1 .
  
  ?parentOfChildOfParent a dbo:Person ;
                         dbo:parent ?childOfParent .

  # Native of Budapest
  ?native a dbo:Person ;
          dbo:nativePlace dbr:Budapest .
  
  ?parentOfNative a dbo:Person ;
                  dbo:parent ?native .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
994,41,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist
WHERE {
  # Step 1: Find associated musical artist of Watchtower
  ?watchtowerArtist dbo:musicalArtist dbr:Watchtower .
  
  # Step 2: Find associated musical artist of the first artist
  ?secondArtist dbo:musicalArtist ?watchtowerArtist .

  # Step 3: Identify a band member of Don Dokken
  ?donDokkenMember dbo:memberOfBand dbr:Don_Dokken .
  
  # Step 4: Find associated musical artist of the Don Dokken band member
  ?associatedArtist dbo:musicalArtist ?donDokkenMember .

  # Step 5: Identify a Meshuggah band member who is also a band/group/organization
  ?meshuggahMember dbo:memberOfBand dbr:Meshuggah ;
                  a ?bandType .
  
  FILTER (?bandType IN (dbo:Band, dbo:MusicalGroup, dbo:Organization))

  # Final condition to match the associated artist from step 4 with the band member type
  ?associatedArtist = ?meshuggahMember .

  # Resulting artist
  BIND(?secondArtist AS ?finalArtist)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
161,56,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in the force, that is an event, of the figure known as El Director and military force of Spanish Civil War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?commanderRole
WHERE {
  # Francisco Franco's military force in societal and military conflicts
  ?francoEvent a dbo:MilitaryConflict ;
               dbo:militaryCommander dbr:Franco,_Francisco .
  
  ?societalEvent a dbo:SocietalEvent ;
                 dbo:relatedMilitaryConflict ?francoEvent .

  ?militaryForce dbo:commander ?francoEvent ;
                 dbo:partOf dbr:Spanish_Civil_War .

  # El Director's role in an event
  ?elDirectorEvent a dbo:Event ;
                   dbo:militaryCommander dbr:""El_Director"" .
  
  ?commanderRole dbo:commander ?elDirectorEvent .

  # Linking to the Spanish Civil War
  ?civilWarEvent a dbo:MilitaryConflict ;
                 rdfs:label ""Spanish Civil War""@en ;
                 dbo:participatingMilitaryForce ?militaryForce .
}
```",6,10,7,3,3,3,3,71,0,0,32,0,0.0,0
318,8,test,Give me the professional in the profession of Robert Xavier Rodriguez and person born in 1970.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthYear WHERE {
    # Get Robert Xavier Rodriguez's profession
    dbr:Robert_Xavier_Rodriguez dbo:profession ?profession .

    # Find persons with the same profession and born in 1970
    ?person a dbo:Person ;
            dbo:profession ?profession ;
            dbo:birthDate ?birthDate .
    
    BIND(YEAR(?birthDate) AS ?birthYear)

    FILTER (?birthYear = 1970)
}
```",3,3,4,2,2,2,2,9,0,0,7,0,0.0,0
659,43,test,"Give me the military force of Napoleonic Wars and commander in German campaign of 1813 and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?campaignCommander ?warCommander WHERE {
  # Napoleonic Wars as a military conflict
  dbr:Napoleonic_Wars a dbo:MilitaryConflict .

  # German campaign of 1813 as an event
  dbr:German_campaign_of_1813 a dbo:Event .

  # Polish Horse as a military unit and organization
  dbr:Polish_Horse a (dbo:MilitaryUnit|dbo:Organization) .

  # Military force involved in the Napoleonic Wars
  ?militaryForce dbo:partOf dbr:Napoleonic_Wars .
  
  # Commander during the German campaign of 1813
  ?campaignCommander dbo:commanderOf dbr:German_campaign_of_1813 .
  
  # Overall commander of the Napoleonic Wars
  ?warCommander dbo:commanderOf dbr:Napoleonic_Wars .

  # Ensure Polish Horse is involved in the military force
  ?militaryForce dbo:member dbr:Polish_Horse .
}
```",5,9,6,3,3,3,3,71,0,0,6,0,0.0,0
963,19,test,"Give me the administration of the ruling party, that is a political party, in the location for 21205 and entity in the region, that is a country, of Central European Time.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?rulingParty ?administration
WHERE {
  ?location a dbo:Place ;
            dbp:postalCode ""21205""^^xsd:string .
  
  ?country dbo:timeZone dbr:Central_European_Time ;
           dbo:contains ?location .

  ?party a dbo:PoliticalParty ;
         dbo:hasMember ?rulingParty ;
         dbo:isRulingIn ?location .

  ?rulingParty dbp:administration ?administration .
}
```",5,7,6,3,2,3,2,20,0,0,84,0,0.0,0
391,53,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actorName ?nativePlace WHERE {
  # Find the nickname of Jackson, Tennessee
  ?city foaf:name ""Jackson, Tennessee"" .
  ?city foaf:nick ?nickname .

  # Find the movie that is a work and television show with Roz Ryan
  ?movie dbo:starring ?rozRyan ;
         rdf:type dbo:Film ;
         dbo:workExample ?televisionShow .

  ?rozRyan foaf:name ""Roz Ryan"" .

  # Find the actor of this movie who also acted in The Departed
  ?actor dbo:starring ?movie .
  ?actor dbo:starring ?departedMovie .
  
  ?departedMovie foaf:name ""The Departed""@en .

  # Get the native place of the actor
  ?actor foaf:birthPlace ?nativePlace .
  ?nativePlace rdfs:label ?cityLabel .

  FILTER (lang(?cityLabel) = 'en')

  # Return the actor's name and native place
  ?actor foaf:name ?actorName .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,70,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX p: <http://www.wikidata.org/prop/>

SELECT ?nativeOfResidence
WHERE {
  # John Pertwee's child who is an actor, narrator, and producer
  wd:Q1234567 p:P40 ?child .  # Replace Q1234567 with the actual Wikidata ID for John Pertwee
  ?child wdt:P31/wdt:P279* wd:Q33999 ;  # Actor (Q33999)
         wdt:P106/wdt:P279* wd:Q49770, wd:Q245000 .  # Narrator (Q49770), Producer (Q245000)

  # Claim to fame involving a film and a military conflict
  ?child p:P166 ?claimToFame .
  ?claimToFame wdt:P31/wdt:P279* wd:Q11424, wd:Q482994 .  # Film (Q11424), Military Conflict (Q482994)

  # Politician and office holder from France associated with the claim to fame
  ?politician p:P166 ?claimToFame .
  ?politician wdt:P27 wd:Q142 ;  # French nationality (Q142)
              wdt:P106/wdt:P279* wd:Q82955 .  # Politician (Q82955)

  # Residence that is a settlement and British
  ?politician p:P551 ?residence .
  ?residence wdt:P31/wdt:P279* wd:Q4167410 ;  # Settlement (Q4167410)
             wdt:P17 wd:Q145 .  # British (Q145)

  # Native of the residence
  ?nativeOfResidence p:P19 ?residence .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
16,69,test,Give me the spouse of the person born as the birth name of Ted McGinley and person born as the birth name of the alumnus of Ohio State University and professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouseTed ?spouseAlumnus
WHERE {
  # Ted McGinley's birth name and spouse
  dbr:Ted_McGinley dbo:birthName ?birthNameTed .
  ?personTed dbo:birthName ?birthNameTed ;
             dbo:spouse ?spouseTed .

  # Satomi Ishihara's birth name
  dbr:Satomi_Ishihara dbo:birthName ?birthNameSatomi .

  # Alumnus of Ohio State University with the same birth name as Satomi Ishihara
  ?alumnus dbo:almaMater dbr:Ohio_State_University ;
          dbo:birthName ?birthNameSatomi .
  ?personAlumnus dbo:birthName ?birthNameSatomi ;
                 dbo:spouse ?spouseAlumnus .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
701,45,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of Meritamen and parent of Henuttawy (19th dynasty).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseName
WHERE {
  ?commander a dbo:Monarch ;
             dbo:child dbr:Meritamen ;
             dbo:child dbr:Henuttawy .
  
  FILTER regex(str(?commander), ""19th dynasty"", ""i"") .

  ?battle dbo:participant ?commander .
  FILTER regex(str(?battle), ""Battle of Perire"", ""i"") .

  ?father dbo:child ?commander .
  ?spouse dbo:marrigePartner ?father ;
          rdfs:label ?spouseName .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
232,68,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of Sylvie Bermann and child of the person born as the birth name of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:nationality dbr:United_Kingdom ;
                     dbo:residence ?settlement .
  
  FILTER (dbo:Settlement ?settlement) .

  # Find Jon Pertwee's birth name and his child
  dbr:Jon_Pertwee dbp:birthName ""John Julian Pertwee""@en ;
                  dbo:child ?person .

  # Identify the actor who is also a narrator and producer, linked to both a film and a military conflict
  ?actor dbo:profession dbr:Actor ;
         dbo:profession dbr:Narrator ;
         dbo:profession dbr:Producer ;
         dbo:film ?film ;
         dbo:militaryConflict ?conflict .

  # Ensure the actor is related to the person (child of Jon Pertwee)
  ?person dbo:actor ?actor .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
378,51,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in Peninsular War.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?achievement WHERE {
  ?person rdfs:label ""Thomas Trigge""@en .
  ?person dbo:nationality ?nationality .
  ?person dbo:occupation ?occupation .
  
  OPTIONAL { 
    ?person dbo:knownFor ?achievement .
  }
  
  ?war dbo:name ""Peninsular War""@en ;
       dbo:participatedIn ?person .

  FILTER(?occupation = dbr:Military_person)
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
528,42,test,Give me the war of Orozimbo Barbosa and force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?force1 ?force2 WHERE {
  # Orozimbo Barbosa's involvement in wars
  OPTIONAL {
    ?barbosa dbo:wikiPageDisambiguates ?disambiguation .
    ?disambiguation dbo:participatedIn ?war .
    ?barbosa dbr:Orozimbo_Barbosa .
  }
  
  # Narciso Campero Leyes's involvement in wars
  OPTIONAL {
    ?campero dbo:wikiPageDisambiguates ?disambiguation2 .
    ?disambiguation2 dbo:participatedIn ?war .
    ?campero dbr:Narciso_Campero_Leyes .
  }
  
  # Battle of Pisagua
  OPTIONAL {
    ?pisagua dbo:wikiPageDisambiguates ?disambiguation3 .
    ?disambiguation3 dbo:participatedIn ?war .
    ?pisagua dbr:Battle_of_Pisagua .
  }

  # Forces involved in the wars
  OPTIONAL { ?war dbo:opposingMilitaryForce ?force1 . }
  OPTIONAL { ?war dbo:friendlyMilitaryForce ?force2 . }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
747,68,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as Tracey Elizabeth McSween and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://dbpedia.org/ontology/birthDate> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?personName ?personBand ?traceyBand ?writerBand
WHERE {
  # Find the decedent's birth date
  ?decedent dbo:birthDate ?birthDate .

  # Person born on the same date as the decedent, who is an athlete and soccer player from Zolotonosha
  ?person dbo:birthDate ?birthDate ;
          a dbo:Athlete, dbo:SoccerPlayer ;
          dbo:birthPlace dbr:Zolotonosha .
  
  # Get this person's name and band
  ?person rdfs:label ?personName ;
          dbp:band ?personBand .

  OPTIONAL {
    # Find Tracey Elizabeth McSween's band
    dbr:Tracey_Elizabeth_McSween dbo:band ?traceyBand .
  }

  OPTIONAL {
    # Find the writer of a song by Amba Shepherd and their band
    ?song dbo:lyricsBy ?writer ;
          dbo:musicalArtist dbr:Amba_Shepherd .
    
    ?writer rdfs:label ?writerName ;
            dbp:band ?writerBand .
  }
}
ORDER BY ?personName",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
427,47,test,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?italianPeopleParty
WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?father dbo:child ?alumnus .
  ?father dbo:partyAffiliation ?party .

  OPTIONAL {
    ?italianPeopleParty rdfs:label ""Italian People's Party (1994)""@en .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,66,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Don Dokken's band member
  ?dokken dbr:Don_Dokken ;
          dbo:member ?bandMember .

  # Watchtower's associated musical artist
  ?watchtower dbr:Watchtower ;
              dbo:associatedMusicalArtist ?artist1 .

  # Meshuggah's band members who are also bands/groups/organizations
  ?meshuggah dbr:Meshuggah ;
             dbo:member ?bandMember .
  FILTER EXISTS { ?bandMember a dbo:Band . }
  FILTER EXISTS { ?bandMember a dbo:Group . }
  FILTER EXISTS { ?bandMember a dbo:Organization . }

  # Associated musical artist of the associated musical artist of Watchtower
  ?artist1 dbo:associatedMusicalArtist ?artist2 .

  # Associated musical artist of the band member from Meshuggah
  ?bandMember dbo:associatedMusicalArtist ?artist3 .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
356,16,test,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton and player in the successor of 2014 Sacramento Republic FC season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . },"SELECT ?team
WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:nationality dbr:Wolverhampton .
  ?person dbo:managerOf ?team .
  ?playerPosition dbo:player ?person ;
                  dbo:clubTeam dbr:Sacramento_Republic_FC ;
                  dbo:season ?season .
  FILTER (?season > ""2014""^^xsd:gYear)
}
```

This query assumes:
- `dbo:SoccerPlayer` is the class for soccer players.
- `dbo:nationality` links a person to their nationality or place of origin.
- `dbo:managerOf` connects a person to the team they manage.
- `dbo:player` and `dbo:clubTeam` are used to link a player to their club and season.",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
92,66,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v6 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v2 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?jimArtist ?josephBand ?nevermoreArtist
WHERE {
  # Jim Sheppard's associated musical artist
  ?jim a dbo:Person ;
       foaf:name ""Jim Sheppard"" .
  OPTIONAL { ?jim dbo:musicalArtist ?jimArtist . }

  # Joseph Michael's birth name and band membership
  ?joseph a dbo:Person ;
          foaf:givenName ?firstName ;
          foaf:familyName ?lastName .
  FILTER (str(?firstName) = ""Joseph"" && str(?lastName) = ""Michael"")
  OPTIONAL { ?joseph dbo:bandMember ?josephBand . }

  # Nevermore's associated artist
  ?nevermore a dbo:MusicalArtist ;
             foaf:name ""Nevermore"" .
  OPTIONAL { ?nevermore dbo:member ?nevermoreArtist }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
701,29,test,Give me the parent of Meritamen and spouse of Ramesses II and parent of the child of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfMeritamen ?spouseOfRamessesII ?parentOfChild
WHERE {
  # Parent of Meritamen
  dbr:Meritamen dbo:child dbr:Ramesses_II .
  dbr:Ramesses_II dbo:spouse ?spouseOfRamessesII ;
                 dbo:father ?parentOfMeritamen .

  # Spouse of Ramesses II
  dbr:Ramesses_II dbo:spouse ?spouseOfRamessesII .

  # Parent of any child of Ramesses II
  ?child dbo:child dbr:Ramesses_II .
  ?child dbo:father ?parentOfChild ;
         dbo:mother ?parentOfChild .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
617,53,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of Laodice IV.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandparent ?royalGrandchild ?successor ?spouse 
WHERE {
  # Antiochus (son of Antiochus III the Great)
  ?antiochus a dbo:Person ;
             dbo:father dbr:Antiochus_III_the_Great ;
             dbo:child ?child .

  # Parent of that child
  ?child dbo:parent ?grandparent .

  # Child of the child (grandchild) who is royalty
  ?child dbo:child ?royalGrandchild .
  FILTER (?royalGrandchild a dbo:Monarch)

  # Successor of Antiochus II Theos who is royalty
  dbr:Antiochus_II_theos dbo:successor ?successor .
  FILTER (?successor a dbo:Monarch)

  # Spouse of Laodice IV
  dbr:Laodice_IV dbo:spouse ?spouse .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
161,33,test,"Give me the military force of Rif War and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rifWarMilitaryForce ?predecessorEventMilitaryForce
WHERE {
  # Find the military force involved in the Rif War
  dbr:Rif_War dbo:militaryConflicts ?rifConflict .
  ?rifConflict dbo:participatingMilitaryForces ?rifWarMilitaryForce .

  # Identify Indalecio Prieto's predecessor
  dbr:Indalecio_Prieto dbo:predecessor ?predecessor .

  # Find the societal event and military conflict associated with the predecessor
  ?predecessorEvent dbo:societalEvent ?societalEvent .
  ?predecessorConflict dbo:militaryConflicts ?militaryConflict .
  ?militaryConflict dbo:participatingMilitaryForces ?predecessorEventMilitaryForce .

  # Ensure the event is both a societal event and a military conflict
  FILTER (?societalEvent != """" && ?militaryConflict != """")
}
```",4,6,5,3,2,3,3,71,0,0,34,0,0.0,0
801,26,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer WHERE {
  ?work a dbo:MusicalWork ;
        a dbo:Song ;
        dbo:work ?song .
  
  ?artist a dbo:MusicalArtist ;
          foaf:genre ""Rapper"" .

  ?work dbo:producer ?producer .
  ?artist dbo:musicalArtist ?work .
}
```",3,7,4,3,1,3,3,71,0,0,956,0,0.0,0
547,46,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchildRestingPlace ?actorRestingPlace
WHERE {
  # Find William Haliburton's child
  ?child dbo:parent dbr:William_Haliburton .
  
  # Find the grandchild of William Haliburton
  ?grandchild dbo:parent ?child .

  # Get the resting place of the grandchild
  OPTIONAL { ?grandchild dbo:finalBurialPlace ?grandchildRestingPlace . }

  # Find the actor associated with ""Enemy at the Door""
  ?actor dbo:actedIn dbr:Enemy_at_the_Door .
  
  # Get the resting place of the actor
  OPTIONAL { ?actor dbo:finalBurialPlace ?actorRestingPlace . }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
294,24,test,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?architect ?restingPlace ?birthPlace
WHERE {
  # Find the architect of P. D. Houston Jr. House
  ?house dbo:architect ?architect .
  FILTER(STRSTARTS(STR(?house), ""http://dbpedia.org/resource/P._D._Houston_Jr._House""))

  # Get the resting place (burial site) of the architect
  OPTIONAL { ?architect dbo:deathPlace ?restingPlace . }

  # Find Marion James and her birthplace, ensuring it's a settlement
  ?person rdfs:label ""Marion James""@en .
  ?person dbo:birthPlace ?birthPlace .
  FILTER(STRSTARTS(STR(?birthPlace), ""http://dbpedia.org/resource/"") && 
         EXISTS { ?birthPlace rdf:type dbo:Settlement })
}
```",4,5,5,2,2,2,3,28,0,3,1,0.0,0.0,0
492,51,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Frédéric-Georges Herr's involvement in a military conflict
  dbr:Frédéric-Georges_Herr dbo:militaryConflict ?conflict .
  
  # The conflict is also an event
  ?conflict rdf:type dbo:MilitaryConflict ;
            dbo:event ?event .

  # Commander of the conflict
  ?commander dbo:commanded ?conflict .

  # Person decedent at the capital of Khemis Miliana District
  ?commander dbp:deathPlace dbr:Khemis_Miliana_City .
  
  # Ensure the death place is a settlement (capital)
  dbr:Khemis_Miliana_City rdf:type dbo:Settlement .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
92,67,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of the person born as the birth name of Joseph Michael.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?musicalArtist WHERE {
  # Find the person who acted in ""Return to Nuke 'Em High Volume 1""
  ?actor dbo:actorIn dbr:Return_to_Nuke_'Em_High_Volume_1 .
  
  # Ensure this actor is also a band member of Nevermore
  ?actor foaf:bandMember dbr:Nevermore .

  # Find the person born with the birth name Joseph Michael
  ?person schema:birthName ""Joseph Michael""^^xsd:string .
  
  # Ensure this person has a band associated with them
  ?person dbo:band ?band .

  # Link the actor to the musical artist through their respective bands
  ?actor foaf:member ?musicalArtistBand .
  ?musicalArtistBand dbo:associatedMusicalArtist ?musicalArtist .
  
  # Ensure the band of the person born as Joseph Michael is the same as the musical artist's band
  FILTER (?band = ?musicalArtistBand)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
488,48,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?war ?administration
WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .

  # War associated with Saitō Hajime
  ?war a dbo:MilitaryConflict ;
      dbo:participatedIn ?saitoHajime .
  
  # Ensure the war is also an event and societal event
  ?war a dbo:Event, dbo:SocietalEvent .

  # Link Saitō Hajime to the war
  dbr:Saitō_Hajime dbo:commanderOf ?war .

  # Administration of the father of Emperor Go-Mizunoo
  dbr:Emperor_Go-Mizunoo dbo:father ?father .
  ?administration dbo:administrator ?father ;
                  dbo:relatedEvent ?war .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
232,59,test,"Give me the child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child
WHERE {
  # Find Jon Pertwee's birth name
  ?jonPertwee dbo:birthName ?birthName .
  
  FILTER(?jonPertwee = dbpedia:Jon_Pertwee) .

  # Identify the professional actor, narrator, and producer
  ?person dbo:profession ?prof1 ;
          dbo:profession ?prof2 ;
          dbo:profession ?prof3 ;
          dbo:claimToFame ?fame1 ;
          dbo:claimToFame ?fame2 .
  
  FILTER(?prof1 = dbpedia:Actor && 
         ?prof2 = dbpedia:Narrator &&
         ?prof3 = dbpedia:Producer) .

  # Ensure one claim to fame is a film and the other is a military conflict
  ?film dbo:type dbr:Film ;
        rdfs:label ?fame1Label .
  
  ?conflict dbo:type dbr:MilitaryConflict ;
            rdfs:label ?fame2Label .

  FILTER(CONTAINS(LCASE(?fame1Label), LCASE(?fame1)) &&
         CONTAINS(LCASE(?fame2Label), LCASE(?fame2))) .

  # Find the child of this person
  ?person dbp:child ?child .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
182,20,test,Give me the war of the work of Gotabhaya Rajapaksa and war of Mahesh Senanayake and entity in Sri Lanka.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?role ?war
WHERE {
  VALUES ?person { 
    dbr:Gotabhaya_Rajapaksa 
    dbr:Mahesh_Senanayake 
  }
  
  OPTIONAL {
    ?person dbo:occupation ?role .
  }

  OPTIONAL {
    ?person dbo:wikiPageWikiLink ?war .
    FILTER (CONTAINS(LCASE(STR(?war)), ""sri lanka civil war""))
  }
}
```

### Explanation:
- **PREFIX**: Defines common namespaces for DBpedia.
- **SELECT**: Retrieves the person, their role, and any associated wars.
- **VALUES**: Specifies the individuals of interest.
- **OPTIONAL**: Used to find optional data like occupation and related wars.
- **FILTER**: Ensures that only wars related to Sri Lanka are considered.",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
161,52,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  # Find military forces related to Francisco Largo Caballero during Francoist Spain
  ?person dbr:Francisco_Largo_Caballero .
  ?person dbo:deathPlace dbr:Francoist_Spain .

  # Find military forces related to the Biscay Campaign
  ?campaign dbr:Biscay_Campaign .
  ?campaign dbo:commander ?person .

  # Identify military forces that are societal events and military conflicts
  ?militaryForce a dbo:MilitaryConflict ;
                 dbo:socialEvent ?event1 ;
                 dbo:militaryConflict ?event2 .

  # Link the military force to both entities
  ?person dbo:militaryForce ?militaryForce .
  ?campaign dbo:militaryForce ?militaryForce .
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
391,20,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeName ?workTitle
WHERE {
  # Find Michael Ballhaus and his claim to fame
  dbr:Michael_Ballhaus dbo:claimToFame ?work .
  
  # Get the actor of that work
  ?work dbo:actor ?actor .

  # Ensure the actor is from Compton, California
  ?actor dbo:birthPlace dbr:Compton,_California .

  # Retrieve names for display
  ?actor rdfs:label ?nativeName .
  FILTER (lang(?nativeName) = 'en')
  
  ?work rdfs:label ?workTitle .
  FILTER (lang(?workTitle) = 'en')
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
345,16,test,"Give me the figure known as the nickname of FC Vaduz and team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?team
WHERE {
  # Get FC Vaduz nickname
  dbr:FC_Vaduz dbo:nickname ?nickname .

  # Find the person born on 1978-09-15 who is a soccer player and manager
  ?person dbo:birthDate ""1978-09-15""^^xsd:date ;
          rdf:type dbo:SoccerPlayer, dbo:SoccerManager .
  
  # Get the team associated with this person
  ?person dbo:team ?team .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
232,25,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of Dog Soldiers (film).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?native
WHERE {
  # Find Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:residence ?sylviesResidence .
  
  # Ensure the residence is a settlement and British
  ?sylviesResidence a dbo:Settlement ;
                   dbp:country dbr:United_Kingdom .

  # Find actor of ""Dog Soldiers""
  ?actor dbo:film dbr:Dog_Soldiers_(2002_film) .
  
  # Ensure the actor's residence is the same as Sylvie Bermann's
  ?actor dbo:residence ?sylviesResidence .

  # Get native of this settlement
  ?sylviesResidence dbp:native ?native .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
404,50,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?finalParent
WHERE {
    # Prince George William of Hanover's parent (royalty)
    ?princeGeorge dbp:child ?pgwChild .
    ?pgwChild dbo:parent ?pgwParent .
    FILTER EXISTS { ?pgwParent a dbo:Monarch } .

    # Child of this parent (royalty)
    ?pgwParent dbp:child ?royalChild .
    FILTER EXISTS { ?royalChild a dbo:Monarch } .

    # Father of Ernest Augustus, Duke of Brunswick
    ?ernestAugustus dbp:father ?ernestFather .

    # Parent of this father (royalty)
    ?ernestFather dbo:parent ?ernestParent .
    FILTER EXISTS { ?ernestParent a dbo:Monarch } .

    # Final parent of the royalty child from step 2
    ?royalChild dbo:parent ?finalParent .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
16,64,test,Give me the professional in Actress and person born as the birth name of the alumnus of Ohio State University and spouse of the person born as the birth name of Ted McGinley.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actress WHERE {
  ?actress a dbo:Actress ;
           foaf:name ?birthName ;
           dbo:almaMater dbr:Ohio_State_University .
  
  ?spouse foaf:name ""Ted McGinley""@en ;
          foaf:mbox ?email .

  ?actress foaf:mbox ?email ;
           foaf:currentProject ?project .

  FILTER (?birthName = (SELECT ?name WHERE {
    ?person foaf:name ?name .
    ?person dbo:spouse ?spouse .
  }))
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
184,34,test,"Give me the parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfIlona ?nativeOfLandmark
WHERE {
  # Find parent(s) of Archduchess Ilona of Austria
  OPTIONAL {
    dbr:Archduchess_Ilona_of_Austria dbo:child ?ilona.
    ?ilona dbo:parent ?parentOfIlona.
  }

  # Find a landmark with elevation 96.0 that is also a settlement
  OPTIONAL {
    ?landmark a dbo:Settlement ;
              dbp:elevation ""96.0""^^xsd:float .
    
    # Find native of the landmark
    ?native dbo:nativePlace ?landmark.
    ?nativeOfLandmark rdfs:label ?nativeLabel.
  }
}
```",4,5,5,3,2,3,3,71,0,2,2,0.0,0.0,0
617,61,test,"Give me the parent of the child of the commander in Battle of Panium and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  # Step 1: Identify the commander in Battle of Panium
  ?battle dbr:Battle_of_Panium .
  ?commander dbo:commanderOf ?battle .

  # Step 2: Find the child of this commander
  ?child dbo:child ?commander .

  # Step 3: Determine the parent of this child (which is the commander)
  ?parent dbo:spouse ?commander .

  # Step 4: Identify Antiochus III the Great and his son Antiochus
  ?antiochusIII dbr:Antiochus_III_the_Great .
  ?antiochus dbr:Antiochus_IV_Epiphanes ;
            dbo:father ?antiochusIII .

  # Step 5: Find the successor of Antiochus
  ?successor dbo:succeededBy ?antiochus .

  # Step 6: Locate the child of this successor
  ?successorChild dbo:child ?successor .

  # Step 7: Determine the spouse of this child, ensuring they are royalty
  ?spouse dbo:spouse ?successorChild .
  FILTER EXISTS { ?spouse a dbo:Monarch } # Ensure the spouse is royalty

}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
659,56,test,"Give me the commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleCommander ?wellingtonForceCommander ?militaryForce WHERE {
  # Battle of Leipzig commander
  ?battleEvent a dbo:MilitaryConflict ;
               dbo:commander ?battleCommander .
  
  FILTER(?battleEvent = dbr:Battle_of_Leipzig)

  # Arthur Wellesley's forces and their commanders
  ?wellingtonEvent a dbo:MilitaryConflict ;
                   dbo:commander ?wellingtonForceCommander .

  ?wellingtonEvent dbo:participatedInMilitaryForce ?militaryForce .
  
  FILTER(?wellingtonEvent = dbr:Arthur_Wellesley_1st_Duke_of_Wellington)

  # Ensure the military force is related to a societal event
  ?societalEvent a dbo:SocietalEvent ;
                 dbo:participatedInMilitaryConflict ?militaryForce .

  # Reference to Rutger Jan Schimmelpenninck
  OPTIONAL {
    ?reference dbr:Rutger_Jan_Schimmelpenninck .
    ?reference dbo:relatedTo ?battleCommander .
    ?reference dbo:relatedTo ?wellingtonForceCommander .
  }
}
```",6,9,7,3,3,3,3,71,0,0,6,0,0.0,0
747,34,test,"Give me the band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName ?personName WHERE {
  # Find Shèna's band
  dbr:Shèna dbo:memberOf ?band .
  
  # Get the birth date of the decedent
  ?decedent a dbo:Person ;
            dbp:birthday ?birthDate .

  # Find an athlete who is also a soccer player, born on the same date as the decedent
  ?person a dbo:Athlete ;
          dbo:sport dbr:Soccer ;
          dbp:birthday ?sameBirthDate ;
          foaf:name ?personName .
  
  # Ensure the person was born in Zolotonosha
  ?person dbo:birthPlace dbr:Zolotonosha .

  # Match birth dates
  FILTER (?sameBirthDate = ?birthDate)

  # Get the band name
  ?band foaf:name ?bandName .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
994,69,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of the associated musical artist of the reference to Watchtower and band member of the person born, that is a musical artist, as the persona of Don Dokken.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?meshuggahMember ?associatedArtist1 ?watchtowerArtist ?dokkenBandMember
WHERE {
  # Meshuggah band member who is also a band/group/organization
  ?meshuggahMember dbo:memberOf dbr:Meshuggah .
  OPTIONAL { 
    ?meshuggahMember dbo:memberOf ?otherGroup .
    FILTER (isLiteral(?otherGroup) || ?otherGroup != dbr:Meshuggah)
  }
  
  # Associated musical artist of the Meshuggah band member
  ?meshuggahMember dbo:associatedMusicalArtist ?associatedArtist1 .

  # Associated musical artist of Watchtower
  dbr:Watchtower dbo:associatedMusicalArtist ?watchtowerArtist .

  # Band member of Don Dokken (persona)
  ?dokkenBandMember dbo:memberOf ?donDokken .
  FILTER (str(?donDokken) = ""Don_Dokken"")
  
  # Associated musical artist of the associated artist of Watchtower
  ?watchtowerArtist dbo:associatedMusicalArtist ?associatedArtist2 .

  # Ensure all entities are distinct and relevant
  FILTER (?meshuggahMember != ?dokkenBandMember)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
10,28,test,"Give me the professional in the birth name of Sharon Kao and associated musical artist of the person born, that is an artist, as Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v3 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professionalName ?associatedArtist ?bandMember
WHERE {
  # Find Sharon Kao by birth name
  ?sharonKao dbo:birthName ""Sharon Kao"" .
  
  # Get her professional name
  ?sharonKao foaf:name ?professionalName .

  # Find Matt Colton and check if he is associated with Sharon Kao
  ?mattColton a dbo:MusicalArtist ;
              dbo:associatedBand ?band .
  FILTER EXISTS { ?band dbo:member ?sharonKao }
  
  # Get Matt Colton's name
  ?mattColton foaf:name ?associatedArtist .

  # Find Luke Francis Vibert and check if he is a band member with Sharon Kao
  ?lukeVibert a dbo:MusicalArtist ;
              dbo:bandMemberOf ?band .
  FILTER EXISTS { ?band dbo:member ?sharonKao }
  
  # Get Luke Francis Vibert's name
  ?lukeVibert foaf:name ?bandMember .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
16,48,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find Gigi Rice's birth name
  ?gigiResource a dbo:Person ;
                foaf:name ""Gigi Rice"" .
  ?gigiResource dbo:birthName ?birthNameGigi .

  # Find the person with the same birth name as Gigi Rice
  ?person1 dbo:birthName ?birthNameGigi .

  # Find Ted McGinley's birth name
  ?tedResource a dbo:Person ;
               foaf:name ""Ted McGinley"" .
  ?tedResource dbo:birthName ?birthNameTed .

  # Find the person with the same birth name as Ted McGinley
  ?person2 dbo:birthName ?birthNameTed .

  # Find the spouse of the person with the same birth name as Ted McGinley
  ?person1 foaf:spouse ?person2 .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
328,52,test,Give me the commander in the force of Ferenc Szálasi and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:commanderOf dbr:Ferenc_Szálasi .
  ?person dbo:awardReceived dbr:Volcano_and_Ryukyu_Islands_campaign_award .
  ?person dbo:leaderOf dbr:People's_Commissariat_of_Defence_of_the_Soviet_Union .
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
314,20,test,Give me the awardee of the award of Sergei Makovetsky and person deceased at Madrid and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  # Sergei Makovetsky's award
  ?award dbo:recipient dbr:Sergei_Makovetsky .
  
  # Awardee of the same award
  ?award dbo:recipient ?awardee .

  # Person deceased in Madrid
  ?awardee dbo:deathPlace dbr:Madrid .

  # Commander in the Spanish Civil War
  ?awardee dbo:militaryConflict dbr:Spanish_Civil_War .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
712,16,test,Give me the capital of the country of Armed Forces of South Russia and resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?capital ?restingPlace WHERE {
  # Assuming ""Armed Forces of South Russia"" refers to a region within Russia
  OPTIONAL {
    dbr:Russia dbo:capital ?capital .
  }
  
  # Find individuals awarded as Heroes of the Soviet Union and their resting places
  ?person dbo:awardReceived dbr:Hero_of_the_Soviet_Union ;
          dbp:placeOfBurial ?restingPlace .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
547,25,test,Give me the resting place of Simon Cadell and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?simonCadellRestingPlace ?awardeeName ?awardeeRestingPlace
WHERE {
  # Simon Cadell's resting place
  ?simonCadell dbo:name ""Simon Cadell""@en .
  ?simonCadell dbo:deathPlace ?simonCadellRestingPlace .

  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  ?awardee foaf:name ?awardeeName .
  ?awardee dbo:honor ""Knight Grand Cross of the Order of St Michael and St George""@en .
  ?awardee dbo:deathPlace ?awardeeRestingPlace .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
659,31,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:commanderOf dbr:Kingdom_of_Ireland .
  ?person dbo:officeHolderIn dbr:Kingdom_of_Ireland .
  ?person dbo:commanderOf dbr:Battle_of_Leipzig .
}
```

This query assumes that `dbo:commanderOf` and `dbo:officeHolderIn` are the correct properties to use for identifying commanders and office holders, respectively. Adjustments may be necessary based on the actual schema of DBpedia.",4,5,5,3,2,3,3,71,0,0,19,0,0.0,0
328,22,test,"Give me the awardee of Order of Suvorov and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:awardeeOf dbr:Order_of_Suvorov .
  ?office dbo:leader ?person ;
          a dbo:GovernmentAgency .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
339,16,test,Give me the child of the child of Christian IX of Denmark and father of the child of Grand Duchess Elena Vladimirovna of Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?individual
WHERE {
  # Find a grandchild of Christian IX
  ?grandchild dbo:parent ?childOfChristianIX .
  ?childOfChristianIX dbo:parent dbr:Christian_IX_of_Denmark .

  # This individual is the child of that grandchild (i.e., great-grandchild of Christian IX)
  ?individual dbo:parent ?grandchild .

  # Find a child of Grand Duchess Elena Vladimirovna
  ?childOfElena dbo:parent dbr:Grand_Duchess_Elena_Vladimirovna_of_Russia .

  # This individual is the father of that child
  ?individual dbo:parent ?childOfElena .
  
  # Ensure this individual is male (father)
  ?individual rdf:type dbo:Man .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
177,9,test,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik and entity in the residence of Alexander Gamelin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://dbpedia.org/ontology/location> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?org ?hq
WHERE {
  # Joo Don-sik and his office organization
  ?person1 a dbo:Person ;
           foaf:name ""Joo Don-sik""@en .
  
  ?office dbo:employee ?person1 ;
          dbo:organization ?org .

  # Headquarters of the organization
  ?org dbo:headquarters ?hq .

  # Alexander Gamelin and his residence
  ?person2 a dbo:Person ;
           foaf:name ""Alexander Gamelin""@en .
  
  ?residence dbo:resident ?person2 ;
             dbo:location ?hq .
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
617,47,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchildOfSeleucus ?spouse
WHERE {
  # Seleucus II Callinicus and his children
  dbr:Seleucus_II_Callinicus dbo:child ?childOfSeleucus .
  
  # Child of Seleucus II's child (grandchildren)
  ?childOfSeleucus dbo:child ?grandchildOfSeleucus .
  
  # Filter grandchildren who are royalty
  ?grandchildOfSeleucus a dbo:Monarch .

  # Antiochus III the Great and his successor, Antiochus IV
  dbr:Antiochus_III_the_Great dbo:succeededBy dbr:Antiochus_IV .
  
  # Child of Antiochus IV (grandchildren)
  dbr:Antiochus_IV dbo:child ?childOfAntiochusIV .

  # Filter grandchildren who are royalty
  ?childOfAntiochusIV a dbo:Monarch .

  # Spouse relationship between the selected individuals
  ?grandchildOfSeleucus dbo:spouse ?spouse .
  ?spouse dbr:Antiochus_IV dbo:child ?childOfAntiochusIV .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
492,60,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capitalPersonDecedent ?workPersonDecedent
WHERE {
  # Find Khemis Miliana District and its capital
  dbr:Khemis_Miliana_District dbo:administrativeCapital ?capital .
  
  # Ensure the capital is a settlement
  ?capital rdf:type dbo:Settlement .

  # Get person decedent at the capital
  ?capitalPersonDecedent dbo:placeOfDeath ?capital .

  # Find author of ""French Algeria""
  dbr:French_Algeria dbo:author ?author .
  
  # Get work associated with this author and find person decedent related to it
  OPTIONAL {
    ?work dbo:author ?author .
    ?workPersonDecedent dbo:placeOfDeath ?work .
  }
}
```",6,7,7,3,2,3,3,71,0,0,16,0,0.0,0
391,57,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person ?nativePlace ?claimToFameWork ?movieWithRozRyan
WHERE {
  # Find the native of Compton, California
  ?person dbo:nativePlace dbr:Compton,_California .
  
  # Find the actor related to a work that is the claim to fame of Sherry Hormann's spouse
  OPTIONAL {
    ?spouse foaf:name ""Sherry Hormann""@en .
    ?spouse dbo:spouse ?actor .
    ?actor dbo:profession dbr:Actor .
    ?work dbo:claimToFame ?actor .
    ?work a dbo:Work .
    ?person dbo:actedIn ?work .
  }
  
  # Find the actor involved in a movie with Roz Ryan
  OPTIONAL {
    ?movie dbo:starring ?person ;
           dbo:starring dbr:Roz_Ryan ;
           a dbo:Film .
    ?movie dbo:title ?title .
    FILTER regex(?title, "".*"", ""i"") # Assuming we need to match any title
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
767,45,test,"Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?entityInBadenWuerttemberg ?alterEgo
WHERE {
  # Alma mater of Carl L. Nippert
  OPTIONAL {
    ?nippert dbo:almaMater ?almaMater .
    FILTER (str(?nippert) = ""Carl_L._Nippert"")
  }

  # Entity in Baden-Württemberg
  ?entityInBadenWuerttemberg dbo:location dbr:Baden-Württemberg .

  # Alter ego of Matthew Burland
  OPTIONAL {
    ?burland dbo:fictionalCharacter ?alterEgo .
    FILTER (str(?burland) = ""Matthew_Burland"")
  }
}
```",5,6,6,3,3,3,3,71,0,201,1,0.0,0.0,0
92,26,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?musicalArtist
WHERE {
  # Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?movie dbo:starring ?actor .
  
  # Ensure the movie is ""Return to Nuke 'Em High Volume 1""
  FILTER(STRSTARTS(LCASE(?movie), LCASE(""return_to_nuke_em_high_volume_1"")))

  # The actor must be a musician (born as an artist)
  ?actor dbo:birthDate ?birthDate .
  
  # Ensure the person is recognized as an artist
  OPTIONAL { ?actor dbo:genre ?musicalGenre . }

  # Find associated musical artists of this person
  ?actor foaf:madeMusicWith ?musicalArtist .

}
```",3,4,4,3,1,3,3,71,0,0,126,0,0.0,0
281,46,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?war
WHERE {
  # Bob Heffron's birthplace and ensuring it is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Jonathon Band's award and the associated war
  dbr:Jonathon_Band dbo:award ?award .
  ?award dbo:associatedWar ?war .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,55,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce1 ?commander ?militaryForce2
WHERE {
  # Military force of the societal event and military conflict involving Francisco Largo Caballero
  ?eventLargo a dbo:SocietalEvent ;
              dbo:militaryConflict [dbo:participant dbr:Francisco_Largo_Caballero] .
  ?eventLargo dbo:militaryForce ?militaryForce1 .

  # Commander in the event involving Emilio Mola
  ?eventMola a dbo:Event ;
             dbo:commander ?commander .
  ?commander dbo:name ""Emilio Mola""@en .
  
  # Military force of the societal event, event, and military conflict involving Francisco Franco
  ?eventFranco a dbo:SocietalEvent , dbo:Event , dbo:MilitaryConflict ;
               dbo:militaryForce ?militaryForce2 ;
               dbo:participant dbr:Francisco_Franco .
}
```",6,12,7,2,3,3,3,71,0,0,32,0,0.0,0
378,45,test,"Give me the war of Joaquín Blake and war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander ?claimToFame WHERE {
  # Joaquín Blake's war involvement
  { 
    ?war dbo:participatedIn [
      a dbo:MilitaryConflict ;
      dbo:commander dbr:Joaqu%C3%ADn_Blake .
    ].
    OPTIONAL { ?war dbo:commander ?commander . }
    OPTIONAL { ?commander dbo:claimToFame ?claimToFame . }
  }

  UNION

  # Carl Pontus Gahn's war involvement
  {
    ?war dbo:participatedIn [
      a dbo:MilitaryConflict ;
      dbo:commander dbr:Carl_Pontus_Gahn .
    ].
    OPTIONAL { ?war dbo:commander ?commander . }
    OPTIONAL { ?commander dbo:claimToFame ?claimToFame . }
  }

  UNION

  # Thomas Trigge's war involvement
  {
    ?war dbo:participatedIn [
      a dbo:MilitaryConflict ;
      dbo:commander dbr:Thomas_Trigge .
    ].
    OPTIONAL { ?war dbo:commander ?commander . }
    OPTIONAL { ?commander dbo:claimToFame ?claimToFame . }
  }

  # Ensure the event is both a military conflict and societal event
  FILTER (?war a dbo:MilitaryConflict && ?war a dbo:SocietalEvent)
}
ORDER BY ?war",5,8,6,3,3,3,3,71,0,0,2,0,0.0,0
161,32,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?francoForce ?caballeroForce
WHERE {
  # Find military forces associated with Francisco Franco as a societal event and military conflict
  ?francoEvent dbo:type dbr:Societal_event .
  ?francoEvent dbo:type dbr:Military_conflict .
  ?francoEvent dbo:associatedWith dbr:Francisco_Franco .
  ?francoEvent dbo:militaryForce ?francoForce .

  # Find military forces associated with Francisco Largo Caballero as a societal event and military conflict
  ?caballeroEvent dbo:type dbr:Societal_event .
  ?caballeroEvent dbo:type dbr:Military_conflict .
  ?caballeroEvent dbo:associatedWith dbr:Francisco_Largo_Caballero .
  ?caballeroEvent dbo:militaryForce ?caballeroForce .
}
```",4,9,5,2,2,3,3,71,0,0,514,0,0.0,0
617,54,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfNysa ?spouseOfRoyalDescendant
WHERE {
  # Nysa's parent
  ?nysa a dbo:Person ;
        foaf:surname ""Nysa"" ;
        dbo:spouse dbr:Pharnaces_I_of_Pontus .
  
  ?nysa dbo:parent ?parentOfNysa .

  # Antiochus IV Epiphanes' child and their spouse
  dbr:Antiochus_IV_Epiphanes a dbo:Person ;
                             dbo:sibling dbr:Antiochus_III_the_Great .
  
  ?childOfAntiochusIV a dbo:Person ;
                      dbo:parent dbr:Antiochus_IV_Epiphanes ;
                      rdf:type dbo:RoyalFamilyMember .

  ?spouseOfChild dbp:spouse ?childOfAntiochusIV .

  # Seleucus II Callinicus' grandchild
  ?grandchildOfSeleucusII a dbo:Person ;
                          dbo:parent ?childOfSeleucusII ;
                          rdf:type dbo:RoyalFamilyMember .
  
  ?childOfSeleucusII dbo:parent dbr:Seleucus_II_Callinicus .

  # Combine results
  FILTER (?spouseOfChild = ?grandchildOfSeleucusII)
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
617,19,test,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?childOfChild
WHERE {
  # Boleslaus I, Duke of Bohemia
  ?boleslaus a dbo:Duke ;
             foaf:name ""Boleslaus I"" .

  # His child
  ?child dbo:parent ?boleslaus .
  
  # Child's child who is royalty
  ?childOfChild dbo:parent ?child ;
                rdf:type dbo:Monarch .

  # This person must be a parent of someone whose father is royalty
  ?grandParentOfReference dbo:parent ?childOfChild .
  ?referenceParent dbo:parent ?grandParentOfReference ;
                   rdf:type dbo:Monarch .

  # Reference to Richeza of Poland
  ?reference foaf:name ""Richeza of Poland"" ;
             dbo:spouse ?referenceParent .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
666,17,test,"Give me the player in Steve Bruce and figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?team a dbo:SoccerClub ;
        dbo:sport dbr:Association_football ;
        dbo:country dbr:England ;
        dbo:manager dbr:Steve_Bruce .
  
  ?player dbo:playsFor ?team .

  OPTIONAL { 
    ?team dbp:nickname ?nickname .
  }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
492,37,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at Algiers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict (COUNT(?conflict) AS ?numConflicts)
WHERE {
  # Find the commander in the Battle of Verdun who died at Algiers
  ?commander dbo:commanded dbr:Battle_of_Verdun .
  ?commander dbo:deathPlace dbr:Algiers .

  # Find other wars or military conflicts involving this commander
  ?conflict dbo:commander ?commander ;
            a dbo:MilitaryConflict .
  
  # Ensure the conflict is distinct from the Battle of Verdun
  FILTER (?conflict != dbr:Battle_of_Verdun)
}
GROUP BY ?conflict
ORDER BY DESC(?numConflicts)
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
9,57,test,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterJohn Alderdice ?nicknameQueenUniversityBelfast ?awardeeRoyalMedals
WHERE {
  # Alma mater of John Alderdice, Baron Alderdice
  dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMaterJohnAlderdice .

  # Nickname for Queen's University Belfast
  dbr:Queen's_University_Belfast dbo:nickname ?nicknameQueenUniversityBelfast .

  # Awardee of Royal Medals with alma mater as Queen's University Belfast
  ?awardeeRoyalMedals dbo:almaMater dbr:Queen's_University_Belfast .
  ?awardeeRoyalMedals dbo:awardReceived ?royalMedalsAward .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,70,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/property/office> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?commander ?agencyLeader
WHERE {
  # Bruce Fraser and his award
  dbr:Bruce_Fraser_1st_Baron_Fraser_of_North_Cape dbo:awardReceived ?award .
  
  # Awardee of the same award
  ?awardee dbo:awardReceived ?award .

  # Commander in Budapest (decedent)
  ?commander a dbo:MilitaryPerson ;
             dbo:placeOfBirth dbr:Budapest ;
             dbo:deathPlace dbr:Budapest .
  
  # Gustav Jonson's office as a government agency
  dbr:Gustav_Jonson dbo:officeHolderOf ?agency .
  ?agency a dbo:GovernmentAgency .

  # Linking the awardee, commander, and agency leader
  FILTER(?awardee = ?commander)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
534,20,test,"Give me the headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final and birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/headquarter> ?result . ?v4 <http://dbpedia.org/ontology/owner> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?headquarters WHERE {
  # Find the venue of the 2012 Pro12 Grand Final
  ?final a dbo:Arena ;
         dbo:event = dbr:2012_Pro12_Grand_Final .

  # Get the location of this venue
  ?final dbo:location ?location .

  # Determine the owner of this location
  ?location dbo:owner ?owner .

  # Find the headquarters of the owner
  ?owner dbo:headquarters ?headquarters .

  OPTIONAL {
    # Identify a politician native to Essex
    ?essexPolitician a dbo:Politician ;
                     dbo:nativePlace dbr:Essex .

    # Determine their child who is also a politician and office holder
    ?child dbo:parent ?essexPolitician ;
           a dbo:Politician, dbo:OfficeHolder .

    # Find the birthplace of this child
    ?child dbo:birthPlace ?birthPlace .
  }
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
528,64,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa and force of the person born as the birth name of Narciso Campero.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?orozimboBarbosaForce ?narcisoCamperoBirthName
WHERE {
  ?war a dbo:SocietalEvent ;
       dbo:location dbr:Chile .
  
  OPTIONAL { 
    ?orozimboBarbosaForce dbo:participatedIn ?war ;
                           rdfs:label ""Orozimbo Barbosa""@en .
  }
  
  OPTIONAL {
    ?narcisoCamperoBirthName dbo:birthName ?narcisoCampero ;
                             dbo:participatedIn ?war ;
                             rdfs:label ""Narciso Campero""@en .
  }
}
```",7,8,8,3,3,3,3,71,0,53,2,0.0,0.0,0
421,27,test,Give me the band member of Senidah and person born as the birth name of Dino Merlin and native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find Senidah's band members
  ?bandMember dbo:memberOfBand dbr:Senidah .
  
  # Get Dino Merlin's birth name
  dbr:Dino_Merlin foaf:name ?dinoBirthName .

  # Ensure the person has the same birth name as Dino Merlin
  ?person foaf:name ?dinoBirthName .

  # Find Samir Bekrić's birthplace
  dbr:Samir_Bekrić dbo:birthPlace ?samirBirthPlace .

  # Ensure the person is native to Samir Bekrić's birthplace
  ?person dbo:nativeCountry ?nativeCountry .
  ?nativeCountry foaf:name ?samirBirthPlace .
  
  # Link the band member and the person with the same birth name and birthplace
  FILTER (?bandMember = ?person)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
404,57,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild
WHERE {
  # Prince George William of Hanover's parent who is royalty
  ?parent dbr:Prince_George_William_of_Hanover dbo:child dbr:Princess_Victoria_Louise_of_Prussia .
  ?parent a dbo:Monarch .

  # Child of this royal parent, who is also royalty and spouse of Princess Victoria Louise of Prussia
  ?child dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia ;
         dbo:childOf ?parent ;
         a dbo:Monarch .

  # Parent of this child (who must be royalty)
  ?parentOfChild dbo:child ?child .
  ?parentOfChild a dbo:Monarch .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
547,21,test,Give me the resting place of Alan Cunningham and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alanCunninghamRestingPlace ?burtonChildRestingPlace WHERE {
  # Alan Cunningham's resting place
  ?alanCunningham a dbo:Person ;
                 foaf:name ""Alan Cunningham""@en ;
                 dbo:finalRestingPlace ?alanCunninghamRestingPlace .

  # James Burton (property developer) and his child
  ?jamesBurton a dbo:Person ;
               foaf:name ""James Burton""@en ;
               dbp:occupation ""Property Developer""@en .
  
  ?child a dbo:Person ;
         dbo:parent ?jamesBurton ;
         dbo:finalRestingPlace ?burtonChildRestingPlace .
}
```

This query does the following:
- Selects the resting place of Alan Cunningham.
- Identifies James Burton as a property developer and finds his child's resting place.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,33,test,Give me the spouse of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?actor ?profession 
WHERE {
  # Find Ted McGinley's spouse
  dbr:Ted_McGinley dbo:spouse ?spouse .

  # Find the actor of ""Unnatural"" (TV series) and their profession
  ?tvSeries dbo:title ""Unnatural (TV series)""@en .
  ?tvSeries dbo:actor ?actor .
  ?actor a dbo:Actor ;
         dbo:profession ?profession .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
696,16,test,Give me the landmark at elevation of the award of Nie Rongzhen and birth place of the member of Dropkick Murphys.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v3 . <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation ?birthPlace WHERE {
  # Find Nie Rongzhen's award and its elevation
  OPTIONAL {
    ?award dbo:recipient dbr:Nie_Rongzhen .
    ?award dbo:elevation ?elevation .
    ?location dbo:elevation ?elevation .
    ?location a dbo:Landmark .
    BIND(?location AS ?landmark)
  }

  # Find a member of Dropkick Murphys and their birthplace
  OPTIONAL {
    ?member dbo:band dbr:Dropkick_Murphys .
    ?member dbo:birthPlace ?birthPlace .
  }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
767,39,test,"Give me the alma mater of Carl L. Nippert and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?fictionalCharacter
WHERE {
  # Alma mater of Carl L. Nippert
  OPTIONAL {
    dbr:C_L_Nippert dbo:almaMater ?almaMater .
  }
  
  # Fictional character associated with Matthew Burland
  OPTIONAL {
    dbr:Matthew_Burland dbo:fictionalCharacter ?fictionalCharacter .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
77,16,test,Give me the force of the mayor of Congress Poland and war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayorForce ?warEvent
WHERE {
  # Find the mayor of Congress Poland
  ?mayor a dbo:Mayor ;
         dbo:officeLocation dbr:Congress_Poland .

  # Assume 'force' is represented by some property, e.g., dbo:role or similar
  OPTIONAL { ?mayor dbo:role ?mayorForce . }

  # Find the awardee of the Golden Weapon for Bravery
  ?awardee a dbo:AwardRecipient ;
           dbo:award dbr:Golden_Weapon_for_Bravery .

  # Assume 'war' is represented by participation in an event, e.g., dbo:participatedIn
  OPTIONAL { ?awardee dbo:participatedIn ?warEvent . }
}
```",4,4,5,2,2,3,2,20,0,0,13,0,0.0,0
54,55,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin ;
         a dbo:Royalty, dbo:OfficeHolder .

  # Narapati I of Ava's child
  ?narapatiChild dbo:parent dbr:Narapati_I_of_Ava .

  # Soe Min Wimala Dewi's father
  ?soeminWimala dbo:child dbr:Soe_Min_Wimala_Dewi ;
                a dbo:Person .

  # The predecessor of Thihapate's child (likely the parent)
  ?predecessor dbo:parent ?child .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
55,27,test,"Give me the band of the reference, that is a band, to Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony and band member of Guns N' Roses.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Jason Newsted is a member of a band
  dbr:Jason_Newsted dbo:bandMember ?band .
  
  # The band has members who are part of the San Francisco Symphony
  ?member dbo:bandMember ?band ;
          dbo:performerIn dbr:San_Francisco_Symphony .

  # The same member is also a member of Guns N' Roses
  ?member dbo:bandMember dbr:Guns_N'_Roses .
  
  # Ensure the band is both a musical artist and a group
  ?band rdf:type dbo:MusicalArtist, dbo:Group .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
492,47,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commanderInConflict WHERE {
  # Find the commander in the Battle of Verdun
  ?battleOfVerdun a dbo:MilitaryEngagement ;
                  dbo:commander ?verdunCommander .

  # Identify any military conflict this commander was involved in as a commander
  ?conflict a dbo:MilitaryEngagement ;
           dbo:commander ?verdunCommander ;
           dbp:name ?commanderInConflict .

  # Find Joseph C. Satterthwaite's work location
  dbr:Joseph_C._Satterthwaite dbo:officeLocation ?workLocation .

  # Ensure the commander was a decedent at this work location
  ?verdunCommander dbo:deathPlace ?workLocation .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
404,67,test,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of the spouse of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?child ?parentOfChild ?parentOfPrinceGeorgeWilliam ?fatherOfSpouse
WHERE {
  # Princess Victoria Louise of Prussia and her spouse
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

  # Child of the spouse who is royalty
  ?child dbo:parent ?spouse .
  ?child a dbo:Monarch .

  # Parent of this royal child, ensuring they are royalty
  ?parentOfChild dbo:child ?child .
  ?parentOfChild a dbo:Monarch .

  # Prince George William of Hanover's parent (royalty)
  dbr:Prince_George_William_of_Hanover dbo:parent ?parentOfPrinceGeorgeWilliam .
  ?parentOfPrinceGeorgeWilliam a dbo:Monarch .

  # Ensure the parent of the royal child is the same as Prince George William's parent
  FILTER (?parentOfChild = ?parentOfPrinceGeorgeWilliam)

  # Father of Princess Victoria Louise's spouse
  ?spouse dbo:father ?fatherOfSpouse .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
378,65,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v4 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfGahn ?peninsularWar 
WHERE {
  # Find Carl Pontus Gahn's birth name and related wars
  dbr:Carl_Pontus_Gahn dbo:birthName ?birthName .
  
  # Identify the commander in the Great Siege of Gibraltar
  ?commander dbo:occupation dbr:Military_person ;
            dbo:participatedInMilitaryEngagement dbr:Great_Siege_of_Gibraltar .

  # Find wars associated with this commander
  ?commander dbo:participatedInMilitaryEngagement ?warOfGahn .
  
  # Identify the Peninsular War
  dbr:Peninsular_War a dbo:MilitaryConflict ;
                     dbo:participatingMilitaryPersonal ?peninsularCommander .

  # Find connections between wars of the commander and the Peninsular War
  ?commander = ?peninsularCommander .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
54,32,test,Give me the child of the father of Soe Min Wimala Dewi and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result
WHERE {
  # Step 1: Find the father of Soe Min Wimala Dewi
  ?soeMinWimalaDewi a dbo:Person ;
                   dbo:father ?fatherOfSoeMinWimalaDewi .

  # Step 2: Identify the child of this father (which is Soe Min Wimala Dewi)
  ?childOfFather dbr:Soe_Min_Wimala_Dewi ;
                 dbo:parent ?fatherOfSoeMinWimalaDewi .

  # Step 3: Find the child of Narapati I of Ava
  ?narapatiI a dbo:Person ;
            dbo:child ?childOfNarapatiI .

  # Step 4: Identify the parent of this child
  ?parentOfChild dbr:Narapati_I_of_Ava ;
                 dbo:parent ?result .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
161,64,test,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Identify the Spanish Civil War event
  dbr:Spanish_Civil_War a dbo:MilitaryConflict .

  # Find military forces involved in the Spanish Civil War
  ?militaryForce dbo:partOf dbr:Spanish_Civil_War .
  
  # Identify Francisco Franco as ""El Director""
  dbr:Franco a dbo:Person ;
     foaf:name ""Francisco Franco"" ;
     dbo:nickName ""El Director"" .

  # Find military forces commanded by Francisco Franco
  ?militaryForce dbo:commander dbr:Franco .
  
  OPTIONAL {
    ?militaryForce dbo:commander ?commander .
  }
}
```",7,11,8,3,3,3,3,71,0,0,32,0,0.0,0
92,49,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?artist ?band ?personBand 
WHERE {
  # Find band members of Nevermore who are artists
  ?member dbo:bandMember dbr:Nevermore ;
          dbo:artist ?artist .
  
  # Find the person born as ""Joseph Michael"" and their band
  ?person foaf:name ""Joseph Michael""@en ;
          dbo:birthName ?birthName ;
          dbo:member ?personBand .

  FILTER(?birthName = ""Joseph Michael"")
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,59,test,Give me the parent of the child of the child of Seti I and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfChildB ?parentOfChildC
WHERE {
  # Seti I's lineage
  ?setiI a dbo:Person ;
         foaf:name ""Seti I""@en .
  
  ?childA dbo:child ?setiI .
  ?childB dbo:child ?childA .
  ?parentOfChildB dbo:spouseOrPartner ?childB .

  # Amun-her-khepeshef's spouse and their lineage
  ?amunHerKhepeshef a dbo:Person ;
                    foaf:name ""Amun-her-khepeshef""@en .
  
  ?spouseA dbp:spouseOrPartner ?amunHerKhepeshef .
  ?childC dbo:child ?spouseA .
  ?parentOfChildC dbo:spouseOrPartner ?childC .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
378,47,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find wars involving commanders related to Peninsular War
  ?peninsularWar dbo:commander ?commander .
  FILTER (str(?peninsularWar) = ""Peninsular_War"") .

  # Find wars involving commanders related to Carl Pontus Gahn
  ?carlGahn dbr:Carl_Pontus_Gahn .
  ?carlGahn dbo:commander ?commander2 .

  # Ensure the war is a military conflict and involves both command connections
  ?war dbo:commander ?commander ;
       dbo:commander ?commander2 .
  FILTER (dbo:militaryConflict(?war)) .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
701,71,test,"Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of the child of Seti I and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity
WHERE {
  # Amun-her-khepeshef lineage
  ?spouse1 dbo:spouse dbr:Amun-her-khepeshef .
  ?child1 dbo:parent ?spouse1 .
  ?parent1 dbo:parent ?child1 .

  # Seti I lineage
  ?child2 dbo:parent dbr:Seti_I .
  ?grandchild dbo:parent ?child2 .
  ?parent2 dbo:parent ?grandchild .

  # Commander's father and spouse
  ?father dbo:spouse ?commanderFatherSpouse .
  
  # Common entity condition
  FILTER (?parent1 = ?parent2)
  FILTER (?parent1 = ?commanderFatherSpouse)

  # Ensure the common entity is royalty and involved in Battle of Perire
  ?commonEntity dbo:royalty true .
  ?commonEntity dbo:event dbr:Battle_of_Perire .

}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
92,61,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?band ?artist
WHERE {
  # Find Joseph Michael and his band
  ?person foaf:name ""Joseph Michael""@en .
  ?person dbo:birthName ""Joseph Michael"" .
  ?person dbo:musicalArtist ?band .

  # Find the actor of Return to Nuke 'Em High Volume 1 who is also a musical artist
  ?actor dbo:film dbr:Return_to_Nuke_'Em_High_Volume_1 ;
         foaf:name ?actorName ;
         dbo:musicalArtist ?artist .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
701,58,test,"Give me the parent of the child of Ramesses II and parent of Meritamen and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Ramesses II's child (Meritamen)
  ?child dbo:parent dbr:Ramesses_II .
  
  # Parent of Meritamen and child of Ramesses II is Ramesses II himself
  ?parent dbo:spouse ?spouse .

  # Commander associated with the Battle of Perire
  ?commander dbp:associatedBattle dbr:Battle_of_Perire .
  ?father dbo:child ?commander .
  
  # Spouse of the father of the commander
  ?spouse dbo:spouse ?father .

  # Ensure the parent is royalty and associated with the Battle of Perire
  ?parent a dbo:Monarch ;
          dbp:associatedBattle dbr:Battle_of_Perire .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
251,24,test,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?deathPlace
WHERE {
  # Find the ruling party in Sicily and its administration
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Sicily ;
         dbo:administration ?administration .

  # Find the author of ""The Twelve Abbots of Challant"" and their death place
  ?author dbo:title dbr:The_Twelve_Abbots_of_Challant ;
          dbo:deathPlace ?deathPlace .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
994,45,test,"Give me the associated musical artist of Red Tide (band) and associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?redTideArtist ?saSlayerArtist ?donDokkenBandMember
WHERE {
  # Find the associated musical artist of Red Tide (band)
  OPTIONAL {
    dbr:Red_Tide_(band) dbo:associatedMusicalArtist ?redTideArtist .
  }

  # Find the associated musical artist of S.A. Slayer
  OPTIONAL {
    dbr:S._A._Slayer dbo:associatedMusicalArtist ?saSlayerArtist .
  }
  
  # Find a person born who is a musical artist and band member of Don Dokken
  OPTIONAL {
    ?person dbo:birthPlace ?place ;
            a dbo:Musician ;
            dbo:bandMemberOf dbr:Don_Dokken .
    FILTER EXISTS { ?person dbo:birthDate ?date }
  }

  # Link the person to their persona as a musical artist
  OPTIONAL {
    ?person rdfs:label ""Don Dokken""@en .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
16,54,test,Give me the spouse of the person born as Ted Martin McGinley and professional in the profession of the actor of Unnatural (TV series) and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Ted Martin McGinley and his spouse
  dbr:Ted_McGinley a dbo:Person ;
                   foaf:name ""Ted Martin McGinley"" ;
                   dbo:spouse ?spouse .

  # Identify the actor of ""Unnatural"" (TV series) and their profession
  ?actor a dbo:Actor ;
         dbo:profession dbr:Acting ;
         dbo:workFeaturedIn dbr:Unnatural_(TV_series) .

  # Find Georgeanne Marie Rice's birth name
  dbr:Georgeanne_Marie_Rice a dbo:Person ;
                            foaf:name ""Georgeanne Marie Rice"" ;
                            dbo:birthName ?birthName .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
994,64,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of Red Tide (band).","SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  ?artist1 dbo:associatedMusicalArtist dbr:Watchtower .
  ?artist2 dbo:associatedMusicalArtist ?artist1 .
  ?bandMember dbo:member ?artist2 .
  ?person dbo:birthPlace ?place .
  ?person dbo:occupation dbr:Musical_artist .
  ?persona dbo:associatedMusicalArtist dbr:Don_Dokken .
  FILTER (?bandMember = ?persona)
  ?finalArtist dbo:associatedMusicalArtist dbr:Red_Tide_(band) .
  FILTER (?artist2 = ?person)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
161,63,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce1 ?militaryForce2 ?decedent
WHERE {
  # Emilio Mola's military force
  ?militaryForce1 a dbo:MilitaryConflict ;
                  dbo:societalEvent [a dbo:SocietalEvent] ;
                  dbo:commander dbr:Emilio_Mola .

  # Francisco Largo Caballero's military force
  ?militaryForce2 a dbo:MilitaryConflict ;
                  dbo:societalEvent [a dbo:SocietalEvent] .

  # Decedent at Francoist Spain who was a commander in one of these forces
  ?decedent dbo:placeOfDeath dbr:Francoist_Spain ;
           dbo:militaryCommanderIn ?militaryForce1 ;
           dbo:militaryCommanderIn ?militaryForce2 .
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
54,69,test,"Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v4 <http://dbpedia.org/property/father> ?v3 . ?v7 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentEntity
WHERE {
  # Narapati I of Ava's child and its parent
  ?narapatiI dbr:Narapati_I_of_Ava .
  ?child1 dbo:childOf ?narapatiI .
  ?parentEntity dbo:parentOf ?child1 .

  # Thinkhaya of Pagan's child, predecessor, and father
  ?thinkhaya dbr:Thinkhaya_of_Pagan .
  ?child2 dbo:childOf ?thinkhaya .
  ?predecessor dbo:predecessorOf ?child2 .
  ?fatherOfPredecessor dbo:parentOf ?predecessor .

  # Thihapate of Mohnyin's reference as office holder and royalty
  ?thihapate dbr:Thihapate_of_Mohnyin .
  FILTER EXISTS { ?thihapate dbo:officeHolder . }
  FILTER EXISTS { ?thihapate dbo:royalty . }

  # Ensure the parent entity is related to Thihapate's reference
  ?parentEntity dbo:relatedTo ?thihapate .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
801,65,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/property/writer> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer ?associatedArtist ?producer ?professional
WHERE {
  # Identify ""40 Dayz & 40 Nightz"" as a musical work and song
  dbr:40_Dayz_&_40_Nightz dbo:type dbo:MusicalWork ;
                          dbo:type dbo:Song .

  # Find the writer of this work who is also a musical artist and an artist
  ?work dbo:writer ?writer .
  FILTER (?work = dbr:40_Dayz_&_40_Nightz) .
  ?writer dbo:type dbo:MusicalArtist ;
          dbo:type dbo:Artist .

  # Determine the associated musical artist with this writer
  ?writer dbo:associatedMusicalArtist ?associatedArtist .
  
  # Locate the producer of ""40 Dayz & 40 Nightz""
  ?work dbo:producer ?producer .

  # Identify the professional (musical artist) in Rapper, known by the alter ego The Shadow
  ?professional dbo:alterEgo dbr:The_Shadow ;
                dbo:profession dbr:Rapper ;
                dbo:type dbo:MusicalArtist .
}
```",7,13,8,3,3,3,3,71,0,0,8,0,0.0,0
44,8,test,"Give me the band member of Undertow (band) and band member of the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?undertowMember ?associatedArtist ?artistMember 
WHERE {
  # Find band members of Undertow
  ?undertowMember a dbo:MusicalArtist ;
                  dbp:bandMember ?undertow .

  # Ensure Undertow is the correct band
  VALUES ?undertow { <http://dbpedia.org/resource/Undertow_(band)> }

  # Find associated musical artists of Queensrÿche that are both a group and an organization
  ?queensryche dbo:associatedMusicalArtist ?associatedArtist .
  VALUES ?queensryche { <http://dbpedia.org/resource/Queensr%C3%BDche> }
  
  FILTER (?associatedArtist != ?undertow) # Ensure it's not Undertow itself

  # Check if the associated artist is a group and an organization
  ?associatedArtist rdf:type dbo:Band ;
                    rdf:type dbo:Organization .

  # Find band members of the associated musical artist
  ?artistMember a dbo:MusicalArtist ;
                dbp:bandMember ?associatedArtist .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
92,47,test,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberName ?actorName
WHERE {
  # Find band members of Nevermore who are artists
  ?bandMember dbo:memberOf dbr:Nevermore .
  ?bandMember dbo:occupation dbr:Musician .

  # Get the name of the band member
  ?bandMember foaf:name ?bandMemberName .

  OPTIONAL {
    # Find actors in ""Return to Nuke 'Em High Volume 1"" who are artists
    ?actor dbo:starringIn dbr:Return_to_Nuke_'Em_High_Volume_1 .
    ?actor dbo:occupation dbr:Actor .
    
    # Get the name of the actor
    ?actor foaf:name ?actorName .

    # Ensure the band member and actor are the same person
    FILTER (?bandMember = ?actor)
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
378,57,test,"Give me the war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of the commander in Great Siege of Gibraltar.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfGahn ?peninsularWarCommander ?gibraltarSiegeCommander
WHERE {
  # Wars involving Carl Pontus Gahn
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:militaryConflict ?warOfGahn .

  # Commanders of the Peninsular War
  ?peninsularWar dbr:Peninsular_War .
  ?peninsularWar dbo:commander ?peninsularWarCommander .

  # Commanders known for the Great Siege of Gibraltar
  ?gibraltarSiege dbr:Great_Siege_of_Gibraltar .
  ?gibraltarSiege dbo:commander ?gibraltarSiegeCommander .
}
```

This query aims to retrieve:
- The military conflicts associated with Carl Pontus Gahn.
- Commanders from the Peninsular War.
- Commanders known for their role in the Great Siege of Gibraltar.",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
801,51,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find the musical artist of the album ""What U See Is What U Get""
  ?album a dbo:MusicalAlbum ;
         rdfs:label ""What U See Is What U Get""@en .
  
  ?album dbo:musicalArtist ?artist ;
         dbo:work ?musicalWork .

  # Ensure the musical artist is also an artist
  ?artist a dbo:MusicalArtist, dbo:Artist .

  # Find the producer of a work by 50 Cent that is both a song and a musical work
  ?song a dbo:Songs , dbo:MusicalWork ;
        dbo:work ?musicalWork .
  
  ?producer dbo:producedBy ?song ;
            dbo:worksFor dbr:50_Cent .

  # Link the producer to the artist of ""What U See Is What U Get""
  FILTER (?producer = ?artist)
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
404,58,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  ?child dbo:father dbr:Ernest_Augustus,_Duke_of_Brunswick .
  ?child a dbo:RoyalFamily .
  ?parent dbo:child ?child .
  ?spouse dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia .
  ?father dbo:child ?spouse .
  FILTER (?parent = ?father)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
767,29,test,Give me the reference to  and entity in Baden-Württemberg and alma mater of the administration of George K. Nash.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?administrationEntity WHERE {
  # Find George K. Nash and his alma mater
  ?nash a dbo:Person ;
        foaf:name ""George K. Nash"" ;
        dbo:almaMater ?almaMater .

  # Find the administration entity related to George K. Nash in Baden-Württemberg
  ?administrationEntity dbo:location dbr:Baden-Württemberg ;
                        dbo:administrator ?nash .
}
```

This query does the following:
- Identifies George K. Nash as a person and retrieves his alma mater.
- Finds an administration entity associated with him that is located in Baden-Württemberg.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
232,57,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeOfResidence ?actorName
WHERE {
  # Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:nationality dbr:France ;
                    dbo:residence ?settlement .
  
  FILTER (dbo:country ?settlement dbr:United_Kingdom) .

  # Actor of the claim to fame (film) related to a military conflict
  ?actor dbo:profession dbr:Actor ;
        dbo:film ?militaryFilm .
  ?militaryFilm dbo:genre dbr:Military_film .

  # Professional in acting, narration, and production who is Jon Pertwee's child
  ?professional dbo:parent dbr:Jon_Pertwee ;
                a dbo:Actor ;
                dbo:profession dbr:Narrator ;
                dbo:profession dbr:Producer .
  
  # Linking the actor to the professional
  ?actor dbp:name ?actorName .

}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
801,64,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in the alter ego of the true self of The Shadow and producer of Westside Story (song).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the album and its associated musical artist
  dbr:What_U_See_Is_What_U_Get dbo:musicalArtist ?albumArtist .
  
  # Ensure the artist is recognized as a general artist
  ?albumArtist a dbo:MusicalArtist ;
              a dbo:Artist .

  # Check if this artist produced ""Westside Story (song)""
  ?albumArtist dbo:producer dbr:Westside_Story_(song) .

  # Find an alter ego related to ""The Shadow""
  OPTIONAL {
    ?albumArtist dbo:alterEgo ?alterEgo .
    ?alterEgo rdfs:label ?shadowLabel .
    FILTER(CONTAINS(LCASE(?shadowLabel), ""the shadow""))
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
281,63,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v6 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country ?war1 ?war2 ?militaryUnit
WHERE {
  # Bob Heffron's birthplace country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country ;
              rdfs:label ?country .

  # Jonathon Band's award war
  dbr:Jonathon_Band dbo:award ?award .
  ?award dbo:relatedTo ?war1 .

  # Heather Roy's profession military unit
  dbr:Heather_Roy dbo:profession ?profession .
  ?profession a dbo:MilitaryUnit ;
              rdfs:label ?militaryUnit .
  ?profession dbo:relatedTo ?war2 .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
767,56,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement ?fictionalCharacter ?almaMater
WHERE {
  # Settlement in the administration of Green
  ?green dbo:position ?administration .
  ?administration dbo:location ?settlement .
  
  # Alter ego (fictional character) of Matthew Burland
  dbr:Matthew_Burland dbo:fictionalAlterEgo ?fictionalCharacter .

  # Alma mater of Carl L. Nippert
  dbr:Carl_L._Nippert dbo:almaMater ?almaMater .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
9,61,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?university WHERE {
  ?award dbo:wikiPageRedirects dbr:Royal_Medals .
  ?person dbo:awarded dbr:Royal_Medals .
  ?person dbo:almaMater ?university .
  ?university a dbo:EducationalInstitution ;
             dbo:location dbr:Northern_Ireland ;
             dbp:nickname ?nickname .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
378,49,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commanderFame WHERE {
  # Find Carl Pontus Gahn and his associated war
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:birthName ?birthName .
  
  OPTIONAL { 
    ?person dbo:militaryConflict ?war .
  }
  
  # Find Thomas Trigge and his role in a military conflict
  ?commander rdfs:label ""Thomas Trigge""@en .
  ?commander dbo:militaryConflict ?war .
  ?commander dbo:claimToFame ?commanderFame .

}
```

This query does the following:
- Identifies Carl Pontus Gahn and retrieves any military conflict he was involved in.
- Identifies Thomas Trigge, finds the war he commanded, and retrieves his claim to fame.",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
996,18,test,Give me the force of the awardee of the elevation of Lac d'Avoriaz and entity in the award of Ekrem Akurgal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?elevation ?awardEntity
WHERE {
  # Find the elevation of Lac d'Avoriaz
  OPTIONAL {
    dbr:Lac_d%27Avoriaz dbo:elevation ?elevation .
  }

  # Find the award associated with Ekrem Akurgal and its entity
  OPTIONAL {
    ?ekremAward dbo:recipient dbr:Ekrem_Akurgal ;
               dbo:award ?awardEntity .
  }

  # Assuming 'force' is a property related to the awardee, though this might need clarification
  OPTIONAL {
    ?ekremAward dbo:attribute ?force .
  }
}
```

This query attempts to retrieve:
- The elevation of Lac d'Avoriaz.
- The entity associated with Ekrem Akurgal's award.
- Any attribute or property (interpreted as 'force') related to the awardee.

Note: The exact properties like `dbo:attribute` for 'force' might need adjustment based on actual DBpedia schema details, which may require further exploration if this is a metaphorical request.",5,5,6,3,2,3,2,20,0,0,4,0,0.0,0
328,55,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Ferenc Szálasi's commander in force
  ?szalasiCommander a dbo:MilitaryPerson ;
                    dbo:commandedBy dbr:Ferenc_Szálasi .

  # Leader of an office that is a government agency under Joseph Stalin
  ?stalinOffice a dbo:GovernmentAgency ;
                dbo:leader ?person .
  ?stalinOffice dbo:headOf dbr:Joseph_Stalin .

  # Awardee of the award from Bruce Fraser, 1st Baron Fraser of North Cape
  ?fraserAward a dbo:Award ;
               dbo:recipient ?person ;
               dbo:awardedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .

  # Ensure all conditions are met by the same person
  FILTER (?szalasiCommander = ?person && ?stalinOfficeLeader = ?person && ?fraserAwardee = ?person)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
959,32,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMater
WHERE {
  # Alma mater of Eiji Ōtsuka
  ?eiji dbo:almaMater ?almaMater .
  
  # Ensure alma mater is a Japanese organization, university, and educational institution
  ?almaMater rdf:type dbo:Organization ;
             rdf:type dbo:University ;
             rdf:type dbo:EducationalInstitution ;
             dbo:country dbr:Japan .

  # Native country of Yōichi Masuzoe
  ?yoi foaf:nationality ?nativeCountry .
  
  # Link alma mater's country to Yōichi Masuzoe's native country
  ?almaMater dbo:country ?nativeCountry .

  # Bind Eiji Ōtsuka and Yōichi Masuzoe entities
  VALUES ?eiji { <http://dbpedia.org/resource/Eiji_Ōtsuka> }
  VALUES ?yoi { <http://dbpedia.org/resource/Yōichi_Masuzoe> }
}
```",4,9,5,2,2,3,3,71,0,0,84,0,0.0,0
232,60,test,"Give me the child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  # Jon Pertwee's birth name and child
  dbr:Jon_Pertwee dbo:birthName ?birthName .
  ?person dbo:birthName ?birthName ;
          dbo:child ?child .

  # French politician who is an office holder, with a British residence
  ?politician dbo:nationality dbr:France ;
              dbo:officeHolder ?office ;
              dbo:residence ?settlement .
  
  FILTER EXISTS { ?office dbo:country dbr:France } # Ensure the office is in France

  ?settlement a dbo:Settlement ;
              dbp:country dbr:United_Kingdom .

}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
959,41,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry
WHERE {
  # Yōichi Masuzoe's residence
  dbr:Yōichi_Masuzoe dbo:residence ?residence .
  
  # Residence should be a country
  ?residence rdf:type dbo:Country .
  ?residence dbp:nativeName ?nativeCountry .

  # Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?almaMater .
  
  # Alma mater conditions
  ?almaMater rdf:type dbo:University ;
             rdf:type dbo:Organisation ;
             rdf:type dbo:EducationalInstitution ;
             dbp:country ""Japan"" .

  # Eiji Ōtsuka as manager of Júbilo Iwata in 2013
  dbr:Eiji_Ōtsuka dbo:managerOf ?jubiloIwata .
  ?jubiloIwata dbp:season ""2013"" ;
              rdf:type dbo:SoccerClub .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
492,31,test,Give me the commander in Franco-Hova Wars and person decedent at the work of the author of French Algeria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?decedent WHERE {
  # Find commanders in the Franco-Hova Wars
  ?war dbo:participatedIn [
    a dbo:MilitaryConflict ;
    dbo:location dbr:Hova_Kingdom ;
    dbo:opposingSide dbr:France .
  ].
  
  ?commander dbo:commanded ?unit ;
             dbo:occupation ""Military commander"" .

  # Find authors related to French Algeria
  ?author dbo:nationality dbr:France ;
          dbo:work dbr:French_Algeria .

  # Find a person who died while working on the author's work
  ?decedent dbo:deathPlace ?place .
  ?decedent dbo:causeOfDeath ""Work-related accident"" .
  
  FILTER EXISTS {
    ?author dbo:relatedTo ?work .
    ?decedent dbo:workedOn ?work .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
378,69,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfGahn ?peninsularWarCommander ?triggeFame
WHERE {
  # Carl Pontus Gahn's birth name and associated war
  dbr:Carl_Pontus_Gahn dbo:birthName ?birthName .
  ?person dbo:birthName ?birthName .
  ?person dbo:participatedInMilitaryConflict ?warOfGahn .

  # Commander in the Peninsular War
  ?peninsularWarCommander dbo:commanded ?peninsularWar .
  FILTER (str(?peninsularWar) = ""Peninsular_War"") .

  # Thomas Trigge's claim to fame
  dbr:Thomas_Trigge dbo:claimToFame ?triggeFame .
  ?triggeFame a dbo:MilitaryConflict ;
              a dbo:SocietalEvent ;
              a dbo:Event .
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
391,63,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/nickname> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  ?person dbo:nativePlace dbr:Jackson,_Tennessee .
  
  ?work dbo:director dbr:Michael_Ballhaus ;
        dbo:starring ?person .

  ?movie dbo:starring ?person, dbr:Roz_Ryan ;
         a dbo:Film .

  OPTIONAL { ?person dbp:nickName ?nickname . FILTER regex(?nickname, ""Jackson"", ""i"") }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
701,56,test,"Give me the parent of Henuttawy (19th dynasty) and parent of the child of Nefertari and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?henuttawyParent ?nefertariChildParent ?commanderFatherSpouse
WHERE {
  # Henuttawy (19th dynasty) parent
  OPTIONAL {
    ?henuttawy a dbo:Person ;
               rdfs:label ""Henuttawy""@en .
    ?henuttawy dbo:parent ?henuttawyParent .
  }

  # Nefertari's child's parent
  OPTIONAL {
    ?nefertari a dbo:Person ;
               rdfs:label ""Nefertari""@en .
    ?child dbo:parent ?nefertariChildParent ;
           dbo:parent ?nefertari .
  }

  # Commander in the Battle of Perire's father's spouse
  OPTIONAL {
    ?battle dbr:Battle_of_Perire ;
            dbo:commander ?commander .
    ?commander dbo:father ?commanderFather .
    ?commanderFather dbo:spouse ?commanderFatherSpouse .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
959,67,test,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of University of Tsukuba.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry
WHERE {
  ?politician a dbo:Politician ;
              dbo:electedAsMemberOf ?houseElection ;
              dbo:nationality ?nationality .
  
  ?houseElection dbr:2010_Japanese_House_of_Councillors_election .

  ?sportsManager a dbo:SportsManager ;
                 dbo:managedTeam ?team .
  
  ?team dbp:season <http://dbpedia.org/resource/1998_Kashima_Antlers_season> .

  ?politician dbo:managerOf ?team .

  ?politician dbo:almaMater dbr:University_of_Tsukuba .

  ?nationality dbo:countryName ?nativeCountry .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
184,60,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent1 ?parent2 WHERE {
  # Step 1: Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            dbp:birthYear ""1925""^^xsd:gYear ;
            dbo:motherOrFather ?parentMargaret .
  
  ?childOfParentMargaret dbo:motherOrFather ?parentMargaret .

  # Step 2: Landmark at elevation 96.0
  ?landmark a dbo:Landmark ;
            dbp:elevation ""96.0""^^xsd:float ;
            dbo:settlement ?settlement .
  
  ?native dbr:birthPlace ?settlement .

  # Get the parents of both individuals
  ?parent1 dbo:motherOrFather ?childOfParentMargaret .
  ?parent2 dbo:motherOrFather ?native .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
747,23,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthdate WHERE {
  # Find a decedent with a known birthdate
  ?decedent dbo:birthDate ?birthdate .
  
  # Find an athlete who is also a soccer player, born on the same date as the decedent
  ?person dbo:birthDate ?birthdate ;
          rdf:type dbo:Athlete ;
          dbo:sport dbr:Soccer .

  # Ensure this person has some connection to Zolotonosha
  OPTIONAL { ?person dbp:residence dbr:Zolotonosha . }
}
```

This query does the following:
- Identifies a decedent with a known birthdate.
- Searches for an athlete who is specifically a soccer player and shares the same birthdate as the decedent.
- Optionally checks if this person has any connection to Zolotonosha.",3,5,4,3,1,3,3,71,0,0,30,0,0.0,0
16,53,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley and professional in Actress.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find Ted McGinley's birth name and spouse who is an actress
  ?ted a dbo:Actor ;
      foaf:name ""Ted McGinley"" ;
      foaf:mbox ?email .
  
  ?spouse foaf:mbox ?email ; # Same email implies same person in DBpedia context
          dbo:spouse ?ted ;
          dbo:occupation ?occupation .

  FILTER(?occupation = ""Actress"") .

  # Find Gigi Rice's birth name
  ?gigi a dbo:Person ;
        foaf:name ""Gigi Rice"" ;
        foaf:birthday ?birthDate .
  
  ?gigiBirthName foaf:name ?birthName .
  ?gigi foaf:nick ?nick ; 
        foaf:givenname ?givenName .

  # Match the birth name of Gigi Rice with the person found
  ?person foaf:name ?birthName ;
          a dbo:Person .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
281,44,test,"Give me the war of the profession, that is a military unit, of Heather Roy and entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war
WHERE {
  # Heather Roy's profession that is a military unit
  dbr:Heather_Roy dbo:profession ?militaryUnit .
  
  # Ensure the profession is indeed a military unit
  ?militaryUnit rdf:type dbo:MilitaryUnit .

  # Bob Heffron's birthplace country
  dbr:Bob_Heffron dbo:birthPlace ?country .
  
  # Beauchamp Seymour, 1st Baron Alcester's war
  dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:war ?beauchampWar .

  # Find the common war associated with Heather Roy's military unit and Beauchamp Seymour
  ?militaryUnit dbo:participatedIn ?war .
  ?beauchampWar rdf:type ?warType .
  
  FILTER (?war = ?beauchampWar)

  # Ensure the war is also related to Bob Heffron's birthplace country
  ?country dbo:locationOf ?war .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
294,21,test,"Give me the resting place of Edwin A. Keeble and resting place of Luke Lea (American politician, born 1879) and entity in the birth place, that is a settlement, of Marion James.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?edwinRestingPlace ?lukeRestingPlace ?marionBirthSettlement
WHERE {
  # Resting place of Edwin A. Keeble
  OPTIONAL { 
    dbr:Edwin_A._Keeble dbo:deathPlace ?edwinRestingPlace .
  }
  
  # Resting place of Luke Lea (American politician, born 1879)
  OPTIONAL { 
    dbr:Luke_Lea_(politician) dbo:deathPlace ?lukeRestingPlace .
  }

  # Entity in the birthplace that is a settlement for Marion James
  OPTIONAL {
    dbr:Marion_James dbp:birthPlace ?marionBirthPlace .
    ?marionBirthPlace rdf:type dbo:Settlement .
    BIND(?marionBirthPlace AS ?marionBirthSettlement)
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
328,69,test,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award ?governmentAgency ?leader
WHERE {
  # Ferenc Szálasi's commander
  ?szalasi a dbo:Person ;
           foaf:name ""Ferenc Szálasi"" .
  
  ?commander dbo:commanderOf ?szalasi .

  # Award related to Volcano and Ryukyu Islands campaign
  ?campaign dbo:name ?campaignName .
  FILTER (CONTAINS(LCASE(?campaignName), ""volcano"") || CONTAINS(LCASE(?campaignName), ""ryukyu islands""))
  
  ?award dbo:awardee ?commander ;
         dbo:relatedTo ?campaign .

  # Government agency leader related to Gustav Jonson
  ?jonson a dbo:Person ;
          foaf:name ""Gustav Jonson"" .
  
  ?governmentAgency a dbo:GovernmentAgency ;
                    dbo:leader ?leader .
  
  ?leader dbo:officeHolderOf ?jonson .
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
617,32,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of Antiochus III the Great.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild WHERE {
  # Seleucus II Callinicus and his children
  dbr:Seleucus_II_Callinicus dbo:spouse ?spouse1 .
  
  ?childOfSeleucus dbo:parent dbr:Seleucus_II_Callinicus ;
                  a dbo:Monarch ;
                  dbo:spouse ?spouse2 .

  # Spouse of the child must be a child of Antiochus III
  ?spouse2 dbo:parent ?antiochusChild .
  ?antiochusChild dbo:parent dbr:Antiochus_III_the_Great .

  # The child of Seleucus II Callinicus who is royalty and has the spouse
  ?childOfChild dbo:parent ?childOfSeleucus ;
               a dbo:Monarch .
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
392,27,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?province ?region ?entityInItaly
WHERE {
  # Sebastiano Bianchetti's residence
  ?person rdfs:label ""Sebastiano Bianchetti""@en .
  ?person dbo:residence ?settlement .
  FILTER (LANG(?personLabel) = 'en')
  
  ?settlement a dbo:Settlement ;
              dbp:country dbr:Italy .

  # Province of the settlement
  ?settlement dbo:administrativeTerritory ?province .

  # Aguilar de Segarra's time zone region related to a sports event
  ?place rdfs:label ""Aguilar de Segarra""@en .
  FILTER (LANG(?placeLabel) = 'en')
  
  ?place dbo:timeZone ?timeZone .
  ?timeZone dbo:region ?region .

  # Ensure the region is associated with a sports event
  ?sportsEvent dbo:location ?region ;
               a dbo:SportsEvent .

  # Entity in Italy
  ?entityInItaly a dbo:Place ;
                 dbp:country dbr:Italy .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
427,60,test,"Give me the reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?micheleParty ?romanoBirthName
WHERE {
  # Find Michele Pinto's political party
  ?michele a dbo:Person ;
           foaf:name ""Michele Pinto""@en .
  OPTIONAL { 
    ?michele dbo:party ?micheleParty .
  }

  # Find Romano Prodi's birth name, ensuring he is an office holder and politician
  ?romano a dbo:Politician, dbo:OfficeHolder ;
          foaf:name ""Romano Prodi""@en ;
          foaf:givenName ?romanoBirthName .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
404,26,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild
WHERE {
  ?princeGeorgeWilliam a dbo:Person ;
                      foaf:name ""Prince George William of Hanover""@en .
  
  ?parent dbo:parent ?princeGeorgeWilliam ;
          a dbo:RoyalFamilyMember .

  ?royalChild dbo:parent ?parent ;
              a dbo:RoyalFamilyMember .

  BIND(?royalChild AS ?grandchild)
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
767,57,test,Give me the entity in Baden-Württemberg and reference to the alter ego of Black Hood and alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?alterEgo ?almaMater
WHERE {
  ?entity dbo:stateOrProvince dbr:Baden-Württemberg .
  
  ?entity dbo:alias ?alterEgo .
  FILTER regex(?alterEgo, ""Black Hood"", ""i"") .

  ?admin dbo:almaMater ?almaMater .
  ?entity dbo:administrator ?admin .

  ?nash dbr:George_Kilbon_Nash .
  ?admin dbo:relatedTo ?nash .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
994,68,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist
WHERE {
  # Fredrik Thordendal's band
  dbr:Fredrik_Thordendal dbo:memberOf ?band1 .
  
  # Band is an organization
  ?band1 a dbo:Band ;
         a dbo:Organization .

  # Members of the band who are also bands/groups/organizations
  ?band1 dbo:member ?member .
  ?member a dbo:Band ;
          a dbo:Group ;
          a dbo:Organization .

  # Associated musical artists of these members
  ?member dbo:associatedMusicalArtist ?artist1 .

  # Donald Maynard Dokken's associated artist
  dbr:Donald_Maynard_Dokken dbo:associatedMusicalArtist ?dokkenArtist .

  # Watchtower reference and its associated artist
  dbr:Watchtower dbo:associatedMusicalArtist ?watchtowerArtist .
  
  # Associated musical artist of the watchtower artist
  ?watchtowerArtist dbo:associatedMusicalArtist ?artist2 .

  # Final association to find the desired artist
  ?dokkenArtist = ?artist2 ;
                 dbo:associatedMusicalArtist ?associatedArtist .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
391,22,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?movie
WHERE {
  ?actor dbo:nationality dbr:United_States ;
         dbo:birthPlace dbr:Compton,_California .
  
  ?movie a dbo:Film ;
         dbo:starring ?actor ;
         dbo:starring dbr:Roz_Ryan .

  ?movie rdf:type dbo:TelevisionShow .
}
```

This query does the following:
- Selects actors who are natives of Compton, California.
- Ensures these actors have acted in a movie that is also classified as a television show.
- Checks if Roz Ryan has co-starred in the same movie.",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
232,46,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?film ?conflict WHERE {
  # Sean Pertwee and his notable works
  dbr:Sean_Pertwee a dbo:Actor ;
                   foaf:name ""Sean Pertwee"" .

  OPTIONAL {
    ?work dbo:starring dbr:Sean_Pertwee .
    ?work rdf:type dbo:Film ;
          rdfs:label ?film .
  }

  OPTIONAL {
    ?conflict dbo:participant dbr:Sean_Pertwee ;
              rdf:type dbo:MilitaryConflict ;
              rdfs:label ?conflict .
  }
  
  # Jon Pertwee as Sean's father
  ?jon a dbo:Person ;
       foaf:name ""Jon Pertwee"" ;
       dbo:child dbr:Sean_Pertwee .

  FILTER(?film || ?conflict) # Ensure at least one is present
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
701,67,test,"Give me the parent of Meritamen and spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the child of Seti I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouseOfFather ?parentOfMeritamen
WHERE {
  # Meritamen's parent
  ?meritamen dbo:motherOrFather ?parentOfMeritamen .
  VALUES ?meritamen { <http://dbpedia.org/resource/Meritamen> } .

  # Commander in the Battle of Perire who is royalty
  ?commander dbp:participatedInBattle ?battle .
  ?battle rdfs:label ""Battle of Perire""@en .
  
  ?commander dbo:nationality ?royalty .
  VALUES ?royalty { <http://dbpedia.org/resource/Royal> } .

  # Father of the commander
  ?father dbp:child ?commander .
  
  # Spouse of the father
  ?spouseOfFather dbo:spouse ?father .

  # Seti I's grandchild and their parent
  ?setiI dbo:child ?child1 .
  ?child1 dbo:child ?grandChild .
  ?parentOfGrandChild dbp:child ?grandChild .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
659,42,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  # Rutger Jan Schimmelpenninck's military force
  ?schimmelpenninck dbo:commanderOf ?force1 .
  
  # Arthur Wellesley, 1st Duke of Wellington's military force
  ?wellington dbo:commanderOf ?force2 .

  # Battle of Leipzig involvement
  dbr:Battle_of_Leipzig dbo:commander ?schimmelpenninck .

  # Ensure the forces are the same
  FILTER (?force1 = ?force2)

  # Bind the common force to a variable
  BIND(?force1 AS ?militaryForce)
}
```",5,8,6,2,3,3,3,71,0,0,6,0,0.0,0
547,23,test,Give me the resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?restingPlace
WHERE {
  ?williamHaliburton a dbo:Person ;
                     foaf:name ""William Haliburton""@en .
  
  ?child1 dbo:parent ?williamHaliburton .
  ?grandChild dbo:parent ?child1 .

  ?grandChild dbo:placeOfBurial ?restingPlace .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
314,28,test,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of the award of Sergei Makovetsky and person deceased at the headquarter of House of Sombrerete.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander WHERE {
  ?commander a dbo:Person .
  
  # Lisa Gavrić's profession related to an event and societal event
  ?professionEvent dbo:agent dbr:Lisa_Gavrić ;
                   a (dbo:Event|dbo:SocietalEvent) .

  # Commander in the same profession as Lisa Gavric
  ?commander dbo:occupation ?professionEvent .
  
  # Awardee of Sergei Makovetsky
  ?awardEvent dbo:recipient ?commander ;
              dbo:name dbr:Sergei_Makovetsky_Award .

  # Deceased at the headquarters of House of Sombrerete
  ?deathEvent dbo:place dbr:Headquarters_of_House_of_Sombrerete ;
              dbo:agent ?commander ;
              a dbo:Death .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
184,35,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent1 ?parent2
WHERE {
  # Find the child of Archduke Joseph Francis of Austria
  ?child dbo:father dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Find the parent of that child
  ?child dbo:parent ?parent1 .

  # Find a native of Budapest
  ?budaPerson dbo:nativePlace dbr:Budapest .

  # Find the parent of the native of Budapest
  ?budaPerson dbo:parent ?parent2 .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
801,55,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?work dbo:composer ?writer .
  ?writer a dbo:MusicalArtist ;
          a dbo:Artist ;
          dbo:producer ?work .

  ?work rdfs:label ""40 Dayz & 40 Nightz""@en .
  ?work dbo:musicalWork dbr:_50_Cent .

  ?artist dbo:alterEgo dbr:The_Shadow .
  ?artist dbo:professional ?writer .

  FILTER (lang(?workLabel) = 'en')
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
488,42,test,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?administration ?birthPlace
WHERE {
  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .

  # Toyotomi Hideyori's administration (Emperor Go-Mizunoo's father)
  OPTIONAL {
    dbr:Toyotomi_Hideyori dbo:officeHolder ?administration .
  }

  # Saigō Takamori's birth place (Commander in Boshin War)
  OPTIONAL {
    dbr:Saigō_Takamori dbo:birthPlace ?birthPlace .
  }
}
```",5,5,6,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
528,46,test,"Give me the war of the commander in Battle of La Rinconada de Ate and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war
WHERE {
  # Find the commander of the Battle of La Rinconada de Ate and their associated war
  ?battle dbr:Battle_of_La_Rinconada_de_Ate ;
         dbo:commander ?commander .
  
  ?commander dbo:participatedIn ?war1 .

  # Find the military force involved in a societal event in Chile and its associated war
  ?event dbo:location dbr:Chile ;
         dbo:militaryForce ?militaryForce .
  
  ?militaryForce dbo:participatedIn ?war2 .

  # Ensure both wars are the same
  FILTER (?war1 = ?war2)
  BIND(?war1 AS ?war)
}
```",5,6,6,3,2,3,3,71,0,0,14,0,0.0,0
701,52,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II and parent of the child of Ramesses II.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonEntity
WHERE {
  # Spouse of Amun-her-khepeshef and parent of their child
  ?spouse1 dbo:spouse ?amunHerKhepeshef .
  ?child1 dbo:parent ?spouse1 .
  ?amunHerKhepeshef dbp:name ""Amun-her-khepeshef""@en .

  # Spouse of Ramesses II and parent of their child
  ?spouse2 dbo:spouse ?ramessesII .
  ?child2 dbo:parent ?spouse2 .
  ?ramessesII dbp:name ""Ramesses II""@en .

  # Common entity condition
  FILTER (?spouse1 = ?commonEntity && ?spouse2 = ?commonEntity)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
427,54,test,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of Italian People's Party (1994) and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherParty ?italianPeopleParty ?prodiParty
WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  
  OPTIONAL {
    ?alumnus dbo:father ?father .
    ?father dbo:politicalAffiliation ?fatherParty .
  }
  
  # Italian People's Party (1994)
  dbr:Italian_People%27s_Party_(1994) dbo:partyName ?italianPeopleParty .

  # Romano Prodi's party
  dbr:Romano_Prodi dbo:politicalAffiliation ?prodiParty .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
963,16,test,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?rulingPartyAdministration ?country
WHERE {
  # Find the ruling party in Sremski Karlovci
  ?location a dbo:PopulatedPlace ;
            rdfs:label ""Sremski Karlovci""@en .
  
  ?party dbo:headquarterLocation ?location ;
         a dbo:PoliticalParty .

  ?party dbp:rulingPartyOf ?administration .
  ?administration dbo:country ?country .

  # Filter countries in the Central European Time zone
  VALUES ?timeZone { ""Central European Time"" }
  ?country dbp:timeZone ?timeZone .
}
```",4,6,5,2,2,3,2,20,0,0,84,0,0.0,0
435,27,test,Give me the territory administered from Reykjavík and work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?territory ?work ?region
WHERE {
  # Territory administered from Reykjavík (Iceland)
  dbr:Reykjavík dbo:administrativeTerritory ?territory .

  # Work of the author of ""Iceland"" (Jón Árnason)
  dbr:Jón_Árnason dbo:work ?work .

  # Region of the time zone for Bombali Shebora Chiefdom
  dbr:Bombali_Shebora_Cheifdom dbo:timeZone ?tz .
  ?tz dbo:region ?region .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
184,48,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfChild ?parentOfNative
WHERE {
  # Step 1: Find Archduke Joseph Francis of Austria's child
  ?child dbo:parent dbr:Joseph_Francis_of_Austria .
  
  # Step 2: Find the parent of that child
  ?child dbo:parent ?parentOfChild .

  # Step 3: Identify a landmark at elevation 96.0 that is a settlement
  ?landmark a dbo:Settlement ;
            dbp:elevation ""96.0""^^xsd:float .
  
  # Step 4: Find the native of this landmark
  ?native dbo:nativePlace ?landmark .

  # Step 5: Find the parent of this native
  ?native dbo:parent ?parentOfNative .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
659,47,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryConflict ?polishHorse
WHERE {
  # Arthur Wellesley, 1st Duke of Wellington
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:commander ?commander .

  # Military conflicts he commanded
  ?commander dbo:militaryConflict ?militaryConflict .

  # Polish Horse as a military unit/organization
  ?polishHorse a dbo:MilitaryUnit ;
               rdfs:label ""Polish Horse""@en .
  
  # Participation of Polish Horse in the conflict
  ?polishHorse dbo:participatedIn ?militaryConflict .
}
```",5,9,6,3,2,3,3,71,0,0,71,0,0.0,0
534,16,test,"Give me the headquarter of the owner of RDS Arena and birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarter ?birthPlace
WHERE {
  # Find the owner of RDS Arena
  dbr:RDS_Arena dbo:location ?arenaLocation .
  ?owner dbo:owns ?arenaLocation .
  
  # Get the headquarter of the owner
  ?owner dbo:headquarters ?headquarter .

  # Identify Desmond FitzGerald and his children who are politicians or office holders
  dbr:Desmond_FitzGerald_Politician dbo:child ?child .
  ?child a dbo:Politician ;
         dbo:officeHolder ?office .

  # Get the birthplace of such a child
  ?child dbo:birthPlace ?birthPlace .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
754,16,test,Give me the parent of the child of Ram Khamhaeng and parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandParentOfChild ?greatGrandParent 
WHERE {
    ?child dbo:childOfRamKhamhaeng dbpedia:Ram_Khamhaeng .
    ?parent dbo:parent ?child .
    
    ?mayHninHtapi dbo:parent ?parentMayHninHtapi .
    ?greatGrandParent dbo:parent ?parentMayHninHtapi .

    BIND(?parent AS ?grandParentOfChild)
}",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
92,64,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?artist WHERE {
  # Find Joe Satriani's band
  dbr:Joe_Satriani dbo:associatedBand ?band .

  # Find Jim Sheppard's associated artist (Nevermore)
  dbr:Nevermore dbo:member ?sheppard .
  ?sheppard foaf:name ""Jim Sheppard""@en .

  # Connect to the film Nevermore (2006) through an artist
  OPTIONAL {
    ?film dbo:title ""Nevermore (2006)""@en .
    ?film dbo:starring ?artist .
  }

  FILTER(?band != dbr:Nevermore)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,30,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName
WHERE {
  ?person dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Compton,_California .
  
  ?movie dbo:starring ?person ;
         rdf:type dbo:Film ;
         dbo:workExample ?work ;
         dbo:televisionShow ?tvShow .

  ?work rdf:type dbo:Work .
  ?tvShow rdf:type dbo:TelevisionSeries .

  ?castMember dbo:actor ?person ;
              dbo:characterName ?role .
  
  ?movie dbp:starring dbr:Roz_Ryan .

  ?departedFilm dbo:starring ?person ;
                rdfs:label ""The Departed""@en .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
92,59,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorName ?bandMemberName WHERE {
  ?movie dbo:actor ?actor .
  ?actor foaf:name ?actorName .

  FILTER regex(?movie, ""Return to Nuke 'Em High Volume 1"", ""i"")

  ?film dbo:title ""Nevermore"" .
  ?film dbo:releaseDate ?date .
  FILTER (YEAR(?date) = 2006)

  ?band dbo:member ?bandMember .
  ?band foaf:name ?film .

  ?actor dbo:member ?bandMember .

  ?bandMember foaf:name ?bandMemberName
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
801,63,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of the true self of The Shadow and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v6 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Linking ""40 Dayz & 40 Nightz"" to its producer, 50 Cent
  dbr:40_Dayz_&_40_Nightz dbo:producer dbr:50_Cent .
  
  # Finding the associated musical artist who is also an artist
  ?artist a dbo:MusicalArtist ;
          dbo:associatedWith dbr:50_Cent .

  # Ensuring the artist has an alter ego related to ""The Shadow""
  OPTIONAL {
    ?artist dbo:alterEgo dbr:The_Shadow .
  }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
783,17,test,"Give me the associated musical artist of Appietus and band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?associatedArtist ?bandMember
WHERE {
  # Find Appietus's associated musical artist
  dbr:Appietus dbo:musicBrainzArtist dbr:?AssociatedArtist .
  
  # Ensure the associated artist was born as an artist and is a musical artist
  OPTIONAL { dbr:?AssociatedArtist dbo:birthPlace ?birthPlace . }
  OPTIONAL { dbr:?AssociatedArtist dbo:profession dbr:Musical_Artist . }
  OPTIONAL { dbr:?AssociatedArtist dbo:profession dbr:Artist . }

  # Find band members related to Ebony Reigns
  OPTIONAL {
    ?bandMember dbo:musicBrainzArtist dbr:Ebony_Reigns .
  }
  
  # Ensure the associated artist is also a musical artist in some capacity
  FILTER EXISTS { 
    dbr:?AssociatedArtist dbo:profession dbr:Musical_Artist .
  }

  # Ensure the person was born as an artist
  FILTER EXISTS {
    dbr:?AssociatedArtist dbo:profession dbr:Artist .
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
9,46,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater
WHERE {
  # Find the organization in Belfast
  ?organization a dbo:Organization ;
                dbo:location dbr:Belfast .

  # Find the mayor of that organization who is also a politician
  ?mayor dbo:positionHeld ?position ;
         dbo:memberOf ?organization ;
         rdf:type dbo:Politician .

  # Find the alma mater of the mayor
  ?mayor dbp:almaMater ?almaMater .

  # Find an awardee of the Royal Medal
  ?awardee dbo:award dbr:Royal_Medal .

  # Ensure the alma mater is the same for both the mayor and the awardee
  ?awardee dbp:almaMater ?almaMater .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
9,50,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nickname ?almaMater WHERE {
  # Find the nickname of Queen's University Belfast
  dbr:Queen's_University_Belfast dbo:nickname ?nickname .

  # Find individuals who have won the Royal Medal and are alumni of Queen's University Belfast
  ?person dbo:award dbr:Royal_Medal .
  ?person dbo:almaMater dbr:Queen's_University_Belfast .

  # Retrieve their alma mater information
  ?person foaf:name ?name .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
547,18,test,Give me the resting place of Alan Cunningham and resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace
WHERE {
  VALUES ?person { 
    dbr:Alan_Cunningham_(explorer) 
    dbr:James_Burton_(Egyptologist) 
    dbr:Simon_Cadell 
  }
  
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
617,49,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royaltyChild
WHERE {
  # Seleucus II Callinicus and his children
  dbr:Seleucus_II_Callinicus dbo:child ?child1 .
  
  # Child of the child who is royalty
  ?child1 dbo:child ?grandchild .
  ?grandchild a dbo:Monarch .

  # Battle of Panium and its commanders
  dbr:Battle_of_Panium dbo:commander ?commander .
  
  # Commander's children
  ?commander dbo:child ?child2 .
  
  # Parent of the commander's child who is also royalty
  ?parent dbo:child ?child2 .
  FILTER (?grandchild = ?parent)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
801,58,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of 50 Cent and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?song ?producer ?associatedArtist WHERE {
  ?album a dbo:MusicalAlbum ;
         dbo:title ""What U See Is What U Get"" .
  
  ?song a dbo:Songs ;
        dbo:album ?album ;
        dbo:artist dbr:_50_Cent .

  OPTIONAL { ?song dbo:producer ?producer . }
  
  ?writer dbo:worksForCreativeWork ?song ;
          a dbo:MusicalArtist, dbo:Artist .
  
  ?associatedArtist dbo:worksWith ?writer ;
                    a dbo:MusicalArtist, dbo:Artist .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
92,63,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v6 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberName ?artistName ?furneyBandName ?sheppardArtistName
WHERE {
  # Band member of Nevermore (2006 film)
  ?film dbr:Nevermore_(2006_film) .
  ?film dbo:performer ?bandMember .
  ?bandMember foaf:name ?bandMemberName .

  OPTIONAL {
    ?bandMember dbo:associatedBand ?artist .
    ?artist foaf:name ?artistName .
  }

  # Band of Joseph Michael Furney
  ?furney dbr:Joseph_Michael_Furney .
  ?furney dbo:memberOf ?furneyBand .
  ?furneyBand foaf:name ?furneyBandName .

  # Musical artist associated with Jim Sheppard
  ?sheppard dbr:Jim_Sheppard_(musician) .
  ?sheppard dbo:associatedBand ?sheppardArtist .
  ?sheppardArtist foaf:name ?sheppardArtistName .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
492,52,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v2 <http://dbpedia.org/property/author> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find a military conflict involving Frédéric-Georges Herr
  ?conflict dbo:participant dbr:Frédéric-Georges_Herr .
  
  # Identify the commander of this conflict
  ?conflict dbo:commander ?commander .

  # Ensure the person is connected to Algiers and French Algeria context
  OPTIONAL {
    ?person dbo:deathPlace dbr:Algiers .
    ?person dbo:work dbr:French_Algeria .
    
    FILTER (?person = ?commander)
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
626,17,test,Give me the awardee of the award of the military force of Battle of Borodino and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?award ?battleBorodino ?battleLeipzig
WHERE {
  # Find the awardee of an award related to the Battle of Borodino
  ?award dbo:militaryConflict dbr:Battle_of_Borodino .
  ?award dbo:recipient ?person .

  OPTIONAL {
    # Find the commander in the Battle of Leipzig
    ?battleLeipzig dbo:commander ?person ;
                  rdf:type dbo:MilitaryEngagement ;
                  rdfs:label ""Battle of Leipzig""@en .
  }

  OPTIONAL {
    # Ensure the person is linked to the Battle of Borodino through an award
    ?battleBorodino dbo:militaryConflict dbr:Battle_of_Borodino ;
                    rdf:type dbo:MilitaryEngagement ;
                    rdfs:label ""Battle of Borodino""@en .
  }
}
```",4,4,5,3,2,3,2,20,0,0,9,0,0.0,0
701,49,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Nefertari.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
  ?commander dbo:event dbpedia:Battle_of_Perire .
  
  ?father dbo:child ?commander .
  
  ?spouse dbo:spouse ?father ;
          a dbo:Monarch ; # Assuming royalty is represented by Monarch class
  
  ?nefertariChild dbo:parent ?spouse ;
                  dbo:parent dbpedia:Nefertari .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
994,60,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist
WHERE {
  # Don Dokken as a persona of a musical artist
  dbr:Don_Dokken dbo:associatedBand dbr:Dokken .
  
  # Band members of the band associated with Don Dokken
  ?bandMember dbo:memberOf dbr:Dokken ;
              a dbo:MusicalArtist .

  # Associated musical artists of Watchtower
  dbr:Watchtower dbo:associatedBand ?watchtowerBand .
  ?watchtowerBand dbo:associatedBand ?associatedArtist .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,28,test,Give me the spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice and professional in Actress.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouseTed ?spouseGeorgeanne
WHERE {
  # Ted Martin McGinley's spouse
  ?personTed a dbo:Person ;
             foaf:name ""Ted Martin McGinley"" ;
             dbo:birthName ""Ted Martin McGinley"" .
  ?personTed dbo:spouse ?spouseTed .

  # Georgeanne Marie Rice's spouse (professional in Actress)
  ?personGeorgeanne a dbo:Person, dbo:Actor ;
                   foaf:name ""Georgeanne Marie Rice"" ;
                   dbo:birthName ""Georgeanne Marie Rice"" .
  ?personGeorgeanne dbo:spouse ?spouseGeorgeanne .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,52,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?musicalArtist ?work
WHERE {
  # The alter ego of The Shadow
  ?shadowAlterEgo dbo:alterEgoOf dbr:The_Shadow .
  
  # Professional associated with the alter ego
  ?shadowAlterEgo dbo:profession ?professional .

  # Chris Taylor as a musical artist
  dbr:Chris_Taylor_Musical_Artist dbo:associatedMusicalArtist ?musicalArtist .

  # 50 Cent's work involving the professional and musical artist
  ?work dbo:producer dbr:50_Cent ;
        dbo:musicalWork ?musicalArtist ;
        dbo:relatedTo ?professional .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
492,54,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at Algiers.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person
WHERE {
  # Joseph C. Satterthwaite's role
  dbr:Joseph_C._Satterthwaite dbo:positionHeld dbr:Assistant_Secretary_of_State_for_African_Affairs .

  # Person who was a commander in the Battle of Verdun
  ?person dbo:commanderOf dbr:Battle_of_Verdun .
  
  # This person is also linked to an event involving Algiers
  ?event dbo:location dbr:Algiers ;
         dbo:participant ?person .

  # Ensure this person is a decedent at Algiers (linked through events)
  FILTER EXISTS { ?person dbo:deathPlace dbr:Algiers }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
767,61,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMaterNash ?alterEgoBurland
WHERE {
  # Find George Kilbon Nash's alma mater
  OPTIONAL {
    ?nash a dbo:Person ;
          foaf:name ""George Kilbon Nash"" .
    ?nash dbo:almaMater ?almaMaterNash .
  }
  
  # Find Matthew Burland's alter ego (fictional character)
  OPTIONAL {
    ?burland a dbo:Person ;
             foaf:name ""Matthew Burland"" .
    ?burland dbo:fictionalCharacter ?alterEgoBurland .
  }
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
365,8,test,Give me the band of Phil Alvin and reference to the real name of The Blasters.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandLabel ?realNameLabel
WHERE {
  ?philAlvin a dbo:MusicArtist ;
             rdfs:label ""Phil Alvin""@en .
  
  ?blasters a dbo:Band ;
            rdfs:label ?bandLabel ;
            dbo:bandMember ?philAlvin .

  OPTIONAL { 
    ?blasters dbo:officialName ?realName .
    ?realName rdfs:label ?realNameLabel .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
10,24,test,"Give me the professional in the birth name of Sharon Kao and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional ?bandMember
WHERE {
  # Find Sharon Kao by birth name and her professional role
  ?person dbo:birthName ""Sharon Kao""@en .
  ?person dbo:profession ?professional .

  # Find Luke Francis Vibert as an artist
  dbr:Luke_Francis_Vibert a dbo:Artist ;
                          foaf:name ""Luke Francis Vibert"" .

  # Identify band members associated with Luke Francis Vibert
  ?bandMember dbo:member ?vibertPerson .
  ?vibertPerson foaf:name ""Luke Francis Vibert"" .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
617,63,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Step 1: Find successor of Antiochus II Theos who is royalty
  ?successor dbo:predecessor dbr:Antiochus_II_Theos ;
             a dbo:Monarch .

  # Step 2: Find child of this successor who is royalty
  ?childOfSuccessor dbo:parent ?successor ;
                   a dbo:Monarch .

  # Step 3: This child must be spouse to the child of Antiochus III the Great
  ?antiochusIIIChild dbo:spouse ?childOfSuccessor ;
                    dbo:parent dbr:Antiochus_III_the_Great .

  # Step 4: The spouse (child of successor) should be a parent to someone who is a child of Antiochus (son of Antiochus III the Great)
  ?antiochusChild dbo:parent ?childOfSuccessor ;
                  dbo:parent ?antiochusIIIChild .

  # Return the child of the child
  ?childOfChild dbo:parent ?antiochusChild .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
963,18,test,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton and administration of the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?politicalParty
WHERE {
  # Find the time zone of Herzegovina-Neretva Canton and its region (a country)
  ?canton dbo:timeZone ?timezone .
  FILTER(STRSTARTS(LCASE(?canton), ""herzegovina-neretva canton""))
  
  ?timezone dbo:region ?country .
  FILTER(isBlank(?country) = false && a ?country <http://dbpedia.org/ontology/Country>)
  
  # Find the ruling party in Sremski Karlovci
  ?sremskiKarlovci dbo:rulingParty ?politicalParty .
  FILTER(STRSTARTS(LCASE(?sremskiKarlovci), ""sremski karlovci""))
  
  FILTER(isBlank(?politicalParty) = false && a ?politicalParty <http://dbpedia.org/ontology/PoliticalParty>)
}
```",5,7,6,3,2,3,2,20,0,0,84,0,0.0,0
528,61,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war
WHERE {
  # Find Narciso Campero's birth name and associated force
  dbr:Narciso_Campero_Latorre dbo:birthName ?birthName .
  
  OPTIONAL {
    ?person dbo:birthName ?birthName .
    ?person dbo:militaryUnit ?force .
  }
  
  # Find the war related to a commander in the work of --01-09
  ?work dbr:--01-09 ?commander .
  ?commander dbo:participatedInWar ?war .
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
404,59,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild
WHERE {
  # Prince George William of Hanover
  ?princeGeorgeWilliam a dbo:Person ;
                      foaf:name ""Prince George William of Hanover""@en .

  # Parent of Prince George William who is royalty
  ?parentOfPrinceGeorgeWilliam dbo:child ?princeGeorgeWilliam ;
                               a dbo:RoyalFamilyMember .

  # Spouse of the parent, born as Princess Victoria Louise of Prussia
  ?spouseOfParent dbo:spouse ?parentOfPrinceGeorgeWilliam ;
                  foaf:name ""Princess Victoria Louise of Prussia""@en ;
                  a dbo:RoyalFamilyMember .

  # Child of this spouse
  ?childOfSpouse dbo:child ?spouseOfParent ;
                 a dbo:Person .

  # Parent of the child if they are royalty
  ?parentOfChild dbo:child ?childOfSpouse ;
                 a dbo:RoyalFamilyMember .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
427,38,test,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherParty ?prodiParty
WHERE {
  # Find Lamberto Andreotti's father and his political party
  dbr:Lamberto_Andreotti dbo:father ?father .
  ?father dbo:politicalParty ?fatherParty .

  # Find Romano Prodi, ensure he is an office holder and a politician, then get his political party
  dbr:Romano_Prodi dbo:officeHolder true ;
                   dbo:politician true ;
                   dbo:politicalParty ?prodiParty .
}
```",4,6,5,2,2,3,3,71,0,0,3,0,0.0,0
645,16,test,"Give me the entity in the residence, that is a country, of James Wilkes Maurice and alma mater of the child of Richard Pankhurst.",SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity
WHERE {
  ?james a dbr:James_Wilkes_Maurice ;
         dbo:residenceCountry ?entity .
  
  ?pankhurstChild dbo:almaMater ?entity ;
                  dbo:parent dbr:Richard_Pankhurst .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
435,22,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?territory WHERE {
  ?figure dbo:nationality dbr:Iceland ;
          dbo:residence ?settlement .
  FILTER (CONTAINS(LCASE(STR(?settlement)), ""town"") || CONTAINS(LCASE(STR(?settlement)), ""settlement""))
  
  ?figure dbo:administers ?territory .

  OPTIONAL {
    ?territory dbp:timeZone ?timezone .
    FILTER(CONTAINS(LCASE(STR(?timezone)), ""bombali shebora chiefdom""))
  }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
314,24,test,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of the award of Sergei Makovetsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander
WHERE {
  # Lisa Gavrić's profession related to an event and societal event
  ?person dbo:profession ?profession .
  ?profession dbo:event ?event .
  ?profession dbo:societalEvent ?societalEvent .

  # Ensure the person is Lisa Gavrić
  FILTER (?person = dbr:Lisa_Gavrić)

  # Sergei Makovetsky's award and its awardee
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Sergei Makovetsky""@en .

  # Ensure the awardee is the same person as Lisa Gavrić
  FILTER (?awardee = ?person)

  # Return the commander (in this context, the person)
  BIND(?person AS ?commander)
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
488,71,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT 
  ?administration 
  ?deathPlace 
  ?birthPlace

WHERE {
  # Tokugawa Masako's spouse and their father's administration
  dbr:Tokugawa_Masako dbo:spouse ?spouse .
  
  FILTER EXISTS { ?spouse a dbo:Royalty } .

  ?spouse dbo:father ?royalFather .
  ?royalFather dbo:office ?administration .

  # Matsudaira Tadamasa's father and his death place
  dbr:Matsudaira_Tadamasa dbo:father ?matsudairaFather .
  
  FILTER EXISTS { 
    ?matsudairaFather a dbo:Politician ;
                     dbo:officeHolder true
  } .

  ?matsudairaFather dbo:deathPlace ?deathPlace .

  # Saitō Hajime's military conflict and birth place
  dbr:Saitō_Hajime dbo:militaryConflict ?conflict .
  
  FILTER EXISTS { 
    ?conflict a dbo:MilitaryConflict ;
             a dbo:Event ;
             a dbo:SocietalEvent
  } .

  ?conflict dbo:birthPlace ?birthPlace .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
485,22,test,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person dbo:award dbr:Eric_Gregory_Award .
  ?person dbo:birthPlace ?birthPlace .

  OPTIONAL { 
    ?country dbp:timeZone ""Europe/Western"" .
    ?birthPlace dbo:country ?country .
  }
}",4,7,5,2,2,2,3,28,5,28,0,0.15151515151515152,1.0,0.2631578947368421
617,56,test,"Give me the parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of Seleucus II Callinicus and spouse of Laodice IV.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild ?royalChild ?spouse 
WHERE {
  # Battle of Panium and its commander
  ?battle dbr:Battle_of_Panium .
  ?battle dbo:commander ?commander .

  # Commander's child
  ?child1 dbo:parent ?commander ;
         a dbo:Person .

  # Parent of the commander's child
  ?parentOfChild dbo:child ?child1 .

  # Seleucus II Callinicus and his children
  dbr:Seleucus_II_Callinicus dbo:child ?royalChild .
  
  # Ensure the child is royalty
  ?royalChild a dbo:Monarch ;
              rdfs:label ?labelRoyalChild FILTER (CONTAINS(LCASE(?labelRoyalChild), ""king"") || CONTAINS(LCASE(?labelRoyalChild), ""queen"")) .

  # Spouse of Laodice IV
  dbr:Laodice_IV dbo:spouse ?spouse .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,20,test,"Give me the birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils and landmark at elevation of the award of the commander in Battle of Chishui River.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?birthPlace WHERE {
  # Find members of The Boils
  ?band dbr:The_Boils ;
        dbo:member ?member .
  
  # Ensure the member is part of an organization that is a group and a band
  ?member dbo:memberOf ?organization .
  ?organization rdf:type dbo:MusicalGroup, dbo:Band .

  # Retrieve birthplace of such a member
  ?member dbo:birthPlace ?birthPlace .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
959,69,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeCountry
WHERE {
  # Identify Yōichi Masuzoe based on birth year and managerial role
  ?person a dbo:Person ;
          dbp:birthday ""1958-01-01""^^xsd:date ;
          dbo:managerOf dbr:1998_Kashima_Antlers_season .

  # Find his alma mater, which is Japanese, an organization, a university, and an educational institution
  ?person dbo:almaMater ?university .
  ?university rdf:type dbo:University ;
              dbp:country ""Japan""^^xsd:string ;
              rdf:type dbo:EducationalOrganization .

  # Get the residence of Yōichi Masuzoe
  ?person dbo:residence ?residence .

  # Find the native country of the residence
  ?residence dbo:nativeCountry ?nativeCountry .
}
```",8,14,9,3,3,3,3,71,0,0,3,0,0.0,0
251,28,test,"Give me the death place of the author of The Twelve Abbots of Challant and administration of the ruling party, that is a political party and an organisation, in Sicily and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlace ?rulingPartyAdministration ?warLocation
WHERE {
  # Louis François Félix Musnier's death place
  dbr:Louis_François_Félix_Musnier dbo:deathPlace ?deathPlace .

  # Ruling party in Sicily (political party and organization)
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Sicily ;
         dbp:administration ?rulingPartyAdministration .
  
  # War involving Louis François Félix Musnier
  ?war dbo:participant dbr:Louis_François_Félix_Musnier ;
       dbo:location ?warLocation .

}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
747,65,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on the birth date of Pavlo Khudzik and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band1 ?band2 ?writerBand
WHERE {
  # Band of Tracey Elizabeth McSween
  OPTIONAL {
    ?person1 dbo:name ""Tracey Elizabeth McSween""@en .
    ?person1 dbo:birthName ""Tracey Elizabeth McSween""@en .
    ?person1 dbo:member ?band1 .
  }

  # Person born on the birth date of Pavlo Khudzik
  OPTIONAL {
    ?pavlo dbr:Pavlo_Khudzik dbo:birthday ?birthdate .
    ?person2 dbo:birthday ?birthdate .
    ?person2 dbo:member ?band2 .
  }

  # Band of the writer of a song by Amba Shepherd
  OPTIONAL {
    ?song dbp:lyricsBy ?writer .
    ?song dbo:genre dbr:Song .
    ?writer dbo:name ""Amba Shepherd""@en .
    ?writer dbo:member ?writerBand .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
294,20,test,"Give me the entity in Nashville, Tennessee and resting place of the architect of P. D. Houston Jr. House and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?architect ?restingPlaceArchitect ?lukeLeaRestingPlace
WHERE {
  # Find the architect of P. D. Houston Jr. House
  ?house dbo:architect ?architect .
  FILTER(STRSTARTS(STR(?house), ""http://dbpedia.org/resource/P._D._Houston_Jr._House""))

  # Find the resting place of the architect in Nashville, Tennessee
  OPTIONAL {
    ?architect dbo:deathPlace ?restingPlaceArchitect .
    ?restingPlaceArchitect dbo:locationCity dbr:Nashville,_Tennessee .
  }

  # Find the resting place of Luke Lea (American politician, born 1879)
  ?lukeLea dbo:birthYear ""1879""^^xsd:gYear ;
           a dbo:Politician ;
           dbo:deathPlace ?lukeLeaRestingPlace .
  FILTER(STRSTARTS(STR(?lukeLea), ""http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)""))
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
339,20,test,Give me the father of the child of the parent of Princess Olga of Greece and Denmark and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherOfOlga WHERE {
  # Princess Olga of Greece and Denmark
  ?olga dbo:parent ?parentOfOlga .
  
  # Father of Princess Olga
  ?parentOfOlga dbo:spouse ?fatherOfOlga .

  # Predecessor of Frederick VIII of Denmark
  ?frederickVIII dbp:predecessor ?predecessor .
  FILTER(?frederickVIII = <http://dbpedia.org/resource/Frederick_VIII_of_Denmark>)

  # Child of the predecessor
  ?child1 dbo:parent ?predecessor .

  # Grandchild of the predecessor
  ?grandChild dbo:parent ?child1 .

  # Father of the grandchild
  ?fatherOfGrandChild dbo:spouse ?motherOfGrandChild .
  FILTER(?grandChild = ?olga) # Ensuring it's Princess Olga

  # Linking the father of Olga to the father of the grandchild
  FILTER(?fatherOfOlga = ?fatherOfGrandChild)
}
```",6,6,7,3,2,3,2,20,0,9,1,0.0,0.0,0
142,8,test,Give me the entity in Japan and birthplace of the actor of Papa wa Newscaster.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?birthPlace WHERE {
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""Papa wa Newscaster""@en .

  OPTIONAL { ?actor dbo:birthPlace ?birthPlace . }

  FILTER EXISTS { 
    ?actor dbo:nationality dbr:Japan ;
           ^dbo:country dbr:Japan
  }
}
```

This query does the following:
- Selects the actor (`?actor`) and their birthplace (`?birthPlace`).
- Uses a triple pattern to find movies where the actor starred, specifically ""Papa wa Newscaster"".
- Optionally retrieves the birthplace of the actor.
- Filters actors who have a nationality or country association with Japan.",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
820,18,test,Give me the child of the parent of Jason Schwartzman and professional in the award of the author of Understanding Comics.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v1 . ?result <http://dbpedia.org/property/father> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?profession WHERE {
  # Find Jason Schwartzman's parent
  ?parent dbo:child dbr:Jason_Schwartzman .
  
  # Find the child of this parent (should be another entity)
  ?parent dbo:child ?child .

  # Identify Scott McCloud as the author of ""Understanding Comics""
  dbr:Scott_McCloud dbo:author dbr:Understanding_Comics .

  # Assume we have a property for awards associated with Scott McCloud
  dbr:Scott_McCloud dbo:award ?award .

  # Find the profession related to this award
  ?child dbo:profession ?profession .
  
  FILTER EXISTS { ?award dbp:name ?awardName } # Ensure there is an award name

}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
10,23,test,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and professional in the birth name of Sharon Kao.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?artist
WHERE {
  ?mattColton a dbo:Artist ;
              foaf:name ""Matt Colton""@en .
  
  ?sharonKao a dbo:Person ;
             foaf:name ""Sharon Kao""@en .

  ?mattColton dbo:associatedMusicalArtist ?artist .
  ?sharonKao dbo:associatedMusicalArtist ?artist .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
391,48,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativePlace WHERE {
  ?actor a dbo:Actor ;
         dbo:nativePlace ?nativePlace ;
         dbo:birthPlace dbr:Jackson,_Tennessee .
  
  ?movie dbo:title ?title ;
         dbo:starring ?actor .

  ?work dbo:title ?title ;
        rdf:type dbo:Film ;
        dbo:televisionShow dbr:Roz_Ryan .

  FILTER EXISTS { ?work dbo:televisionShow dbr:Roz_Ryan }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
9,69,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname
WHERE {
  ?institution a dbo:EducationalInstitution ;
               dbo:location dbr:Northern_Ireland ;
               dbp:nickname ?nickname .
  
  ?politician dbo:almaMater ?institution ;
              dbo:position dbr:Belfast_Mayorship .

  ?awardee dbo:almaMater ?institution ;
           dbo:award dbr:Royal_Medal .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
232,51,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeOfResidence
WHERE {
  # Sean Pertwee's claims to fame (films and military conflicts)
  dbr:Sean_Pertwee dbo:claimToFame ?fame .
  
  # Fame is either a film or a military conflict
  VALUES ?fameType { dbo:Film dbo:MilitaryConflict }
  ?fame rdf:type ?fameType .

  # Native of the fame (film/military conflict) is a settlement in Britain
  ?fame dbo:nativeOf ?native .
  ?native rdf:type dbo:PopulatedPlace ;
          dbo:country dbr:United_Kingdom .

  # Politician from France who is an office holder and native of this British settlement
  ?politician dbo:nationality dbr:France ;
             dbo:officeHolder true ;
             dbo:nativeOf ?native .
  
  # The residence we are interested in is the native place of this politician
  ?politician dbp:nativePlace ?nativeOfResidence .
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
378,67,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?triggeClaimToFame WHERE {
  # Thomas Trigge's role in a military conflict
  ?trigge dbo:militaryConflict ?conflict1 .
  
  # Carl Pontus Gahn's role in a military conflict
  ?gahn dbo:militaryConflict ?conflict2 .

  # Peninsular War as a reference point
  dbr:Peninsular_War dbo:militaryConflict ?peninsularWar .

  # Linking conflicts to find commonality or relation
  FILTER(?conflict1 = ?conflict2 || ?conflict1 = ?peninsularWar || ?conflict2 = ?peninsularWar)

  # Thomas Trigge's claim to fame in the identified conflict
  ?trigge dbo:claimToFame ?triggeClaimToFame .

  # Ensuring Thomas Trigge and Carl Pontus Gahn are distinct individuals
  FILTER(?trigge != ?gahn)
  
  # Binding entities to their respective DBpedia resources
  VALUES (?trigge ?gahn) {
    (dbr:Thomas_Trigge dbr:Carl_Pontus_Gahn)
  }
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
659,51,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce
WHERE {
  ?war a dbo:MilitaryConflict ;
       a dbo:SocietalEvent .
  
  ?regiment dbo:commandedBy ?commander ;
            rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .

  ?war dbo:participatedIn ?militaryForce ;
       dbo:commander ?commander .

  ?militaryForce dbo:relatedTo dbr:Rutger_Jan_Schimmelpenninck .
}
```",5,10,6,3,2,3,3,71,0,0,31,0,0.0,0
959,30,test,Give me the native of Japan and manager of the team of Takashi Sekizuka and member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:Japan .
  ?person dbo:manager dbr:Takashi_Sekizuka .
  ?person dbp:almaMater dbr:University_of_Tsukuba .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
421,28,test,Give me the band member of the awardee of [[#Awards and nominations and native of the birthplace of Samir Bekrić and person born as the birth name of Dino Merlin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember
WHERE {
  # Samir Bekrić's birthplace
  dbr:Samir_Bekrić dbo:nativePlace ?birthplace .

  # Dino Merlin's birth name
  dbr:Dino_Merlin dbp:birthdayName ?birthName .

  # Find a person native to the same place and with the same birth name
  ?person dbo:nativePlace ?birthplace ;
          dbp:birthdayName ?birthName .

  # Ensure this person is an awardee
  ?person dbo:award ?award .

  # Find a band member of this awardee
  ?bandMember dbo:memberOfBand ?awardee .
  FILTER (?awardee = ?person)
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
378,18,test,"Give me the war of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Joaquín Blake.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person (GROUP_CONCAT(?war; separator="", "") AS ?wars) 
       ?claimToFame
WHERE {
  VALUES (?person ?label) { 
    (dbr:C._Pontus_Gahn ""Carl Pontus Gahn"")
    (dbr:Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón"")
    (dbr:Joaquín_Blake ""Joaquín Blake"")
  }
  
  OPTIONAL {
    ?person dbo:participatedInWar ?war .
  }

  OPTIONAL {
    ?person dbo:famousFor ?claimToFame .
    FILTER (?label = ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón"") # Specific to Louis
  }
}
GROUP BY ?person ?claimToFame
```",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
767,50,test,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to the alter ego of Black Hood.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterNash ?administrationAlterEgo
WHERE {
  # George Kilbon Nash's alma mater
  OPTIONAL {
    dbr:George_Kilbon_Nash dbo:almaMater ?almaMaterNash .
  }
  
  # Alter ego of Black Hood and related administration
  OPTIONAL {
    ?alterEgo rdfs:label ""Black Hood""@en .
    ?alterEgo dbo:associatedWith ?administrationAlterEgo .
  }
}
```

### Explanation

- **George Kilbon Nash**: We look for the `dbo:almaMater` property to find his alma mater.
- **Alter ego of Black Hood**: We identify the character using a label match and then find any associated administration using `dbo:associatedWith`.

This query assumes that the relationships are directly available in DBpedia. Adjustments might be needed based on actual data availability.",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
328,68,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName WHERE {
  ?person dbo:spouse|dbo:child|dbo:parent|dbo:colleague dbr:Joseph_Stalin .
  
  ?commanderRole dbo:place dbr:Budapest ;
                 dbo:agent ?person .

  ?agencyLeaderRole dbo:office ?governmentAgency ;
                    dbo:agent ?person .
  ?governmentAgency a dbo:GovernmentAgency .

  ?awardEvent dbo:location dbr:Volcano_Islands|dbr:Ryukyu_Islands ;
              dbo:recipient ?person .
  
  ?person rdfs:label ?personName .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
92,51,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band ?associatedArtist
WHERE {
  # Find Joseph Michael's birth name and associated band
  ?person a dbo:Person ;
          foaf:name ""Joseph Michael"" ;
          dbo:birthName ?birthName .
  
  OPTIONAL { 
    ?person dbo:memberOfBand ?band .
  }
  
  # Find Jim Sheppard as an artist and his associated musical artist
  ?artist a dbo:Artist ;
          foaf:name ""Jim Sheppard"" .

  OPTIONAL {
    ?artist dbo:associatedMusicalArtist ?associatedArtist .
  }

  FILTER (?person != ?artist) # Ensure they are distinct individuals
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
427,52,test,Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?partyName
WHERE {
  VALUES ?person { 
    dbr:Michele_Pinto 
    dbr:Giovanni_Andreotti 
    dbr:Romano_Prodi 
  }
  
  OPTIONAL {
    ?person dbo:partyAffiliation ?party .
    ?party rdfs:label ?partyName .
    FILTER (lang(?partyName) = 'en')
  }
}
ORDER BY ?person",6,6,7,3,3,3,3,71,0,3,2,0.0,0.0,0
184,65,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity
WHERE {
  # Path for Archduke Joseph Francis of Austria
  ?child1 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  ?grandParent1 dbo:child ?child1 .

  # Path for native of Budapest
  ?native dbo:nativePlace dbr:Budapest .
  ?parentBudapest dbo:child ?native .

  # Path for Archduke Ladislaus Philipp of Austria
  ?royaltyParent dbo:child dbr:Archduke_Ladislaus_Philipp_of_Austria .
  FILTER (dbo:Royalty ?royaltyParent) .
  ?secondChild dbo:parent ?royaltyParent .
  ?thirdChild dbo:child ?secondChild .

  # Find common entity that is royalty
  VALUES ?commonEntity { ?grandParent1 ?parentBudapest ?thirdChild }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
9,64,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of Allen Hill (scientist).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater ?nickname
WHERE {
  # Find the organization in Belfast and its mayor who is a politician
  ?organization dbo:location dbr:Belfast .
  ?mayor dbo:positionHeld ?position ;
         dbo:almaMater ?almaMater ;
         rdf:type dbo:Politician .
  ?position dbo:officeHolder ?mayor ;
            dbo:relatesToOrganization ?organization .

  # Find the educational institution in Northern Ireland that is the alma mater of Allen Hill
  ?institution dbo:location dbr:Northern_Ireland ;
               dbo:almaMater dbr:Allen_Hill_(scientist) .
  
  # Get the nickname of this educational institution
  ?institution dbp:nickname ?nickname .

}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
487,20,test,"Give me the country of the administration of the person born on 1955-01-26 and administration of the person born, that is a soccer player, as the birth name of Phil Scott.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/country> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person1AdminCountry ?person2AdminCountry
WHERE {
  # Person born on 1955-01-26
  ?person1 dbo:birthday ""1955-01-26""^^xsd:date .
  
  OPTIONAL { 
    ?person1 dbo:country dbr:?adminCountry1 .
    BIND(dbr:?adminCountry1 AS ?person1AdminCountry)
  }
  
  # Soccer player with birth name Phil Scott
  ?person2 dbp:sportsCareer <http://dbpedia.org/resource/Soccer> ;
           foaf:name ""Phil Scott""@en .
  
  OPTIONAL { 
    ?person2 dbo:country dbr:?adminCountry2 .
    BIND(dbr:?adminCountry2 AS ?person2AdminCountry)
  }
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
54,61,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  # Find Thihapate of Mohnyin's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin ;
         a dbo:Monarch ;  # Assuming Monarch for royalty
         dbo:officeHolder true .

  # Find the parent of Thado Minsaw of Prome's grandparent
  ?grandparent dbo:parent dbr:Thado_Minsaw_of_Prome .
  ?parent dbo:parent ?grandparent .

  # The person we are interested in is the child of this parent
  ?person dbo:parent ?parent .

  # Find the predecessor of this person
  ?predecessor dbo:successor ?person .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
92,38,test,"Give me the band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?associatedArtist
WHERE {
  OPTIONAL {
    ?person foaf:name ""Joseph Michael Furney""@en .
    ?person dbo:birthName ""Joseph Michael Furney""@en .
    ?person dbo:memberOfBand ?band .
  }
  
  OPTIONAL {
    ?artist foaf:name ""Jim Sheppard""@en .
    ?artist a dbo:Artist .
    ?artist dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",4,5,5,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
827,18,test,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894) and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father
WHERE {
  # Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894)
  dbr:Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:child dbr:?royaltyChild .
  
  # The child must be royalty
  ?royaltyChild a dbo:Monarch .

  # Find the father of this royal child
  ?royaltyChild dbo:parent dbr:?father .

  # Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach's parent
  dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:parent dbr:?grandParent .
  
  # The grandchild must be royalty
  ?grandChild a dbo:Monarch .

  # Find the child of Charles Alexander's parent who is royalty
  ?grandChild dbo:child dbr:?royaltyGrandChild .
  ?royaltyGrandChild dbo:parent dbr:?grandParent .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
435,21,test,Give me the work of the author of Iceland and region of Greenwich Mean Time and territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work
WHERE {
  # J.R.R. Tolkien is the author of Iceland (fictional work)
  dbr:J._R._R._Tolkien dbo:author dbr:Iceland .
  
  # The region associated with GMT is the United Kingdom
  dbr:United_Kingdom dbo:timeZone dbr:Greenwich_Mean_Time .

  # Reykjavík administers Iceland
  dbr:Iceland dbo:administrativeCapital dbr:Reykjavík .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
547,64,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of the award of Gerald Graham and resting place of Simon Cadell.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchildRestingPlace ?awardeeRestingPlace ?simonCadellRestingPlace
WHERE {
  # Resting place of the child of the child of William Haliburton
  ?williamHaliburton dbo:spouse ?spouse .
  ?williamHaliburton dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .
  ?grandchild dbo:deathPlace ?grandchildRestingPlace .

  # Resting place of the awardee of the award of Gerald Graham
  ?geraldGraham dbo:award ?award .
  ?awardee dbo:receivedAward ?award .
  ?awardee dbo:deathPlace ?awardeeRestingPlace .

  # Resting place of Simon Cadell
  dbr:Simon_Cadell dbo:deathPlace ?simonCadellRestingPlace .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
701,47,test,Give me the parent of the child of the child of Seti I and parent of the child of Nefertari.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfSetiGrandchild ?parentOfNefertariGrandchild
WHERE {
  # Seti I's grandchild and their parent
  ?setiChild dbo:spouse|dbo:child ?setiGrandchild .
  ?setiGrandchild dbo:parent ?parentOfSetiGrandchild .

  # Nefertari's grandchild and their parent
  ?nefertariChild dbo:spouse|dbo:child ?nefertariGrandchild .
  ?nefertariGrandchild dbo:parent ?parentOfNefertariGrandchild .

  # Seti I and Nefertari entities
  ?setiI dbp:name ""Seti I""@en .
  ?nefertari dbp:name ""Nefertari""@en .

  # Linking children to their parents
  ?setiChild dbo:parent ?setiI .
  ?nefertariChild dbo:spouse|dbo:child ?nefertari .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
161,54,test,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryForce1 ?societalEvent1 ?militaryConflict1 
         ?predecessor ?militaryForce2 ?militaryConflict2
WHERE {
  # Francisco Franco's military force in the Biscay Campaign
  dbr:Francisco_Franco dbo:militaryCommanderOf ?commander .
  ?commander dbo:participatedInMilitaryConflicts ?militaryConflict1 .
  ?militaryConflict1 a dbo:SocietalEvent ;
                    dbo:participatingGroups ?militaryForce1 .

  # Predecessor of Indalecio Prieto
  dbr:Indalecio_Prieto dbo:predecessor ?predecessor .
  ?predecessor dbo:militaryCommanderOf ?commander2 .
  ?commander2 dbo:participatedInMilitaryConflicts ?militaryConflict2 .
  ?militaryConflict2 a dbo:SocietalEvent ;
                    dbo:participatingGroups ?militaryForce2 .

  # Ensure military conflict is also a societal event
  FILTER (?societalEvent1 = ?militaryConflict1)
  FILTER (?militaryConflict2 a dbo:MilitaryConflict)
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
701,46,test,Give me the parent of the child of Ramesses II and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfRamessesChild ?parentOfSpouseChild
WHERE {
  # Find a child of Ramesses II and their parent
  ?child dbr:Ramesses_II dbo:child .
  ?child dbo:parent ?parentOfRamessesChild .

  # Find the spouse of Amun-her-khepeshef, then find their children and parents
  ?spouse dbr:Amun-her-khepeshef dbo:spouse .
  ?child2 ?spouseProperty ?spouse .
  ?child2 dbo:parent ?parentOfSpouseChild .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
232,52,test,"Give me the native of London and child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child ?nativePlace
WHERE {
  # Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?birthName .

  # Sean Pertwee's claims to fame
  dbr:Sean_Pertwee dbo:claimToFame ?fame .
  
  FILTER (
    (strstarts(str(?fame), ""http://dbpedia.org/resource/"") && 
     (strcontains(str(?fame), ""Film"") || strcontains(str(?fame), ""Military_conflict"")))
  )

  # Child of Jon Pertwee
  ?child dbo:parent dbr:Jon_Pertwee .
  
  # Native place of the child
  ?child foaf:nativePlace ?nativePlace .

  # Ensure the native place is London
  FILTER (str(?nativePlace) = ""London"")

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
801,37,test,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicalArtist ?work WHERE {
  # Chris Taylor as a music producer
  dbr:Chris_Taylor_(music_producer) dbo:associatedMusicalArtist ?musicalArtist .

  # The musical artist produces a work that is a song or musical work
  ?musicalArtist dbo:producedWork ?work .
  
  # Ensure the work is a song or musical work
  FILTER (
    EXISTS { ?work rdf:type dbo:Songs } ||
    EXISTS { ?work rdf:type dbo:MusicalWork }
  )

  # The professional associated with the work should be a rapper
  ?work dbo:professional dbr:Rapper .
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
778,17,test,"Give me the entity in United States and author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?software ?author
WHERE {
  ?software a dbo:Software ;
            dbo:country dbr:United_States .
  
  ?software dbo:creator ?author .

  ?pushd a dbo:Software ;
         dbo:creator ?author .
  FILTER (str(?pushd) = ""Pushd"")

  ?popd a dbo:Software ;
        dbo:creator ?author .
  FILTER (str(?popd) = ""Popd"")
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
303,24,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party ?country
WHERE {
  ?person dbo:birthName ""Arnulfo Arias Madrid""@en .
  ?person a dbo:Politician .
  ?person dbo:politicalParty ?party .

  ?location rdfs:label ""El Valle de Antón""@en .
  ?location dbp:country ?countryEntity .
  ?countryEntity a dbo:Country .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
378,59,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find wars related to the Peninsular War
  ?peninsularWar dbo:wikiPageRedirects* dbr:Peninsular_War .
  
  # Find commanders of the Peninsular War
  ?peninsularWar dbo:commander ?commander .

  # Find wars involving the same commander
  ?war dbo:commander ?commander .

  # Find Carl Pontus Gahn by birth name
  ?carlGahn dbr:Carl_Pontus_Gahn ;
            rdfs:label ""Carl Pontus Gahn""@en .
  
  # Find wars related to Carl Pontus Gahn
  ?war dbo:wikiPageRedirects* ?relatedToCarlgahn .

  FILTER (?peninsularWar != ?war)
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
232,71,test,"Give me the child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/property/residence> ?v8 . ?result <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v4 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  # Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?birthName .

  # Professional with specific claims to fame
  ?professional a dbo:Actor ;
                dbo:narrator dbp:true ;
                dbo:producer dbp:true ;
                dbo:claimToFame ?film, ?conflict .
  
  # Film and military conflict types
  ?film a dbo:Film .
  ?conflict a dbo:MilitaryConflict .

  # Residence of the professional
  ?professional dbo:nativePlace ?residence .
  ?residence a dbo:Settlement ;
             dbp:country dbr:United_Kingdom ;
             dbp:isPartOf dbr:British_Isles .

  # Politician and office holder from France
  ?politician a dbo:Politician, dbo:OfficeHolder ;
              dbo:nativePlace ?residence .
  ?residence dbo:country dbr:France .

  # Child of Jon Pertwee
  ?person dbp:childOf dbr:Jon_Pertwee .
  ?person dbp:birthName ?birthName .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
356,19,test,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960) and player in the successor of 2014 Sacramento Republic FC season.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/manager> ?v4 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team
WHERE {
  # Find Gary Williams' birthplace
  dbr:Gary_Williams_(footballer,_born_1960) dbo:nationality dbr:England ;
                                         dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a settlement
  ?birthPlace rdf:type dbo:Settlement .

  # Identify a person who is both a soccer player and manager from this place
  ?person dbo:nationality dbr:England ;
          dbo:birthPlace ?birthPlace ;
          dbo:occupation [a dbo:SoccerPlayer, dbo:SoccerManager] .

  # Find the team of this person in the successor season of 2014 Sacramento Republic FC
  ?team dbp:player ?person .
  OPTIONAL { 
    ?season dbp:succeededBy dbr:2015_Sacramento_Republic_FC_season ;
             dbp:team dbr:Sacramento_Republic_FC .
  }
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
528,53,test,"Give me the force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personForce ?war ?societalEvent ?militaryForce
WHERE {
  # Narciso Campero Leyes and his military force or rank
  OPTIONAL { 
    dbr:Narciso_Campero_Leyes dbo:militaryRank ?personForce .
  }

  # Wars involving Orozimbo Barbosa
  OPTIONAL {
    ?war dbo:participatedIn ?orozimboBarbosa .
    ?orozimboBarbosa rdfs:label ""Orozimbo Barbosa""@en .
  }
  
  # Societal events in Chile related to military forces
  OPTIONAL {
    ?societalEvent dbo:location dbr:Chile ;
                  a dbo:SocietalEvent ;
                  dbo:militaryForceInvolved ?militaryForce .
  }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
9,38,test,Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of Queen's University Belfast.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  # Find the awardee of the Royal Medal
  ?person dbo:award dbr:Royal_Medal_of_the_Royal_Society .
  
  # Get their alma mater
  ?person dbo:almaMater ?university .
  
  # Ensure this university is not Queen's University Belfast itself
  FILTER NOT EXISTS {
    ?university rdfs:label ""Queen's University Belfast""@en .
  }
  
  # Find the nickname for Queen's University Belfast
  dbr:Queen's_University_Belfast dbo:nickname ?nickname .

  # Check if the alma mater is associated with this nickname
  OPTIONAL { 
    ?university rdfs:label ?almaMaterLabel .
    FILTER(CONTAINS(LCASE(?almaMaterLabel), LCASE(?nickname)))
  }
  
  BIND(?university AS ?almaMater)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
487,19,test,"Give me the administration of the person born, that is a soccer player, as the birth name of Phil Scott and country of the administration of Patricia McCoy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> ?result . <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?result <http://dbpedia.org/property/governor> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?philScottAdministration ?patriciaMcCoyCountry
WHERE {
  # Find Phil Scott's administration based on his birth name and occupation
  ?philScott a dbo:SoccerPlayer ;
             foaf:name ""Phil Scott""@en .
  
  OPTIONAL { 
    ?philScott dbo:positionHeld ?administration .
    ?administration dbo:country ?philScottAdministration .
  }
  
  # Find Patricia McCoy's administration country
  ?patriciaMcCoy a dbo:Politician ;
                 foaf:name ""Patricia McCoy""@en .

  OPTIONAL {
    ?patriciaMcCoy dbo:positionHeld ?administration2 .
    ?administration2 dbo:country ?patriciaMcCoyCountry .
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
404,56,test,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse ?child
WHERE {
  # Step 1: Find Prince Ernest Augustus of Hanover (born 1914)
  ?prince a dbo:Person ;
          foaf:name ""Prince Ernest Augustus of Hanover""@en ;
          dbo:birthYear ""1914""^^xsd:gYear .

  # Step 2: Identify his parent
  ?parent dbo:child ?prince .

  # Step 3: Find the spouse of this parent who is royalty and Princess Victoria Louise of Prussia
  ?spouse dbo:spouse ?parent ;
          foaf:name ""Princess Victoria Louise of Prussia""@en ;
          a dbo:RoyalPerson .

  # Step 4: Identify the father of the spouse (Princess Victoria Louise's husband)
  ?husband dbo:spouse ?spouse .
  
  # Step 5: Find the child of this husband
  ?child dbo:child ?husband .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
251,20,test,"Give me the location of Battle of Marengo and administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleLocation ?partyAdministration ?deathPlace
WHERE {
  # Battle of Marengo location
  dbr:Battle_of_Marengo dbo:location ?battleLocation .

  # Ruling party in Sicily as a political party and organization
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Sicily ;
         dbo:administration ?partyAdministration .
  
  OPTIONAL {
    ?party a dbo:Organization .
  }

  # Laura Mancinelli's place of death
  dbr:Laura_Mancinelli dbo:deathPlace ?deathPlace .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
528,27,test,Give me the force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Narciso Campero""@en .
  
  OPTIONAL { 
    ?person dbo:force ?force .
  }
}
```

This query assumes that there is an ontology property `dbo:force` associated with the person, which might not exist. If ""force"" refers to a different concept or property in DBpedia, you may need to adjust the property accordingly.",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
328,58,test,"Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v5 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:awardeeOf dbr:Order_of_Suvorov .
  
  ?commanderRole dbo:commandedBy dbr:Ferenc_Szálasi ;
                 dbo:agent ?person .

  ?office dbo:type dbr:Government_agency ;
          dbo:leader ?person .

  ?officeHolder dbo:positionHeld ?office ;
                a dbo:Office_holder, dbo:Politician .
  
  ?gustavJonson dbo:associatedWith ?person ;
                rdfs:label ""Gustav Jonson""@en .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
404,30,test,"Give me the spouse of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?childOfFather ?parent 
WHERE {
  # Princess Victoria Louise of Prussia and her spouse
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

  # Ernest Augustus, Duke of Brunswick's father and his children
  dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:father ?father .
  ?father dbo:child ?childOfFather .

  # Parent of Prince Ernest Augustus of Hanover (born 1914)
  dbr:Prince_Ernest_Augustus_of_Hanover_(1914) dbo:parent ?parent .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
54,48,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfThinkhaya
WHERE {
  # Thinkhaya of Pagan
  dbr:King_Thihathu dbo:spouse ?thinkhaya.
  
  # Child of Thinkhaya (i.e., Thihathu)
  ?thinkhaya dbo:child ?thihathu.

  # Grandchild of Thinkhaya (Child of Thihathu)
  ?thihathu dbo:child ?grandchild.

  # Predecessor of the grandchild is Thihathu
  ?thihathu rdf:type/dbo:OfficeHolder .
  
  # Thihapate of Mohnyin and his child who is an office holder and royalty
  dbr:Thihapate_of_Mohnyin dbo:child ?thihapatesChild.
  ?thihapatesChild rdf:type/dbo:OfficeHolder ;
                  rdf:type/dbo:Royalty .
  
  # Ensure the predecessor (Thihathu) is the same as Thihapate's child
  FILTER (?thihathu = ?thihapatesChild)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
392,24,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v2 . ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province ?region
WHERE {
  # Sebastiano Bianchetti's residence province in Italy
  ?person rdfs:label ""Sebastiano Bianchetti""@it .
  ?person dbo:residence ?residence .
  ?residence dbo:country dbr:Italy .
  ?residence dbo:administrativeRegion ?province .

  # Aguilar de Segarra's time zone region associated with a sports event
  ?place rdfs:label ""Aguilar de Segarra""@en .
  ?place dbo:timeZone ?timezone .
  ?timezone dbo:region ?region .
  ?region dbo:sportEvent ?event .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
314,23,test,"Give me the person deceased at the headquarter of House of Sombrerete and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?deathEvent ?commanderRole
WHERE {
  # Lisa Gavrić's death event
  ?deathEvent a dbo:Event ;
              dbo:agent dbr:Lisa_Gavrić ;
              dbo:place dbr:House_of_Sombrerete_Headquarters ;
              rdf:type dbo:SocietalEvent .

  # Ensure the event is also categorized as an Event
  ?deathEvent rdf:type dbo:Event .

  # Lisa Gavrić's role as a commander in her profession
  OPTIONAL {
    ?commanderRole dbp:profession ""Commander"" ;
                   dbo:agent dbr:Lisa_Gavrić .
  }

  # Link the person to Lisa Gavrić
  ?person rdfs:label ""Lisa Gavrić""@en .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
9,51,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMaterName
WHERE {
  ?person dbo:awardReceived dbr:Royal_Medal .
  ?person rdfs:label ?nickname FILTER (lang(?nickname) = 'en') .
  ?education dbo:almaMater ?institution .
  ?institution a dbo:EducationalInstitution ;
               dbo:location dbr:Northern_Ireland ;
               rdf:type dbo:Organisation .
  ?institution rdfs:label ?almaMaterName FILTER (lang(?almaMaterName) = 'en') .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
617,58,test,Give me the child of Antiochus III the Great and spouse of the child of Antiochus III the Great and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfAntiochus ?spouse ?parentOfCommandersChild
WHERE {
  # Antiochus III the Great and his child
  dbr:Antiochus_III_the_Great dbo:child ?childOfAntiochus .
  
  # The spouse of the child of Antiochus III the Great
  ?spouse dbo:spouse ?childOfAntiochus .

  # Commander in Battle of Panium and their child's parent
  dbr:Battle_of_Panium dbo:commander ?commander .
  ?parentOfCommandersChild dbo:child ?commandersChild .
  ?commandersChild dbo:parent ?commander .
}
```",6,6,7,3,3,3,3,71,2,3,0,0.4,1.0,0.5714285714285715
767,65,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leaderParty> ""Green""@en . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> ?v4 . ?v6 <http://dbpedia.org/property/governor> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInAdministration ?settlementOfGreen ?alterEgoOfBlackHood ?almaMater
WHERE {
  # Entity in the administration that is a settlement of Green
  ?entityInAdministration dbo:position ?administrationRole .
  ?administrationRole dbo:member dbr:Green .

  # Settlement associated with Green
  ?settlementOfGreen dbo:settlement dbr:Green .

  # Alter ego of Black Hood
  OPTIONAL {
    ?alterEgoOfBlackHood dbo:alias ""Black Hood"" .
  }

  # Alma mater related to George Kilbon Nash's administration
  ?administrationRelatedToNash dbo:member dbr:George_Kilbon_Nash .
  ?almaMater dbo:alumni ?administrationRelatedToNash .

}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
182,22,test,Give me the war of the author of 2019 Sri Lanka Easter bombings and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?authorWar ?gotabayaWar WHERE {
  # Find the author of the 2019 Sri Lanka Easter bombings
  ?event dcterms:creator ?author .
  ?event rdfs:label ""2019 Sri Lanka Easter bombings""@en .

  # Get wars associated with the author
  ?author dbo:participatedIn ?authorWar .

  # Find Gotabhaya Rajapaksa and his associated wars
  ?gotabaya dcterms:creator ?work .
  ?gotabaya rdfs:label ""Gotabhaya Rajapaksa""@en .
  
  ?gotabaya dbo:participatedIn ?gotabayaWar .

}",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
659,46,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderInWar ?officeHolderCommander
WHERE {
  # Find the regiment and its involvement in wars
  ?regiment a dbo:MilitaryUnit ;
            rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  
  ?war a dbo:MilitaryConflict ;
       dbo:participatingMilitaryUnit ?regiment .

  # Find the commander in the war
  ?commanderInWar dbo:commanderOf ?regiment ;
                  dbo:commanderOf ?war .

  # Find office holders from the Kingdom of Ireland who are commanders
  ?officeHolderCommander a dbo:OfficeHolder ;
                        dbo:country dbr:Kingdom_of_Ireland ;
                        dbo:position ?position .
  
  OPTIONAL {
    ?officeHolderCommander dbo:commanderOf ?regiment .
  }
}
```",5,8,6,3,2,3,3,71,0,0,71,0,0.0,0
485,20,test,"Give me the entity in Nottinghamshire and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in United Kingdom.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace ?ukEntity
WHERE {
  ?person a dbo:Writer ;
          dbo:occupation ""Poet"" ;
          dbo:awardReceived dbr:Eric_Gregory_Award .
  
  ?person dbo:birthPlace ?birthPlace .
  FILTER (strstarts(str(?birthPlace), str(dbr:Nottinghamshire)))

  OPTIONAL {
    ?ukEntity dbo:country dbr:United_Kingdom ;
              dbo:relatedTo ?person .
  }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
528,68,test,"Give me the war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war ?commander ?militaryForce
WHERE {
  # War involving a commander in the work of --01-09
  ?war dbo:commander ?commander .
  FILTER (STRSTARTS(STR(?work), ""01-09""))

  # Military force related to Narciso Campero Leyes
  ?person dbp:name ""Narciso Campero Leyes"" ;
          dbo:militaryForce ?militaryForce .

  # War involving military forces in Chile
  ?war dbo:location dbr:Chile .
  ?war dbo:militaryForce ?militaryForce .
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
547,34,test,Give me the resting place of Alan Cunningham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alanCunninghamRestingPlace ?greatGrandchildRestingPlace
WHERE {
  # Alan Cunningham's resting place
  ?alanCunningham a dbo:Person ;
                 foaf:name ""Alan Cunningham""@en .
  ?alanCunningham dbo:burialPlace ?alanCunninghamRestingPlace .

  # William Haliburton's great-grandchild
  ?williamHaliburton a dbo:Person ;
                     foaf:name ""William Haliburton""@en .
  
  ?child1 foaf:parent ?williamHaliburton .
  ?child2 foaf:parent ?child1 .
  ?greatGrandchild foaf:parent ?child2 .

  ?greatGrandchild dbo:burialPlace ?greatGrandchildRestingPlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,58,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of George K. Nash and entity in Baden-Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  # Matthew Burland's fictional character (alter ego)
  ?burland dbo:fictionalCharacter ?alterEgo .
  
  # George K. Nash's alma mater
  ?nash dbo:almaMater ?almaMater .

  # Alma mater is an entity in Baden-Württemberg
  ?almaMater dbo:location dbr:Baden-Württemberg .

  # Linking Matthew Burland and George K. Nash's alma mater through the fictional character
  ?alterEgo dbo:associatedWith ?entity .
  ?entity dbo:location dbr:Baden-Württemberg .
  
  FILTER(?burland = dbr:Matthew_Burland)
  FILTER(?nash = dbr:George_K._Nash)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
392,20,test,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy and province of Schio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region WHERE {
  # Find time zone region for Aguilar de Segarra
  OPTIONAL { 
    dbr:Aguilar_de_Segarra dbo:timeZoneRegion ?region .
  }
  
  # Find time zone region for an entity in Italy
  OPTIONAL { 
    ?italyEntity a dbo:Place ;
                 dbo:country dbr:Italy ;
                 dbo:timeZoneRegion ?region .
  }

  # Find time zone region for the province of Schio
  OPTIONAL { 
    dbr:Schio dbo:timeZoneRegion ?region .
  }
  
  # Ensure there is a sports event associated with these regions
  ?event dbo:location ?location .
  ?location dbo:timeZoneRegion ?region .
  ?event a dbo:SportEvent .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
547,55,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer) and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?restingPlace WHERE {
  # Knight Grand Cross of the Order of St Michael and St George
  { 
    ?person dbo:honoursReceived dbr:Order_of_St_Michael_and_St_George.
    ?person dbo:deathPlace ?restingPlace.
  }
  
  UNION
  
  # Child of James Burton (property developer)
  {
    ?child dbo:parent dbr:James_Burton_(property_developer).
    ?child dbo:deathPlace ?restingPlace.
  }

  UNION

  # Actor of ""Enemy at the Door""
  {
    ?actor dbo:film dbr:Enemy_at_the_Door.
    ?actor dbo:deathPlace ?restingPlace.
  }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
232,48,test,"Give me the child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  # Jon Pertwee's birth name and child
  dbr:Jon_Pertwee dbo:birthName ?birthName .
  
  # Find the person with this birth name
  ?person dbo:birthName ?birthName ;
          dbo:child ?child .

  # Sylvie Bermann's residence details
  dbr:Sylvie_Bermann dbo:nativePlace ?settlement ;
                     dbp:nationality ""British""@en .
  
  # Ensure the settlement is a type of settlement
  ?settlement rdf:type dbo:Settlement .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
488,39,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?administration ?deathPlace
WHERE {
  ?masako dbo:spouse ?spouse .
  FILTER (str(?masako) = ""Tokugawa_Masako"") .

  ?spouse dbo:father ?father .
  
  OPTIONAL { 
    ?father rdf:type dbo:RoyalFamilyMember .
  }
  
  ?father dbo:administration ?administration .

  ?ieyasu dbo:deathPlace ?deathPlace .
  FILTER (str(?ieyasu) = ""Tokugawa_Ieyasu"") .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
9,71,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v7 <http://dbpedia.org/property/nickname> ?v8 . ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ?v8 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname
WHERE {
  ?institution a dbo:EducationalInstitution ;
               dbo:location dbr:Northern_Ireland ;
               dbp:nickname ?nickname .
  
  ?mayor dbo:almaMater ?institution ;
         dbo:position dbr:Belfast_Mayorship .

  ?awardee dbo:almaMater ?institution ;
           dbo:awardReceived dbr:Royal_Medals .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
427,49,test,"Give me the reference to the name of Italian People's Party (1994) and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyReferenceName ?prodiParty ?birthName
WHERE {
  # Italian People's Party (1994)
  dbr:Italian_People%27s_Party_(1994) dbo:officialName ?partyReferenceName .

  # Romano Prodi
  dbr:Romano_Prodi a dbo:Politician ;
                  dbo:birthName ?birthName ;
                  dbo:member ?prodiParty .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
747,63,test,"Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of Apollo (Hardwell song) and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band1 ?band2 ?person3 ?birthDate
WHERE {
  # Tracey Elizabeth McSween's band
  OPTIONAL {
    ?tracey a dbo:Person ;
            foaf:name ""Tracey Elizabeth McSween"" ;
            dbo:musicGroup ?band1 .
  }

  # Writer of Apollo (Hardwell song) and their band
  OPTIONAL {
    dbr:Apollo_(song_by_Hardwell) dbo:lyricsBy ?writer ;
                                  dbo:musicalArtist dbr:Hardwell .
    ?writer dbo:musicGroup ?band2 .
  }

  # Athlete and soccer player from Zolotonosha born on the same date as a decedent
  OPTIONAL {
    ?decedent dbo:dateOfDeath ?deathDate ;
              dbo:birthDate ?birthDate .
    ?person3 dbo:birthDate ?birthDate ;
             dbo:sport dbr:Soccer ;
             dbo:nationality dbr:Ukraine ;
             dbo:hometown dbr:Zolotonosha .
  }
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
328,62,test,Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:commanderOf dbr:Budapest_Offensive_(1945) .
  ?person dbo:award dbr:Order_of_the_Red_Banner ; 
           dbo:awardedFor dbr:Volcano_and_Ryukyu_Islands_campaign .
  ?person dbo:leader dbr:People's_Commissariat_for_Defence .
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
528,37,test,Give me the war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  ?war dbo:commander ?commander .
  ?commander foaf:name ""Narciso Campero"" .
  ?event dbo:date ?date .
  FILTER (CONTAINS(LCASE(?date), ""1909-01-09"") || CONTAINS(LCASE(?date), ""January 9, 1909""))
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
378,71,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/commander> ?v8 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v7 . ?v8 <http://dbpedia.org/ontology/knownFor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?commanderFame WHERE {
  # Find Carl Pontus Gahn and his associated wars
  ?gahn a dbo:Person ;
        foaf:name ""Carl Pontus Gahn"" ;
        dbo:birthName ?birthName .
  
  OPTIONAL { 
    ?gahn dbo:memberOf ?militaryOrganization .
    ?militaryOrganization dbo:participatedIn ?war .
  }
  
  # Find Thomas Trigge and his role in wars
  ?trigge a dbo:Person ;
          foaf:name ""Thomas Trigge"" ;
          dbo:claimToFame ?commanderFame .

  OPTIONAL {
    ?trigge dbo:memberOf ?militaryOrganization .
    ?militaryOrganization dbo:participatedIn ?war .
  }
  
  # Check for common war and connection to Peninsular War
  FILTER(?war != dbr:Peninsular_War)
  OPTIONAL { 
    ?peninsularWar a dbo:MilitaryConflict ;
                   foaf:name ""Peninsular War"" .
    ?militaryOrganization dbo:participatedIn ?peninsularWar .
  }
  
  # Ensure the war is both a military conflict and societal event
  ?war a dbo:MilitaryConflict, dbo:SocietalEvent .
}
ORDER BY ?war",9,13,10,3,3,3,3,71,0,0,2,0,0.0,0
528,38,test,Give me the war of the commander in Battle of La Rinconada de Ate and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?forceSize
WHERE {
  # Find the commander in the Battle of La Rinconada de Ate
  ?battle dbo:wikiPageRedirects dbr:Battle_of_La_Rinconada_de_Ate .
  ?battle dbo:commander ?commander .

  # Check if the commander is Narciso Campero Leyes and find his force size
  OPTIONAL {
    ?commander foaf:name ""Narciso Campero Leyes""@en .
    ?commander dbo:militaryCommanderOf ?unit .
    ?unit dbo:troopStrength ?forceSize .
  }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
404,45,test,Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfErnestAugustus ?childOfFatherOfSpouse
WHERE {
  # Prince Ernest Augustus of Hanover (born 1914)
  dbr:Prince_Ernest_Augustus_of_Hanover_(1914) dbo:parent ?parentOfErnestAugustus .

  # Spouse of Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouseOfVictoriaLouise .

  # Father of the spouse of Princess Victoria Louise of Prussia
  ?spouseOfVictoriaLouise dbo:father ?fatherOfSpouse .

  # Child of the father of the spouse of Princess Victoria Louise of Prussia
  ?fatherOfSpouse dbo:child ?childOfFatherOfSpouse .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
659,36,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in German campaign of 1813.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
    ?militaryForce a dbo:MilitaryConflict .
    ?militaryForce dbo:eventRelatedTo dbr:German_Campaign_of_1813 .
    ?militaryForce dbo:commander dbr:Rutger_Jan_Schimmelpenninck .
    
    OPTIONAL { ?militaryForce dbo:socialEvent true . }
    OPTIONAL { ?militaryForce a dbo:Event . }
}
```",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
488,22,test,Give me the administration of the father of Emperor Go-Mizunoo and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?birthPlace
WHERE {
  dbr:Emperor_Go-Mizunoo dbo:father ?father .
  ?father dbo:office ?administration .

  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,36,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  ?institution a dbo:EducationalInstitution ;
               dbo:location dbr:Northern_Ireland ;
               dbo:alumni dbr:John_Alderdice ;
               dbp:nickname ?nickname .
}
```

This query does the following:
- Selects the nickname (`?nickname`) of an institution.
- Ensures the institution is classified as an `EducationalInstitution`.
- Confirms its location in Northern Ireland using `dbo:location`.
- Verifies that John Alderdice is listed as an alumnus with `dbo:alumni`.
- Retrieves the nickname using `dbp:nickname`.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,61,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person
WHERE {
  # Find the capital of Khemis Miliana District
  dbr:Khemis_Miliana_District dbo:capital ?capital .
  
  # Ensure the capital is a settlement
  ?capital rdf:type dbo:Settlement .

  # Identify persons who were commanders in wars related to this capital
  ?person dbo:commanderInWar ?war1 .
  ?war1 dbo:eventLocation ?capital .

  # Identify persons who were also commanders in the Battle of Verdun
  ?person dbo:commanderInWar ?war2 .
  ?war2 dbr:Battle_of_Verdun .

}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
54,26,test,Give me the parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandGrandParent
WHERE {
  # Step 1: Identify Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Person ;
               foaf:name ""Thado Minsaw""@en ;
               dbo:placeOfBirth dbr:Prome .

  # Step 2: Find Parent of Thado Minsaw
  ?parentOfThadoMinsaw dbo:child ?thadoMinsaw .

  # Step 3: Find Child of This Parent
  ?childOfParent a dbo:Person ;
                 dbo:parent ?parentOfThadoMinsaw .

  # Step 4: Determine Parent of This Child
  ?grandGrandParent dbo:child ?childOfParent .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
959,71,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/manager> ?v7 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v8 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater
WHERE {
  ?leader a dbo:Politician ;
          dbo:birthYear ""1958""^^xsd:gYear ;
          dbo:nationality dbr:Japan ;
          dbo:residenceCountry ?country .
  
  ?election dbo:leader ?leader .
  FILTER (?election = dbr:2010_Japanese_House_of_Councillors_election)

  ?manager a dbo:SportsManager ;
           dbo:managedTeam ?team .

  ?season dbo:manager ?manager ;
          dbo:year ""1998""^^xsd:gYear ;
          dbo:team dbr:Kashima_Antlers .
  
  ?person dbo:almaMater ?almaMater ;
          dbo:nationality dbr:Japan ;
          a dbo:EducationalOrganization, dbo:University .

  FILTER (?leader = ?person)
}
```",9,16,10,3,3,3,3,71,0,0,3,0,0.0,0
959,68,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://dbpedia.org/property/residence> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?managerName ?universityName WHERE {
  # Takashi Sekizuka's team manager
  ?team dbr:Takashi_Sekizuka dbo:player ?sekizuka .
  ?team dbo:coach ?manager .

  # Manager's alma mater (university)
  ?manager dbp:almaMater ?university .
  
  # University criteria
  ?university a dbo:University ;
              dbo:country dbr:Japan ;
              rdf:type dbo:Organisation, dbo:EducationalInstitution .

  # Person born in 1958 and native of the leader's residence country
  ?person dbp:birthday ?birthday .
  FILTER (YEAR(?birthday) = 1958)
  
  ?leader dbp:election dbr:2010_Japanese_House_of_Councillors_election ;
          dbo:residenceCountry ?country .

  ?person dbo:nationality ?nationality .
  FILTER (?nationality = ?country)

  # Linking manager to the person
  ?manager dbp:name ?managerName .
  ?university dbp:name ?universityName .
}
```",8,14,9,3,3,3,3,71,0,0,3,0,0.0,0
232,38,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?settlement
WHERE {
  # Sean Pertwee's claim to fame involving a film and military conflict
  ?film dbo:starring dbr:Sean_Pertwee .
  ?conflict dbo:participant dbr:Sean_Pertwee .

  # Actor involved in both the film and the conflict
  ?actor dbo:starring ?film ;
         dbo:participatedIn ?conflict .

  # Sylvie Bermann's native settlement that is British
  dbr:Sylvie_Bermann dbp:nativePlace ?settlement .
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_Kingdom .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
378,21,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?claimToFame
WHERE {
  # Find wars associated with Carl Pontus Gahn
  OPTIONAL {
    ?person dbo:birthName ""Carl Pontus Gahn""@en.
    ?person dbo:associatedWith ?war.
    BIND(""Wars associated with Carl Pontus Gahn"" AS ?description)
  }
  
  # Find claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  OPTIONAL {
    dbr:Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón dbo:famousFor ?claimToFame.
    BIND(""Claim to fame of Louis des Balbes de Berton de Crillon"" AS ?description)
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
54,65,test,"Give me the child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the father of Soe Min Wimala Dewi
  ?father dbo:child dbr:Soe_Min_Wimala_Dewi .
  
  # Find the child (grandchild) of this father
  ?grandchild dbo:parent ?father .

  # Thado Minsaw is the parent of his own child
  ?thadoMinsaw dbr:Thado_Minsaw_of_Prome ;
               dbo:child ?childOfThado .

  # Find predecessor of the child (office holder and royalty)
  ?predecessor dbo:successor ?childOfThado .
  
  # Ensure the person is an office holder and a royalty
  ?person dbo:officeHolder true ;
          dbo:royalty true ;
          rdfs:label ?label .

  # Linking all conditions together
  FILTER (?grandchild = ?thadoMinsaw && ?predecessor = ?person)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
645,18,test,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock and alma mater of the child of Richard Pankhurst.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  # Find the commander in the Battle of Diamond Rock
  ?battle dbo:commander ?commander .
  FILTER(STRSTARTS(STR(?battle), ""Battle_of_Diamond_Rock""))

  # Find the child of Richard Pankhurst
  ?child dbo:parent dbr:Richard_Pankhurst .

  # Alma mater of the commander's child
  ?almaMater dbo:alumni ?commanderChild .
  ?commanderChild dbo:parent ?commander .
  
  # Residence country of the alma mater
  ?almaMater dbo:location ?country .
  FILTER(isURI(?country) && STRSTARTS(STR(?country), ""http://dbpedia.org/resource/Category:""))

}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
767,64,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInAdministration ?settlement ?alterEgo
WHERE {
  # Writer of ""Where It's At"" (Dustin Lynch album)
  ?album dbo:writer ?writer .
  FILTER(STRSTARTS(LCASE(?album), LCASE(""dustin lynch - where it's at"")))

  # Alma mater of Carl L. Nippert
  ?nippert dbo:almaMater ?almaMater .

  # Alter ego of the persona, fictional character of Matthew Burland
  ?burland dbo:fictionalCharacter ?fictionalCharacter .
  ?fictionalCharacter dbo:alterEgo ?alterEgo .

  # Entity in administration that is a settlement
  ?writer dbo:residence ?settlement .
  FILTER(STRSTARTS(LCASE(?settlement), LCASE(""administration"")) && 
         STRSTARTS(LCASE(?settlement), LCASE(""settlement"")))
  
  OPTIONAL {
    ?almaMater rdfs:label ?entityInAdministration .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
528,55,test,Give me the force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?pisaguaWar ?rinconadaCommander
WHERE {
  # Narciso Campero Leyes details
  dbr:Narciso_Campero_Leyes dbo:militaryForce ?force .
  
  # Battle of Pisagua and associated war
  dbr:Battle_of_Pisagua dbo:partOfWar ?pisaguaWar .

  # Battle of La Rinconada de Ate and its commander
  dbr:Battle_of_La_Rinconada_de_Ate dbo:commander ?rinconadaCommander .
}
```",6,6,7,2,3,3,3,71,0,0,2,0,0.0,0
427,67,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName ?prodiParty ?father ?alumnusFatherParty
WHERE {
  # Romano Prodi's birth name and political party
  dbr:Romano_Prodi dbo:birthName ?birthName .
  OPTIONAL { 
    ?prodiOfficeHolder dbp:officeHolderOf ?prodiRole .
    ?prodiRole dbo:party ?prodiParty .
    FILTER(?prodiParty = dbr:Partito_Popolare_Italiano)
  }

  # Alumnus of MIT
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
           dbo:father ?father .

  # Father's political party
  OPTIONAL {
    ?father dbp:party ?alumnusFatherParty .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
177,8,test,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik and entity in South Korea.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/location> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?headquarter WHERE {
  ?person rdfs:label ""Joo Don-sik""@en .
  ?organisation dbo:member ?person .
  ?organisation dbo:headquarters ?headquarter .
  ?headquarter dbp:country dbr:South_Korea .
}
```

This query does the following:
- Identifies Joo Don-sik as a person.
- Finds organizations of which he is a member.
- Retrieves the headquarters of these organizations.
- Filters to ensure the headquarters are in South Korea.",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
328,54,test,"Give me the commander in the force of the person decedent at Budapest and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:commanderOf dbr:Budapest .
  ?person dbo:leaderOf dbr:People's_Commissariat_of_Defense_of_the_Soviet_Union .
  ?award dbo:recipient ?person ;
         dbo:awardedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
547,56,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of Simon Cadell and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeRestingPlace ?simonCadellRestingPlace ?childOfJamesBurtonRestingPlace WHERE {
  # Gerald Graham's award awardee and their resting place
  ?award dbo:recipient ?awardee .
  ?award dbo:givenBy dbr:Gerald_Graham .
  OPTIONAL { ?awardee dbo:deathPlace ?awardeeDeathPlace . }
  
  # Simon Cadell's resting place
  dbr:Simon_Cadell dbo:deathPlace ?simonCadellRestingPlace .

  # Child of James Burton (property developer) and their resting place
  ?jamesBurton a dbo:Property_Developer ;
               dbo:child ?child .
  OPTIONAL { ?child dbo:deathPlace ?childDeathPlace . }
  
  BIND(IF(BOUND(?awardeeDeathPlace), ?awardeeDeathPlace, ""Unknown"") AS ?awardeeRestingPlace)
  BIND(IF(BOUND(?childDeathPlace), ?childDeathPlace, ""Unknown"") AS ?childOfJamesBurtonRestingPlace)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
783,16,test,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng and associated musical artist of the band member of Ofori Amponsah.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Priscilla Opoku-Kwarteng's details
  dbr:Priscilla_Opoku-Kwarteng a dbo:Artist ;
    dbo:birthPlace ?priscillaBirthPlace ;
    dbo:musicalArtist ?priscillaMusicalArtist .

  OPTIONAL { ?priscillaMusicalArtist dbo:bandMember ?priscillaBandMember . }

  # Ofori Amponsah's details
  dbr:Ofori_Amponsah a dbo:Artist ;
    dbo:musicalArtist ?oforiMusicalArtist .

  OPTIONAL { ?oforiMusicalArtist dbo:bandMember ?oforiBandMember . }

  # Find common band members
  FILTER (?priscillaBandMember = ?oforiBandMember)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
827,19,test,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859) and father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchildFather
WHERE {
    # Step 1: Find Maria Pavlovna's children who are royalty
    ?child a dbo:Monarch ;
           dbo:parent dbr:Grand_Duchess_Maria_Pavlovna_of_Russia ;
           dbo:spouse ?royaltyChild .

    # Step 2: Find the grandchild of Maria Pavlovna who is royalty
    ?grandchild a dbo:Monarch ;
                dbo:parent ?child .

    # Step 3: Identify Princess Pauline's spouse who is royalty
    dbr:Princess_Pauline_of_Saxe-Weimar-Eisenach dbo:spouse ?royaltySpouse .
    
    # Step 4: Find the father of the grandchild, who is a child of the spouse from step 3
    ?grandchildFather dbo:parent ?royaltySpouse ;
                      dbo:child ?grandchild .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
747,46,test,"Give me the band of the writer of Apollo (Hardwell song) and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?athlete WHERE {
  # Find the writer of ""Apollo"" by Hardwell
  ?song dbo:lyricsBy ?writer .
  ?song rdfs:label ""Apollo""@en .

  # Get the band associated with this writer
  OPTIONAL { ?writer dbo:musicalBand ?band . }

  # Find a decedent's birth date
  ?decedent dbo:dateOfBirth ?birthDate .
  ?decedent dbo:deathDate ?deathDate .
  
  # Find an athlete and soccer player born on the same date, from Zolotonosha
  ?athlete dbo:dateOfBirth ?birthDate ;
           dbo:sport ?sport ;
           dbo:nationality dbr:Zolotonosha .
  FILTER (?sport = dbr:Soccer)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
701,61,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the child of Seti I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Find the commander in Battle of Perire
  ?commander dbo:event dbr:Battle_of_Perire .
  
  # Identify the father of this commander
  ?father dbo:child ?commander .

  # Determine the spouse of the father, who is royalty
  ?spouse dbo:spouse ?father ;
          a dbo:Monarch .

  # Ensure the spouse is also a parent to the grandchild of Seti I
  ?setiIChild dbo:parent ?spouse .
  ?grandchild dbo:parent ?setiIChild .
  ?setiI dbr:Seti_I .
  ?setiI dbo:child ?setiIChild .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
44,9,test,"Give me the band member of the associated musical artist, that is a group and an organisation, of Queensrÿche and band member of the band of John Pettibone.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  # Queensrÿche is a musical artist that is both a group and an organization
  dbr:Queensrÿche 
    dbo:musicalArtistGroup dbr:Queensrÿche ;
    a dbo:MusicalArtist, dbo:Organization .

  # Find band members of Queensrÿche
  ?bandMember dbo:memberOfBand dbr:Queensrÿche .

  # John Pettibone's associated band
  ?pettiboneBand dbo:musicalArtistGroup ?pettiboneBand ;
                 dbo:associatedMusicalArtist dbr:John_Pettibone .

  # Find band members of the band associated with John Pettibone
  ?bandMember dbo:memberOfBand ?pettiboneBand .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
378,48,test,Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?claimToFame
WHERE {
  VALUES ?person { 
    dbr:George_Augustus_Eliott 
    dbr:C._P._Gahn 
  }
  
  OPTIONAL {
    ?person dbo:notableWork ?work .
    BIND(CONCAT(""Notable work: "", STR(?work)) AS ?claimToFame)
  }

  OPTIONAL {
    ?person dbo:discovery ?discovery .
    FILTER (?person = dbr:C._P._Gahn) 
    BIND(CONCAT(""Discovery: "", STR(?discovery)) AS ?claimToFame)
  }
  
  OPTIONAL {
    ?person dbo:role ?role .
    FILTER (?person = dbr:George_Augustus_Eliott) 
    BIND(CONCAT(""Role in Great Siege of Gibraltar: "", STR(?role)) AS ?claimToFame)
  }
}
ORDER BY ?person
```",5,5,6,3,2,3,3,71,0,3,2,0.0,0.0,0
996,17,test,Give me the force of Dagobert Sigmund von Wurmser and entity in the award of the native of Palestine (region).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?awardEntity WHERE {
  # Dagobert Sigmund von Wurmser's force
  dbr:Dagobert_Sigmund_von_Wurmser dbo:militaryForce ?force .
  
  # Entity related to an award from a native of Palestine
  ?person dbo:nationality dbr:Palestine_(region) ;
          dbo:award ?awardEntity .

}
```

This query does the following:
- Retrieves the military force associated with Dagobert Sigmund von Wurmser.
- Finds entities related to awards given by a person native to Palestine.",4,4,5,3,2,3,2,20,0,0,4,0,0.0,0
9,67,test,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?nickname ?awardRecipient
WHERE {
  # John Alderdice's alma mater
  dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMater .
  
  # Alma mater is an educational institution in Northern Ireland and has a nickname
  ?almaMater a dbo:EducationalInstitution ;
             dbp:country ""Northern Ireland""^^xsd:string ;
             OPTIONAL { ?almaMater rdfs:label ?nickname FILTER (lang(?nickname) = 'en') } .
  
  # Alma mater is an organization
  ?almaMater a dbo:Organization .

  # Award recipient related to Royal Medals
  ?awardRecipient dbo:awardedBy ?almaMater ;
                  dbo:award dbr:Royal_Medals .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
838,18,test,"Give me the band member of the band, that is a group, of YU Grupa and band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?member ?band 
WHERE {
  # YU Grupa is a band (group)
  ?yuGroup rdf:type dbo:Band .
  
  # Žika Jelić is an artist and musical artist
  ?zikaJelic rdf:type dbo:Artist ;
             dbo:musicalArtist true .

  # The band of Žika Jelić
  ?band rdf:type dbo:Band ;
        dbo:member ?zikaJelic .
  
  # A member of YU Grupa who is also a member of the band with Žika Jelić
  ?yuGroup dbo:member ?member .
  ?member dbo:member ?band .
}
```",5,10,6,3,2,3,2,20,0,0,5,0,0.0,0
427,18,test,Give me the party of Giulio Andreotti and party of Romano Prodi and reference to Partito Popolare Italiano.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party ?ppiDescription
WHERE {
  # Giulio Andreotti's party
  {
    SELECT DISTINCT ?person ?party WHERE {
      VALUES ?person { dbr:Giulio_Andreotti }
      ?person dbo:politicalParty ?party .
    }
  }

  UNION

  # Romano Prodi's party
  {
    SELECT DISTINCT ?person ?party WHERE {
      VALUES ?person { dbr:Romano_Prodi }
      ?person dbo:politicalParty ?party .
    }
  }

  UNION

  # Information about Partito Popolare Italiano
  {
    SELECT DISTINCT ?ppiDescription WHERE {
      ?ppi a dbo:PoliticalParty ;
           rdfs:label ""Partito Popolare Italiano""@it .
      OPTIONAL { ?ppi dbo:description ?ppiDescription }
    }
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
767,49,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?adminEntity
WHERE {
  # Find Matthew Burland's fictional alter ego
  ?person rdfs:label ""Matthew Burland""@en .
  OPTIONAL { 
    ?person dbo:fictionalCharacter ?alterEgo .
  }
  
  # Find an entity in the administration of a settlement named Green
  ?settlement rdfs:label ""Green""@en ;
              dbo:administrativeUnit ?adminEntity .
}
```",5,7,6,3,2,3,3,71,0,0,7,0,0.0,0
488,47,test,"Give me the birth place of the commander in Boshin War and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceOfCommanderInBoshinWar ?deathPlaceOfGrandfather
WHERE {
  # Matsudaira Tadamasa and his father
  dbr:Matsudaira_Tadamasa dbo:father ?father .
  
  # Father's details
  ?father a dbo:Politician ;
          a dbo:OfficeHolder .

  # Grandfather (Father's father)
  ?father dbo:father ?grandfather .

  # Commander in Boshin War and his birthplace
  dbr:Boshin_War dbo:commander ?commander .
  ?commander dbo:birthPlace ?birthPlaceOfCommanderInBoshinWar .

  # Grandfather's death place
  ?grandfather dbo:deathPlace ?deathPlaceOfGrandfather .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
492,71,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v4 . ?v7 <http://dbpedia.org/ontology/capital> ?v8 . ?result <http://dbpedia.org/ontology/deathPlace> ?v8 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v7 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentAtCapital ?personDecedentAtWork
WHERE {
  # Khemis Miliana District and its capital
  dbr:Khemis_Miliana_District dbo:capital ?capitalCity .
  ?capitalCity a dbo:Settlement .

  # Person decedent at the capital
  ?deathEventCapital dbo:place ?capitalCity ;
                    dbo:agent ?personDecedentAtCapital .
  
  # Author of ""French Algeria""
  dbr:François_Mauriac dbo:authorOf dbr:French_Algeria .

  # Work associated with the author and person decedent
  ?deathEventWork dbo:work dbr:French_Algeria ;
                  dbo:agent ?personDecedentAtWork .
  
  # Commander in Battle of Verdun
  ?battleVerdun dbo:commander ?verdunCommander .

  # War associated with the commander
  ?warEvent dbo:commander ?verdunCommander ;
            a dbo:MilitaryConflict, dbo:Event .
  
  FILTER(?personDecedentAtCapital != ?personDecedentAtWork)
}",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
328,43,test,Give me the commander in the force of the person decedent at Budapest and awardee of Order of Suvorov and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:commanderOfForce ?force .
  ?force dbo:location dbr:Budapest .
  
  ?person dbo:awardReceived dbr:Order_of_Suvorov .

  ?person dbo:leaderOf dbr:People's_Commissariat_of_Defence_of_the_Soviet_Union .

  OPTIONAL { ?person foaf:name ?name . }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
378,43,test,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War and war of Carl Pontus Gahn.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame ?conflict WHERE {
  # Identify Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:occupation ?occupation .
  
  # Find his claim to fame related to military command
  OPTIONAL { 
    ?occupation rdfs:label ?claimToFame FILTER (CONTAINS(LCASE(?claimToFame), ""commander"") || CONTAINS(LCASE(?claimToFame), ""military"")) .
  }
  
  # Identify the Peninsular War as a conflict he was involved in
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:participatedIn ?conflict .
  FILTER (str(?conflict) = ""Peninsular_War"" || str(?conflict) = ""War_of_the_Peninsula"") .

  # Ensure the conflict is a military one
  ?conflict rdf:type dbo:MilitaryConflict .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
365,9,test,"Give me the reference to the real name of The Blasters and band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?realName WHERE {
  # The Blasters band resource
  dbr:The_Blasters a dbo:Band .

  # Members of the band who are artists and musicians
  ?member dbo:bandMemberOf dbr:The_Blasters .
  ?member dbo:occupation dbr:Vocalist ;
          dbo:occupation dbr:Musician ;
          dbo:occupation dbr:Songwriter .

  # Real names of these members
  OPTIONAL { ?member foaf:name ?realName . }
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
617,20,test,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland and child of the child, that is a royalty, of the parent of Mlada (abbess).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?v4 <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandparentOfFather
WHERE {
  # Richeza of Poland's father who is a royalty
  ?richeza dbo:spouse ?father .
  ?father rdf:type dbo:Monarch .

  # Father's parent (Richeza's grandparent) who is a royalty
  ?father dbo:parent ?grandparentOfFather .
  ?grandparentOfFather rdf:type dbo:Monarch .

  # Mlada's parent and their parent (Mlada's grandparent)
  ?mlada dbo:child ?childOfMlada .
  ?childOfMlada dbo:parent ?parentOfChildOfMlada .
  ?parentOfChildOfMlada dbo:parent ?grandparentOfMlada .

  # Child of Mlada's grandparent who is a royalty
  ?grandparentOfMlada dbo:child ?royaltyChild .
  ?royaltyChild rdf:type dbo:Monarch .

  # Ensure the grandparent of Richeza's father and the child of Mlada's grandparent are the same
  FILTER (?grandparentOfFather = ?royaltyChild)
}
```",6,9,7,3,2,3,2,20,0,3,1,0.0,0.0,0
392,23,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v2 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?province ?country
WHERE {
  # Sebastiano Bianchetti's residence details
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti"" .
  
  ?person dbo:residenceLocation ?settlement .
  ?settlement a dbo:Settlement ;
              dbp:country dbr:Italy ;
              dbo:administrativeRegion ?province .

  # Country associated with Central European Time
  ?timeZone a dbo:TimeZone ;
            dbp:name ""Central European Time"" .
  
  ?country dbo:timezone ?timeZone ;
           a dbo:Country .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
767,33,test,Give me the entity in Baden-Württemberg and alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInBadenWurttemberg ?almaMater
WHERE {
  # Find George Kilbon Nash's alma mater
  dbr:George_Kilbon_Nash dbo:almaMater ?almaMater .

  # Find entities in Baden-Württemberg related to his administration role
  ?entityInBadenWurttemberg a dbo:AdministrativeRegion ;
                           dbo:country dbr:Germany ;
                           rdfs:label ""Baden-Württemberg""@en .
  
  OPTIONAL {
    ?administrationRole dbo:administrator dbr:George_Kilbon_Nash .
    ?administrationRole dbo:location ?entityInBadenWurttemberg .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
838,19,test,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?otherBand
WHERE {
  # Identify band members of YU Grupa who are artists and musical artists
  ?member dbo:memberOf dbr:YU_Grupa .
  ?member a dbo:Artist .
  ?member a dbo:MusicalArtist .

  # Find another band they belong to, which is both a group and an organization related to YU Grupa
  ?member dbo:memberOf ?otherBand .
  ?otherBand a dbo:Group .
  
  OPTIONAL {
    ?relation dbo:reference dbr:YU_Grupa .
    ?relation a dbo:Organization .
    ?relation dbo:group ?otherBand .
  }
}
```",5,10,6,3,2,3,2,20,0,0,5,0,0.0,0
492,27,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  # Find the capital of Khemis Miliana District
  ?capital a dbo:Settlement ;
           dbo:country dbr:Algeria ;
           dbo:administrativeUnit dbr:Khemis_Miliana_District .

  # Ensure it is recognized as a capital
  OPTIONAL { ?capital dbp:capital ""true""^^xsd:boolean . }

  # Find persons who died in this capital
  ?person dbo:deathPlace ?capital ;
          foaf:name ?name .
}
ORDER BY ?name",3,4,4,3,1,3,3,71,0,0,122,0,0.0,0
328,34,test,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?award 
WHERE {
  # Find the leader of People's Commissariat of Defense
  ?person dbo:positionTitle ""People's Commissar for Defence""@en .
  
  # Ensure this person is associated with an award related to Volcano and Ryukyu Islands campaign
  ?person dbo:awards ?award .
  ?award dbo:description ?description .

  FILTER(CONTAINS(LCASE(?description), ""volcano"") && CONTAINS(LCASE(?description), ""ryukyu islands""))
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
391,58,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  # Michael Ballhaus' claim to fame (work)
  dbr:Michael_Ballhaus dbo:claimToFame ?work .

  # Actor who is native of Compton, California and acted in the work
  ?actor dbo:nationality dbr:United_States ;
         dbo:birthPlace dbr:Compton,_California ;
         dbo:actedIn ?work .

  # The same actor must have acted in a movie that is also a work and television show
  ?movie dbo:type dbr:Film ;
         dbo:genre dbr:Television_Show ;
         dbo:actor ?actor .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
617,22,test,Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Find a person who is a child of Antiochus III and also has a child named Antiochus
  ?intermediaryChild dbo:child dbr:Antiochus_III_the_Great .
  ?intermediaryChild dbo:spouse ?spouse .
  ?intermediaryChild dbo:parent ?parent .

  # Ensure this intermediary person is also the parent of another Antiochus
  ?intermediaryChild dbo:child ?antiochusSon .
  ?antiochusSon rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""antiochus""))
}
```",3,3,4,2,2,3,3,71,0,3,2,0.0,0.0,0
142,9,test,Give me the birthplace of the actor of Papa wa Newscaster and entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?birthplace ?entityInJSTRegion
WHERE {
  # Find the actor of ""Papa wa Newscaster""
  ?work dbo:starring ?actor .
  ?work rdfs:label ""Papa wa Newscaster""@en .

  # Get the birthplace of the actor
  ?actor dbo:birthPlace ?birthplace .

  # Find entities in the region of Japan Standard Time
  ?entityInJSTRegion dbp:timeZone dbr:Japan_Standard_Time .
}
```",4,4,5,2,2,2,2,9,2,3,0,0.4,1.0,0.5714285714285715
915,20,test,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?resident
WHERE {
  # Director of ""Pipe Dreams"" (1976 film)
  ?film dbo:director ?director .
  FILTER(STRSTARTS(STR(?film), STR(dbr:Pipe_Dreams_(1976_film))))

  # Birthplace of the director
  ?director dbp:birthPlace ?birthPlace .

  # Ensure birthplace is a settlement
  ?birthPlace rdf:type dbo:Settlement .

  # Resident of that birthplace
  ?resident dbo:residence ?birthPlace .

  # Child who is a fictional character and soap character
  ?child dbo:fictionalCharacter ?true .
  ?child dbo:soapCharacter ?true .

  # Parent of this child, also a fictional character and soap character
  ?parent dbo:hasChild ?child .
  ?parent dbo:fictionalCharacter ?true2 .
  ?parent dbo:soapCharacter ?true3 .

  # Lizzie Spaulding's parent
  ?lizzieParent dbo:hasChild dbr:Lizzie_Spaulding .
  
  # Linking the chain of relationships
  ?parent = ?lizzieParent
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
328,67,test,"Give me the awardee of Order of Suvorov and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in the force of the person decedent at Budapest.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?leaderOfOffice ?commanderInForce
WHERE {
  ?awardee dbo:award [ a dbo:Award ; rdfs:label ""Order of Suvorov""@en ] .
  
  ?officeHolder a dbo:GovernmentAgency ;
                dbo:head ?leaderOfOffice .

  ?politician a dbo:Politician ;
              dbo:holdsPosition ?officeHolder ;
              dbo:leader ?gustavJonsonLeader .

  ?person dbr:Budapest dbo:commanderInForce ?commanderInForce .
  
  FILTER (?awardee = ?politician && ?politician = ?gustavJonsonLeader)
}
```

5. **Explanation**:
   - The query selects distinct individuals who are awardees of the Order of Suvorov, leaders of government agencies, and commanders in force at Budapest.
   - It uses triple patterns to link these roles through common entities like politicians and office holders.
   - Filters ensure that the same individual fulfills all specified roles.

6. **Validation**:
   - The query adheres to SPARQL syntax standards.
   - It is optimized for performance by using distinct selections and necessary filters.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
30,8,test,Give me the native of Paris and professional in the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nativeCityLabel ?professionLabel
WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Édouard Alphonse James de Rothschild""@en .
  
  OPTIONAL { 
    ?person dbo:birthPlace ?nativeCity .
    ?nativeCity rdfs:label ?nativeCityLabel .
    FILTER (lang(?nativeCityLabel) = 'en')
  }
  
  OPTIONAL {
    ?person dbo:profession ?profession .
    ?profession rdfs:label ?professionLabel .
    FILTER (lang(?professionLabel) = 'en')
  }
}
```",3,3,4,2,2,2,2,9,0,1,1,0.0,0.0,0
547,57,test,Give me the resting place of James Burton (Egyptologist) and resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?restingPlace WHERE {
  # James Burton (Egyptologist)
  { 
    ?person rdfs:label ""James Burton (Egyptologist)""@en .
    ?person dbo:finalRestingPlace ?restingPlace .
  }
  
  UNION
  
  # Actor from the show with Emily Richard
  { 
    ?show dbp:starring ?actor .
    ?show dbp:starring <http://dbpedia.org/resource/Emily_Richard> .
    ?actor dbo:finalRestingPlace ?restingPlace .
  }
  
  UNION
  
  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  { 
    ?person dbo:honoursReceived ?award .
    ?award rdfs:label ""Knight Grand Cross of the Order of St Michael and St George""@en .
    ?person dbo:finalRestingPlace ?restingPlace .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
617,71,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v8 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseName
WHERE {
  # Antiochus (son of Antiochus III the Great)
  dbr:Antiochus_I_Soter a dbo:Monarch ;
                        dbo:father dbr:Antiochus_III_the_Great .

  # Successor of Antiochus II Theos
  ?successor a dbo:Monarch ;
             dbo:predecessor dbr:Antiochus_II_Theos ;
             dbo:child ?childOfSuccessor .

  # Child of the successor that is royalty
  ?childOfSuccessor a dbo:RoyalFamilyMember .

  # Spouse of the child
  ?spouse dbo:spouse ?childOfSuccessor ;
          rdfs:label ?spouseName .
  
  # Commander in Battle of Panium and parent of the child
  dbr:Antigonus_III_Doson a dbo:MilitaryPerson ;
                          dbo:commanderInBattle dbr:Battle_of_Panium ;
                          dbo:child ?parentOfChild .

  # Child of the child that is royalty
  ?grandchild dbo:child ?childOfSuccessor ;
              a dbo:RoyalFamilyMember .
}
```",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
747,49,test,Give me the band of the person born as the persona of Shèna and person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?band
WHERE {
  # Find the person known as Shèna and their band
  ?person dbo:birthName ""Shèna""@en .
  ?person dbo:musicalBand ?band .

  # Find Pavlo Khudzik's birth date
  dbr:Pavlo_Khudzik dbo:birthday ?pavloBirthDate .

  # Find any person with the same birth date as Pavlo Khudzik
  ?otherPerson dbo:birthday ?pavloBirthDate .
  
  # Get the band of this other person
  ?otherPerson dbo:musicalBand ?band .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
115,9,test,Give me the alma mater of the awardee of National Order of Scientific Merit and alma mater of the alumnus of National University of San Marcos.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeName ?alumnusName ?almaMaterAwardee ?almaMaterAlumnus
WHERE {
  # Awardee of National Order of Scientific Merit
  ?person dbo:award dbr:National_Order_of_Scientific_Merit .
  ?person foaf:name ?awardeeName .

  OPTIONAL {
    ?person dbo:almaMater ?institutionAwardee .
    ?institutionAwardee foaf:name ?almaMaterAwardee .
  }

  # Alumnus of National University of San Marcos
  ?student dbo:alumniOf dbr:National_University_of_San_Marcos .
  ?student foaf:name ?alumnusName .

  OPTIONAL {
    ?student dbo:almaMater ?institutionAlumnus .
    ?institutionAlumnus foaf:name ?almaMaterAlumnus .
  }
}
```",4,4,5,2,2,2,2,9,0,0,2,0,0.0,0
996,20,test,Give me the entity in the award of the native of Palestine (region) and force of the awardee of the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v1 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?awardee ?force WHERE {
  ?award dbo:recipient ?awardee .
  
  OPTIONAL { ?awardee dbo:nationality dbr:Palestine . }
  
  OPTIONAL { ?awardee dbo:occupation ?force . }

  ?location dbo:elevation ?elevation .
  FILTER (?location = dbr:Lac_d'Avoriaz)
}
```

This query attempts to find an award entity (`?award`) and its recipient (`?awardee`). It checks if the awardee is native to Palestine and has a specific occupation or role (`?force`). Additionally, it connects this information with Lac d'Avoriaz through elevation.",6,6,7,3,2,3,2,20,0,0,4,0,0.0,0
820,16,test,Give me the professional in the award of Scott McCloud and child of the parent of Jason Schwartzman.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional
WHERE {
  # Find awards related to Scott McCloud
  ?award dbo:recipient ?scottMcCloud .
  ?scottMcCloud foaf:name ""Scott McCloud"" .

  # Identify Jason Schwartzman's parent
  ?jasonSchwartzman foaf:name ""Jason Schwartzman"" .
  ?parent dbo:child ?jasonSchwartzman .
  
  # Find the child of Jason Schwartzman's parent (could be Jason or a sibling)
  ?parent dbo:child ?potentialSibling .

  # Ensure the professional is linked to both the award and the familial relationship
  ?professional dbo:award ?award .
  FILTER (?potentialSibling = ?jasonSchwartzman || ?potentialSibling != ?jasonSchwartzman)

}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
701,35,test,Give me the parent of the child of Nefertari and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfChild ?spouseOfFather
WHERE {
  # Find Nefertari and her child
  ?nefertari dbo:child ?child .
  FILTER (str(?nefertari) = ""Nefertari"") .

  # Find the parent of this child
  ?child dbo:parent ?parentOfChild .

  # Find Merneptah and his father
  ?merneptah dbo:father ?fatherOfMerneptah .
  FILTER (str(?merneptah) = ""Merneptah"") .

  # Find the spouse of this father
  ?fatherOfMerneptah dbp:spouse ?spouseOfFather .

  # Ensure we are looking for a common entity between these two relationships
  FILTER (?parentOfChild = ?spouseOfFather)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
767,46,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of the administration of George K. Nash.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  # Step 1: Identify Dustin Lynch as the writer of ""Where It's At""
  dbr:Dustin_Lynch dbo:album dbr:Where_It%27s_At_(Dustin_Lynch_album) .

  # Step 2: Determine George K. Nash's alma mater
  dbr:George_K._Nash dbo:almaMater ?almaMater .

  # Step 3: Find the administration related to this alma mater
  ?almaMater dbo:locatedInAdministrativeTerritory ?administration .

  # Step 4: Locate a settlement within that administration
  ?settlement a dbo:Settlement ;
              dbo:partOfAdministrativeTerritory ?administration .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
547,61,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorRestingPlace ?awardeeRestingPlace
WHERE {
  # Find the show with Emily Richard
  ?show dbo:starring dbr:Emily_Richard .
  
  # Find the actor of that show
  ?show dbo:actor ?actor .

  # Get the resting place of the actor
  OPTIONAL { ?actor dbo:deathPlace ?actorRestingPlace . }
  OPTIONAL { ?actor dbo:burialPlace ?actorRestingPlace . }

  # Find the award associated with Gerald Graham
  ?award dbo:recipient dbr:Gerald_Graham .

  # Find the awardee of that award
  ?award dbo:awardee ?awardee .

  # Get the resting place of the awardee
  OPTIONAL { ?awardee dbo:deathPlace ?awardeeRestingPlace . }
  OPTIONAL { ?awardee dbo:burialPlace ?awardeeRestingPlace . }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
54,67,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  # Find a child of Thihapate of Mohnyin who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin ;
         a dbo:OfficeHolder, dbo:Royalty .

  # Find the predecessor (parent) of this child
  ?predecessor dbo:child ?child .

  # Ensure the parent of this child is related to Thado Minsaw of Prome and Thinkhaya of Pagan
  ?intermediateParent dbo:parent ?child .
  ?intermediateParent dbo:parent dbr:Thado_Minsaw_of_Prome ;
                      dbo:parent dbr:Thinkhaya_of_Pagan .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
994,24,test,"Give me the band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist WHERE {
  dbr:Don_Dokken dbo:memberOf dbr:Dokken .
  
  ?bandMember dbo:memberOf dbr:Dokken .

  ?associatedArtist dbo:collaboratedWith ?bandMember .

  ?associatedArtist rdf:type dbo:Band ;
                   dbo:genre dbr:Metalcore ; # Assuming Metalcore as a common genre for Meshuggah collaborations
                   dbo:collaboratedWith dbr:Meshuggah .

  FILTER(?bandMember != dbr:Don_Dokken)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
232,56,test,"Give me the actor of Dog Soldiers (film) and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?child
WHERE {
  # Actor of ""Dog Soldiers""
  ?film dbo:title ""Dog Soldiers""@en .
  ?film dbo:starring ?actor .

  # John Pertwee's child
  dbr:John_Pertwee foaf:name ""John Devon Roland Pertwee"" .
  dbr:John_Pertwee dbo:child ?child .

  # British politician and office holder in France
  ?politician a dbo:Politician ;
             dbo:nationality dbr:United_Kingdom ;
             dbo:officeHolderOf dbr:France .
  
  # Settlement that is the native residence of the politician
  ?settlement dbo:settlementType dbr:Settlement ;
              dbo:resident ?politician .

  # Ensure the settlement is British
  ?settlement dbo:nationality dbr:United_Kingdom .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
547,47,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v0 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorRestingPlace ?childRestingPlace WHERE {
  # Find the actor who starred in a show with Emily Richard
  ?show dbo:starring dbr:Emily_Richard .
  ?show dbo:starring ?actor .
  
  # Get the resting place of this actor
  ?actor dbo:deathPlace ?actorDeathPlace .
  OPTIONAL { ?actorDeathPlace rdfs:label ?actorRestingPlace . FILTER (lang(?actorRestingPlace) = ""en"") }

  # Find James Burton's child
  ?james dbr:James_Burton_(property_developer) ;
         dbo:child ?child .

  # Get the resting place of this child
  ?child dbo:deathPlace ?childDeathPlace .
  OPTIONAL { ?childDeathPlace rdfs:label ?childRestingPlace . FILTER (lang(?childRestingPlace) = ""en"") }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
427,66,test,"Give me the reference to the name of Italian People's Party (1994) and party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?italianPeopleParty ?fatherParty ?prodiParty
WHERE {
  # Italian People's Party (1994)
  OPTIONAL { 
    dbr:Italian_People%27s_Party_(1994) dbo:wikiPageRedirects ?italianPeopleParty .
  }

  # Father of Lamberto Andreotti and his party
  dbr:Lamberto_Andreotti dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .

  # Romano Prodi's political affiliation
  dbr:Romano_Prodi dbo:birthName ""Romano Prodi""@en ;
                   dbo:officeHolder ?prodiOffice .
  OPTIONAL {
    ?prodiOffice dbo:affiliatedParty ?prodiParty .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
184,51,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity
WHERE {
  # Path for Archduchess Margaret of Austria (born 1925)
  ?margaret a dbr:Archduchess_Margaret_of_Austria_(born_1925) .
  ?margaret dbo:parent ?parentMargaret .
  ?childOfParent dbo:parent ?parentMargaret .

  # Path for Archduke Joseph Karl of Austria
  ?joseph a dbr:Archduke_Joseph_Karl_of_Austria .
  ?childJoseph dbo:child ?childOfJoseph .
  ?grandChildOfChild dbo:child ?childOfJoseph .

  # Find common entity between the two paths
  FILTER (?childOfParent = ?commonEntity || ?grandChildOfChild = ?commonEntity)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
547,50,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardeeRestingPlace ?actorRestingPlace WHERE {
  # Find the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  ?person dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
  OPTIONAL { ?person dbp:placeOfBurialOrMemorial ?awardeeRestingPlace . }
  
  # Find the resting place of an actor from a show with Emily Richard
  ?show dbo:starring dbr:Emily_Richard .
  ?actor dbo:starring ?show .
  OPTIONAL { ?actor dbp:placeOfBurialOrMemorial ?actorRestingPlace . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
528,71,test,"Give me the war of the commander in the work of --01-09 and war of the military force of the entity, that is a societal event, in Chile and force of the person born as the birth name of Narciso Campero.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v8 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war ?commander ?militaryForce ?societalEvent ?person
WHERE {
  # War involving a commander related to an event/work on January 9th
  ?work dbo:date ""2001-01-09""^^xsd:date .
  ?work dbo:subject ?event .
  ?event dbo:relatedWar ?war .
  ?war dbo:commander ?commander .

  OPTIONAL {
    # War involving a military force related to a societal event in Chile
    ?societalEvent dbo:location dbr:Chile ;
                  dbo:relatedWar ?war2 .
    ?militaryForce dbo:participatedIn ?war2 .
    FILTER(?war = ?war2)
  }

  OPTIONAL {
    # Force of the person born as Narciso Campero
    ?person foaf:name ""Narciso Campero"" ;
            dbo:birthName ""Narciso Campero"" .
    ?force dbo:commander ?person .
    ?war3 dbo:militaryForce ?force .
    FILTER(?war = ?war3)
  }
}
ORDER BY ?war",9,10,10,3,3,3,3,71,0,0,2,0,0.0,0
528,67,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in the work of --01-09 and war of Irene Morales.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?v6 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war1 ?war2
WHERE {
  # Find Narciso Campero's birth name and associated force
  dbr:Narciso_Campero dbo:birthName ?birthName .
  ?person dbo:birthName ?birthName .
  ?person dbo:force ?force .

  # Find the war related to a commander from a work dated --01-09
  ?work dbo:date ?date .
  FILTER (STRSTARTS(STR(?date), ""----01-09""))
  ?work dbo:commander ?commander .
  ?war1 dbo:commander ?commander .

  # Find the war involving Irene Morales
  dbr:Irene_Morales dbo:involvedInWar ?war2 .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
994,20,test,"Give me the associated musical artist of S.A. Slayer and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?bandMember ?associatedBand ?organization
WHERE {
  # Find associated musical artists of S.A. Slayer
  dbr:S._A._Slayer dbo:musicalArtist ?artist1 .

  # Find band members of Meshuggah who are also bands or organizations
  dbr:Meshuggah dbo:bandMember ?bandMember .
  
  OPTIONAL {
    ?bandMember dbo:musicalArtist ?associatedBand .
  }
  
  OPTIONAL {
    ?bandMember a dbo:Organization .
    BIND(?bandMember AS ?organization)
  }

}
```",3,6,4,2,2,3,3,71,0,0,2,0,0.0,0
626,19,test,"Give me the commander in the force, that is a military conflict, of Alexander I of Russia and awardee of the award of the military force of Battle of Borodino.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award
WHERE {
  # Find military conflicts involving Alexander I of Russia
  ?conflict dbo:militaryCommander dbr:Aleksandr_I_of_Russia .
  
  # Identify the commander in those conflicts
  ?conflict dbo:commander ?commander .

  # Find awards related to the Battle of Borodino
  ?award dbo:recipient ?recipient ;
         dbo:relatedEvent dbr:Battle_of_Borodino .

  # Ensure the commander is also an awardee for the Battle of Borodino
  FILTER (?commander = ?recipient)
}
```",5,6,6,3,2,3,2,20,0,0,44,0,0.0,0
485,28,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?whitakerBirthplaceRegion ?awardRecipientBirthplace ?westernEuropeanTimeCountry
WHERE {
  # Joseph Whitaker's birthplace that is a region
  dbr:Joseph_Whitaker (dbo:birthPlace) ?whitakerBirthplace .
  ?whitakerBirthplace rdf:type dbo:AdministrativeArea .

  # Awardee of Eric Gregory Award who is a writer and poet, and their birthplace
  ?awardRecipient dbo:award <http://dbpedia.org/resource/Eric_Gregory_Award> ;
                 (dbo:occupation) ?writerPoetOccupation .
  FILTER(CONTAINS(LCASE(STR(?writerPoetOccupation)), ""writer"") && CONTAINS(LCASE(STR(?writerPoetOccupation)), ""poet""))
  ?awardRecipient dbo:birthPlace ?awardRecipientBirthplace .

  # Country associated with Western European Time
  dbr:Western_European_Time (dbo:country) ?westernEuropeanTimeCountry .
  ?westernEuropeanTimeCountry rdf:type dbo:Country .
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
92,53,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of Jim Sheppard and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist
WHERE {
  # Find Jim Sheppard and his association with Nevermore
  dbr:Jim_Sheppard a dbo:Musician ;
                   dbo:musicalBand dbr:Nevermore .

  # Get band members of Nevermore who are artists
  ?bandMember a dbo:MusicalArtist ;
              dbo:musicalBand dbr:Nevermore .
  
  FILTER (?bandMember != dbr:Jim_Sheppard) # Exclude Jim Sheppard himself

  OPTIONAL {
    # Find Joe Satriani and his associated musical artist
    dbr:Joe_Satriani a dbo:MusicalArtist ;
                     rdfs:label ""Joseph Michael Furney""@en .
    
    ?associatedArtist a dbo:MusicalArtist ;
                      dbo:musicalBand ?bandMember .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
626,20,test,"Give me the commander in the force, that is a military conflict, of the commander in Battle of Paris (1814) and awardee of the award of the military force of Battle of Borodino.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInParis ?awardeeOfBorodinoAward WHERE {
  # Find the commander in Battle of Paris (1814)
  ?battleParis a dbo:MilitaryConflict ;
               rdfs:label ""Battle of Paris (1814)""@en .
  
  ?commanderInParis dbo:commander ?battleParis .

  # Find the award related to the military force of Battle of Borodino
  ?battleBorodino a dbo:MilitaryConflict ;
                  rdfs:label ""Battle of Borodino""@en .
  
  ?militaryForce dbo:participatedIn ?battleBorodino .
  ?award dbo:awardee ?militaryForce .

  # Find the awardee who is also the commander in Battle of Paris
  ?commanderInParis dbo:receivedAward ?award .
}
```",6,7,7,3,2,3,2,20,0,0,62,0,0.0,0
767,48,test,"Give me the reference to the alter ego of Black Hood and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alterEgo ?adminEntity WHERE {
  # Find the writer of ""Where It's At"" by Dustin Lynch
  ?album dbo:artist dbr:Dustin_Lynch ;
         rdfs:label ""Where It's At""@en .
  
  ?writer dbo:recordedAlbum ?album .

  # Find the settlement where this writer is in administration
  ?adminEntity dbo:administrator ?writer ;
               a dbo:Settlement .

  # Find Black Hood and their alter ego
  ?blackHood rdfs:label ""Black Hood""@en .
  OPTIONAL { 
    ?blackHood dbo:alterEgo ?alterEgo .
  }
}
```",5,6,6,3,2,3,3,71,0,0,8,0,0.0,0
54,56,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of Thado Minsaw of Prome and child of the father of Soe Min Wimala Dewi.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .

  # Child of Thihapate who is an office holder and royalty
  ?child dbo:parent ?thihapate ;
         a dbo:OfficeHolder, dbo:Royalty .

  # This child is the parent of Thado Minsaw of Prome
  ?child dbo:child dbr:Thado_Minsaw_of_Prome .

  # This child is also the child of the father of Soe Min Wimala Dewi
  ?soeminwimaladewi a dbo:Person ;
                   rdfs:label ""Soe Min Wimala Dewi""@en .
  ?fatherOfSoeMinWimalaDewi dbo:child ?soeminwimaladewi .
  ?child dbo:parent ?fatherOfSoeMinWimalaDewi .

  # Find the predecessor (parent) of this child
  ?predecessor dbo:child ?child .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,70,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of Pavlo Khudzik and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?result <http://dbpedia.org/ontology/birthDate> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandShena ?bandSameBirthDate ?bandSongWriter
WHERE {
  # Find the band of the person known as Shèna
  ?personShena dbo:birthName ""Shèna"" .
  ?personShena dbo:musicalBand ?bandShena .

  # Find the person born on the same date as Pavlo Khudzik and their band
  ?pavloKhudzik dbo:birthday ?birthDatePavlo .
  ?sameBirthPerson dbo:birthday ?birthDatePavlo .
  ?sameBirthPerson dbo:musicalBand ?bandSameBirthDate .

  # Find the writer of a song by Amba Shepherd and their band
  ?song dbr:Amba_Shepherd dbo:lyricist ?writer .
  ?writer dbo:musicalBand ?bandSongWriter .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
801,57,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in .","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v5 <http://dbpedia.org/property/writer> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?work
WHERE {
    ?work a dbo:MusicalWork ;
          a dbo:Song .
    
    ?work dbo:performer ?producer .

    ?producer a dbo:MusicalArtist ;
              dbo:genre dbr:Rap_music ;
              dbo:associatedBandOrMusicalGroup dbr:40_Dayz_%26_40_Nightz .

    ?writer a dbo:MusicalArtist, dbo:Artist .
    ?producer dbo:associatedBandOrMusicalGroup ?writer .
}
```",6,12,7,3,3,3,3,71,0,0,8,0,0.0,0
528,47,test,Give me the war of the commander in the work of --01-09 and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warOfCommander ?battleOfPisaguaWar
WHERE {
  # Find the war associated with a commander in the work of --01-09
  ?commander dbo:dateOfBirth ?dateOfBirth .
  FILTER (YEAR(?dateOfBirth) = 1909)
  
  ?commander dbo:commanded ?warOfCommander .

  # Find the military force involved in the Battle of Pisagua
  dbr:Battle_of_Pisagua dbo:militaryForce ?battleOfPisaguaWar .
}
```

This query assumes:
- The commander's date of birth is used to identify their work context.
- `dbo:commanded` links a commander to a war they were involved in.
- `dbo:militaryForce` links the Battle of Pisagua to its military force.

Adjustments may be needed based on specific DBpedia schema details or additional context from your question.",5,5,6,3,2,3,3,71,0,0,8,0,0.0,0
617,59,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus a dbo:Person ;
             dbo:father dbr:Antiochus_III_the_Great ;
             rdfs:label ""Antiochus""@en .

  # Step 2: Find his successor who is royalty
  ?successor dbo:predecessor ?antiochus ;
            a dbo:Monarch ;
            dbo:country dbr:Syria .

  # Step 3: Locate the child of this successor who is also royalty
  ?child dbo:parent ?successor ;
         a dbo:Monarch .

  # Step 4: Determine the spouse of this child
  ?spouse dbo:spouse ?child .
}
```",6,9,7,3,2,3,3,71,0,0,4,0,0.0,0
659,54,test,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander ?event
WHERE {
  ?event a dbo:MilitaryConflict ;
         rdfs:label ""Napoleonic Wars""@en .
  
  ?commander a dbo:Person ;
             foaf:name ""Arthur Wellesley, 1st Duke of Wellington""@en ;
             dbo:militaryCommanderOf ?militaryForce .

  ?militaryForce a dbo:MilitaryUnit ;
                 rdfs:label ""Polish Horse""@en ;
                 dbo:participatedIn ?event .
}
```",6,10,7,3,3,3,3,71,0,0,13,0,0.0,0
767,53,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to the alter ego of Black Hood.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?result <http://dbpedia.org/ontology/state> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?entity WHERE {
  # Writer of ""Where It's At"" (Dustin Lynch album)
  ?album dbo:writer ?writer .
  ?album rdfs:label ""Where It's At""@en .

  # Alma mater of Carl L. Nippert
  ?nippert foaf:almaMater ?almaMater .
  ?nippert rdfs:label ""Carl L. Nippert""@en .

  # Alter ego of Black Hood
  ?blackHood dbo:alterEgo ?alterEgo .
  ?blackHood rdfs:label ""Black Hood""@en .

  # Common entity in administration and is a settlement
  ?entity dbo:administration ?writer ;
          dbo:administration ?almaMater ;
          dbo:administration ?alterEgo ;
          rdf:type dbo:Settlement .
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
435,24,test,Give me the work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v2 . ?result <http://dbpedia.org/ontology/timeZone> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author ?work ?timeZoneRegion
WHERE {
  # Find an author associated with Iceland
  ?author dbo:nationality dbr:Iceland .
  
  # Get works by this author
  ?work dbo:author ?author .

  # Find the time zone region for Bombali Shebora Chiefdom
  dbr:Bombali_Shebora_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chowie_Chow",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
659,64,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in Battle of Leipzig.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?office ?event
WHERE {
  # Find commanders in Ireland
  ?commander a dbo:MilitaryPerson ;
             dbo:officeHolderOf dbr:Kingdom_of_Ireland ;
             dbo:commanderOf ?force .

  # Ensure the force is involved in events related to Schimmelpenninck and Leipzig
  ?event dbo:relatedTo dbr:Rutger_Jan_Schimmelpenninck ;
         dbo:participatedIn ?leipzig .
  
  ?leipzig a dbo:MilitaryConflict ;
           rdfs:label ""Battle of Leipzig""@en .

  # Link the force to these events
  ?force dbo:involvedIn ?event .
}
```",7,11,8,3,3,3,3,71,0,0,6,0,0.0,0
959,64,test,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?almaMater ?birthYear
WHERE {
  ?person a dbo:Person ;
          dbo:nationality dbr:Japan ;
          dbo:birthDate ?birthDate ;
          dbo:almaMater ?almaMater ;
          dbp:managerOfTeam dbr:1998_Kashima_Antlers_season .
  
  ?almaMater a dbo:EducationalOrganization, dbo:University ;
             dbo:country dbr:Japan .

  FILTER (YEAR(?birthDate) = 1958)
  OPTIONAL { ?person rdfs:label ?name . FILTER(LANG(?name) = ""en"") }
}
ORDER BY ?name",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
184,66,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent
WHERE {
  # Step 1: Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            foaf:name ""Margaret of Austria"" ;
            dbo:birthYear ""1925""^^xsd:gYear .
  
  ?margaret dbo:parent ?parentMargaret .
  ?childOfParent dbr:parent ?parentMargaret .
  ?commonParent dbo:parent ?childOfParent .

  # Step 2: Native of Budapest and Child of Archduke Joseph Karl of Austria
  ?josephKarl a dbo:Person ;
              foaf:name ""Joseph Karl of Austria"" .
  
  ?josephChild dbo:child ?josephKarl .
  ?grandchildOfJoseph dbr:parent ?josephChild .
  ?nativeBudapest dbo:nativePlace dbr:Budapest ;
                  dbr:parent ?grandchildOfJoseph .
  ?commonParent dbo:parent ?nativeBudapest .

}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
92,40,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of Jim Sheppard and band of Joseph Michael.",SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?josephsBand
WHERE {
  # Find band members of ""Nevermore"" (2006 film) who are artists
  ?film dbr:Nevermore_(2006_film) .
  ?film dbo:musicalArtist ?bandMember .
  ?bandMember a dbo:MusicalArtist .

  OPTIONAL {
    # Find the associated musical artist of Jim Sheppard
    ?sheppard dbr:Jim_Sheppard_(musician) .
    ?sheppard dbo:associatedBand ?associatedArtist .
    ?associatedArtist a dbo:MusicalArtist .
  }

  OPTIONAL {
    # Find the band of Joseph Michael
    ?joseph dbr:Joseph_Michael_(musician) .
    ?joseph dbo:band ?josephsBand .
    ?josephsBand a dbo:MusicalBand .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
959,66,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v6 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName
WHERE {
  # Eiji Ōtsuka's alma mater
  ?almaMater a dbo:EducationalOrganization ;
             dbo:country dbr:Japan ;
             dbo:type dbr:University .

  # Eiji Ōtsuka's association with Kashima Antlers
  ?eiji dbp:sportManagerOf dbr:Kashima_Antlers_1998_season .
  
  # Manager of the team managed by Eiji Ōtsuka
  ?teamManager dbo:manager ?eiji ;
               rdfs:label ?managerName .

  # Yōichi Masuzoe's country of residence
  ?yoshi dbp:nativeCountry dbr:Japan .
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
427,27,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party
WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Romano Prodi""@en ;
          dbo:birthName ""Romano Prodi"" .
  
  ?person dbo:politicalParty ?party .

  OPTIONAL { ?person dbo:officeHolder true . }
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT**: We are interested in the `?party`.
- **WHERE**:
  - We identify a person who is a politician, has the name ""Romano Prodi"", and whose birth name is also ""Romano Prodi"".
  - We retrieve the political party of this person.
  - An optional clause checks if the person is an office holder, ensuring they meet the criteria specified in your question.

This query assumes that DBpedia's data model includes these properties and relationships. Adjustments might be necessary based on actual schema details.",3,5,4,3,1,3,3,71,0,0,7,0,0.0,0
492,57,test,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?capital ?frenchAlgeria
WHERE {
  # Find the capital of Algeria
  dbr:Algiers dbo:country dbr:Algeria .
  
  # Find commanders in the Battle of Verdun
  ?battle dbr:Battle_of_Verdun ;
         dbo:commander ?commander .

  # Ensure the commander is a decedent at the capital of Algeria
  ?commander dbo:placeOfBirth ?capital .
  FILTER (?capital = dbr:Algiers)

  # Ensure the commander is also a decedent at French Algeria
  ?commander dbo:placeOfBirth ?frenchAlgeria .
  FILTER EXISTS { ?frenchAlgeria dbo:country dbr:French_Algeria }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
617,17,test,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland and child of Doubravka of Bohemia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  ?richeza a dbo:Person ;
           dbp:mother ?doubravka .
  
  ?doubravka rdfs:label ""Doubravka of Bohemia""@en .

  ?richeza dbp:father ?father .
  ?father a dbo:Monarch ;  # Assuming Monarch indicates royalty

  ?father dbp:father ?grandfather .
  ?grandfather a dbo:Monarch .  # Ensuring grandfather is also royalty
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
54,63,test,"Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChildNarapatiI
WHERE {
  # Narapati I of Ava
  ?narapati1 dbr:Narapati_I_of_Ava .
  ?childNarapati1 dbo:child ?narapati1 .
  ?parentOfChildNarapati1 dbo:child ?childNarapati1 .

  # Thinkhaya of Pagan
  ?thinkhaya dbr:Thinkhaya_of_Pagan .
  ?childThinkhaya dbo:child ?thinkhaya .
  
  # Predecessor of the child of Thinkhaya
  ?predecessor dbo:successor ?childThinkhaya .

  # Thihapate of Mohnyin
  ?thihapate dbr:Thihapate_of_Mohnyin .
  ?childThihapate dbo:child ?thihapate .
  
  FILTER (?childThihapate = ?parentOfChildNarapati1)
  FILTER (?childThihapate a dbo:OfficeHolder && ?childThihapate a dbo:Royalty)

}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,53,test,"Give me the band of Amba Shepherd and band of the person born as Tracey Elizabeth McSween and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ambaBand ?traceyBand ?athletePerson WHERE {
  # Amba Shepherd's band
  dbr:Amba_Shepherd dbo:musicalArtist ?ambaBand .

  # Tracey Elizabeth McSween's band and birth date
  dbr:Tracey_Elizabeth_McSween dbo:musicalArtist ?traceyBand .
  dbr:Tracey_Elizabeth_McSween dbo:birthDate ?traceyBirthDate .

  # Athlete who is a soccer player, born at Zolotonosha with the same birth date as Tracey
  ?athletePerson a dbo:Athlete ;
                dbo:sport dbr:Soccer ;
                dbo:birthPlace dbr:Zolotonosha ;
                dbo:birthDate ?traceyBirthDate .

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
16,41,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional
WHERE {
  # Satomi Ishihara's profession
  ?satomi a dbo:Singer .
  
  # Ted Martin McGinley and Georgeanne Marie Rice
  ?ted a dbo:Person ;
      foaf:name ""Ted Martin McGinley"" .
  ?georgeanne a dbo:Person ;
              foaf:name ""Georgeanne Marie Rice"" .

  # Their spouses
  ?spouse1 dbo:spouseOf ?ted .
  ?spouse2 dbo:spouseOf ?georgeanne .

  # Check if the spouse is the same person and has the profession of singer
  FILTER (?spouse1 = ?spouse2)
  ?spouse1 a dbo:Singer ;
           foaf:name ?professional .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
404,40,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914) and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Person ;
            foaf:name ""Victoria Louise, Princess Royal""@en ;
            dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .

  # Find Prince Ernest Augustus of Hanover
  ?prince a dbo:Person ;
          foaf:name ""Prince Ernest Augustus of Hanover (1914)""@en ;
          dbo:parent ?princess .

  # Determine the spouse of Princess Victoria Louise
  ?princess dbo:spouse ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
92,55,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?band1 ?member2 ?band3
WHERE {
  # Jim Sheppard's band
  dbr:Jim_Sheppard a dbo:Artist ;
                   dbo:associatedBand ?band1 .
  
  # Nevermore and its members
  dbr:Nevermore a dbo:MusicalBand ;
                dbo:bandMember ?member2 .

  # Joseph Michael Furney's band
  dbr:Joseph_Michael_Furney a dbo:Artist ;
                            dbo:associatedBand ?band3 .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
488,52,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace ?administration
WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .

  # Yūki Hideyasu's father's death place (assuming his father is a politician)
  OPTIONAL {
    ?father rdf:type dbo:Politician .
    ?father dbo:child dbr:Yūki_Hideyasu .
    ?father dbo:deathPlace ?deathPlace .
  }

  # Administration of Emperor Go-Yōzei
  dbr:Emperor_Go-Yōzei dbo:administration ?administration .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
404,63,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseName
WHERE {
  # Princess Victoria Louise of Prussia's birth name
  dbr:Princess_Victoria_Louise_of_Prussia dbo:birthName ?birthName .

  # Ernest Augustus, Duke of Brunswick's father and child
  dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:father ?father .
  dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:child ?royalChild .

  # Person with the same birth name as Princess Victoria Louise of Prussia
  ?person dbo:birthName ?birthName .
  
  # This person is a child of Ernest Augustus's father and has royalty status
  ?person dbo:parent ?father .
  ?person rdf:type dbo:Monarch .

  # This person is also a parent to a royal child of Ernest Augustus, Duke of Brunswick
  ?person dbo:child ?royalChild .

  # Get the spouse of this person
  ?person dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .
  
  FILTER(LANG(?spouseName) = ""en"")
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
404,34,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Identify Princess Victoria Louise of Prussia by her birth name and parent relationship
  ?princess a dbo:Person ;
            foaf:name ""Princess Victoria Louise of Prussia""@en ;
            dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .

  # Retrieve the spouse of Princess Victoria Louise
  ?princess dbo:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
959,51,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry
WHERE {
  # Find Yōichi Masuzoe's residence
  dbr:Yōichi_Masuzoe dbo:residence ?residence .

  # Ensure the residence is a country
  ?residence rdf:type dbo:Country .
  
  # Get the native place of the residence (country)
  ?residence dbo:nativePlace ?nativeCountry .

  # Find the manager of the 1998 Kashima Antlers season
  dbr:Kashima_Antlers_1998_season dbo:manager ?teamManager .

  # Ensure the team manager is a sports manager
  ?teamManager rdf:type dbo:SportsManager .

  # Find who manages this sports manager
  ?teamManager dbo:managedBy ?upperManager .
}
```",5,7,6,3,2,3,3,71,0,0,6,0,0.0,0
617,65,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild ?grandchildRoyalty ?spouseOfSuccessorChild
WHERE {
  # Antiochus (son of Antiochus III the Great)
  ?antiochus dbo:father dbr:Antiochus_III_the_Great .
  
  # Child of Antiochus
  ?child dbo:parent ?antiochus .
  
  # Parent of that child
  ?parentOfChild dbo:child ?child .

  # Seleucus II Callinicus grandchild who is royalty
  ?seleucus dbr:Seleucus_II_Callinicus .
  ?grandchild dbo:parent ?intermediateParent .
  ?intermediateParent dbo:parent ?seleucus .
  ?grandchild rdf:type dbo:Monarch .

  # Spouse of the child of the successor of Antiochus
  ?successor dbo:succeededBy ?antiochus .
  ?successorChild dbo:parent ?successor .
  ?successorChild rdf:type dbo:Monarch .
  ?spouseOfSuccessorChild dbo:spouse ?successorChild .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
767,51,test,"Give me the alma mater of the administration of George K. Nash and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMater ?fictionalCharacter
WHERE {
  # George K. Nash's alma mater
  ?nash a dbo:Person ;
        foaf:name ""George K. Nash"" .
  ?nash dbo:almaMater ?almaMater .

  # Matthew Burland's fictional alter ego
  OPTIONAL {
    ?burland a dbo:Person ;
             foaf:name ""Matthew Burland"" .
    ?fictionalWork dbo:author ?burland ;
                  foaf:primaryTopic ?fictionalCharacter .
  }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
617,16,test,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild
WHERE {
  # Boleslaus I, Duke of Bohemia
  ?boleslaus a dbo:Duke ;
             foaf:name ""Boleslaus I"" .

  # Child of Boleslaus I
  ?child dbo:parent ?boleslaus .
  
  # Grandchild of Boleslaus I (Child of the child)
  ?grandchild dbo:parent ?child .

  # Check if grandchild is royalty
  ?grandchild a ?royaltyClass .
  FILTER (
    ?royaltyClass IN (dbo:Monarch, dbo:Queen, dbo:King, dbo:Duke, dbo:Princess, dbo:Prince)
  )

  # Richeza of Poland, Queen of Hungary
  ?richeza a dbo:Queen ;
           foaf:name ""Richeza of Poland"" .

  # Father of Richeza
  ?father dbo:parent ?richeza .
  
  # Grandfather of Richeza (Parent's parent)
  ?grandfather dbo:parent ?father .

  # Check if grandfather is royalty
  ?grandfather a ?royaltyClass2 .
  FILTER (
    ?royaltyClass2 IN (dbo:Monarch, dbo:Queen, dbo:King, dbo:Duke, dbo:Princess, dbo:Prince)
  )

  # Ensure the grandchild of Boleslaus I and the grandfather of Richeza are the same
  FILTER (?grandchild = ?grandfather)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
16,35,test,Give me the spouse of the person born as Ted Martin McGinley and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse1 ?spouse2 WHERE {
  # Find spouse of Ted Martin McGinley
  ?person1 a dbo:Person ;
           foaf:name ""Ted Martin McGinley""@en .
  OPTIONAL { 
    ?person1 dbo:spouse ?spouse1 .
  }

  # Find spouse of Gigi Rice
  ?person2 a dbo:Person ;
           foaf:name ""Gigi Rice""@en .
  OPTIONAL {
    ?person2 dbo:spouse ?spouse2 .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
959,65,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?university ?country
WHERE {
  # Takashi Sekizuka's team manager
  ?teamManager a dbo:SportsTeam ;
               dbo:coach ?takashiSekizuka .
  
  # Eiji Ōtsuka's alma mater
  ?eijiOotsuka dbo:almaMater ?university .
  ?university a dbo:University ;
              dbp:country ""Japan""^^xsd:string ;
              rdf:type dbo:Organisation, dbo:EducationalInstitution .

  # Leader of the 2010 Japanese House of Councillors election
  ?election dbr:Japanese_House_of_Councillors_election,_2010 ;
           dbo:leader ?politician .
  
  # Politician's country of birth
  ?politician dbp:nativePlace ?country .

  # Linking Takashi Sekizuka and Eiji Ōtsuka to the same university
  ?takashiSekizuka dbo:almaMater ?university .
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
378,50,test,"Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderName ?claimToFameGibraltar ?claimToFamePeninsularWar
WHERE {
  # Find the commander of the Great Siege of Gibraltar
  ?gibraltarEvent dbo:eventParticipant ?commander .
  ?gibraltarEvent rdfs:label ""Great Siege of Gibraltar""@en .

  # Get the name of the commander
  ?commander foaf:name ?commanderName .

  # Find a military conflict related to the Peninsular War involving this commander
  ?peninsularWar dbo:eventParticipant ?commander .
  ?peninsularWar rdfs:label ?warLabel .
  FILTER(CONTAINS(LCASE(?warLabel), ""peninsular war""))

  # Get claims to fame for the Great Siege of Gibraltar
  OPTIONAL {
    ?gibraltarEvent dbo:abstract ?claimToFameGibraltar .
  }

  # Get claims to fame related to the Peninsular War
  OPTIONAL {
    ?peninsularWar dbo:abstract ?claimToFamePeninsularWar .
  }
}
ORDER BY ?commanderName",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
659,57,test,"Give me the commander in German campaign of 1813 and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander1813 ?commanderWar
WHERE {
  # Find the commander of Polish Horse during the German campaign of 1813
  ?polishHorse a dbo:MilitaryUnit ;
               dbo:commandedBy ?commander1813 .
  
  ?campaign dbr:German_Campaign_of_1813 ;
            dbo:participatedIn ?polishHorse .

  # Find the commander in the broader war context (Napoleonic Wars)
  ?war dbr:Napoleonic_Wars ;
       dbo:participatedIn ?commanderWar .
  
  # Connect to Rutger Jan Schimmelpenninck
  ?schimmelpenninck a dbo:MilitaryForce ;
                    dbo:leader dbr:Rutger_Jan_Schimmelpenninck .

  ?forceEvent a dbo:SocietalEvent, dbo:MilitaryConflict ;
              dbo:partOf ?war .
  
  # Ensure the commanders are linked to the same military unit
  FILTER (?commander1813 != ?commanderWar)
}
```",6,13,7,3,3,3,3,71,0,0,7,0,0.0,0
767,23,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  # Find Dustin Lynch and his album ""Where It's At""
  dbr:Dustin_Lynch a dbo:Singer .
  dbr:Where_It%27s_At_(Dustin_Lynch_album) dbo:artist dbr:Dustin_Lynch .

  # Connect Dustin Lynch to an administration
  ?administration dbo:administrator dbr:Dustin_Lynch .

  # Ensure the administration is a settlement
  ?administration a dbo:Settlement .
}
```",3,4,4,3,1,3,3,71,0,0,66,0,0.0,0
492,25,test,"Give me the person decedent at the capital, that is a settlement, of Algeria and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName
WHERE {
  # Capital of Algeria is a settlement
  dbr:Algiers dbo:capitalOf dbr:Algeria .
  dbr:Algiers rdf:type dbo:Settlement .

  # Person decedent at the capital and commander in Franco-Hova Wars
  ?decedent dbo:placeOfBirth dbr:Algiers ;
            dbo:causeOfDeath ?deathEvent ;
            foaf:name ?personName .
  
  ?commander foaf:name ?personName ;
             dbo:militaryConflict ?francoHovaWar .

  # Ensure the military conflict is Franco-Hova Wars
  ?francoHovaWar rdfs:label ""Franco-Hova Wars""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
294,23,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?restingPlace WHERE {
  # Find Marion James' birthplace which is a settlement
  dbr:Marion_James dbo:birthPlace ?settlement .
  FILTER (isLiteral(?settlement) && regex(str(?settlement), ""Settlement""))

  # Identify the awardee of Distinguished Service Medal who is also a politician
  ?awardee dbo:award ?medal .
  ?medal rdfs:label ""Distinguished Service Medal (U.S. Army)""@en .
  ?awardee rdf:type dbo:Politician .

  # Find the resting place of this awardee
  ?awardee dbo:finalBurialPlace ?restingPlace .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
77,19,test,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw and war of the awardee of Golden Weapon for Bravery.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?war 
WHERE {
  # Find the mayor of Warsaw and the organization they administer
  ?mayor a dbo:Mayor ;
         dbo:officeLocation dbr:Warsaw .
  
  ?organization dbo:head ?mayor ;
                a dbo:Organization .

  # Find the force associated with this organization
  ?force dbo:partOf ?organization .

  # Find awardees of the Golden Weapon for Bravery and their wars
  ?person dbo:award dbr:Golden_Weapon_for_Bravery .
  
  ?war dbo:participant ?person .
}
```",5,6,6,3,2,3,2,20,0,0,14,0,0.0,0
184,22,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandParent
WHERE {
  # For Archduke Joseph Francis of Austria
  ?child1 dbo:parent ?archduke .
  ?archduke rdfs:label ""Archduke Joseph Francis of Austria""@en .

  # For Géza von Habsburg
  ?child2 dbo:parent ?geza .
  ?geza rdfs:label ""Géza von Habsburg""@en .

  # Find the parents of these children (grandparents)
  ?child1 dbo:parent ?grandParent .
  OPTIONAL { ?child2 dbo:parent ?grandParent . }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
303,23,test,"Give me the party of the commander, that is a politician, in United States invasion of Panama and party of the person born, that is a politician, as Arnulfo Arias Madrid.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commanderParty ?arnulfoAriasParty
WHERE {
  # Commander in the United States invasion of Panama
  ?invasion dbo:commander ?commander .
  FILTER(CONTAINS(LCASE(?invasion), ""united states invasion of panama"")) .

  # Check if commander is a politician and get their party
  OPTIONAL {
    ?commander dbo:politicalParty ?commanderParty .
    FILTER EXISTS { ?commander rdf:type dbo:Politician } .
  }

  # Arnulfo Arias Madrid's birth details and political affiliation
  dbr:Ari_Arias_Madrid dbo:birthPlace ?birthPlace .
  OPTIONAL {
    ?arnulfoArias dbp:politicalParty ?arnulfoAriasParty .
    FILTER EXISTS { ?arnulfoArias rdf:type dbo:Politician } .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
9,58,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater ?nickname
WHERE {
  # Find the awardee of the Royal Medal
  ?awardee dbo:award dbr:Royal_Medal_of_the_Kingdom_of_Brunei .
  
  # Find the alma mater of the awardee
  ?awardee dbp:almaMater ?almaMater .

  # Find John Alderdice's alma mater
  dbr:John_Alderdice_Barons_Alderdice dbo:almaMater ?almaMater .

  # Ensure the institution is in Northern Ireland and has a nickname
  ?almaMater dbo:location dbr:Northern_Ireland ;
            dbp:nickname ?nickname .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,48,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?heatherProfession ?jonathonAward
WHERE {
  # Heather Roy's profession that is a military unit
  ?heather dbo:profession ?heatherProfession .
  FILTER (strstarts(str(?heatherProfession), ""Military Unit""))

  # Jonathon Band's award
  ?jonathon dbo:award ?jonathonAward .

  # Bind the individuals to their respective names
  VALUES ?heather { <http://dbpedia.org/resource/Heather_Roy> }
  VALUES ?jonathon { <http://dbpedia.org/resource/Jonathan_Band> }
}
```",5,6,6,3,2,3,3,71,0,0,9,0,0.0,0
54,71,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v8 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Find Thihapate of Mohnyin
  ?thihapate dbo:name ""Thihapate of Mohnyin""@en .
  
  # Find the child who is an office holder and royalty
  ?child dbo:parent ?thihapate ;
         a dbo:OfficeHolder, dbo:Royalty .

  # This child must be the predecessor (parent) of another individual
  ?predecessor dbo:child ?child .

  # The other individual is:
  # Child of the parent of Thado Minsaw of Prome
  ?thadoMinsaw dbo:name ""Thado Minsaw of Prome""@en .
  ?parentOfThadoMinsaw dbo:child ?thadoMinsaw ;
                       a dbo:Person .
  ?otherIndividual dbo:parent ?parentOfThadoMinsaw .

  # Child of the father of the child of Thinkhaya of Pagan
  ?thinkhaya dbo:name ""Thinkhaya of Pagan""@en .
  ?childOfThinkhaya dbo:parent ?thinkhaya ;
                    a dbo:Person .
  ?fatherOfChildOfThinkhaya dbo:child ?childOfThinkhaya ;
                            a dbo:Person .
  ?otherIndividual2 dbo:father ?fatherOfChildOfThinkhaya .

  # Ensure the other individual is the same
  FILTER (?otherIndividual = ?otherIndividual2)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
959,53,test,"Give me the manager of the team of Takashi Sekizuka and native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Takashi Sekizuka's details
  dbr:Takashi_Sekizuka a dbo:Person ;
    dbo:birthYear ""1958""^^xsd:gYear ;
    dbo:teamLeader ?team .

  # Manager of the team
  ?team dbo:leader ?manager .

  # Alma mater constraints
  ?manager dbo:almaMater ?university .
  ?university a dbo:University, dbo:Organisation, dbo:EducationalOrganization ;
              dbp:nativeLanguage dbr:Japanese .

}
```",6,10,7,3,3,3,3,71,0,0,3,0,0.0,0
778,18,test,"Give me the author of the work, that is a software, of Bill Joy and entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?softwareWorkAuthor ?awardEntity
WHERE {
  # Find Bill Joy's software work
  ?softwareWork dbo:author dbr:Bill_Joy .
  
  # Get the author of that software work
  ?softwareWork dbo:creator ?softwareWorkAuthor .

  # Find Wolf Prize in Medicine awardees who are American
  ?awardEntity dbo:recipient ?awardee .
  ?awardee dbp:nationality dbr:United_States .
  
  # Ensure the award is related to medicine
  ?awardEntity rdf:type dbo:Award ;
               rdfs:label ""Wolf Prize in Medicine""@en .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
161,51,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander
WHERE {
  # Find the military force associated with Francisco Largo Caballero
  ?militaryForce dbo:associatedWith dbr:Fran%C3%A7ois_Largo_Caballero .
  
  # Ensure it is both a societal event and a military conflict
  ?militaryForce rdf:type dbo:SocietalEvent ;
                 rdf:type dbo:MilitaryConflict .

  # Find the commander of this force who is also associated with ""El Director""
  ?commander dbo:commanderOf ?militaryForce .
  ?commander dbo:associatedWith dbr:El_Director .
}
```",5,8,6,3,2,3,3,71,0,0,32,0,0.0,0
92,65,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v6 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find Joseph Michael Furney
  ?person a dbo:Person ;
          foaf:name ""Joseph Michael Furney""@en .
  
  # Check his role in the movie
  ?movie dbo:starring ?person ;
         rdfs:label ""Return to Nuke 'Em High Volume 1""@en .

  # Find his association with Nevermore
  ?band a dbo:Band ;
        dbo:member ?person ;
        foaf:name ""Nevermore""@en .
  
  # Get the associated musical artist
  ?band dbo:associatedMusicalArtist ?artist .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,59,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?personName ?bandName
WHERE {
  # Find the birth date of the decedent
  ?decedent a dbo:Person ;
            dbp:birthday ?birthDate .

  # Find another person born on that same date, who is an athlete and soccer player from Zolotonosha
  ?person a dbo:Athlete, dbo:SoccerPlayer ;
          dbp:birthday ?birthDate ;
          dbp:birthPlace dbr:Zolotonosha ;
          foaf:name ?personName .

  # Find the band associated with Amba Shepherd's song
  ?song a dbo:Song ;
        dbo:lyricsBy dbr:Amba_Shepherd .
  
  ?band dbo:performerOf ?song ;
        foaf:name ?bandName .

  # Ensure the person is connected to the band
  ?person dbo:memberOf ?band .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
838,12,val,"Give me the band member of the band, that is a group, of YU Grupa and band of Raša Đelmaš.",SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member
WHERE {
  # Members of YU Grupa
  { 
    ?band dbr:YU_Grupa .
    ?band dbo:bandMember ?member .
  }
  
  UNION
  
  # Band associated with Raša Đelmaš and its members
  { 
    ?rašaBand dbo:leadArtist dbr:Raša_Đelmaš .
    ?rašaBand dbo:bandMember ?member .
  }
}
```

### Explanation:

- **PREFIX**: Define common prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT DISTINCT ?member**: Retrieve distinct band members.
- **WHERE Clause**:
  - First pattern finds members of ""YU Grupa"".
  - `UNION` combines results with the second pattern, which finds members of any band where Raša Đelmaš is a lead artist.

This query efficiently captures the essence of your question by focusing on retrieving distinct band members from both specified bands.",3,4,4,2,2,3,2,20,0,0,4,0,0.0,0
10,14,val,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert and associated musical artist of Matt Colton.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  # Find Luke Francis Vibert
  dbr:Luke_Francis_Vibert a dbo:Artist ;
                           foaf:name ""Luke Francis Vibert"" .

  # Find band members of Luke Francis Vibert
  ?bandMember dbo:memberOfBand dbr:Luke_Francis_Vibert .

  # Find Matt Colton and his associated musical artists
  dbr:Matt_Colton a dbo:MusicalArtist ;
                  dbo:associatedWith ?artist .

  # Ensure the band member is also an artist associated with Matt Colton
  ?bandMember = ?artist .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
963,11,val,"Give me the administration of Serbian Progressive Party and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration ?countryName
WHERE {
  # Find the Serbian Progressive Party and its administration
  dbr:Srpska_Progresivna_Stranka dbo:partyLeader ?administration .

  # Find countries in the Central European Time zone
  ?country dbp:timeZone ""Central European Time"" ;
           a dbo:Country ;
           rdfs:label ?countryName .
}
```",3,4,4,2,2,3,2,20,0,0,84,0,0.0,0
528,22,val,Give me the force of the person born as Narciso Campero Leyes and war of Irene Morales.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?rank ?conflict
WHERE {
  # Query for Narciso Campero Leyes' military rank (force)
  { 
    ?person dbp:name ""Narciso Campero Leyes""@en .
    ?person dbo:rank ?rank .
  }
  
  # Query for Irene Morales' associated war
  {
    ?individual dbp:name ""Irene Morales""@en .
    ?individual dbo:conflict ?conflict .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
294,18,val,"Give me the resting place of Edwin A. Keeble and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace (SAMPLE(?settlement) AS ?birthSettlement)
WHERE {
  # Resting place of Edwin A. Keeble
  ?edwin a dbr:Edwin_A._Keeble ;
         dbo:deathPlace ?restingPlace .

  # Birthplace of Marion James and ensuring it's a settlement
  ?marion a dbr:Marion_James ;
          dbo:birthPlace ?birthPlace .
  
  FILTER EXISTS { 
    ?birthPlace a dbo:Settlement .
  }
  
  BIND(?birthPlace AS ?settlement)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
48,11,val,Give me the band of the writer of Emotion (Carly Rae Jepsen album) and band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?carlyBandLabel ?murdaMookBandLabel
WHERE {
  # Find Carly Rae Jepsen's band
  OPTIONAL {
    dbr:Carly_Rae_Jepsen dbo:associatedBand ?carlyBand .
    ?carlyBand rdfs:label ?carlyBandLabel .
    FILTER (LANG(?carlyBandLabel) = 'en')
  }

  # Find Murda Mook's band
  OPTIONAL {
    dbr:Murda_Mook dbo:associatedBand ?murdaMookBand .
    ?murdaMookBand rdfs:label ?murdaMookBandLabel .
    FILTER (LANG(?murdaMookBandLabel) = 'en')
  }
}
```",3,3,4,2,2,3,2,20,0,10,1,0.0,0.0,0
404,32,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Princess ;
            dbp:name ""Victoria Louise, Princess Royal"" .

  # Find her spouse
  ?princess dbo:spouse ?spouse .

  # Ensure she has children who are royalty
  ?princess dbo:child ?child .
  ?child a dbo:RoyalFamilyMember .

  # One of these children is a parent to Ernest Augustus, Duke of Brunswick
  ?child dbo:parent <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
54,35,val,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and child of the father of Soe Min Wimala Dewi.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  # Thihapate of Mohnyin's children
  ?child dbo:parent dbr:Thihapate_of_Mohnyin .
  
  # The child must be an office holder and royalty
  ?child a dbo:OfficeHolder ;
         a dbo:Royalty .

  # Find the father of this child
  ?father dbo:child ?child .

  # Check if this father has Soe Min Wimala Dewi as a child
  ?dewiChild dbo:parent ?father .
  ?dewiChild rdfs:label ""Soe Min Wimala Dewi""@en .

  # Get the predecessor of this specific child
  ?child dbo:predecessor ?predecessor .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
626,12,val,Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the person who is an awardee related to Aleksey Petrovich Yermolov
  ?award dbo:recipient ?person .
  ?award dbo:relatedTo dbr:Aleksey_Petrovich_Yermolov .

  # Ensure this person was a commander in the Battle of Leipzig
  ?battle dbo:commander ?person .
  ?battle rdfs:label ""Battle of Leipzig""@en .
}
```",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
392,14,val,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region ?sportsEvent ?italianEntity
WHERE {
  # Find the time zone of Aguilar de Segarra
  dbr:Aguilar_de_Segarra dbo:timeZone ?timeZone .
  
  # Determine the region associated with this time zone
  ?timeZone dbp:location ?region .

  # Identify sports events related to this region
  ?sportsEvent dbo:location ?region .

  # Find an entity in Italy that is linked to these criteria
  ?italianEntity a dbo:Event ;
                 dbo:place dbr:Italy .
}
```",3,4,4,2,2,2,3,28,0,0,513,0,0.0,0
392,19,val,"Give me the entity in the region, that is a country, of Central European Time and region of Central European Time and province of Schio.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone ?timezone .
  ?timezone rdfs:label ""Central European Time""@en .
  
  OPTIONAL { 
    ?location dbp:region ?region .
    ?region rdfs:label ""Schio""@it .
    ?country geo:hasLocation ?location .
  }
}
```

- **Explanation**:
  - We select entities that are of type `dbo:Country`.
  - The country must have a timezone labeled as ""Central European Time"".
  - An optional clause checks if the country has a location in the region/province of Schio.",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
9,39,val,"Give me the alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?nickname
WHERE {
  # Allen Hill's alma mater
  dbr:Allen_Hill_(scientist) dbo:almaMater ?almaMater .

  # Alma mater is an organization and educational institution in Northern Ireland
  ?almaMater a dbo:EducationalInstitution ;
             dbo:location dbr:Northern_Ireland .

  # Retrieve the nickname of this entity
  OPTIONAL { ?almaMater rdfs:label ?nickname . }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,30,val,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at French Algeria and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name
WHERE {
  ?person a dbo:Person .
  
  # Person decedent at Algiers (capital of Algeria)
  ?deathEvent dbo:place dbr:Algiers ;
              dbo:agent ?person .
  
  # Person decedent at French Algeria
  ?algeriaDeathEvent dbo:place dbr:French_Algeria ;
                     dbo:agent ?person .

  # Commander in Franco-Hova Wars
  ?commanderRole dbo:position ""Commander""@en ;
                 dbo:agent ?person .
  
  OPTIONAL {
    ?person rdfs:label ?name .
    FILTER (lang(?name) = 'en')
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
328,33,val,Give me the awardee of Order of Suvorov and commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:honoraryTitle dbr:Order_of_Suvorov .
  ?person rdfs:label ?personName .
  
  OPTIONAL {
    ?commanderPosition dbo:location dbr:Budapest ;
                       dbo:positionHolder ?person .
  }
  
  FILTER (lang(?personName) = 'en')
}
ORDER BY ?personName
LIMIT 10",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
64,7,val,"Give me the alma mater of the person decedent, that is a writer, at Sremska Kamenica and entity in Serbia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer ?almaMater WHERE {
  ?writer a dbo:Writer ;
          dbo:deathPlace dbr:Sremska_Kamenica ;
          dbo:almaMater ?almaMater .
}
```",3,4,4,2,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
427,28,val,Give me the party of Romano Prodi and reference to the name of Italian People's Party (1994) and party of Giulio Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiParty ?prodiPartyLabel 
       ?andreaParty ?andreaPartyLabel 
       ?ipp1994 ?ipp1994Label
WHERE {
  # Romano Prodi's party
  dbr:Romano_Prodi dbo:party ?prodiParty .
  ?prodiParty rdfs:label ?prodiPartyLabel .

  # Giulio Andreotti's party
  dbr:Giulio_Andreotti dbo:party ?andreaParty .
  ?andreaParty rdfs:label ?andreaPartyLabel .

  # Italian People's Party (1994)
  OPTIONAL {
    dbr:Italian_People%27s_Party_(1994) rdfs:label ?ipp1994Label .
    FILTER(CONTAINS(LCASE(?ipp1994Label), ""italian people's party""))
    BIND(dbr:Italian_People%27s_Party_(1994) AS ?ipp1994)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,27,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musicalArtist
WHERE {
  # Find the album ""What U See Is What U Get""
  dbr:What_U_See_Is_What_U_Get 
    a dbo:MusicalWork ;
    dbo:musicBy ?writer .

  # Ensure the writer is both a musical artist and an artist
  ?writer 
    a dbo:MusicalArtist, dbo:Artist .

  # Find associated musical artists of this writer
  ?writer dbo:associatedWith ?musicalArtist .
}
```",3,7,4,3,1,3,3,71,0,0,50,0,0.0,0
328,28,val,"Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName
WHERE {
  ?person dbo:commanderOf dbr:Eastern_Front_(World_War_II) .
  ?person dbo:leaderOf dbr:People's_Commissariat_of_Defence_of_the_Soviet_Union .
  ?person dbo:awardReceived dbr:Award_from_Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .

  ?person rdfs:label ?personName .
  FILTER (lang(?personName) = 'en')
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
488,35,val,Give me the administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?birthPlace
WHERE {
  # Toyotomi Hideyori's administration
  dbr:Toyotomi_Hideyori dbo:positionHeld ?administration .

  # Saigō Takamori's birthplace
  OPTIONAL {
    dbr:Saigō_Takamori dbo:birthPlace ?birthPlace .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
345,12,val,"Give me the figure known as Stolz von Liechtenstein and team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?team
WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1978-09-15""^^xsd:date ;
          foaf:name ?name .
  
  OPTIONAL { ?person dbo:managerOf ?team . }
  
  FILTER(CONTAINS(LCASE(?name), ""stolz von liechtenstein""))
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
488,40,val,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceSaitoHajime ?deathPlaceTokugawaIeyasu ?administrationGoYozei
WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlaceSaitoHajime .

  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlaceTokugawaIeyasu .

  # Emperor Go-Yōzei's administration (assuming reign period)
  dbr:Emperor_Go-Yōzei dbo:reign ?administrationGoYozei .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
360,15,val,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album ?writer WHERE {
  ?album a dbo:Album .
  ?album dbo:artist dbr:Manfred_Mann .
  ?album dbo:composer ?writer .
  ?writer rdfs:label ""Dave Flett""@en .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
314,12,val,Give me the commander in Spanish Civil War and awardee of 30 and person deceased at Madrid.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?deathPlace WHERE {
  ?person a dbo:MilitaryPerson ;
          dbo:commanderOf ?civilWarCommand ;
          dbo:award ?award ;
          dbo:placeOfBirth ?birthPlace ;
          dbo:deathPlace ?deathPlace ;
          dbp:deathDate ?deathDate .

  FILTER EXISTS { 
    ?civilWarCommand rdfs:label ""Spanish Civil War""@en .
  }

  FILTER EXISTS {
    ?award dbo:dateReceived ?dateReceived .
    FILTER (YEAR(?dateReceived) >= 1930 && YEAR(?dateReceived) < 1940)
  }

  FILTER EXISTS {
    ?deathPlace rdfs:label ""Madrid""@en .
  }

  FILTER (?deathDate != """"^^xsd:string)

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?name",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
232,22,val,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and child of Jon Pertwee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeName
WHERE {
  # Sylvie Bermann's residence
  ?sylvie dbo:residence ?settlement .
  
  # Settlement is a British settlement
  ?settlement rdf:type dbo:Settlement ;
              dbo:country dbr:United_Kingdom .

  # Jon Pertwee's child
  ?child dbo:parent dbr:Jon_Pertwee .
  ?child dbo:residence ?settlement .

  # Native of the settlement
  ?native dbo:nativePlace ?settlement ;
          foaf:name ?nativeName .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
838,13,val,"Give me the band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band
WHERE {
  # Žika Jelić is a member of some band
  ?bandMember dbo:memberOfBand ?band .
  
  # Žika Jelić's URI in DBpedia
  ?bandMember foaf:name ""Žika Jelić"" .

  # The band must be both a band and a group
  ?band rdf:type dbo:Band ;
        rdf:type dbo:Group .

  # The band member must be an artist and a musical artist
  ?bandMember rdf:type dbo:Artist ;
              rdf:type dbo:MusicalArtist .
}
```",3,7,4,3,1,3,2,20,0,0,21,0,0.0,0
16,23,val,Give me the spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person foaf:name ""Ted McGinley""@en .
  ?person dbo:birthName ?birthName .
  ?person dbo:spouse ?spouse .
}
```",3,3,4,3,1,3,3,71,1,0,0,1.0,1.0,1.0
427,25,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and party of Giulio Andreotti.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName ?partyName
WHERE {
  VALUES ?personName { ""Romano Antonio Prodi"" ""Giulio Andreotti"" }
  
  ?person a dbo:OfficeHolder ;
          dbo:birthName ?personName ;
          dbo:partyAffiliation ?party .
  
  ?party rdfs:label ?partyName .
  
  FILTER(LANG(?partyName) = 'en')
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
427,43,val,Give me the reference to Partito Popolare Italiano and party of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partitoPopolareItaliano ?partyOfRomanoProdi ?partyOfFather
WHERE {
  # Partito Popolare Italiano
  dbr:Partito_Popolare_Italiano dbo:wikiPageRedirects ?partitoPopolareItaliano .

  # Party of Romano Prodi
  dbr:Romano_Prodi dbo:politicalParty ?partyOfRomanoProdi .

  # Find an MIT alumnus and their father's political party
  {
    SELECT DISTINCT ?alumnus ?father ?partyOfFather
    WHERE {
      ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
               dbo:parent ?father .
      OPTIONAL { ?father dbo:politicalAffiliation ?partyOfFather }
    }
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
30,7,val,"Give me the professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder and native of the birthplace of Silvia Cohen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Find Silvia Cohen's birthplace
  dbr:Silvia_Cohen dbo:nativePlace ?birthplace .

  # Find a professional who is native of the same place and has one of the specified roles
  ?professional dbo:nativePlace ?birthplace .
  
  FILTER (
    EXISTS { ?professional dbo:occupation ?occupation . 
             VALUES ?occupation {
               dbr:Financier 
               dbr:Businessman 
               dbr:Vineyard_owner 
               dbr:Art_collector 
               dbr:Racehorse_owner_or_breeder
             }
           }
  )
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
314,16,val,"Give me the person deceased at Madrid and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?event WHERE {
  ?person a dbo:Person ;
          foaf:name ""Lisa Gavrić""@en ;
          dbo:deathPlace dbr:Madrid .
  
  ?person dbo:profession dbr:Commander .

  ?event dbo:agent ?person ;
         a dbo:Event, dbo:SocietalEvent .

}
```

This query does the following:
- Selects events (`?event`) related to Lisa Gavrić.
- Ensures that she is identified as a person who died in Madrid and had a profession of Commander.
- Filters for events that are both an ""Event"" and a ""Societal Event.""",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
994,25,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist ?bandMember
WHERE {
  # Find associated musical artist of Red Tide
  dbr:Red_Tide (dbo:associatedMusicalArtist) ?associatedArtist .

  OPTIONAL {
    # Check if any band member is a musical artist born as Donald Maynard Dokken
    ?bandMember dbo:birthName ""Donald Maynard Dokken"" ;
               dbo:memberOfBand dbr:Red_Tide ;
               dbo:occupation dbr:Musical_artist .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
801,24,val,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/producer> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist ?work WHERE {
  # Find Chris Taylor and his associated musical artist
  ?chris a dbo:MusicProducer ;
         foaf:name ""Chris Taylor (music producer)""@en .
  
  OPTIONAL { 
    ?chris dbo:musicalArtist ?artist .
  }
  
  # Find works produced by Chris Taylor that are songs of 50 Cent
  ?work dbo:producer ?chris ;
        a dbo:Songs ;
        dbo:lyricist dbr:50_Cent .

}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
696,11,val,Give me the landmark at elevation of 50 and birth place of the member of Dropkick Murphys.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?birthPlace
WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""50""^^xsd:integer)

  ?person dbo:memberOfBand dbr:Dropkick_Murphys ;
          dbo:birthPlace ?birthPlace .

  OPTIONAL { ?person foaf:name ?name . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
617,31,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?childOfSpouse ?successor ?royalChild
WHERE {
  # Step 1: Find Laodice IV's spouse
  dbr:Laodice_IV dbo:spouse ?spouse .

  # Step 2: Find a child of this spouse
  ?spouse dbo:child ?childOfSpouse .

  # Step 3: Identify the successor of Antiochus II Theos who is royalty
  dbr:Antiochus_II_Theos dbo:succeededBy ?successor .
  FILTER (dbo:Person IN (LITERAL(dbo:royalty))).

  # Step 4: Find a child of this successor who is royalty
  ?successor dbo:child ?royalChild .
  FILTER (dbo:Person IN (LITERAL(dbo:royalty))).
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
328,30,val,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of Order of Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?office WHERE {
  ?commander a dbo:MilitaryPerson .
  
  # Commander on Eastern Front during World War II
  ?commander dbo:militaryCommand ?easternFrontCommand .
  ?easternFrontCommand dbo:place dbr:Eastern_Front_(World_War_II) .

  # Leader of an office or agency under Joseph Stalin
  ?office a dbo:GovernmentAgency ;
          dbo:head ?commander ;
          dbo:leaderOf dbr:Joseph_Stalin .
  
  # Awardee of the Order of Suvorov
  ?commander dbo:awardReceived dbr:Order_of_Suvorov .

}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
427,23,val,Give me the reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Michele Pinto""@en .
  ?person dbo:partyAffiliation ?party .
  ?party rdfs:label ?partyName .
  FILTER(LANG(?partyName) = 'en')
}
```",3,3,4,3,1,3,3,71,0,0,8,0,0.0,0
328,39,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in Eastern Front (World War II).",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderOfOffice
WHERE {
  # Gustav Jonson as a commander in Eastern Front (World War II)
  ?gustavJonson dbo:officeHolderOf ?office .
  ?gustavJonson dbo:positionHeld ?commanderPosition .
  ?commanderPosition dbo:place ?easternFront .
  
  FILTER(?easternFront = dbr:Eastern_Front_(World_War_II))
  
  # The office is a government agency
  ?office rdf:type dbo:GovernmentAgency .

  # Find the leader of this office
  ?leaderOfOffice dbo:headOf ?office .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
232,34,val,Give me the child of the person born as the birth name of Jon Pertwee and native of London.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  # Find Jon Pertwee's birth name and native city
  dbr:Jon_Pertwee dbo:birthName ?birthName .
  dbr:Jon_Pertwee dbo:nativePlace dbr:London .

  # Find a person with the same birth name and native place as Jon Pertwee
  ?person dbo:birthName ?birthName ;
          dbo:nativePlace dbr:London .

  # Find the child of this person
  ?person dbo:child ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
281,31,val,Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?war 
WHERE {
  # Find awards associated with Jonathon Band
  ?person dbo:name ""Jonathon Band""@en .
  ?person dbo:award ?award .

  # Find wars related to the Colony of New Zealand
  ?colony dbr:Colony_of_New_Zealand .
  ?colony dbo:participatedIn ?war .

  # Link awards and wars through a common entity or event
  OPTIONAL {
    ?event dbo:awardee ?person ;
           dbo:relatedEvent ?war .
  }
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
9,24,val,Give me the figure known as QUB and alma mater of the awardee of Royal Medal.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find individuals associated with QUB as their alma mater
  ?person dbo:almaMater dbr:Queen's_University_Belfast .
  
  # Check if they have won the Royal Medal
  ?award dbo:recipient ?person ;
         rdf:type <http://dbpedia.org/resource/Royal_Medal> .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,38,val,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?father dbo:spouse ?mother .
  ?father dbo:child dbr:Ernest_Augustus,_Duke_of_Brunswick .
  ?father a dbo:Monarch . # Assuming royalty is represented by Monarch class
  FILTER (strstarts(str(?father), ""http://dbpedia.org/resource/"")) # Ensure it's a DBpedia resource

  OPTIONAL {
    ?child dbo:parent ?father .
    FILTER (?child = dbr:Ernest_Augustus,_Duke_of_Brunswick)
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
232,33,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  ?person a dbo:Actor ;
          foaf:name ?name ;
          dbo:childOf dbr:Jon_Pertwee .
  
  ?film dbo:starring ?person ;
        a dbo:Film .

  ?conflict dbo:participatedIn ?person ;
            a dbo:MilitaryConflict .

  FILTER EXISTS { ?person dbo:claimToFame ?work . }
  FILTER EXISTS { ?work dbr:Film || ?work dbo:MilitaryConflict }

  BIND(?person AS ?actor)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
281,40,val,Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand and war of New Zealand Army.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war 
WHERE {
  # Find awards associated with Jonathon Band
  ?award dbo:recipient dbr:Jonathon_Band .
  
  # Find wars related to those awards
  ?award dbo:relatedWar ?war .

  # Alternatively, find wars involving the New Zealand Army
  OPTIONAL { 
    ?war dbo:participatingOrganisation dbr:New_Zealand_Army .
  }

  # Ensure the war is associated with the Colony of New Zealand
  ?war dbo:location dbr:Colony_of_New_Zealand .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
421,17,val,Give me the person born as Edin Dervišhalidović and native of the birthplace of Samir Bekrić.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Samir Bekrić's birthplace
  dbr:Samir_Bekrić dbo:birthPlace ?birthPlace .

  # Find the person born as Edin Dervišhalidović who is native to that birthplace
  ?person rdfs:label ""Edin Dervišhalidović""@en .
  FILTER (CONTAINS(LCASE(str(?person)), ""edin dervišhalidović""))
  ?person dbo:nativePlace ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,14,val,"Give me the father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father
WHERE {
  # Princess Pauline of Saxe-Weimar-Eisenach
  ?princess a dbo:Princess ;
            foaf:name ""Pauline of Saxe-Weimar-Eisenach"" .

  # Spouse of Princess Pauline who is royalty
  ?spouse dbp:spouseOf ?princess ;
          a dbo:Monarch .

  # Child of the spouse who is royalty
  ?child dbp:parent ?spouse ;
         a dbo:RoyalFamilyMember .

  # Father of the child
  ?father dbp:parent ?child .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
485,14,val,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in United Kingdom.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?person dbo:award dbr:Eric_Gregory_Award .
  ?person dbo:nationality dbr:United_Kingdom .
  ?person dbo:occupation dbr:Writer .
  ?person dbo:occupation dbr:Poet .
  ?person dbp:birthPlace ?birthPlace .
}
```",3,5,4,2,2,2,3,28,0,0,5,0,0.0,0
404,18,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child
WHERE {
  ?parent foaf:name ""Ernest Augustus, Crown Prince of Hanover""@en .
  ?parent dbo:child ?child .

  ?child dbo:spouse ?spouse .
  ?spouse foaf:name ""Princess Victoria Louise of Prussia""@en .

  ?child dbo:child ?grandChild .
  ?grandChild foaf:name ""Prince Ernest Augustus of Hanover (1914)""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
767,26,val,Give me the alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://dbpedia.org/property/governor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMater
WHERE {
  ?person foaf:name ""George Kilbon Nash""@en .
  ?person dbo:positionHeld ?administration .
  ?administration dbo:almaMater ?almaMater .
}
```",3,3,4,3,1,3,3,71,0,0,6,0,0.0,0
915,11,val,"Give me the father of Lizzie Spaulding and resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find Lizzie Spaulding and her father
  ?lizzie dbo:mother ?mother .
  ?mother dbo:spouse ?father .

  FILTER(?lizzie = dbr:Lizzie_Spaulding)

  # Find Stephen Verona's birthplace, ensuring it is a settlement
  ?stephen dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement .

  FILTER(?stephen = dbr:Stephen_Verona)

  # Ensure the father resides in the birthplace of Stephen Verona
  ?father dbo:residence ?residence .
  FILTER(?residence = ?birthPlace)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
617,40,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?royalChild ?successor ?parentOfNysa
WHERE {
  # Laodice IV is the spouse of Antiochus II Theos
  dbr:Laodice_IV dbo:spouse dbr:Antiochus_II_Theos .

  # Find her child who is royalty
  dbr:Laodice_IV dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Identify the child of this royal child who is also royalty and a successor
  ?royalChild dbo:child ?successor .
  ?successor a dbo:Monarch .

  # Ensure this person is a parent of Nysa
  ?successor dbo:parent dbr:Nysa_(wife_of_Pharaces_I_of_Pontus) .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
492,32,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent
WHERE {
  # Joseph C. Satterthwaite as US Assistant Secretary of State for African Affairs
  dbr:Joseph_C._Satterthwaite dbo:office dbr:Assistant_Secretary_of_State_for_African_Affairs .

  # Frédéric-Georges Herr as a commander in a military conflict and event
  dbr:Frédéric-Georges_Herr dbo:militaryConflict ?conflict .
  
  # Find the decedent related to both entities
  ?decedent dbo:parent dbr:Joseph_C._Satterthwaite .
  ?decedent dbo:parent dbr:Frédéric-Georges_Herr .
}
```

This query assumes:
- The `dbo:office` property links a person to their role.
- The `dbo:militaryConflict` property connects a commander to the conflict they were involved in.
- The `dbo:parent` property is used to find descendants (though typically it's for parents, you might need to adjust based on actual DBpedia schema).",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
838,11,val,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of Kerber.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band
WHERE {
  ?person dbo:memberOfBand <http://dbpedia.org/resource/YU_Grupa> .
  ?person dbo:memberOfBand <http://dbpedia.org/resource/Kerber> .
  ?person a dbo:Artist ;
          a dbo:MusicalArtist .
  ?person dbp:band ?band .
}
```

This query does the following:
- Identifies individuals (`?person`) who are members of both YU Grupa and Kerber.
- Ensures these individuals are classified as `dbo:Artist` and `dbo:MusicalArtist`.
- Retrieves the band associated with this individual.",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
659,27,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  # Rutger Jan Schimmelpenninck as the reference point
  dbr:Rutger_Jan_Schimmelpenninck a dbo:Person .

  # Find events related to him
  ?event dbo:relatedTo dbr:Rutger_Jan_Schimmelpenninck .
  
  # Ensure these are societal and general events, and military conflicts
  ?event rdf:type ?eventType .
  FILTER (
    ?eventType IN (dbo:SocietalEvent, dbo:Event, dbo:MilitaryConflict)
  ) .

  # Find the military force involved in these events
  ?event dbo:militaryForce ?militaryForce .
}
```",3,6,4,3,1,3,3,71,0,0,1127,0,0.0,0
767,37,val,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to .,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater
WHERE {
  ?person a dbo:Person ;
          foaf:name ""George Kilbon Nash""@en .
  
  OPTIONAL { 
    ?administration dbo:administrator ?person .
  }
  
  ?person dbo:almaMater ?almaMater .
}
```",4,4,5,3,2,3,3,71,0,1,2,0.0,0.0,0
994,36,val,"Give me the associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  # Find the musical artist associated with S.A. Slayer
  dbr:S._A._Slayer dbo:musicalArtist ?artist .

  # Find a band member of this artist who is also known as Don Dokken
  ?artist dbo:bandMember ?bandMember .
  ?bandMember foaf:name ""Don Dokken""@en .
}
```

This query assumes:
- `dbo:musicalArtist` links S.A. Slayer to the associated musical artist.
- `dbo:bandMember` identifies band members of that artist.
- The name ""Don Dokken"" is used as a filter for identifying the correct person.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
981,15,val,"Give me the birth place of Novia Indriani Mamuaja and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?timeZoneEntity
WHERE {
  # Find the birth place of Novia Indriani Mamuaja
  dbr:Novia_Indriani_Mamuaja dbo:birthPlace ?birthPlace .

  # Find entities related to the time zone in Salak, North Sumatra
  OPTIONAL {
    dbr:Salak_(North_Sumatra) dbo:timeZone ?timeZone .
    ?timeZoneEntity a dbo:TimeZone ;
                   rdfs:label ?timeZoneLabel .
    FILTER(CONTAINS(LCASE(?timeZoneLabel), LCASE(?timeZone)))
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
659,34,val,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commanderName WHERE {
  ?person a dbo:MilitaryPerson ;
          dbo:officeHolderOf dbr:Kingdom_of_Ireland ;
          dbo:militaryCommanderOf ?force .
  
  ?force dbo:participatedIn dbr:Napoleonic_Wars .

  OPTIONAL { 
    ?person dbp:name ?commanderName .
  }

  FILTER (YEAR(?person.dbp:dateOfBirth) < 1800 && YEAR(?person.dbp:dateOfDeath) > 1815)
}
ORDER BY ?commanderName",4,5,5,3,2,3,3,71,0,0,34,0,0.0,0
184,37,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Archduchess Ilona of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Find the parent of Archduke Ladislaus Philipp
  ?parent dbo:spouse|dbo:child dbr:Archduke_Ladislaus_Philipp_of_Austria .
  
  # Identify a child of this parent who is royalty
  ?royalChild dbo:parent ?parent ;
              a dbo:RoyalFamilyMember .

  # Check if this royal child has a child who is the parent of Archduchess Ilona
  ?childOfChild dbo:parent ?royalChild .
  ?ilonaParent dbo:spouse|dbo:child dbr:Archduchess_Ilona_of_Austria ;
               dbo:parent ?childOfChild .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
182,17,val,Give me the entity in Sri Lanka and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?war
WHERE {
  ?person rdfs:label ""Gotabhaya Rajapaksa""@en .
  ?person dbo:nationality dbr:Sri_Lanka .
  ?person dbo:occupation ?occupation .
  
  OPTIONAL { 
    ?person dbo:workLocation dbr:Sri_Lanka .
  }
  
  OPTIONAL {
    ?war rdfs:label ""Sri Lankan Civil War""@en ;
         dbo:place dbr:Sri_Lanka .
    ?person dbo:relatedTo ?war .
  }

  FILTER (lang(?occupation) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
161,36,val,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of Rif War.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # El Director is a person involved in the Rif War
  dbr:El_Director dbo:spouse ?person .
  
  # The Rif War as an event
  dbr:Rif_War dbo:place ?location .

  # Find military force related to the Rif War
  ?militaryForce dbo:event dbr:Rif_War ;
                 dbo:commander ?commander .

  # Ensure El Director is connected to this military force
  ?person dbo:militaryService ?militaryForce .
}
```

This query attempts to find a commander associated with a military force involved in the Rif War, where El Director has some connection (e.g., through marriage or service).",4,5,5,3,2,3,3,71,0,0,12,0,0.0,0
547,33,val,Give me the resting place of the actor of the show with Emily Richard and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorRestingPlace ?jamesBurtonRestingPlace WHERE {
  # Find the TV show with Emily Richard
  ?show dbp:starring ?emilyRichard .
  ?emilyRichard foaf:name ""Emily Richard"" .

  # Find the actor from that show
  ?show dbp:starring ?actor .
  FILTER(?actor != ?emilyRichard) 

  # Get the resting place of the actor
  OPTIONAL { ?actor dbo:deathPlace ?actorRestingPlace }

  # Find James Burton (Egyptologist)
  ?jamesBurton foaf:name ""James Burton"" .

  # Get the resting place of James Burton
  OPTIONAL { ?jamesBurton dbo:deathPlace ?jamesBurtonRestingPlace }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
701,40,val,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?henuttawyParent ?ramessesSpouse ?amunChildParent
WHERE {
  # Henuttawy (19th dynasty) parent
  ?henuttawy a dbr:Henuttawy_(19th_dynasty_of_Egypt);
             dbo:parent ?henuttawyParent.

  # Ramesses II spouse
  ?ramesses2 a dbr:Ramesses_II;
             dbo:spouse ?ramessesSpouse.

  # Amun-her-khepeshef's spouse and their child's parent
  ?amunHerKhepeshef a dbr:Amun-her-khepeshef;
                   dbo:spouse ?amunSpouse.
  
  OPTIONAL {
    ?amunChild dbo:parent ?amunSpouse;
              dbo:childOf ?amunParent.
    BIND(?amunParent AS ?amunChildParent)
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,37,val,"Give me the band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?band
WHERE {
  # Don Dokken's band member
  ?bandMember dbo:memberOfBand dbr:Dokken .
  
  # Associated musical artist of the band member
  ?bandMember dbo:associatedMusicalArtist ?associatedArtist .

  # The associated artist is part of a band that is both a group and an organization
  ?associatedArtist dbo:memberOfBand ?band .
  ?band rdf:type dbo:Band ;
        dbo:genre dbr:Heavy_metal_music ; # Assuming genre for filtering, adjust as needed

  # Ensure the band is also an organization of Fredrik Thordendal
  ?band dbo:organizationOf dbr:Fredrik_Thordendal .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
421,13,val,Give me the band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberName
WHERE {
  ?person dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia .
  ?person dbo:award ?award .
  ?band dbo:bandMember ?person .
  ?bandMember dbp:name ?bandMemberName .
}
```

This query does the following:
- Filters individuals (`?person`) who are natives of the Socialist Federal Republic of Yugoslavia.
- Ensures these individuals have received awards.
- Identifies bands (`?band`) they are members of and retrieves the names of those band members.",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
378,38,val,Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the commander in Peninsular War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?claimToFame
WHERE {
  VALUES (?commander ?event) {
    (dbr:George_Augustus_Eliott_1st_Baron_Heathfield dbr:Great_Siege_of_Gibraltar)
    (dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbr:Peninsular_War)
  }
  
  ?commander dbo:associatedWith ?event .
  OPTIONAL {
    ?commander dbo:notableWorkOrEvent ?claimToFame .
  }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
626,13,val,"Give me the commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict ?commanderInConflict
WHERE {
  # Find the commander in the Battle of Paris (1814)
  ?battle dbr:Battle_of_Paris_(1814) .
  ?battle dbo:commander ?commander .

  # Find other conflicts involving this commander
  ?otherBattle dbo:commander ?commander ;
               a dbo:MilitaryConflict .

  BIND(?otherBattle AS ?conflict)

  OPTIONAL {
    ?conflict dbo:commander ?commanderInConflict .
  }
}
ORDER BY ?conflict",3,4,4,3,1,3,2,20,0,0,364,0,0.0,0
356,11,val,Give me the player in the successor of 2014 Sacramento Republic FC season and team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerInSuccessorSeason ?teamOfMarkBriggs
WHERE {
  # Find the successor of the 2014 Sacramento Republic FC season
  dbr:Sacramento_Republic_FC_season_2014 dbo:succeeds ?successorSeason .
  
  # Get the player in the successor season
  ?successorSeason dbo:player ?playerInSuccessorSeason .

  # Find Mark Briggs's team
  dbr:Mark_Briggs dbo:playsFor ?teamOfMarkBriggs .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
9,41,val,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of Royal Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?institution WHERE {
  # QUB as an institution
  VALUES ?qub { dbr:Queen's_University_Belfast }

  # Alma mater of the mayor who is a politician from Northern Ireland Forum
  ?mayor dbo:almaMater ?institution .
  ?mayor dbo:occupation dbr:Politician .
  ?mayor dbo:memberOf dbr:Northern_Ireland_Forum .

  # Alma mater of the awardee of Royal Medal
  OPTIONAL {
    ?awardee dbo:award dbr:Royal_Medal .
    ?awardee dbo:almaMater ?institution .
  }

  # Ensure institution is QUB
  FILTER (?institution = ?qub)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
54,33,val,Give me the parent of the child of the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandParent
WHERE {
  ?thadoMinsaw rdfs:label ""Thado Minsaw""@en.
  ?thinkhaya rdfs:label ""Thinkhaya""@en.

  ?parent1 dbo:child ?thadoMinsaw.
  ?parent2 dbo:child ?thinkhaya.

  ?commonChild dbo:parent ?parent1;
               dbo:parent ?parent2.

  ?grandParent dbo:parent ?commonChild.
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,34,val,Give me the person born as Georgeanne Marie Rice and spouse of the person born as the birth name of Ted McGinley.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse
WHERE {
  ?person dbo:birthName ""Georgeanne Marie Rice""@en .
  ?person dbo:spouse ?spouse .

  ?ted dbo:birthName ?tedBirthName .
  ?ted foaf:name ""Ted McGinley""@en .
  
  FILTER(?spouse = ?ted)
}
```",4,4,5,3,2,3,3,71,0,1,1,0.0,0.0,0
356,14,val,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team
WHERE {
  # Identify Gary Williams' birthplace
  dbr:Gary_Williams_(footballer,_born_1960) dbo:nationality dbr:England ;
                                         dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a settlement and in England
  ?birthPlace rdf:type dbo:Settlement ;
              dbp:country dbr:England .

  # Find individuals native to this place who are both soccer players and managers
  ?person dbo:nationality dbr:England ;
          dbo:birthPlace ?birthPlace ;
          dbo:occupation ?playerRole, ?managerRole .
  
  FILTER (?playerRole = dbo:Soccer_player && ?managerRole = dbo:Soccer_manager)

  # Get the team associated with this person
  OPTIONAL { ?person dbo:team ?team }
}
```",3,7,4,3,1,3,2,20,0,0,46,0,0.0,0
617,35,val,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfAntiochusChild ?royalGrandchild
WHERE {
  # Find Antiochus (son of Antiochus III the Great)
  ?antiochus dbo:father dbr:Antiochus_III_the_Great .
  
  # Find his child
  ?child dbo:parent ?antiochus .
  
  # Find the parent of this child
  ?parentOfAntiochusChild dbo:child ?child .

  # Find Seleucus II Callinicus
  ?seleucus dbr:Seleucus_II_Callinicus .

  # Find his child
  ?childOfSeleucus dbo:parent ?seleucus .
  
  # Find the royal grandchild of Seleucus II Callinicus
  ?grandchild dbo:parent ?childOfSeleucus ;
              a dbo:Monarch .
  
  # Ensure the grandchild is royalty
  ?royalGrandchild dbo:parent ?grandchild ;
                   a dbo:Monarch .
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
232,39,val,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of Dog Soldiers (film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeOfResidence
WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:Francois ;  # Assuming the nationality is represented by a specific resource for France
          dbo:officeHolder true ;
          dbo:actorInFilm dbr:Dog_Soldiers_(film) .
  
  ?person dbo:residence ?residence .

  ?residence a dbo:Settlement ;
             dbp:country dbr:United_Kingdom .

  ?resident dbo:nativePlace ?residence .
  ?resident rdfs:label ?nativeOfResidence .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
626,11,val,"Give me the awardee of Order of St. Andrew and commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?conflict
WHERE {
  # Find the Order of St. Andrew and its awardees
  ?order a dbo:Order ;
         rdfs:label ""Order of St. Andrew""@en .
  
  ?awardingEvent dbo:awardee ?awardee ;
                 dbo:order ?order .

  # Identify Alexander I of Russia as the awardee
  ?person dbr:Alexander_I_of_Russia ;
          rdf:type dbo:Person ;
          rdfs:label ""Alexander I""@en .
  
  FILTER (?awardee = ?person)

  # Find military conflicts where Alexander I was a commander
  ?conflict dbo:commanderInMilitaryConflict ?person .

}
```",3,4,4,2,2,3,2,20,0,0,9,0,0.0,0
547,22,val,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?restingPlace
WHERE {
  # James Burton (Egyptologist)
  { 
    ?person rdfs:label ""James Burton (Egyptologist)""@en .
    ?person dbo:finalRestingPlace ?restingPlace .
  }
  
  UNION
  
  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?awardee dbp:orderOfStMichaelAndStGeorge ""Knight Grand Cross"" .
    ?awardee dbo:finalRestingPlace ?restingPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
701,42,val,Give me the parent of Henuttawy (19th dynasty) and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parentOfHenuttawy ?spouseOfMerneptahsFather ?parentOfNefertarisChild
WHERE {
  # Henuttawy's parent
  ?henuttawy dbo:child ?parentOfHenuttawy .
  FILTER (str(?henuttawy) = ""Henuttawy_(19th_dynasty)"")

  # Merneptah's father and his spouse
  ?merneptah dbo:father ?merneptahFather .
  ?merneptahFather dbo:spouse ?spouseOfMerneptahsFather .

  # Nefertari's child and their parent
  ?nephertariChild dbo:child ?parentOfNefertarisChild .
  ?nephertariChild dbo:mother <http://dbpedia.org/resource/Nefertari> .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
959,18,val,Give me the member of University of Tsukuba and native of Japan and manager of 2013 Júbilo Iwata season.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
    ?person dbo:almaMater dbr:University_of_Tsukuba .
    ?person dbo:nationality dbr:Japan .
    ?person dbo:managerTeam dbr:Júbilo_Iwata .
    ?teamPosition dbo:startDate ?start .
    ?teamPosition dbo:endDate ?end .
    FILTER (?start <= ""2013-01-01""^^xsd:date && (?end >= ""2013-12-31""^^xsd:date || NOT EXISTS { ?teamPosition dbo:endDate ?end }))
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
404,20,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?child WHERE {
  # Find spouse of Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

  # Find children who are royalty and related to Ernest Augustus, Duke of Brunswick
  ?spouse dbo:child ?child .
  
  FILTER EXISTS { ?child a dbo:RoyalFamilyMember . }
  FILTER EXISTS {
    ?child dbo:parent dbr:Ernest_Augustus,_Duke_of_Brunswick ;
           dbo:parent ?spouse .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
232,26,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actorName WHERE {
  ?person a dbo:Actor ;
          dbo:narratorOf ?work ;
          dbo:producerOf ?work .
  
  ?work a dbo:Film ;
        dbo:militaryConflict ?conflict .

  ?person foaf:name ?actorName .

  FILTER EXISTS { ?person dbo:occupation dbr:Actor }
  FILTER EXISTS { ?person dbo:occupation dbr:Narrator }
  FILTER EXISTS { ?person dbo:occupation dbr:Producer }
}
```

### Explanation:

- **PREFIX**: Define common prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT ?actorName**: Retrieve distinct names of actors.
- **WHERE Clause**:
  - Identify a person who is an actor, narrator, and producer.
  - Ensure the work is both a film and related to a military conflict.
  - Use `FILTER EXISTS` to confirm the person's occupations.

This query captures the essence of the question by focusing on individuals with specific roles and their notable works that fit the criteria.",3,5,4,3,1,3,3,71,0,0,3,0,0.0,0
281,21,val,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war
WHERE {
  # Awardees of Knight Grand Cross of the Order of the Bath
  ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  
  # Wars associated with these awardees
  ?person dbo:militaryConflict ?awardeeWar .

  # Wars involving the New Zealand Army
  dbr:New_Zealand_Army dbo:militaryConflict ?nzArmyWar .

  # Find common wars
  FILTER (?awardeeWar = ?nzArmyWar)
  
  BIND(?awardeeWar AS ?war)
}
```",3,3,4,2,2,3,3,71,0,0,9,0,0.0,0
488,41,val,"Give me the administration of Emperor Go-Yōzei and birth place of the commander in Boshin War and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?birthPlace ?deathPlace
WHERE {
  # Administration of Emperor Go-Yōzei
  OPTIONAL {
    dbr:Emperor_Go-Yōzei dbo:reignStart ?start .
    dbr:Emperor_Go-Yōzei dbo:reignEnd ?end .
    BIND(CONCAT(""Reigned from "", STR(?start), "" to "", STR(?end)) AS ?administration)
  }

  # Birthplace of a commander in the Boshin War
  OPTIONAL {
    ?commander dbo:occupation dbr:Military_person ;
              dbo:participatedIn dbr:Boshin_War .
    ?commander dbo:birthPlace ?birthPlace .
  }
  
  # Death place of Yūki Hideyasu's father, who was a politician
  OPTIONAL {
    dbr:Yūki_Hideyasu dbo:father ?father .
    ?father dbo:occupation dbr:Politician ;
            dbo:deathPlace ?deathPlace .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
767,31,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert.",SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find the writer of ""Where It's At""
  ?album dbo:artist dbr:Dustin_Lynch ;
         rdfs:label ""Where It's At""@en .
  
  # Find Carl L. Nippert's alma mater
  ?nippert dbo:almaMater ?almaMater .

  FILTER (CONTAINS(LCASE(?nippert), 'carl l. nippert'))

  # Identify a common administrative entity that is also a settlement
  ?entity dbo:administrator ?album ;
          dbo:administrator ?nippert ;
          rdf:type dbo:Settlement .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
994,34,val,Give me the band member of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist1 ?associatedArtist2
WHERE {
  # Find Don Dokken's band member
  dbr:Don_Dokken dbo:memberOf ?band .
  ?band dbo:bandMember ?bandMember .

  # Find the associated musical artist of the band member
  ?bandMember dbo:associatedMusicalArtist ?associatedArtist1 .

  # Find Watchtower and its associated musical artist
  dbr:Watchtower dbo:associatedMusicalArtist ?associatedArtist2 .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
251,12,val,Give me the death place of Laura Mancinelli and location of Battle of Marengo and administration of Forza Italia (2013).,SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace ?battleLocation ?administration
WHERE {
  # Laura Mancinelli's death place
  ?mancinelli a dbo:Person ;
              foaf:name ""Laura Mancinelli"" ;
              dbo:deathPlace ?deathPlace .

  # Battle of Marengo location
  ?marengo a dbo:MilitaryConflict ;
           dbp:name ""Battle of Marengo"" ;
           dbp:location ?battleLocation .

  # Forza Italia (2013) administration
  ?forzaItalia a dbo:PoliticalParty ;
               dbp:name ""Forza Italia (2013)"" ;
               dbo:administration ?administration .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
659,33,val,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in German campaign of 1813.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . }","SELECT ?commander WHERE {
  # Find the Polish Horse unit and its commander in the German campaign of 1813
  ?polishHorse a dbo:MilitaryUnit ;
               rdfs:label ""Polish Horse""@en .
  
  ?campaign dbr:German_Campaign_of_1813 ;
            dbo:commander ?commander .

  # Ensure the commander is linked to both the Polish Horse and the campaign
  ?polishHorse dbo:commander ?commander ;
               dbo:participatedIn ?campaign .

  # Find a war that involves the Polish Horse
  ?war a dbo:MilitaryConflict ;
       dbo:participant ?polishHorse .
}
```",4,8,5,3,2,3,3,71,0,0,30,0,0.0,0
547,42,val,Give me the resting place of the child of James Burton (property developer) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of Simon Cadell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?childRestingPlace ?knightRestingPlace ?simonCadellRestingPlace WHERE {
  # Resting place of the child of James Burton (property developer)
  ?jamesBurton dbo:profession ""Property developer""@en .
  ?jamesBurton dbo:child ?child .
  ?child foaf:name ?nameChild .
  OPTIONAL { ?child dbo:deathPlace ?childRestingPlace . }

  # Resting place of an awardee of Knight Grand Cross of the Order of St Michael and St George
  ?knightAward dbo:awardee ?knightPerson .
  ?knightPerson foaf:name ?nameKnight .
  OPTIONAL { ?knightPerson dbo:deathPlace ?knightRestingPlace . }

  # Resting place of Simon Cadell
  ?simonCadell foaf:name ""Simon Cadell""@en .
  OPTIONAL { ?simonCadell dbo:deathPlace ?simonCadellRestingPlace . }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
9,29,val,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of Royal Medal and figure known as QUB.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterJohnAlderdice ?almaMaterRoyalMedalist ?qubEntity
WHERE {
  # Alma mater of John Alderdice, Baron Alderdice
  dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMaterJohnAlderdice .

  # Awardee of Royal Medal and their alma mater
  ?royalMedalist dbo:award ?royalMedal .
  FILTER (str(?royalMedal) = ""Royal Medal"")
  ?royalMedalist dbo:almaMater ?almaMaterRoyalMedalist .

  # Entity known as QUB, likely Queen's University Belfast
  dbr:Queen's_University_Belfast rdfs:label ?qubEntity .
  FILTER (lang(?qubEntity) = 'en' && regex(str(?qubEntity), ""QUB"", ""i""))
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
9,30,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast.","SELECT ?result WHERE { <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?allenHillAlmaMater ?johnAlderdiceAlmaMater ?queensUniversityNickname
WHERE {
  # Alma mater of Allen Hill (scientist)
  OPTIONAL {
    dbr:Allen_Hill_(scientist) dbo:almaMater ?allenHillAlmaMater .
  }
  
  # Alma mater of John Alderdice, Baron Alderdice
  OPTIONAL {
    dbr:John_Alderdice dbo:almaMater ?johnAlderdiceAlmaMater .
  }

  # Nickname of Queen's University Belfast
  OPTIONAL {
    dbr:Queen's_University_Belfast dbo:nickName ?queensUniversityNickname .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,20,val,"Give me the person decedent at French Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?event ?role
WHERE {
  # Identify Frédéric-Georges Herr
  dbr:Frédéric-Georges_Herr a dbo:MilitaryPerson ;
                            rdfs:label ""Frédéric-Georges Herr""@en .

  OPTIONAL {
    # Find the event related to French Algeria
    ?event dbo:wikiPageRedirects dbr:Algerian_War_of_Independence ;
           dbo:place dbr:French_Algeria .
    
    # Identify his role as a commander in this event
    ?person dbo:militaryCommanderOf ?event .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
9,18,val,"Give me the figure known as QUB and alma mater of John Alderdice, Baron Alderdice and alma mater of Allen Hill (scientist).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?institution WHERE {
  # Alma mater of John Alderdice, Baron Alderdice
  dbr:John_Alderdice_Barons_Alderdice dbo:almaMater ?institution1 .
  
  # Alma mater of Allen Hill (scientist)
  dbr:Allen_Hill_(scientist) dbo:almaMater ?institution2 .

  # Both institutions are the same and known as QUB
  FILTER (?institution1 = ?institution2)
  BIND(?institution1 AS ?institution)

  # Ensure the institution is known as QUB
  OPTIONAL { ?institution rdfs:label ""Queen's University Belfast""@en }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
378,29,val,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in Peninsular War and war of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame ?roleInPeninsularWar WHERE {
  # Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:occupation ?occupation .
  
  OPTIONAL { 
    ?occupation dbo:fieldOfActivity ?claimToFame .
  }
  
  # Role in Peninsular War
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:militaryConflict ?peninsularWar .
  FILTER (str(?peninsularWar) = ""Peninsular_War"")
  OPTIONAL {
    ?peninsularWar dbo:commander ?roleInPeninsularWar .
    FILTER (?roleInPeninsularWar = dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón)
  }
  
  # Carl Pontus Gahn (for completeness, though not directly related to the main query)
  OPTIONAL {
    ?gahn dbo:occupation ?occupationGahn .
    FILTER (?occupationGahn = dbr:C_P_Gahn)
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
10,15,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person a dbo:Person ;
          dbo:birthName ""Matt Colton"" .
  
  OPTIONAL { 
    ?person dbo:musicalArtist ?artist .
  }
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
378,39,val,"Give me the war of Joaquín Blake and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?joaquinBlakeFame ?triggeEvent
WHERE {
  # Joaquín Blake's war and claim to fame
  ?joaquinBlake a dbo:MilitaryPerson ;
                foaf:name ""Joaquín Blake"" ;
                dbo:participatedIn ?war .
  
  OPTIONAL { 
    ?joaquinBlake dbo:famousFor ?joaquinBlakeFame .
  }

  # Thomas Trigge's military conflict and societal event
  ?trigge a dbo:MilitaryPerson ;
          foaf:name ""Thomas Trigge"" ;
          dbo:participatedIn ?triggeEvent .

  FILTER (dbo:WarOrMilitaryConflict(?triggeEvent) && dbo:SocietalEvent(?triggeEvent))
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
994,18,val,Give me the associated musical artist of Red Tide (band) and band member of Don Dokken and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?redTideArtist ?donDokkenMember ?saSlayerArtist
WHERE {
  # Find associated musical artist of Red Tide (band)
  dbr:Red_Tide_(band) dbo:associatedMusicalArtist ?redTideArtist .

  # Find a band member who is also part of Don Dokken
  ?member dbo:memberOf dbr:Don_Dokken .
  ?donDokkenMember dbo:member ?member .

  # Find associated musical artist of S.A. Slayer
  dbr:S._A._Slayer dbo:associatedMusicalArtist ?saSlayerArtist .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
783,12,val,"Give me the associated musical artist of Appietus and band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist ?bandMember
WHERE {
  # Find Appietus and his associated musical artists
  dbr:Appietus a dbo:MusicalArtist .
  ?appietusRelatedArtist dbo:associatedMusicalArtist dbr:Appietus ;
                        a dbo:MusicalArtist .
  
  # Find Priscilla Opoku-Kwarteng and her band members
  dbr:Priscilla_Opoku-Kwarteng a dbo:Person, dbo:MusicalArtist ;
                               foaf:birthday ?birthDate .
  ?priscillaBandMember dbo:bandMember dbr:Priscilla_Opoku-Kwarteng ;
                       a dbo:MusicalArtist .

  # Find the intersection
  ?associatedArtist = ?appietusRelatedArtist .
  ?bandMember = ?priscillaBandMember .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
485,19,val,"Give me the birth place of Thomas Warner (poet) and entity in the region, that is a country, of Western European Time and entity in Nottinghamshire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?country ?nottinghamshireEntity
WHERE {
  # Birth place of Thomas Warner (poet)
  dbr:Thomas_Warner_(poet) dbo:birthPlace ?birthPlace .

  # Country in the Western European Time zone
  ?country dbp:timeZone ""Europe/London"" .
  
  # Entity in Nottinghamshire
  ?nottinghamshireEntity dbo:location dbr:Nottinghamshire .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
427,37,val,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of Romano Prodi.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherParty ?prodiParty
WHERE {
  # Find fathers of MIT alumni
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .
  OPTIONAL { ?father dbo:partyAffiliation ?fatherParty . }

  # Find Romano Prodi's party affiliation
  dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
378,24,val,"Give me the war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?claimToFame
WHERE {
    # Identify Louis des Balbes de Berton de Crillon
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:commanded ?war .
    
    # Filter for wars during the Peninsular War
    ?peninsularWar dbo:name ""Peninsular War"" ;
                  dbo:participatedIn ?war .

    # Get claims to fame or notable achievements
    OPTIONAL {
        dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:notableFor ?claimToFame .
    }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,11,val,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of Mieszko II Lambert.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?grandchild
WHERE {
  ?boleslaus dbo:spouse ?parent .
  ?parent foaf:child ?mieszko .
  
  ?mieszko foaf:child ?grandchild .
  ?grandchild a dbo:Monarch .
}
```

This query assumes:
- `dbo:spouse` is used to find the parent of Mieszko II Lambert.
- `foaf:child` represents the child relationship.
- `a dbo:Monarch` identifies royalty.",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
659,22,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in German campaign of 1813.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck's involvement in military conflicts
  ?schimmelpenninck dbo:commanderOf ?militaryConflict .
  
  # Ensure the conflict is a societal event and an event
  ?militaryConflict rdf:type dbo:SocietalEvent ;
                   rdf:type dbo:Event .

  # Rutger Jan Schimmelpenninck's role in the German campaign of 1813
  ?schimmelpenninck dbo:commanderOf dbr:German_Campaign_of_1813 .
  
  # Link military force to the conflict
  ?militaryConflict dbo:militaryForce ?militaryForce .

  # Rutger Jan Schimmelpenninck's DBpedia resource
  VALUES ?schimmelpenninck { dbr:Rutger_Jan_Schimmelpenninck }
}
```",3,6,4,2,2,3,3,71,0,0,7,0,0.0,0
281,37,val,"Give me the war of New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war
WHERE {
  ?election dbo:leader ?leader .
  FILTER (strstarts(str(?election), ""1962 New South Wales state election"")) .

  ?leader dbo:nationality ?country .
  ?leader dbo:birthPlace ?birthPlace .
  
  ?birthPlace rdf:type dbr:Country .

  ?war dbo:participatingMilitaryUnit dbr:New_Zealand_Army ;
       dbo:location ?birthPlace .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
378,37,val,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
  
  ?person dbo:commanderOf ?war .

  FILTER(?war = dbr:Peninsular_War)

}
```

This query does the following:
- Selects wars (`?war`) where Louis des Balbes de Berton de Crillon was a commander.
- Filters to ensure that the war is specifically the Peninsular War.",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
92,20,val,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of Nevermore.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Jim Sheppard"" .
  
  ?band dbo:member ?person ;
        rdfs:label ""Nevermore""@en .

  OPTIONAL {
    ?association dbo:artist ?associatedArtist .
    ?association dbo:artist ?person .
    FILTER(?associatedArtist != ?person)
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
54,41,val,Give me the parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Narapati I of Ava's child and their parent
  ?narapatiI dbr:Narapati_I_of_Ava .
  ?child1 dbo:childOf ?narapatiI .
  ?parent dbo:parentOf ?child1 .

  # Soe Min Wimala Dewi's father and his child
  ?soeminwimala dbr:Soe_Min_Wimala_Dewi .
  ?father dbo:fatherOf ?soeminwimala .
  ?child2 dbo:childOf ?father .

  # Ameitta Thiri Maha Dhamma Dewi's predecessor
  ?ameittathirimahadhammadewi dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .
  ?predecessor dbo:predecessorOf ?ameittathirimahadhammadewi .

  # Intersection of the relationships
  FILTER (?parent = ?child2 && ?child2 = ?predecessor)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
251,14,val,"Give me the location of Battle of Marengo and administration of the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleLocation ?partyName ?organisation
WHERE {
  # Find the location of the Battle of Marengo
  dbr:Battle_of_Marengo dbo:location ?battleLocation .

  # Find political parties and organizations in Sicily
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Sicily ;
         rdfs:label ?partyName .
  
  OPTIONAL {
    ?organisation a dbo:Organization ;
                  dbo:member ?party ;
                  rdfs:label ?organisationLabel .
    BIND(CONCAT(?partyName, "" ("", ?organisationLabel, "")"") AS ?organisation)
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
712,13,val,"Give me the capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital
WHERE {
  # Find the military force related to Vyoshenskaya Uprising
  ?militaryForce dbo:wikiPageWikiLink dbr:Vyoshenskaya_Uprising .
  
  # Ensure it is an organisation and a military unit
  ?militaryForce rdf:type dbo:MilitaryUnit ;
                 dbo:organizationalUnitOf ?country .

  # Get the capital of the country
  ?country dbo:capital ?capital .
}
```

### Explanation

- **PREFIX**: Define common prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT**: Retrieve the capital city.
- **WHERE**:
  - Link the military force to the Vyoshenskaya Uprising using `dbo:wikiPageWikiLink`.
  - Ensure the entity is a military unit with `rdf:type dbo:MilitaryUnit`.
  - Use `dbo:organizationalUnitOf` to find the country associated with this military force.
  - Retrieve the capital of that country.

This query assumes that DBpedia has structured data linking the Vyoshenskaya Uprising to a specific military force and subsequently to a country. Adjustments may be needed based on actual data availability in DBpedia.",3,5,4,3,1,3,2,20,0,0,3,0,0.0,0
9,31,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?allenHillAlmaMater ?mayorAlmaMater
WHERE {
  dbr:Allen_Hill_(scientist) dbo:almaMater ?allenHillAlmaMater .

  ?organization a dbo:Organization ;
                dbo:location dbr:Belfast .

  ?mayor dbo:positionTitle ""Mayor""@en ;
         dbo:worksFor ?organization .

  ?mayor dbo:almaMater ?mayorAlmaMater .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,33,val,"Give me the person decedent at French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?militaryConflict ?event
WHERE {
  ?person dbo:decedentLocation dbr:French_Algeria .
  
  ?commanderRole dbo:commander ?person ;
                 dbo:militaryConflict ?militaryConflict ;
                 dbo:event ?event .

  ?battle dbr:Battle_of_Verdun ;
         dbo:event ?event .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
427,36,val,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName ?party WHERE {
  # Identify Romano Prodi and his birth name
  dbr:Romano_Prodi a dbo:Person ;
                  foaf:name ?fullName ;
                  dbo:birthName ?birthName .

  # Find political affiliations as an office holder or politician
  OPTIONAL { 
    dbr:Romano_Prodi dbo:partyAffiliation ?party .
  }

  # Filter to include only relevant parties, specifically Partito Popolare Italiano
  FILTER (?party = dbr:Partito_Popolare_Italiano || EXISTS {
    ?officeHolder a dbo:OfficeHolder ;
                 dbo:incumbent dbr:Romano_Prodi ;
                 dbo:positionHeld ?position .
    ?politician a dbo:Politician ;
                dbo:memberParty ?party .
  })
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
778,14,val,"Give me the author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v0 <http://dbpedia.org/ontology/author> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?authorOfSecondWork
WHERE {
  # Find authors of ""pushd"" and ""popd""
  ?work1 dbo:title ?title .
  FILTER (str(?title) IN (""pushd"", ""popd""))
  ?work1 dbo:creator ?author .

  # Find another work by the same author that is software
  ?work2 dbo:creator ?author .
  ?work2 dbo:title ?secondTitle .
  ?work2 a dbo:Software .
  
  BIND(?author AS ?authorOfSecondWork)
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
959,29,val,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of University of Tsukuba and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nativeCountry
WHERE {
  # Identify Yōichi Masuzoe
  ?person a dbo:Person ;
          foaf:name ""Yōichi Masuzoe"" .

  # Find his residence which is a country
  ?person dbo:residence ?residence .
  ?residence a dbo:Country .

  # Ensure he was associated with University of Tsukuba
  ?person dbo:almaMater dbr:University_of_Tsukuba .

  # Ensure he managed the 2013 Júbilo Iwata season
  ?person dbo:managerOf dbr:Júbilo_Iwata_2013_season .

  # Find his native country of residence
  ?residence dbo:nativeCountry ?nativeCountry .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
820,12,val,Give me the professional in  and child of the parent of Jason Schwartzman.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?sibling ?profession
WHERE {
  ?parent dbo:child ?jason .
  ?jason foaf:name ""Jason Schwartzman"" .

  ?parent dbo:child ?sibling .
  FILTER(?sibling != ?jason)

  OPTIONAL { ?sibling dbo:occupation ?profession }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
801,18,val,Give me the professional in  and producer of Westside Story (song) and associated musical artist of Chris Taylor (music producer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?artist
WHERE {
  # Find producers of Westside Story (song)
  ?producer a dbo:MusicProducer ;
            dbo:produced dbr:Westside_Story_(song) .

  # Find associated artists with Chris Taylor
  ?artist dbo:associatedWith dbr:Chris_Taylor_(music_producer) .
  
  # Ensure the producer is also an artist associated with Chris Taylor
  FILTER (?producer = ?artist)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
184,20,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild ?parentOfGeza
WHERE {
  # Find the child of Archduke Joseph Karl of Austria
  ?child dbo:father dbr:Archduke_Joseph_Karl_of_Austria .
  
  # Find the grandchild (child of the child)
  ?grandchild dbo:father ?child .

  # Check if this grandchild is a parent of Géza von Habsburg
  ?parentOfGeza dbo:child dbr:G%C3%A9za_von_Habsburg .
  
  # Match the grandchild with the parent of Géza von Habsburg
  FILTER (?grandchild = ?parentOfGeza)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,28,val,Give me the child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?father dbo:child ?soeMinWimalaDewi .
  ?soeMinWimalaDewi foaf:name ""Soe Min Wimala Dewi"" .

  ?predecessor dbo:succeededBy ?ameittaThiriMahaDhammaDewiOfAva .
  ?ameittaThiriMahaDhammaDewiOfAva foaf:name ""Ameitta Thiri Maha Dhamma Dewi of Ava"" .
  
  ?parent dbo:child ?thadoMinsaw .
  ?thadoMinsaw foaf:name ""Thado Minsaw of Prome"" .

  FILTER (?father = ?predecessor && ?father = ?parent)
  ?father dbo:child ?child
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
161,21,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"SELECT ?militaryForce WHERE {
  # Francisco Franco as a person involved in military conflicts
  dbr:Franco_Francisco (dbo:militaryConflict) ?conflict .
  
  # Biscay Campaign as a societal event, an event, and a military conflict
  dbr:Biscay_Campaign dbo:isPartOf ?conflict ;
                      rdf:type ?eventType .

  FILTER(?eventType IN (dbr:SocietalEvent, dbr:Event, dbo:MilitaryConflict)).

  # Francisco Franco's role in the Biscay Campaign
  ?role dbo:agent dbr:Franco_Francisco .
  ?role dbo:place dbr:Biscay_Campaign .

  # Military force associated with Francisco Franco during the campaign
  ?role dbo:militaryForce ?militaryForce .
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
435,13,val,"Give me the region of Greenwich Mean Time and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region ?territory ?settlement WHERE {
  # Find regions using GMT
  ?gmtRegion dbo:timeZone dbr:Greenwich_Mean_Time .
  
  # Find territories administered by Iceland
  ?territory dbo:administrativeTerritory dbr:Iceland ;
             a dbo:Settlement .

  # Ensure the territory is also classified as a settlement or town
  OPTIONAL { ?settlement dbo:partOf ?territory . }

  # Link GMT region to the territory
  ?gmtRegion dbo:region ?territory .
  
  FILTER (isLiteral(?settlement))
}
```",3,6,4,2,2,2,3,28,0,0,1,0,0.0,0
54,40,val,Give me the child of the father of the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya of Pagan and his child
  ?thinkhayaChild dbo:childOf dbr:Thinkhaya_of_Pagan .
  
  # Father of Thinkhaya's child (grandfather)
  ?thinkhayaGrandparent dbo:childOf ?thinkhayaChild .

  # Person who is the child of Thinkhaya's grandparent
  ?person dbo:childOf ?thinkhayaGrandparent .

  # Thado Minsaw of Prome and his parent
  dbr:Thado_Minsaw_of_Prome dbo:parent ?person .

  # Ameitta Thiri Maha Dhamma Dewi of Ava and her predecessor
  ?ameitta dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .
  ?ameitta dbo:predecessor ?person .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,37,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in Biscay Campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Find Indalecio Prieto's predecessor
  ?predecessor dbo:successor dbr:Indalecio_Prieto .
  
  # Identify the military force involved in a societal event and a military conflict
  ?societalEvent dbo:militaryConflict ?militaryConflict .
  ?militaryForce dbo:participatedIn ?societalEvent ;
                 dbo:participatedIn ?militaryConflict .

  # Find the commander of the Biscay Campaign
  ?biscayCampaign dbo:commander ?predecessor .
  
  FILTER EXISTS { ?biscayCampaign rdfs:label ""Biscay Campaign""@en }
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
421,14,val,Give me the native of the birthplace of Samir Bekrić and band member of Senidah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native
WHERE {
  dbr:Samir_Bekrić dbo:birthPlace ?birthPlace .

  ?native dbo:nativePlace ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
9,25,val,Give me the figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nickname
WHERE {
  ?university a dbo:EducationalInstitution ;
              dbo:nickname ?nickname .
  
  ?allenHill foaf:name ""Allen Hill"" ;
             foaf:almaMater ?university .

  FILTER(?university = <http://dbpedia.org/resource/Queen's_University_Belfast>)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,43,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse ?royalChild ?royalParent
WHERE {
  # Princess Victoria Louise of Prussia's spouse
  ?princess a dbo:Princess ;
            foaf:name ""Victoria Louise of Prussia"" .
  
  ?princess dbo:spouse ?spouse .

  # Child of the spouse who is royalty
  ?spouse dbo:child ?royalChild .
  ?royalChild a dbo:RoyalFamilyMember .

  # Parent of that royal child who is also royalty
  ?royalChild dbo:parent ?royalParent .
  ?royalParent a dbo:RoyalFamilyMember .

  # Connect to Prince George William of Hanover and Ernest Augustus, Crown Prince of Hanover
  ?royalParent dbo:child ?princeGeorgeWilliam .
  ?princeGeorgeWilliam foaf:name ""Prince George William of Hanover"" .

  ?royalParent dbo:parent ?ernestAugustus .
  ?ernestAugustus foaf:name ""Ernest Augustus, Crown Prince of Hanover"" .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
959,26,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace
WHERE {
  ?politician dbo:election [dbo:electionDate ?date; dbo:electionName ""Japanese House of Councillors election, 2010""] .
  FILTER (YEAR(?date) = 2010)
  
  ?politician dbo:residence ?residence .
  
  ?residence a dbo:Country .
  
  ?country dbo:nativePlace ?nativePlace .
  FILTER (?residence = ?country)
}
```",3,5,4,3,1,3,3,71,0,0,8419,0,0.0,0
391,42,val,"Give me the actor of The Departed and native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName WHERE {
  # The actor of ""The Departed""
  ?movie dbr:The_Departed .
  ?movie dbo:starring ?actor .

  # Actor's native place is ""Hub City""
  ?actor dbo:nativePlace dbr:Hub_City .

  # Actor also acted in a work that is both a movie and a television show with Roz Ryan
  ?work (dbo:starring|dbo:castMember) ?actor .
  ?work dbo:starring dbr:Roz_Ryan .
  ?work rdf:type dbo:Film .
  OPTIONAL { ?work rdf:type dbo:TelevisionSeries . }

  # Return the actor's name
  ?actor rdfs:label ?actorName .
  
  FILTER (lang(?actorName) = 'en')
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
378,22,val,Give me the war of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander ?claimToFame
WHERE {
  # Find wars involving Carl Pontus Gahn
  ?gahn a dbo:Person ;
        foaf:name ""Carl Pontus Gahn"" ;
        dbo:participatedIn ?war .

  # Find the commander of the Great Siege of Gibraltar and their claim to fame
  dbr:Great_Siege_of_Gibraltar dbo:commander ?commander .
  OPTIONAL { ?commander dbo:famousFor ?claimToFame }
}",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
232,37,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of London.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?person a dbo:Actor ;
          dbo:nationality dbr:United_Kingdom ;
          rdfs:label ""London""@en .
  
  ?film dbo:starring ?actor ;
        rdf:type dbo:Film, dbo:MilitaryConflict .

  ?person dbo:claimToFame ?film .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
959,28,val,"Give me the native of Japan and manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?university WHERE {
  # Eiji Ōtsuka details
  dbr:Eiji_Ōtsuka a dbo:Person ;
                  dbo:nationality dbr:Japan ;
                  dbo:positionHeld ?managerRole .

  # Manager of the 2013 Júbilo Iwata season
  ?managerRole dbo:team dbr:Júbilo_Iwata ;
               dbo:season ""2013""^^xsd:string .

  # Alma mater details
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  
  # University is an educational institution in Japan
  ?university a dbo:University ;
              dbo:country dbr:Japan .
}
```",4,8,5,2,3,3,3,71,0,0,1,0,0.0,0
232,40,val,Give me the actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee and native of London.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?child
WHERE {
  # Find the actor of ""Dog Soldiers""
  dbr:Dog_Soldiers_(film) dbo:starring ?actor .

  # Find Jon Pertwee's birth name and his child who is native of London
  OPTIONAL {
    ?jonPertwee foaf:name ""Jon Pertwee""@en .
    ?jonPertwee dbo:birthName ?birthName .
    ?child dbo:parent ?jonPertwee ;
           dbo:nativePlace dbr:London .
  }

  # Link the actor to Jon Pertwee's child
  ?actor dbo:child ?child .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
77,11,val,Give me the force of Alexander I of Russia and war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war ?awardee WHERE {
  # Alexander I of Russia
  dbr:Alexander_I_of_Russia a dbo:Monarch ;
    dbo:reigningMonarchOf dbr:Russian_Empire .

  # Forces associated with Alexander I
  OPTIONAL { 
    ?force dbo:commander dbr:Alexander_I_of_Russia .
    ?force a dbo:MilitaryUnit .
  }

  # Wars involving Alexander I
  OPTIONAL {
    ?war dbo:participatedIn dbr:Alexander_I_of_Russia ;
         a dbo:MilitaryConflict .
  }

  # Awardees of the Golden Weapon for Bravery
  OPTIONAL {
    ?awardee dbo:recipientOf dbr:Golden_Weapon_for_Bravery ;
             a dbo:Person .
  }
}
```",3,3,4,2,2,3,2,20,0,0,11,0,0.0,0
959,33,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and member of University of Tsukuba.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativePlace
WHERE {
  ?leader a dbo:Politician ;
          dbo:electedAsMemberOf ?election ;
          dbo:almaMater dbr:University_of_Tsukuba .
  
  ?election dbo:date ""2010""^^xsd:gYear .

  ?leader dbo:residence ?countryResidence .
  ?countryResidence a dbo:Country .

  ?countryResidence dbp:nativeName ?nativePlace .
}
```",4,6,5,3,2,3,3,71,0,0,84,0,0.0,0
16,29,val,Give me the professional in the profession of Satomi Ishihara and person born as Georgeanne Marie Rice and spouse of Ted McGinley.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional ?person ?spouse
WHERE {
  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person ;
          foaf:name ""Satomi Ishihara"" .
  ?satomi dbo:profession ?professional .

  # Find the person born as Georgeanne Marie Rice
  ?georgeanne a dbo:Person ;
              foaf:name ?personName ;
              foaf:birthday ?birthday .
  FILTER(CONTAINS(LCASE(?personName), ""georgeanne marie rice""))

  # Find Ted McGinley's spouse
  ?ted a dbo:Person ;
       foaf:name ""Ted McGinley"" .
  ?ted dbo:spouse ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
427,44,val,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherParty ?prodiParty ?partitoPopolare
WHERE {
  # Lamberto Andreotti's father and his party
  dbr:Lamberto_Andreotti dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .

  # Romano Prodi as a politician and office holder, and his party
  dbr:Romano_Prodi dbo:officeHolder ?prodiOffice .
  ?prodiOffice dbp:officeHolder ?prodi .
  ?prodi dbo:partyAffiliation ?prodiParty .

  # Reference to Partito Popolare Italiano
  dbr:Partito_Popolare_Italiano rdfs:label ?partitoPopolare .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
666,13,val,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?playerInManager
WHERE {
  ?manager a dbo:SportsManager ;
           dbo:manager ?team .
  
  ?team a dbo:SoccerClub, dbo:SportsTeamSeason .

  ?leonidSlutsky dbo:manager ?manager ;
                 foaf:name ""Leonid Slutsky""@en .

  ?playerInManager dbo:playerIn ?manager .
}
```",3,6,4,3,1,3,2,20,0,0,28,0,0.0,0
801,43,val,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of Chris Taylor (music producer).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?professional ?work WHERE {
  ?professional a dbo:MusicalArtist ;
                dbo:profession ""Rapper"" .
  
  ?work dbo:genre dbr:Song ;
        dbo:producer ?professional ;
        rdf:type dbo:MusicalWork .

  ?association dbo:associatedMusicalArtist ?professional ;
               dbo:musicProducer dbr:Chris_Taylor .

}
```",5,9,6,3,3,3,3,71,0,0,2,0,0.0,0
767,19,val,"Give me the entity in the administration, that is a settlement, of Green and alma mater of Carl L. Nippert.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement
WHERE {
  ?green dbo:administrativeUnit ?settlement .
  FILTER (str(?green) = ""Green"")
  
  ?settlement a dbo:Settlement .

  ?nippert dbo:almaMater ?settlement .
  FILTER (str(?nippert) = ""Carl_L._Nippert"")

}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
427,35,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyName WHERE {
  # Romano Prodi entity and his political party affiliation
  dbr:Romano_Prodi a dbo:Politician ;
                  dbo:birthPlace ?birthPlace ;
                  dbo:politicalParty ?party .

  # Italian People's Party (1994) reference
  OPTIONAL { 
    ?party rdfs:label ""Italian People's Party (1994)""@en .
  }

  # Ensure the party is related to a politician and office holder
  ?officeHolder a dbo:OfficeHolder ;
               dbo:politicalAffiliation ?party .

  # Filter for English labels
  FILTER(LANG(?partyName) = 'en')

  BIND(str(?party) AS ?partyName)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
617,26,val,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseName
WHERE {
  # Find Antiochus (son of Antiochus III the Great)
  ?antiochus a dbo:Person ;
             foaf:name ""Antiochus""@en ;
             dbo:father dbr:Antiochus_III_the_Great .

  # Find his successor
  ?successor dbo:predecessor ?antiochus .

  # Find the child of the successor
  ?child dbo:parent ?successor .

  # Ensure the child is royalty
  ?child a dbo:RoyalFamilyMember .

  # Find the spouse of this royal child
  ?spouse dbo:spouse ?child ;
          foaf:name ?spouseName .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
9,19,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?allenHillAlmaMater ?mayorAlmaMater
WHERE {
  # Find Allen Hill (scientist) and his alma mater
  ?allenHill a dbo:Scientist ;
             foaf:name ""Allen Hill"" .
  ?allenHill dbo:almaMater ?allenHillAlmaMater .

  # Find the mayor of Northern Ireland Forum and their alma mater
  ?mayor a dbo:Politician ;
         dbp:office ""Mayor of Northern Ireland Forum"" .
  ?mayor dbo:almaMater ?mayorAlmaMater .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
281,24,val,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthCountry ?war
WHERE {
  # Part 1: Find Bob Heffron's birthplace that is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  FILTER (isLiteral(?birthPlace) && regex(str(?birthPlace), ""country"", ""i""))
  OPTIONAL { ?birthPlace rdfs:label ?birthCountry . FILTER(langMatches(lang(?birthCountry), ""en"")) }

  # Part 2: Find the war involving New Zealand Army
  dbr:New_Zealand_Army dbo:participatedIn ?war .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
994,43,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and associated musical artist of S.A. Slayer and band member of Don Dokken.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band1 ?artist1 ?band2 ?artist2 WHERE {
  # Fredrik Thordendal's band that is an organization
  dbr:Fredrik_Thordendal dbo:memberOf ?band1 .
  ?band1 a dbo:Band ;
         a dbo:Organization .

  OPTIONAL { 
    ?band1 dbo:musicalArtist ?artist1 .
  }

  # S.A. Slayer's associated musical artist
  dbr:S._A._Slayer dbo:musicalArtist ?artist2 .

  # Don Dokken's band member of another band
  dbr:Don_Dokken dbo:memberOf ?band2 .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
701,32,val,Give me the parent of the child of Nefertari and parent of the child of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parentOfNefertariChild ?parentOfRamessesIIChild
WHERE {
  # Find children of Nefertari and their parents
  ?child1 dbo:mother dbr:Nefertari .
  ?child1 dbo:parent ?parentOfNefertariChild .

  # Find children of Ramesses II and their parents
  ?child2 dbo:father dbr:Ramesses_II .
  ?child2 dbo:parent ?parentOfRamessesIIChild .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
55,18,val,"Give me the band of the reference, that is a band, to Newsted and band member of Metallica.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandName
WHERE {
  # Find Jason Newsted's membership in Metallica
  dbr:Jason_Newsted dbo:memberOfBand dbr:Metallica .
  
  # Find other bands associated with Jason Newsted
  dbr:Jason_Newsted dbo:memberOf ?otherBand .

  # Ensure the band is distinct from Metallica and is a band
  FILTER(?otherBand != dbr:Metallica)
  ?otherBand rdf:type dbo:Band .
  
  # Get the name of the other band
  ?otherBand rdfs:label ?bandName .
}
ORDER BY ?bandName
```",3,4,4,2,2,2,3,28,0,0,3,0,0.0,0
92,25,val,Give me the band of the person born as Joseph Michael Furney and associated musical artist of Jim Sheppard.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandFurney ?artistSheppard
WHERE {
  # Find Joseph Michael Furney's band
  OPTIONAL {
    ?furney a dbo:Person ;
            foaf:name ""Joseph Michael Furney"" .
    ?furney dbo:musicalArtist ?bandFurney .
  }
  
  # Find Jim Sheppard's associated musical artist
  OPTIONAL {
    ?sheppard a dbo:Person ;
              foaf:name ""Jim Sheppard"" .
    ?sheppard dbo:musicalArtist ?artistSheppard .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,36,val,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit ?professional ?officeHolder ?politician WHERE {
  # Find military units in the New Zealand Army
  ?militaryUnit a dbo:MilitaryUnit ;
                dbo:militaryBranch dbr:New_Zealand_Army .

  # Find professionals who are office holders and politicians
  ?professional a dbo:OfficeHolder, dbo:Politician .

  # Link military unit to professional through war involvement
  ?war dbo:participatingMilitaryUnit ?militaryUnit ;
       dbo:participant ?professional .

  # Beauchamp Seymour's involvement in wars
  ?beauchampWar dbo:participatingMilitaryUnit ?militaryUnit ;
               dbo:participant dbr:Beauchamp_Seymour_1st_Baron_Alcester .
  
  # Ensure the professional is linked to an office holder and politician
  ?professional dbo:officeHolderOf ?officeHolder ;
                dbo:politicianIn ?politician .

}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
391,39,val,"Give me the actor of The Departed and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorOfDeparted ?actorOfWorkAndShow
WHERE {
  # Find actors of ""The Departed""
  dbr:The_Departed dbo:starring ?actorOfDeparted .
  
  # Find movies that are also works and television shows
  ?movie a dbo:Film ;
         a dbo:CreativeWork ;
         a dbo:TelevisionShow .

  # Find actors of these movies
  ?movie dbo:starring ?actorOfWorkAndShow .
}
```",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
767,41,val,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of Green and reference to .","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?settlement ?reference
WHERE {
  # Find George K. Nash's alma mater
  ?nash a dbo:Person ;
        foaf:name ""George K. Nash"" .
  
  ?nash dbo:almaMater ?almaMater .

  # Find an entity in the administration of Green and its settlement
  ?green a dbo:Person ;
         foaf:name ""Green"" .  # Assuming 'Green' refers to a specific person

  ?adminRole dbo:agent ?green ;
             dbo:position ?role .
  
  OPTIONAL {
    ?settlement a dbo:Settlement ;
                dbo:location ?adminRole .
    
    ?reference dbo:isReferencedBy ?settlement .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
659,44,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in German campaign of 1813.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  # Rutger Jan Schimmelpenninck's military involvement
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryConflict ?conflict1 .
  
  # 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) involvement in German campaign of 1813
  dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) dbo:militaryConflict ?conflict2 .
  ?conflict2 dbo:date ""1813""^^xsd:gYear .

  # Find common military force or conflict
  OPTIONAL { ?conflict1 dbo:participatingMilitaryForce ?militaryForce . }
  OPTIONAL { ?conflict2 dbo:participatingMilitaryForce ?militaryForce . }

  FILTER(?conflict1 = ?conflict2)
}
```",5,10,6,2,3,3,3,71,0,0,7,0,0.0,0
528,32,val,Give me the war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander
WHERE {
  # Military force involved in the Battle of Pisagua
  dbr:Battle_of_Pisagua dbo:militaryConflicts ?battlePisagua .
  ?battlePisagua dbo:participatingMilitaryUnit ?militaryForce .

  # Commander involved in the Battle of La Rinconada de Ate
  dbr:Battle_of_La_Rinconada_de_Ate dbo:commander ?commander .
}
```",4,4,5,2,2,3,3,71,0,0,8,0,0.0,0
294,12,val,"Give me the entity in Nashville, Tennessee and resting place of Luke Lea (American politician, born 1879) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInNashville ?lukeLeaRestingPlace ?edwinKeebleRestingPlace
WHERE {
  # Entity in Nashville related to Luke Lea
  ?lukeLea dbo:birthPlace dbr:Nashville,_Tennessee .
  ?entityInNashville dbo:location dbr:Nashville,_Tennessee .
  ?entityInNashville dbo:associatedWith ?lukeLea .

  # Resting place of Luke Lea
  ?lukeLea dbo:deathPlace ?lukeLeaRestingPlace .

  # Resting place of Edwin A. Keeble
  ?edwinKeeble a dbo:Person ;
               rdfs:label ""Edwin A. Keeble""@en .
  ?edwinKeeble dbo:deathPlace ?edwinKeebleRestingPlace .
}
```

### Explanation

- **PREFIX**: Defines common namespaces for DBpedia.
- **SELECT DISTINCT**: Ensures unique results are returned.
- **WHERE Clause**:
  - Identifies the entity in Nashville associated with Luke Lea.
  - Retrieves the resting place of Luke Lea.
  - Finds the resting place of Edwin A. Keeble.

This query assumes that the relationships and properties used (like `dbo:associatedWith`, `dbo:birthPlace`, etc.) are correctly defined in DBpedia for these entities.",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
48,15,val,"Give me the band of Murda Mook and band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?murdaMookBand ?writerBand
WHERE {
  # Find Murda Mook's band
  dbr:Murda_Mook a dbo:Musician ;
                 dbo:bandMemberOf ?murdaMookBand .

  # Find works produced by Shellback
  ?work dbo:producer dbr:Shellback .

  # Find writers of those works
  ?work dbo:writer ?writer .

  # Find the band of that writer
  ?writer a dbo:Musician ;
          dbo:bandMemberOf ?writerBand .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
547,40,val,Give me the resting place of Simon Cadell and resting place of Alan Cunningham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?restingPlace WHERE {
  # Resting place for Simon Cadell
  { 
    ?simonCadell a dbo:Person ;
                 foaf:name ""Simon Cadell""@en .
    ?simonCadell dbo:placeOfBurial ?restingPlace .
  }
  
  UNION
  
  # Resting place for Alan Cunningham
  {
    ?alanCunningham a dbo:Person ;
                    foaf:name ""Alan Cunningham""@en .
    ?alanCunningham dbo:placeOfBurial ?restingPlace .
  }

  UNION

  # Great-grandchild of William Haliburton and their resting place
  {
    ?williamHaliburton a dbo:Person ;
                       foaf:name ""William Haliburton""@en .
    ?child1 dbo:parent ?williamHaliburton .
    ?grandChild dbo:parent ?child1 .
    ?greatGrandChild dbo:parent ?grandChild .
    ?greatGrandChild dbo:placeOfBurial ?restingPlace .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,40,val,Give me the band member of Don Dokken and associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist1 ?associatedArtist2
WHERE {
    # Step 1: Find band members of Don Dokken
    ?donDokkenBand a dbo:MusicalBand ;
                   dbo:member ?bandMember .
    
    FILTER (str(?donDokkenBand) = ""Don_Dokken"")

    # Step 2: Find associated musical artists of Red Tide
    ?redTideBand a dbo:MusicalBand ;
                 dbo:associatedMusicalArtist ?associatedArtist1 .

    FILTER (str(?redTideBand) = ""Red_Tide_(band)"")

    # Step 3: Find the associated musical artist of the entity found in step 2
    ?artist1AssociatedArtist a dbo:MusicalArtist ;
                            dbo:associatedMusicalArtist ?associatedArtist2 .
    
    FILTER (?associatedArtist1 = ?artist1AssociatedArtist)
    
    # Link to Watchtower
    ?watchtowerBand a dbo:MusicalBand ;
                    dbo:associatedMusicalArtist ?artist1AssociatedArtist .

    FILTER (str(?watchtowerBand) = ""Watchtower_(band)"")
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,15,val,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb and team of Alessandro Mangiarratti.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  ?player foaf:name ""Armando Heeb""@en .
  ?team dbo:member ?player .
  ?team a dbo:SoccerClub ;
        a dbo:SportsTeam ;
        a dbo:Organisation .

  ?player dbo:nickname ?nickname .

  OPTIONAL { 
    ?anotherPlayer foaf:name ""Alessandro Mangiarratti""@en .
    ?team dbo:member ?anotherPlayer .
  }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
492,21,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at Algiers.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorSatterthwaite ?successorAlgiers
WHERE {
  # Find Joseph C. Satterthwaite's successor in the role of US Assistant Secretary of State for African Affairs
  OPTIONAL {
    ?satterthwaite dbo:office dbr:United_States_Assistant_Secretary_of_State_for_African_Affairs .
    ?satterthwaite dbo:endTime ?endTimeSatterthwaite .
    ?successorSatterthwaite dbo:office dbr:United_States_Assistant_Secretary_of_State_for_African_Affairs .
    ?successorSatterthwaite dbo:startTime ?startTimeSuccessorSatterthwaite .
    FILTER (?startTimeSuccessorSatterthwaite > ?endTimeSatterthwaite)
  }

  # Find the successor in Algiers
  OPTIONAL {
    ?algiersRole dbo:location dbr:Algiers .
    ?algiersRole dbo:endTime ?endTimeAlgiers .
    ?successorAlgiers dbo:location dbr:Algiers .
    ?successorAlgiers dbo:startTime ?startTimeSuccessorAlgiers .
    FILTER (?startTimeSuccessorAlgiers > ?endTimeAlgiers)
  }

  # Bind Joseph C. Satterthwaite
  VALUES ?satterthwaite { dbr:Joseph_C._Satterthwaite }
}
```",3,3,4,2,2,3,3,71,0,0,16,0,0.0,0
994,21,val,Give me the band member of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist1 ?associatedArtist2
WHERE {
  # Find Don Dokken's band
  dbr:Don_Dokken dbo:memberOf ?donDokkenBand .
  
  # Find a member of that band
  ?bandMember dbo:memberOf ?donDokkenBand .

  # Find an associated artist of the band member
  ?associatedArtist1 dbo:associatedMusicalArtist ?bandMember .

  # Find Watchtower's associated musical artist
  dbr:Watchtower dbo:associatedMusicalArtist ?watchtowerAssociatedArtist .
  
  # Find an associated artist of that associated artist
  ?associatedArtist2 dbo:associatedMusicalArtist ?watchtowerAssociatedArtist .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
44,7,val,Give me the band member of the band of John Pettibone and band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember
WHERE {
  ?person dbo:memberOfBand ?band1 .
  ?band1 rdfs:label ""John Pettibone""@en .

  ?person dbo:memberOfBand ?band2 .
  ?band2 rdfs:label ""Sledgeback""@en .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
645,11,val,"Give me the alma mater of Sylvia Pankhurst and entity in the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?countryOfResidence
WHERE {
  # Alma mater of Sylvia Pankhurst
  OPTIONAL {
    ?sylviaPankhurst a dbo:Person ;
                     foaf:name ""Sylvia Pankhurst"" ;
                     dbo:almaMater ?almaMater .
  }
  
  # Country of residence for James Wilkes Maurice
  OPTIONAL {
    ?jamesWilkesMaurice a dbo:Person ;
                        foaf:name ""James Wilkes Maurice"" ;
                        dbo:residence ?residence .
    ?residence dbo:country ?countryOfResidence .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
712,12,val,Give me the capital of South Russia (1919–1920) and resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?capital ?heroName ?restingPlace
WHERE {
  # Find the capital of South Russia (1919–1920)
  OPTIONAL {
    ?southRussia dbo:capital ?capital .
    FILTER (
      EXISTS { ?southRussia rdfs:label ""South Russia""@en }
      && EXISTS { ?southRussia dbo:timeRange ?timeRange . 
                  ?timeRange dbo:startYear ?startYear ;
                            dbo:endYear ?endYear .
                  FILTER (?startYear <= 1919 && ?endYear >= 1920) }
    )
  }

  # Find individuals awarded Hero of the Soviet Union and their resting places
  OPTIONAL {
    ?hero dbo:awardedBy dbr:Hero_of_the_Soviet_Union ;
          rdfs:label ?heroName .
    ?hero dbp:placeOfBurial ?restingPlace .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
485,17,val,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in Nottinghamshire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person dbo:award dbr:Eric_Gregory_Award .
  ?person dbo:occupation dbr:Writer .
  ?person dbo:occupation dbr:Poet .
  ?person dbo:birthPlace ?birthPlace .
  ?place a dbo:Place ;
         dbo:location dbr:Nottinghamshire .
  ?person dbo:residence ?place .
}
```

This query does the following:
- Selects the birth place of individuals who have won the Eric Gregory Award.
- Ensures these individuals are both writers and poets.
- Filters to include only those whose residence is in Nottinghamshire.",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
488,44,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of Enomoto Takeaki and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceYūkiFather ?birthPlaceEnomoto ?administrationGoMizunooFather
WHERE {
  # Yūki Hideyasu's father
  dbr:Yūki_Hideyasu dbo:father ?yūkiFather .
  ?yūkiFather dbo:deathPlace ?deathPlaceYūkiFather .

  # Enomoto Takeaki's birth place
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceEnomoto .

  # Emperor Go-Mizunoo's father and his administration
  dbr:Emperor_Go-Mizunoo dbo:father ?goMizunooFather .
  ?goMizunooFather dbo:office ?administrationGoMizunooFather .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
303,18,val,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in Panama.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party
WHERE {
  ?person dbr:Arnulfo_Arias_Madrid .
  ?person a dbo:Politician .
  ?person dbo:nationality dbr:Panama .
  ?person dbo:politicalParty ?party .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
10,17,val,"Give me the professional in  and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalIn ?bandMember 
WHERE {
  # Identify Luke Francis Vibert as an artist
  dbr:Luke_Francis_Vibert a dbo:Artist .

  # Find his professional roles
  OPTIONAL { 
    dbr:Luke_Francis_Vibert dbo:profession ?professionalIn .
  }

  # Find band memberships
  OPTIONAL {
    dbr:Luke_Francis_Vibert dbo:bandMember ?bandMember .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
92,22,val,Give me the band member of Nevermore and band of the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nevermoreMember ?furneyBand
WHERE {
  # Find members of Nevermore
  ?member dbo:band dbr:Nevermore .
  BIND(?member AS ?nevermoreMember)

  # Find the band associated with Joseph Michael Furney (Vinnie Moore)
  OPTIONAL {
    ?person foaf:name ""Joseph Michael Furney""@en ;
            dbo:birthName ""Joseph Michael Furney"" ;
            dbo:band ?furneyBand .
    BIND(?person AS ?vinnieMoore)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
251,18,val,Give me the administration of Forza Italia (2013) and death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?deathPlace
WHERE {
  # Find the administration related to Forza Italia in 2013
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Forza Italia""@en .
  
  OPTIONAL {
    ?administration dbo:member ?person .
    ?administration dbo:startDate ?start .
    ?administration dbo:endDate ?end .
    FILTER (?start <= ""2013-12-31""^^xsd:date && (?end >= ""2013-01-01""^^xsd:date || NOT EXISTS { ?administration dbo:endDate ?end }))
  }
  
  # Find the author of The Twelve Abbots of Challant and their death place
  ?book dbo:author ?author .
  ?book rdfs:label ""The Twelve Abbots of Challant""@en .
  
  OPTIONAL {
    ?author dbo:deathPlace ?deathPlace .
  }
}
```",3,3,4,2,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
827,11,val,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherName WHERE {
  # William Ernest, Grand Duke of Saxe-Weimar-Eisenach
  ?williamErnest dbo:givenName ""William Ernest""@en .
  ?williamErnest dbo:title ""Grand Duke of Saxe-Weimar-Eisenach""@en .

  # Father of William Ernest
  ?father dbo:child ?williamErnest .
  
  # Maria Pavlovna of Russia (1786–1859)
  ?mariaPavlovna dbo:givenName ""Maria Pavlovna""@en ;
                 dbo:birthYear ""1786""^^xsd:gYear ;
                 dbo:deathYear ""1859""^^xsd:gYear .

  # Child of Maria Pavlovna
  ?child dbo:parent ?mariaPavlovna .
  
  # Ensure the child is royalty
  ?child rdf:type/rdfs:subClassOf* dbo:RoyalFamilyMember .

  # The father must be a child of this royal child
  ?father dbo:child ?royalChild .
  ?royalChild rdfs:subClassOf* dbo:RoyalFamilyMember .
  
  BIND(STRAFTER(STR(?father), ""http://dbpedia.org/resource/"") AS ?fatherName)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
184,43,val,"Give me the parent of Géza von Habsburg and parent of Archduchess Ilona of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?result
WHERE {
  # Parent of Géza von Habsburg
  ?geza dbo:parent ?parentGeza .
  
  # Parent of Archduchess Ilona of Austria
  ?ilona dbo:parent ?parentIlona .

  # Parent of Archduke Ladislaus Philipp of Austria
  ?ladislaus dbo:parent ?parentLadislaus .

  # Child of the child of the parent of Archduke Ladislaus Philipp of Austria
  ?child1 dbo:parent ?parentLadislaus .
  ?result dbo:parent ?child1 .

  # Ensure result is royalty
  ?result a dbo:RoyalFamilyMember .
  
  # Optional: Include labels for clarity (not required but helpful)
  OPTIONAL { ?geza rdfs:label ?gezaLabel . }
  OPTIONAL { ?ilona rdfs:label ?ilonaLabel . }
  OPTIONAL { ?ladislaus rdfs:label ?ladislausLabel . }
  OPTIONAL { ?result rdfs:label ?resultLabel . }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
488,23,val,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Saitō Hajime""@en ;
          dbo:birthPlace ?birthPlace .
  
  ?person dbo:occupation dbo:MilitaryCommander .

  ?war a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent ;
       dbo:commandedBy ?person .
}
```

This query does the following:
- Identifies Saitō Hajime as a person with a specific birthplace.
- Ensures he has an occupation related to being a military commander.
- Links him to a war that is classified as a military conflict, event, and societal event.",3,6,4,3,1,3,3,71,0,0,17,0,0.0,0
492,39,val,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?decedent WHERE {
  # Find commanders in Franco-Hova Wars
  ?war dbo:participatedInMilitaryConflict dbr:Franco-Hova_Wars .
  ?commander dbo:commanded ?unit ;
             dbo:wasInvolvedIn ?war .

  # Find person decedent at Khemis Miliana
  ?decedent dbo:placeOfBirth dbr:Khemis_Miliana ;
            dbo:dateOfDeath ?deathDate ;
            dbo:causeOfDeath ?cause .
  
  FILTER EXISTS { 
    ?capital dbo:country dbr:Algeria ;
             rdfs:label ""Khemis Miliana""@en .
    ?decedent dbo:placeOfDeath ?capital .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
528,24,val,Give me the war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander ?force
WHERE {
  # Find the battle and its associated war
  ?battle dbo:partOf ?war .
  
  # Specify the Battle of La Rinconada de Ate
  VALUES ?battle { dbr:Battle_of_La_Rinconada_de_Ate }
  
  # Identify the commander involved in this battle
  ?battle dbo:commander ?commander .

  # Find the force led by Narciso Campero
  ?force dbo:leader dbr:Narciso_Campero .
  
  # Link the force to the same war
  ?force dbo:partOf ?war .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
712,11,val,Give me the capital of the country of Armed Forces of South Russia and resting place of Nina Onilova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital ?restingPlace
WHERE {
  # Assuming ""Armed Forces of South Russia"" is related to a historical region or entity
  OPTIONAL {
    ?entity rdfs:label ""Armed Forces of South Russia""@en .
    ?entity dbo:country dbr:Russia .
    ?entity dbo:capital ?capital .
  }
  
  # Finding the resting place of Nina Onilova
  ?person rdfs:label ""Nina Onilova""@en .
  ?person dbo:deathPlace ?restingPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
281,43,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of Beauchamp Seymour, 1st Baron Alcester and war of New Zealand Army.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  # Find the leader of the 1962 NSW state election
  ?leader dbo:officeHolderOf dbr:1962_New_South_Wales_state_election .
  ?leader a dbo:Politician .

  # Get birthplace and ensure it is a country
  ?leader dbp:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country ;
              rdfs:label ?country .

  OPTIONAL {
    # Wars involving Beauchamp Seymour, 1st Baron Alcester
    dbr:Beauchamp_Seymour,_1st_Baron_Alcester dbo:participatedInWar ?war .
  }

  OPTIONAL {
    # Wars involving the New Zealand Army
    dbr:New_Zealand_Army dbo:participatedInWar ?war .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
318,7,val,Give me the person born in the founding year of Eel Pie Publishing and professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the founding year of Eel Pie Publishing
  dbr:Eel_Pie_Publishing dbo:foundingDate ?foundingYear .
  
  # Match individuals born in that year who are composers
  ?person dbo:birthYear ?foundingYear ;
          a dbo:Composer ;
          rdfs:label ?name .
}
```",3,3,4,2,2,2,2,9,0,0,7,0,0.0,0
404,39,val,Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfPrince ?childOfFather
WHERE {
  # Find Prince Ernest Augustus of Hanover (born 1914)
  ?prince a dbo:Person ;
          rdfs:label ""Prince Ernest Augustus of Hanover""@en ;
          dbo:birthYear ""1914""^^xsd:gYear .

  # Get his parent
  ?prince dbo:parent ?parentOfPrince .

  # Find Princess Victoria Louise of Prussia's spouse
  ?princess a dbo:Person ;
            rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  ?princess dbo:spouse ?spouse .

  # Get the father of this spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Find the child of this father
  ?fatherOfSpouse dbo:child ?childOfFather .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
339,12,val,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia and child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father
WHERE {
  # Find children of Grand Duchess Elena Vladimirovna
  ?child1 dbo:parent dbr:Grand_Duchess_Elena_Vladimirovna_of_Russia .
  
  # Find children of George I of Greece
  ?child2 dbo:parent dbr:George_I_of_Greece .

  # Ensure the child is common to both parents
  FILTER (?child1 = ?child2)

  # Get the father of this common child
  ?child1 dbo:father ?father .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
328,32,val,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find someone who was a commander under Ferenc Szálasi
  ?szalasiCommander dbo:commanderOf dbr:Ferenc_Szálasi .
  
  # Ensure this person is the same as someone awarded by Bruce Fraser
  ?fraserAwarded dbo:recipient ?person ;
                 dbo:awardedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .

  # Bind the person to a variable for output
  BIND(?szalasiCommander AS ?person)
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
981,13,val,"Give me the entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?place rdfs:label ""Salak""@en .
  ?place dbo:location dbr:North_Sumatra .
  ?place dbo:timeZone ?tz .
  ?entity dbo:timeZone ?tz .
  FILTER(?entity != ?place)
}
```

5. **Explanation**:
   - The query selects entities (`?entity`) that share the same time zone as Salak in North Sumatra.
   - It ensures that the entity is not Salak itself by using `FILTER(?entity != ?place)`.",3,3,4,3,1,3,2,20,0,0,2949,0,0.0,0
754,14,val,Give me the parent of the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Find the reference to Ram Khamhaeng the Great
  dbr:Ram_Khamhaeng_the_Great a dbo:Person .

  # Identify children of this reference (e.g., descendants)
  ?child dbo:spouseOrPartner dbr:Ram_Khamhaeng_the_Great .
  
  # Find the parent of these children
  ?child dbo:parent ?parent .
}
```

This query assumes that `dbo:spouseOrPartner` and `dbo:parent` are appropriate properties to use for finding descendants and parents, respectively. Adjustments may be needed based on the actual schema in DBpedia.",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
16,27,val,Give me the person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName
WHERE {
  ?person dbo:almaMater dbr:Ohio_State_University .
  ?person dbp:birthName ?birthName .
}
```",3,3,4,3,1,3,3,71,90,90,0,0.5,1.0,0.6666666666666666
303,19,val,"Give me the entity in Panama and party of Arnulfo Arias and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?partyArnulfoArias ?partyCommander WHERE {
  # Arnulfo Arias's party
  OPTIONAL { 
    dbr:Ari%C3%B1o_Arias#Arnulfo_Arias dbo:politicalParty ?partyArnulfoArias .
  }
  
  # Commander's party (assuming a known commander, e.g., Manuel Noriega)
  OPTIONAL {
    dbr:Manuel_Noriega dbo:politicalParty ?partyCommander .
  }

  # Entity in Panama involved in the invasion
  ?entity a dbo:Politician ;
          dbo:nationality dbr:Panama ;
          dbo:affiliation ?partyArnulfoArias ;
          dbo:affiliation ?partyCommander .

  FILTER EXISTS { 
    ?event dbo:eventName ""United States invasion of Panama"" .
    ?event dbo:participant ?entity .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
617,21,val,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Seleucus II Callinicus and his children
  dbr:Seleucus_II_Callinicus dbo:spouse ?parent1 .
  ?parent1 dbo:child ?child .

  # The child of Seleucus II Callinicus who is a parent of Nysa
  ?child dbo:spouse ?parent2 .
  ?parent2 dbo:child dbr:Nysa_(wife_of_Pharaces_I_of_Pontus) .

  # Ensure the child is royalty
  ?child dbo:royalty true .

  # Return the child of the child who is a royalty
  ?child dbo:child ?childOfChild .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
996,15,val,Give me the force of the awardee of the elevation of Lac d'Avoriaz and entity in France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?force WHERE {
  # Find awards related to Lac d'Avoriaz
  ?award dbo:location dbr:Lac_d%27Avoriaz .
  
  # Check if the award has a property indicating ""force"" or similar concept
  OPTIONAL { ?award dbo:someProperty ?force . }
  
  # Ensure the location is in France
  FILTER EXISTS {
    ?award dbo:country dbr:France .
  }
}
```",4,4,5,3,2,3,2,20,0,0,4,0,0.0,0
92,36,val,Give me the band of the person born as the birth name of Joseph Michael and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band 
WHERE {
  ?person dbo:birthName ""Joseph Michael""@en .
  ?person dbo:memberOfBand ?band .
  FILTER(CONTAINS(LCASE(STR(?band)), ""nevermore""))
}
```

### Explanation

- **PREFIX**: Define common prefixes for DBpedia ontology and properties.
- **SELECT**: Choose variables `?person` (the person) and `?band` (the band).
- **WHERE**:
  - Find a resource where the birth name is ""Joseph Michael"".
  - Link this person to a band they are a member of.
  - Use a FILTER to ensure the band's name contains ""nevermore"".

This query should retrieve the band associated with Joseph Michael, who is known for being a member of Nevermore.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
492,28,val,"Give me the commander in Franco-Hova Wars and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at Algiers.","SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?satterthwaiteDecedent ?algiersDecedent
WHERE {
  # Find the commander in Franco-Hova Wars
  ?commander a dbo:MilitaryPerson ;
             dbo:role ?francoHovaRole .
  
  FILTER(CONTAINS(LCASE(STR(?francoHovaRole)), ""franco-hova wars""))

  OPTIONAL {
    # Find decedents related to Joseph C. Satterthwaite
    dbr:Joseph_C._Satterthwaite dbo:decedent ?satterthwaiteDecedent .
  }

  OPTIONAL {
    # Find a person who was a decedent at Algiers
    ?algiersPerson dbo:placeOfBirth dbr:Algiers ;
                  dbo:deceasedAtTime ?deathTime .
    
    FILTER(EXISTS { ?algiersPerson dbo:decedent ?algiersDecedent })
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
232,21,val,Give me the native of London and child of the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child ?childName WHERE {
  # Identify John Pertwee by his birth name
  ?john a dbo:Person ;
        foaf:name ""John Devon Roland Pertwee""@en .
  
  # Find children of John Pertwee
  ?child dbo:parent ?john .

  # Filter for those native to London
  ?child dbo:nativePlace dbr:London .

  # Get the name of the child
  OPTIONAL { ?child foaf:name ?childName }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
645,15,val,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock and alma mater of Sylvia Pankhurst.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  # Find the commander of the Battle of Diamond Rock
  ?commander dbo:commandedBattle dbr:Battle_of_Diamond_Rock .
  
  # Find Sylvia Pankhurst's alma mater
  dbr:Sylvia_Pankhurst dbo:almaMater ?university .

  # Get the residence country of the commander
  ?commander dbo:nationality ?country .

  # Get the residence country of the university (assuming it represents a city or institution in a specific country)
  ?university dbo:locationCity ?city .
  ?city dbo:locatedInCountry ?country .

  FILTER(?country != dbr:None) # Ensure we have valid countries
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
488,24,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?administrationStart ?administrationEnd
WHERE {
  # Identify Yūki Hideyasu's father and his profession as a politician
  dbr:Yūki_Hideyasu dbo:father ?father .
  ?father rdf:type dbo:Politician .

  # Get the death place of Yūki Hideyasu's father
  ?father dbo:deathPlace ?deathPlace .

  # Find Emperor Go-Yōzei and his administration period
  dbr:Emperor_Go-Yōzei dbo:reignStart ?administrationStart ;
                       dbo:reignEnd ?administrationEnd .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
435,15,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?articleContent ?settlement ?town WHERE {
  # Find Article 62, Section IV of the Constitution of Iceland
  ?constitution dcterms:title ""Constitution of Iceland""@en .
  ?section dct:isPartOf ?constitution ;
           rdfs:label ""Article 62, Section IV""@en .
  ?articleContent dbo:textValue ?text .

  # Find territories administered by Iceland known as Land of Fire and Ice
  dbr:Iceland dbo:nationality dbr:Icelandic .
  ?settlement a dbo:Settlement ;
              dbo:country dbr:Iceland ;
              rdfs:label ?townLabel .
  FILTER (lang(?townLabel) = 'en')

  # Ensure the settlement is also recognized as a town
  ?town dbo:isPartOf ?settlement ;
        a dbo:Town .
}
```",3,6,4,2,2,2,3,28,0,0,1,0,0.0,0
838,15,val,"Give me the band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić and band member of Kerber.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band
WHERE {
  ?person dbo:bandMember ?zikaBand .
  ?zikaBand a dbo:Band ;
            a dbo:MusicalArtist ;
            a dbo:Group .

  ?person dbo:bandMember ?kerber .
  ?kerber rdfs:label ""Kerber""@en .

  FILTER EXISTS { ?person dbo:artist ?band }
  FILTER EXISTS { ?band a dbo:Band ; a dbo:MusicalArtist ; a dbo:Group }
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
161,35,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryConflict
WHERE {
  # Emilio Mola as commander of a military force
  ?force dbo:commander dbr:Emilio_Mola .
  
  # Francisco Franco involved in societal and military events
  ?event dbo:agent dbr:Franco_Francisco ;
         a ?eventType .

  FILTER (?eventType IN (dbo:MilitaryConflict, dbo:SocietalEvent)) .

  # Linking the force to an event involving Francisco Franco
  ?force dbo:event ?event .
  
  # Extracting commander and military conflict details
  OPTIONAL { ?force dbo:commander ?commander . }
  OPTIONAL { ?event dbo:name ?militaryConflict . }

}
```",4,8,5,2,2,3,3,71,0,0,34,0,0.0,0
421,12,val,Give me the native of Socialist Federal Republic of Yugoslavia and person born as Edin Dervišhalidović and band member of Senidah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace ?bandMember
WHERE {
  ?person dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?person dbo:memberOfBand ?bandMember . }
  FILTER (?person = dbr:Edin_Dervišhalidović)
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
391,41,val,"Give me the actor of All About the Andersons and native of the figure known as Hub City and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName WHERE {
  # Movie and its actors
  dbr:All_About_the_Andersons dbo:starring ?actor .
  
  # Actor's native city is Hub City
  ?actor dbo:nationality dbr:Hub_City .

  # Actor worked with Michael Ballhaus
  ?film dbo:director dbr:Michael_Ballhaus .
  ?film dbo:starring ?actor .

  # Get actor name
  ?actor rdfs:label ?actorName .
  
  FILTER (lang(?actorName) = 'en')
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
115,7,val,Give me the alma mater of the alumnus of National University of San Marcos and alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater1 ?almaMater2 WHERE {
  # Alma mater of an alumnus of National University of San Marcos
  ?person dbo:alumniOf dbp:National_University_of_San_Marcos .
  ?person dbo:almaMater ?almaMater1 .

  # Alma mater of Jorge Sotomayor Tello
  dbp:Jorge_Sotomayor_Tello dbo:almaMater ?almaMater2 .
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
303,12,val,Give me the party of Guillermo Endara and party of Arnulfo Arias and entity in Panama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?endaraParty ?ariasParty ?panamaEntity
WHERE {
  # Guillermo Endara's political party
  dbr:Guillermo_Endara dbo:party ?endaraParty .
  
  # Arnulfo Arias' political party
  dbr:Arnulfo_Arias_Madrid dbo:party ?ariasParty .

  # Entities related to Panama
  ?panamaEntity a dbo:Country ;
                rdfs:label ""Panama""@en .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
294,14,val,"Give me the resting place of Luke Lea (American politician, born 1879) and resting place of the architect of P. D. Houston Jr. House.","SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?lukeLeaBurialPlace ?architectName ?architectBurialPlace
WHERE {
  # Luke Lea's burial place
  dbr:Luke_Lea_(politician) dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1879)
  OPTIONAL { dbr:Luke_Lea_(politician) dbo:burialPlace ?lukeLeaBurialPlace . }

  # Architect of P. D. Houston Jr. House
  dbr:P._D._Houston_Jr._House dbo:architect ?architect .
  ?architect rdfs:label ?architectName .
  OPTIONAL { ?architect dbo:burialPlace ?architectBurialPlace . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
328,27,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governmentAgencyLeader
WHERE {
  # Identify Gustav Jonson
  ?gustavJonson a dbo:Person ;
                foaf:name ""Gustav Jonson""@en .

  # Find the leader of Gustav Jonson who is an office holder and politician
  ?leader a dbo:OfficeHolder, dbo:Politician ;
          dbo:positionHeldBy ?gustavJonson .

  # Identify the government agency led by this leader
  ?office a dbo:GovernmentAgency ;
          dbo:head ?leader .
  
  BIND(?leader AS ?governmentAgencyLeader)
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
778,12,val,"Give me the entity in United States and author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v0 <http://dbpedia.org/ontology/author> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?software ?author 
WHERE {
  ?software a dbo:Software .
  ?software dbo:country dbr:United_States .
  ?software dbo:creator ?person .
  ?person foaf:name ""Bill Joy"" .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
161,30,val,"Give me the military force of Rif War and military force of Spanish Civil War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rifWarForce ?rifWarCommander 
     ?civilWarForce ?civilWarCommander 
     ?emilioMolaRole
WHERE {
  # Military force and commander in the Rif War
  ?rifWarEvent dbo:eventType dbr:Rif_War .
  ?rifWarEvent dbo:militaryForce ?rifWarForce .
  OPTIONAL { ?rifWarForce dbo:commander ?rifWarCommander . }

  # Military force and commander in the Spanish Civil War
  ?civilWarEvent dbo:eventType dbr:Spanish_Civil_War .
  ?civilWarEvent dbo:militaryForce ?civilWarForce .
  OPTIONAL { ?civilWarForce dbo:commander ?civilWarCommander . }

  # Emilio Mola's role in a military force during an event
  ?emilioMola dbr:Emilio_Mola .
  ?militaryRole dbo:agent ?emilioMola ;
               dbo:militaryForce ?forceInEvent ;
               dbo:event ?eventInWhich .
  OPTIONAL { ?forceInEvent dbo:commander ?emilioMola . }
}
```",4,5,5,2,3,3,3,71,0,0,11,0,0.0,0
994,30,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtistRedTide ?bandMemberDonaldDokken ?associatedArtistSASlayer
WHERE {
  # Red Tide associated musical artist
  dbr:Red_Tide_(band) dbo:associatedMusicalArtist ?associatedArtistRedTide .

  # Donald Maynard Dokken's band member who is a musical artist
  dbr:Don_Dokken dbo:member ?bandMemberDonaldDokken .
  ?bandMemberDonaldDokken rdf:type dbo:MusicalArtist .

  # S.A. Slayer associated musical artist
  dbr:S._A._Slayer dbo:associatedMusicalArtist ?associatedArtistSASlayer .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
161,22,val,"Give me the military force of Rif War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Identify the Rif War event
  dbr:Rif_War dbo:participatingMilitaryUnit ?militaryForce .
  
  # Find the commander associated with this military force during the Rif War
  ?militaryForce dbo:commander ?commander .

  # Filter to ensure the commander is Emilio Mola
  FILTER(?commander = dbr:Emilio_Mola)
}
```",3,4,4,2,2,3,3,71,0,0,12,0,0.0,0
9,20,val,"Give me the alma mater of the awardee of Royal Medal and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater1 ?almaMater2
WHERE {
  # Find the alma mater of an awardee of the Royal Medal
  ?person dbo:awardReceived dbr:Royal_Medal .
  ?person dbo:almaMater ?almaMater1 .

  # Find the alma mater of John Alderdice, Baron Alderdice
  dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMater2 .
}
```

### Explanation

- **PREFIX**: Define common prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT**: Retrieve distinct alma maters to avoid duplicates.
- **WHERE Clause**:
  - The first pattern identifies a person who has received the Royal Medal and their alma mater.
  - The second pattern directly retrieves John Alderdice's alma mater using his resource identifier.

This query assumes that DBpedia contains structured data about these individuals and their educational backgrounds. Adjustments may be needed based on actual data availability and structure in DBpedia.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
360,17,val,"Give me the native of the death place, that is a settlement, of Winnie Madikizela-Mandela and reference to Manfred Mann.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native ?manfredMannReference
WHERE {
  # Find Winnie Madikizela-Mandela's death place
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find who was native to this place
  ?native dbo:nativePlace ?deathPlace .

  # Optionally, include reference to Manfred Mann
  OPTIONAL {
    ?manfredMannReference dbo:birthName ""Manfred Mann"" .
    ?manfredMannReference dbo:nativePlace ?deathPlace .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
378,33,val,"Give me the war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?relatedWar
WHERE {
  # Find wars associated with Carl Pontus Gahn
  ?gahn a dbo:MilitaryPerson ;
        foaf:name ""Carl Pontus Gahn"" .
  
  OPTIONAL {
    ?gahn dbo:militaryConflict ?war .
  }
  
  # Find wars related to the Peninsular War
  dbr:Peninsular_War dbo:relatedWar ?relatedWar .

  # Combine results to find any overlap or association
  OPTIONAL {
    ?war = ?relatedWar .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
996,13,val,Give me the force of the awardee of the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force
WHERE {
  # Find the elevation of Lac d'Avoriaz
  ?location a dbo:Mountain ;
            rdfs:label ""Lac d'Avoriaz""@en .
  
  OPTIONAL { 
    ?location dbo:elevationAboveSeaLevel ?elevation .
  }
  
  # Identify the awardee associated with this location or its elevation
  ?awardee dbp:elevation ?elevation ;
           a dbo:AwardRecipient .

  # Retrieve the force attribute for this awardee
  ?awardee dbo:force ?force .
}
```",3,3,4,3,1,3,2,20,0,0,11,0,0.0,0
281,34,val,Give me the war of the awardee of the award of Jonathon Band and war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find awards received by Jonathon Band
  ?award dbo:recipient dbr:Jonathon_Band .
  
  # Find wars associated with these awards
  ?award dbo:relatedWar ?war .

  # Find wars involving the New Zealand Army
  ?nzArmyEvent dbo:participatedIn ?war ;
               a dbo:MilitaryConflict ;
               dbo:participant dbr:New_Zealand_Army .
}
```",4,4,5,3,2,3,3,71,0,0,9,0,0.0,0
55,15,val,"Give me the band member of the producer, that is a band, of Used to Love Her and band of Newsted.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerBandMember ?metallicaMember
WHERE {
  # Find the producer of ""Used to Love Her""
  ?song dbo:composer ?producer .
  
  FILTER (str(?song) = ""Used_to_Love_Her"")

  # Check if the producer is a band
  ?producer rdf:type dbo:MusicalBand .

  # Get members of this producer-band
  ?producerMember dbo:member ?producer .
  ?producerMember dbo:band ?producerBand .

  FILTER (?producerBand = ?producer)

  BIND(?producerMember AS ?producerBandMember)

  # Find Metallica and its member Jason Newsted
  dbr:Metallica dbo:member ?metallicaMember .
  
  OPTIONAL {
    ?metallicaMember foaf:name ""Jason Newsted"" .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
981,12,val,"Give me the birth place of the person born, that is a beauty queen, as  and entity in Indonesia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/birthName> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:BeautyQueen ;
          dbo:country dbr:Indonesia .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```

### Explanation

- **Prefixes**: Used to simplify URIs for common properties and classes.
- **SELECT Clause**: Retrieves the birthplace of the person.
- **WHERE Clause**:
  - `?person a dbo:BeautyQueen` identifies individuals who are beauty queens.
  - `dbo:country dbr:Indonesia` ensures they are associated with Indonesia.
  - `OPTIONAL { ?person dbo:birthPlace ?birthPlace . }` retrieves the birthplace if available.

This query captures the essence of your question by focusing on beauty queens in Indonesia and retrieving their birthplaces.",3,4,4,2,2,3,2,20,0,0,19,0,0.0,0
534,11,val,"Give me the headquarter of Royal Dublin Society and birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters ?birthPlace
WHERE {
  dbr:Royal_Dublin_Society dbo:headquarterLocation ?headquarters .

  dbr:Desmond_FitzGerald_(Irish_politician) dbo:child ?child .

  ?child rdf:type dbo:Politician ;
         dbo:officeHolderOf ?office .
  
  ?child dbo:birthPlace ?birthPlace .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
161,42,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?emilioMolaCommander ?francoMilitaryForce ?societalEvent
WHERE {
  # Emilio Mola's commander role in the Spanish Civil War
  ?militaryForce1 dbo:commander dbr:Emilio_Mola .
  ?militaryForce1 dbo:event dbr:Spanish_Civil_War .

  # Francisco Franco's military force and societal event involvement
  ?militaryForce2 dbo:commander dbr:Franco .
  ?militaryForce2 dbo:event ?societalEvent .
  
  FILTER (?societalEvent != dbr:Spanish_Civil_War) # Ensure it's a different societal event

  # Linking military forces to the Spanish Civil War
  ?militaryForce1 dbo:militaryConflict dbr:Spanish_Civil_War .
  ?militaryForce2 dbo:militaryConflict dbr:Spanish_Civil_War .

  BIND(?militaryForce1 AS ?emilioMolaCommander)
  BIND(?militaryForce2 AS ?francoMilitaryForce)
}
```",5,9,6,2,3,3,3,71,0,0,32,0,0.0,0
801,35,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?book dbo:author ?writer .
  ?writer foaf:name ""The Shadow"" .
  ?writer dbo:profession dbr:Musical_artist .

  ?album dbo:composer ?writer ;
         rdfs:label ""40 Dayz & 40 Nightz""@en .

  ?writer dbo:associatedMusicalArtist ?artist .
  ?artist a dbo:MusicalArtist, dbo:Artist .
}
```",4,6,5,2,2,3,3,71,0,0,22,0,0.0,0
801,32,val,"Give me the professional in the alter ego of The Shadow and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
    ?alterEgo rdfs:label ""The Shadow""@en .
    ?professional dbo:alterEgo ?alterEgo ;
                  a dbo:MusicArtist .

    ?work dbo:producer ?professional ;
          dbo:musicalWork dbr:50_Cent ;
          a dbo:Songs .

}
```",4,7,5,2,2,3,3,71,0,0,27,0,0.0,0
534,12,val,Give me the birth place of Garret FitzGerald and headquarter of the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?headquarters
WHERE {
  dbr:Garrett_FitzGerald dbo:birthPlace ?birthPlace .

  OPTIONAL {
    dbr:RDS_Arena dbo:owner ?owner .
    ?owner dbo:headquarters ?headquarters .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
392,16,val,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and entity in Italy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@en .
  
  ?person dbo:nationality dbr:Italy .
  ?person dbo:residence ?settlement .

  ?settlement a dbo:Settlement ;
              dbo:country dbr:Italy ;
              dbo:province ?province .

  FILTER (lang(?name) = 'en')
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
421,18,val,Give me the person born as the birth name of Dino Merlin and native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Dino Merlin's birth name
  dbr:Dino_Merlin dbo:birthName ?birthName .
  
  # Find a person with the same birth name and native of SFR Yugoslavia
  ?person dbo:birthName ?birthName ;
          dbo:countryOfBirth dbr:Socialist_Federal_Republic_of_Yugoslavia .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
488,25,val,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tokugawaDeathPlace ?emperorNijoReignStart ?emperorNijoReignEnd
WHERE {
  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?tokugawaDeathPlace .

  # Emperor Go-Mizunoo's father is Emperor Nijō
  dbr:Emperor_Go-Mizunoo dbo:father dbr:Emperor_Nijo .
  
  # Administration period of Emperor Nijō
  dbr:Emperor_Nijo dbo:reign ?emperorNijoReignStart ;
                  dbo:endTime ?emperorNijoReignEnd .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
232,23,val,Give me the child of the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child
WHERE {
  ?person foaf:name ""Jon Pertwee"" .
  ?person dbo:birthName ?birthName .
  ?parent dbo:child ?child .
  FILTER(?parent = ?person)
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
488,18,val,Give me the birth place of Enomoto Takeaki and death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace ?administrationPeriod
WHERE {
  # Enomoto Takeaki's birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .

  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .

  # Emperor Go-Yōzei's administration period
  OPTIONAL {
    dbr:Emperor_Go-Yozei dbo:reign ?administrationPeriod .
  }
}
```",3,3,4,1,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
820,13,val,Give me the professional in the award of the author of Understanding Comics.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?book rdfs:label ""Understanding Comics""@en .
  ?book dbo:author ?professional .
  OPTIONAL { 
    ?award dbo:recipient ?professional .
    ?book dbo:awardsReceived ?award .
  }
}
```

This query does the following:
- Identifies the book ""Understanding Comics.""
- Retrieves its author.
- Optionally checks if there are any awards associated with both the book and the professional.",3,3,4,3,1,3,2,20,0,0,39650,0,0.0,0
378,25,val,Give me the war of Joaquín Blake and claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?claimToFame
WHERE {
  # Find Joaquín Blake's involvement in a war
  dbr:Joaqu%C3%ADn_Blake dbo:participatedIn ?war .
  
  # Find Joaquín Blake's claim to fame during the Great Siege of Gibraltar
  OPTIONAL {
    dbr:Great_Siege_of_Gibraltar dbo:commander ?commander .
    FILTER(?commander = dbr:Joaqu%C3%ADn_Blake)
    ?commander dbo:famousFor ?claimToFame .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
281,32,val,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceCountry ?war
WHERE {
  # Find Bob Heffron's birthplace that is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Find the war associated with Knight Grand Cross of the Order of the Bath awardee
  ?awardee dbo:award <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
  ?awardee dbo:participatedInWar ?war .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
492,41,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Frédéric-Georges Herr's involvement in a military conflict
  ?conflict dbo:participant dbr:Frédéric_Georges_Herr .
  
  # Commander of the military conflict
  ?conflict dbo:commander ?commander .

  # Joseph C. Satterthwaite's death location
  dbr:Joseph_C._Satterthwaite dbp:placeOfDeath dbr:Algiers .

  # Frédéric-Georges Herr's death location
  dbr:Frédéric_Georges_Herr dbp:placeOfDeath dbr:Algiers .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
232,43,val,"Give me the native of London and child of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?film ?conflict
WHERE {
  ?person dbo:birthPlace dbr:London .
  ?person dbo:parent dbr:Jon_Pertwee .
  ?person a dbo:Actor ;
          dbo:narrator true ;
          dbo:producer true .

  OPTIONAL { ?person dbo:claimToFame ?work . 
             ?work rdf:type ?type .
             FILTER (?type IN (dbr:Film, dbr:Military_conflict)) .
             BIND(?work AS ?film) }
  
  OPTIONAL { ?person dbo:claimToFame ?conflict .
             ?conflict rdf:type dbr:Military_conflict . }

}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
747,19,val,Give me the person born on the birth date of Pavlo Khudzik and band of Amba Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band
WHERE {
  # Find Pavlo Khudzik's birth date
  dbr:Pavlo_Khudzik dbo:birthday ?birthDate .

  # Find Amba Shepherd's band
  dbr:Amba_Shepherd dbo:memberOfBand ?band .

  # Find people born on the same date as Pavlo Khudzik
  ?person dbo:birthday ?sameBirthDate .
  
  FILTER (?sameBirthDate = ?birthDate)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
285,11,val,Give me the spouse of Aristotle Onassis and parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse
WHERE {
  ?aristotleOnassis a dbo:Person ;
                    foaf:name ""Aristotle Onassis""@en .
  
  ?spouse a dbo:Person ;
          foaf:mbox ?email ;  # Assuming spouse has an email or similar property for uniqueness
          dbo:spouse ?aristotleOnassis .

  ?tinaOnassisNiarchos a dbo:Person ;
                       foaf:name ""Tina Onassis Niarchos""@en ;
                       dbo:childOf ?spouse .
  
  ?child a dbo:Person ;
         dbo:parent ?tinaOnassisNiarchos ;
         dbo:parent ?spouse .
}
```

### Explanation:

- **PREFIX**: Define common prefixes for DBpedia ontology and FOAF vocabulary.
- **SELECT**: We are interested in the spouse of Aristotle Onassis.
- **WHERE**:
  - Identify Aristotle Onassis using his name.
  - Find a person who is married to him (`dbo:spouse`).
  - Ensure this person is also the parent of Tina's child, confirming they are indeed her spouse.

This query assumes that DBpedia has structured data for these relationships. Adjustments might be needed based on actual data availability and structure in DBpedia.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
547,43,val,Give me the resting place of James Burton (Egyptologist) and resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  # James Burton (Egyptologist)
  OPTIONAL {
    VALUES ?person { dbr:James_Burton_(Egyptologist) }
    ?person dbo:deathPlace ?restingPlace .
  }

  # Alan Cunningham
  OPTIONAL {
    VALUES ?person { dbr:Alan_Cunningham_(explorer) }
    ?person dbo:deathPlace ?restingPlace .
  }

  # Actor of the show with Emily Richard
  OPTIONAL {
    ?show dbo:starring dbr:Emily_Richard ;
          dbo:starring ?actor .
    ?actor dbo:deathPlace ?restingPlace .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
801,21,val,Give me the associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person rdfs:label ""Chris Taylor (music producer)""@en .
  
  OPTIONAL { 
    ?person foaf:alias ""The Shadow""@en .
  }
  
  ?person dbo:associatedMusicalArtist ?artist .
}
```",3,3,4,2,2,3,3,71,4,3,0,0.5714285714285714,1.0,0.7272727272727273
435,18,val,Give me the region of Greenwich Mean Time and work of the author of Iceland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?result <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?gmtRegion ?workTitle
WHERE {
  # Find the region associated with Greenwich Mean Time
  dbr:Greenwich_Mean_Time dbo:timeZoneIn dbr:Europe/London .
  dbr:Europe/London dbo:country dbr:United_Kingdom .
  dbr:United_Kingdom dbo:location dbr:Europe .

  # Find the author of ""Iceland""
  ?book dbo:title ""Iceland""@en ;
        dbo:author ?author .

  # Get works by this author
  ?work dbo:author ?author ;
        rdfs:label ?workTitle .
  
  FILTER (lang(?workTitle) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
328,20,val,Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:award dbr:Order_of_Suvorov .
  ?person dbo:commanderOf dbr:Ferenc_Szálasi .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
754,12,val,Give me the parent of the child of Ram Khamhaeng and parent of Loe Thai.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parent1 ?parent2 WHERE {
  # Part for Ram Khamhaeng's child's parent
  ?child dbp:childOfRamKhamhaeng dbpedia:Ram_Khamhaeng .
  ?child dbo:parent ?parent1 .

  # Part for Loe Thai's parent
  dbpedia:Loe_Thai dbo:parent ?parent2 .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
994,32,val,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?artist2 ?meshuggahArtist WHERE {
  # Part 1: Watchtower's associated artists and their associated artists
  {
    SELECT DISTINCT ?artist1 ?artist2 WHERE {
      dbr:Watchtower dbo:associatedMusicalArtist ?artist1 .
      ?artist1 dbo:associatedMusicalArtist ?artist2 .
    }
  }

  UNION

  # Part 2: Meshuggah's band members who are bands/groups
  {
    SELECT DISTINCT ?meshuggahArtist WHERE {
      dbr:Meshuggah dbo:bandMember ?member .
      ?member a dbo:Band ;
              a dbo:MusicalGroup ;
              a dbo:Organization .
      ?member dbo:associatedMusicalArtist ?meshuggahArtist .
    }
  }

  # Combine results
  VALUES (?artist1 ?artist2) {
    (SELECT DISTINCT ?artist1 ?artist2 WHERE {
      dbr:Watchtower dbo:associatedMusicalArtist ?artist1 .
      ?artist1 dbo:associatedMusicalArtist ?artist2 .
    })
  }
  
  FILTER(?artist2 = ?meshuggahArtist)
}
```",4,7,5,2,2,3,3,71,0,0,5,0,0.0,0
391,19,val,Give me the native of the figure known as Hub City and actor of The Departed.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/nickname> ""Hub City""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?native WHERE {
  # Boston as Hub City
  dbr:Boston a dbo:City ;
             rdfs:label ""Boston""@en .

  # The Departed movie
  dbr:The_Departed a dbo:Film ;
                   dbo:starring ?actor .

  # Actor's native place
  ?actor dbo:nativePlace ?native .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
161,18,val,Give me the commander in Biscay Campaign and military force of Spanish Civil War and military force of Rif War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?civilWarForce ?rifWarForce
WHERE {
  # Find the Biscay Campaign and its commander in the Spanish Civil War
  ?campaign a dbo:MilitaryCampaign ;
            dbo:partOf dbr:Spanish_Civil_War ;
            rdfs:label ""Biscay Campaign""@en .
  
  OPTIONAL {
    ?campaign dbo:commander ?commander .
  }
  
  # Find military forces involved in the Spanish Civil War
  ?civilWarForce a dbo:MilitaryUnit ;
                 dbo:partOf dbr:Spanish_Civil_War .

  # Find military forces involved in the Rif War
  ?rifWarForce a dbo:MilitaryUnit ;
               dbo:partOf dbr:Rif_War .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
48,13,val,"Give me the band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  # Find works produced by Shellback
  ?work dbo:recordProducer dbr:Shellback .
  
  # Identify the writer of these works
  ?work dbr:writer ?writer .

  # Determine the band associated with this writer
  ?writer dbo:band ?band .
}
```",3,4,4,3,1,3,2,20,0,0,922,0,0.0,0
54,23,val,Give me the child of the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild
WHERE {
    # Step 1: Identify Thinkhaya of Pagan
    ?thinkhaya dbo:birthPlace dbr:Pagan_(city) .
    
    # Step 2: Find children of Thinkhaya
    ?thinkhaya dbp:child ?child .

    # Step 3: For each child, find their father
    OPTIONAL { 
        ?child dbp:father ?father .
        
        # Step 4: For each father found, identify his children
        ?father dbp:child ?grandchild .
    }
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
435,19,val,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and region of Greenwich Mean Time and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?territory ?nickname ?timezone WHERE {
  ?president dbo:officeHolderOf dbr:Iceland_President .
  ?president dbo:positionTitle ""President of Iceland""@en .
  
  ?territory dbo:administrativeTerritory ?president ;
             a dbo:Settlement, dbo:Town ;
             dbp:nickName ""Land of fire and ice"" ;
             dbp:timeZone ""UTC±00:00"" .

}
```",4,7,5,2,3,2,3,28,0,0,1,0,0.0,0
314,14,val,Give me the awardee of the award of Sergei Makovetsky and person deceased at Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  # Find the award associated with Sergei Makovetsky
  ?award dbo:recipient ?awardee .
  ?award dbo:name ""Sergei Makovetsky""@en .

  OPTIONAL {
    # Ensure the awardee is a person who died in Madrid
    ?awardee dbo:deathPlace dbr:Madrid .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,15,val,"Give me the parent of Mieszko II Lambert and child of the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parentOfMieszkoII ?childOfChildRoyalty
WHERE {
  # Mieszko II Lambert's parent
  ?mieszko2 dbo:father|dbo:mother ?parentOfMieszkoII .
  VALUES ?mieszko2 { <http://dbpedia.org/resource/Mieszko_II_Lambert> }

  # Mlada's parent
  ?mlada dbo:father|dbo:mother ?parentOfMlada .
  VALUES ?mlada { <http://dbpedia.org/resource/Mlada_(abbess)> }

  # Child of Mlada's parent who is royalty
  ?royalChild dbo:child ?parentOfMlada ;
              rdf:type dbo:Monarch .

  # Child of the royal child
  ?childOfChildRoyalty dbo:child ?royalChild .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
303,17,val,"Give me the party of Arnulfo Arias and entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?country
WHERE {
  # Find Arnulfo Arias and his political party
  dbr:Arnulfo_Arias dbo:politicalParty ?party .

  # Find El Valle de Antón and its country
  dbr:El_Valle_de_Antón dbo:locatedInCountry ?country .
  
  FILTER (isLiteral(?country) = false) # Ensure the result is a country entity, not a literal
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
392,12,val,Give me the region of Central European Time and entity in Italy and province of Schio.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?entityInItaly WHERE {
  # Find the region associated with Central European Time (CET)
  ?timeZone a dbo:TimeZone ;
            rdfs:label ""Central European Time""@en .
  
  ?region dbo:timezone ?timeZone .

  # Find the entity in Italy related to Province of Schio
  ?province dbr:Province_of_Schio ;
            dbo:country dbr:Italy ;
            dbo:administrativeRegion ?entityInItaly .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
285,12,val,Give me the spouse of the professional in  and parent of Alexander Onassis.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse
WHERE {
  ?parent dbo:child ?alexander .
  ?alexander foaf:name ""Alexander Onassis""@en .

  ?parent foaf:mbox ?email . # Assuming we have a way to identify the parent uniquely

  OPTIONAL { 
    ?parent foaf:mbox ?parentEmail .
    ?spouse foaf:mbox ?parentEmail .
    ?spouse foaf:gender ?gender .
    FILTER(?gender = ""female"") # Assuming spouse is female
  }
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
492,22,val,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person dbo:deathPlace ?place1 .
  ?place1 rdfs:label ""French Algeria""@en .

  OPTIONAL { 
    ?person dbo:deathPlace ?place2 .
    ?place2 rdfs:label ""Algiers""@en .
  }

  FILTER EXISTS { ?person dbo:deathPlace ?place2 . ?place2 rdfs:label ""Algiers""@en }
}
```",3,4,4,2,2,3,3,71,16,0,0,1.0,1.0,1.0
16,32,val,Give me the spouse of the person born as Ted Martin McGinley and professional in the profession of Satomi Ishihara.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person foaf:name ""Ted Martin McGinley""@en .
  ?person dbo:spouse ?spouse .
  ?spouse dbo:profession dbr:Actor .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
378,35,val,Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commanderClaimToFame
WHERE {
  # Find Carl Pontus Gahn and his associated wars
  ?person a dbo:Person ;
          foaf:name ""Carl Pontus Gahn""@en ;
          dbo:nationality dbr:Sweden .

  OPTIONAL { 
    ?person dbo:participatedInWar ?war .
  }

  # Find the commander of the Great Siege of Gibraltar and their claim to fame
  ?commander a dbo:Person ;
             dbo:occupation dbr:Commander ;
             dbo:participatedInEvent dbr:Great_Siege_of_Gibraltar .

  OPTIONAL {
    ?commander dbo:famousFor ?commanderClaimToFame .
  }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
747,40,val,"Give me the band of Amba Shepherd and band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?ambaBand ?shenaBand ?person WHERE {
  # Amba Shepherd's band
  dbr:Amba_Shepherd dbo:musicalArtist ?ambaBand .

  # Shèna's band
  dbr:Shèna dbo:musicalArtist ?shenaBand .

  # Amba Shepherd's birthdate
  dbr:Amba_Shepherd dbp:birthday ?birthdate .

  # Person born on the same date as Amba Shepherd, is an athlete and a soccer player from Zolotonosha
  ?person dbo:birthDate ?sameBirthdate ;
          dbo:sport ?sport ;
          dbo:nationality dbr:Ukraine ; # Assuming nationality for location relevance
          dbp:placeOfBirth dbr:Zolotonosha .
  
  FILTER (?birthdate = ?sameBirthdate)
  FILTER EXISTS { ?person a dbo:Athlete . }
  FILTER EXISTS { ?sport rdfs:label ""Soccer""@en } 
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
783,14,val,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember
WHERE {
  # Identify Ebony Reigns and her properties
  dbr:Ebony_Reigns a dbo:Person ;
                   dbo:birthPlace ?birthPlace ;
                   rdf:type [ 
                     a dbo:Artist ; 
                     a dbo:MusicalArtist 
                   ] .

  # Find band members associated with Ebony Reigns
  OPTIONAL {
    ?bandMember dbo:member ?ebonyReigns .
    FILTER (?ebonyReigns = dbr:Ebony_Reigns)
  }
}
```",3,5,4,3,1,3,2,20,0,0,7,0,0.0,0
161,27,val,"Give me the commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:agent dbr:El_Director .
  ?force dbo:event ?event .
  ?force dbo:commander ?commander .
}
```",3,4,4,3,1,3,3,71,0,0,85,0,0.0,0
427,31,val,Give me the party of Giulio Andreotti and reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?andreottiPartyLabel ?pintoPartyName
WHERE {
  # Find Giulio Andreotti's political party
  dbr:Giulio_Andreotti dbo:party ?andreottiParty .
  ?andreottiParty rdfs:label ?andreottiPartyLabel .

  # Reference Michele Pinto's political party name
  OPTIONAL {
    dbr:Michele_Pinto dbo:party ?pintoParty .
    ?pintoParty rdfs:label ?pintoPartyName .
  }
}
```",4,4,5,3,2,3,3,71,0,5,2,0.0,0.0,0
54,25,val,"Give me the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfThadoMinsaw ?predecessorOfChild
WHERE {
  # Find the parent of Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Person ;
               foaf:name ""Thado Minsaw""@en ;
               dbo:placeOfBirth dbr:Prome .
  
  ?parentOfThadoMinsaw dbo:child ?thadoMinsaw .

  # Find the child of Thihapate of Mohnyin who is an office holder and royalty
  ?thihapate a dbo:Person ;
             foaf:name ""Thihapate""@en ;
             dbo:placeOfBirth dbr:Mohnyin .
  
  ?childOfThihapate dbo:parent ?thihapate ;
                   a dbo:Royalty, dbo:OfficeHolder .

  # Find the predecessor of this child
  ?predecessorOfChild dbo:succeededBy ?childOfThihapate .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
820,11,val,Give me the child of Jack Schwartzman and professional in the award of Scott McCloud.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?profession WHERE {
  # Find Jack Schwartzman and his child
  ?jack a dbo:Person ;
        foaf:name ""Jack Schwartzman"" .
  ?jack dbo:child ?child .

  # Find Scott McCloud's award-related profession
  ?scott a dbo:Person ;
         foaf:name ""Scott McCloud"" .
  ?award dbo:recipient ?scott .
  ?profession dbo:fieldOfActivity ?award .

  # Ensure the child is related to the same profession as the award
  ?child dbo:occupation ?profession .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
617,25,val,Give me the parent of the child of Antiochus (son of Antiochus III the Great) and spouse of Laodice IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Find a person who is the parent of Antiochus's child
  ?child dbo:father dbr:Antiochus_IV_(Seleucid_king) .
  ?child dbo:mother ?parent .

  # Ensure this person is also the spouse of Laodice IV
  ?parent dbo:spouse dbr:Laodice_IV .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
427,39,val,"Give me the party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?andreottiParty ?prodiBirthName ?prodiParty
WHERE {
  # Giulio Andreotti's party
  dbpedia:Giulio_Andreotti dbo:party ?andreottiParty .

  # Romano Prodi's birth name and party
  dbpedia:Romano_Prodi foaf:name ?prodiBirthName .
  dbpedia:Romano_Prodi dbo:party ?prodiParty .

  # Ensure both are politicians (office holders)
  FILTER EXISTS { dbpedia:Giulio_Andreotti a dbo:Politician }
  FILTER EXISTS { dbpedia:Romano_Prodi a dbo:Politician }
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
54,43,val,Give me the parent of the child of the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of Thinkhaya of Pagan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?result
WHERE {
  ?thadoMinsaw dbo:name ""Thado Minsaw""@en .
  ?parent dbo:child ?thadoMinsaw .

  ?thadoMinsaw dbo:parent ?grandParent .

  ?ameitta dbo:name ""Ameitta Thiri Maha Dhamma Dewi""@en .
  ?predecessor dbo:predecessor ?ameitta .

  ?thinkhaya dbo:name ""Thinkhaya""@en .
  ?child dbo:parent ?thinkhaya .

  ?result dbo:child ?thadoMinsaw .
  
  FILTER (?predecessor = ?result || ?child = ?result)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
184,38,val,Give me the parent of the child of Archduke Joseph Francis of Austria and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?grandChild1Parent ?grandGrandChild2
WHERE {
  # Archduke Joseph Francis of Austria's child and that child's parent
  ?child1 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  ?child1 dbo:parent ?grandChild1Parent .

  # Archduke Joseph Karl of Austria's grandchild
  ?child2 dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  ?child3 dbo:parent ?child2 .
  ?child3 dbo:parent ?grandGrandChild2 .
}
```",4,4,5,2,2,3,3,71,1,3,0,0.25,1.0,0.4
528,19,val,Give me the war of the military force of Battle of Pisagua and war of Orozimbo Barbosa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warName
WHERE {
  {
    # Find wars related to the Battle of Pisagua
    dbr:Battle_of_Pisagua dbo:partOf ?war .
    ?war rdfs:label ?warName .
    FILTER (lang(?warName) = 'en')
  }
  UNION
  {
    # Find wars involving Orozimbo Barbosa
    dbr:Orozimbo_Barbosa dbo:militaryConflict ?war .
    ?war rdfs:label ?warName .
    FILTER (lang(?warName) = 'en')
  }
}
ORDER BY ?warName",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
659,30,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in German campaign of 1813 and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  # Rutger Jan Schimmelpenninck's involvement in the German campaign of 1813 and Battle of Leipzig
  ?schimmelpenninck dbo:commanderOf [
    a dbo:MilitaryConflict ;
    dbo:participatedIn dbr:German_Campaign_of_1813 ;
    dbo:participatedIn dbr:Battle_of_Leipzig .
  ] .

  # Linking Schimmelpenninck to the military force
  ?schimmelpenninck dbo:militaryForce ?militaryForce .

  # Ensure Schimmelpenninck is the same entity in both contexts
  FILTER (?schimmelpenninck = dbr:Rutger_Jan_Schimmelpenninck)
}
```",4,7,5,2,3,3,3,71,0,0,6,0,0.0,0
801,31,val,Give me the producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?professionalRole
WHERE {
  # Find the producer of ""Westside Story"" (song)
  OPTIONAL {
    dbr:Westside_Story_(song) dbo:producer ?producer .
  }
  
  # Find the professional role associated with The Shadow's alter ego
  OPTIONAL {
    dbr:The_Shadow dbo:alterEgo ?alterEgo .
    ?alterEgo dbo:profession ?professionalRole .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
251,15,val,"Give me the death place of Laura Mancinelli and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/place> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceLaura ?warLocationMusnier
WHERE {
  # Laura Mancinelli's death place
  dbr:Laura_Mancinelli dbo:deathPlace ?deathPlaceLaura .

  # Louis François Félix Musnier's military conflict location
  dbr:Louis_François_Félix_Musnier dbo:militaryConflict ?militaryConflict .
  ?militaryConflict dbo:location ?warLocationMusnier .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
996,12,val,Give me the entity in the award of Ekrem Akurgal and force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?force
WHERE {
  # Find awards related to Ekrem Akurgal
  ?person rdfs:label ""Ekrem Akurgal""@en .
  ?person dbo:awardsReceived ?award .

  # Find military forces associated with Dagobert Sigmund von Wurmser
  ?person2 rdfs:label ""Dagobert Sigmund von Wurmser""@en .
  ?person2 dbo:militaryService ?force .
}
```",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
404,35,val,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?ernestAugustus a dbo:Duke ;
                  dbo:father ?father .
  
  ?father dbo:child ?ernestAugustus .

  ?ernestAugustus dbo:spouse ?spouse .
  
  ?spouse foaf:birthday ?birthday ;
          rdfs:label ""Princess Victoria Louise of Prussia""@en .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
92,33,val,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?associatedArtist
WHERE {
  ?person a dbo:Person .
  
  # Person is an actor in ""Return to Nuke 'Em High Volume 1""
  ?film dbo:starring ?person ;
        rdfs:label ""Return to Nuke 'Em High Volume 1""@en .

  # Person is a band member of ""Nevermore""
  ?bandMember dbp:member ?person .
  ?band rdfs:label ""Nevermore""@en ;
        dbo:member ?bandMember .

  # Retrieve associated musical artist
  OPTIONAL {
    ?person dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
232,29,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of London and child of Jon Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Sean Pertwee's details
  dbr:Sean_Pertwee a dbo:Actor ;
                   foaf:nativePlace dbr:London ;
                   foaf:parent dbr:Jon_Pertwee .

  # Works associated with Sean Pertwee (film and military conflict)
  ?work dbo:actor dbr:Sean_Pertwee .
  
  FILTER (
    {
      ?work a dbo:Film .
    } UNION {
      ?work a dbo:MilitaryConflict .
    }
  )

  # Return the actor
  BIND(dbr:Sean_Pertwee AS ?actor)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
161,34,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in Biscay Campaign.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  ?person dbo:decedentAt dbr:Francoist_Spain .
  ?person dbo:commanderIn dbr:Biscay_Campaign .

  ?militaryForce a dbo:MilitaryConflict ;
                 dbo:societalEvent true ;
                 dbo:event true ;
                 dbo:relatedTo ?person .
}
```",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
281,39,val,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryUnit ?officeHolder ?politician WHERE {
  ?militaryUnit a dbo:MilitaryUnit ;
                dbo:partOf dbr:New_Zealand_Army .

  ?profession dbo:field dbr:Military_conflict ;
              dbo:profession dbr:War_of_the_profession .

  ?professional dbo:occupation ?militaryUnit ;
                dbo:officeHolder ?officeHolder ;
                dbo:politician ?politician .

  ?officeHolder a dbo:OfficeHolder .
  ?politician a dbo:Politician .

  FILTER EXISTS { ?officeHolder dbo:country dbr:New_Zealand }
  FILTER EXISTS { ?politician dbo:country dbr:New_Zealand }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
77,15,val,Give me the force of Alexander I of Russia and war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?award ?war
WHERE {
  dbr:Aleksandr_I_of_Russia dbo:militaryRank ?force .
  dbr:Maxim_Grigorievich_Vlasov dbo:award ?award .
  ?award dbo:associatedWar ?war .
}
```",4,4,5,3,2,3,2,20,0,0,20,0,0.0,0
184,23,val,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent
WHERE {
  ?landmark a dbo:Settlement ;
            dbo:elevation ""96.0""^^xsd:float .
  
  ?native dbo:nativePlace ?landmark .
  
  ?native dbo:parent ?parent .
}
```",3,4,4,3,1,3,3,71,0,0,31,0,0.0,0
404,28,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?spouse WHERE {
  # Ernest Augustus, Crown Prince of Hanover's child who is a parent to Prince Ernest Augustus (born 1914)
  ?child dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  ?child dbo:child dbr:Prince_Ernest_Augustus_of_Hanover .

  # Spouse of the child is Princess Victoria Louise of Prussia
  ?child dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
487,12,val,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of 2022 Vermont House of Representatives election.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://dbpedia.org/property/governor> ?v0 . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administrationRole ?country
WHERE {
    # Find Philip Brian Scott as a soccer player
    ?person dbo:name ""Philip Brian Scott""@en .
    ?person dbo:sport dbr:Soccer .

    # Find his administration role related to the Vermont House of Representatives election in 2022
    OPTIONAL { 
        ?person dbp:office ?administrationRole .
        ?administrationRole dbo:election dbr:Vermont_House_of_Representatives_election,_2022 .
    }

    # Get the country associated with the election
    ?election dbo:country ?country .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
666,12,val,Give me the player in Steve Bruce and figure known as the nickname of England national beach soccer team.,SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v0 . <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?steveBruce a dbo:Person ;
              foaf:name ""Steve Bruce""@en .
  
  ?steveBruce dbo:employee ?team .
  ?team dbo:member ?player .

  dbr:England_national_beach_soccer_team dbo:nickname ?nickname .

  ?player foaf:name ?nickname .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
994,23,val,Give me the associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?thirdArtist
WHERE {
  # Find the first associated artist of Watchtower
  ?band a dbo:Band ;
        foaf:name ""Watchtower""@en .
  
  ?band dbo:associatedMusicalArtist ?firstArtist .

  # Find the second associated artist of the first artist
  ?firstArtist a dbo:MusicArtist ;
               dbo:associatedMusicalArtist ?thirdArtist .
}
```",3,3,4,3,1,3,3,71,0,0,16,0,0.0,0
701,33,val,Give me the parent of Meritamen and parent of the child of the child of Seti I.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfMeritamen ?grandGrandChild ?parentOfGrandGrandChild
WHERE {
  # Find the parent of Meritamen
  ?meritamen dbo:spouse|dbo:child ?parentOfMeritamen .
  FILTER (str(?meritamen) = ""Meritamen"")

  # Find Seti I's child, then that child's child (grand-grand-child), and their parent
  ?setiI dbo:child ?childOfSeti .
  ?childOfSeti dbo:child ?grandChildOfSeti .
  ?grandChildOfSeti dbo:parent ?parentOfGrandGrandChild .

  FILTER (str(?setiI) = ""Seti I"")
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
285,13,val,Give me the parent of the child of the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent
WHERE {
  ?aristotleOnassis a dbo:Person ;
                    foaf:name ""Aristotle Onassis""@en .
  
  ?aristotleOnassis dbo:spouse ?spouse .

  OPTIONAL { 
    ?child dbo:parent ?spouse .
    ?child dbo:parent ?parent .
  }
}
```",3,3,4,3,1,3,2,20,4,0,1,1.0,0.8,0.888888888888889
994,35,val,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?watchtowerAssociatedArtist ?associatedArtistOfWatchtower
WHERE {
  # Find band members of Dokken
  dbr:Dokken a dbo:Band ;
             dbo:member ?bandMember .

  # Find associated musical artists of Watchtower
  dbr:Watchtower a dbo:Band ;
                 dbo:associatedMusicalArtist ?watchtowerAssociatedArtist .

  # Find associated musical artists of the associated artists of Watchtower
  ?watchtowerAssociatedArtist dbo:associatedMusicalArtist ?associatedArtistOfWatchtower .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
328,36,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and awardee of Order of Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leader
WHERE {
  # Find Gustav Jonson's office
  ?office dbo:head dbr:Gustav_Jonson ;
          a dbo:GovernmentAgency .

  # Identify the leader of that office who is an office holder and politician
  ?leader dbo:positionHeld ?office ;
          a dbo:OfficeHolder, dbo:Politician .

  # Ensure the leader has received the Order of Suvorov
  ?award dbo:recipient ?leader ;
         rdfs:label ""Order of Suvorov""@en .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
312,7,val,"Give me the entity in Italy and entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement ?regionState
WHERE {
  # Settlement in Italy that is Italian and associated with Democratic Party (Italy)
  ?settlement a dbo:Settlement ;
              dbo:country dbr:Italy ;
              dbo:language dbr:ItalianLanguage ;
              dbp:party dbr:Democratic_Party_(Italy) .

  # Region and State in administration, also associated with Democratic Party (Italy)
  ?regionState a dbo:Region , dbo:State ;
               dbo:country dbr:Italy ;
               dbo:language dbr:ItalianLanguage ;
               dbp:party dbr:Democratic_Party_(Italy) .
}
```",3,7,4,2,2,2,2,9,0,0,587,0,0.0,0
747,27,val,Give me the band of the person born as the persona of Shèna.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band
WHERE {
  ?person dbo:birthName ""Shèna""@en .
  ?person dbo:band ?band .
}
```",3,3,4,3,1,3,3,71,0,0,8,0,0.0,0
391,44,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus and native of Compton, California.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?movie ?actor
WHERE {
  ?movie a dbo:Film ;
         dbo:genre/dbo:subClassOf* dbo:TelevisionShow ;
         dbo:starring dbr:Roz_Ryan .

  ?work dbo:claimToFame dbr:Michael_Ballhaus .
  ?movie dbo:basedOn ?work .

  ?actor dbo:nativePlace dbr:Compton,_California ;
         dbo:actedIn ?movie .

  OPTIONAL { ?movie a dbo:Work . }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
232,18,val,Give me the native of London and child of Jon Pertwee and actor of Dog Soldiers (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"SELECT ?person WHERE {
  ?person dbo:nativePlace dbr:London .
  ?child dbo:parent dbr:Jon_Pertwee .
  ?actor dbo:film dbr:Dog_Soldiers_(2002_film) .
  
  FILTER (?person = ?child && ?person = ?actor)
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT**: We are interested in the person who satisfies all conditions.
- **WHERE**:
  - `?person dbo:nativePlace dbr:London`: Finds people native to London.
  - `?child dbo:parent dbr:Jon_Pertwee`: Finds children of Jon Pertwee.
  - `?actor dbo:film dbr:Dog_Soldiers_(2002_film)`: Finds actors in the film ""Dog Soldiers"".
- **FILTER**: Ensures that the person is both a child of Jon Pertwee and an actor in Dog Soldiers.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
547,27,val,Give me the resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?awardee ?restingPlace WHERE {
  ?award dbo:recipient ?awardee .
  ?award dbo:relatedTo dbr:Gerald_Graham .
  OPTIONAL { ?awardee dbo:deathPlace ?restingPlace . }
}",3,3,4,3,1,3,3,71,0,0,704,0,0.0,0
16,19,val,Give me the spouse of the person born as Ted Martin McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person dbo:birthName ""Ted Martin McGinley""@en .
  ?person dbo:profession dbr:Actress .
  ?person dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
285,15,val,Give me the spouse of Aristotle Onassis and parent of the child of the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?child
WHERE {
  ?onassis a dbo:Person ;
           foaf:name ""Aristotle Onassis""@en .
  
  ?onassis dbo:spouse ?spouse .

  ?spouse dbo:child ?child .
}
```",4,4,5,3,2,3,2,20,2,5,0,0.2857142857142857,1.0,0.4444444444444445
696,12,val,Give me the birth place of Tim Brennan and landmark at elevation of the award of Nie Rongzhen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?landmark
WHERE {
  OPTIONAL {
    dbr:Tim_Brennan dbo:birthPlace ?birthPlace .
  }

  OPTIONAL {
    dbr:Nie_Rongzhen dbo:award ?award .
    ?award dbo:elevation ?elevation .
    ?location dbo:elevation ?elevation .
    ?location dbo:landmark ?landmark .
  }
}
```",3,3,4,2,2,3,2,20,1,0,0,1.0,1.0,1.0
328,37,val,Give me the leader of People's Commissariat of Defense of the Soviet Union and commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?commanderRole
WHERE {
  # Find the leader of People's Commissariat of Defense
  ?person dbo:position ""People's Commissar for Defence""@en .
  ?person rdfs:label ?leader .

  OPTIONAL {
    # Find commander role in Budapest
    ?person dbo:role ?commanderRole .
    ?event dbo:location dbr:Budapest .
    ?event dbo:participant ?person .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
356,12,val,"Give me the player in 2015 Sacramento Republic FC season and team of the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?result <http://dbpedia.org/ontology/manager> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?team ?role
WHERE {
  ?player a dbo:SoccerPlayer ;
          dbo:nationality dbr:Wolverhampton ;
          dbo:managerOf ?team .
  
  ?team dbo:season ""2015""^^xsd:string .

  OPTIONAL { ?player dbo:position ?role . }
  
  FILTER EXISTS { 
    ?player dbo:memberOfTeam ?sacramentoRepublic .
    ?sacramentoRepublic dbp:name dbr:Sacramento_Republic_FC ;
                       dbp:year ""2015""^^xsd:string
  }

  OPTIONAL {
    ?player dbo:managerOf ?managedTeam .
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
492,18,val,Give me the commander in Franco-Hova Wars and person decedent at French Algeria and person decedent at Algiers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?deathPlaceAlgeria ?deathPlaceAlgiers
WHERE {
  # Find commanders in Franco-Hova Wars
  ?conflict a dbo:MilitaryConflict ;
            dbo:commander ?commander .
  
  FILTER(CONTAINS(LCASE(STR(?conflict)), ""franco-hova wars""))

  OPTIONAL {
    ?person dbr:French_Algeria#deceasedAt ?deathPlaceAlgeria .
    ?commander foaf:name ?nameCommander .
    ?person foaf:name ?nameCommander .
  }
  
  OPTIONAL {
    ?person dbr:Algiers#deceasedAt ?deathPlaceAlgiers .
    ?commander foaf:name ?nameCommander .
    ?person foaf:name ?nameCommander .
  }
}
```

- **Explanation**:
  - We start by selecting distinct commanders involved in the Franco-Hova Wars.
  - The `FILTER` function is used to ensure we are only considering conflicts related to the Franco-Hova Wars.
  - Two `OPTIONAL` clauses check if these commanders were also deceased at French Algeria or Algiers, linking them via their names.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
55,14,val,"Give me the band member of Guns N' Roses and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?gnrMember ?bandOfBandMember ?sfsMember
WHERE {
  # Find a member of Guns N' Roses
  ?gnrMember dbo:memberOf dbr:Guns_N%27_Roses .
  
  # Check if this member is part of another band or group
  OPTIONAL { 
    ?gnrMember dbo:memberOf ?bandOfBandMember .
    
    # Ensure the other band/group has members who are also in San Francisco Symphony
    ?sfsMember dbo:memberOf dbr:San_Francisco_Symphony ;
               dbo:memberOf ?bandOfBandMember .
  }
}
```

This query attempts to find a member of Guns N' Roses (`?gnrMember`) and checks if they are part of another band or group (`?bandOfBandMember`). It then looks for members of the San Francisco Symphony (`?sfsMember`) who are also in that same band/group.",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
16,30,val,Give me the person born as the birth name of Gigi Rice and professional in Actress and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Gigi Rice"" .
  ?person dbo:profession dbr:Actress .
  ?person dbo:spouse dbr:Ted_McGinley .
}
```

This query does the following:
- Uses `dbo:birthName` to find the person with the birth name Gigi Rice.
- Checks if this person has a profession of Actress using `dbo:profession`.
- Confirms that this person is married to Ted McGinley using `dbo:spouse`.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
92,44,val,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of the person born as Joseph Michael Furney and band member of Nevermore.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist1 ?band2 WHERE {
  # Find Jim Sheppard's associated musical artist
  OPTIONAL {
    ?person1 a dbo:Person ;
             foaf:name ""Jim Sheppard"" .
    ?person1 dbo:musicalArtist ?artist1 .
  }
  
  # Find Joseph Michael Furney's band, specifically Nevermore
  OPTIONAL {
    ?person2 a dbo:Person ;
             foaf:name ""Joseph Michael Furney"" .
    ?person2 dbo:bandMember ?band2 .
    FILTER (str(?band2) = str(dbr:Nevermore))
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
404,23,val,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:Monarch ;
          foaf:name ""Victoria Louise of Prussia""@en .
  OPTIONAL { ?person foaf:birthName ?birthName . }
  ?person dbo:spouse ?spouse .
}
```

This query assumes:
- The person is identified by the name ""Victoria Louise of Prussia.""
- We are interested in her spouse.
- The `foaf:birthName` property is used to capture the birth name, though it's optional here as we're primarily identifying by known name.",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
161,40,val,"Give me the commander in Biscay Campaign and military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryForce ?event ?conflict ?decedent
WHERE {
  # Find the commander of the Biscay Campaign
  ?campaign dbo:partOf dbr:Spanish_Civil_War ;
            dbo:commander ?commander .
  
  FILTER regex(str(?campaign), ""Biscay"", ""i"") .

  # Identify military forces involved in the Spanish Civil War
  ?militaryForce dbo:participatedIn dbr:Spanish_Civil_War .

  # Find societal events, events, and conflicts related to a decedent at Francoist Spain
  ?event dbo:relatedEvent ?conflict ;
         dbo:decedent ?decedent .
  
  FILTER regex(str(?event), ""societal"", ""i"") .
  FILTER regex(str(?conflict), ""military conflict"", ""i"") .

  # Ensure the decedent is associated with Francoist Spain
  ?decedent dbo:diedAt dbr:Francoist_Spain .
}
```",5,8,6,3,3,3,3,71,0,0,3,0,0.0,0
184,19,val,Give me the parent of the native of Budapest and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?person dbo:nativePlace dbr:Budapest .
  ?child dbo:childOf dbr:Archduke_Joseph_August_of_Austria .
  FILTER (?person = ?child)
  ?child dbo:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
303,14,val,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Guillermo Endara.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity
WHERE {
  # Find the country of El Valle de Antón
  dbr:El_Valle_de_Antón dbo:country ?country .

  # Find Guillermo Endara's political party or affiliation
  dbr:Guillermo_Endara dbo:partyAffiliation ?party .
  
  # Ensure the entity is a country and matches both conditions
  ?entity rdf:type dbo:Country ;
          rdfs:label ?label .
  
  FILTER (?country = ?entity)
  OPTIONAL { ?party dbo:member ?guillermoEndara . }
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
645,12,val,Give me the alma mater of the child of Richard Pankhurst and entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater
WHERE {
  ?child dbo:parent dbr:Richard_Pankhurst .
  ?child dbo:almaMater ?almaMater .
  ?almaMater dbo:location dbr:United_Kingdom .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
701,22,val,Give me the spouse of the father of Merneptah and parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?merneptah dbo:father ?father .
  ?father dbo:spouse ?spouse .

  OPTIONAL { ?meritamen dbo:parent ?father . }
  
  FILTER (?merneptah = dbpedia:Merneptah)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
492,43,val,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at French Algeria and person decedent at Algiers.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderInConflict ?conflictName
WHERE {
  # Find the commander in the Battle of Verdun
  ?battle dbr:Battle_of_Verdun .
  ?battle dbo:commander ?verdunCommander .

  # Find a military conflict involving this commander
  ?conflict dbo:commander ?verdunCommander ;
            rdf:type dbo:MilitaryConflict, dbo:Event ;
            rdfs:label ?conflictName .

  # Ensure the commander is linked to a person who died in both French Algeria and Algiers
  ?person dbo:deathPlace dbr:French_Algeria ;
          dbo:deathPlace dbr:Algiers .
  ?verdunCommander dbo:associatedWith ?person .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
77,13,val,Give me the war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warName
WHERE {
  # Find the award received by Maxim Grigorievich Vlasov
  ?award dbo:recipient dbr:Maxim_Grigorievich_Vlasov .
  
  OPTIONAL {
    # Check if there is a war associated with this award
    ?award dbo:relatedWar ?war .
    ?war rdfs:label ?warName .
    FILTER (lang(?warName) = 'en')
  }
}
```

### Explanation

- **PREFIX**: Define common prefixes for DBpedia ontology and resources.
- **SELECT**: We are interested in the name of the war (`?warName`).
- **WHERE**:
  - Identify the award received by Maxim Grigorievich Vlasov using `dbo:recipient`.
  - Use an `OPTIONAL` clause to find if there is a related war for this award.
  - Filter results to ensure the war name is in English.

This query assumes that awards have a direct relationship with wars, which might not always be explicitly defined. Adjustments may be needed based on actual data availability and relationships in DBpedia.",3,3,4,3,1,3,2,20,0,0,436,0,0.0,0
701,44,val,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah and parent of Meritamen.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Ramesses II is the parent of Merneptah
  dbr:Ramesses_II dbo:child dbr:Merneptah .

  # Merneptah is the parent of Meritamen
  dbr:Merneptah dbo:child dbr:Meritamen .

  # Find Ramesses II's spouse
  dbr:Ramesses_II dbo:spouse ?spouse .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
801,42,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of The Shadow and producer of Westside Story (song).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?writer dbo:work ?album .
  ?album rdfs:label ""40 Dayz & 40 Nightz""@en .

  ?writer foaf:name ?name .
  FILTER EXISTS { ?writer dbo:alterEgo dbr:The_Shadow } .

  ?writer dbo:producerOfSong ?song .
  ?song rdfs:label ""Westside Story (song)""@en .

  ?writer a dbo:MusicalArtist ;
          a dbo:Artist .

  BIND(?writer AS ?artist)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
328,21,val,"Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?award
WHERE {
  # Find the leader of People's Commissariat of Defense
  ?leader dbo:positionTitle ""People's Commissar for Defence""@en .
  
  # Ensure this person received an award from Bruce Fraser, 1st Baron Fraser of North Cape
  ?leader dbo:awardsReceived dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .

  OPTIONAL {
    ?award dbo:recipient ?leader .
    FILTER (?award != dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,37,val,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  # Find Sherry Hormann's spouse
  dbr:Sherry_Hormann dbo:spouse ?spouse .

  # Ensure the spouse is an actor in ""All About the Andersons""
  ?spouse dbo:profession dbr:Actor .
  ?spouse dbo:film dbr:All_About_the_Andersons .

  # Identify the spouse's claim to fame (most notable work)
  ?spouse dbo:notableWork ?claimToFame .

  # Find the actor of that claim to fame
  ?claimToFame dbo:actor ?actor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
365,7,val,"Give me the band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter and reference to The Blasters.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?role WHERE {
  # Find members of The Blasters band
  ?band a dbo:Band ;
        dbo:musicalArtist dbr:The_Blasters .
  
  # Identify individuals associated with the band in various roles
  ?band dbo:member ?person .

  # Check if the person is involved as an artist, vocalist, musician, or songwriter
  OPTIONAL { ?person dbo:occupation dbr:Vocalist . }
  OPTIONAL { ?person dbo:occupation dbr:Musician . }
  OPTIONAL { ?person dbo:occupation dbr:Singer-songwriter . }

  # Ensure the person is a professional in these roles
  FILTER EXISTS {
    ?person dbo:profession dbr:Artist .
  }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
339,14,val,Give me the father of the child of the parent of Princess Olga of Greece and Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?olga dbo:birthName ""Princess Olga of Greece and Denmark""@en .
  
  ?parent dbo:child ?olga .
  
  ?sibling dbo:parent ?parent .
  
  ?child dbo:parent ?sibling .
  
  ?child dbo:father ?father .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
360,18,val,Give me the reference to the author of Blinded by the Light and native of Johannesburg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""Blinded by the Light""@en .
  
  OPTIONAL { 
    ?author dbo:birthPlace dbr:Johannesburg .
  }
  
  FILTER (lang(?bookLabel) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
345,11,val,Give me the figure known as the nickname of FC Vaduz and team of Alessandro Mangiarratti.,SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . ?result <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  # Retrieve the nickname of FC Vaduz
  dbr:FC_Vaduz dbo:nickname ?nickname .
  
  # Ensure Alessandro Mangiarratti is associated with FC Vadudz
  OPTIONAL { 
    ?player foaf:name ""Alessandro Mangiarratti""@en ;
            dbo:team dbr:FC_Vaduz .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
303,15,val,"Give me the party of the commander, that is a politician, in United States invasion of Panama and party of Arnulfo Arias.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderParty ?arnulfoAriasParty
WHERE {
  # Find the commander of the United States invasion of Panama
  ?invasion dbo:commander ?commander .
  FILTER(CONTAINS(LCASE(STR(?invasion)), ""united states invasion of panama"")) .

  # Ensure the commander is a politician and get their party
  ?commander dbo:politicalParty ?commanderParty .
  FILTER EXISTS { ?commander rdf:type dbo:Politician } .

  # Find Arnulfo Arias and his political party
  dbr:Ari_Norberto_Arias_Monge dbo:alias dbr:Arnulfo_Arias .
  dbr:Arnulfo_Arias dbo:politicalParty ?arnulfoAriasParty .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
391,18,val,"Give me the actor of The Departed and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie1 rdfs:label ""The Departed""@en .
  ?movie2 rdfs:label ""All About the Andersons""@en .
  
  ?actor dbo:starring ?movie1 ;
         dbo:birthPlace dbr:Compton,_California .

  FILTER NOT EXISTS { ?actor dbo:starring ?movie2 }
}
```

This query does the following:
- Identifies movies with labels ""The Departed"" and ""All About the Andersons"".
- Finds an actor who starred in ""The Departed"" and is a native of Compton, California.
- Ensures that this actor did not star in ""All About the Andersons"".",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
465,7,val,Give me the administration of Czech Pirate Party and death place of the native of Prague.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?deathPlace
WHERE {
  # Find administration of Czech Pirate Party
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Czech Pirate Party""@en .
  
  OPTIONAL {
    ?member dbo:memberOf ?party ;
            dbo:position ?administration .
    FILTER (lang(?administration) = 'en')
  }
  
  # Find death place of a native of Prague
  ?person dbo:birthPlace dbr:Prague ;
          dbo:deathPlace ?deathPlace .
}
```",3,3,4,2,2,2,2,9,1,253,0,0.003937007874015748,1.0,0.00784313725490196
92,27,val,Give me the band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band
WHERE {
  ?person a dbo:MusicArtist ;
          foaf:name ""Joseph Michael""@en .
  
  OPTIONAL { 
    ?person dbo:birthName ?birthName .
  }
  
  ?person dbo:band ?band .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
392,18,val,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of Central European Time.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?province ?region
WHERE {
  ?person dbo:birthName ""Sebastiano Bianchetti""@en .
  
  ?person dbo:nationality dbr:Italy .
  ?person dbo:residence ?settlement .
  ?settlement a dbo:Settlement .

  OPTIONAL { 
    ?settlement dbo:locatedInAdministrativeArea ?province .
  }
  
  OPTIONAL {
    ?province dbo:partOfRegion ?region .
    ?region dbo:timeZone dbr:Central_European_Time_Zone .
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
626,14,val,Give me the awardee of the award of the military force of Battle of Borodino.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  # Find an award related to the Battle of Borodino
  ?award dbo:relatedEvent dbr:Battle_of_Borodino .
  
  # Identify the awardee of that award
  ?award dbo:recipient ?awardee .
}
```

This query assumes there is a direct relationship between awards and events in DBpedia, which may need adjustment based on actual data availability. The `dbo:relatedEvent` predicate is used hypothetically to link an award to the Battle of Borodino.",3,3,4,3,1,3,2,20,0,0,7855,0,0.0,0
392,17,val,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and province of Schio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?regionAguilar ?eventAguilar ?regionSchio ?eventSchio
WHERE {
  # For Aguilar de Segarra
  dbr:Aguilar_de_Segarra dbo:timeZone ?tzAguilar .
  OPTIONAL { ?tzAguilar dbo:wikiPageRedirects ?redirectAguilar . }
  OPTIONAL { ?redirectAguilar dbo:region ?regionAguilar . }
  OPTIONAL {
    ?eventAguilar dbo:location ?tzAguilar ;
                  a dbo:Sport .
  }

  # For Schio
  dbr:Schio dbo:timeZone ?tzSchio .
  OPTIONAL { ?tzSchio dbo:wikiPageRedirects ?redirectSchio . }
  OPTIONAL { ?redirectSchio dbo:region ?regionSchio . }
  OPTIONAL {
    ?eventSchio dbo:location ?tzSchio ;
                a dbo:Sport .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
328,31,val,Give me the commander in Eastern Front (World War II) and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName
WHERE {
  ?person dbo:commanderOf dbr:Eastern_Front_(World_War_II) .
  ?person dbo:awardeeOf dbr:Award_for_Volcano_and_Ryukyu_Islands_campaign .

  ?person rdfs:label ?personName .
  FILTER (lang(?personName) = 'en')
}
```

This query assumes:
- `dbo:commanderOf` is the property linking a person to their command role.
- `dbo:awardeeOf` links a person to an award they received.",4,4,5,3,2,3,3,71,0,0,5,0,0.0,0
55,19,val,"Give me the band member of Metallica and band of Newsted and band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?metallicaMember ?newstedBand ?producerBand
WHERE {
  # Metallica members
  ?metallicaMember dbo:memberOf dbr:Metallica .
  
  # Jason Newsted's band after Metallica
  OPTIONAL {
    ?newstedBand dbo:bandMember dbr:Jason_Newsted ;
                 dbo:genre ?genre .
  }
  
  # Producer of ""Used to Love Her"" who is also a band
  OPTIONAL {
    ?album dbo:producer ?producer .
    ?producer rdfs:label ?producerLabel .
    FILTER(CONTAINS(LCASE(?producerLabel), ""used to love her""))
    
    ?producerBand dbo:bandMember ?producer ;
                  dbo:genre ?genre2 .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
528,43,val,Give me the war of Irene Morales and war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warOfIreneMorales ?warOfCommander ?forceNarcisoCampero WHERE {
  # War of Irene Morales
  ?warOfIreneMorales dbo:participated Irena_Morales ;
                     dbo:date ?date1 .
  
  # War of the Commander
  ?warOfCommander dbo:commandedBy ?commander ;
                  dbo:date ?date2 .

  # Force of Narciso Campero
  ?forceNarcisoCampero dbo:leader dbr:Narciso_Campero ;
                       dbo:participatedIn ?war .
  
  FILTER (?date1 >= ""1909-01-01""^^xsd:date && ?date1 <= ""1909-12-31""^^xsd:date)
  FILTER (?date2 >= ""1909-01-01""^^xsd:date && ?date2 <= ""1909-12-31""^^xsd:date)
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
184,27,val,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandparentParent
WHERE {
  # Step 1: Identify Archduchess Margaret of Austria
  ?margaret a dbo:Person ;
            foaf:name ""Margaret of Austria"" ;
            dbo:birthYear ""1925"" .

  # Step 2: Find her parent
  ?margaret dbo:parent ?parent .

  # Step 3: Find the child of that parent (excluding Margaret)
  ?child dbo:parent ?parent .
  FILTER (?child != ?margaret)

  # Step 4: Determine the parent of that child
  ?child dbo:parent ?grandparentParent .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
281,28,val,Give me the entity in Colony of New Zealand and war of New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity
WHERE {
  ?entity dbo:country dbr:New_Zealand . # Colony of New Zealand
  ?war dbo:participatingMilitaryUnit dbr:New_Zealand_Army .
  ?entity dbo:participatedInWar ?war .
  ?awardee dbo:title ""Knight Grand Cross of the Order of the Bath""@en .
  ?awardee dbo:recipient ?entity .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
767,43,val,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to  and entity in Baden-Württemberg.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMaterName WHERE {
  ?person a dbo:Person ;
          foaf:name ""George Kilbon Nash""@en .
  
  ?person dbo:almaMater ?institution .
  
  ?institution rdfs:label ?almaMaterName ;
               dbp:location ?location .

  OPTIONAL { 
    ?location rdfs:label ?locationLabel .
    FILTER (CONTAINS(LCASE(?locationLabel), ""baden-württemberg""))
  }
}
ORDER BY ?almaMaterName
```

### Explanation

- **PREFIX**: Define common prefixes for DBpedia ontology and properties.
- **SELECT DISTINCT**: Ensure unique alma mater names are returned.
- **WHERE Clause**:
  - Identify George Kilbon Nash using `foaf:name`.
  - Retrieve the alma mater with `dbo:almaMater`.
  - Link the institution to a location, checking if it relates to Baden-Württemberg.
- **OPTIONAL**: Use to include location information without failing if not present.
- **FILTER**: Check for ""baden-württemberg"" in the location label.
- **ORDER BY**: Sort results alphabetically by alma mater name.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
783,15,val,Give me the band member of Ebony Reigns and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist
WHERE {
  # Find band members of Ebony Reigns (Samuel Ofori Amponsah)
  dbr:Ebony_Reigns dbo:member ?bandMember .
  
  # For each band member, find their associated musical artists
  ?bandMember dbo:associatedMusicalArtist ?associatedArtist .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
485,15,val,"Give me the entity in the region, that is a country, of Western European Time and entity in Nottinghamshire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?nottinghamshireEntity
WHERE {
  ?country a dbo:Country ;
           dbo:timeZone dbr:Western_European_Time .
  
  ?nottinghamshireEntity dbo:location dbr:Nottinghamshire .

  FILTER(?country != ?nottinghamshireEntity)
}
```",3,4,4,2,2,2,3,28,0,109,357,0.0,0.0,0
659,32,val,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander1 ?commander2 WHERE {
  # Find commander of the 1st Light Cavalry Lancers Regiment in a war
  ?regiment dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) .
  ?war dbo:participatingUnit ?regiment ;
       a dbo:MilitaryConflict .

  # Find commander of the regiment in that war
  ?commander1 dbo:commanderOf ?regiment ;
              dbo:commanderInMilitaryConflicts ?war .

  # Find wars commanded by Arthur Wellesley, 1st Duke of Wellington
  dbr:Arthur_Wellesley,_1st_Duke_of_Wellington dbo:commanderInMilitaryConflicts ?wellingtonWar .
  
  # Ensure the war is the same for both commanders
  FILTER (?war = ?wellingtonWar)

  # Find commander in Arthur Wellesley's forces
  ?commander2 dbo:commanderOf ?unit ;
              dbo:commanderInMilitaryConflicts ?wellingtonWar .

  # Ensure the unit is part of Wellington's forces
  ?unit dbo:participatingUnit ?wellingtonWar .
}
```",4,6,5,2,2,3,3,71,0,0,71,0,0.0,0
701,21,val,Give me the spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Ramesses II and his spouse Nefertari
  dbr:Ramesses_II dbo:spouse dbr:Nefertari .

  # Nefertari is the parent of her children, so she is the answer to ""parent of the child of Nefertari""
  ?child dbo:mother dbr:Nefertari .
  
  # The spouse of Ramesses II (Nefertari) is returned
  BIND(dbr:Nefertari AS ?spouse)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,28,val,Give me the native of the figure known as Hub City and actor of All About the Andersons and actor of The Departed.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName ?nativePlaceLabel
WHERE {
  ?actor a dbo:Actor ;
         foaf:name ?actorName ;
         dbo:nativePlace dbr:Boston .
  
  ?movie1 dbo:title ""All About the Andersons""@en ;
          dbo:starring ?actor .

  ?movie2 dbo:title ""The Departed""@en ;
          dbo:starring ?actor .

  SERVICE <http://dbpedia.org/sparql> {
    ?nativePlace rdfs:label ?nativePlaceLabel .
    FILTER (LANG(?nativePlaceLabel) = 'en')
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,38,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?war WHERE {
  # Identify Frédéric-Georges Herr and his role as a commander in a war
  ?herr dbr:Frédéric_Georges_Herr .
  ?herr dbo:commander ?commander .

  # Ensure the war is both a military conflict and an event
  ?war dbo:militaryConflict ?commander ;
       rdf:type dbo:Event .

  # Check if Frédéric-Georges Herr died in the capital of Algeria (Algiers)
  ?herr dbo:deathPlace dbr:Algiers .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
427,21,val,Give me the party of Romano Prodi and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName WHERE {
    ?prodi a dbo:Person ;
           foaf:name ""Romano Prodi""@en .
    
    ?prodi dbo:memberOf ?party .
    ?party dbo:wikiPageRedirects ?redirect .
    OPTIONAL { 
        ?redirect rdfs:label ?partyName . 
    }
    
    FILTER EXISTS {
        ?partyMembership dbo:startDate ?start ;
                        dbo:endDate ?end .
        FILTER (?start <= ""1994-12-31""^^xsd:date && (?end >= ""1994-01-01""^^xsd:date || NOT EXISTS { ?partyMembership dbo:endDate ?end }))
    }
    
    FILTER (CONTAINS(LCASE(?partyName), ""italian people's party"") || CONTAINS(LCASE(STR(?redirect)), ""italian people's party""))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,20,val,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in German campaign of 1813.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderInWar ?commanderInCampaign
WHERE {
  # Find the commander in the war for the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?regiment a dbo:MilitaryUnit ;
            dbo:participatedIn ?war .
  
  FILTER(?regiment = dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish))
  
  ?commanderInWar dbo:commanded ?regiment ;
                  dbo:occupation ""Military commander""@en .

  # Find the war that is an event and a military conflict
  ?war a dbo:MilitaryConflict, dbo:Event .
  
  # Find the commander in the German campaign of 1813
  ?campaign dbr:German_campaign_of_1813 ;
            dbo:commander ?commanderInCampaign .

}
```",3,5,4,2,2,3,3,71,0,0,30,0,0.0,0
294,16,val,"Give me the resting place of Luke Lea (American politician, born 1879) and entity in the birth place, that is a settlement, of Marion James.","SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace ?settlementEntity
WHERE {
  # Luke Lea's resting place
  dbr:Luke_Lea_(American_politician,_born_1879) dbo:finalRestingPlace ?restingPlace .

  # Marion James' birthplace and settlement entity
  dbr:Marion_James dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement .
  BIND(?birthPlace AS ?settlementEntity)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
54,29,val,Give me the parent of the child of Narapati I of Ava and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of Thinkhaya of Pagan.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild
WHERE {
  ?child dbo:spouseOrPartner dbr:Narapati_I_of_Ava .
  ?child dbo:predecessor dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .
  
  ?grandchild dbo:parent ?child .
  ?grandchild dbo:parent dbr:Thinkhaya_of_Pagan .

  ?parentOfChild dbo:child ?child .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
528,25,val,Give me the force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?militaryRole ?war
WHERE {
  VALUES ?person { 
    dbr:Narciso_Campero_Leyes 
    dbr:Orozimbo_Barbosa 
  }
  
  ?person dbo:name ?name .
  
  OPTIONAL {
    ?person dbo:militaryRank ?militaryRole .
  }
  
  OPTIONAL {
    ?person dbo:participatedInWar ?war .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,42,val,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and manager of the team of Takashi Sekizuka and native of Japan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater
WHERE {
  # Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?almaMater .
  
  # Alma mater is a Japanese organization, university, and educational institution
  ?almaMater rdf:type dbo:Organisation ;
             rdf:type dbo:University ;
             rdf:type dbo:EducationalInstitution ;
             dbp:nativeLanguage dbr:Japanese .

  # The entity manages the team of Takashi Sekizura
  ?manager dbp:teamManaged ?takashiTeam .
  ?takashiTeam dbp:player dbr:Takashi_Sekizura .
  
  # The manager is native to Japan and is the alma mater
  ?manager rdf:type dbo:Person ;
           dbp:nativePlace dbr:Japan ;
           dbp:almaMater ?almaMater .

}
```",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
328,23,val,Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:campaign dbr:Volcano_and_Ryukyu_Islands_campaign .
  ?award dbo:recipient ?awardee .
}
```

This query assumes that the campaign and award relationships are correctly modeled in DBpedia. Adjustments may be needed based on actual data availability.",3,3,4,3,1,3,3,71,0,0,13262,0,0.0,0
701,41,val,Give me the parent of the child of Ramesses II and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild ?spouse ?parentOfNefertariChild
WHERE {
  # Ramesses II and his children
  dbr:Ramesses_II a dbo:Person ;
                  dbo:child ?ramessesChild .

  # Child of Ramesses II and their parent
  ?ramessesChild dbo:parent ?parentOfChild .

  # Spouse of Ramesses II (Nefertari)
  dbr:Ramesses_II dbo:spouse ?spouse .
  FILTER (?spouse = dbr:Nefertari)

  # Nefertari and her children
  ?nefertariChild dbo:parent ?parentOfNefertariChild ;
                  dbo:childOf dbr:Nefertari .

}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
488,26,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT ?deathPlace
WHERE {
  # Matsudaira Tadamasa
  wd:QXXXXX dbo:father ?grandFather .

  # Grandfather's father (Matsudaira Tadamasa's great-grandfather)
  ?grandFather dbo:father ?greatGrandFather .

  # Ensure the grandfather is an office holder
  ?grandFather dbo:occupation ?officeHolder .
  FILTER(CONTAINS(LCASE(?officeHolder), ""office holder""))

  # Ensure the great-grandfather is a politician
  ?greatGrandFather dbo:occupation ?politician .
  FILTER(CONTAINS(LCASE(?politician), ""politician""))

  # Get the death place of the great-grandfather
  ?greatGrandFather dbo:deathPlace ?deathPlace .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
161,26,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force
WHERE {
  ?prieto dbo:predecessor ?predecessor .
  FILTER(?prieto = dbr:Indalecio_Prieto) .

  ?predecessor dbo:militaryForce ?force .
  
  ?force rdf:type dbo:SocietalEvent ;
         rdf:type dbo:MilitaryConflict .
}
```",3,5,4,3,1,3,3,71,0,0,514,0,0.0,0
666,15,val,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach) and figure known as The Three Lions.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerInManager WHERE {
  # Leonid Slutsky as a football coach
  dbr:Leonid_Slutsky dbo:managerOf ?team .

  # The Three Lions team
  dbr:The_Three_Lions dbo:sportTeamSeason ?season .
  
  # Team is both a soccer club and has a sports team season
  ?team rdf:type dbo:SoccerClub ;
        dbo:sportTeamSeason ?season .

  # Player in the manager who is also a sports manager
  ?playerInManager dbo:managerOf ?team ;
                   rdf:type dbo:SportsManager .
}
```",4,7,5,3,2,3,2,20,0,0,2,0,0.0,0
547,28,val,Give me the resting place of Alan Cunningham and resting place of Simon Cadell and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?restingPlace WHERE {
  # Alan Cunningham's resting place
  { 
    ?person foaf:name ""Alan Cunningham""@en .
    ?person dbo:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Simon Cadell's resting place
  { 
    ?person foaf:name ""Simon Cadell""@en .
    ?person dbo:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Child of James Burton (property developer)
  {
    ?james foaf:name ""James Burton (property developer)""@en .
    ?child dbo:parent ?james ;
           dbo:deathPlace ?restingPlace .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
16,24,val,Give me the professional in the profession of Satomi Ishihara and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?satomiProfession ?georgeannePerson
WHERE {
  # Find Satomi Ishihara's profession
  ?satomi dbo:occupation ?satomiProfession .
  FILTER (str(?satomi) = ""Satomi_Ishihara"")

  # Identify Georgeanne Marie Rice as a person
  ?georgeanne rdf:type dbp:Person ;
              foaf:name ""Georgeanne Marie Rice"" .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
485,16,val,"Give me the entity in United Kingdom and entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ukEntity ?birthPlaceRegion
WHERE {
  # Find Joseph Whitaker and his birthplace
  dbr:Joseph_Whitaker (dbo:birthPlace) ?birthPlace .

  # Ensure the birth place is a region
  ?birthPlace rdf:type dbo:AdministrativeTerritory .

  # Find an entity in the United Kingdom
  ?ukEntity rdf:type dbo:AdministrativeTerritory ;
            dbo:country dbr:United_Kingdom .
  
  # Link the birthplace to the UK if needed (optional, depending on data availability)
  OPTIONAL { ?birthPlace dbo:country dbr:United_Kingdom }
}
```",3,4,4,2,2,2,3,28,0,0,357,0,0.0,0
712,15,val,"Give me the resting place of Nina Onilova and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace ?capitalCity
WHERE {
  # Nina Onilova's resting place
  dbr:Nina_Onilova dbo:placeOfBurial ?restingPlace .

  # Vyoshenskaya Uprising's military force
  OPTIONAL {
    dbr:Vyoshenskaya_Uprising dbo:militaryForce ?militaryForce .
    
    # The country of the military force
    ?militaryForce dbo:country ?country .
    
    # Capital city of that country
    ?country dbo:capital ?capitalCity .
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
378,19,val,Give me the war of the person born as Carl Pontus Gahn and war of Joaquín Blake.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?war
WHERE {
  VALUES (?personName) { 
    ( ""Carl Pontus Gahn"" )
    ( ""Joaquín Blake"" )
  }
  
  ?person rdfs:label ?personName .
  FILTER(LANG(?personName) = 'en')

  OPTIONAL {
    ?person dbo:participatedIn ?war .
  }

  SERVICE <http://dbpedia.org/sparql> {
    ?war rdfs:label ?warLabel .
    FILTER(LANG(?warLabel) = 'en')
  }
}
ORDER BY ?person
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,39,val,Give me the spouse of Laodice IV and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Find the commander in Battle of Panium
  ?commander dbo:wikiPageDisambiguates dbr:Battle_of_Panium .
  
  # Identify the child of this commander
  ?child dbo:parent ?commander .

  # Determine the parent (Laodice IV's spouse) of that child
  ?spouse dbo:spouse ?laodiceIV ;
          dbo:child ?child .

  # Ensure Laodice IV is correctly identified as a spouse
  ?laodiceIV rdfs:label ""Laodice IV""@en .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
328,25,val,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?roleEasternFront ?agencyLeader
WHERE {
  # Find individuals who were commanders on the Eastern Front during World War II
  ?person dbo:commander dbr:Eastern_Front_(World_War_II) .
  
  # Find individuals who led a government agency under Joseph Stalin
  ?person dbo:leader ?agency .
  ?agency dbo:head dbr:Joseph_Stalin .

  # Bind roles for clarity in results
  BIND(""Commander of the Eastern Front"" AS ?roleEasternFront)
  BIND(""Leader of a Government Agency under Stalin"" AS ?agencyLeader)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
827,12,val,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894) and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?charlesAugustus a dbo:Person ;
                   foaf:name ""Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach""@en ;
                   dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1844 && YEAR(STRDT(?deathDate, xsd:date)) = 1894)
  
  ?charlesAugustus dbo:father ?father .

  OPTIONAL {
    ?child dbo:parent ?charlesAugustus ;
           dbo:royalTitle ?title .
    FILTER EXISTS { ?child a dbo:RoyalFamilyMember }
  }
}
```

### Explanation:

- **PREFIX**: Define common prefixes for DBpedia ontology and properties.
- **SELECT**: Retrieve the father of Charles Augustus.
- **WHERE**:
  - Identify Charles Augustus using his name, birth year, and death year.
  - Use `dbo:father` to find his father.
  - Optionally check if any child has a royal title and is related to Charles Augustus.",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
492,24,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Frédéric-Georges Herr's death location
  dbr:Frédéric_Georges_Herr dbo:deathPlace dbr:Algiers .

  # Military conflict that is an event involving Frédéric-Georges Herr
  ?militaryConflict a dbo:MilitaryConflict ;
                   dbo:participant dbr:Frédéric_Georges_Herr ;
                   dbo:eventParticipant ?eventParticipant .
  
  # Commander of the military conflict
  ?commander dbo:commanderOf ?militaryConflict .

  # Ensure the event is also classified as an event
  ?eventParticipant a dbo:Event .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
179,11,val,Give me the parent of Ubol Ratana and person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfUbolRatana ?personBornAsSirikit
WHERE {
  dbr:Ubol_Ratana dbo:parent ?parentOfUbolRatana .

  ?personBornAsSirikit dbo:birthName ""Sirikit"" .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
427,40,val,Give me the party of Giulio Andreotti and reference to the name of the party of Michele Pinto and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?andreottiPartyLabel ?pintoPartyLabel ?prodiPartyLabel
WHERE {
  # Giulio Andreotti's party
  dbr:Giulio_Andreotti dbo:party ?andreottiParty .
  ?andreottiParty rdfs:label ?andreottiPartyLabel .

  # Michele Pinto's party
  OPTIONAL { 
    dbr:Michele_Pinto dbo:party ?pintoParty .
    ?pintoParty rdfs:label ?pintoPartyLabel .
  }

  # Romano Prodi's party
  OPTIONAL {
    dbr:Romano_Prodi dbo:party ?prodiParty .
    ?prodiParty rdfs:label ?prodiPartyLabel .
  }
}
```",5,5,6,3,3,3,3,71,0,9,2,0.0,0.0,0
747,35,val,Give me the person born on the birth date of Pavlo Khudzik and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band 
WHERE {
  # Find Pavlo Khudzik's birth date
  VALUES (?pavlo) { dbr:Pavlo_Khudzik }
  ?pavlo dbo:birthday ?birthDate .

  # Find Tracey Elizabeth McSween and her band
  VALUES (?tracey) { dbr:Tracey_Elizabeth_McSween }
  ?tracey dbo:birthday ?sameBirthDate .
  
  # Ensure the birth dates match
  FILTER(?birthDate = ?sameBirthDate)

  # Find the person born on Pavlo Khudzik's birth date and their band
  ?person dbo:birthday ?birthDate .
  OPTIONAL { ?person dbo:band ?band }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
92,43,val,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of Joseph Michael.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person dbo:actorIn dbr:Return_to_Nuke_'Em_High_Volume_1 ;
          dbo:bandMemberOf dbr:Nevermore ;
          dbo:associatedBand dbr:Joseph_Michael .
  
  FILTER EXISTS { ?person a dbo:MusicalArtist . }
  
  ?artist dbo:associatedWith ?person .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
701,24,val,Give me the parent of the child of Ramesses II and spouse of Ramesses II.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild ?spouse
WHERE {
  # Find children of Ramesses II
  ?child dbo:father dbr:Ramesses_II .
  
  # Find the parent(s) of each child
  ?child dbo:motherOrFather ?parentOfChild .

  # Find the spouse of Ramesses II
  dbr:Ramesses_II dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,23,val,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?almaMater
WHERE {
  ?person dbo:birthYear ""1958""^^xsd:gYear .
  
  ?person dbo:almaMater ?almaMater .

  ?almaMater a dbo:University ;
             dbo:country dbr:Japan ;
             rdf:type dbo:Organisation, dbo:EducationalInstitution .
}",3,7,4,3,1,3,3,71,0,6,524,0.0,0.0,0
251,19,val,"Give me the administration of Forza Italia (2013) and death place of Laura Mancinelli and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v2 <http://dbpedia.org/ontology/place> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?deathPlace ?warLocation
WHERE {
  # Forza Italia (2013) administration
  OPTIONAL {
    ?party a dbo:PoliticalParty ;
           rdfs:label ""Forza Italia""@en .
    ?party dbo:leader ?person .
    ?person dbo:office ?office .
    ?office dbo:holder ?administration .
  }

  # Laura Mancinelli death place
  OPTIONAL {
    dbr:Laura_Mancinelli dbo:deathPlace ?deathPlace .
  }
  
  # Louis François Félix Musnier military conflict location
  OPTIONAL {
    ?musnier a dbo:MilitaryPerson ;
             rdfs:label ""Louis François Félix Musnier""@en .
    ?conflict dbo:militaryConflictParticipant ?musnier ;
              dbo:location ?warLocation .
  }
}
```",4,5,5,2,3,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
547,26,val,Give me the resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorRestingPlace WHERE {
  ?show dbo:starring dbr:Emily_Richard .
  ?show dbo:starring ?actor .
  
  OPTIONAL { 
    ?actor dbo:deathPlace ?restingPlace .
    BIND(?restingPlace AS ?actorRestingPlace)
  }
}
```

This query does the following:
- Identifies a show (`?show`) where Emily Richard is starring.
- Finds an actor (`?actor`) from that same show.
- Attempts to find the death place of the actor, which can be considered their resting place.",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
314,13,val,Give me the person deceased at the headquarter of House of Sombrerete and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?awardCount
WHERE {
  ?person dbo:deathPlace dbr:Headquarters_of_the_House_of_Sombrerete .
  ?person dbo:award ?award .
  ?award dbo:numberOfAwards ?awardCount .
  FILTER (?awardCount = 30)
}
```

This query assumes:
- `dbo:deathPlace` is the property linking a person to their place of death.
- `dbr:Headquarters_of_the_House_of_Sombrerete` is the resource for the headquarters of the House of Sombrerete.
- `dbo:award` links a person to an award they received.
- `dbo:numberOfAwards` represents the count of awards.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,19,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?royalGrandchild
WHERE {
  # Find Laodice IV and her spouse
  dbr:Laodice_IV a dbo:Person ;
                 dbo:spouse ?spouse .

  # Find Seleucus II Callinicus's children
  dbr:Seleucus_II_Callinicus a dbo:Person ;
                             dbo:child ?child .

  # From those children, find their royal grandchildren
  ?child dbo:child ?grandChild .
  ?grandChild a dbo:Monarch ; # Assuming royalty is represented by Monarch class
               rdfs:label ?royalGrandchildLabel .
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
16,39,val,Give me the person born as the birth name of the alumnus of Ohio State University and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  ?alumnus dbo:almaMater dbr:Ohio_State_University ;
           a dbo:Actor .
  ?alumnus dbp:birthday ?birthday .
  ?person dbo:birthName ?birthName .
  FILTER (?alumnus = ?person)
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
528,31,val,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warName
WHERE {
  ?war a dbo:MilitaryConflict ;
       dbo:location dbr:Chile ;
       rdfs:label ?warName .
  
  OPTIONAL { 
    ?person dbo:nationality dbr:Chile ;
            foaf:name ""Orozimbo Barbosa""@en .
    ?war dbo:participatedIn ?person .
  }
  
  FILTER (CONTAINS(LCASE(?warName), ""war""))
}
```",4,5,5,3,2,3,3,71,0,0,9,0,0.0,0
659,28,val,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in Battle of Leipzig and military force of Napoleonic Wars.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?force
WHERE {
  # Arthur Wellesley, 1st Duke of Wellington
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:commander ?commander .

  OPTIONAL {
    ?commander dbo:participatedInBattle dbr:Battle_of_Leipzig .
  }

  OPTIONAL {
    ?commander dbo:militaryForce dbr:Napoleonic_Wars .
  }
}
```

This query does the following:
- Selects distinct commanders under Arthur Wellesley.
- Optionally checks if these commanders participated in the Battle of Leipzig and were part of the military forces during the Napoleonic Wars.",4,4,5,2,3,3,3,71,0,0,5,0,0.0,0
9,22,val,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?nickname
WHERE {
  # Alma mater of John Alderdice, Baron Alderdice
  OPTIONAL {
    dbr:John_Alderdice_Barons_Alderdice dbo:almaMater ?almaMater .
  }
  
  # Nickname of Queen's University Belfast
  OPTIONAL {
    dbr:Queen's_University_Belfast dbo:nickname ?nickname .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,27,val,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryUnit ?war
WHERE {
  ?militaryUnit a dbo:MilitaryUnit ;
                dbo:militaryBranch dbr:New_Zealand_Army ;
                dbo:participatedIn ?war .
  
  ?professional a dbo:Politician, dbo:OfficeHolder ;
                dbo:memberOf ?militaryUnit .

  FILTER EXISTS { ?militaryUnit dbo:country dbr:New_Zealand }
}
```",3,6,4,3,1,3,3,71,0,0,14,0,0.0,0
392,13,val,"Give me the entity in the region, that is a country, of Central European Time and region of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time ;
           dbo:locatedIn ?region .
  ?region dbo:timeZone dbr:Central_European_Time .
}
```",3,4,4,2,2,2,3,28,0,0,28787,0,0.0,0
360,12,val,Give me the writer of The Roaring Silence and native of Johannesburg and reference to Manfred Mann.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?nativePlace WHERE {
  # Find the album ""The Roaring Silence""
  dbr:The_Roaring_Silence dbo:composer ?writer .
  
  # Ensure the writer is a native of Johannesburg
  ?writer dbo:nativePlace dbr:Johannesburg .

  # Reference to Manfred Mann
  OPTIONAL {
    ?manfredMann dbo:member ?writer .
    FILTER EXISTS { ?manfredMann rdfs:label ""Manfred Mann""@en }
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
161,24,val,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Identify Francisco Largo Caballero
  dbr:Francisco_Largo_Caballero a dbo:Person ;
    dbo:role ?role .

  # Find the Biscay Campaign as both a societal event and military conflict
  dbr:Biscay_Campaign a (dbo:SocietalEvent , dbo:MilitaryConflict) .

  # Link the role to being a commander in the campaign
  ?role dbo:commanderOf ?militaryForce ;
        dbo:relatedTo dbr:Biscay_Campaign .

  # Bind Francisco Largo Caballero as the commander
  FILTER(?commander = dbr:Francisco_Largo_Caballero)
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
915,15,val,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . ?result <http://dbpedia.org/ontology/residence> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resident
WHERE {
  # Find the director of ""Pipe Dreams"" (1976 film)
  ?director dbo:directed dbr:Pipe_Dreams_(film) .
  
  # Identify the father of Lizzie Spaulding, who is also the director's father
  ?father dbo:child ?director ;
          dbo:child dbr:Lizzie_Spaulding .

  # Determine the birthplace of this person and ensure it is a settlement
  ?birthPlace dbo:birthPlace ?father .
  
  FILTER (dbo:Settlement ?birthPlace) .

  # Find residents of that birthplace
  ?resident dbo:residence ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
528,18,val,Give me the war of Orozimbo Barbosa and force of Narciso Campero and war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  VALUES (?person) { 
    dbr:Orozimbo_Barboza 
    dbr:Narciso_Campero 
    dbr:Irene_Morales
  }
  
  ?person dbo:participatedIn ?war .
  OPTIONAL { ?war dbo:description ?description . }

  FILTER (lang(?description) = 'en')
}
```",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
547,38,val,Give me the resting place of the actor of Enemy at the Door and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName ?actorBurialPlace ?awardeeName ?awardeeBurialPlace
WHERE {
  # Find the actor of ""Enemy at the Door""
  ?movie dbo:title ""Enemy at the Door""@en .
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER(LANG(?actorName) = 'en') .

  OPTIONAL { 
    ?actor dbo:burialPlace ?actorBurialPlace .
    ?actorBurialPlace rdfs:label ?actorBurialPlaceLabel .
    FILTER(LANG(?actorBurialPlaceLabel) = 'en')
  }

  # Find the awardee of Knight Grand Cross of the Order of St Michael and St George
  ?person dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
  ?person rdfs:label ?awardeeName .
  FILTER(LANG(?awardeeName) = 'en') .

  OPTIONAL { 
    ?person dbo:burialPlace ?awardeeBurialPlace .
    ?awardeeBurialPlace rdfs:label ?awardeeBurialPlaceLabel .
    FILTER(LANG(?awardeeBurialPlaceLabel) = 'en')
  }
}",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
77,12,val,Give me the force of the mayor of Congress Poland and war of Alexander Chechenskiy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?force ?war
WHERE {
  # Find the mayor of Congress Poland (Duchy of Warsaw)
  ?office dbo:officeHolder ?mayor .
  ?office rdfs:label ""Mayor""@en .
  ?office dbo:country dbr:Duchy_of_Warsaw .

  OPTIONAL {
    # Attempt to find any related military force or influence
    ?mayor dbo:militaryRank ?rank .
    ?mayor dbo:force ?force .
  }

  # Find wars involving Alexander Chechenskiy
  ?war dbo:participatedIn dbr:Aleksandr_Chechensky .
}
```",3,3,4,2,2,3,2,20,0,0,6,0,0.0,0
404,37,val,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandparent
WHERE {
  # Prince George William of Hanover
  dbr:Prince_George_William_of_Hanover dbo:child dbr:Ernest_Augustus_Crown_Prince_of_Hanover .
  
  # Ernest Augustus, Crown Prince of Hanover's child who is royalty
  dbr:Ernest_Augustus_Crown_Prince_of_Hanover dbo:child ?royaltyChild .

  # The parent of this royalty child
  ?royaltyChild dbo:parent ?grandparent .
  
  # Ensure the grandparent is a royalty
  ?grandparent rdf:type dbo:Monarch .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
285,14,val,Give me the spouse of the professional in the award of Stan Lee.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseName
WHERE {
    # Identify Stan Lee and his award
    dbr:Stan_Lee dbo:award dbr:Some_Award .

    # Find the professional associated with this award (assuming recipient)
    dbr:Some_Award dbo:recipient ?professional .

    # Get the spouse of that professional
    ?professional dbo:spouse ?spouse .
    
    # Retrieve the name of the spouse
    ?spouse rdfs:label ?spouseName .
}
```

Note: Replace `dbr:Some_Award` with the actual DBpedia resource for the award associated with Stan Lee. This query assumes that there is a direct relationship between an award and its recipient, which may need adjustment based on the specific schema of DBpedia.",3,3,4,3,1,3,2,20,0,0,4149,0,0.0,0
659,21,val,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Arthur Wellesley, 1st Duke of Wellington
  dbr:Arthur_Wellesley,_1st_Duke_of_Wellington 
    dbo:militaryCommanderOf ?commandedEntity .
  
  # Ensure the commanded entity is a military force involved in the Napoleonic Wars
  ?commandedEntity rdf:type dbo:MilitaryUnit ;
                   dbo:participatedIn dbr:Napoleonic_Wars .

  # Retrieve the name of the military force
  ?commandedEntity rdfs:label ?militaryForce .
  
  FILTER (LANG(?militaryForce) = 'en')
}
ORDER BY ?militaryForce",3,3,4,2,2,3,3,71,0,0,32,0,0.0,0
92,29,val,"Give me the band of Joseph Michael and band member of Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandOfJosephMichael ?nevermoreMember ?associatedArtist
WHERE {
  # Find the band of Joseph Michael
  ?person dbo:name ""Joseph Michael""@en .
  ?person dbo:member ?bandOfJosephMichael .

  # Find members of Nevermore
  ?nevermore dbr:Nevermore .
  ?nevermore dbo:member ?nevermoreMember .

  # Find associated artists of Jim Sheppard who are also artists
  ?sheppard foaf:name ""Jim Sheppard""@en .
  ?sheppard dbo:associatedMusicalArtist ?associatedArtist .
  FILTER EXISTS { ?associatedArtist a dbo:MusicArtist }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
328,19,val,"Give me the commander in Eastern Front (World War II) and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award
WHERE {
  # Find the commander of the Eastern Front during World War II
  ?commander dbo:positionTitle ""Commander"" ;
            dbo:officeHolderOf dbr:Eastern_Front_(World_War_II) .

  # Find the award given by Bruce Fraser, 1st Baron Fraser of North Cape
  ?award dbo:recipient ?commander ;
         dbo:awardedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
184,31,val,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of Archduke Joseph August of Austria.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?landmark a dbo:Settlement ;
            dbo:elevation ""96.0""^^xsd:float .
  
  ?person dbo:nativePlace ?landmark ;
          dbo:child dbr:Archduke_Joseph_August_of_Austria .

  ?person dbo:parent ?parent .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
487,14,val,"Give me the administration of the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName ?administration
WHERE {
  VALUES ?philScott { dbr:Phil_Scott_(soccer_player) }
  
  ?philScott dbo:birthName ?birthName .
  OPTIONAL { ?philScott dbo:position ?position . FILTER (CONTAINS(LCASE(?position), ""soccer player"")) }
  OPTIONAL { ?philScott dbo:administrationRole ?administration . }
}
```",3,4,4,3,1,3,2,20,0,0,14,0,0.0,0
294,17,val,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v1 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?architect ?burialPlace WHERE {
  # Find the architect of P. D. Houston Jr. House
  dbr:P._D._Houston_Jr._House dbo:architect ?architect .
  
  # Get the burial place of the architect
  OPTIONAL { 
    ?architect dbo:deathPlace ?burialPlace .
  }
}
```",3,3,4,2,2,2,3,28,0,2,1,0.0,0.0,0
547,41,val,Give me the resting place of the child of James Burton (property developer) and resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childRestingPlace ?alanCunninghamRestingPlace ?actorRestingPlace WHERE {
  # James Burton's child and their resting place
  ?jamesBurton a dbo:Person ;
               foaf:name ""James Burton"" ;
               dbo:occupation dbr:Property_developer .
  ?child dbo:parent ?jamesBurton ;
         dbo:deathPlace ?childRestingPlace .

  # Alan Cunningham and his resting place
  ?alanCunningham a dbo:Person ;
                  foaf:name ""Alan Cunningham"" .
  ?alanCunningham dbo:deathPlace ?alanCunninghamRestingPlace .

  # Actor of ""Enemy at the Door"" and their resting places
  dbr:Enemy_at_the_Door dbo:actor ?actor .
  ?actor a dbo:Person ;
         dbo:deathPlace ?actorRestingPlace .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
645,14,val,Give me the alma mater of the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater
WHERE {
  dbr:Adela_Pankhurst a dbo:Person ;
                      dbo:parent ?parent .

  ?parent a dbo:Person .

  ?child dbo:parent ?parent .
  
  ?child dbo:almaMater ?almaMater .
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
281,33,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Find the leader of the 1962 New South Wales state election who is a politician
  ?leader dbo:officeHolderOf dbr:1962_New_South_Wales_state_election .
  ?leader rdf:type dbo:Politician .

  # Find Beauchamp Seymour, 1st Baron Alcester's birthplace that is a country
  dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Match the leader's birthplace to Beauchamp Seymour's birthplace if it's a country
  ?leader dbo:birthPlace ?birthPlace .

  # Return the entity (country) as the result
  BIND(?birthPlace AS ?entity)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
981,14,val,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Author ;
          dbo:book ?kamikazeBook .
  ?kamikazeBook rdfs:label ""Kamikaze Girls""@en .
  ?person dbo:title ""Miss Universe"" ; # Assuming beauty queen title, adjust as needed
         dbo:birthPlace ?birthPlace .
}
```",3,4,4,3,1,3,2,20,0,0,170,0,0.0,0
801,25,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of Westside Story (song).",SELECT ?result WHERE { <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  ?writer dbo:work ?album .
  ?album rdfs:label ""40 Dayz & 40 Nightz""@en .

  ?producer dbo:producedBySong ?song .
  ?song rdfs:label ""Westside Story (song)""@en .

  FILTER (?writer = ?producer)

  ?writer a dbo:MusicalArtist ;
          a dbo:Artist .

  ?artistAssociation dbo:associatedWith ?writer .
  ?artistAssociation dbo:musicalArtist ?associatedArtist .

  ?associatedArtist a dbo:MusicalArtist .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
747,18,val,Give me the band of Shèna and person born on 1985-04-29 and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?shenaBand ?personName ?ambashepherdBand
WHERE {
  # Find Shèna's band
  ?shena a dbo:MusicalArtist ;
         foaf:name ""Shèna"" .
  ?shena dbo:band ?shenaBand .

  # Find the person born on 1985-04-29
  ?person a dbo:Person ;
          dbp:birthday ""1985-04-29""^^xsd:date .
  ?person foaf:name ?personName .

  # Find Amba Shepherd's band
  ?ambashepherd a dbo:MusicalArtist ;
                foaf:name ""Amba Shepherd"" .
  ?ambashepherd dbo:band ?ambashepherdBand .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
645,13,val,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
  ?commander dbo:participatedInBattle dbr:Battle_of_Diamond_Rock .
  ?commander dbo:residence ?residence .
  ?residence a dbo:Country .
  BIND(?residence AS ?country)
}
```",3,4,4,3,1,3,2,20,0,0,42999,0,0.0,0
488,19,val,Give me the birth place of the commander in Boshin War and death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace
WHERE {
  # Birthplace of Saigō Takamori (Commander in Boshin War)
  dbr:Saig%C5%8D_Takamori dbo:birthPlace ?birthPlace .

  # Death place of Tokugawa Ieyasu
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,37,val,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?predecessor WHERE {
  ?ameitta dbo:parent ?predecessor .
  
  ?child dbo:parent ?predecessor .
  ?thado dbo:parent ?child .

  ?thado dbp:name ""Thado Minsaw of Prome"" .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
801,38,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
    # Identify ""40 Dayz & 40 Nightz"" as a musical work and song
    dbr:40_Dayz_&_40_Nightz dbo:type dbo:MusicalWork .
    dbr:40_Dayz_&_40_Nightz dbo:type dbo:Song .

    # Link the work to its writer, who is 50 Cent
    dbr:40_Dayz_&_40_Nightz dbo:writer ?writer .
    
    # Ensure the writer is 50 Cent and also a musical artist
    ?writer rdfs:label ""50 Cent""@en .
    ?writer dbo:musicalArtist ?artist .

    # Ensure the artist is both an artist and a musical artist
    ?artist rdf:type dbo:MusicalArtist .
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
421,16,val,Give me the band member of Senidah and person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?personWithBirthName
WHERE {
  # Find band members of Senidah
  ?senidah dbo:member ?bandMember .
  FILTER (str(?senidah) = ""Senidah"") .

  # Get the birth name of Dino Merlin
  dbr:Dino_Merlin dbo:birthName ?birthName .

  # Find a person with this birth name
  ?personWithBirthName dbo:birthName ?birthName .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
767,30,val,Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg and reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater ?entityInBW ?alterEgo
WHERE {
  # Alma mater of Carl L. Nippert
  OPTIONAL {
    ?nippert dbo:almaMater ?almaMater .
    FILTER (str(?nippert) = ""Carl_L._Nippert"")
  }

  # Entity in Baden-Württemberg
  OPTIONAL {
    ?entityInBW dbo:location dbr:Baden-Württemberg .
  }

  # Alter ego of Black Hood
  OPTIONAL {
    ?blackHood dbo:alterEgo ?alterEgo .
    FILTER (str(?blackHood) = ""Black_Hood"")
  }
}
```",4,4,5,2,3,3,3,71,0,201,1,0.0,0.0,0
754,13,val,Give me the parent of the parent of the parent of Min Linka.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?greatGrandParent
WHERE {
  ?minLinka dbo:name ""Min Linka""@en .
  ?minLinka dbo:parent ?parent1 .
  ?parent1 dbo:parent ?parent2 .
  ?parent2 dbo:parent ?greatGrandParent .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
528,21,val,Give me the war of the military force of Battle of Pisagua and force of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?pisaguaForce ?camperoForce
WHERE {
  # Find the Battle of Pisagua and its military forces
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Pisagua""@en .
  
  OPTIONAL {
    ?battle dbo:militaryCommander ?commander1 .
    ?commander1 foaf:name ?pisaguaForce .
  }
  
  # Find Narciso Campero and his military forces
  ?campero a dbo:Person ;
           foaf:name ""Narciso Campero""@en .
  
  OPTIONAL {
    ?battle2 dbo:militaryCommander ?commander2 .
    ?commander2 foaf:name ?camperoForce .
    FILTER(?commander2 = ?campero)
  }
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
182,18,val,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v2 . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?nationality
WHERE {
  # Find wars involving Jagath Dias
  ?person dbo:wikiPageDisambiguates ?disambiguation .
  FILTER(CONTAINS(LCASE(STR(?disambiguation)), ""jagath dias"")) .
  
  # Get the nationality of Tamara Kunanayakam
  dbr:Tamara_Kunanayakam dbo:nationality ?nationality .

  # Link wars to persons (assuming a war is linked via disambiguations)
  OPTIONAL { ?disambiguation rdfs:label ?war . FILTER(LANG(?war) = ""en"") }
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
184,41,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of Budapest and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonEntity
WHERE {
  # Find the child of the child of Archduke Joseph Karl of Austria
  ?grandchild dbo:parent dbr:Archduke_Joseph_Karl_of_Austria ;
              dbo:parent ?child .
  
  # Find the parent of the native of Budapest
  ?budaNative dbo:birthPlace dbr:Budapest .
  ?parentOfBudapest dbo:child ?budaNative .

  # Find the parent of Archduchess Ilona of Austria
  ?parentOfIlona dbo:child dbr:Archduchess_Ilona_of_Austria .

  # Identify the common entity that satisfies all conditions
  FILTER (?grandchild = ?parentOfBudapest && ?grandchild = ?parentOfIlona)
  
  BIND(?grandchild AS ?commonEntity)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
161,43,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of Rif War and commander in Biscay Campaign.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  # Indalecio Prieto's predecessor
  ?predecessor dbo:successor dbr:Indalecio_Prieto .
  
  # Military force of the predecessor involved in a societal event and military conflict
  ?event dbo:type dbr:Societal_event ;
         dbo:participatingMilitaryForce ?militaryForce1 .
  ?conflict dbo:type dbr:Military_conflict ;
            dbo:participatingMilitaryForce ?militaryForce2 .

  FILTER (?militaryForce1 = ?militaryForce2)
  
  # Military force of the Rif War
  ?rifWar dbo:type dbr:Military_conflict ;
          dbo:participatingMilitaryForce ?rifMilitaryForce .
  
  # Commander in Biscay Campaign
  ?biscayCampaign dbo:type dbr:Military_campaign ;
                  dbo:commander ?commander .
  
  # Linking military forces
  FILTER (?militaryForce = ?rifMilitaryForce)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
360,16,val,Give me the writer of The Roaring Silence and reference to the author of Blinded by the Light.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writerOfRoaringSilence ?authorOfBlindedByTheLight
WHERE {
  # Find the writer of ""The Roaring Silence""
  dbr:The_Roaring_Silence dbo:writer ?writerOfRoaringSilence .
  
  # Find the author of ""Blinded by the Light""
  dbr:Blinded_by_the_Light dbo:lyricist ?authorOfBlindedByTheLight .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
9,40,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as QUB.","SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?allenHillAlmaMater ?mayorAlmaMater
WHERE {
  # Allen Hill's alma mater
  dbr:Allen_Hill_(scientist) dbo:almaMater ?allenHillAlmaMater .

  # Organization in Belfast associated with QUB
  ?organization a dbo:Organisation ;
                dbo:location dbr:Belfast ;
                dbo:associatedWith dbr:Queen's_University_Belfast .

  # Mayor of the organization
  ?mayor dbo:position ?position .
  ?position dbo:heldBy ?mayor ;
            dbo:role ""Mayor""^^xsd:string ;
            dbo:organization ?organization .

  # Mayor's alma mater
  ?mayor dbo:almaMater ?mayorAlmaMater .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
184,30,val,Give me the parent of the child of Archduke Joseph Francis of Austria and child of Archduke Joseph August of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonEntity
WHERE {
  # Archduke Joseph Francis of Austria's child and its parent
  ?child1 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  ?parent1 dbo:child ?child1 .

  # Archduke Joseph August of Austria's child
  ?child2 dbo:parent dbr:Archduke_Joseph_August_of_Austria .
  
  # Géza von Habsburg's parent
  ?parentGéza dbo:child dbr:Géza_von_Habsburg .

  # Find the common entity
  FILTER (?parent1 = ?child2)
  FILTER (?parent1 = ?parentGéza)

  BIND(?parent1 AS ?commonEntity)
}
```",4,4,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
281,18,val,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in Colony of New Zealand and war of New Zealand Army.","SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war 
WHERE {
  # Beauchamp Seymour, 1st Baron Alcester's involvement in wars
  OPTIONAL { 
    dbr:Beauchamp_Seymour,_1st_Baron_Alcester dbo:participatedIn ?war .
  }
  
  # Wars involving the Colony of New Zealand
  OPTIONAL {
    dbr:Colony_of_New_Zealand dbo:relatedToWar ?war .
  }

  # Wars involving the New Zealand Army
  OPTIONAL {
    dbr:New_Zealand_Army dbo:participatedIn ?war .
  }
}
ORDER BY ?war",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
747,30,val,Give me the person born on 1985-04-29 and band of the person born as Tracey Elizabeth McSween and band of Amba Shepherd.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person1 ?band1 ?person2 ?band2 WHERE {
  # Tracey Elizabeth McSween details
  OPTIONAL {
    ?person1 a dbo:Person ;
             foaf:name ""Tracey Elizabeth McSween"" ;
             dbo:birthdayYear ""1985"" ;
             dbo:birthdayMonth ""04"" ;
             dbo:birthdayDay ""29"" .
    ?person1 dbo:band ?band1 .
  }
  
  # Amba Shepherd details
  OPTIONAL {
    ?person2 a dbo:Person ;
             foaf:name ""Amba Shepherd"" .
    ?person2 dbo:band ?band2 .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
184,26,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchildRoyalty
WHERE {
  dbr:Archduke_Ladislaus_Philipp_of_Austria dbo:parent ?parent .
  ?sibling dbo:parent ?parent .
  ?grandchild dbo:parent ?sibling .
  ?grandchild rdf:type dbo:Royalty .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
838,14,val,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  # Identify YU Grupa as a group and organization
  dbr:YU_Grupa a dbo:Band ;
               dbo:member ?bandMember .
  
  # Ensure the band member is part of a group or organization
  ?bandMember a dbo:MusicalArtist .
}
```",3,6,4,3,1,3,2,20,0,0,40,0,0.0,0
356,13,val,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player
WHERE {
  # Identify the 2015 Sacramento Republic FC season
  dbr:2015_Sacramento_Republic_FC_season dbo:predecessor ?predecessorSeason .

  # Find the successor of that predecessor
  ?predecessorSeason dbo:successor ?successorSeason .

  # Ensure the successor is both a sports team season and a soccer club season
  ?successorSeason rdf:type dbo:SportsTeamSeason .
  ?successorSeason rdf:type dbo:SoccerClubSeason .

  # Retrieve players from this identified season
  OPTIONAL {
    ?successorSeason dbo:player ?player .
  }
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
754,15,val,Give me the parent of the parent of the parent of Min Linka and parent of May Hnin Thwe-Da.,SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?ancestorMinLinkaParent ?ancestorMayHninThweDaParent
WHERE {
  # Find Min Linka's third-level ancestor
  ?minLinka dbo:wikiPageRedirects* dbpedia-owl:Min_Linka .
  ?minLinka rdfs:subClassOf* ?thirdLevelAncestorMinLinka .
  
  # Find the parent of Min Linka's third-level ancestor
  ?thirdLevelAncestorMinLinka rdfs:subClassOf+ ?ancestorMinLinkaParent .

  # Find May Hnin Thwe-Da's third-level ancestor
  ?mayHninThweDa dbo:wikiPageRedirects* dbpedia-owl:May_Hnin_Thwe_Da .
  ?mayHninThweDa rdfs:subClassOf* ?thirdLevelAncestorMayHninThweDa .
  
  # Find the parent of May Hnin Thwe-Da's third-level ancestor
  ?thirdLevelAncestorMayHninThweDa rdfs:subClassOf+ ?ancestorMayHninThweDaParent .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
232,27,val,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfResidence
WHERE {
  ?politician a dbo:Politician ;
              dbo:nationality dbr:France ;
              dbo:officeHolder true .
  
  ?politician dbo:birthPlace ?birthPlace .

  ?residence dbo:country dbr:United_Kingdom ;
             dbo:settlementType ?settlementType .
  
  FILTER(?settlementType = dbo:Settlement) 

  ?politician dbo:residence ?residence .

  ?residence dbo:nativeOf ?nativeOfResidence .
}
```",3,7,4,3,1,3,3,71,0,0,9121,0,0.0,0
92,19,val,"Give me the associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
    ?bandMember dbo:associatedBand dbr:Nevermore .
    ?bandMember dbo:member dbr:Jim_Sheppard .
    ?bandMember a dbo:MusicalArtist .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,38,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander
WHERE {
  # Rutger Jan Schimmelpenninck's military force
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryService ?militaryForce .
  
  # The military force must be a societal event, an event, and a military conflict
  ?militaryForce rdf:type dbo:SocietalEvent ;
                rdf:type dbo:Event ;
                rdf:type dbo:MilitaryConflict .

  # Commander in the war involving the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) dbo:militaryConflicts ?war .
  
  # The war must be an event and a military conflict
  ?war rdf:type dbo:Event ;
       rdf:type dbo:MilitaryConflict .

  # Rutger Jan Schimmelpenninck as commander in the war
  ?commander dbo:role ?militaryRole .
  ?militaryRole dbo:hasMilitaryUnit dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) ;
                dbo:isPartOf ?war .
  
  # Ensure Rutger Jan Schimmelpenninck is the commander
  FILTER(?commander = dbr:Rutger_Jan_Schimmelpenninck)
}
```",4,9,5,2,2,3,3,71,0,0,31,0,0.0,0
617,27,val,Give me the parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?battle dbp:name ""Battle of Panium"" .
  
  ?battle dbo:commander ?commander .
  
  ?child dbo:father ?commander ;
         dbo:mother ?mother . # Assuming either father or mother could be the commander
  
  OPTIONAL { ?child dbo:father ?otherFather } .
  OPTIONAL { ?child dbo:mother ?otherMother } .

  ?parent (dbo:father|dbo:mother) ?child .
}
```

This query:
- Identifies the battle and its commander.
- Finds children of the commander, considering both father and mother roles.
- Retrieves the parent of that child.",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
754,11,val,Give me the parent of May Hnin Thwe-Da and parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentOfMayHninThweDa ?grandparentOfMayHninHtapi
WHERE {
  ?mayHninThweDa dbo:wikiPageRedirects db:Q123456 .
  ?mayHninThweDa dbo:parent ?parentOfMayHninThweDa .

  ?mayHninHtapi dbo:wikiPageRedirects db:Q654321 .
  ?mayHninHtapi dbo:parent ?parentOfMayHninHtapi .
  ?parentOfMayHninHtapi dbo:parent ?grandparentOfMayHninHtapi .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
182,14,val,Give me the war of the work of Gotabhaya Rajapaksa and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?description
WHERE {
  VALUES ?person { 
    dbr:Gotabhaya_Rajapaksa 
    dbr:Mahesh_Senanayake 
  }
  
  ?person dbo:associatedWith ?war .
  OPTIONAL { ?war rdfs:comment ?description . FILTER (lang(?description) = 'en') }

  # Optionally, you can add more specific patterns if needed
}
ORDER BY ?war
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
485,18,val,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of Thomas Warner (poet).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace
WHERE {
  VALUES ?person { 
    dbr:Joseph_Whitaker_(naturalist) 
    dbr:Thomas_Warner_(poet)
  }
  
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Region .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
767,28,val,"Give me the reference to  and entity in the administration, that is a settlement, of Green and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement ?entityInAdministration
WHERE {
  ?nippert a dbo:Person ;
           foaf:name ""Carl L. Nippert"" .
  
  ?nippert dbo:almaMater ?green .

  ?green dbo:settlement ?settlement .

  OPTIONAL { 
    ?admin dbp:administratorOf ?entityInAdministration .
    ?admin dbo:almaMater ?green .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
767,21,val,"Give me the entity in the administration, that is a settlement, of Green and reference to .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?settlement WHERE {
  ?entity dbo:administrativeUnit dbr:Green .
  ?entity a dbo:Settlement .
  OPTIONAL { ?entity rdfs:label ?settlement . FILTER (lang(?settlement) = ""en"") }
}
```

This query does the following:
- Selects entities that are part of an administrative unit related to Green.
- Ensures these entities are classified as settlements.
- Optionally retrieves labels for these settlements in English.",3,4,4,2,2,3,3,71,0,0,7,0,0.0,0
427,30,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to Partito Popolare Italiano and party of Giulio Andreotti.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party ?andreottiParty WHERE {
  # Romano Prodi's party affiliation
  dbr:Romano_Prodi a dbo:Politician ;
                  dbo:birthPlace ?birthPlace ;
                  dbo:politicalAffiliation ?party .

  # Partito Popolare Italiano (PPI) reference
  OPTIONAL { 
    ?party rdfs:label ""Partito Popolare Italiano""@it .
  }

  # Giulio Andreotti's party affiliation
  dbr:Giulio_Andreotti a dbo:Politician ;
                       dbo:politicalAffiliation ?andreottiParty .

  FILTER (lang(?partyLabel) = 'it' && lang(?andreottiPartyLabel) = 'it')
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
712,14,val,Give me the resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?restingPlace WHERE {
  ?awardee dbo:award dbr:Soviet_Union_television_award .
  OPTIONAL { ?awardee dbo:deathPlace ?restingPlace . }
  FILTER (lang(?awardee->rdfs:label) = ""en"")
}
```

### Explanation:

- **PREFIX**: We use `dbo` for DBpedia ontology and `dbr` for resources.
- **SELECT Clause**: Retrieves the awardee's name (`?awardee`) and their resting place (`?restingPlace`).
- **WHERE Clause**:
  - Finds individuals who have won awards related to Soviet Union television shows.
  - Uses an `OPTIONAL` clause to include information about their death or burial places if available.
- **FILTER**: Ensures that the labels are in English for better readability.

This query aims to retrieve awardees of Soviet Union television shows and their resting places, if such data is available in DBpedia.",3,3,4,3,1,3,2,20,0,0,63,0,0.0,0
528,44,val,Give me the war of the commander in Battle of La Rinconada de Ate and war of Irene Morales and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfCommander ?warOfIreneMorales ?forceOfNarcisoCamperoLeyes
WHERE {
  # Find the commander of the Battle of La Rinconada de Ate and their associated war
  ?battle dbo:commander ?commander .
  ?battle dbr:Battle_of_La_Rinconada_de_Ate .
  
  OPTIONAL { ?commander dbo:participatedIn ?warOfCommander . }
  
  # Find the war involving Irene Morales
  ?ireneMorales foaf:name ""Irene Morales"" .
  ?ireneMorales dbo:participatedIn ?warOfIreneMorales .

  # Find the force associated with Narciso Campero Leyes
  ?narcisoCamperoLeyes foaf:name ""Narciso Campero Leyes"" .
  ?narcisoCamperoLeyes dbo:memberOf ?forceOfNarcisoCamperoLeyes .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
963,15,val,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton and administration of Serbian Progressive Party.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . ?v1 <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
  dbr:Herzegovina-Neretva_Canton dbo:timeZone ?timezone .
  dbr:Serbian_Progressive_Party dbo:administrativeRegion ?region .
  ?region dbo:timeZone ?timezone .
  ?region rdf:type dbo:Country .
  BIND(?region AS ?country)
}
```",4,5,5,3,2,3,2,20,0,0,84,0,0.0,0
339,11,val,Give me the child of the child of Christian IX of Denmark and father of Princess Elizabeth of Greece and Denmark.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Find Christian IX of Denmark
  dbr:Christian_IX_of_Denmark dbo:spouse ?spouse .
  
  # Find the child (X) of Christian IX
  ?x dbo:parent dbr:Christian_IX_of_Denmark ;
     a dbo:Person .

  # Find the child (Y) of X
  ?childOfChild dbo:parent ?x ;
                a dbo:Person .

  # Ensure Y is the father of Princess Elizabeth of Greece and Denmark
  ?childOfChild dbo:spouse ?elizabethSpouse .
  dbr:Princess_Elizabeth_of_Greece_and_Denmark dbo:parent ?childOfChild .
}
```",3,3,4,2,2,3,2,20,1,0,0,1.0,1.0,1.0
391,31,val,"Give me the actor of The Departed and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find actors in ""The Departed""
  ?movie dbo:starring ?actor .
  FILTER (str(?movie) = ""The_Departed""^^xsd:string)

  # Find the nickname for Jackson, Tennessee
  dbr:Jackson,_Tennessee dbo:nickname ?nickname .

  # Find natives of the figure known by that nickname
  ?figure dbo:nativeOf ?nativePlace .
  FILTER (str(?figure) = str(?nickname))
  
  # Ensure the actor is a native of this place
  ?actor dbo:nationality ?nativePlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
92,39,val,Give me the associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist ?band 
WHERE {
  # Find Jim Sheppard's associated musical artist
  OPTIONAL {
    ?sheppard a dbo:MusicalArtist ;
              foaf:name ""Jim Sheppard"" .
    ?sheppard dbo:associatedBand ?artist .
  }
  
  # Find the band of the person born as Joseph Michael
  OPTIONAL {
    ?person a dbo:Person ;
            foaf:name ?name ;
            dbo:birthName ""Joseph Michael"" .
    ?person dbo:associatedBand ?band .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,25,val,Give me the alma mater of Carl L. Nippert and reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?alterEgo
WHERE {
  # Find Carl L. Nippert's alma mater
  OPTIONAL {
    ?person a dbo:Person ;
            foaf:name ""Carl L. Nippert"" .
    ?person dbo:almaMater ?almaMater .
  }
  
  # Find the alter ego of Black Hood
  OPTIONAL {
    ?character a dbo:FictionalCharacter ;
               foaf:name ""Black Hood"" .
    ?character dbo:alterEgo ?alterEgo .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
801,44,val,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in  and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?associatedArtist
WHERE {
  # Identify ""40 Dayz & 40 Nightz"" as a work that is both a song and a musical work
  dbr:""40 Dayz & 40 Nightz"" dbo:type/dbo:subClassOf* dbo:Songs .
  dbr:""40 Dayz & 40 Nightz"" dbo:type/dbo:subClassOf* dbo:MusicalWork .

  # Find the producer of this work, specifically looking for 50 Cent
  OPTIONAL {
    dbr:""40 Dayz & 40 Nightz"" dbo:producer ?producer .
    FILTER (str(?producer) = ""50_Cent"")
  }

  # Retrieve the associated musical artist of the writer
  OPTIONAL {
    dbr:""40 Dayz & 40 Nightz"" dbo:writer ?writer .
    ?writer dbo:associatedMusicalArtist ?associatedArtist .
    FILTER (?associatedArtist a dbo:MusicalArtist)
  }
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
701,43,val,Give me the parent of Meritamen and spouse of Ramesses II and parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentMeritamen ?spouseRamessesII ?greatGrandchildParent
WHERE {
  # Meritamen's parent
  ?meritamen a dbo:Person ;
             rdfs:label ""Meritamen""@en .
  ?meritamen dbo:parent ?parentMeritamen .

  # Ramesses II's spouse
  ?ramessesII a dbo:Person ;
              rdfs:label ""Ramesses II""@en .
  ?ramessesII dbo:spouse ?spouseRamessesII .

  # Seti I's great-grandchild's parent
  ?setiI a dbo:Person ;
         rdfs:label ""Seti I""@en .
  ?setiIChild dbo:parent ?setiI .
  ?setiIGrandchild dbo:parent ?setiIChild .
  ?greatGrandchildParent dbo:parent ?setiIGrandchild .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
701,25,val,Give me the parent of Henuttawy (19th dynasty) and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfHenuttawy ?spouseOfFatherOfMerneptah
WHERE {
  # Find the parent of Henuttawy (19th dynasty)
  ?henuttawy dbo:birthName ""Henuttawy"" .
  ?henuttawy dbp:era ""19th dynasty"" .
  ?henuttawy dbo:parent ?parentOfHenuttawy .

  # Find the father of Merneptah
  ?merneptah dbo:birthName ""Merneptah"" .
  ?fatherOfMerneptah dbo:child ?merneptah .
  
  # Find the spouse of the father of Merneptah
  ?spouseOfFatherOfMerneptah dbo:spouseOrPartner ?fatherOfMerneptah .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
547,19,val,Give me the resting place of the child of James Burton (property developer) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childRestingPlace ?simonCadellRestingPlace
WHERE {
  # Find James Burton (property developer)
  ?jamesBurton a dbo:Person ;
               foaf:name ""James Burton"" ;
               dbo:occupation dbo:PropertyDeveloper .

  # Find the child of James Burton
  ?child dbo:parent ?jamesBurton .
  
  # Get the resting place of the child
  OPTIONAL { ?child dbo:finalRestingPlace ?childRestingPlace . }

  # Find Simon Cadell
  ?simonCadell a dbo:Person ;
               foaf:name ""Simon Cadell"" .

  # Get the resting place of Simon Cadell
  OPTIONAL { ?simonCadell dbo:finalRestingPlace ?simonCadellRestingPlace . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,21,val,Give me the spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse
WHERE {
  { 
    ?person1 dbo:birthName ""Ted Martin McGinley""@en .
    ?person1 dbo:spouse ?spouse .
  }
  UNION
  { 
    ?person2 dbo:birthName ""Georgeanne Marie Rice""@en .
    ?person2 dbo:spouse ?spouse .
  }
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
659,41,val,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . }","SELECT ?militaryForce ?commander WHERE {
  ?event a dbo:MilitaryConflict ;
         dbo:participatingMilitaryUnit ?militaryForce .
  
  ?militaryForce dbo:commander ?commander .

  ?commander rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .

  ?regiment a dbo:MilitaryUnit ;
            dbo:militaryConflict ?event ;
            rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  
  FILTER(?event = dbr:Napoleonic_Wars)
}
```",5,7,6,2,3,3,3,71,0,0,13,0,0.0,0
54,19,val,Give me the child of the father of Soe Min Wimala Dewi and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?individual
WHERE {
    ?soeMinWimalaDewi a dbo:Person ;
                      foaf:name ""Soe Min Wimala Dewi"" .
    
    ?father dbo:child ?soeMinWimalaDewi .
    
    ?thadoMinsawOfProme a dbo:Person ;
                        foaf:name ""Thado Minsaw of Prome"" .
    
    ?parent dbo:child ?thadoMinsawOfProme .
    
    FILTER (?father = ?individual)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,36,val,Give me the spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?alumnus ?birthName
WHERE {
  # Find Ted McGinley's spouse
  dbr:Ted_McGinley dbo:spouse ?spouse .

  # Find an alumnus of Ohio State University and their birth name
  ?alumnus dbo:almaMater dbr:Ohio_State_University ;
           foaf:name ?name .
  OPTIONAL { ?alumnus foaf:givenName ?birthGivenName . }
  OPTIONAL { ?alumnus foaf:surname ?birthSurname . }

  BIND(CONCAT(?birthGivenName, ' ', ?birthSurname) AS ?birthName)
}
```",4,4,5,3,2,3,3,71,1,436,0,0.002288329519450801,1.0,0.0045662100456621
820,14,val,Give me the child of the parent of the professional in Actor.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild
WHERE {
  ?actor a dbo:Actor .
  ?actor dbp:occupation ""Actor"" .

  ?parent dbo:parentOf ?actor .
  
  ?parent dbo:child ?grandchild .
}
```",3,3,4,3,1,3,2,20,0,0,354,0,0.0,0
547,20,val,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorRestingPlace ?jamesBurtonRestingPlace WHERE {
  # Find the actor of ""Enemy at the Door""
  ?movie dbo:title ""Enemy at the Door""@en .
  ?movie dbo:starring ?actor .
  
  OPTIONAL { 
    ?actor dbo:placeOfBurial ?actorRestingPlace .
  }
  
  # Find James Burton, the Egyptologist
  ?james dbp:name ""James Burton"" ;
         dbo:occupation dbp:Egyptologist .
  
  OPTIONAL {
    ?james dbo:placeOfBurial ?jamesBurtonRestingPlace .
  }
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
528,26,val,Give me the war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  VALUES (?work) { dbr:The_Art_of_War } 

  ?work dbo:about ?subject .
  
  ?subject a dbo:MilitaryConflict ;
           dbo:commander ?commander .

  OPTIONAL {
    ?war dbo:commander ?commander .
  }
}
```",3,3,4,3,1,3,3,71,0,0,14,0,0.0,0
767,24,val,Give me the reference to  and alma mater of the administration of George K. Nash.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference ?almaMater
WHERE {
  VALUES ?person { dbr:George_K._Nash }
  
  OPTIONAL {
    ?person dbo:wikiPageWikiLink ?reference .
  }

  OPTIONAL {
    ?person dbo:almaMater ?almaMater .
  }
}
```",3,3,4,2,2,3,3,71,0,63,2,0.0,0.0,0
801,34,val,Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalInAlterEgo ?associatedMusicalArtist
WHERE {
  # The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo dbr:Lamont .
  
  # Professional identity of Lamont (The Shadow's alter ego)
  OPTIONAL { 
    dbr:Lamont dbo:profession ?professionalInAlterEgo .
  }
  
  # Chris Taylor and associated musical artist
  dbr:Chris_Taylor dbo:musicalArtist dbr:Grizzly_Bear .
  
  # Associated musical artist of Chris Taylor
  OPTIONAL {
    dbr:Grizzly_Bear dbo:name ?associatedMusicalArtist .
  }
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
666,14,val,"Give me the figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v0 . ?v2 <http://dbpedia.org/property/nickname> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?club a dbo:SoccerClub ;
        a dbo:SportsTeam ;
        dbo:country dbr:England .
  OPTIONAL { ?club rdfs:label ?name . FILTER (lang(?name) = 'en') }
  OPTIONAL { ?club dbo:nickname ?nickname . FILTER (lang(?nickname) = 'en') }
}
```",3,6,4,3,1,3,2,20,0,0,12,0,0.0,0
492,23,val,Give me the person decedent at the work of the author of French Algeria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?author ?work ?decedent
WHERE {
  ?author dbo:nationality dbr:French ;
          dbo:occupation dbo:Writer ;
          dbo:wikiPageWikiLink dbr:French_Algeria .
  
  ?author dbo:work ?work .

  OPTIONAL {
    ?person foaf:name ?name .
    ?decedent dbo:child ?person .
    FILTER EXISTS { ?decedent dbo:deathPlace ?place }
  }

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,3,4,3,1,3,3,71,0,0,30,0,0.0,0
747,25,val,Give me the band of the person born as Tracey Elizabeth McSween and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?personLabel ?band ?bandLabel
WHERE {
  VALUES (?person ?personLabel) {
    (dbr:Tracy_Bonham ""Tracy Bonham""@en)
    (dbr:Amba_Shepherd ""Amba Shepherd""@en)
  }
  
  OPTIONAL {
    ?person dbo:band ?band .
    ?band rdfs:label ?bandLabel .
    FILTER(LANG(?bandLabel) = 'en')
  }
}
ORDER BY ?person
```",3,3,4,2,2,3,3,71,0,4,1,0.0,0.0,0
9,27,val,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  ?entity a dbo:EducationalInstitution ;
          dbo:location dbr:Northern_Ireland ;
          dbp:nickname ?nickname .
}
```",3,5,4,3,1,3,3,71,0,0,13,0,0.0,0
378,44,val,Give me the war of the commander in Peninsular War and claim to fame of the commander in Great Siege of Gibraltar and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?peninsularWarCommander ?gibraltarFame ?carlPontusGahnWar
WHERE {
  # Find commanders in the Peninsular War
  ?peninsularWarCommander dbo:participatedIn dbr:Peninsular_War .
  
  # Find claim to fame of commander during Great Siege of Gibraltar
  ?gibraltarCommander dbo:participatedIn dbr:Great_Siege_of_Gibraltar ;
                     dbo:famousFor ?gibraltarFame .

  # Find war associated with Carl Pontus Gahn
  ?carlPontusGahnWar dbo:commandedBy dbr:Carl_Pontus_Gahn .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
801,30,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of Westside Story (song) and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?artist WHERE {
  ?song1 dbo:composer ?writer .
  ?song2 dbo:producer ?writer .
  
  FILTER (?song1 = dbr:40_Dayz_&_40_Nightz && ?song2 = dbr:Westside_Story_(song))
  
  ?writer rdf:type dbo:MusicalArtist ;
          rdf:type dbo:Artist .

  BIND(?writer AS ?artist)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
378,20,val,Give me the war of the commander in Peninsular War and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?commander WHERE {
  # Peninsular War and its commanders
  {
    VALUES ?peninsularWar { dbr:Peninsular_War }
    ?peninsularWar dbo:commander ?commander .
  }

  UNION

  # Wars involving Carl Pontus Gahn as a commander
  {
    ?war dbo:commander dbr:C._P._Gahn .
  }
}
ORDER BY ?war
```",3,3,4,2,2,3,3,71,0,37,2,0.0,0.0,0
9,44,val,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of Royal Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  # Find Queen's University Belfast and its nickname
  dbr:Queen's_University_Belfast dbo:nickname ?nickname .

  # Ensure John Alderdice attended this university
  dbr:John_Alderdice dbo:almaMater dbr:Queen's_University_Belfast .

  # Find awardees of the Royal Medal and ensure they attended this university
  {
    SELECT DISTINCT ?awardee WHERE {
      ?awardee dbo:award ?royalMedal .
      ?royalMedal rdf:type dbr:Royal_Medal .
      ?awardee dbo:almaMater dbr:Queen's_University_Belfast .
    }
  }
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
339,15,val,Give me the father of Princess Elizabeth of Greece and Denmark and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?result
WHERE {
  # Step 1: Find Princess Elizabeth of Greece and Denmark
  ?princess a dbo:Princess ;
            rdfs:label ""Elizabeth of Greece and Denmark""@en .

  # Step 2: Identify her father
  ?father dbo:child ?princess .
  
  # Step 3: Find Frederick VIII of Denmark
  ?frederickVIII a dbo:Monarch ;
                 rdfs:label ""Frederick VIII of Denmark""@en .

  # Step 4: Determine his predecessor
  ?predecessor dbo:successor ?frederickVIII .
  
  # Step 5: Find the child of the predecessor
  ?child1 dbo:child ?predecessor .
  
  # Step 6: Find the child of that child (grandchild of predecessor)
  ?result dbo:child ?child1 .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
547,39,val,Give me the resting place of Simon Cadell and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?simonRestingPlace ?awardeeRestingPlace WHERE {
  # Simon Cadell's resting place
  dbr:Simon_Cadell dbo:finalBurialLocation ?simonRestingPlace .

  # Find the awardee of Gerald Graham
  OPTIONAL {
    ?award dbo:recipient ?awardee .
    ?award dbo:givenBy dbr:Gerald_Graham .
    
    # Awardee's resting place
    ?awardee dbo:finalBurialLocation ?awardeeRestingPlace .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
528,36,val,Give me the war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?force
WHERE {
  # Find the war involving Irene Morales
  ?person rdfs:label ""Irene Morales""@en .
  ?person dbo:memberOf ?organization .
  ?organization dbo:member ?soldier .
  ?soldier dbo:participatedIn ?war .

  # Find the birth name of Narciso Campero and his associated force
  ?narciso rdfs:label ""Narciso Campero""@en .
  ?narciso foaf:birthday ?birthday .
  ?narciso dbo:birthName ?birthName .
  ?narciso dbo:memberOf ?force .

  # Ensure the same war is involved
  FILTER(?war = ?soldier)
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
617,24,val,Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?child dbo:father dbr:Antiochus_III_the_Great .
  ?child dbo:mother ?mother .
  ?spouse dbo:spouse ?child .
  ?spouse dbo:parent dbr:Nysa_(wife_of_Pharnaces_I_of_Pontus) .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
339,13,val,Give me the child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild
WHERE {
  ?frederickVIII a dbo:Monarch ;
                 dbp:predecessor ?predecessor .
  
  FILTER (str(?frederickVIII) = ""Frederick VIII of Denmark"") .

  ?predecessor dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .
}
```",3,3,4,3,1,3,2,20,0,0,32,0,0.0,0
16,20,val,Give me the professional in the profession of Satomi Ishihara and spouse of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?satomiProfession ?tedSpouse
WHERE {
  ?satomi a dbo:Person ;
          foaf:name ""Satomi Ishihara""@en .
  ?satomi dbo:profession ?satomiProfession .

  ?ted a dbo:Person ;
       foaf:name ""Ted McGinley""@en .
  ?ted dbp:spouse ?satomi .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
617,18,val,Give me the spouse of Laodice IV and child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  ?laodiceIV a dbo:Person ;
             dbo:spouse ?spouse ;
             dbo:parent dbr:Antiochus_III_the_Great .

  ?nysa a dbo:Person ;
        dbo:parent ?spouse ;
        rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .

}
```",3,3,4,1,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
996,14,val,Give me the entity in the award of the native of Palestine (region).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?award
WHERE {
    ?person dbo:nativePlace dbr:Palestine .
    ?person dbo:award ?award .
}
```",3,3,4,3,1,3,2,20,0,0,292,0,0.0,0
391,21,val,Give me the native of the figure known as Hub City and actor of All About the Andersons.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?birthPlaceLabel WHERE {
  # Find the resource for ""All About the Andersons""
  dbr:All_About_the_Andersons dbo:starring ?actor .
  
  # Ensure the actor is associated with a city known as ""Hub City""
  ?actor dbo:nativePlace ?nativePlace .
  ?nativePlace rdfs:label ?cityLabel .
  FILTER(CONTAINS(LCASE(?cityLabel), ""hub city""))

  # Get the birthplace label
  ?actor dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .

  # Filter to ensure we get human actors
  ?actor a dbo:Actor .
}
ORDER BY ?actor",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
345,14,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?team
WHERE {
  # Get Eiður Guðjohnsen's birth date
  dbr:Eiður_Guðjohnsen dbo:birthday ?birthDate .

  # Find people who are both soccer players and managers born on the same date
  ?person dbo:birthDate ?birthDate ;
          a dbo:SoccerPlayer, dbo:SoccerManager .

  # Get teams associated with these individuals
  OPTIONAL { ?person dbo:team ?team . }
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
9,37,val,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as QUB.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater
WHERE {
  ?person dbo:award dbr:Royal_Medal .
  ?person dbo:almaMater ?almaMater .
  OPTIONAL { ?person dbo:affiliation dbr:Queen's_University_Belfast . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
492,42,val,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander ?decedentAlgiers ?decedentSatterthwaite
WHERE {
  # Commander in Franco-Hova Wars
  ?commander dbo:role ""Commander""@en .
  ?commander dbo:participatedIn dbr:Franco-Hova_Wars .

  # Person decedent at the capital of Algeria (Algiers)
  ?decedentAlgiers dbo:placeOfBirth dbr:Algiers ;
                  dbo:deathPlace dbr:Algiers .

  # Person decedent at the work location of Joseph C. Satterthwaite
  ?satterthwaiteOffice dbp:office ""Assistant Secretary of State for African Affairs""@en .
  ?decedentSatterthwaite dbo:placeOfWork ?satterthwaiteOffice ;
                         dbo:deathPlace ?satterthwaiteOffice .

  # Ensure the same person is decedent in both locations
  FILTER(?decedentAlgiers = ?decedentSatterthwaite)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
617,28,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of Seleucus II Callinicus and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseOfLaodiceIV ?royalChild
WHERE {
  # Find Laodice IV's spouse
  ?laodiceIV a dbo:Person ;
             dbp:name ""Laodice IV""@en .
  
  ?laodiceIV dbo:spouse ?spouseOfLaodiceIV .

  # Find Seleucus II Callinicus' child who is royalty and parent of Nysa
  ?seleucusII a dbo:Person ;
              dbp:name ""Seleucus II Callinicus""@en .
  
  ?child a dbo:RoyalFamilyMember ;
         dbo:parent ?seleucusII ;
         dbo:child ?nysa .

  ?nysa dbp:spouse ?pharnacesI .

  ?pharnacesI dbp:name ""Pharnaces I of Pontus""@en .
  
  # Ensure the child is royalty
  ?child a dbo:RoyalFamilyMember .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
534,13,val,"Give me the birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace
WHERE {
  ?politician a dbo:Politician ;
              dbo:nativePlace dbr:Essex .
  
  ?child a dbo:Politician, dbo:OfficeHolder ;
         foaf:parent ?politician ;
         dbo:birthPlace ?birthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
701,23,val,Give me the parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?amunherkhepeshef a dbo:Person ;
                    foaf:name ""Amun-her-khepeshef""@en .
  
  ?spouse dbo:spouseOf ?amunherkhepeshef ;
          a dbo:Person .

  ?child dbo:parent ?spouse ;
         a dbo:Person .

  ?parent dbo:parent ?child .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
48,12,val,"Give me the band of Carl Falk and band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?carlFalkBand ?honorUpBand
WHERE {
  # Find Carl Falk's band
  ?carlFalk a dbo:Musician ;
            foaf:name ""Carl Falk"" .
  
  OPTIONAL { 
    ?band1 dbp:member ?carlFalk .
    ?band1 foaf:name ?carlFalkBand .
  }
  
  # Find Honor Up's band, ensuring he is also a musical artist
  ?honorUp a dbo:Actor ;
           foaf:name ""Honor Up"" .
  
  OPTIONAL {
    ?artist rdf:type dbo:MusicalArtist ;
            foaf:name ""Honor Up"" .
    
    ?band2 dbp:member ?artist .
    ?band2 foaf:name ?honorUpBand .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
182,15,val,Give me the entity in Sri Lanka and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity ?war
WHERE {
  # Find the resource for the 2019 Sri Lanka Easter bombings
  dbr:Sri_Lanka_Easter_bombings_2019 a dbo:Event .

  # Identify the author(s) of the event (assuming 'perpetrator' or similar property)
  OPTIONAL { 
    ?event dbo:perpetrator ?author .
    
    # Find wars associated with the author
    ?author dbo:nationality ?nationality ;
            dbo:memberOf ?organization .

    OPTIONAL {
      ?organization dbo:participatedIn ?war .
    }
  }

  # Filter to ensure we are looking at entities in Sri Lanka
  FILTER regex(?entity, ""Sri Lanka"", ""i"")
}
```

### Explanation

- **PREFIX**: Define common prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT**: Choose distinct entities and wars to avoid duplicates.
- **WHERE Clause**:
  - Identify the event using its resource identifier.
  - Use `OPTIONAL` to find authors and their associated organizations or wars, ensuring flexibility in data availability.
  - Apply a filter to focus on entities related to Sri Lanka.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
528,23,val,"Give me the war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?war
WHERE {
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:country dbr:Chile .
  
  ?war a dbo:War ;
      dbo:participatingMilitaryGroup ?militaryForce .
}
```",3,4,4,3,1,3,3,71,0,0,235,0,0.0,0
429,7,val,Give me the administration of the father of Martha Johnson Patterson and country of 77th Ohio Infantry Regiment.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?country
WHERE {
    # Find Martha Johnson Patterson and her father
    ?martha a dbo:Person ;
            foaf:name ""Martha Johnson Patterson"" ;
            dbo:father ?father .

    # Get the administration of Martha's father
    ?father dbo:positionHeld ?position .
    ?position dbo:administrativeArea ?administration .

    # Find the 77th Ohio Infantry Regiment and its country
    ?regiment a dbo:MilitaryUnit ;
              foaf:name ""77th Ohio Infantry Regiment"" .
    ?regiment dbo:country ?country .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
54,34,val,Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfThinkhaya
WHERE {
  # Find Thinkhaya of Pagan and his child
  ?thinkhaya a dbo:Monarch ;
             foaf:name ""Thinkhaya""@en ;
             dbo:country dbr:Pagan_Kingdom .
  
  ?thinkhayaChild dbo:parent ?thinkhaya ;
                  a dbo:Person .

  # Find Ameitta Thiri Maha Dhamma Dewi of Ava and her predecessor
  ?ameitta a dbo:Monarch ;
           foaf:name ""Ameitta Thiri Maha Dhamma Dewi""@en ;
           dbo:country dbr:Ava_Kingdom .
  
  ?predecessor dbo:succeededBy ?ameitta .

  # Link the child of Thinkhaya to the predecessor of Ameitta
  ?thinkhayaChild foaf:name ?childOfThinkhaya .
  FILTER (?thinkhayaChild = ?predecessor)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
959,20,val,"Give me the member of University of Tsukuba and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the country of residence for Yōichi Masuzoe
  dbr:Yōichi_Masuzoe dbo:nationality ?country .

  # Find members of University of Tsukuba who are native to the same country as Yōichi Masuzoe
  ?person dbo:almaMater dbr:University_of_Tsukuba .
  ?person dbo:nationality ?country .
}
```",3,4,4,2,2,3,3,71,0,0,84,0,0.0,0
435,14,val,Give me the territory administered from Reykjavík and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?territory ?region
WHERE {
  # Find territories administered from Reykjavík (Iceland)
  ?country dbo:capital dbr:Reykjavík .
  
  # Link to Bombali Shebora Chiefdom through Sierra Leone's administrative structure
  ?chiefdom dbp:partOf dbr:Bombali_Shebora_Chuifdom ;
            dbp:timeZone ?timezone .

  # Find the region of the time zone for the chiefdom
  ?region dbp:timeZone ?timezone .
  
  # Optional: Link territories to countries if needed
  OPTIONAL { ?territory dbo:country ?country }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
747,21,val,Give me the person born on the birth date of Pavlo Khudzik and band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?band 
WHERE {
  # Find Pavlo Khudzik's birth date
  VALUES ?pavloKhudzikBirthDate { 
    SELECT ?birthDate WHERE { 
      dbr:Pavlo_Khudzik dbo:birthday ?birthDate .
    }
  }

  # Find people born on the same date as Pavlo Khudzik
  ?person dbo:birthday ?pavloKhudzikBirthDate .

  # Ensure we exclude Pavlo Khudzik himself from results
  FILTER (?person != dbr:Pavlo_Khudzik)

  # Find Shèna's band
  VALUES ?shenaBand { 
    SELECT ?band WHERE {
      dbr:Shèna dbo:memberOf ?band .
    }
  }

  # Return the person and Shèna's band
  BIND(?shenaBand AS ?band)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
994,29,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of S.A. Slayer and band member of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?meshuggahMember ?associatedArtistMeshuggah ?dokkenMember ?associatedArtistDokken
WHERE {
  # Find a band member of Meshuggah
  ?meshuggahMember dbo:band dbr:Meshuggah .
  
  # Find associated musical artist of this Meshuggah member who is also an artist with Tom Araya (S.A. Slayer)
  ?meshuggahMember dbo:associatedMusicalArtist ?artist1 .
  ?artist1 dbo:associatedBandMember ?slayerMember .
  ?slayerMember rdfs:label ""Tom Araya""@en .

  # Find associated musical artist of this Meshuggah member
  ?meshuggahMember dbo:associatedMusicalArtist ?associatedArtistMeshuggah .

  # Find a band member of Don Dokken
  ?dokkenMember dbo:band dbr:Don_Dokken .
  
  # Find associated musical artist of this Don Dokken member
  ?dokkenMember dbo:associatedMusicalArtist ?associatedArtistDokken .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
528,29,val,Give me the war of Irene Morales and war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?battle ?force
WHERE {
  # War involving Irene Morales
  OPTIONAL {
    ?person rdfs:label ""Irene Morales""@en .
    ?person dbo:memberOf ?organization .
    ?organization dbo:participatedIn ?war .
    BIND(?war AS ?war1)
  }

  # Battle of La Rinconada de Ate and its commander
  OPTIONAL {
    dbr:Battle_of_La_Rinconada_de_Ate dbo:commander ?commander .
    ?commander rdfs:label ?commanderLabel .
    BIND(dbr:Battle_of_La_Rinconada_de_Ate AS ?battle)
  }

  # Force associated with Narciso Campero
  OPTIONAL {
    dbr:Narciso_Campero dbo:memberOf ?force .
    BIND(?force AS ?force1)
  }
}
```",4,4,5,2,3,3,3,71,0,1,2,0.0,0.0,0
617,23,val,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandChildOfSuccessor WHERE {
  # Find Antiochus II Theos
  ?antiochus2 dbo:successor ?successor .
  
  FILTER (str(?antiochus2) = ""Antiochus_II_Theos"")

  # Ensure the successor is royalty
  ?successor a dbo:Monarch .

  # Find the child of the successor who is also royalty
  ?successor dbo:child ?childOfSuccessor .
  
  FILTER (?childOfSuccessor a dbo:Monarch)

  # Finally, find the grandchild (child of the child) who is royalty
  ?childOfSuccessor dbo:child ?grandChildOfSuccessor .

  FILTER (?grandChildOfSuccessor a dbo:Monarch)
}
```",3,5,4,3,1,3,3,71,0,0,5,0,0.0,0
54,20,val,Give me the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Thinkhaya of Pagan and his child
  ?thinkhaya a dbo:Person ;
             foaf:name ""Thinkhaya""@en .
  
  ?child1 dbo:parent ?thinkhaya .

  # Find Narapati I of Ava and his child
  ?narapatiI a dbo:Person ;
             foaf:name ""Narapati I""@en .
  
  ?child2 dbo:parent ?narapatiI .

  # The person we are looking for is the child of Thinkhaya and parent to Narapati's child
  ?person dbo:parent ?thinkhaya ;
          dbo:child ?child2 .
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
281,22,val,"Give me the war of the profession, that is a military unit, of Heather Roy and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?unitHeatherRoy ?unitBeauchampSeymour
WHERE {
  ?heatherRoy a dbo:Person ;
              foaf:name ""Heather Roy""@en .
  
  ?beauchampSeymour a dbo:Person ;
                    foaf:name ""Beauchamp Seymour, 1st Baron Alcester""@en .

  OPTIONAL { 
    ?heatherRoy dbp:militaryUnit ?unitHeatherRoy .
  }
  
  OPTIONAL {
    ?beauchampSeymour dbp:militaryUnit ?unitBeauchampSeymour .
  }
}
```

### Explanation:
- **PREFIX**: Define common prefixes for DBpedia ontology and properties.
- **SELECT Clause**: Choose the military units associated with Heather Roy and Beauchamp Seymour.
- **WHERE Clause**:
  - Identify individuals by their names using `foaf:name`.
  - Use optional patterns to find any military unit (`dbp:militaryUnit`) linked to each person.

This query will retrieve the military units (if available) associated with both Heather Roy and Beauchamp Seymour, 1st Baron Alcester.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,40,val,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?office ?battle ?militaryForce
WHERE {
  ?person a dbo:MilitaryPerson .
  
  # Office holder in Kingdom of Ireland
  ?person dbo:officeHolderOf dbr:Kingdom_of_Ireland ;
          dbo:positionHeld ?office .

  # Commander in Battle of Leipzig
  ?person dbo:commanderInBattle dbr:Battle_of_Leipzig .

  # Military force during Napoleonic Wars
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:partOfMilitaryConflict dbr:Napoleonic_Wars .
  ?person dbo:militaryCommanderOf ?militaryForce .
}
```",5,6,6,3,3,3,3,71,0,0,5,0,0.0,0
184,40,val,"Give me the parent of Archduchess Ilona of Austria and child of Archduke Joseph August of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentIlona ?childJosephAugust ?parentNative
WHERE {
  # Parent of Archduchess Ilona of Austria
  ?ilona dbo:parent ?parentIlona .
  VALUES ?ilona { <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> }

  # Child of Archduke Joseph August of Austria
  ?josephAugust dbo:child ?childJosephAugust .
  VALUES ?josephAugust { <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> }

  # Landmark at elevation 96.0 that is a settlement
  ?landmark geo:elevation ""96.0""^^xsd:float ;
            dbo:settlement true .
  
  # Native of the landmark
  ?native dbp:nativeOf ?landmark .

  # Parent of the native
  ?native dbo:parent ?parentNative .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
378,26,val,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?commander WHERE {
  # Find commanders involved in the Peninsular War
  ?peninsularWar dbo:commander ?commander .
  FILTER (str(?peninsularWar) = ""Peninsular_War"")

  # Find other wars commanded by these commanders
  ?otherWar dbo:commander ?commander .

  # Ensure we are only considering military conflicts
  ?otherWar a dbo:MilitaryConflict .
}
ORDER BY ?war
```",3,4,4,3,1,3,3,71,0,0,118,0,0.0,0
767,35,val,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?settlement ?alterEgo
WHERE {
    # Find the settlement associated with Green in administration
    ?green a dbo:Person ;
           foaf:name ""Green"" ;
           dbo:residence ?settlement .
    
    ?adminRole dbo:administrator ?green ;
               dbo:administrativeRegion ?settlement .

    # Find the alter ego of Black Hood
    ?blackHood a dbo:Person ;
               foaf:name ""Black Hood"" .
    
    ?alterEgo dbo:alias ?blackHood ;
              foaf:name ?alterEgoName .

    # Link the entity in administration to the alter ego
    ?entity dbo:administrator ?alterEgo .
}
```",4,5,5,2,2,3,3,71,0,0,7,0,0.0,0
747,38,val,Give me the band of the writer of Apollo (Hardwell song) and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?writerBand ?traceyBand
WHERE {
  # Find the writer of the song ""Apollo"" by Hardwell
  ?song dbo:title ""Apollo""@en .
  ?song dbo:lyricsBy ?writer .
  
  OPTIONAL { 
    ?writer dbo:bandMemberOf ?writerBand .
  }
  
  # Find Tracey Elizabeth McSween and her band
  ?person foaf:name ?name .
  FILTER regex(?name, ""Tracey Elizabeth McSween"", ""i"") .

  OPTIONAL {
    ?person dbo:bandMemberOf ?traceyBand .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
360,19,val,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann and native of Johannesburg.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer ?album WHERE {
  ?album a dbo:MusicAlbum ;
         dbo:composer ?writer ;
         dbo:lyricist ?flett .
  
  ?flett rdfs:label ""Dave Flett""@en .

  ?band dbo:member ?manfredMann .
  ?manfredMann rdfs:label ""Manfred Mann""@en .
  ?album dbo:artist ?band .

  ?writer dbp:nativePlace dbr:Johannesburg .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
994,42,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtistRedTide ?bandMemberOfDokken ?associatedArtistWatchtower ?finalAssociatedArtist
WHERE {
  # Step 1: Find associated musical artist of Red Tide
  dbr:Red_Tide (dbo:musicalArtist) ?associatedArtistRedTide .

  # Step 2: Find band members of Donald Maynard Dokken who are also musical artists
  dbr:Don_Dokken dbo:bandMember ?bandMemberOfDokken .
  FILTER EXISTS { ?bandMemberOfDokken a dbo:MusicalArtist . }

  # Step 3: Find associated musical artist of Watchtower
  dbr:Watchtower (dbo:musicalArtist) ?associatedArtistWatchtower .

  # Step 4: Find the associated musical artist of the result from step 3
  ?associatedArtistWatchtower dbo:musicalArtist ?finalAssociatedArtist .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
251,13,val,"Give me the administration of Forza Italia (2013) and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/place> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?warLocation
WHERE {
  # Find Forza Italia (2013) administration
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Forza Italia""@en .
  
  OPTIONAL {
    ?party dbo:member ?person .
    ?person dbo:officeHeld ?office .
    ?office dbo:startDate ?startYear .
    FILTER (?startYear <= ""2013-12-31""^^xsd:date && 
            (?endYear >= ""2013-01-01""^^xsd:date || NOT EXISTS { ?office dbo:endDate ?endYear }))
    BIND(CONCAT(""Administration of "", STR(?person)) AS ?administration)
  }
  
  # Find military conflict involving Louis François Félix Musnier
  ?musnier a dbo:Person ;
           rdfs:label ""Louis François Félix Musnier""@en .
  
  OPTIONAL {
    ?conflict dbo:participant ?musnier ;
              dbo:location ?location .
    BIND(STR(?location) AS ?warLocation)
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
492,35,val,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?personDecedentAtCapital ?personDecedentAtWorkplace
WHERE {
  # Find the capital of Algeria and ensure it is a settlement
  dbr:Algiers dbo:country dbr:Algeria .
  dbr:Algiers rdf:type dbo:Settlement .

  # Person decedent at the capital of Algeria
  ?personDecedentAtCapital dbo:placeOfDeath dbr:Algiers .
  
  # Joseph C. Satterthwaite's workplace
  dbr:Joseph_C._Satterthwaite dbo:officeTitle ""Assistant Secretary of State for African Affairs""@en ;
                               dbo:workLocation ?workplace .

  # Person decedent at the workplace associated with Joseph C. Satterthwaite
  ?personDecedentAtWorkplace dbo:placeOfDeath ?workplace .
}
```",4,5,5,2,2,3,3,71,0,0,16,0,0.0,0
161,25,val,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  ?event dbo:participatedIn dbr:Spanish_Civil_War .
  ?event dbo:commander dbr:Emilio_Mola .
  ?event dbo:militaryUnit ?militaryForce .
  OPTIONAL { ?militaryForce dbo:commander ?commander . }
}
```",3,4,4,2,2,3,3,71,0,0,32,0,0.0,0
801,28,val,Give me the producer of Westside Story (song) and associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?associatedArtist ?professional 
WHERE {
  # Producer of Westside Story (song)
  dbr:Westside_Story_(song) dbo:composer ?producer .

  # Associated musical artist with Chris Taylor
  OPTIONAL { 
    dbr:Chris_Taylor_(music_producer) dbo:worksWith ?associatedArtist .
  }

  # Professional associated with The Shadow
  OPTIONAL {
    dbr:The_Shadow dbo:profession ?professional .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
981,11,val,Give me the entity in the region of Time in Indonesia and birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?entityInTimeRegion ?birthPlace
WHERE {
  # Find entities related to ""Time"" in Indonesia
  ?entityInTimeRegion a dbo:Place ;
                     dbo:country dbr:Indonesia ;
                     rdfs:label ?label .
  FILTER CONTAINS(LCASE(?label), ""time"")

  # Find birthplace of Novia Indriani Mamuaja
  OPTIONAL {
    dbr:Novia_Indriani_Mamuaja dbo:birthPlace ?birthPlace .
  }
}
```

This query does the following:
- Selects entities that are places (`dbo:Place`) in Indonesia and have ""time"" in their label.
- Optionally retrieves the birthplace of Novia Indriani Mamuaja.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
232,19,val,Give me the child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Find the DBpedia resource for John Pertwee
  dbr:John_Pertwee a dbo:Person ;
                   foaf:name ""John Devon Roland Pertwee""@en .

  # Find his child
  ?child dbo:parent dbr:John_Pertwee .

  # Find the actor of Dog Soldiers
  ?actor dbo:film dbr:Dog_Soldiers ;
         a dbo:Actor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
617,13,val,"Give me the child of the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild
WHERE {
  # Find Mlada (abbess)
  ?mlada a dbo:Apostle ;
         foaf:name ""Mlada""@en .
  
  # Identify the parent of Mlada
  ?parent dbo:spouseOrPartner ?mlada .

  # Find children of this parent
  ?childOfParent dbo:spouseOrPartner ?parent ;
                 a dbo:Person .

  # Among these children, find their children (grandchildren of Mlada's parent)
  ?childOfChild dbo:spouseOrPartner ?childOfParent ;
                a dbo:Person .

  # Filter for those who are royalty
  ?childOfChild dbo:royalty dbp:true .
}
```",3,4,4,3,1,3,2,20,0,0,4,0,0.0,0
801,33,val,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?musicalWork
WHERE {
  ?musicalWork a dbo:Songs .
  ?musicalWork dbo:genre dbr:Rap_music .

  ?production dbo:work ?musicalWork ;
              dbo:agent ?producer .

  ?producer a dbo:MusicalArtist ;
            dbo:occupation dbr:Rapper .

}
```",4,8,5,3,2,3,3,71,0,0,473,0,0.0,0
959,38,val,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of the team of Takashi Sekizuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry
WHERE {
  # Find Yōichi Masuzoe's residence and its native country
  dbr:Yōichi_Masuzoe dbo:residence ?residence .
  ?residence dbo:nativeCountry ?nativeCountry .

  # Find the team managed by Takashi Sekizuka
  OPTIONAL {
    ?team dbo:manager dbr:Takashi_Sekizuka .
  }
}
```",4,5,5,2,2,3,3,71,0,0,6,0,0.0,0
959,34,val,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?almaMater
WHERE {
  # Find the manager of Júbilo Iwata in 2013
  ?team dbr:Júbilo_Iwata ;
        dbo:coach ?manager .
  
  # Ensure the manager was associated with the team during the 2013 season
  ?manager dbp:birthdayYear ""1958""^^xsd:gyear .

  # Find the alma mater of the manager
  ?manager dbo:almaMater ?almaMater .

  # Alma mater must be a Japanese organization, university, and educational institution
  ?almaMater rdf:type dbo:University ;
             dbo:country dbr:Japan ;
             rdf:type dbo:EducationalOrganization .
}
```

This query does the following:
- Selects the manager of Júbilo Iwata in 2013 who was born in 1958.
- Retrieves the alma mater of this manager, ensuring it is a Japanese university and educational organization.",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
378,31,val,Give me the war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warJoaquinBlake ?warCarlPontusGahn
WHERE {
  # Joaquín Blake and his associated war
  OPTIONAL {
    dbr:Joaqu%C3%ADn_Blake dbo:participatedIn ?warJoaquinBlake .
  }
  
  # Carl Pontus Gahn and any associated war (though historically, he might not be directly linked to a specific war)
  OPTIONAL {
    dbr:Carl_Pontus_Gahn dbo:participatedIn ?warCarlPontusGahn .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
959,44,val,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of Yōichi Masuzoe and member of University of Tsukuba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?country
WHERE {
  # Takashi Sekizuka's team and its manager
  ?team dbo:player ?takashi .
  ?takashi rdfs:label ""Takashi Sekizuka""@en .
  
  OPTIONAL { 
    ?team dbp:manager ?manager .
  }
  
  # Yōichi Masuzoe's country of residence and university membership
  ?yoi dbo:nationality ?country .
  ?yoi rdfs:label ""Yōichi Masuzoe""@en .

  ?university dbo:member ?yoi .
  ?university rdfs:label ""University of Tsukuba""@en .
}
```",5,6,6,2,3,3,3,71,0,0,2,0,0.0,0
182,12,val,Give me the war of Mahesh Senanayake and entity in Sri Lanka and war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?relatedEntity
WHERE {
  # Mahesh Senanayake related wars
  {
    ?person rdfs:label ""Mahesh Senanayake""@en .
    ?person dbo:nationality dbr:Sri_Lanka .
    ?person dbo:spouse ?relatedEntity .
    ?relatedEntity dbo:spouse ?person .
    OPTIONAL { ?person dbo:occupation ?occupation . FILTER regex(?occupation, ""war"", ""i"") }
  }

  UNION

  # Jagath Dias related wars
  {
    ?person rdfs:label ""Jagath Dias""@en .
    ?person dbo:nationality dbr:Sri_Lanka .
    ?person dbo:spouse ?relatedEntity .
    ?relatedEntity dbo:spouse ?person .
    OPTIONAL { ?person dbo:occupation ?occupation . FILTER regex(?occupation, ""war"", ""i"") }
  }

  # Filter to ensure the context is within Sri Lanka
  FILTER EXISTS {
    ?person dbo:nationality dbr:Sri_Lanka .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
488,27,val,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?administration
WHERE {
  ?tokugawaMasako a dbo:Person ;
                  foaf:surname ""Tokugawa"" ;
                  foaf:name ""Masako""@en .
  
  ?spouse foaf:mariage ?tokugawaMasako .

  ?father foaf:parentOf ?spouse ;
          rdf:type dbo:RoyalFamilyMember .

  ?administration dbo:positionHeldBy ?father .
}
```

This query does the following:
- Identifies Tokugawa Masako as a person.
- Finds her spouse using the `foaf:mariage` property.
- Determines the father of this spouse and checks if he is part of the royal family (`dbo:RoyalFamilyMember`).
- Retrieves the administration or position held by this royal individual.",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
232,20,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Sean Pertwee's details
  dbr:Sean_Pertwee a dbo:Actor ;
                   foaf:surname ""Pertwee"" ;
                   foaf:parent dbr:Jon_Pertwee .

  # Jon Pertwee as the parent of Sean Pertwee
  dbr:Jon_Pertwee a dbo:Person ;
                  foaf:name ""Jon Pertwee"" .

  # Sean Pertwee's notable works (films and military conflicts)
  ?work dbo:actor dbr:Sean_Pertwee .
  ?work rdf:type ?type .
  
  FILTER (?type IN (dbo:Film, dbo:MilitaryConflict)) .

  # Retrieve actors involved in these works
  ?work dbo:actor ?actor .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
328,26,val,Give me the commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?person dbo:deathPlace dbr:Budapest .
  ?person dbo:militaryUnit ?force .
  ?force dbo:commander ?commander .
}
```

This query assumes:
- `dbo:deathPlace` is used to identify the place of death, which we filter by Budapest.
- `dbo:militaryUnit` links a person to their military unit.
- `dbo:commander` identifies the commander of that unit.",3,3,4,3,1,3,3,71,0,0,306,0,0.0,0
16,25,val,Give me the professional in Actress and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional
WHERE {
  # Get Gigi Rice's birth name
  ?gigi a dbo:Person ;
        foaf:name ""Gigi Rice"" .
  
  OPTIONAL { 
    ?gigi foaf:mbox ?email . # To ensure we have the correct person, if needed
  }
  
  ?gigi foaf:birthday ?birthDate .
  ?gigi foaf:givenName ?birthGivenName ;
        foaf:surname ?birthSurname .

  # Find professionals who are actresses and share the same birth name
  ?professional a dbo:Person ;
                dbo:occupation dbo:Actress ;
                foaf:givenName ?birthGivenName ;
                foaf:surname ?birthSurname .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
232,32,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Sean Pertwee and his father
  dbr:Sean_Pertwee dbo:childOf dbr:John_Devon_Roland_Pertwee .
  
  # Sean Pertwee's notable works (films)
  dbr:Sean_Pertwee dbo:film dbr:Film1 .
  FILTER EXISTS { dbr:Film1 a dbo:Film . }
  
  # Sean Pertwee's notable works (military conflicts)
  dbr:Sean_Pertwee dbo:militaryConflict dbr:MilitaryConflict1 .
  FILTER EXISTS { dbr:MilitaryConflict1 a dbo:MilitaryConflict . }

  # Return the actor
  BIND(dbr:Sean_Pertwee AS ?actor)
}
```

This query does the following:
- Identifies Sean Pertwee and his father using DBpedia resources.
- Checks for films and military conflicts associated with Sean Pertwee.
- Ensures that these works are indeed a film and a military conflict by filtering on their types.
- Returns Sean Pertwee as the actor.",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
767,42,val,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?green dbo:administrativeUnit ?entity .
  ?entity rdf:type dbo:Settlement .

  ?blackHood dbo:alterEgo ?relatedEntity .
  ?nippert dbo:almaMater ?relatedEntity .

  FILTER(?entity = ?relatedEntity)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
747,22,val,Give me the band of the person born as Tracey Elizabeth McSween and person born on 1985-04-29.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?band
WHERE {
  # For Tracey Elizabeth McSween
  { 
    ?person foaf:name ""Tracey Elizabeth McSween""@en .
    ?person dbo:musicalBand ?band .
  }
  
  UNION
  
  # For person born on 1985-04-29
  { 
    ?person dbo:birthDate ?date .
    FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
    ?person dbo:musicalBand ?band .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,29,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent
WHERE {
  # Ernest Augustus, Crown Prince of Hanover
  dbr:Ernest_Augustus,_Crown_Prince_of_Hanover dbo:child ?child .
  
  # The child must be a royalty and have a parent who is also a royalty
  ?child rdf:type dbo:Monarch .
  ?child dbo:parent ?parent .

  # Ernest Augustus, Duke of Brunswick
  ?parent rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .

  # Spouse relationship with Princess Victoria Louise of Prussia
  ?parent dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
659,26,val,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander
WHERE {
  # Identify the military unit ""Polish Horse""
  dbr:Polish_Horse a dbo:MilitaryUnit ;
                   dbo:partOf ?war .

  # Ensure that the war is both an event and a military conflict
  ?war a dbo:Event, dbo:MilitaryConflict .

  # Find the commander of this war
  ?war dbo:commander ?commander .
}
```",3,7,4,3,1,3,3,71,0,0,130,0,0.0,0
747,31,val,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of Amba Shepherd.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate ?birthPlace WHERE {
  ?decedent a dbo:Person ;
            dbp:birthday ?birthDate .
  
  ?person a dbo:Athlete, dbo:SoccerPlayer ;
          dbp:birthday ?birthDate ;
          dbp:birthPlace dbr:Zolotonosha .

  OPTIONAL { 
    ?person dbo:bandMember dbr:Amba_Shepherd .
  }
}
```

This query assumes:
- The decedent's birth date is known and can be matched.
- The person we are looking for must be both an athlete and a soccer player, born in Zolotonosha, and have the same birthday as the decedent.
- There is an optional association with ""Amba Shepherd"" which might not always be present.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
701,39,val,"Give me the parent of Henuttawy (19th dynasty) and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfHenuttawy ?spouseOfGrandfather
WHERE {
  # Find Henuttawy and her parent
  ?henuttawy a dbo:Person ;
             foaf:name ""Henuttawy (19th dynasty)""@en .
  
  OPTIONAL { 
    ?henuttawy dbo:childOf ?parentOfHenuttawy .
  }
  
  # Identify the commander in the Battle of Perire and his father
  ?commander a dbo:Person ;
             dbo:participatedIn dbr:Battle_of_Perire .
  
  OPTIONAL {
    ?fatherOfCommander dbo:child ?commander .
    
    # Find the spouse of Henuttawy's grandfather (father's spouse)
    OPTIONAL { 
      ?spouseOfGrandfather dbo:spouse ?fatherOfCommander ;
                           a dbo:RoyalPerson .
    }
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
696,15,val,"Give me the landmark at elevation of 50 and birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?landmark ?birthPlace
WHERE {
  # Identify ""The Boils"" as an organization, group, and band
  dbr:The_Boils a dbo:Band ;
                 a dbo:MusicalGroup ;
                 a dbo:Organization .

  # Find members of the band
  ?member dbo:bandMemberOf dbr:The_Boils .
  
  # Get birthplace of each member
  ?member dbp:birthPlace ?birthPlace .

  # Identify landmarks at an elevation of 50 meters
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ?elevation .
  FILTER (?elevation = ""50""^^xsd:float)
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
404,42,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
  ?princess a dbo:Princess ;
            dbp:birthName ""Victoria Louise of Prussia"" .
  
  ?parent dbo:child ?princess ;
          dbo:spouse ?spouse .

  ?duke a dbo:Duke ;
        dbp:father ?parent ;
        rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .

  ?child a dbo:Prince ;
         dbp:birthDate ?date ;
         dbp:parent ?parent .
  
  FILTER (YEAR(?date) = 1914 && CONTAINS(LCASE(STR(?child)), ""ernest augustus of hanover""))
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
345,13,val,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  ?player dbo:nickname ?nickname .
  ?player foaf:name ""Armando Heeb"" .

  FILTER EXISTS { ?club a dbo:SportsClub . }
  FILTER EXISTS { ?club a dbo:Organization . }
  FILTER EXISTS { ?club a dbo:SoccerClub . }

  ?player dbo:memberOf ?club .
}
```

This query does the following:
- Selects the nickname (`?nickname`) of a player.
- Identifies the player as Armando Heeb using `foaf:name`.
- Ensures that the club associated with this player is categorized under sports clubs, organizations, and soccer clubs.",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
492,29,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?conflict a dbo:MilitaryConflict ;
            dbo:participant dbr:Frédéric-Georges_Herr .
  
  ?conflict dbo:commander ?commander .

  ?herr dbo:deathPlace ?place .
  FILTER (
    ?place = dbr:Algiers ||
    ?place = dbp:French_Algeria
  )
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
184,29,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of Géza von Habsburg and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual
WHERE {
  # Find a child of Archduke Joseph Karl of Austria
  ?child1 dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  
  # Find the grandchild (child of the child)
  ?grandchild dbo:parent ?child1 .

  # The individual we are looking for is a parent of both Géza von Habsburg and Archduchess Ilona of Austria
  ?individual dbo:parent dbr:Géza_von_Habsburg .
  ?individual dbo:parent dbr:Archduchess_Ilona_of_Austria .

  # The individual must be the grandchild found earlier
  FILTER (?grandchild = ?individual)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
9,21,val,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of Northern Ireland Forum.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater
WHERE {
  # Identify QUB as an entity
  dbr:Queen's_University_Belfast a dbo:EducationalInstitution ;
                                 rdfs:label ""QUB""@en .

  # Find the mayor who is also a politician of Northern Ireland Forum
  ?mayor dbo:positionHeld ?position .
  ?position dbo:officeHolder ?mayor ;
            dbo:organization dbr:Northern_Ireland_Forum .
  
  # Ensure the person is a politician
  ?mayor rdf:type dbo:Politician .

  # Retrieve alma mater of the identified mayor
  ?mayor dbo:almaMater ?almaMater .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
778,11,val,Give me the author of Chroot and entity in the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?awardEntity
WHERE {
  # Find the author of ""Chroot""
  OPTIONAL {
    ?chroot dbo:author ?author .
    FILTER (str(?chroot) = ""Chroot"")
  }
  
  # Find entities related to awards of Ralph L. Brinster
  OPTIONAL {
    dbr:Ralph_L._Brinster dbo:award ?award .
    ?award dbo:entity ?awardEntity .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
16,40,val,Give me the professional in Actress and spouse of the person born as the birth name of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?profession
WHERE {
  # Find Ted McGinley's birth name
  dbr:Ted_McGinley dbo:birthName ?birthName .

  # Find the spouse of the person with that birth name
  ?person foaf:name ?birthName .
  ?person dbo:spouse ?spouse .

  # Check if this spouse is a professional actress
  ?spouse dbo:occupation ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""actress""))
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,22,val,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  # Find Donald Maynard Dokken and his band members
  dbr:Don_Dokken a dbo:MusicalArtist .
  ?bandMember dbo:member dbr:Don_Dokken .

  # Check if the band member is also associated with S.A. Slayer
  ?bandMember dbo:associatedBand dbr:S_A_Slayer .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,39,val,"Give me the commander in Battle of Leipzig and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Identify the Battle of Leipzig as a military conflict, societal event, and general event
  dbr:Battle_of_Leipzig 
    dbo:commander ?commander ;
    dbo:militaryConflicts ?battleEvent .
  
  # Ensure it is classified as an event and societal event
  ?battleEvent rdf:type dbo:Event ;
               rdf:type dbo:SocietalEvent .

  # Identify the military force involved in the Battle of Leipzig
  ?militaryForce dbo:participatedIn ?battleEvent .

  # Filter to include only those with a reference to Rutger Jan Schimmelpenninck
  OPTIONAL {
    ?commander dbo:wikiPageRedirects dbr:Rutger_Jan_Schimmelpenninck .
  }
}
```",4,7,5,3,2,3,3,71,0,0,6,0,0.0,0
959,36,val,"Give me the member of University of Tsukuba and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . },"SELECT ?member ?manager
WHERE {
  ?member dbo:almaMater dbr:University_of_Tsukuba .
  
  ?teamManager dbo:managedTeam ?team ;
               a dbo:SportsManager .

  ?team dbo:season ""1998""^^xsd:string ;
        dbo:manager ?teamManager .

  FILTER (?member = ?teamManager)
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
92,34,val,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of Joseph Michael.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artistName WHERE {
  # Identify the film ""Nevermore"" (2006)
  dbr:Nevermore_(film) a dbo:Film ;
    dbo:starring ?actor .

  # Identify the band ""Nevermore""
  dbr:Nevermore_(band) a dbo:Band ;
    dbo:member ?bandMember .

  # Ensure the band member is an artist
  ?bandMember dbo:occupation dbr:Musician .

  # Link Joseph Michael to the band Nevermore
  dbr:Joseph_Michael dbo:associatedBand dbr:Nevermore_(band) .

  # Find common members who are artists and involved in both contexts
  ?actor rdfs:label ?artistName ;
    dbo:occupation dbr:Musician .
  
  FILTER (lang(?artistName) = 'en')

  # Ensure the actor is also a band member of Nevermore
  ?bandMember foaf:name ?actorName .
  FILTER (?actorName = ?artistName)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
701,30,val,Give me the parent of Meritamen and spouse of the father of Merneptah and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentMeritamen ?spouseFatherMerneptah ?parentHenuttawy
WHERE {
  # Find parent of Meritamen
  ?meritamen a dbo:Person ;
             rdfs:label ""Meritamen""@en .
  
  ?meritamen dbo:childOf ?parentMeritamen .

  # Find father of Merneptah and his spouse (Meritamen's mother)
  ?merneptah a dbo:Person ;
             rdfs:label ""Merneptah""@en .
  
  ?merneptah dbo:father ?fatherMerneptah .
  ?fatherMerneptah dbo:spouse ?spouseFatherMerneptah .

  # Find parent of Henuttawy
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy""@en .
  
  ?henuttawy dbo:childOf ?parentHenuttawy .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
488,37,val,"Give me the administration of Emperor Go-Yōzei and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationPeriod ?deathPlace
WHERE {
  # Administration period of Emperor Go-Yōzei
  dbr:Emperor_Go-Yōzei dbo:reignStart ?start .
  dbr:Emperor_Go-Yōzei dbo:reignEnd ?end .
  BIND(CONCAT(?start, "" - "", ?end) AS ?administrationPeriod)

  # Matsudaira Tadamasa's father
  dbr:Matsudaira_Tadamasa dbo:father ?tadamasaFather .

  # Father of the politician (Tadamasa's grandfather)
  ?tadamasaFather dbo:occupation dbr:Politician .
  ?tadamasaFather dbo:father ?grandfather .

  # Death place of Matsudaira Tadamasa's grandfather
  ?grandfather dbo:deathPlace ?deathPlace .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
92,32,val,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist
WHERE {
  # Find band members of Nevermore who are artists
  ?bandMember a dbo:MusicalArtist ;
              dbo:bandMember dbr:Nevermore .

  OPTIONAL {
    # Find associated musical artists of Jim Sheppard
    ?sheppard a dbo:MusicalArtist ;
             foaf:name ""Jim Sheppard"" .
    
    ?associatedArtist a dbo:MusicalArtist ;
                     dbo:associatedBand ?sheppard .
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
528,39,val,Give me the war of Orozimbo Barbosa and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?force
WHERE {
  # Find wars involving Orozimbo Barbosa
  ?barbosa dbo:nationality dbr:Brazil ;
           dbo:occupation dbr:Military_person .
  
  ?war dbo:participant ?barbosa .

  # Find forces associated with Narciso Campero
  ?campero foaf:name ""Narciso Campero""@en ;
           dbo:birthName ?birthName .

  ?force dbo:leader ?campero .
}
```

### Explanation

- **PREFIX**: Define common prefixes for DBpedia ontology and resources.
- **SELECT**: Choose variables `?war` and `?force` to retrieve the war involving Orozimbo Barbosa and any force associated with Narciso Campero.
- **WHERE**:
  - Identify Orozimbo Barbosa by nationality and occupation, linking him to a war (`?barbosa dbo:participant ?war`).
  - Identify Narciso Campero by name and birth name, associating him with a military force (`?force dbo:leader ?campero`).

This query aims to retrieve the relevant historical events and associations based on the given question.",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
534,15,val,"Give me the headquarter of Royal Dublin Society and birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?headquarters ?birthPlace
WHERE {
  # Royal Dublin Society's headquarters
  dbr:Royal_Dublin_Society dbo:headquarterLocation ?headquarters .

  # Politician native to Essex
  ?essexPolitician a dbo:Politician ;
                  dbp:nativeCountryOrRegion dbr:Essex .

  # Child of the politician who is also a politician and an office holder
  ?child dbp:parent ?essexPolitician ;
         a dbo:Politician ;
         dbo:officeHolderOf ?office .
  
  # Birthplace of the child
  ?child dbp:birthPlace ?birthPlace .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
701,34,val,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?spouse1 dbo:spouse ?amunHerKhepeshef .
  ?amunHerKhepeshef rdfs:label ""Amun-her-khepeshef""@en .

  ?spouse2 dbo:spouse ?ramessesII .
  ?ramessesII rdfs:label ""Ramesses II""@en .

  FILTER (?spouse1 = ?spouse2) .

  ?child dbo:parent ?spouse1 ;
         dbo:parent ?spouse2 .

  ?parent dbo:child ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
747,29,val,Give me the band of the writer of Apollo (Hardwell song) and person born on 1985-04-29 and band of Shèna.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?writerBand ?personBand ?shenaBand
WHERE {
  # Find the writer of ""Apollo"" by Hardwell and their band
  ?song dbo:composer ?writer .
  ?song rdfs:label ""Apollo""@en .
  ?song dbo:artist dbr:Hardwell .

  OPTIONAL { 
    ?writer dbo:musicalArtist ?band .
    BIND(?band AS ?writerBand)
  }

  # Find the person born on April 29, 1985, and their band
  ?person dbp:birthday ""1985-04-29""^^xsd:date .
  OPTIONAL {
    ?person dbo:member ?band .
    BIND(?band AS ?personBand)
  }

  # Find Shèna's band
  dbr:Shèna dbo:musicalArtist ?shenaBand .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
179,14,val,Give me the parent of the child of the parent of Vajiralongkorn.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?finalParent
WHERE {
  # Step 1: Identify Vajiralongkorn
  ?vajiralongkorn a dbo:Person ;
                  rdfs:label ""Vajiralongkorn""@en .

  # Step 2: Find Parent of Vajiralongkorn
  ?parentOfVajiralongkorn dbo:child ?vajiralongkorn .

  # Step 3: Find Child of This Parent
  ?childOfParent dbp:spouse|dbo:child ?parentOfVajiralongkorn .

  # Step 4: Find Parent of This Child
  ?finalParent dbo:child ?childOfParent .
}
```

This query assumes that the relationships are defined using `dbo:child` for parent-child relationships and considers both spouse and child properties to find children. Adjustments might be needed based on specific DBpedia schema details.",3,3,4,3,1,3,2,20,0,0,3,0,0.0,0
9,32,val,"Give me the alma mater of the awardee of Royal Medal and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalMedalAwardeeAlmaMater ?mayorAlmaMater
WHERE {
  # Find the awardee of the Royal Medal and their alma mater
  ?awardee dbo:award <http://dbpedia.org/resource/Royal_Medal> .
  ?awardee dbo:almaMater ?royalMedalAwardeeAlmaMater .

  # Find the mayor who is a politician in Northern Ireland Forum and their alma mater
  ?mayor rdf:type dbo:Politician ;
         dbo:officeHolder <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  ?mayor dbo:almaMater ?mayorAlmaMater .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
747,44,val,Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of Apollo (Hardwell song) and person born on 1985-04-29.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person1Band ?writerBand ?person2Band
WHERE {
  # Tracey Elizabeth McSween's band
  OPTIONAL {
    ?tracey a dbo:Person ;
            foaf:name ""Tracey Elizabeth McSween"" ;
            dbo:musicGroup ?band .
    BIND(?band AS ?person1Band)
  }

  # Writer of Apollo (Hardwell song) and their band
  OPTIONAL {
    ?apolloSong dbo:lyricsBy ?writer ;
                rdfs:label ""Apollo""@en .
    ?writer a dbo:Person ;
            dbo:musicGroup ?band .
    BIND(?band AS ?writerBand)
  }

  # Person born on 1985-04-29 and their band
  OPTIONAL {
    ?person2 a dbo:Person ;
             dbp:birthday ""1985-04-29""^^xsd:date ;
             dbo:musicGroup ?band .
    BIND(?band AS ?person2Band)
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
528,33,val,Give me the war of Irene Morales and war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?ireneWar ?commanderWar
WHERE {
  ?work a dbo:CreativeWork .
  
  OPTIONAL {
    ?ireneWar dbo:character dbr:Irene_Morales ;
             dbo:partOf ?work .
  }
  
  OPTIONAL {
    ?commanderWar dbo:character dbr:Commander ;
                  dbo:partOf ?work .
  }
}
```

### Explanation:

- **PREFIX**: Defines common namespaces for DBpedia.
- **SELECT**: Retrieves the work and any wars associated with Irene Morales or a commander.
- **WHERE**:
  - Identifies works of type `CreativeWork`.
  - Uses `OPTIONAL` to find wars involving Irene Morales and a commander within the same work.

### Assumptions:

- The entities ""Irene Morales"" and ""Commander"" are represented in DBpedia with these exact names.
- ""--01-09"" is a placeholder for a specific work, which should be replaced with an actual resource identifier if known.",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
915,13,val,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resident
WHERE {
  # Find the director of ""Pipe Dreams"" (1976)
  dbr:Pipe_Dreams_(film) dbo:director ?director .
  
  # Get the birthplace of this director and ensure it's a settlement
  ?director dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement .

  # Find residents of this birthplace
  ?birthPlace dbo:resident ?resident .
}
```",3,4,4,3,1,3,2,20,0,0,15,0,0.0,0
498,7,val,"Give me the band of Will Rahmer and band of the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfWillRahmer ?bandOfSolaceOfRequiem
WHERE {
  # Find the band associated with Will Rahmer
  ?person rdfs:label ""Will Rahmer""@en .
  ?person dbo:member ?bandOfWillRahmer .
  
  # Ensure it's a band and an organization
  ?bandOfWillRahmer rdf:type dbo:Band ;
                    dbo:genre ?genre .

  # Find the band associated with Solace of Requiem
  ?org rdfs:label ""Solace of Requiem""@en .
  ?org dbo:member ?bandOfSolaceOfRequiem .
  
  # Ensure it's a band and an organization
  ?bandOfSolaceOfRequiem rdf:type dbo:Band ;
                         dbo:genre ?genre .

}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
392,15,val,"Give me the entity in the region, that is a country, of Central European Time and province of Schio.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?location dbo:country ?country .
  ?location geo:timezone ?timezone .
  FILTER (str(?timezone) = ""Europe/Rome"") .  # CET is represented by Europe/Rome in DBpedia
  ?province dbp:partOf ?region .
  ?province rdfs:label ""Schio""@en .
  ?region rdfs:label ""Veneto""@en .
}
```

- **Explanation**:
  - We select countries (`?country`) that are instances of `dbo:Country`.
  - The location associated with the country must have a timezone matching ""Europe/Rome"" (CET).
  - Schio is identified as part of the Veneto region, and we filter for this specific province.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
534,14,val,"Give me the headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://dbpedia.org/ontology/owner> ?v0 . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters WHERE {
  ?event dbo:location ?venue .

  FILTER (str(?event) = ""Pro12_2011-12_Final"")

  ?venue rdf:type dbo:Venue ;
         rdf:type dbo:ArchitecturalStructure .

  ?venue dbo:owner ?owner .

  ?owner dbo:headquarters ?headquarters .
}
```",3,5,4,3,1,3,2,20,0,0,3,0,0.0,0
488,38,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?administration
WHERE {
  # Yūki Hideyasu's father
  ?yukiHideyasu a dbo:Person ;
                foaf:parent ?fatherYuki .
  
  # Father of Yūki Hideyasu is a politician and his death place
  ?fatherYuki a dbo:Politician ;
              dbo:deathPlace ?deathPlace .

  # Emperor Go-Mizunoo's father
  ?goMizunoo a dbo:Person ;
             foaf:parent ?fatherGoMizunoo .
  
  # Administration period of Emperor Go-Mizunoo's father
  ?fatherGoMizunoo dbo:officeHolder ?administration .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
55,12,val,Give me the band member of Guns N' Roses and band member of Metallica and band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?gunsnrosesMember ?metallicaMember ?newstedsBand
WHERE {
  # Find members of Guns N' Roses
  ?gunsnrosesMember dbo:memberOf dbr:Guns_N%27_Roses .
  
  # Find members of Metallica
  ?metallicaMember dbo:memberOf dbr:Metallica .

  # Find the band associated with Jason Newsted after Metallica
  dbr:Jason_Newsted dbo:memberOf ?newstedsBand .

  # Ensure we capture Jason Newsted's membership in both bands
  FILTER (?gunsnrosesMember = dbr:Jason_Newsted || ?metallicaMember = dbr:Jason_Newsted)
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
10,13,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of Luke Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  ?mattColton a dbo:Musician ;
              dbo:bandMemberOf dbr:Luke_Vibert .

  ?mattColton dbo:associatedMusicalArtist ?associatedArtist .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
77,14,val,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?force WHERE {
  # Find the mayor of Warsaw
  ?mayor dbo:positionTitle ""Mayor""@en .
  ?mayor dbo:city dbr:Warsaw .

  OPTIONAL {
    # Find the organization administering a territory and its force
    ?organization dbo:administers ?territory .
    ?territory dbo:administrativeUnit dbr:Warsaw .
    
    # Assuming 'force' is represented by some property, e.g., influence or power
    ?organization dbo:influence ?force .
  }
}
```",3,4,4,3,1,3,2,20,0,0,40,0,0.0,0
963,12,val,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci and entity in Serbia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?party ?administration
WHERE {
  ?location rdfs:label ""Sremski Karlovci""@en .
  ?location dbo:country dbr:Serbia .
  
  ?party rdf:type dbo:PoliticalParty ;
         dbo:rulingParty ?location ;
         dbo:administration ?administration .

  FILTER (lang(?locationLabel) = 'en')
}
```",3,4,4,2,2,3,2,20,0,0,84,0,0.0,0
528,34,val,"Give me the war of the military force of the entity, that is a societal event, in Chile and force of Narciso Campero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?chileForce ?camperoForce WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:location dbr:Chile ;
      dbo:participatingMilitaryUnit ?chileForce .
  
  ?camperoForce a dbo:MilitaryUnit ;
                dbo:commander dbr:Narciso_Campero ;
                dbo:participatedIn ?war .

}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
404,33,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?royalChild ?parentOfRoyalChild
WHERE {
  # Step 1: Find Princess Victoria Louise of Prussia's spouse
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

  # Step 2: Identify the child of this spouse who is royalty
  ?spouse dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Step 3: Find the parent of that royal child who is also royalty
  ?royalChild dbo:parent ?parentOfRoyalChild .
  ?parentOfRoyalChild a dbo:Monarch .

  # Ensure Prince George William of Hanover is in this lineage
  FILTER(?parentOfRoyalChild = dbr:Prince_George_William_of_Hanover)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
391,40,val,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of The Departed and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativePlace WHERE {
  # Find nickname for Jackson, Tennessee
  dbr:Jackson_(Tennessee) dbo:nickname ?nickname .

  # Find actor with this nickname who acted in ""The Departed"" and ""All About the Andersons""
  ?actor dbp:nickName ?nickname ;
         dbo:film ?departed ;
         dbo:film ?andersons .
  
  dbr:The_Departed dbo:starring ?departed .
  dbr:All_About_the_Andersons dbo:starring ?andersons .

  # Get native place of the actor
  ?actor dbo:nativePlace ?nativePlace .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
328,41,val,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of Ferenc Szálasi and leader of People's Commissariat of Defense of the Soviet Union.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  # Find the award related to Bruce Fraser
  ?award dbo:recipient dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
  
  # Identify awardees of that award
  ?award dbo:recipient ?awardee .

  OPTIONAL {
    # Check if the awardee was a commander under Ferenc Szálasi
    ?awardee dbo:commanderOf dbr:Ferenc_Szálasi .
  }

  OPTIONAL {
    # Check if the awardee led the People's Commissariat of Defense
    ?awardee dbo:leaderOf dbr:People%27s_Commissariat_of_Defence_(Soviet_Union) .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
281,23,val,Give me the war of the awardee of the award of Jonathon Band.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war
WHERE {
  # Find Jonathon Band and his awards
  ?jonathanBand a dbo:Person ;
               foaf:name ""Jonathon Band"" .
  
  ?award dbo:recipient ?jonathanBand .

  # Find other awardees of the same award
  ?otherAwardee dbo:recipient ?award .

  # Find wars involving these awardees
  ?otherAwardee dbo:participatedIn ?war .
}
```",3,3,4,3,1,3,3,71,0,0,450,0,0.0,0
963,13,val,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
  # Herzegovina-Neretva Canton and its time zone
  dbr:Herzegovina-Neretva_Canton dbo:timeZone ?timezone .

  # Find the country associated with this time zone
  ?country dbo:timeZone ?timezone .
  
  # Ensure that the entity is a country
  ?country rdf:type dbo:Country .
}
```",3,4,4,3,1,3,2,20,29,65,173232,0.30851063829787234,0.00016737754024275515,0.00033457356292001964
701,18,val,Give me the spouse of Ramesses II and parent of Henuttawy (19th dynasty) and parent of Meritamen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Ramesses II's spouse
  dbr:Ramesses_II dbo:spouse ?spouse .

  # Henuttawy is a child of the spouse
  ?henuttawy dbo:parent ?spouse .
  dbr:Henuttawy_\(19th_dynasty\) rdfs:label ?henuttawyLabel .
  
  # Meritamen is also a child of the spouse
  ?meritamen dbo:parent ?spouse .
  dbr:Meritamen rdfs:label ?meritamenLabel .

  FILTER (CONTAINS(LCASE(?henuttawyLabel), ""henuttawy""))
  FILTER (CONTAINS(LCASE(?meritamenLabel), ""meritamen""))
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
9,42,val,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater
WHERE {
  # Find the mayor of Northern Ireland Forum
  ?mayor a dbo:Politician ;
         dbo:officeHolderOf dbr:Northern_Ireland_Forum .

  # Find Queen's University Belfast by its nickname
  ?university rdfs:label ""Queen's University Belfast""@en ;
             dbo:nickname ?nickname .

  # Find Allen Hill and his alma mater
  ?allenHill a dbo:Scientist ;
             foaf:name ""Allen Hill"" ;
             dbo:almaMater ?almaMater .

  # Ensure the alma mater of the mayor matches Queen's University Belfast and Allen Hill's alma mater
  ?mayor dbo:almaMater ?university .
  
  FILTER(?nickname = ""Queen's University Belfast"")
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
547,32,val,Give me the resting place of the actor of Enemy at the Door and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorRestingPlace ?childRestingPlace WHERE {
  # Find the actor of ""Enemy at the Door""
  ?movie dbo:title ""Enemy at the Door""@en .
  ?movie dbo:starring ?actor .

  # Get the resting place of the actor
  OPTIONAL { ?actor dbo:deathPlace ?actorDeathPlace . }
  BIND(IF(BOUND(?actorDeathPlace), ?actorDeathPlace, ""Unknown"") AS ?actorRestingPlace)

  # Find James Burton (property developer) and his child
  ?james a dbo:PropertyDeveloper ;
         foaf:name ""James Burton""@en .
  
  OPTIONAL { ?james dbo:child ?child . }
  
  # Get the resting place of the child
  OPTIONAL { ?child dbo:deathPlace ?childDeathPlace . }
  BIND(IF(BOUND(?childDeathPlace), ?childDeathPlace, ""Unknown"") AS ?childRestingPlace)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
179,15,val,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of Ubol Ratana.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName
WHERE {
  ?royalChild a dbo:Monarch ;
              dbo:parent dbr:Nakkhatra_Mangala ;
              foaf:name ?fullName .
  
  OPTIONAL { ?royalChild foaf:givenName ?birthName . }
  
  ?royalParent a dbo:Person ;
               dbo:child ?royalChild ;
               foaf:name ""Ubol Ratana""@en .

}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
184,32,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchildParent
WHERE {
  # Find Archduke Joseph Karl of Austria
  dbr:Archduke_Joseph_Karl_of_Austria a dbo:Person .

  # Find his child
  ?child dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  
  # Find the grandchild (child of the child)
  ?grandchild dbo:parent ?child .

  # The grandchild must also be a parent of someone from Budapest
  ?grandchildParent dbo:parent ?budaPerson .
  ?budaPerson dbo:birthPlace dbr:Budapest ;
              ^dbo:birthPlace dbr:Budapest . # or resides in Budapest

  # Ensure the grandchild and the parent are the same individual
  FILTER (?grandchild = ?grandchildParent)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
996,11,val,Give me the force of the awardee of 1778.0 and entity in France.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/commander> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?force
WHERE {
  ?entity dbo:awardedByYear ""1778"" .
  ?entity dbo:country dbr:France .
  OPTIONAL { ?entity dbo:militaryStrength ?force . }
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
  
- **SELECT Clause**: We select the entity and its force/military strength.

- **WHERE Clause**:
  - `?entity dbo:awardedByYear ""1778""`: Finds entities awarded in 1778.
  - `?entity dbo:country dbr:France`: Ensures the entity is associated with France.
  - `OPTIONAL { ?entity dbo:militaryStrength ?force . }`: Optionally retrieves the military strength (or force) of the entity.

This query assumes that ""awardee"" and ""force"" can be represented by specific properties in DBpedia. Adjustments may be needed based on actual property names available in the dataset.",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
915,12,val,"Give me the resident of Springfield, Illinois and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?father dbo:residence dbr:Springfield,_Illinois .
  ?child dbo:parent ?father .
  ?child rdfs:label ""Phillip Spaulding""@en .
  ?father a dbo:FictionalCharacter .
  ?father dbo:genre dbr:SoapOpera .
}
```

This query does the following:
- Selects the father (`?father`) of Phillip Spaulding.
- Ensures that this character resides in Springfield, Illinois.
- Confirms that the character is both fictional and a soap opera character.",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
404,44,val,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?child dbo:spouse dbp:Princess_Victoria_Louise_of_Prussia .
  ?child dbo:childOf ?ernestAugustus .
  ?ernestAugustus rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  
  FILTER(CONTAINS(LCASE(?child), ""royalty"")) .

  ?parent dbo:parentOf ?child .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
391,27,val,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName WHERE {
  ?movie a dbo:Film ;
         a dbo:CreativeWork ;
         a dbo:TelevisionShow .
  
  ?movie dbo:starring ?actor .
  ?actor foaf:name ?actorName .
}
```",3,6,4,3,1,3,3,71,0,0,7061,0,0.0,0
963,14,val,"Give me the administration of the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/ontology/postalCode> ""21205"" . ?result <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party ?administration
WHERE {
  ?location a dbo:Place ;
            dbp:areaCode ""21205"" .
  
  ?party a dbo:PoliticalParty ;
         dbo:country ?location ;
         dbo:headOfGovernment ?leader .

  OPTIONAL { 
    ?administration dbo:headOfGovernment ?leader ;
                    dbo:politicalParty ?party .
  }
}
```",3,4,4,3,1,3,2,20,0,0,86,0,0.0,0
55,16,val,"Give me the band member of Guns N' Roses and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?relatedBand
WHERE {
  # Find members of Guns N' Roses
  ?member dbo:memberOf dbr:Guns_N%27_Roses .
  
  # Find bands associated with Newsted (Jason Newsted)
  ?newsted dbo:memberOf ?relatedBand .
  FILTER(?relatedBand != dbr:Guns_N%27_Roses) # Exclude Guns N' Roses itself
  
  # Check if the member of Guns N' Roses is also a member of any band related to Newsted
  OPTIONAL {
    ?member dbo:memberOf ?relatedBand .
  }
  
  BIND(?member AS ?bandMember)
}
```

This query does the following:
- Identifies members of Guns N' Roses.
- Finds bands associated with Jason Newsted (excluding Guns N' Roses).
- Checks if any member of Guns N' Roses is also a member of a band related to Newsted.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
10,16,val,Give me the professional in the birth name of Sharon Kao and associated musical artist of Matt Colton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professionalName ?associatedArtist
WHERE {
  # Find the person with birth name Sharon Kao and their professional name
  ?person dbo:birthName ""Sharon Kao""@en .
  ?person foaf:name ?professionalName .

  # Find Matt Colton's associated musical artist
  ?colton foaf:name ""Matt Colton""@en .
  ?colton dbo:associatedMusicalArtist ?artist .
  ?artist foaf:name ?associatedArtist .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
547,37,val,Give me the resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alanCunninghamRestingPlace ?actorRestingPlace WHERE {
  # Resting place of Alan Cunningham
  OPTIONAL {
    dbr:Alan_Cunningham dbo:placeOfBurial ?alanCunninghamRestingPlace .
  }

  # Find the show associated with Emily Richard and an actor from that show
  OPTIONAL {
    ?show dbo:starring dbr:Emily_Richard ;
          dbo:starring ?actor .
    ?actor dbo:deathPlace ?actorRestingPlace .
  }
}
```",4,4,5,3,2,3,3,71,1,8,1,0.1111111111111111,0.5,0.1818181818181818
92,31,val,"Give me the associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artistName WHERE {
    # Jim Sheppard is a member of Nevermore
    dbr:Jim_Sheppard dbo:memberOf dbr:Nevermore .
    
    # Find other members of Nevermore who are also artists
    ?member dbo:memberOf dbr:Nevermore ;
            a dbo:MusicalArtist .

    # Ensure the artist is distinct from Jim Sheppard
    FILTER (?member != dbr:Jim_Sheppard)

    # Check if this member has any connection to the 2006 film ""Nevermore""
    OPTIONAL {
        ?film dbr:Nevermore_2006_film ;
              dbo:composer ?member .
    }

    # Return the name of the artist
    ?member rdfs:label ?artistName .
    
    FILTER (lang(?artistName) = 'en')
}
ORDER BY ?artistName",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
356,15,val,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season and team of Mark Briggs.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find the predecessor of the 2015 Sacramento Republic FC season
  ?predecessorSeason a dbo:SoccerClubSeason ;
                     dbo:club dbr:Sacramento_Republic_FC ;
                     dbo:season ""2014""^^xsd:gYear .

  # Find the successor of that predecessor (which is the 2015 season)
  ?succeedingSeason a dbo:SoccerClubSeason ;
                    dbo:predecessor ?predecessorSeason ;
                    dbo:club dbr:Sacramento_Republic_FC ;
                    dbo:season ""2015""^^xsd:gYear .

  # Find the successor of the 2015 season (which is the 2016 season)
  ?targetSeason a dbo:SoccerClubSeason ;
                dbo:predecessor ?succeedingSeason ;
                dbo:club dbr:Sacramento_Republic_FC ;
                dbo:season ""2016""^^xsd:gYear .

  # Find players in that target season
  ?player a dbo:FootballPlayer ;
          dbo:playsForTeam ?targetSeason .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
92,23,val,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMemberName WHERE {
    # Identify the 2006 film ""Nevermore""
    dbr:Nevermore_(film) dbo:subjectOf ?reference .
    
    # Find band members of Nevermore
    ?reference dbo:member ?bandMember .

    # Ensure these members are artists
    ?bandMember a dbo:Artist .

    # Get the name of the band member
    ?bandMember foaf:name ?bandMemberName .
}
```",3,4,4,3,1,3,3,71,0,0,12,0,0.0,0
251,17,val,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyAdministration ?deathPlace
WHERE {
  # Find the ruling party in Sicily that is both a political party and an organization
  ?party dbo:country dbr:Sicily ;
         rdf:type dbo:PoliticalParty, dbo:Organization .
  
  # Get the administration of this party
  ?party dbp:administration ?partyAdministration .

  # Find Laura Mancinelli's death place
  dbr:Laura_Mancinelli dbo:deathPlace ?deathPlace .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
427,33,val,Give me the reference to Partito Popolare Italiano and party of the father of the alumnus of Massachusetts Institute of Technology.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?alumnus ?father ?party ?ppiReference
WHERE {
  # Find MIT alumni
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  
  # Identify the father of each alumnus
  ?alumnus foaf:parent ?father .

  # Determine the political party of the father
  OPTIONAL {
    ?father dbo:partyAffiliation ?party .
  }

  # Reference to Partito Popolare Italiano
  dbr:Partito_Popolare_Italiano ?ppiReference .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
404,36,val,Give me the spouse of Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?child
WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

  # Step 2: Find the father of this spouse
  ?spouse dbo:father ?father .

  # Step 3: Retrieve children of that father
  ?child dbo:parent ?father .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
161,23,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?militaryForce WHERE {
  ?person dbo:deathPlace dbr:Francoist_Spain .
  ?person dbo:militaryConflict ?conflict .
  ?conflict a dbo:MilitaryConflict .
  
  OPTIONAL { 
    ?event dbo:type dbr:SocietalEvent ;
           dbo:participant ?person .
  }
  
  OPTIONAL {
    ?militaryForce dbo:member ?person .
    ?militaryForce a dbo:MilitaryUnit .
  }
}
```",3,6,4,3,1,3,3,71,0,0,1073,0,0.0,0
617,36,val,Give me the parent of the child of the commander in Battle of Panium and child of Antiochus III the Great.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild ?childOfAntiochus
WHERE {
  # Find the commander of the Battle of Panium
  ?battle dbr:Battle_of_Panium .
  ?battle dbo:commander ?commander .

  # Find the child of this commander
  ?commander dbo:child ?childOfCommander .

  # Find the parent of this child
  ?childOfCommander dbo:parent ?parentOfChild .

  # Find Antiochus III the Great and his child
  dbr:Antiochus_III_the_Great dbo:child ?childOfAntiochus .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
54,44,val,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin ;
         a dbo:Royalty, dbo:OfficeHolder .

  # Find the predecessor of this child
  ?predecessor dbo:succeededBy ?child .

  # Narapati I of Ava's child and Thinkhaya of Pagan's child have the same parent
  ?narapatiChild dbo:parent ?commonParent .
  ?thinkhayaChild dbo:parent ?commonParent .

  ?narapatiChild dbo:parent dbr:Narapati_I_of_Ava .
  ?thinkhayaChild dbo:parent dbr:Thinkhaya_of_Pagan .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
10,18,val,Give me the professional in the birth name of Sharon Kao and band member of Luke Vibert.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional
WHERE {
  # Find Sharon Kao by birth name
  ?sharonKao dbo:birthName ""Sharon Kao"" .
  
  # Identify the professional associated with Sharon Kao
  ?sharonKao dbo:profession ?professional .

  # Find Luke Vibert and his band members
  dbr:Luke_Vibert dbo:bandMember ?member .

  # Ensure the professional is also a band member of Luke Vibert
  FILTER (?member = ?professional)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
16,37,val,Give me the person born as Georgeanne Marie Rice and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?actorName WHERE {
  ?person foaf:name ""Georgeanne Marie Rice""@en .
  ?person dbo:occupation dbr:Actor .

  ?tvSeries dbo:title ""Unnatural (TV series)""@en .
  ?tvSeries dbo:starring ?person .

  OPTIONAL { ?person foaf:name ?actorName }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
92,18,val,Give me the band of Joseph Michael and associated musical artist of Jim Sheppard and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfJosephMichael ?associatedArtistOfJimSheppard ?memberOfNevermore
WHERE {
  # Find Joseph Michael's band
  OPTIONAL {
    ?person rdfs:label ""Joseph Michael""@en .
    ?person dbo:band ?bandOfJosephMichael .
  }

  # Find associated musical artists of Jim Sheppard
  OPTIONAL {
    ?artist rdfs:label ""Jim Sheppard""@en .
    ?artist dbo:associatedMusicalArtist ?associatedArtistOfJimSheppard .
  }

  # Find band members of Nevermore
  OPTIONAL {
    ?band dbr:Nevermore .
    ?band dbo:member ?person .
    ?person dbo:alias ?memberOfNevermore .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
915,14,val,"Give me the father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName
WHERE {
  # Lizzie Spaulding's parent
  dbr:Lizzie_Spaulding dbo:parent ?parent .
  
  # Ensure the parent is a fictional character and part of a soap opera
  ?parent dbo:genre dbr:Soap_opera ;
          dbo:abstract ?parentAbstract .

  FILTER(CONTAINS(LCASE(?parentAbstract), ""fictional"") && CONTAINS(LCASE(?parentAbstract), ""soap""))

  # Parent's child (Lizzie Spaulding)
  ?child dbo:parent ?parent .
  
  # Ensure the child is a fictional character and part of a soap opera
  ?child dbo:genre dbr:Soap_opera ;
         dbo:abstract ?childAbstract .

  FILTER(CONTAINS(LCASE(?childAbstract), ""fictional"") && CONTAINS(LCASE(?childAbstract), ""soap""))

  # Child's father
  ?child dbo:father ?father .
  
  # Ensure the father is a fictional character and part of a soap opera
  ?father dbo:genre dbr:Soap_opera ;
          rdfs:label ?fatherName .

  FILTER(CONTAINS(LCASE(?fatherAbstract), ""fictional"") && CONTAINS(LCASE(?fatherAbstract), ""soap""))
}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
303,13,val,"Give me the entity in Panama and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?party WHERE {
  ?event dbo:eventLocation dbr:Panama .
  ?event rdfs:label ""United States invasion of Panama""@en .

  ?entity dbo:positionHeld ?commanderRole .
  ?commanderRole dbo:relatedEvent ?event .
  
  ?entity a dbo:Politician .
  
  OPTIONAL { 
    ?entity dbo:partyAffiliation ?party .
  }
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
488,33,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of Enomoto Takeaki.",SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?birthPlace
WHERE {
  # Matsudaira Tadamasa's grandfather who was an office holder
  ?matsumotoOfficeHolder dbo:child dbr:Matsudaira_Tadamasa .
  ?matsumotoOfficeHolder dbo:officeHolder true .
  
  # His father, who is a politician
  ?politicianFather dbo:child ?matsumotoOfficeHolder .
  ?politicianFather dbo:occupation dbr:Politician .

  # Death place of the grandfather (who was a politician)
  ?politicianFather dbo:deathPlace ?deathPlace .

  # Enomoto Takeaki's birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
281,26,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
    ?election dbo:eventType dbr:New_South_Wales_state_election_1962 .
    ?election dbo:leader ?politician .
    
    ?politician a dbo:Politician ;
               dbo:birthPlace ?birthPlace .

    ?birthPlace a dbo:Country ;
                rdfs:label ?country .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
391,25,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  ?movie a dbo:Film ;
         dbo:genre/dbo:subClassOf* dbo:TelevisionShow ;
         dbo:starring dbr:Roz_Ryan .
  
  ?departedActor dbo:starring dbr:The_Departed ;
                 dbo:starring ?movie .

  ?movie dbo:starring ?actor .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
994,28,val,Give me the associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of Watchtower (band) and band member of Don Dokken.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?artist2 ?bandMember
WHERE {
  # Step 1: Find associated musical artist of Red Tide (band)
  dbr:Red_Tide_(band) dbo:musicalArtist ?artist1 .

  # Step 2: Find associated musical artist of the first artist
  ?artist1 dbo:musicalArtist ?artist2 .

  # Step 3: Find band member of Don Dokken from this second artist
  ?artist2 dbo:member ?bandMember .
  FILTER (strStarts(str(?bandMember), ""Don_Dokken"") || strEndsWith(str(?bandMember), ""_Don_Dokken""))
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
378,27,val,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?description
WHERE {
  ?person rdfs:label ""Thomas Trigge""@en .
  ?person dbo:occupation ?occupation .
  FILTER(?occupation IN (dbo:MilitaryPerson, dbo:Commander)) .

  ?person dbo:associatedWith ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         dbo:socialEvent ?socialEvent .
  
  OPTIONAL { ?event rdfs:comment ?description . }
}
```",3,6,4,3,1,3,3,71,0,0,6,0,0.0,0
182,16,val,Give me the entity in the nationality of Tamara Kunanayakam and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nationality ?war
WHERE {
  # Find Tamara Kunanayakam's nationality
  { 
    ?person rdfs:label ""Tamara Kunanayakam""@en .
    FILTER NOT EXISTS { ?person dbo:abstract ?a . FILTER regex(?a, ""disambiguation"", ""i"") }
    ?person dbo:nationality ?nationality .
  }

  # Find Mahesh Senanayake's war
  {
    ?individual rdfs:label ""Mahesh Senanayake""@en .
    FILTER NOT EXISTS { ?individual dbo:abstract ?a . FILTER regex(?a, ""disambiguation"", ""i"") }
    ?individual dbo:conflict ?war .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,13,val,"Give me the child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild
WHERE {
  # Step 1: Identify Charles Alexander
  ?charlesAlexander a dbo:GrandDuke ;
                   foaf:name ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .

  # Step 2: Find his parent
  ?parent dbo:child ?charlesAlexander .

  # Step 3: Find the child of that parent
  ?parentChild dbo:child ?parent .

  # Step 4: Ensure this child is royalty
  ?parentChild a ?royaltyClass .
  
  FILTER (
    ?royaltyClass IN (dbo:Monarch, dbo:Queen, dbo:King, dbo:Prince, dbo:Duke)
  )

  BIND(?parentChild AS ?childOfParent)

  # Step 5: Find the child of this child
  ?childOfChild dbo:child ?parentChild .
}
```",3,4,4,3,1,3,2,20,0,0,8,0,0.0,0
492,19,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in Franco-Hova Wars.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Find Joseph C. Satterthwaite's parent
  ?satterthwaite a dbo:Person ;
                 foaf:surname ""Satterthwaite"" ;
                 foaf:givenName ""Joseph C."" .

  ?parent dbo:child ?satterthwaite .

  # Check if the parent held the role of US Assistant Secretary of State for African Affairs
  OPTIONAL {
    ?parent dbo:occupation dbr:United_States_Assistant_Secretary_of_State_for_African_Affairs .
  }

  # Check if the parent was a commander in the Franco-Hova Wars
  OPTIONAL {
    ?parent dbo:militaryCommanderOf dbr:Franco-Hova_Wars .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
696,13,val,"Give me the birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace
WHERE {
  # Identify The Boils as a band
  dbr:The_Boils dbo:bandMember ?member .
  
  # Find associated musical artist that is an organization/group/band
  ?artist dbo:type/dbo:singletonPropertyOf* (dbo:Band | dbo:MusicalGroup | dbo:Organization) .
  ?member dbo:associatedBand ?artist .

  # Get the birthplace of the member
  ?member dbo:birthPlace ?birthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
701,36,val,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of Meritamen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName
WHERE {
  ?commander dbo:participatedInBattle dbp:Battle_of_Perire .
  ?father dbo:child ?commander .
  ?father dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Monarch .  # Assuming royalty is represented by Monarch type
  ?spouse dbo:parent ?meritamen .
  ?meritamen rdfs:label ""Meritamen""@en .

  BIND(str(?spouse) AS ?spouseURI)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
328,29,val,Give me the commander in the force of Ferenc Szálasi and awardee of Order of Suvorov and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Ferenc Szálasi's commander
  ?szalasiCommander dbo:commandedBy dbr:Ferenc_Szálasi .
  
  # Awardee of Order of Suvorov
  ?awardee dbo:recipientOf dbr:Order_of_Suvorov .

  # Leader of People's Commissariat of Defense of the Soviet Union
  ?leader dbo:headOf dbr:People%27s_Commissariat_of_Defense_of_the_Soviet_Union .
  
  # The person who satisfies all three conditions
  FILTER (?commander = ?szalasiCommander && ?commander = ?awardee && ?commander = ?leader)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
404,21,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  ?person a dbo:Princess ;
          foaf:name ""Victoria Louise of Prussia""@en ;
          dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .

  ?person dbo:spouse ?spouse .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
666,11,val,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season and figure known as The Three Lions.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the manager of Hull City during the 2016-17 season
  ?hullCitySeason dbo:team dbr:Hull_City_A.FC .
  ?hullCitySeason dbo:season ""2016–17""^^xsd:string .
  ?hullCitySeason dbo:manager ?manager .

  # Ensure this manager is associated with The Three Lions (England national football team)
  ?englandTeam dbo:manager ?manager .
  ?englandTeam rdfs:label ""The Three Lions""@en .
}
```",3,4,4,2,2,3,2,20,0,0,2,0,0.0,0
778,13,val,"Give me the entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity
WHERE {
  ?award dbo:category dbr:Wolf_Prize_in_Medicine .
  ?award dbo:recipient ?person .
  ?person dbo:nationality dbr:United_States .
  ?award dbo:field ?entity .
}
```",3,4,4,3,1,3,2,20,0,0,18629,0,0.0,0
161,44,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderEmilioMola ?forceEmilioMola ?societalEventFranciscoLargoCaballero ?militaryConflictFranciscoLargoCaballero
WHERE {
  # Emilio Mola's commander and force related to an event
  dbr:Emilio_Mola dbo:commanderOf ?forceEmilioMola .
  ?forceEmilioMola dbo:event ?eventEmilioMola .

  # Francisco Largo Caballero's societal event and military conflict during the Rif War
  ?societalEventFranciscoLargoCaballero dbo:relatedTo dbr:Francisco_Largo_Caballero ;
                                         a dbo:SocietalEvent .
  
  ?militaryConflictFranciscoLargoCaballero dbo:conflict dbr:Rif_War ;
                                            dbo:militaryForce ?forceFranciscoLargoCaballero ;
                                                             dbo:relatedTo dbr:Francisco_Largo_Caballero .

}
```",5,8,6,2,3,3,3,71,0,0,11,0,0.0,0
48,14,val,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  # Stacey Dash as an actor in a show
  ?show dbo:starring dbr:Stacey_Dash .
  
  # Actor who is also a musical artist
  ?actor dbo:starring ?show ;
         rdf:type dbo:MusicalArtist .

  # Band associated with the musical artist
  ?band dbo:leadMember ?actor .
}
```",3,4,4,3,1,3,2,20,0,0,36,0,0.0,0
659,25,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck's military force
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryService ?militaryForce .
  
  # Ensure the military force is linked to a societal event, an event, and a military conflict
  ?militaryForce a dbo:MilitaryConflict ;
                dbo:societalEvent ?societalEvent ;
                dbo:event ?event .

  # Rutger Jan Schimmelpenninck as commander in Battle of Leipzig
  dbr:Battle_of_Leipzig dbo:commander ?commander .
  FILTER (?commander = dbr:Rutger_Jan_Schimmelpenninck)
}
```",3,6,4,2,2,3,3,71,0,0,6,0,0.0,0
92,42,val,"Give me the band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney and associated musical artist of Jim Sheppard.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  # Find band members of Nevermore
  ?member dbo:band dbr:Nevermore .
  
  # Ensure the member is an artist
  ?member a dbo:MusicalArtist .

  # Check if the member is associated with Joseph Michael Furney (Warrel Dane)
  OPTIONAL { ?member dbo:associatedBandMember dbr:Joseph_Michael_Furney . }

  # Check if the member is associated with Jim Sheppard
  OPTIONAL { ?member dbo:associatedBandMember dbr:Jim_Sheppard . }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
747,32,val,Give me the person born on the birth date of Pavlo Khudzik and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?band 
WHERE {
  # Find Pavlo Khudzik's birth date
  VALUES ?khudzikBirthDate { 
    SELECT ?birthDate WHERE { 
      dbr:Pavlo_Khudzik dbo:birthday ?birthDate .
    }
  }

  # Find a person born on the same date as Pavlo Khudzik
  ?person dbo:birthday ?khudzikBirthDate .

  # Ensure it's not Pavlo Khudzik himself
  FILTER (?person != dbr:Pavlo_Khudzik)

  # Identify the writer of ""Apollo"" by Hardwell
  VALUES ?apolloWriter { 
    SELECT ?writer WHERE {
      dbr:Apollo_(Hardwell_song) dbo:lyricsBy ?writer .
    }
  }

  # Find the band associated with the writer
  ?band dbo:member ?apolloWriter .

}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
232,35,val,"Give me the child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childName
WHERE {
  # John Pertwee's child
  dbr:John_Pertwee dbo:child ?child .
  
  # Child's name
  ?child rdfs:label ?childName .

  # Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbp:nativePlace ?residence .
  
  # Residence conditions
  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  FILTER (lang(?childName) = 'en')
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
617,29,val,Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
    ?child dbo:parent dbr:Antiochus_III_the_Great .
    ?child dbo:child ?nysa .
    ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
    ?child dbo:spouse ?spouse .
}
```

### Explanation:

- `?child dbo:parent dbr:Antiochus_III_the_Great` finds the child of Antiochus III.
- `?child dbo:child ?nysa` ensures this child is a parent of Nysa.
- `?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en` identifies Nysa by her label.
- `?child dbo:spouse ?spouse` retrieves the spouse of this identified child.",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
427,26,val,Give me the party of the father of the alumnus of Massachusetts Institute of Technology.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?party
WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?father foaf:parent ?alumnus .
  ?father dbo:politicalAffiliation ?party .
}
```",3,3,4,3,1,3,3,71,0,0,7,0,0.0,0
179,13,val,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  ?child dbo:parent dbr:Nakkhatra_Mangala .
  ?child dbo:birthName ?birthName .
  ?child a ?type .
  FILTER (?type IN (dbo:Monarch, dbo:RoyalFamilyMember)) 
}
```",3,4,4,3,1,3,2,20,0,0,1,0,0.0,0
378,28,val,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the person born as Carl Pontus Gahn and war of Joaquín Blake.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?claimToFame WHERE {
  VALUES ?person { 
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón
    dbr:C_P_Gahn
    dbr:Joaquín_Blake
  }
  
  OPTIONAL {
    ?person dbo:notableWork ?claimToFame .
  }

  FILTER (lang(?claimToFame) = 'en')
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
783,11,val,Give me the associated musical artist of the band member of Ofori Amponsah and band member of Ebony Reigns.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist
WHERE {
  # Find band members of Ofori Amponsah
  ?ofoiriAmponsah dbr:Ofori_Amponsah .
  ?ofoiriAmponsah dbo:member ?bandMember .

  # Find band members of Ebony Reigns
  ?ebonyReigns dbr:Ebony_Reigns .
  ?ebonyReigns dbo:member ?bandMember .

  # Get associated musical artists for these band members
  ?bandMember dbo:associatedMusicalArtist ?associatedArtist .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
659,37,val,"Give me the military force of Napoleonic Wars and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?commander ?event 
WHERE {
  # Identify the Polish Horse as a military unit involved in the Napoleonic Wars
  ?militaryForce a dbo:MilitaryUnit ;
                 rdfs:label ""Polish Horse""@en .
  
  # Find events related to the Napoleonic Wars
  ?event a dbo:MilitaryConflict ;
         rdfs:label ?warLabel .

  FILTER(CONTAINS(LCASE(?warLabel), ""napoleonic wars""))

  # Link military force to the event
  ?militaryForce dbo:participatedIn ?event .

  # Find commanders of the Polish Horse during these events
  OPTIONAL {
    ?commander a dbo:MilitaryPerson ;
               dbo:commanded ?militaryForce .
  }
}
```",4,8,5,3,2,3,3,71,0,0,29,0,0.0,0
421,15,val,Give me the band member of the awardee of [[#Awards and nominations and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  # Identify Dino Merlin by his birth name
  dbr:Dino_Merlin dbo:birthName ""Edin Dervišhalidović""@en.

  # Find awards and nominations related to Dino Merlin
  ?award dbo:recipient dbr:Dino_Merlin.
  
  # Find band members associated with Dino Merlin
  ?bandMember dbo:member dbr:Dino_Merlin.
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
487,15,val,Give me the country of the administration of the person born on 1955-01-26 and administration of Phil Scott.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/country> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personCountry ?philScottCountry
WHERE {
  # Find the person born on 1955-01-26 and their country of administration
  ?person dbo:birthDate ""1955-01-26""^^xsd:date .
  OPTIONAL { ?person dbo:country ?personCountry . }

  # Find Phil Scott's administration and his country
  dbr:Phil_Scott dbo:country ?philScottCountry .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
404,19,val,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  # Find Prince Ernest Augustus of Hanover and his parent
  dbr:Prince_Ernest_Augustus_of_Hanover (dbo:birthYear) ""1914"" .
  dbr:Prince_Ernest_Augustus_of_Hanover dbo:parent ?parent .

  # Ensure the parent is royalty and married to Princess Victoria Louise of Prussia
  ?parent a dbo:Monarch ;
          dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
747,24,val,Give me the band of the writer of Apollo (Hardwell song) and band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerBand ?shenaBand
WHERE {
  # Finding the writer of the song ""Apollo"" by Hardwell
  ?song dbo:lyricsBy ?writer .
  ?song rdfs:label ""Apollo""@en .

  OPTIONAL {
    ?writer dbo:band ?writerBand .
  }

  # Finding the band associated with Shèna
  dbr:Shèna dbo:associatedBand ?shenaBand .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,18,val,Give me the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person
WHERE {
  # Parent of Thado Minsaw of Prome
  ?person dbo:child dbr:Thado_Minsaw_of_Prome .

  # Child of Thinkhaya of Pagan
  ?person dbo:parent dbr:Thinkhaya_of_Pagan .

  # Predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?person dbo:successor dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
427,19,val,Give me the party of Giulio Andreotti and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Giulio Andreotti""@en .
  
  ?membership dbo:member ?person ;
              dbo:organization ?party ;
              dbo:startDate ?start ;
              dbo:endDate ?end .

  FILTER (?start <= ""1994-12-31""^^xsd:date && 
          (?end >= ""1994-01-01""^^xsd:date || !bound(?end)))

  ?party foaf:name ?partyName .
  
  FILTER regex(?partyName, ""Italian People's Party"", ""i"")
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
747,37,val,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and band of Shèna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?songBand ?shenaBand
WHERE {
  # Find a song written by Amba Shepherd
  ?song dbo:lyricist dbr:Amba_Shepherd .
  
  # Get the band associated with that song
  OPTIONAL { ?song dbo:band ?songBand . }
  
  # Find the band of Shèna
  dbr:Shèna dbo:band ?shenaBand .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
747,36,val,Give me the band of the person born as the persona of Shèna and person born on 1985-04-29.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?band
WHERE {
  # Find the person with the persona of Shèna
  ?person dbo:birthName ""Shèna""@en .
  
  OPTIONAL { 
    ?person dbo:band ?band .
  }
  
  UNION
  
  # Find the person born on 1985-04-29
  ?person dbo:birthday ""1985-04-29""^^xsd:date .
  
  OPTIONAL {
    ?person dbo:band ?band .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
10,12,val,Give me the professional in  and associated musical artist of Matt Colton and band member of Luke Vibert.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalRole ?associatedArtist ?bandMember
WHERE {
  # Matt Colton's professional role
  dbr:Matt_Colton dbo:profession ?professionalRole .

  # Association between Matt Colton and Luke Vibert
  OPTIONAL {
    ?association dbo:agent1 dbr:Matt_Colton .
    ?association dbo:agent2 dbr:Luke_Vibert .
    BIND(dbr:Luke_Vibert AS ?associatedArtist)
  }

  # Band membership of Luke Vibert
  OPTIONAL {
    ?bandMember dbo:member dbr:Luke_Vibert .
    BIND(?bandMember AS ?bandMember)
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
528,28,val,Give me the war of the military force of Battle of Pisagua and war of Orozimbo Barbosa and force of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?battleOfPisaguaForce ?orozimboBarbosaWar ?narcisoCamperoForce
WHERE {
  # Battle of Pisagua military forces
  ?battleOfPisagua dbo:participatedIn ?event .
  FILTER(STRSTARTS(LCASE(?event), ""http://dbpedia.org/resource/battle_of_pisagua""))
  ?battleOfPisagua foaf:name ?battleOfPisaguaForce .

  # Orozimbo Barbosa associated wars
  ?orozimboBarbosa dbo:associatedWith ?war .
  FILTER(STRSTARTS(LCASE(?orozimboBarbosa), ""http://dbpedia.org/resource/orozimbo_barbosa""))
  ?war foaf:name ?orozimboBarbosaWar .

  # Narciso Campero military force
  ?narcisoCampero dbo:participatedIn ?force .
  FILTER(STRSTARTS(LCASE(?narcisoCampero), ""http://dbpedia.org/resource/narciso_campero""))
  ?force foaf:name ?narcisoCamperoForce .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
435,12,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and region of Greenwich Mean Time and territory administered from Reykjavík.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . }","SELECT ?articleContent ?gmtRegion ?administeredTerritory
WHERE {
  # Article 62, Section IV of the Constitution of Iceland
  OPTIONAL {
    ?constitution dbr:Iceland dbr:Constitution_of_Iceland .
    ?constitution dbo:section ""Article 62"" .
    ?constitution dbo:subsection ""Section IV"" .
    ?constitution dct:description ?articleContent .
  }

  # Region of Greenwich Mean Time
  OPTIONAL {
    ?timeZone dbr:Greenwich_Mean_Time .
    ?timeZone dbo:region ?gmtRegion .
  }
  
  # Territory administered from Reykjavík
  OPTIONAL {
    ?territory dbo:administrativeCenter dbr:Reykjavík .
    ?territory dct:title ?administeredTerritory .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
485,13,val,"Give me the birth place of Thomas Warner (poet) and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?country
WHERE {
  ?warner a dbo:Poet ;
          foaf:name ""Thomas Warner"" .
  
  ?warner dbo:birthPlace ?birthPlace .

  OPTIONAL {
    ?country a dbo:Country ;
             dbp:timeZone ""Europe/London"" .
  }
}
```

### Explanation

- **PREFIX**: Define prefixes for ontology and property namespaces.
- **SELECT**: Choose variables `?birthPlace` and `?country`.
- **WHERE**:
  - Identify Thomas Warner as a poet with the name ""Thomas Warner"".
  - Retrieve his birthplace using `dbo:birthPlace`.
  - Use an `OPTIONAL` clause to find countries in the Western European Time zone (`Europe/London`).",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
487,11,val,Give me the country of the administration of Patricia McCoy and administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . ?v2 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?country
WHERE {
  VALUES ?person { 
    (dbo:Patricia_McCoy) 
    (dbo:Phil_Scott)
  }
  
  ?person dbo:country ?adminCountry.
  OPTIONAL { ?person dbp:country ?country. }

  FILTER(?adminCountry != ?country || !bound(?country))
  BIND(COALESCE(?country, ?adminCountry) AS ?country)

}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
959,37,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativePlace
WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolder ?office ;
          dbo:managerOfSeason ?season .
  
  ?office dbo:electionDate ?date ;
          dbo:electedAsLeader ""true""^^xsd:boolean .
  FILTER (YEAR(?date) = 2010 && CONTAINS(LCASE(str(?office)), ""japanese house of councillors""))

  ?season dbo:team dbr:Júbilo_Iwata ;
          dbo:season ""2013""^^xsd:gYear .

  ?person dbo:residence ?residence .
  FILTER (dbo:Country(?residence))

  ?person dbp:nativePlace ?nativePlace .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
314,15,val,Give me the commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?deathLocation WHERE {
  # Find commanders in the Spanish Civil War
  ?commander dbo:role ""Commander""@en .
  ?commander dbo:participatedIn dbr:Spanish_Civil_War .

  OPTIONAL {
    # Check if they died at the headquarters of House of Sombrerete
    ?deathEvent dbo:place dbr:House_of_Sombrerete_Headquarters ;
               dbo:agent ?commander .
    ?commander dbp:causeOfDeath ?deathLocation .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
701,19,val,Give me the parent of the child of Nefertari and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfNefertariChild ?parentOfHenuttawyChild
WHERE {
  # Find the child of Nefertari and then their parent
  ?childOfNefertari dbo:mother dbr:Nefertari .
  ?parentOfNefertariChild dbo:parent ?childOfNefertari .

  # Find the child of Henuttawy and then their parent
  ?childOfHenuttawy dbo:mother dbr:Henuttawy_19th_dynasty .
  ?parentOfHenuttawyChild dbo:parent ?childOfHenuttawy .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,38,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor
WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Roz_Ryan ;
         rdf:type dbo:Work, dbo:TelevisionShow .
  
  ?claimToFame a dbo:ClaimToFame ;
               dbo:agent dbr:Michael_Ballhaus ;
               dbo:subject ?movie .

  ?movie dbo:actor ?actor .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
142,7,val,Give me the birthplace of George Tokoro and entity in the region of Japan Standard Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?region
WHERE {
  ?person rdfs:label ""George Tokoro""@en .
  ?person dbo:birthPlace ?birthPlace .

  OPTIONAL {
    ?birthPlace dbo:country ?country .
    ?country dbo:timeZone ?timezone .
    FILTER (CONTAINS(LCASE(?timezone), ""japan standard time""))
  }
  
  BIND(""Japan Standard Time"" AS ?region)
}
```

### Explanation:
- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT**: Choose `?birthPlace` to get the birthplace of George Tokoro, and `?region` as a constant string ""Japan Standard Time"".
- **WHERE**:
  - Identify George Tokoro using his label in English.
  - Retrieve his birthplace using `dbo:birthPlace`.
  - Use an optional pattern to check if the country of the birthplace has a timezone containing ""japan standard time"".
  - Bind ""Japan Standard Time"" as a constant value for the region.",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
696,14,val,Give me the landmark at elevation of the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Identify the battle and its commander
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Chishui River""@en .

  ?commander dbo:commandedBy ?battle .
  
  # Find the award given to the commander
  OPTIONAL { 
    ?award dbo:recipient ?commander .
    ?award dbo:elevation ?elevation .
    
    # Find landmark at that elevation
    ?landmark a dbo:Landmark ;
              dbo:elevation ?elevation .
  }
}
```",3,3,4,3,1,3,2,20,0,0,1731,0,0.0,0
55,17,val,"Give me the band of Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfNewsted ?memberBand ?sanFranciscoGroup
WHERE {
  # Find Newsted and its members
  dbr:Newsted a dbo:MusicalArtist ;
              dbo:bandMember ?newstedMember .

  # Find bands/groups associated with these members
  ?newstedMember dbo:bandMember ?memberBand .
  
  # Ensure the band is also a group
  ?memberBand a dbo:MusicalGroup .

  # Find groups related to San Francisco Symphony
  ?sanFranciscoGroup a dbo:MusicalGroup ;
                    dbo:location dbr:San_Francisco_Symphony .

  # Link member bands with San Francisco-related groups
  ?memberBand dbo:bandMember ?commonMember .
  ?sanFranciscoGroup dbo:bandMember ?commonMember .
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
54,42,val,"Give me the parent of Thado Minsaw of Prome and child of the father of Soe Min Wimala Dewi and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfThadoMinsaw ?predecessorOfChild
WHERE {
  # Thado Minsaw of Prome's parent
  ?thadoMinsaw dbo:birthPlace dbr:Prome;
               dbo:parent ?parentOfThadoMinsaw.

  # Soe Min Wimala Dewi's father and her child (herself)
  ?soeMinWimalaDewi dbp:father ?fatherOfSoeMinWimalaDewi;
                    a dbo:Person.
  ?child dbr:Soe_Min_Wimala_Dewi; # Assuming Soe Min Wimala Dewi is the child
         dbo:parent ?fatherOfSoeMinWimalaDewi.

  # Predecessor of Soe Min Wimala Dewi (herself)
  ?predecessor dbp:successor ?child;
               a dbo:Person.

  # Thihapate of Mohnyin's predecessor who is an office holder and royalty
  ?thihapate dbr:Thihapate_of_Mohnyin; 
             dbo:officeHolder ?officeHolder;
             dbo:royalty ?royalty.
  
  FILTER(?predecessor = ?parentOfThadoMinsaw)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
378,23,val,Give me the war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war
WHERE {
    ?person a dbo:Person ;
            foaf:name ""Carl Pontus Gahn""@en ;
            dbo:birthName ?birthName .
    
    OPTIONAL { 
        ?person dbo:participatedInWar ?war .
    }
}
```

### Explanation

- **PREFIX**: Define common namespaces for DBpedia.
- **SELECT ?war**: We want to retrieve the wars associated with Carl Pontus Gahn.
- **WHERE Clause**:
  - Identify `?person` as a `dbo:Person`.
  - Match the name ""Carl Pontus Gahn"" and his birth name.
  - Use an `OPTIONAL` clause to find any wars (`dbo:participatedInWar`) he was involved in.

This query assumes that DBpedia has structured data linking individuals to wars they participated in, which may require adjustments based on actual schema details.",3,3,4,3,1,3,3,71,0,0,12,0,0.0,0
360,14,val,"Give me the writer of The Roaring Silence and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer ?deathSettlement
WHERE {
  # Find the writer of ""The Roaring Silence""
  dbr:The_Roaring_Silence dbo:composer ?writer .

  # Find the death place of Winnie Madikizela-Mandela and ensure it's a settlement
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:PopulatedPlace .
  BIND(STRAFTER(STR(?deathPlace), ""http://dbpedia.org/resource/"") AS ?deathSettlement)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
391,34,val,"Give me the actor of All About the Andersons and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the nickname of Jackson, Tennessee
  dbr:Jackson,_Tennessee dbo:nickname ?nickname .

  # Find the actor of ""All About the Andersons""
  dbr:All_About_the_Andersons dbo:starring ?actor .

  # Check if the actor is native to Jackson, Tennessee (or its nickname)
  OPTIONAL { ?actor dbo:birthPlace dbr:Jackson,_Tennessee . }
  FILTER (?nickname IN (str(?actor) || "" ("" || str(dbo:birthPlace) || "")""))
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,42,val,Give me the spouse of the person born as Ted Martin McGinley and professional in Actress and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouseTed ?spouseGigi
WHERE {
  # Find Ted Martin McGinley and his spouse
  ?ted a dbo:Actor ;
      foaf:name ""Ted Martin McGinley"" .
  
  OPTIONAL { 
    ?ted dbo:spouse ?spouseTed .
  }
  
  # Find Gigi Rice by her birth name and her spouse
  ?gigi a dbo:Person ;
        foaf:name ?nameGigi ;
        dbo:birthName ?birthNameGigi .

  FILTER regex(?birthNameGigi, ""Gigi Rice"", ""i"")

  OPTIONAL { 
    ?gigi dbo:spouse ?spouseGigi .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
314,17,val,Give me the awardee of the award of Sergei Makovetsky and commander in Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v1 . },"SELECT ?awardee ?award ?commanderRole
WHERE {
  # Find Sergei Makovetsky's awards
  ?person a dbo:Person ;
          foaf:name ""Sergei Makovetsky""@en .
  
  OPTIONAL {
    ?person dbo:award ?award .
    ?award dbo:recipient ?awardee .
  }
  
  # Find his role in the Spanish Civil War
  OPTIONAL {
    ?person dbo:role ?commanderRole ;
            dbo:participatedIn dbr:Spanish_Civil_War .
  }
}
```

This query does the following:
- Identifies Sergei Makovetsky as a person.
- Retrieves any awards he received and their awardees.
- Looks for his role in the Spanish Civil War.",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
360,13,val,"Give me the writer of the work, that is an album, of Dave Flett and native of Johannesburg.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album a dbo:Album ;
         dbo:writer ?writer .
  
  ?person foaf:nativePlace dbr:Johannesburg ;
          foaf:name ""Dave Flett""@en .

  ?album dbo:artist ?person .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
184,33,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Géza von Habsburg.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Find Archduke Ladislaus Philipp of Austria
  ?ladislaus a dbo:Archduke ;
             dbo:spouseOrPartner ?parent1 .

  # Find the child of Archduke Ladislaus (first level)
  ?parent1 dbo:child ?child1 .

  # Find the grandchild of Archduke Ladislaus (second level)
  ?child1 dbo:child ?grandchild .

  # Ensure the grandchild is royalty
  ?grandchild a dbo:RoyalFamilyMember .

  # Ensure this grandchild is a parent of Géza von Habsburg
  ?grandchild dbo:parent ?geza .
  ?geza rdfs:label ""Géza von Habsburg""@en .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
427,32,val,Give me the party of the father of Lamberto Andreotti and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherParty ?partyName
WHERE {
    # Lamberto Andreotti's father
    dbr:Lamberto_Andreotti dbo:father ?father .
    
    # The political party of Lamberto Andreotti's father
    ?father dbo:politicalAffiliation ?fatherParty .

    # Italian People's Party (1994)
    OPTIONAL {
        ?party dbr:Italian_People%27s_Party_(1994) rdfs:label ?partyName .
        FILTER(LANG(?partyName) = 'en')
    }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
16,31,val,Give me the spouse of the person born as the birth name of Ted McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Get Ted McGinley's birth name
  dbr:Ted_McGinley dbo:birthName ?birthName .

  # Step 2: Find actresses with the same birth name
  ?actress a dbo:Actress ;
          dbp:name ?name ;
          dbp:birthName ?birthName .
  
  FILTER(?name != ""Ted McGinley"") # Ensure we don't select Ted McGinley himself

  # Step 3: Get the spouse of the actress
  OPTIONAL { ?actress dbo:spouse ?spouse }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
232,28,val,Give me the native of London and child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  # Identify John Pertwee
  ?john a dbo:Person ;
        foaf:name ""John Devon Roland Pertwee"" .

  # Find his child who is native of London and acted in Dog Soldiers
  ?child foaf:parent ?john ;
         dbo:nativePlace dbr:London .
  
  # Ensure the person also acted in Dog Soldiers
  ?film a dbo:Film ;
        foaf:name ""Dog Senators"" .
  ?film dbo:actor ?child .

}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
747,33,val,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName
WHERE {
  ?song a dbo:Songs .
  ?song dbo:lyricsBy ?writer .
  ?writer dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1985 && MONTH(?birthDate) = 4 && DAY(?birthDate) = 29) .
  
  ?song dbo:artist ?band .
  ?band rdfs:label ?bandName .

  ?song dbp:lyricsContributor dbr:Amba_Shepherd .
}
ORDER BY ?bandName",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
959,40,val,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?almaMater
WHERE {
  # Manager of Júbilo Iwata in 2013
  ?team dbo:coach ?manager .
  ?manager dbo:birthYear ""1958""^^xsd:gyear ;
           dbo:nationality dbr:Japan .

  # Team is Júbilo Iwata in the 2013 season
  ?team rdfs:label ""Júbilo Iwata""@en .
  FILTER(YEAR(?season) = 2013)

  # Alma mater conditions
  ?manager dbo:almaMater ?almaMater .
  ?almaMater a dbo:University ;
             dbo:country dbr:Japan ;
             rdf:type dbp:EducationalInstitution .

}",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
378,34,val,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war
WHERE {
  # Carl Pontus Gahn (Carl Wilhelm Scheele)
  ?person1 a dbo:Person ;
           dbo:birthName ""Carl Wilhelm Scheele"" .
  
  # Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  ?person2 a dbo:Person ;
           dbo:famousFor ?fame .

  FILTER(CONTAINS(LCASE(?fame), ""military leader""))

  # Wars they participated in
  ?person1 dbo:participatedIn ?war .
  ?person2 dbo:participatedIn ?war .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
485,12,val,Give me the birth place of Thomas Warner (poet) and entity in Nottinghamshire and entity in United Kingdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?poet a dbo:Poet ;
        foaf:name ""Thomas Warner"" ;
        dbo:birthPlace ?birthPlace .
  
  ?birthPlace dbo:locatedIn dbr:Nottinghamshire .
  ?nottinghamshire dbo:country dbr:United_Kingdom .
}
```

This query does the following:
- Selects the birthplace of Thomas Warner, who is identified as a poet.
- Ensures that this birthplace is located in Nottinghamshire.
- Confirms that Nottinghamshire is part of the United Kingdom.",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
767,36,val,"Give me the entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?entityInBadenWurttemberg ?alterEgo
WHERE {
  ?entityInBadenWurttemberg dbo:locatedIn dbr:Baden-Württemberg .
  
  OPTIONAL {
    ?matthewBurland foaf:name ""Matthew Burland"" .
    ?matthewBurland foaf:alterEgo ?alterEgo .
  }
}
```",4,5,5,3,2,3,3,71,0,0,7,0,0.0,0
959,19,val,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university WHERE {
  ?person a dbo:Person ;
          foaf:name ""Eiji Ōtsuka""@en ;
          dbo:nationality dbr:Japan .
  
  ?person dbo:almaMater ?university .

  ?university a dbo:University ;
              dbo:country dbr:Japan ;
              rdf:type dbo:EducationalOrganization .
}
```",3,7,4,2,2,3,3,71,0,0,84,0,0.0,0
487,13,val,Give me the country of the administration of the person born on 1955-01-26.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/country> ?result . ?v1 <http://dbpedia.org/property/leader> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?country
WHERE {
  ?person dbo:birthday ""1955-01-26""^^xsd:date .
  ?person dbo:positionHeld ?administration .
  ?administration dbo:country ?country .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
820,15,val,Give me the professional in the award of the author of Understanding Comics and child of Jack Schwartzman.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?author dbo:book dbr:Understanding_Comics .
  ?author foaf:child ?person .
  ?person dbo:parent dbr:Jack_Schwartzman .
  ?person dbo:occupation ?professional .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
827,15,val,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfWilliamErnest
WHERE {
  dbr:William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:father ?fatherOfWilliamErnest .

  dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:parent ?parentOfCharlesAlexander .

  ?childOfParent rdf:type dbo:Monarch .
  ?childOfParent dbo:parent ?parentOfCharlesAlexander .

  ?childOfParent dbo:father ?royalChildFather .

  FILTER (?fatherOfWilliamErnest = ?royalChildFather)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
391,26,val,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor
WHERE {
  # Sherry Hormann resource
  wd:Q1234567 dbo:spouse ?spouse .  # Replace Q1234567 with the actual DBpedia ID for Sherry Hormann

  # Spouse's claim to fame (work)
  ?spouse dbo:claimToFame ?work .

  # Actor associated with the work
  ?work dbo:starring ?actor .
}
```

**Notes**:
- Replace `wd:Q1234567` with Sherry Hormann's actual DBpedia resource identifier.
- The query assumes that the spouse has a claim to fame and that this is represented as a work in which actors are involved.",3,4,4,3,1,3,3,71,0,0,20,0,0.0,0
659,19,val,"Give me the commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleCommander ?wellingtonForceCommander
WHERE {
  # Commander in the Battle of Leipzig
  dbr:Battle_of_Leipzig dbo:commander ?battleCommander .

  # Forces led by Arthur Wellesley, 1st Duke of Wellington
  dbr:Arthur_Wellesley,_1st_Duke_of_Wellington dbo:commander ?wellingtonForce .
  
  # Commander in the forces led by Arthur Wellesley
  ?wellingtonForce dbo:commander ?wellingtonForceCommander .
}
```",3,3,4,2,2,3,3,71,0,0,19,0,0.0,0
617,33,val,"Give me the child of Antiochus III the Great and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfAntiochusIII ?spouseOfSuccessorsChild
WHERE {
  # Antiochus III the Great and his child
  dbr:Antiochus_III_the_Great dbo:child ?childOfAntiochusIII .

  # The successor of Antiochus (son of Antiochus III)
  ?antiochusIV dbo:parent dbr:Antiochus_III_the_Great .
  ?successor dbo:predecessor ?antiochusIV .

  # Child of the successor
  ?successorChild dbo:child ?successor .
  
  # Spouse of the child of the successor, who is royalty
  ?successorChild dbo:spouse ?spouseOfSuccessorsChild .
  FILTER EXISTS { ?spouseOfSuccessorsChild a dbo:Monarch } 
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
617,12,val,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary and child of Doubravka of Bohemia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandparent WHERE {
  # Identify Richeza of Poland, Queen of Hungary
  dbr:Richeza_of_Poland,_Queen_of_Hungary dbo:childOf ?father .
  
  # Identify the father's parent (Richeza's grandparent)
  ?father dbo:childOf ?grandparent .

  # Ensure the grandparent is royalty
  ?grandparent a dbo:Monarch .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
281,29,val,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfBeauchampSeymour ?countryOfBirthBobHeffron ?warOfNewZealandArmy
WHERE {
  # War involving Beauchamp Seymour, 1st Baron Alcester
  dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:participatedIn ?warOfBeauchampSeymour .

  # Bob Heffron's birthplace country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country ; rdfs:label ?countryOfBirthBobHeffron .

  # Wars involving the New Zealand Army
  dbr:New_Zealand_Army dbo:participatedIn ?warOfNewZealandArmy .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
959,35,val,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find Takashi Sekizuka's team and its manager
  ?team dbo:member dbr:Takashi_Sekizuka ;
        dbo:coach ?manager .

  # Find Eiji Ōtsuka's alma mater, ensuring it is Japanese and fits the specified categories
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  
  FILTER (
    ?university rdf:type dbo:University ;
                dbp:country ""Japan""^^xsd:string ;
                rdf:type dbo:Organisation ;
                rdf:type dbo:EducationalInstitution
  )
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
55,13,val,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of Metallica.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  dbr:Used_to_Love_Her dbo:producer ?producer .
  
  ?producer rdf:type dbo:Band .

  ?producer dbo:bandMember ?bandMember .

  ?bandMember dbo:bandMember dbr:Metallica .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
182,13,val,Give me the war of Jagath Dias and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warJagathDias ?warAuthorEasterBombs WHERE {
  # Wars associated with Jagath Dias
  ?person a dbo:Person ;
          foaf:name ""Jagath Dias"" ;
          dbo:participatedIn ?warJagathDias .
  
  # Wars associated with the author(s) of the 2019 Sri Lanka Easter bombings
  dbr:2019_Sri_Lanka_Easter_bombings dbo:perpetrator ?author .
  ?author a dbo:Person ;
          dbo:participatedIn ?warAuthorEasterBombs .

}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
435,17,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?articleContent ?regionName WHERE {
  # Part 1: Article 62, Section IV of Constitution of Iceland
  OPTIONAL {
    ?constitution dct:title ""Constitution of Iceland""@en .
    ?constitution dbo:hasPart ?section .
    ?section dbo:hasPart ?article .
    ?article dbo:number ""62"" ;
             dbo:hasPart ?subsection .
    ?subsection dbo:number ""IV"" ;
                dbo:textContent ?articleContent .
  }

  # Part 2: Region of the time zone in Bombali Shebora Chiefdom
  OPTIONAL {
    ?chiefdom dbr:Bombali_Shebora_Chamber_of_Chiefdoms ;
              dbo:timeZone ?timezone .
    ?timezone dbo:region ?region .
    ?region rdfs:label ?regionName .
    FILTER (lang(?regionName) = ""en"")
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,34,val,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild
WHERE {
  # Step 1: Identify Nysa
  ?nysa a dbo:Person ;
        dbp:spouse ?pharnacesI ;
        rdfs:label ""Nysa""@en .

  # Step 2: Find Parent of Nysa
  ?parent dbo:child ?nysa .

  # Step 3: Find Child of the Parent (Child of Nysa)
  ?child dbo:child ?parent .

  # Step 4: Ensure Child is Royalty
  ?child dbo:royalTitle ?title .

  # Step 5: Find Grandchild (Child of Child)
  ?grandchild dbo:child ?child .

  # Step 6: Ensure Grandchild is Royalty
  ?grandchild dbo:royalTitle ?grandTitle .

  # Step 7: Identify Successor of Antiochus II Theos
  ?antiochusII a dbo:Person ;
               rdfs:label ""Antiochus II Theos""@en .
  
  ?successor dbo:succeededBy ?antiochusII ;
             dbo:royalTitle ?sucTitle .

}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
54,39,val,"Give me the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?child ?predecessor
WHERE {
  # Find Thado Minsaw of Prome and his parent
  ?thadoMinsaw a dbo:Person ;
               foaf:name ""Thado Minsaw""@en ;
               dbo:placeOfBirth dbr:Prome .
  
  ?thadoMinsaw dbo:parent ?parent .

  # Find the child of this parent who is an office holder and royalty
  ?child dbo:parent ?parent ;
         a dbo:Person, dbo:Royalty ;
         dbo:officeHolder true .

  # Determine the predecessor of this child
  ?predecessor dbo:successor ?child .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
294,19,val,"Give me the entity in Nashville, Tennessee and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?awardeeRestingPlace WHERE {
  # Find the entity in Nashville, Tennessee
  ?entity a dbo:City ;
          dbo:location dbr:Nashville,_Tennessee .

  # Find the awardee who is a politician and awarded Distinguished Service Medal (U.S. Army)
  ?person dbo:award dbr:Distinguished_Service_Medal_(United_States_Army) ;
          rdf:type dbo:Politician ;
          dbp:placeOfBirth ?entity .
  
  # Get the resting place of the awardee
  OPTIONAL { ?person dbp:burialPlace ?awardeeRestingPlace . }

  # Find Edwin A. Keeble's resting place
  dbr:Edwin_A._Keeble dbo:finalBurialPlace ?keeblesRestingPlace .

  # Ensure the awardee and Edwin A. Keeble have specified resting places
  FILTER(?awardeeRestingPlace != '' && ?keeblesRestingPlace != '')
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
767,22,val,Give me the reference to the alter ego of Black Hood and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?entityInBadenWuerttemberg
WHERE {
  # Find Black Hood's alter ego
  dbr:Black_Hood dbo:alterEgo ?alterEgo .

  # Find an entity located in Baden-Württemberg
  ?entityInBadenWuerttemberg dbo:location dbr:Baden-Württemberg .
}
```",3,3,4,2,2,3,3,71,0,0,7,0,0.0,0
547,24,val,Give me the resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?burialPlace
WHERE {
  # Alan Cunningham's burial place
  OPTIONAL {
    dbr:Alan_Cunningham dbo:name ?name .
    dbr:Alan_Cunningham dbo:placeOfBurial ?burialPlace .
  }
  
  # Actor of ""Enemy at the Door""
  OPTIONAL {
    dbr:Enemy_at_the_Door dbo:starring ?actor .
    ?actor dbo:name ?actorName .
    ?actor dbo:placeOfBurial ?actorBurialPlace .
    
    BIND(?actor AS ?person)
    BIND(?actorName AS ?name)
    BIND(?actorBurialPlace AS ?burialPlace)
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
391,24,val,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and actor of All About the Andersons.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  # Find films directed by Michael Ballhaus
  ?film dbo:director dbr:Michael_Ballhaus .
  
  # Find actors in those films
  ?film dbo:starring ?actor .

  # Ensure the actor is also in ""All About the Andersons""
  dbr:All_About_the_Andersons dbo:starring ?actor .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
547,35,val,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardeeRestingPlace ?childRestingPlace WHERE {
  # Find the awardee of Knight Grand Cross of the Order of St Michael and St George
  ?person dbo:award dbp:KnightGrandCrossOfTheOrderOfStMichaelAndStGeorge ;
          dbo:burialPlace ?awardeeRestingPlace .

  # Find James Burton (property developer) and his child
  ?jamesBurton a dbo:Person ;
               foaf:name ""James Burton"" ;
               dbo:occupation dbp:PropertyDeveloper .
  
  ?child dbo:parent ?jamesBurton ;
         dbo:burialPlace ?childRestingPlace .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
801,40,val,Give me the associated musical artist of Chris Taylor (music producer) and producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist ?producer ?shadowProfessional
WHERE {
  # Chris Taylor's associated musical artist
  dbr:Chris_Taylor_(musician) dbo:musicalArtist ?artist .

  # Producer of Westside Story (song)
  dbr:Westside_Story_(song) dbo:producer ?producer .

  # Professional with an alter ego related to The Shadow
  {
    SELECT DISTINCT ?shadowProfessional WHERE {
      ?shadowProfessional dbo:alterEgo dbr:The_Shadow .
    }
  } UNION {
    SELECT DISTINCT ?shadowProfessional WHERE {
      ?shadowProfessional rdfs:label ?label .
      FILTER(CONTAINS(LCASE(?label), ""the shadow""))
    }
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
778,15,val,"Give me the author of Chroot and entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?awardEntity
WHERE {
  # Find the author of Chroot
  ?chroot dbo:creator ?author .
  FILTER (CONTAINS(LCASE(STR(?author)), ""chroot""))

  # Find the award entity for Wolf Prize in Medicine
  ?prize dbo:awardee ?recipient .
  ?prize rdfs:label ""Wolf Prize in Medicine""@en .

  # Ensure the recipient is American
  ?recipient dbo:nationality dbr:United_States .

  # Bind the prize to the award entity
  BIND(?prize AS ?awardEntity)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
92,41,val,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist
WHERE {
  # Find band members of Nevermore who are artists
  ?bandMember a dbo:Band ;
              dbo:member ?person .
  
  ?person dbo:birthName ""Jim Sheppard""@en ;
          dbo:birthName ""Joseph Michael""@en .

  FILTER (EXISTS { ?band dbr:Nevermore . ?band dbo:member ?person }).

  # Ensure the band member is an artist
  OPTIONAL {
    ?bandMember dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
959,43,val,"Give me the member of University of Tsukuba and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?member
WHERE {
  # Find the leader of the 2010 Japanese House of Councillors election who is a politician
  ?leader dbo:office ""Member of the House of Councillors""@en;
          dbo:election ""Japanese general election, 2010""@en;
          rdf:type dbo:Politician.
  
  # Determine the country of residence for this leader
  ?leader dbp:nationality ?country.

  # Find members of the University of Tsukuba who are natives of that country
  ?member dbo:almaMater dbr:University_of_Tsukuba;
          dbo:nationality ?country.
  
  # Identify individuals who were managers of Júbilo Iwata in the 2013 season
  ?manager dbp:team ""Júbilo Iwata""@en;
           dbp:season ""2012–13""@en.

  # Ensure the member is also a manager
  FILTER (?member = ?manager)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
994,31,val,Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of Red Tide (band).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?watchtowerArtist2 ?redTideArtist 
WHERE {
  # Find Watchtower and its associated artist
  dbr:Watchtower dbo:associatedMusicalArtist ?watchtowerArtist1 .
  
  # Find the associated artist of Watchtower's associated artist
  OPTIONAL { ?watchtowerArtist1 dbo:associatedMusicalArtist ?watchtowerArtist2 . }
  
  # Find Red Tide (band) and its associated artist
  dbr:Red_Tide_(band) dbo:associatedMusicalArtist ?redTideArtist .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
314,19,val,Give me the commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName WHERE {
  ?person dbo:role ""Commander""@en .
  FILTER EXISTS { ?person dbo:deathPlace dbr:House_of_Sombrerete . }
  FILTER EXISTS { ?person dbo:awards ?award . ?award dbo:number ""30""^^xsd:int . }
  
  ?person rdfs:label ?personName .
  FILTER (LANG(?personName) = 'en')
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
294,15,val,"Give me the entity in Nashville, Tennessee and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?restingPlace WHERE {
  ?awardee a dbo:Politician ;
           dbo:awardReceived dbr:Distinguished_Service_Medal_(U.S._Army) .
  
  OPTIONAL { ?awardee dbo:deathPlace ?restingPlace . }
  
  FILTER (CONTAINS(LCASE(?restingPlace), ""nashville, tennessee""))
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
294,13,val,"Give me the resting place of Edwin A. Keeble and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?keeblesRestingPlace ?awardeesRestingPlace
WHERE {
  # Resting place of Edwin A. Keeble
  dbr:Edwin_A._Keeble dbo:finalRestingPlace ?keeblesRestingPlace .

  # Resting place of a politician who received the Distinguished Service Medal (U.S. Army)
  ?awardee dbo:recipient dbr:Distinguished_Service_Medal_(United_States_Army) .
  ?awardee rdf:type dbo:Politician .
  ?awardee dbo:finalRestingPlace ?awardeesRestingPlace .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
184,28,val,Give me the child of Archduke Joseph August of Austria and parent of Archduchess Ilona of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person
WHERE {
  ?person dbo:parent dbr:Archduke_Joseph_August_of_Austria .
  ?person dbo:child dbr:Archduchess_Ilona_of_Austria .
  ?person dbo:child ?budaNative .
  ?budaNative dbo:nativePlace dbr:Budapest .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
767,40,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v1 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement ?reference
WHERE {
  # Find the writer of ""Where It's At"" (Dustin Lynch album)
  ?album dbo:artist dbr:Dustin_Lynch ;
         rdfs:label ""Where It's At""@en .
  
  # Find Carl L. Nippert's alma mater
  ?nippert dbo:almaMater ?university .

  FILTER(?nippert = dbr:C._L._Nippert)

  # Find a common entity in their administration that is a settlement
  ?settlement dbo:administrativeRegion ?commonEntity ;
              a dbo:Settlement .
  
  # Ensure the common entity is related to both individuals
  ?album dbo:administrator ?commonEntity .
  ?university dbo:administrator ?commonEntity .

  # Add reference information
  OPTIONAL { ?settlement rdfs:seeAlso ?reference }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
179,12,val,Give me the parent of the child of Bhumibol Adulyadej and person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>

SELECT ?parent
WHERE {
  # Find the child of Bhumibol Adulyadej and Queen Sirikit
  ?child wdt:P22/wdt:P25 wd:Q1234;       # Child of Bhumibol Adulyadej
         wdt:P22/wdt:P25 wd:Q1235.        # Child of Queen Sirikit

  # Find the parent of that child
  ?child wdt:P25 ?parent.
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
488,34,val,"Give me the administration of Emperor Go-Yōzei and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?birthPlace
WHERE {
  # Emperor Go-Yōzei's administration period
  dbr:Emperor_Go-Yōzei dbo:reign ?administration .

  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
488,30,val,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?administration ?birthPlace
WHERE {
  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:placeOfDeath ?deathPlace .

  # Emperor Go-Mizunoo's father (Emperor Nijō) administration
  dbr:Nijō_daijin dbo:title ?administration .

  # Enomoto Takeaki's birth place
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
184,39,val,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonEntity
WHERE {
  # Step 1: Find the parent of Archduchess Margaret of Austria (born 1925)
  ?margaret a dbr:Archduchess_Margaret_of_Austria_(1925) .
  ?margaret dbo:parent ?parentMargaret .

  # Step 2: Find the child of that parent
  ?childOfParent dbo:parent ?parentMargaret .
  
  # Step 3: Find children of Archduke Joseph August of Austria
  ?josephAugust a dbr:Archduke_Joseph_August_of_Austria .
  ?childOfJosephAugust dbo:parent ?josephAugust .

  # Step 4: Identify the common entity
  FILTER (?childOfParent = ?commonEntity)
  FILTER (?childOfJosephAugust = ?commonEntity)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,43,val,Give me the person born as Georgeanne Marie Rice and spouse of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?spouseName WHERE {
  ?person foaf:name ""Georgeanne Marie Rice"" .
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .

  ?actor dbo:profession dbr:Actor .
  ?actor dbo:workFeaturedIn dbr:Unnatural_(TV_series) .
  
  FILTER(?person = ?actor)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
488,32,val,"Give me the birth place of the commander in Boshin War and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace
WHERE {
  # Saigō Takamori as commander in Boshin War
  dbr:Saig%C5%8D_Takamori dbo:occupation dbr:Boshin_War_Commander .
  
  # Birth place of Saigō Takamori
  dbr:Saig%C5%8D_Takamori dbo:birthPlace ?birthPlace .

  # Yūki Hideyasu's father, a politician
  dbr:Y%C5%ABki_Hideyasu dbo:father dbr:Y%C5%ABki_Naomasa .
  
  # Death place of Yūki Naomasa
  dbr:Y%C5%ABki_Naomasa dbo:deathPlace ?deathPlace .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
617,14,val,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  ?richeza dbo:motherOrFather ?father .
  ?father dbo:parent ?grandfather .

  FILTER (?richeza = dbpedia:Richeza_of_Poland)
  
  ?father a dbo:Monarch .
  ?grandfather a dbo:Monarch .
}
```",3,5,4,3,1,3,2,20,0,0,4,0,0.0,0
435,16,val,Give me the work of the author of Iceland and territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?title (GROUP_CONCAT(?country; separator="", "") AS ?administeredFrom)
WHERE {
  # Get works by J.R.R. Tolkien
  dbr:J._R._R._Tolkien dbo:author ?work .
  
  # Get title of each work
  ?work rdfs:label ?title .

  # Get territories administered from Reykjavík (Iceland)
  OPTIONAL {
    dbr:Iceland dbo:administrativeTerritoryOf ?country .
    FILTER(CONTAINS(LCASE(?country), ""reykjavík""))
  }
  
  # Filter to ensure we only get works with a title
  FILTER(langMatches(lang(?title), ""EN""))
}
GROUP BY ?work ?title
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
182,19,val,Give me the war of Jagath Dias and entity in Sri Lanka and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war1 ?war2 WHERE {
  # Find wars associated with Jagath Dias in Sri Lanka
  ?person rdfs:label ""Jagath Dias""@en .
  ?person dbo:nationality dbr:Sri_Lanka .
  ?person dbo:spouse ?relatedPerson .
  ?relatedPerson dbo:occupation ?occupation .
  FILTER(?occupation IN (dbo:MilitaryOfficer, dbo:Soldier)) # Assuming military roles
  ?war1 dbo:participatedIn ?person .

  # Find the author of the 2019 Sri Lanka Easter bombings
  ?event rdfs:label ""2019 Sri Lanka Easter bombings""@en .
  ?event dbo:perpetrator ?author .
  
  # Find wars associated with the author of the bombings
  ?war2 dbo:participatedIn ?author .

  FILTER(?war1 != ?war2) # Ensure different wars are selected
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
404,25,val,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentOfErnestAugustus ?childOfFather
WHERE {
  # Find Prince Ernest Augustus of Hanover (born 1914)
  ?ernestAugustus a dbo:Person ;
                 foaf:name ""Prince Ernest Augustus of Hanover""@en ;
                 dbo:birthYear ""1914""^^xsd:gYear .

  # Identify his parent
  ?ernestAugustus dbo:parent ?parentOfErnestAugustus .

  # Find the father of Ernest Augustus, Duke of Brunswick
  ?dukeErnestAugustus a dbo:Person ;
                     foaf:name ""Ernest Augustus, Duke of Brunswick""@en .
  ?dukeErnestAugustus dbo:father ?fatherOfDuke .

  # Identify the child of the father of Ernest Augustus, Duke of Brunswick
  ?fatherOfDuke dbo:child ?childOfFather .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
161,19,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  # Military force associated with Francisco Franco
  ?francoMilitaryForce dbo:militaryConflict ?conflict .
  ?francoMilitaryForce dbo:commander ?franco .
  ?franco dbr:Francisco_Franco .

  # Military conflict related to the Spanish Civil War
  ?conflict dbo:socialEvent ?civilWar .
  ?civilWar dbr:Spanish_Civil_War .

  # Ensure military force is linked to both entities
  BIND(?francoMilitaryForce AS ?militaryForce)
}
```",3,6,4,2,2,3,3,71,0,0,514,0,0.0,0
10,19,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of Luke Vibert and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  dbr:Matt_Colton dbo:bandMemberOf dbr:Luke_Vibert .

  ?artist dbo:birthPlace ?place .
  ?artist dbo:profession ?profession .

  ?artist dbo:associatedBandMember dbr:Matt_Colton .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
767,20,val,Give me the alma mater of the administration of George K. Nash and entity in Baden-Württemberg.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?entityInBadenWuerttemberg
WHERE {
  ?georgeKash dbr:George_K._Nash dbo:almaMater ?almaMater .
  
  ?entityInBadenWuerttemberg dbp:location dbr:Baden-Württemberg .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
783,13,val,Give me the associated musical artist of the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Identify Shaggy by his birth name
  dbr:Shaggy dbo:birthName dbr:Samuel_Ofori_Amponsah .
  
  # Find bands or groups Shaggy is a member of
  dbr:Shaggy dbo:memberOf ?band .

  # Find other members of those bands/groups
  ?bandMember dbo:memberOf ?band ;
              rdf:type dbo:Band ;
              rdfs:label ?bandLabel .
  
  FILTER(?bandMember != dbr:Shaggy) # Exclude Shaggy himself

  # Retrieve associated musical artists for these band members
  ?bandMember dbo:associatedMusicalArtist ?associatedArtist .
}
```",3,3,4,3,1,3,2,20,0,0,35,0,0.0,0
54,21,val,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  # Find Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi a dbo:Person ;
                   dbo:childOf ?father .

  FILTER (str(?soeMinWimalaDewi) = ""Soe_Min_Wimala_Dewi"") .

  # Find the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?ameittaThiriMahaDhammaDewiOfAva a dbo:Person ;
                                  dbo:title ""Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava"" .

  ?predecessor a dbo:Person ;
               dbo:title ""Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava"" ;
               dbo:successor ?ameittaThiriMahaDhammaDewiOfAva .

  # Ensure the predecessor is also a child of Soe Min Wimala Dewi's father
  ?predecessor dbo:childOf ?father .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
184,36,val,Give me the parent of Géza von Habsburg and parent of the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfGeza ?childOfParentOfMargaret
WHERE {
  # Find the parent of Géza von Habsburg
  ?geza a dbo:Person ;
        foaf:name ""Géza von Habsburg"" .
  
  ?geza dbo:parent ?parentOfGeza .

  # Find Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            foaf:name ""Archduchess Margaret of Austria"" ;
            dbp:birthdayYear ""1925"" .
  
  # Find the parent of Archduchess Margaret
  ?margaret dbo:parent ?parentOfMargaret .

  # Find the child of the parent of Archduchess Margaret
  ?parentOfMargaret dbo:child ?childOfParentOfMargaret .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
547,31,val,Give me the resting place of Simon Cadell and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?simonRestingPlace ?grandchildRestingPlace
WHERE {
  # Simon Cadell's resting place
  ?simon a dbo:Person ;
         foaf:name ""Simon Cadell""@en .
  OPTIONAL { ?simon dbo:deathPlace ?simonRestingPlace . }

  # William Haliburton's grandchild
  ?william a dbo:Person ;
           foaf:name ""William Haliburton""@en .
  ?child1 foaf:parent ?william .
  ?grandchild foaf:parent ?child1 .
  OPTIONAL { ?grandchild dbo:deathPlace ?grandchildRestingPlace . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,34,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/state> ?v1 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  # Identify the album and its writer
  dbr:Where_It's_At_(Dustin_Lynch_album) dbo:lyricist ?writer .
  
  # Find the administration (region) of the writer
  ?writer dbo:nationality ?nationality ;
          dbo:birthPlace ?birthPlace .

  # Identify settlements in this region
  ?settlement a dbo:Settlement ;
              dbo:country ?nationality ;
              dbo:location ?birthPlace .
}
```",4,5,5,3,2,3,3,71,0,0,8,0,0.0,0
391,29,val,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find a work directed by Michael Ballhaus
  ?work dbo:director dbr:Michael_Ballhaus .
  
  # The actor must be in this work
  ?work dbo:starring ?actor .

  # The actor must have acted in ""All About the Andersons""
  ?anotherWork dbo:title ""All About the Andersons""@en ;
               dbo:starring ?actor .

  # The actor's birthplace is Compton, California
  ?actor dbp:birthPlace dbr:Compton,_California .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
801,41,val,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work ?producer ?associatedArtist
WHERE {
  ?work a dbo:Song ;
        dbo:musicalArtist dbr:50_Cent ;
        dbo:composer ?producer .
  
  FILTER EXISTS { 
    ?producer rdfs:label ""Chris Taylor (music producer)""@en .
    OPTIONAL { ?producer foaf:name ?alias . FILTER (?alias = ""The Shadow"") }
  }

  OPTIONAL {
    ?work dbo:musicalArtist ?associatedArtist .
    FILTER NOT EXISTS { ?associatedArtist rdfs:label ""50 Cent""@en }
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
251,16,val,Give me the location of Battle of Marengo and death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?battleLocation ?authorDeathPlace
WHERE {
    # Find the location of the Battle of Marengo
    ?battle a dbo:Battle ;
            rdfs:label ""Battle of Marengo""@en .
    OPTIONAL { 
        ?battle dbo:location ?battleLocation .
    }

    # Find the author of The Twelve Abbots of Challant and their death place
    ?book a dbo:Book ;
          dbp:title ""The Twelve Abbots of Challant""@en .
    ?book dbo:author ?author .
    OPTIONAL {
        ?author dbo:deathPlace ?authorDeathPlace .
    }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
994,26,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Fredrik Thordendal is a member of a band (which is an organization)
  ?band a dbo:Band ;
        dbo:member dbr:Fredrik_Thordendal ;
        a dbo:Organization .

  # Find members of this band who are also part of other bands/groups
  ?otherBandMember dbo:memberOf ?band .
  
  # These other bands/groups must be organizations
  ?otherBand a dbo:Band ;
             dbo:member ?otherBandMember ;
             a dbo:Organization .

  # Get the associated musical artist for these members
  ?otherBandMember dbo:musicalArtist ?associatedArtist .
}
```",3,7,4,3,1,3,3,71,0,0,33,0,0.0,0
427,42,val,"Give me the party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?andreottiParty ?prodiParty ?ippReference
WHERE {
  # Giulio Andreotti's party
  dbr:Giulio_Andreotti dbo:party ?andreottiParty .

  # Romano Prodi's party
  dbr:Romano_Prodi dbo:party ?prodiParty .

  # Reference to Italian People's Party (1994)
  OPTIONAL {
    ?ippReference rdfs:label ""Italian People's Party (1994)""@en .
    FILTER(CONTAINS(LCASE(?ippReference), ""italian people's party""))
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
303,16,val,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and party of Guillermo Endara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?personLabel ?party ?partyLabel
WHERE {
  VALUES (?person ?personLabel) {
    (dbr:Aarnulfo_Arias_Madrid ""Arnulfo Arias Madrid"")
    (dbr:Guillermo_Endara ""Guillermo Endara"")
  }
  
  ?person dbo:birthName ?personLabel.
  OPTIONAL { ?person dbo:partyAffiliation ?party. }
  OPTIONAL { ?party rdfs:label ?partyLabel . FILTER(LANG(?partyLabel) = 'en') }
}
ORDER BY ?person
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
328,18,val,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of Order of Suvorov and commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?name WHERE {
  ?leader a dbo:Person .
  ?leader dbo:officeTitle dbr:People's_Commissar_for_Defence_of_the_Soviet_Union ;
          dbo:honoraryTitle dbr:Order_of_Suvorov ;
          dbo:militaryCommanderOf dbr:Eastern_Front_(World_War_II) .

  OPTIONAL { ?leader foaf:name ?name . }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
421,19,val,Give me the band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Edin Dervišhalidović"" ;
          dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia .
  
  ?awardEvent dbo:recipient ?person .

  ?band dbo:member ?person .
  ?band dbo:member ?bandMember .
  
  FILTER(?person != ?bandMember)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
626,15,val,"Give me the awardee of Order of St. Andrew and commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:awardeeOf dbr:Order_of_St._Andrew .
  ?person dbo:militaryConflictCommander ?conflict .
  ?battle dbo:commander ?person ;
          rdfs:label ""Battle of Paris (1814)""@en .
}
```

This query assumes:
- `dbo:awardeeOf` is the property linking a person to receiving an award.
- `dbo:militaryConflictCommander` links a person to being a commander in a military conflict.
- The label for the battle is specified as ""Battle of Paris (1814)"".",4,5,5,3,2,3,2,20,0,0,9,0,0.0,0
617,44,val,Give me the spouse of the child of Antiochus III the Great and child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child ?spouse ?parent
WHERE {
  # Antiochus III the Great
  ?antiochus dbp:name ""Antiochus III the Great""@en .
  
  # Child of Antiochus III the Great
  ?child foaf:parent ?antiochus .

  # Spouse of the child
  ?spouse dbo:spouse ?child .

  # Parent of the child (should be Antiochus III the Great)
  ?parent foaf:parent ?child .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
959,31,val,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?almaMater
WHERE {
  ?person a dbo:Person ;
          dbo:birthYear ""1958""^^xsd:gYear ;
          dbo:nationality dbr:Japan ;
          dbo:almaMater ?almaMater .
  
  ?almaMater a dbo:EducationalOrganization, dbo:University ;
             dbp:type ""university""@en .
}
```",4,8,5,3,2,3,3,71,0,0,167,0,0.0,0
314,18,val,"Give me the awardee of 30 and commander in the profession, that is an event and a societal event, of Lisa Gavrić.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?event WHERE {
  # Lisa Gavrić as the subject
  VALUES ?lisaGavric { dbr:Lisa_Gavrić }

  # Find events related to Lisa Gavrić
  ?event dbo:recipient ?lisaGavric .
  
  # Filter for awards or recognitions (assuming 'award' is a relevant property)
  ?event rdf:type ?eventType .

  # Check if the event type includes award and societal aspects
  FILTER (
    ?eventType = dbo:Award || 
    ?eventType = dbo:SocietalEvent ||
    ?eventType = dbo:ProfessionalRecognition
  )

  # Find awardees of these events (assuming 'recipient' is a relevant property)
  ?event dbo:recipient ?awardee .

  # Filter for the specific award number or type if applicable
  OPTIONAL {
    ?event dbo:number ""30"" .
  }

  # Ensure the event is related to professional command
  OPTIONAL {
    ?event dbo:professionCommander ?commander .
    FILTER (?commander = true)
  }
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
488,43,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of Enomoto Takeaki and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceOfGrandfather ?birthPlaceOfEnomoto ?administrationOfEmperorGoYozei
WHERE {
  # Matsudaira Tadamasa's grandfather who was an office holder
  ?matsumatsudaira dbo:child dbr:Matsudaira_Tadamasa .
  ?matsumatsudaira dbo:parent ?father1 .
  ?father1 dbo:parent ?grandfather .
  ?grandfather a dbo:OfficeHolder .

  # Death place of the grandfather who is a politician
  ?grandfather dbo:deathPlace ?deathPlaceOfGrandfather .
  OPTIONAL { ?grandfather a dbo:Politician . }

  # Birthplace of Enomoto Takeaki
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceOfEnomoto .

  # Administration of Emperor Go-Yōzei
  dbr:Emperor_Go-Yozei dbo:reignsDuring ?administrationOfEmperorGoYozei .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
197,7,val,Give me the birthplace of the member of FC Politehnica Timișoara and birthplace of George Lusztig.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?memberBirthPlace ?lusztigBirthPlace
WHERE {
  # Find a member of FC Politehnica Timișoara and their birthplace
  ?player dbo:team dbr:FC_Politehnica_Timișoara .
  ?player dbo:birthPlace ?memberBirthPlace .

  # Find George Lusztig's birthplace
  dbr:George_Lusztig dbo:birthPlace ?lusztigBirthPlace .
}
```",3,3,4,2,2,2,2,9,2,169,0,0.011695906432748537,1.0,0.023121387283236997
177,7,val,"Give me the headquarter of Ministry of Culture, Sports and Tourism and entity in the residence of Alexander Gamelin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarter ?residenceEntity
WHERE {
  # Find the headquarter of Ministry of Culture, Sports and Tourism
  dbr:Ministry_of_Culture_Sports_and_Tourism_South_Korea dbo:location ?headquarter .

  # Find an entity related to Alexander Gamelin's residence
  OPTIONAL { 
    dbr:Aleksandr_Gamelin dbo:residence ?residenceEntity .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
701,4,train,Give me the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?parent a dbo:Person .
  ?parent foaf:name ""Nefertari""@en .
  ?parent dbo:child ?child .
}
```

This query does the following:
- Uses `dbo:Person` to ensure we are dealing with a person entity.
- Matches Nefertari using her name in English (`foaf:name ""Nefertari""@en`).
- Retrieves children of Nefertari using the `dbo:child` property.",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
959,2,train,Give me the manager of 2013 Júbilo Iwata season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
    ?team dbo:teamName ""Júbilo Iwata""@en .
    ?team dbo:seasonStartYear ?startYear .
    ?team dbo:seasonEndYear ?endYear .
    
    FILTER (?startYear <= 2013 && ?endYear >= 2013) .

    ?team dbo:manager ?manager .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
485,5,train,"Give me the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Naturalist ;
          foaf:name ""Joseph Whitaker"" .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Region .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
339,6,train,Give me the father of Princess Elizabeth of Greece and Denmark and child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father
WHERE {
  ?princess a dbo:Person ;
            dbo:mother ?mother ;
            dbo:father ?father .
  
  FILTER (str(?princess) = ""Princess_Elizabeth_of_Greece_and_Denmark"")

  ?georgeI a dbo:Person ;
           dbo:child ?father .

  FILTER (str(?georgeI) = ""George_I_of_Greece"")
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
528,13,train,Give me the war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war WHERE {
  ?battle dbp:name ""Battle of La Rinconada de Ate""@en .
  ?commander dbo:participatedInBattle ?battle .
  ?commander dbo:war ?war .
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
994,0,train,Give me the associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?band a dbo:Band ;
        foaf:name ""S.A. Slayer""@en .
  
  OPTIONAL { ?band dbo:bandMember ?member . }
  OPTIONAL { ?band dbo:member ?member . }

  ?member a dbo:MusicalArtist ;
          foaf:name ?artist .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
48,10,train,"Give me the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v0 <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?musicalArtist WHERE {
  ?show dbo:castMember dbr:Stacey_Dash .
  ?show dbo:castMember ?actor .
  
  ?actor dbo:musicalArtist ?musicalArtist .
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
44,3,train,"Give me the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?artist WHERE {
  ?queensrÿche dbo:associatedBand ?artist .
  FILTER (str(?queensrÿche) = ""Queensrÿche"")
  
  ?artist rdf:type dbo:MusicalArtist .
  ?artist rdf:type dbo:Organization .
  ?artist rdf:type dbo:Group .
}
```",1,3,2,1,1,2,2,9,0,0,3,0,0.0,0
492,0,train,Give me the person decedent at French Algeria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?deathPlaceLabel
WHERE {
  ?person dbo:deathPlace ?deathLocation .
  ?deathLocation rdfs:label ?deathPlaceLabel .
  FILTER (CONTAINS(LCASE(?deathPlaceLabel), ""french algeria""))
}
ORDER BY ?person
```",1,1,2,1,1,3,3,71,30,1,0,0.967741935483871,1.0,0.9836065573770492
747,1,train,Give me the band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band
WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Amba Shepherd""@en .
  
  ?person dbo:memberOfBand ?band .
}
```

### Explanation

- **PREFIXes**: 
  - `dbo:` is used for DBpedia ontology classes and properties.
  - `foaf:` is used for Friend of a Friend vocabulary, which includes the name property.

- **SELECT Clause**: We are selecting the variable `?band` to get the band associated with Amba Shepherd.

- **WHERE Clause**:
  - The first triple pattern identifies Amba Shepherd as a musical artist and assigns her name.
  - The second triple pattern finds the band she is a member of using the `dbo:memberOfBand` property.

This query assumes that DBpedia has structured data about Amba Shepherd's membership in a band, which may not always be available. If more specific properties or classes are known, they can be adjusted accordingly.",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
645,10,train,Give me the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
    ?adela a dbo:Person ;
           foaf:name ""Adela Pankhurst""@en .
    
    ?parent dbo:parent ?adela .

    ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
617,14,train,Give me the parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentLabel WHERE {
  ?antiochus rdfs:label ""Antiochus (son of Antiochus III the Great)""@en .
  ?child dbo:childOf ?antiochus .
  ?child dbo:parent ?parent .
  ?parent rdfs:label ?parentLabel .
}
```

This query does the following:
- Identifies `?antiochus` as ""Antiochus (son of Antiochus III the Great)"".
- Finds all children (`?child`) of this Antiochus using `dbo:childOf`.
- For each child, it finds their parent (`?parent`).
- Retrieves and returns the label of these parents.",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
184,13,train,Give me the child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?grandchild
WHERE {
  ?archduke dbo:name ""Archduke Joseph Karl of Austria""@en .
  ?archduke dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
177,3,train,"Give me the office, that is an organisation, of Joo Don-sik.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person rdfs:label ""Joo Don-sik""@en .
  ?person dbo:worksFor ?office .
  ?office a dbo:Organization .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
838,0,train,Give me the band of Raša Đelmaš.,SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band
WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Raša Đelmaš""@en .
  ?person dbo:band ?band .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
161,16,train,"Give me the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Find Indalecio Prieto's role or position
  dbr:Indalecio_Prieto dbo:positionHeld ?role .
  
  # Identify the predecessor in that role
  ?predecessor dbo:positionHeld ?role .
  FILTER(?predecessor != dbr:Indalecio_Prieto)
  
  # Find forces related to this predecessor
  ?force dbo:relatedTo ?predecessor ;
         a dbo:SocietalEvent, dbo:MilitaryConflict .
}
```

### Explanation

- **PREFIX**: Define common prefixes for DBpedia ontology and resources.
- **SELECT**: Choose the force as the main subject of interest.
- **WHERE**:
  - Identify Indalecio Prieto's role using `dbo:positionHeld`.
  - Find predecessors who held the same role.
  - Filter out Indalecio Prieto himself to ensure we get his predecessor.
  - Look for forces related to this predecessor that are both societal events and military conflicts.

This query assumes roles can be linked via `dbo:positionHeld` and forces have a direct relationship with individuals through `dbo:relatedTo`. Adjustments may be needed based on the actual schema in DBpedia.",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
487,9,train,Give me the administration of the person born on 1955-01-26.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?administration
WHERE {
  ?person a dbo:Person ;
          dbo:birthDate ?birthDate .
  
  OPTIONAL { 
    ?person dbo:officeHeld ?administration .
  }
  
  FILTER (xsd:date(?birthDate) = ""1955-01-26""^^xsd:date)
}
```",2,2,3,2,1,3,2,20,0,23,3,0.0,0.0,0
488,2,train,Give me the administration of Emperor Go-Yōzei.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?role
WHERE {
  dbr:Emperor_Go-Yōzei dbo:positionHeld ?role .
}
```

This query assumes that `dbo:positionHeld` is the property used to denote administrative roles. Adjustments may be needed based on the actual schema in DBpedia.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
487,2,train,Give me the person born on 1955-01-26.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name
WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  OPTIONAL { ?person foaf:name ?name . }
  FILTER (str(?date) = ""1955-01-26T00:00:00Z""^^xsd:dateTime)
}
```",1,1,2,1,1,3,2,20,0,0,23,0,0.0,0
820,4,train,Who is the professional in Actor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?actor a dbo:Actor .
}
ORDER BY ?actor
```

This query selects individuals who are classified as actors in DBpedia. The `ORDER BY` clause ensures the results are sorted alphabetically by actor name.",1,1,2,1,1,3,2,20,0,0,21580,0,0.0,0
392,9,train,Give me the province of Schio and region of Central European Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province ?region
WHERE {
  dbr:Schio dbo:locatedIn ?province .

  ?region dbo:timeZone dbr:Central_European_Time .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
981,6,train,Give me the entity in Indonesia and birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?indonesianEntity ?birthPlace
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Novia Indriani Mamuaja""@en .
  
  OPTIONAL { 
    ?person dbo:country dbr:Indonesia .
    ?person dbo:residence ?indonesianEntity .
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
701,3,train,Give me the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Amun-her-khepeshef""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
747,6,train,Who is the writer of Apollo (Hardwell song)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  dbr:Apollo_(Hardwell_song) dbo:lyricsBy ?writer .
}
```

### Explanation:
- **Prefixes**: 
  - `dbo:` is used for DBpedia ontology properties.
  - `dbr:` is used for DBpedia resources.

- **Triple Pattern**:
  - `dbr:Apollo_(Hardwell_song)` identifies the specific song resource.
  - `dbo:lyricsBy` is a common property linking songs to their writers. Depending on the dataset, this might be `dbo:composer`, `dbo:writer`, or similar.

This query assumes that ""Apollo (Hardwell song)"" is correctly identified in DBpedia and linked with its writer using the `dbo:lyricsBy` property. Adjustments may be needed if different properties are used in the dataset.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
378,17,train,"Who is the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warName WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Thomas Trigge""@en .
  
  ?commanderRole dbo:agent ?person ;
                  dbo:militaryConflict ?war .

  ?war a dbo:MilitaryConflict ;
       rdfs:label ?warName .
  
  FILTER(LANG(?warName) = 'en')
}
```",2,5,3,2,1,3,3,71,0,0,169,0,0.0,0
696,7,train,Give me the birth place of the member of Dropkick Murphys.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member ?birthPlace
WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""Dropkick Murphys""@en .
  ?band dbo:bandMember ?member .

  OPTIONAL { 
    ?member dbo:birthPlace ?birthPlace .
  }
}
```",2,2,3,2,1,3,2,20,6,6,0,0.5,1.0,0.6666666666666666
55,8,train,"Give me the band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  # Find the song ""Used to Love Her""
  dbr:Used_to_Love_Her dbo:producer ?producer .

  # Ensure the producer is a band
  ?producer rdf:type dbo:Band .

  # Get members of this band
  ?producer dbo:member ?bandMember .
}
```",2,3,3,2,1,2,3,28,0,0,55,0,0.0,0
318,2,train,Give me the founding year of Eel Pie Publishing.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?foundingYear
WHERE {
  ?entity dbp:name ""Eel Pie Publishing""@en .
  ?entity dbo:foundingYear ?foundingYear .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
197,4,train,Give me the birthplace of Dumitru Nadu and birthplace of George Lusztig.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?birthplace
WHERE {
  VALUES ?person { 
    dbr:Dumitru_Nadu 
    dbr:George_Lusztig 
  }
  
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en')
  
  OPTIONAL { ?person dbo:birthPlace ?birthplace . }
}
```",2,2,3,1,2,2,2,9,1,6,0,0.14285714285714285,1.0,0.25
429,6,train,"Give me the country of the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
  ?expedition dbo:militaryForce ?militaryForce .
  FILTER (str(?expedition) = ""Camden_Expedition"")
  
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:country ?country .
}
```",2,3,3,2,1,2,2,9,0,0,7,0,0.0,0
994,15,train,Give me the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  ?band rdfs:label ""Watchtower""@en .
  ?band a dbo:Band .
  OPTIONAL { ?band dbo:musicalArtist ?artist . }
  FILTER (lang(?bandLabel) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
404,14,train,"Give me the child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?sibling
WHERE {
  ?ernestAugustus dbo:father ?father .
  FILTER(STR(?ernestAugustus) = ""Ernest Augustus, Duke of Brunswick"") .

  ?father dbo:child ?sibling .
  FILTER(?sibling != ?ernestAugustus)
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
328,2,train,Give me the leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader
WHERE {
  ?organization a dbo:GovernmentAgency ;
                rdfs:label ""People's Commissariat of Defense of the Soviet Union""@en .
  
  OPTIONAL { 
    ?organization dbo:head ?leader .
  }
}
```

This query does the following:
- It selects entities that are classified as `dbo:GovernmentAgency` and have a label matching ""People's Commissariat of Defense of the Soviet Union.""
- It uses an optional pattern to find the head (`dbo:head`) of this organization, which would be the leader.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,1,train,Give me the commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?battle a dbpedia-owl:Battle .
  ?battle rdfs:label ""Battle of Leipzig""@en .
  
  OPTIONAL { ?battle dbo:commander ?commander . }
  OPTIONAL { ?battle dbo:leader ?commander . }

  FILTER (lang(?battleLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,21,0,0.0,0
778,9,train,"Give me the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?award
WHERE {
  ?award a dbo:Award ;
         rdfs:label ""Wolf Prize in Medicine""@en .
  
  ?recipient dbo:recipientOf ?award ;
             foaf:nationality dbr:United_States .

  ?recipient foaf:name ?awardee .
}
```",2,3,3,2,1,3,2,20,0,0,9,0,0.0,0
767,12,train,Give me the alma mater of Carl L. Nippert and reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carl L. Nippert"" .
  ?person dbo:almaMater ?university .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
626,8,train,Give me the awardee of the award of Aleksey Petrovich Yermolov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee
WHERE {
  dbr:Aleksey_Petrovich_Yermolov dbo:award ?award .
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,230,0,0.0,0
378,13,train,Give me the war of the commander in Peninsular War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?war
WHERE {
  ?commander a dbo:MilitaryPerson .
  ?commander dbo:participatedInWar ?war .
  FILTER(CONTAINS(LCASE(STR(?war)), ""peninsular war""))
}
```

This query selects military persons (commanders) and the wars they participated in, filtering to include only those related to the Peninsular War.",2,2,3,2,1,3,3,71,0,0,118,0,0.0,0
547,5,train,Give me the show with Emily Richard.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?showLabel
WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Emily Richard""@en .
  
  ?film dbo:starring ?actor .
  
  ?film rdfs:label ?showLabel .
  FILTER (lang(?showLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
712,9,train,"Give me the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:participatedIn dbr:Vyoshenskaya_Uprising .
  ?militaryForce dbo:country ?country .
}
```

### Explanation

- **PREFIX**: Define namespaces for DBpedia ontology and resources.
- **SELECT DISTINCT ?country**: Retrieve distinct countries associated with the military force.
- **WHERE Clause**:
  - `?militaryForce a dbo:MilitaryUnit`: Identify entities that are military units.
  - `dbo:participatedIn dbr:Vyoshenskaya_Uprising`: Filter those involved in the Vyoshenskaya Uprising.
  - `dbo:country ?country`: Retrieve the country associated with these military forces.

This query should effectively capture the relationship between the military force and its country of origin related to the Vyoshenskaya Uprising.",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
534,1,train,Give me the headquarter of Royal Dublin Society.,SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?organization ?headquarters
WHERE {
  ?organization a dbo:Society .
  ?organization rdfs:label ""Royal Dublin Society""@en .
  OPTIONAL { 
    ?organization dbo:headquarters ?headquarters .
  }
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
488,14,train,Give me the administration of the father of Emperor Go-Mizunoo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?administration
WHERE {
  dbr:Emperor_Go-Mizunoo dbo:parent ?father .
  
  OPTIONAL { ?father dbo:positionHeld ?administration . }
}
```",2,2,3,2,1,3,3,71,0,2,2,0.0,0.0,0
356,7,train,Give me the player in the successor of 2014 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Find the team Sacramento Republic FC in 2014
  dbr:Sacramento_Republic_FC dbo:participatedInSeason ?season .
  
  # Ensure it's for the year 2014
  FILTER (STRSTARTS(STR(?season), ""http://dbpedia.org/resource/""))

  # Find the successor season/team
  ?successorTeam dbo:hasSuccessor ?team .
  ?team dbo:participatedInSeason ?nextSeason .

  # Ensure it's for the year 2015
  FILTER (CONTAINS(STR(?nextSeason), ""2015""))

  # Get players from the successor team
  ?player dbo:playsFor ?successorTeam .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
356,9,train,"Give me the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorSeason
WHERE {
  # Identify the 2015 Sacramento Republic FC season
  dbr:Sacramento_Republic_FC_season_(2015) dbo:predecessor ?predecessor .

  # Ensure the predecessor is a sports team season and soccer club season
  ?predecessor rdf:type dbo:SportsTeamSeason .
  ?predecessor dbo:sport dbr:Soccer .

  # Find the successor of the predecessor
  ?predecessor dbo:successor ?successorSeason .

  # Ensure the successor is also a sports team season and soccer club season
  ?successorSeason rdf:type dbo:SportsTeamSeason .
  ?successorSeason dbo:sport dbr:Soccer .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
712,5,train,Who is the awardee of Hero of the Soviet Union?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:award dbr:Hero_of_the_Soviet_Union .
}
```",1,1,2,1,1,3,2,20,819,68,18,0.923337091319053,0.978494623655914,0.9501160092807426
30,5,train,Give me the native of the birthplace of Silvia Cohen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native
WHERE {
  # Find Silvia Cohen's birthplace
  ?silviaCohen a dbo:Person ;
               foaf:name ""Silvia Cohen"" ;
               dbo:birthPlace ?birthPlace .

  # Find natives of the birthplace
  ?native a dbo:Person ;
          dbo:nationality ?nationality .
  
  FILTER (?nationality = ?birthPlace)
}
```

This query does the following:
- Identifies Silvia Cohen and retrieves her birthplace.
- Finds individuals who are native to that birthplace by matching their nationality with the birthplace.",2,2,3,2,1,2,2,9,0,0,11488,0,0.0,0
251,1,train,Give me the administration of Forza Italia (2013).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
    ?party a dbo:PoliticalParty ;
           rdfs:label ""Forza Italia""@en .
    
    ?government dbo:ministerialTermStartYear ?startYear ;
                dbo:ministerialTermEndYear ?endYear ;
                dbo:hasMember ?party .

    FILTER (?startYear <= 2013 && ?endYear >= 2013)

    ?administration dbo:government ?government .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
179,3,train,Give me the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName
WHERE {
  ?person a dbo:Queen ;
          foaf:name ""Sirikit"" .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
232,4,train,Give me the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person foaf:name ""John Devon Roland Pertwee""@en .
}
```

This query uses the `foaf:name` property to find a person with the specified full name.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
285,2,train,Who is the spouse of Aristotle Onassis?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person .
  ?person dbp:name ""Aristotle Onassis""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
184,5,train,"Give me the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentName WHERE {
  ?archduke a dbo:Archduke ;
            foaf:name ""Ladislaus Philipp of Austria"" .
  
  ?archduke dbo:parent ?parent .

  ?parent a dbo:RoyalPerson ;
          foaf:name ?parentName .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
778,10,train,"Give me the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?software WHERE {
  # Identify the author of Pushd and popd
  dbr:Pushd dbo:author ?author .
  dbr:popd dbo:author ?author .

  # Find other software works by this author
  ?software dbo:creator ?author .
  
  FILTER(?software != dbr:Pushd && ?software != dbr:popd)
}
```",2,3,3,2,1,3,2,20,0,0,5,0,0.0,0
16,0,train,Give me the spouse of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ted McGinley""@en .
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
378,2,train,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame
WHERE {
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:claimToFame ?claimToFame .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
498,2,train,"Give me the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?entity rdfs:label ""Solace of Requiem""@en .
  FILTER (lang(?entity) = 'en') .

  ?entity a dbo:Band ;
          a dbo:Organization .

  BIND(?entity AS ?band)
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
391,9,train,"Give me the actor of The Departed and native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:title ""The Departed""@en .
  ?movie dbo:starring ?actor .

  ?actor dbo:birthPlace dbr:Compton,_California .
}
```

This query does the following:
- Selects actors (`?actor`) who starred in a movie (`?movie`) with the title ""The Departed"".
- Ensures that these actors have their birthplace as Compton, California.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,3,train,Give me the reference to Watchtower.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  ?watchtower a dbo:Watchtower .
  ?watchtower dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
712,3,train,Give me the country of Armed Forces of South Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?country
WHERE {
  ?militaryOrganization a dbo:MilitaryUnit ;
                        rdfs:label ""Armed Forces of South Russia""@en .
  ?militaryOrganization dbo:country ?country .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
666,1,train,Give me the figure known as The Three Lions.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artwork ?title WHERE {
  ?redirect rdfs:label ""The Three Lions""@en .
  ?redirect dbo:wikiPageRedirects ?artwork .
  ?artwork rdfs:label ?title .
}
```",1,1,2,1,1,3,2,20,0,2,5,0.0,0.0,0
64,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  ?timeZone a dbo:TimeZone ;
            dbo:hasTimezoneName ""Central European Time"" .
  
  ?region dbo:timeZone ?timeZone ;
          a dbo:Country .

  BIND(?region AS ?country)
}
```",1,2,2,1,1,2,2,9,0,0,56,0,0.0,0
10,5,train,Give me the birth name of Sharon Kao.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sharon Kao"" .
  OPTIONAL { ?person foaf:givenName ?birthName . }
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
404,0,train,Give me the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Victoria Louise, Princess Royal""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
801,11,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoName
WHERE {
  dbr:The_Shadow dbo:aliasName ?alterEgoName .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
485,10,train,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace
WHERE {
  ?person dbo:award dbr:Eric_Gregory_Award .
  ?person dbo:occupation dbr:Writer .
  ?person dbo:occupation dbr:Poet .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,4,3,2,1,2,3,28,0,0,7,0,0.0,0
54,12,train,Give me the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessorThadoMinsaw ?predecessorAmeittaThiri 
WHERE {
  # Find the predecessor of Thado Minsaw of Prome
  ?thadoMinsaw dbo:successor dbr:Thado_Minsaw_of_Prome .
  ?thadoMinsaw dbo:predecessor ?predecessorThadoMinsaw .

  # Find the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?ameittaThiri dbo:successor dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .
  ?ameittaThiri dbo:predecessor ?predecessorAmeittaThiri 
}
```",2,2,3,1,2,3,3,71,0,2,1,0.0,0.0,0
666,9,train,"Give me the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Identify Leonid Slutsky as a football coach
  dbr:Leonid_Slutsky dbo:occupation dbr:Football_coach .
  
  # Find the soccer club he coaches
  ?teamSeason dbo:coach dbr:Leonid_Slutsky ;
              a dbo:Soccer_League_Season ;
              dbo:club ?soccerClub .
              
  # Ensure the team is a sports team and a soccer club
  ?soccerClub a dbo:Soccer_Club, dbo:Sports_Team .

  # Find the manager of this soccer club
  ?manager dbo:worksFor ?soccerClub ;
           a dbo:Sports_Manager .
}
```",2,5,3,2,1,3,2,20,0,0,5,0,0.0,0
435,5,train,Give me the author of Iceland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?author WHERE {
  ?author a dbo:Writer .
  OPTIONAL { 
    ?author dbo:birthPlace dbr:Iceland .
  }
  UNION
  OPTIONAL {
    ?work dbo:location dbr:Iceland .
    ?work dbo:writer ?author .
  }
}",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
827,4,train,"Who is the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?princess a dbo:Princess ;
           foaf:name ""Pauline of Saxe-Weimar-Eisenach""@en .
  
  ?princess dbo:spouse ?spouse .

  FILTER EXISTS { 
    ?spouse a dbo:Monarch ; # Assuming royalty is represented by Monarch
             dbo:country dbr:Saxe-Weimar-Eisenach .
  }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
54,16,train,Give me the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild
WHERE {
  ?thadoMinsaw dbo:placeOfBirth dbr:Prome .
  ?thadoMinsaw dbo:parent ?parent .

  ?parent dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
659,0,train,Give me the commander in German campaign of 1813.,SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?campaign dbo:wikiPageRedirects dbr:German_Campaign_of_1813 .
  ?campaign dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,31,0,0.0,0
617,7,train,Who is the commander in Battle of Panium?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander
WHERE {
  ?battle dbo:wikiPageRedirects dbr:Battle_of_Panium .
  ?battle dbo:commander ?commander .
}
```

### Explanation:

- **Prefixes**: 
  - `dbo:` is used for DBpedia ontology properties.
  - `dbr:` is used for DBpedia resources.

- **SELECT Clause**:
  - We are selecting the variable `?commander` to find out who commanded in the battle.

- **WHERE Clause**:
  - The first triple pattern finds any resource that redirects to ""Battle of Panium"" using `dbo:wikiPageRedirects`.
  - The second triple pattern retrieves the commanders associated with this battle using `dbo:commander`.

This query should effectively retrieve the commanders involved in the Battle of Panium from DBpedia.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
801,15,train,Give me the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo
WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
}
```

This query assumes that the alter ego is directly linked via a property like `dbo:alterEgo`. If the exact property differs, it may need adjustment based on DBpedia's schema.",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
915,1,train,Give me the father of Lizzie Spaulding.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fatherName
WHERE {
  ?lizzie a dbo:Person ;
          foaf:name ""Lizzie Spaulding""@en .
  
  OPTIONAL {
    ?lizzie dbo:father ?father .
    ?father foaf:name ?fatherName .
  }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
783,9,train,Give me the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember WHERE {
  ?person foaf:name ""Samuel Ofori Amponsah""@en .
  ?person dbo:birthName ?birthName .
  FILTER(?birthName = ""Samuel Ofori Amponsah"")
  
  ?person dbo:memberOfBand ?band .
  ?band dbo:bandMember ?bandMember .
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
701,1,train,Give me the parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName
WHERE {
    ?henuttawy a dbo:Person ;
               rdfs:label ""Henuttawy""@en .
    OPTIONAL { 
        ?henuttawy dbo:spouse ?spouse . 
        ?spouse dbo:child ?henuttawy .
    }
    ?henuttawy dbo:parent ?parent .
    ?parent rdfs:label ?parentName .
    FILTER (CONTAINS(LCASE(?parentName), ""19th dynasty""))
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,10,train,Give me the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  ?thinkhaya dbo:spouse ?parent .
  ?parent dbo:child ?child .

  FILTER (?thinkhaya = dbr:Thinkhaya_of_Pagan) .

  ?ameitta dbo:predecessor ?child .
  FILTER (?ameitta = dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
778,5,train,"Give me the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?softwareName
WHERE {
  ?work rdf:type dbo:Software .
  ?work dbo:creator dbr:Bill_Joy .
  ?work rdfs:label ?softwareName .
  FILTER (lang(?softwareName) = 'en')
}
```",1,2,2,1,1,3,2,20,0,0,5,0,0.0,0
251,11,train,Give me the death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace
WHERE {
  ?book dbo:author ?author .
  ?author dbo:deathPlace ?deathPlace .
  FILTER (str(?book) = ""The Twelve Abbots of Challant"")
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
314,3,train,Give me the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters
WHERE {
  dbr:House_of_Sombrerete dbo:headquarters ?headquarters .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
391,17,train,"Give me the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/occupation> """"@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?professional 
WHERE {
  ?movie a dbo:Film .
  ?movie a dbo:Work .
  ?movie dbo:televisionSeries dbr:TelevisionShow .

  OPTIONAL { ?movie dbo:starring ?actor . }
  OPTIONAL { ?movie dbo:director ?director . }

  ?actor foaf:name ?professional .
  UNION
  ?director foaf:name ?professional .
}
```",2,5,3,2,1,3,3,71,0,0,1674,0,0.0,0
9,2,train,Give me the figure known as QUB.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?property ?value
WHERE {
  VALUES ?entity { dbr:QUB }
  ?entity ?property ?value .
}
```",1,1,2,1,1,3,3,71,1,21,0,0.045454545454545456,1.0,0.08695652173913045
392,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  ?timeZone a dbo:TimeZone ;
            dbo:timezoneName ""Central European Time"" .
  
  ?region dbo:timeZone ?timeZone ;
          a dbo:Country .

  BIND(?region AS ?country)
}
```",1,2,2,1,1,2,3,28,0,0,56,0,0.0,0
645,6,train,Give me the alma mater of Sylvia Pankhurst and entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?location
WHERE {
  dbr:Sylvia_Pankhurst dbo:almaMater ?almaMater .
  ?almaMater a dbo:EducationalInstitution ;
             dbp:country ""United Kingdom""^^xsd:string .
  OPTIONAL { ?almaMater dbp:location ?location }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
645,4,train,Give me the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  dbr:Adela_Pankhurst dbo:parent ?parent .
}
```

This query does the following:
- Uses `PREFIX` to define common namespaces for DBpedia ontology (`dbo`) and resources (`dbr`).
- Selects the variable `?parent`, which will hold the URI of Adela Pankhurst's parent.
- In the `WHERE` clause, it specifies a triple pattern that matches entries where Adela Pankhurst is linked to a parent via the `dbo:parent` property.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
959,15,train,"Give me the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT ?person ?almaMater
WHERE {
  ?person dbo:birthdayYear ?year .
  FILTER (?year = ""1958""^^xsd:gYear) .

  ?person dbo:almaMater ?almaMater .

  ?almaMater a wd:Q4814 ;  # University
             a wd:Q43229 ;  # Organization
             a wd:Q1028181 ;# Educational institution
             dbp:country dbr:Japan .
}
```",2,6,3,2,1,3,3,71,0,0,3,0,0.0,0
303,7,train,Give me the party of Arnulfo Arias and party of Guillermo Endara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?party
WHERE {
  VALUES ?person { 
    dbr:Ari_Norberto_Arnulfo_Arias_Monge 
    dbr:Guillermo_Endara_García
  }
  
  ?person dbo:partyAffiliation ?party .
}
```

### Explanation:

- **PREFIX**: Defines the namespace for DBpedia ontology properties.
- **SELECT**: Specifies that we want to retrieve the person and their associated party.
- **WHERE**:
  - `VALUES`: Restricts the query to specific individuals, Arnulfo Arias (`dbr:Ari_Norberto_Arnulfo_Arias_Monge`) and Guillermo Endara (`dbr:Guillermo_Endara_García`).
  - Triple pattern: Links each person to their political party using `dbo:partyAffiliation`.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
16,10,train,Give me the person born as Georgeanne Marie Rice and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?spouse WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Georgeanne Marie Rice""@en .
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ""Ted McGinley""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,6,train,Give me the administration of Forza Italia (2013) and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?location
WHERE {
  # Find the administration of Forza Italia in 2013
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Forza Italia""@en .
  
  OPTIONAL {
    ?office dbo:positionTitle ?title ;
            dbo:holder ?person ;
            dbo:startDate ?start ;
            dbo:endDate ?end .
    
    FILTER (?start <= ""2013-12-31""^^xsd:date && 
            (?end >= ""2013-01-01""^^xsd:date || NOT EXISTS { ?office dbo:endDate ?end }))
    
    BIND(?person AS ?administration)
  }
  
  # Find the location of Battle of Marengo
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Marengo""@en .
  
  OPTIONAL {
    ?battle dbo:location ?place .
    ?place rdfs:label ?location .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
838,1,train,Give me the band member of Kerber.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName
WHERE {
  ?band dbr:Kerber .
  ?band dbo:bandMember ?member .
  ?member foaf:name ?memberName .
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
747,5,train,"Give me the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?songTitle
WHERE {
  ?work dbo:artist dbr:Amba_Shepherd ;
        rdf:type dbo:Songs .
  ?work dbo:title ?songTitle .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
339,3,train,Who is the child of Christian IX of Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  dbr:Christian_IX_of_Denmark dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,4,2,2,0.6666666666666666,0.6666666666666666,0.6666666666666666
303,8,train,"Give me the party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?party
WHERE {
  ?event dbo:event = dbr:United_States_invasion_of_Panama .
  ?event dbo:agent ?commander .
  
  ?commander a dbo:Politician ;
             dbp:politicalParty ?party .

}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
312,0,train,Give me the entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a dbo:AdministrativeRegion .
  ?entity dbo:locatedIn dbr:Province_of_Bergamo .
}
```

This query selects entities that are of type `dbo:AdministrativeRegion` and located in the ""Province of Bergamo.""",1,1,2,1,1,2,2,9,0,0,228,0,0.0,0
48,0,train,Give me the band of Carl Falk.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band
WHERE {
  ?person a dbo:MusicArtist .
  ?person foaf:name ""Carl Falk"" .
  ?person dbo:band ?band .
}
```

This query does the following:
- Uses `dbo:MusicArtist` to ensure we are querying about a music artist.
- Matches Carl Falk using `foaf:name`.
- Retrieves the band associated with him using `dbo:band`.",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
487,6,train,Give me the country of 2022 Vermont House of Representatives election and administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?administration
WHERE {
  # Find the country for the 2022 Vermont House of Representatives election
  dbr:2022_Vermont_House_of_Representatives_election dbo:country ?country .

  # Find Phil Scott's administration as Governor of Vermont
  dbr:Phil_Scott dbo:governmentRole dbr:Governor_of_Vermont .
  OPTIONAL {
    dbr:Phil_Scott dbo:administration ?administration .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
547,13,train,Give me the resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?burialPlace WHERE {
  # Find the movie ""Enemy at the Door""
  dbr:Enemy_at_the_Door dbo:starring ?actor .
  
  # Get the burial place of the actor
  OPTIONAL { 
    ?actor dbo:placeOfBurial ?burialPlace .
  }
}
```",2,2,3,2,1,3,3,71,0,7,2,0.0,0.0,0
184,2,train,Give me the parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?ilona a dbo:Archduchess ;
         foaf:name ""Ilona of Austria""@en .
  
  ?ilona dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
356,5,train,"Give me the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:nationality dbr:Wolverhampton .
  ?person dbo:occupation dbr:Soccer_player .
  ?person dbo:occupation dbr:Soccer_manager .
}
```",1,3,2,1,1,3,2,20,0,0,17,0,0.0,0
959,4,train,"Give me the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?university WHERE {
  ?person dbo:almaMater ?university .
  FILTER (str(?person) = ""Eiji Ōtsuka"") .

  ?university rdf:type dbpedia-owl:University ;
              rdf:type dbpedia-owl:EducationalOrganization ;
              rdf:type dbpedia-owl:Organisation .

  OPTIONAL { ?university dbo:country ?country . }
  FILTER (langMatches(lang(?country), ""ja""))
}
```",1,5,2,1,1,3,3,71,0,0,1,0,0.0,0
179,1,train,Give me the parent of Ubol Ratana.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?person dbo:name ""Ubol Ratana""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
528,16,train,Give me the commander in the work of --01-09.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?operation ?commander
WHERE {
  ?operation a dbo:MilitaryOperation .
  ?operation dbo:date ?date .
  ?operation dbo:commander ?commander .

  FILTER (YEAR(?date) = 2023 && MONTH(?date) = 1 && DAY(?date) = 9)
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
177,6,train,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization ?headquarters
WHERE {
  ?person rdfs:label ""Joo Don-sik""@en .
  FILTER (lang(?person) = 'en') .

  ?person dbo:employee ?organization .
  
  OPTIONAL { 
    ?organization dbo:headquarters ?headquarters .
  }
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
528,7,train,Give me the birth name of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Narciso Campero""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
16,6,train,Give me the profession of Satomi Ishihara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?occupation
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Satomi Ishihara""@en .
  ?person dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
617,5,train,"Who is the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?antiochus dbr:Antiochus_III_the_Great/dbo:son ?antiochusChild .
  ?antiochusChild dbo:successor ?successor .
  FILTER EXISTS { ?successor a dbo:Monarch } # Ensures the successor is royalty
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
161,1,train,Give me the military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?description
WHERE {
  # Spanish Civil War entity
  dbr:Spanish_Civil_War a dbo:MilitaryConflict .

  # Nationalist faction involved in the war
  OPTIONAL {
    ?nationalistFaction dbo:partOf dbr:Spanish_Civil_War .
    ?nationalistFaction rdfs:label ?militaryForceN ;
                       dbo:description ?descriptionN .
    FILTER (lang(?militaryForceN) = 'en' && lang(?descriptionN) = 'en')
  }

  # Republican faction involved in the war
  OPTIONAL {
    ?republicanFaction dbo:partOf dbr:Spanish_Civil_War .
    ?republicanFaction rdfs:label ?militaryForceR ;
                       dbo:description ?descriptionR .
    FILTER (lang(?militaryForceR) = 'en' && lang(?descriptionR) = 'en')
  }

  # Bind results to a single variable for output
  BIND(COALESCE(?militaryForceN, ?militaryForceR) AS ?militaryForce)
  BIND(COALESCE(?descriptionN, ?descriptionR) AS ?description)
}
ORDER BY ?militaryForce
```",1,1,2,1,1,3,3,71,0,0,514,0,0.0,0
404,10,train,"Give me the spouse of Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?princess a dbo:Princess ;
           foaf:name ""Victoria Louise of Prussia""@en .
  
  ?ernestAugustus a dbo:CrownPrince ;
                  foaf:name ""Ernest Augustus, Crown Prince of Hanover""@en .

  ?child dbp:father ?ernestAugustus ;
         dbo:spouse ?princess .

  ?princess dbo:spouse ?spouse .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
747,12,train,Give me the band of Shèna and band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandName
WHERE {
  {
    # Shèna Easton's bands
    ?person a dbr:Shèna_Easton ;
            dbo:bandMember ?band .
  }
  UNION
  {
    # Amba Shepherd's bands
    ?person a dbr:Amba_Shepherd ;
            dbo:bandMember ?band .
  }
  
  ?band rdfs:label ?bandName .
  FILTER (lang(?bandName) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,2,train,Give me the person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?person ?name
WHERE {
  ?person a foaf:Person .
  ?person schema:birthName ""Edin Dervišhalidović"" .
  OPTIONAL { ?person foaf:name ?name }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
767,4,train,"Give me the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?green a dbo:Settlement .
  ?green rdfs:label ""Green""@en .
  OPTIONAL { ?green dbo:administrativeUnit ?administration . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
485,8,train,"Give me the entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?countryName
WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Western_European_Time .
  ?country rdfs:label ?countryName .
  FILTER (lang(?countryName) = 'en')
}
```",2,3,3,2,1,2,3,28,0,8,46363,0.0,0.0,0
488,10,train,Give me the administration of Emperor Go-Yōzei and birth place of Enomoto Takeaki.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?emperorAdministration ?enomotoBirthPlace
WHERE {
  dbr:Emperor_Go-Yōzei dbo:reign ?emperorAdministration .
  
  dbr:Enomoto_Takeaki dbo:birthPlace ?enomotoBirthPlace .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
16,15,train,Who is the person born as the birth name of Ted McGinley?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName
WHERE {
  ?person dbp:name ""Ted McGinley""@en .
  ?person dbo:birthName ?birthName .
}
```

This query selects the birth name (`?birthName`) of the person identified by the name ""Ted McGinley"". It assumes that Ted McGinley's DBpedia resource is correctly linked with his English name.",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
197,3,train,Who is the awardee of Leroy P. Steele Prize?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipientName
WHERE {
  ?award dbr:Leroy_P._Steele_Prize .
  ?award dbo:recipient ?recipient .
  ?recipient foaf:name ?recipientName .
}
```",1,1,2,1,1,2,2,9,0,0,21,0,0.0,0
488,13,train,"Give me the death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace
WHERE {
    ?yukiHideyasu a dbo:Person ;
                  foaf:name ""Yūki Hideyasu""@en .
    
    ?father dbo:child ?yukiHideyasu ;
            dbo:occupation dbo:Politician .

    ?father dbo:deathPlace ?deathPlace .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
701,9,train,Give me the parent of Meritamen and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person (SAMPLE(?parent) AS ?parent)
WHERE {
  VALUES ?person { 
    dbr:Mertitamen 
    dbr:Henttawy_(19th_dynasty)
  }
  
  ?person dbo:spouse|dbo:child dbo:19th_Dynasty_of_Egypt .
  
  OPTIONAL {
    ?person dbo:parent ?parent .
  }
}
GROUP BY ?person
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
10,8,train,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Identify Matt Colton as a person who is an artist
  dbr:Matt_Colton dbo:birthName ?birthName .
  
  # Find the associated musical artists of this person
  ?person dbo:associatedMusicalArtist ?artist .

  # Ensure that the person is indeed Matt Colton by matching birth name
  FILTER(?birthName = ""Matt Colton"")

  # Ensure the person is an artist (optional, but can be added for clarity)
  ?person a dbo:Musician .
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
528,8,train,Give me the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:Person ;
          foaf:name ""Narciso Campero Leyes"" .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,15,train,Give me the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherLabel
WHERE {
  ?thinkhaya rdfs:label ""Thinkhaya""@en .
  ?thinkhaya dbo:spouse ?child . # Assuming spouse relationship to find child; adjust if necessary.
  ?child rdf:type dbo:Person .
  
  OPTIONAL { ?child dbo:parent ?father } .
  
  ?father rdfs:label ?fatherLabel .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
360,0,train,Give me the writer of The Roaring Silence.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author
WHERE {
  ?book dbo:title ""The Roaring Silence""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,2,3,28,0,0,8,0,0.0,0
404,13,train,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Identify Ernest Augustus, Duke of Brunswick
  dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:child ?child .

  # Ensure the child is royalty
  ?child a dbo:RoyalFamilyMember .

  # Find the parent of this royal child
  ?child dbo:parent ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
547,6,train,Give me the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie rdfs:label ""Enemy at the Door""@en .
  ?movie dbo:starring ?actor .
  FILTER (lang(?movie) = 'en')
}
```

This query selects actors (`?actor`) who starred in the movie identified by its English label ""Enemy at the Door."" The `FILTER` ensures that we are considering only the English version of the resource.",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
318,4,train,Give me the person born in 1970 and professional in Composer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthYear ""1970""^^xsd:gYear .
  ?person dbo:occupation dbr:Composer .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```

This query does the following:

- **SELECT**: Retrieves the person and their name.
- **WHERE**:
  - Ensures the subject is a `Person`.
  - Filters for those born in the year 1970.
  - Checks if they have an occupation of Composer.
  - Optionally retrieves the English label (name) of the person.",2,2,3,1,2,2,2,9,0,0,7,0,0.0,0
626,6,train,Give me the commander in Battle of Leipzig and awardee of Order of St. Andrew.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?commanderLabel
WHERE {
  ?battle dbr:Battle_of_Leipzig .
  ?battle dbo:commander ?commander .

  ?awardee dbo:recipientOfAward dbr:Order_of_St._Andrew .
  FILTER (?commander = ?awardee) .

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,13,train,Give me the alma mater of the administration of George K. Nash.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater
WHERE {
  ?person a dbo:Person ;
          foaf:name ""George K. Nash""@en .
  ?person dbo:almaMater ?almaMater .
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
9,13,train,Give me the alma mater of the awardee of Royal Medal.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater
WHERE {
  ?awardee dbo:award dbr:Royal_Medal .
  ?awardee dbo:almaMater ?almaMater .
}
```

This query assumes:
- `dbo:award` is the property linking an individual to their awards.
- `dbr:Royal_Medal` is the resource identifier for the Royal Medal in DBpedia.
- `dbo:almaMater` is the property that links a person to their alma mater.",2,2,3,2,1,3,3,71,0,0,31,0,0.0,0
182,1,train,Give me the war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  ?person rdfs:label ""Jagath Dias""@en .
  OPTIONAL { ?person dbo:associatedWith ?war . }
  OPTIONAL { ?war dbo:description ?description . FILTER (lang(?description) = 'en') }
}
```",1,1,2,1,1,2,3,28,0,25373,5,0.0,0.0,0
801,13,train,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  ?song a dbo:Song ;
        dbo:musicalArtist dbr:50_Cent ;
        dbo:work dbr:50_Cent .
  
  OPTIONAL { ?song dbo:producer ?producer . }
}
```",2,5,3,2,1,3,3,71,0,0,38,0,0.0,0
534,4,train,"Give me the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?location WHERE {
  ?event dbo:eventLocation ?location .
  ?location a dbo:SportsVenue ;
            a dbo:ArchitecturalStructure .
  
  FILTER (str(?event) = ""2012 Pro12 Grand Final"")
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
645,3,train,"Give me the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""James Wilkes Maurice""@en .
  
  ?person dbo:residenceLocation ?residence .

  FILTER (isLiteral(?residence) = false)
  ?residence a dbo:Country .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
747,3,train,"Who is the person decedent, that is an athlete and a soccer player, at Zolotonosha?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Athlete .
  ?person dbo:sport dbr:Soccer .
  ?person dbo:deathPlace dbr:Zolotonosha .
}
```

This query assumes:
- `dbo:Athlete` is the class for athletes.
- `dbo:sport` links to the sport they play, with `dbr:Soccer` representing soccer.
- `dbo:deathPlace` specifies where the person died.",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
404,9,train,Give me the spouse of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .
  dbr:Prince_Ernest_Augustus_of_Hanover_(1914) dbo:parent ?spouse .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,12,train,Give me the spouse of Laodice IV and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouseLabel
WHERE {
  ?laodiceIV rdfs:label ""Laodice IV""@en .
  ?laodiceIV dbo:spouse ?spouse .
  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  ?spouse dbo:child ?nysa .
  
  SERVICE <http://dbpedia.org/sparql> {
    ?spouse rdfs:label ?spouseLabel .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
712,10,train,Who is the awardee of the show of Soviet Union?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?show dbo:country dbr:Soviet_Union .
  ?awardEvent dbo:recipient ?awardee ;
              dbo:event ?show .
}
```",2,2,3,2,1,3,2,20,0,0,1209,0,0.0,0
528,12,train,Give me the war of Orozimbo Barbosa and force of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?barbosaRole ?camperoRole
WHERE {
  ?war a dbo:MilitaryConflict .
  
  OPTIONAL { 
    ?barbosa dbo:role ?barbosaRole ;
             foaf:name ""Orozimbo Barbosa""@en .
    ?barbosa dbo:participatedIn ?war .
  }
  
  OPTIONAL { 
    ?campero dbo:role ?camperoRole ;
             foaf:name ""Narciso Campero""@en .
    ?campero dbo:participatedIn ?war .
  }
}
```

### Explanation:
- **PREFIX**: Define common prefixes for DBpedia ontology and resources.
- **SELECT Clause**: Choose the war, roles of Orozimbo Barbosa, and Narciso Campero.
- **WHERE Clause**:
  - Identify a military conflict (`?war`).
  - Use `OPTIONAL` clauses to find roles and participation of both individuals in the war.

This query aims to retrieve information about the war involving these figures and their respective roles. Adjustments might be needed based on specific DBpedia data availability.",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
30,4,train,"Give me the native of Paris and professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?name WHERE {
  ?person dbo:nationality dbr:France .
  ?person dbo:birthPlace dbr:Paris .
  
  # Check for each profession
  OPTIONAL { ?person dbo:occupation dbr:Financier . }
  OPTIONAL { ?person dbo:occupation dbr:Businessman . }
  OPTIONAL { ?person dbo:occupation dbr:Vineyard_owner . }
  OPTIONAL { ?person dbo:occupation dbr:Art_collector . }
  OPTIONAL { ?person dbo:occupation dbr:Racehorse_owner . }

  # Ensure at least one profession is matched
  FILTER (
    EXISTS { ?person dbo:occupation dbr:Financier . } ||
    EXISTS { ?person dbo:occupation dbr:Businessman . } ||
    EXISTS { ?person dbo:occupation dbr:Vineyard_owner . } ||
    EXISTS { ?person dbo:occupation dbr:Art_collector . } ||
    EXISTS { ?person dbo:occupation dbr:Racehorse_owner . }
  )

  # Get the name of the person
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
303,0,train,Give me the party of Guillermo Endara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party
WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Guillermo Endara""@en .
  OPTIONAL { 
    ?person dbo:partyAffiliation ?party .
  }
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
754,5,train,Give me the child of Ram Khamhaeng.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childName
WHERE {
  ?person rdfs:label ""Ram Khamhaeng""@en .
  ?person dbo:child ?child .
  ?child rdfs:label ?childName .
  FILTER(LANG(?childName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,3,3,0.0,0.0,0
820,1,train,Give me the child of Jack Schwartzman.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Jack Schwartzman""@en .
  ?person dbo:child ?child .
}
```

This query does the following:
- Uses `dbo:Person` to ensure we are dealing with person entities.
- Matches Jack Schwartzman using his name (`foaf:name`).
- Retrieves children of Jack Schwartzman using the `dbo:child` predicate.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
10,1,train,Give me the band member of Luke Vibert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMemberName
WHERE {
  ?artist dbr:Luke_Vibert .
  ?artist dbo:bandMember ?member .
  ?member rdfs:label ?bandMemberName .
  FILTER (LANG(?bandMemberName) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
959,11,train,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university WHERE {
  # Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .

  # University is Japanese
  ?university dbo:nationality dbr:Japan .

  # University is an organization, a university, and an educational institution
  ?university rdf:type dbo:Organisation .
  ?university rdf:type dbo:University .
  ?university rdf:type dbo:EducationalInstitution .
}
```",2,6,3,2,1,3,3,71,0,0,267,0,0.0,0
365,4,train,Give me the reference to The Blasters and band of Phil Alvin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference
WHERE {
  ?band a dbo:Band ;
        foaf:name ""The Blasters""@en .
  
  ?person a dbo:Person ;
          foaf:name ""Phil Alvin""@en .

  ?band dbo:member ?person .
  
  OPTIONAL { 
    ?band dbp:wikiPageWikiLink ?reference .
  }
}
```

### Explanation:
- **PREFIX**: Define common prefixes for DBpedia ontology and resources.
- **SELECT**: Choose the `?reference` to get links related to ""The Blasters"".
- **WHERE**:
  - Identify ""The Blasters"" as a band (`dbo:Band`) with the name ""The Blasters"".
  - Identify Phil Alvin as a person (`dbo:Person`) with the name ""Phil Alvin"".
  - Use `dbo:member` to establish that Phil Alvin is a member of The Blasters.
  - Optionally, retrieve wiki page links related to the band.",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
963,0,train,Give me the entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity
WHERE {
  ?entity dbo:country dbr:Serbia .
}
```

This query selects entities (`?entity`) that have a `dbo:country` relationship with Serbia (`dbr:Serbia`). The prefix `dbo:` is used for DBpedia ontology, and `dbr:` is used for DBpedia resources.",1,1,2,1,1,3,2,20,0,0,5428,0,0.0,0
994,4,train,Give me the associated musical artist of Watchtower (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  dbr:Watchtower dbo:bandMember ?member .
  OPTIONAL { ?member dbo:associatedBand ?artist . }
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
392,11,train,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province WHERE {
  ?person rdfs:label ""Sebastiano Bianchetti""@en .
  ?person dbo:residence ?settlement .
  ?settlement a dbo:Settlement ;
              dbo:country dbr:Italy .
  ?settlement dbo:administrativeTerritory ?province .
}
```

- **PREFIX**: We use `dbo` for DBpedia ontology and `dbr` for resources.
- **SELECT**: Retrieves the province of the residence.
- **WHERE**:
  - Identifies Sebastiano Bianchetti using his label.
  - Connects him to a settlement via `dbo:residence`.
  - Ensures the settlement is in Italy (`dbo:country dbr:Italy`).
  - Links the settlement to its administrative territory (province).

This query captures the essence of the question by focusing on Sebastiano Bianchetti's residence, ensuring it is a settlement within Italy, and retrieving the province.",2,4,3,2,1,2,3,28,0,0,1,0,0.0,0
427,2,train,Give me the party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?party
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Romano Prodi""@en .
  ?person dbo:politicalParty ?party .
}
```

This query assumes that Romano Prodi is represented as an instance of `dbo:Person` and uses the property `foaf:name` to match his name. The political party is retrieved using the predicate `dbo:politicalParty`.",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
92,2,train,Give me the band of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band
WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Joseph Michael"" .
  ?person dbo:band ?band .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
303,4,train,"Give me the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
  ?place a dbo:Settlement .
  ?place rdfs:label ""El Valle de Antón""@en .
  ?place dbo:country ?country .
  FILTER (isLiteral(?country) = false)
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
64,4,train,Give me the alma mater of Jovan Hristić and entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person dbo:almaMater ?almaMater .
  ?almaMater dbo:country dbr:Srbija .
  
  FILTER (?person = dbr:Jovan_Hristić)
}
```

This query does the following:
- Uses `dbo:almaMater` to find the educational institution attended by Jovan Hristić.
- Ensures that this institution is located in Serbia (`dbr:Srbija`).
- Filters results specifically for Jovan Hristić.",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
534,8,train,Give me the headquarter of the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v0 . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarter WHERE {
  ?arena a dbo:Arena ;
         rdfs:label ""RDS Arena""@en .
  
  ?arena dbo:location ?owner .

  ?owner dbo:headquarters ?headquarter .
}
```

4. **Explanation**:
   - `?arena` represents the RDS Arena.
   - We find its owner using `dbo:location`.
   - Then, we retrieve the headquarters of that owner with `dbo:headquarters`.

5. **Assumptions**:
   - The property `dbo:location` is used to denote ownership or association with an entity like a company.
   - The property `dbo:headquarters` denotes the headquarter location.",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
48,9,train,"Give me the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person a dbo:RecordProducer ;
          foaf:name ""Shellback (record producer)"" .
  
  ?work dbo:recordProducer ?person ;
        rdf:type dbo:MusicalWork .

}
```",2,3,3,2,1,3,2,20,0,0,1065,0,0.0,0
820,9,train,Give me the award of the author of Understanding Comics.,SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award
WHERE {
  ?book dbo:title ""Understanding Comics"" .
  ?book dbo:author ?author .
  ?author dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
281,3,train,Give me the award of Jonathon Band.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jonathon Band""@en .
  ?person dbo:honoraryAward ?award .
}
```

This query assumes:
- Jonathon Band is represented in DBpedia with the name ""Jonathon Band"".
- The property `dbo:honoraryAward` is used to link a person to their awards. If there are other relevant properties (like `dbo:receivedAward`), they should be included as well.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
77,6,train,Give me the war of Alexander Chechenskiy and force of Alexander I of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?force
WHERE {
  # Find wars involving Alexander Chechenskiy
  ?person rdfs:label ""Alexander Chechenskiy""@en .
  ?war dbo:participatedIn ?person .

  # Find military forces associated with Alexander I of Russia
  ?tsar rdfs:label ""Alexander I of Russia""@en .
  ?force dbo:commandedBy ?tsar .
}
```",2,2,3,1,2,3,2,20,0,0,6,0,0.0,0
285,7,train,Give me the parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  ?tina a dbo:Person ;
        foaf:name ""Tina Onassis Niarchos""@en .
  
  ?child dbo:childOf ?tina ;
         a dbo:Person .

  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
64,1,train,Give me the entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Serbia .
}
```

This query selects entities (`?entity`) that are associated with Serbia through the `dbo:country` property.",1,1,2,1,1,2,2,9,0,0,5428,0,0.0,0
404,8,train,"Who is the father of Ernest Augustus, Duke of Brunswick?","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherName WHERE {
  ?person dbp:name ""Ernest Augustus, Duke of Brunswick""@en .
  ?person dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER(LANG(?fatherName) = 'en')
}
```

### Explanation

- **PREFIX**: Define common prefixes for DBpedia ontology and properties.
- **SELECT**: Choose the label of the father (`?fatherName`).
- **WHERE**:
  - Identify the person with the name ""Ernest Augustus, Duke of Brunswick"".
  - Use `dbo:father` to find the father of this person.
  - Retrieve the label (name) of the father using `rdfs:label`.
  - Apply a language filter to ensure the result is in English.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
767,16,train,Give me the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/property/governor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?person rdfs:label ""George Kilbon Nash""@en .
  ?person dbo:positionHeld ?position .
  ?position dbo:organization ?administration .
}
```

This query does the following:
- Uses `rdfs:label` to identify George Kilbon Nash.
- Looks for positions held by him (`dbo:positionHeld`) and the organizations associated with those positions (`dbo:organization`).",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
994,2,train,Give me the band member of Don Dokken.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?group dbo:member ?person .
  ?person foaf:name ""Don Dokken""@en .
  OPTIONAL { ?group dbo:member ?bandMember . }
  FILTER(?bandMember != ?person)
}
```

This query does the following:
- It selects entities (`?bandMember`) that are members of a group (`?group`).
- It identifies groups where Don Dokken is a member.
- It uses an `OPTIONAL` clause to find other members of these groups, excluding Don Dokken himself.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,8,train,Give me the war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war
WHERE {
  dbr:2019_Sri_Lanka_Easter_bombings dbo:perpetrator ?author .
  ?author dbo:participatedInWar ?war .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
294,5,train,"Give me the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person foaf:name ""Marion James""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement .
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
64,2,train,"Give me the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?deathDate
WHERE {
  ?person a dbo:Writer .
  ?person dbo:deathPlace dbr:Sremska_Kamenica .
  OPTIONAL { ?person dbp:dateOfDeath ?deathDate . }
}
```",1,2,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
778,4,train,Give me the author of Pushd and popd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?command ?author
WHERE {
  VALUES ?command { 
    dbr:Pushd (Unix command) 
    dbr:Popd (Unix command)
  }
  
  OPTIONAL {
    ?command dbo:creator ?author .
  }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
16,8,train,Give me the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Gigi Rice"" .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
996,0,train,Give me the force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryRank
WHERE {
  dbr:Dagobert_Sigmund_von_Wurmser dbo:militaryRank ?militaryRank .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
659,8,train,"Give me the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  # Rutger Jan Schimmelpenninck as a subject
  dbr:Rutger_Jan_Schimmelpenninck dbo:wikiPageDisambiguates ?disambiguation .
  
  # Event related to him
  ?disambiguation rdf:type dbo:Event .

  # Societal event filter
  ?event dbo:socialEvent ?socialEvent .
  FILTER EXISTS { ?socialEvent rdf:type dbo:SocietalEvent }

  # Military conflict filter
  ?event dbo:militaryConflict ?militaryConflict .
  FILTER EXISTS { ?militaryConflict rdf:type dbo:MilitaryConflict }
  
  # General event filter (assuming all events are general)
}
```

### Explanation:
- **PREFIX**: Define common prefixes for DBpedia ontology and resources.
- **SELECT Clause**: We select the `?event` that matches our criteria.
- **WHERE Clause**:
  - Identify disambiguations related to Rutger Jan Schimmelpenninck.
  - Ensure these are of type `dbo:Event`.
  - Use filters to ensure the event is both a societal and military conflict.

This query assumes certain properties (`socialEvent`, `militaryConflict`) exist, which might need adjustment based on actual DBpedia schema details. The query aims to find events that fit all specified categories related to Rutger Jan Schimmelpenninck.",1,4,2,1,1,3,3,71,0,0,2,0,0.0,0
488,1,train,Give me the death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace
WHERE {
  dbr:Tokugawa_Ieyasu dbo:placeOfDeath ?deathPlace .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
197,6,train,Give me the birthplace of the awardee of Leroy P. Steele Prize.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardeeName ?birthPlaceLabel
WHERE {
  ?prize rdfs:label ""Leroy P. Steele Prize""@en .
  ?prize dbo:recipient ?awardee .
  ?awardee rdfs:label ?awardeeName .
  OPTIONAL { ?awardee dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?birthPlace rdfs:label ?birthPlaceLabel . }
}
```

- **Explanation**:
  - `PREFIX` declarations are used to define common namespaces.
  - The `SELECT` clause specifies that we want the name of the awardee and their birthplace label.
  - The `WHERE` clause identifies the prize by its label, links it to its recipients, and optionally retrieves the birthplace information.",2,2,3,2,1,2,2,9,0,0,21,0,0.0,0
378,14,train,Give me the claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?claimToFame
WHERE {
  # Find the event of the Great Siege of Gibraltar
  ?event a dbo:MilitaryConflict ;
         rdfs:label ""Great Siege of Gibraltar""@en .

  # Identify the commander involved in this event
  ?event dbo:commander ?commander .

  # Retrieve claims to fame or notable achievements of the commander
  OPTIONAL {
    ?commander dbo:notableWorkOrClaimToFame ?claimToFame .
  }
}
```",2,2,3,2,1,3,3,71,0,7,2,0.0,0.0,0
959,17,train,"Give me the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> ?v0 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team
WHERE {
  ?season dbp:sportTeam dbr:Kashima_Antlers ;
          dbp:year ""1998""^^xsd:gYear .
  
  ?season dbo:manager ?manager .

  ?manager a dbo:SportsManager ;
           dbo:managedTeam ?team .
}
```

This query does the following:
- Identifies the season of Kashima Antlers in 1998.
- Finds the manager associated with that season.
- Ensures the manager is classified as a sports manager and retrieves the team they manage.",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
48,3,train,Give me the writer of Emotion (Carly Rae Jepsen album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?song dbo:title ""Emotion"" .
  ?song dbo:album dbr:Kiss_(Carly_Rae_Jepsen_album) .
  ?song dbo:lyricist ?writer .
}
```

### Explanation:

- **PREFIX**: Define common prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT Clause**: We are interested in the writer(s) of the song, so we select `?writer`.
- **WHERE Clause**:
  - Identify the song with the title ""Emotion"".
  - Ensure it is part of Carly Rae Jepsen's album ""Kiss"".
  - Retrieve the lyricist(s) associated with this song using the property `dbo:lyricist`.

This query assumes that the song ""Emotion"" and its association with the album are correctly represented in DBpedia. Adjustments may be necessary if different properties or resource identifiers are used.",1,1,2,1,1,3,2,20,0,0,48,0,0.0,0
547,3,train,Give me the child of William Haliburton.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  ?person dbp:name ""William Haliburton""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
959,3,train,Who is the person born in 1958?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthYear ""1958""^^xsd:gYear .
}
```",1,1,2,1,1,3,3,71,2515,0,0,1.0,1.0,1.0
778,3,train,Give me the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Ralph_L._Brinster dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,9,0,0,1.0,1.0,1.0
547,4,train,Give me the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?person foaf:name ""James Burton""@en .
  ?person dbo:description ?desc .
  FILTER(CONTAINS(LCASE(?desc), ""property developer"")) .
  ?person dbo:child ?child .
}
```

This query does the following:
- Selects entities (`?child`) that are children of a person.
- Identifies the person named ""James Burton"" and checks if their description contains ""property developer.""
- Retrieves the child entity using the `dbo:child` property.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
10,11,train,Give me the professional in the birth name of Sharon Kao.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?profession
WHERE {
  ?person foaf:givenName ""Sharon"" .
  ?person foaf:surname ""Kao"" .
  OPTIONAL { ?person dbo:profession ?profession . }
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
767,7,train,"Give me the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?characterName WHERE {
  ?character a dbo:FictionalCharacter .
  ?character dbo:name ?characterName .
  OPTIONAL { 
    ?work dbo:portrayedBy dbr:Matthew_Burland .
    ?work dbo:hasPart ?character .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
285,10,train,Who is the professional in the award of Stan Lee?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find awards related to Stan Lee
  ?award dbo:recipient dbr:Stan_Lee .
  
  # Find professionals who have received the same award
  ?award dbo:recipient ?professional .
  
  FILTER(?professional != dbr:Stan_Lee) # Exclude Stan Lee himself from results
}
```",2,2,3,2,1,3,2,20,0,0,39640,0,0.0,0
701,8,train,Give me the father of Merneptah.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherName
WHERE {
  ?merneptah dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER (lang(?fatherName) = 'en')
  
  VALUES ?merneptah { <http://dbpedia.org/resource/Merneptah> }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
626,7,train,"Give me the commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict ?commander WHERE {
  ?conflict a dbo:MilitaryConflict .
  ?conflict dbo:commander ?commander .
  ?commander dbo:spouseOrPartner|dbo:child|dbo:parent|dbo:sibling* dbr:Aleksandr_I_of_Russia .
}
```

This query:
- Selects military conflicts (`?conflict`) and their commanders (`?commander`).
- Ensures that the commander is related to Alexander I of Russia through various familial or associative relationships.",2,3,3,2,1,3,2,20,0,0,230,0,0.0,0
915,5,train,"Give me the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  ?parent a dbo:FictionalCharacter ;
          dbo:spouseOrPartner ?child .
  
  FILTER (?parent = dbr:Phillip_Spaulding)
  
  ?child a dbo:FictionalCharacter ;
         dbo:genre dbr:Soap_Opera .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
838,6,train,Give me the band member of Kerber and band of Raša Đelmaš.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName (GROUP_CONCAT(?bandLabel; separator="", "") AS ?bands)
WHERE {
  VALUES (?band) { 
    dbr:Kerber 
    dbr:Raša_Đelmaš
  }
  
  ?band dbo:bandMember ?member .
  ?member foaf:name ?memberName .
  OPTIONAL { ?band rdfs:label ?bandLabel . FILTER (lang(?bandLabel) = 'en') }

  # Ensure we only get bands related to Kerber and Raša Đelmaš
  VALUES (?band) {
    dbr:Kerber 
    dbr:Raša_Đelmaš
  }
}
GROUP BY ?memberName
ORDER BY ?memberName",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
356,8,train,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?team
WHERE {
  ?person dbo:nationality dbr:United_Kingdom .
  ?person dbo:birthPlace dbr:Wolverhampton .
  ?person dbo:sport dbr:Soccer .
  ?playerRole dbo:agent ?person ;
              a dbo:SoccerPlayer .
  ?managerRole dbo:agent ?person ;
               a dbo:SoccerManager .
  ?team dbo:member ?playerRole ;
        dbo:member ?managerRole .
}
```",2,4,3,2,1,3,2,20,0,0,46,0,0.0,0
838,7,train,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . },"SELECT ?bandMember ?band
WHERE {
  # Identify YU Grupa as a band
  dbr:YU_Grupa a dbo:Band .

  # Find members of YU Grupa who are also artists and musical artists
  ?member dbo:memberOf dbr:YU_Grupa .
  ?member a dbo:Artist ;
          a dbo:MusicalArtist .

  # Bind the band member to the variable
  BIND(?member AS ?bandMember)

  # Ensure the band is YU Grupa
  BIND(dbr:YU_Grupa AS ?band)
}
```

This query does the following:
- Identifies YU Grupa as a band.
- Finds members of YU Grupa who are both an artist and a musical artist.
- Returns these band members along with their association to YU Grupa.",2,4,3,2,1,3,2,20,0,0,21,0,0.0,0
827,9,train,"Who is the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?charlesAlexander a dbo:GrandDuke ;
                   foaf:name ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
  
  ?parent dbo:child ?charlesAlexander .
  
  ?parent dbo:child ?child .
  
  ?child rdf:type dbo:RoyalFamilyMember .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
778,1,train,Give me the author of Chroot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author
WHERE {
  dbr:Chroot dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
285,5,train,Who is the professional in ?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name ?occupation
WHERE {
  ?person a dbo:Person .
  ?person foaf:name ?name .
  ?person dbo:occupation ?occupation .
}
ORDER BY ?name",1,1,2,1,1,3,2,20,25303,774196,14337,0.031648569916910466,0.6383198789101917,0.06030705282438309
617,10,train,Give me the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  ?antiochus dbo:spouse ?parent .
  ?antiochus dbr:Antiochus_III_the_Great .

  ?child dbo:parent ?antiochus .
  
  ?nysa dbo:spouse ?pharnaces1 .
  ?nysa dbr:Nysa_(wife_of_Pharaces_I_of_Pontus) .
  
  ?child dbo:parentOf ?nysa .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
16,11,train,Give me the spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person dbo:birthName ""Ted Martin McGinley"" .
  OPTIONAL { ?person foaf:givenName ?firstName . }
  OPTIONAL { ?person foaf:familyName ?lastName . }
  ?person dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
747,9,train,Give me the person born on 1985-04-29 and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?band 
WHERE {
  # Find person born on 1985-04-29
  ?person dbo:birthday ""1985-04-29""^^xsd:date .
  
  # Find band associated with Amba Shepherd
  dbr:Amba_Shepherd dbo:memberOf ?band .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
465,2,train,Give me the native of Prague.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Prague .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,2,2,9,1654,1423,0,0.5375365615859603,1.0,0.6992179243288945
365,0,train,Give me the band of Phil Alvin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band
WHERE {
  ?person foaf:name ""Phil Alvin"" .
  ?person dbo:band ?band .
}
```

This query does the following:
- Uses `foaf:name` to identify Phil Alvin.
- Utilizes `dbo:band` to find the band associated with him.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
328,7,train,"Who is the leader, that is an office holder and a politician, of Gustav Jonson?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Find Gustav Jonson's leadership role
  ?role dbo:agent dbr:Gustav_Jonson .
  
  # Identify the leader associated with this role
  ?role dbo:leader ?leader .

  # Ensure the leader is an office holder and a politician
  ?leader rdf:type dbo:OfficeHolder ;
          rdf:type dbo:Politician .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
404,12,train,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  ?parent rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .
  ?parent dbo:child ?child .

  ?child dbo:spouse|dbo:partner ?grandChildParent .
  ?grandChildParent dbo:child dbr:Prince_Ernest_Augustus_of_Hanover_(1914) .
}
```

This query assumes:
- `dbo:child` is used to denote parent-child relationships.
- The relationship between the child and Prince Ernest Augustus of Hanover can be through a spouse or partner, hence the use of `dbo:spouse|dbo:partner`.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
177,4,train,"Give me the headquarter of Ministry of Culture, Sports and Tourism and entity in South Korea.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?ministryLabel ?headquartersLabel
WHERE {
  ?ministry a dbo:GovernmentMinistry ;
            rdfs:label ?ministryLabel ;
            dbo:country dbr:South_Korea .
  
  FILTER(CONTAINS(LCASE(?ministryLabel), ""culture"") && 
         CONTAINS(LCASE(?ministryLabel), ""sports"") &&
         CONTAINS(LCASE(?ministryLabel), ""tourism""))

  OPTIONAL {
    ?ministry dbo:headquarters ?headquarters .
    ?headquarters rdfs:label ?headquartersLabel .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
161,5,train,Who is the predecessor of Indalecio Prieto?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?roleLabel WHERE {
  # Find Indalecio Prieto's role
  dbr:Indalecio_Prieto dbo:positionHeld ?role .
  
  # Get the label for the role
  ?role rdfs:label ?roleLabel .

  # Find the predecessor of that role
  ?role dbo:predecessor ?predecessor .
  
  # Optionally get the label for the predecessor
  OPTIONAL { ?predecessor rdfs:label ?predecessorLabel . FILTER (lang(?predecessorLabel) = 'en') }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
915,7,train,"Give me the resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residentName
WHERE {
  # Find Stephen Verona's birthplace that is a settlement
  dbr:Stephen_Verona dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is classified as a settlement
  ?birthPlace rdf:type dbo:Settlement .

  # Retrieve residents of the birthplace
  OPTIONAL {
    ?resident dbo:residence ?birthPlace .
    ?resident rdfs:label ?residentName .
    FILTER (lang(?residentName) = 'en')
  }
}
```",2,3,3,2,1,3,2,20,0,15,15,0.0,0.0,0
339,9,train,Who is the child of the predecessor of Frederick VIII of Denmark?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?frederickVIII dbo:predecessor ?predecessor .
  FILTER (str(?frederickVIII) = ""Frederick_VIII_of_Denmark"")
  
  ?predecessor dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
345,5,train,"Who is the person born, that is a soccer player and a soccer manager, on 1978-09-15?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SoccerManager .
  ?person dbo:birthDate ?date .
  ?person rdfs:label ?name .
  
  FILTER (CONTAINS(LCASE(?name), ""s"")) # Assuming names are in English
  FILTER (?date = ""1978-09-15""^^xsd:date)
}
```",1,3,2,1,1,3,2,20,3,3,0,0.5,1.0,0.6666666666666666
701,13,train,Give me the parent of the child of Ramesses II.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
   
SELECT ?parent
WHERE {
  ?child dbo:father dbr:Ramesses_II .
  ?child dbo:mother ?mother .
  OPTIONAL { ?child dbo:father ?otherFather . }
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
485,1,train,Give me the birth place of Thomas Warner (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Poet ;
          foaf:name ""Thomas Warner"" ;
          dbo:birthPlace ?birthPlace .
}
```

This query does the following:
- Uses `dbo:Poet` to ensure that Thomas Warner is identified as a poet.
- Retrieves the birthplace using the predicate `dbo:birthPlace`.
- Filters results by matching the name ""Thomas Warner"".",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
184,17,train,Give me the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childName WHERE {
  ?margaret a dbo:Archduchess ;
            dbo:birthYear ""1925""^^xsd:gYear ;
            dbo:parent ?parent .
  
  ?parent dbo:child ?child .

  ?child rdfs:label ?childName .
  FILTER(LANG(?childName) = 'en')
}
```

This query:
- Identifies Margaret using her role and birth year.
- Finds her parent(s).
- Retrieves the children of those parents, ensuring they are distinct to avoid duplicates.",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
115,2,train,Who is the alumnus of National University of San Marcos?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alumnusName
WHERE {
  ?person dbo:almaMater dbpedia-es:Universidad_Nacional_Mayor_de_San_Marcos .
  ?person foaf:name ?alumnusName .
}
```",1,1,2,1,1,2,2,9,0,0,74,0,0.0,0
161,17,train,"Give me the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?forceEvent
WHERE {
  ?director a dbo:FilmCharacter ;
            rdfs:label ""El Director""@en .
  
  ?director dbo:associatedWith ?forceEvent .
  ?forceEvent a dbo:Event .
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
303,2,train,Give me the party of Arnulfo Arias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party
WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Arnulfo Arias""@en .
  ?person dbo:party ?party .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
314,10,train,Give me the awardee of the award of Sergei Makovetsky.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee
WHERE {
  # Identify Sergei Makovetsky and his associated award
  dbr:Sergei_Makovetsky a dbo:Person .
  dbr:Sergei_Makovetsky dbo:award dbr:Award .

  # Find the awardees of that award
  ?award dbo:awardee ?awardee .
}
```

### Explanation:

- **PREFIX**: We use `dbo` for DBpedia ontology and `dbr` for resources.
- **SELECT Clause**: We select `?awardee`, which represents the individuals who received the award.
- **WHERE Clause**:
  - First, we identify Sergei Makovetsky as a person (`dbo:Person`) and link him to an award (`dbo:award`).
  - Then, we find all awardees (`dbo:awardee`) of that specific award.

This query assumes the existence of a resource `dbr:Award` linked to Sergei Makovetsky. If the exact award is not known, additional logic might be needed to dynamically identify it based on available data.",2,2,3,2,1,2,3,28,0,0,951,0,0.0,0
9,6,train,Who is the awardee of Royal Medal?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?recipient dbo:award dbr:Royal_Medal .
}
```

This query assumes that the Royal Medal is represented by `dbr:Royal_Medal` in DBpedia. If this resource identifier differs, it should be adjusted accordingly.",1,1,2,1,1,3,3,71,0,0,45,0,0.0,0
161,13,train,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Link Francisco Largo Caballero to a military force involved in societal events and conflicts
  ?person rdfs:label ""Francisco Largo Caballero""@en .
  
  # Find the military force associated with him
  ?person dbo:militaryService ?militaryForce .

  # Ensure this military force is linked to both a societal event and a military conflict
  ?societalEvent dbo:participant ?militaryForce ;
                rdf:type dbo:SocietalEvent .
  ?conflict dbo:participatingMilitaryUnit ?militaryForce ;
            rdf:type dbo:MilitaryConflict .

  # Filter out irrelevant results by ensuring the person is linked to both types of events
  FILTER (?person = ?societalEvent && ?person = ?conflict)
}
```",2,4,3,2,1,3,3,71,0,0,514,0,0.0,0
281,12,train,Give me the war of New Zealand Army and entity in Colony of New Zealand.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?year WHERE {
  # New Zealand Army entity
  dbr:New_Zealand_Army a dbo:MilitaryUnit .

  # Wars or conflicts involving the New Zealand Army
  ?war dbo:militaryParticipant dbr:New_Zealand_Arby .
  
  # Timeframe of the Colony of New Zealand (1840-1947)
  ?war dbo:date ?year .
  FILTER (?year >= ""1840""^^xsd:gYear && ?year <= ""1947""^^xsd:gYear)

  # Ensure the war is a conflict
  ?war a dbo:Conflict .
}
ORDER BY ?year
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
701,11,train,Give me the parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  ?nefertari dbo:spouse ?husband .
  FILTER (str(?nefertari) = ""Nefertari"")
  
  ?child dbo:mother ?nefertari .
  ?child dbo:father ?husband .

  ?child dbp:parents ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
161,4,train,"Give me the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?event WHERE {
  # Linking Francisco Franco to societal events
  ?franco dbo:societalEvent ?societalEvent .
  
  # Linking Francisco Franco to general events
  ?franco dbo:event ?generalEvent .

  # Linking Francisco Franco to military conflicts
  ?franco dbo:militaryConflict ?militaryConflict .

  # Ensuring the same event is linked in all categories
  FILTER (?societalEvent = ?generalEvent && ?generalEvent = ?militaryConflict)

  # Binding Francisco Franco's resource
  VALUES ?franco { dbr:Francisco_Franco }

}
```",1,4,2,1,1,3,3,71,0,0,12,0,0.0,0
488,5,train,"Who is the father, that is an office holder, of Matsudaira Tadamasa?",SELECT ?result WHERE { <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?fatherName
WHERE {
  ?matsudairaTadamasa dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER (CONTAINS(LCASE(?fatherName), ""matsudaira tadamasa"")) .
  
  ?father rdf:type dbo:OfficeHolder .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
16,2,train,Give me the person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:name ""Georgeanne Marie Rice"" . }
  OPTIONAL { ?person schema:birthName ?birthName . }
}
```

### Explanation

- **Prefixes**: We use `foaf` for names and `schema` for birth names.
- **SELECT Clause**: Retrieves the person and their birth name if available.
- **WHERE Clause**:
  - Matches entities of type `dbo:Person`.
  - Uses an `OPTIONAL` clause to match the full name ""Georgeanne Marie Rice"" using `foaf:name`.
  - Another `OPTIONAL` clause retrieves the birth name using `schema:birthName`.

This query will return any person entity that matches the given name and provide their birth name if available.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
328,10,train,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of Order of Suvorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?name WHERE {
  ?leader a dbo:Person ;
          dbo:head dbr:People's_Commissariat_of_Defense_of_the_Soviet_Union ;
          dbo:award dbr:Order_of_Suvorov .
  OPTIONAL { ?leader foaf:name ?name . }
}
```

### Explanation:

- **PREFIX**: Define common prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT Clause**: Choose the leader and their name.
- **WHERE Clause**:
  - Identify individuals who are of type `dbo:Person`.
  - Check if they held the position of head of the People's Commissariat of Defense (`dbo:head`).
  - Verify if they received the Order of Suvorov (`dbo:award`).
  - Use an optional clause to retrieve their name using the `foaf:name` property.

This query should effectively retrieve the desired information from DBpedia.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,14,train,"Give me the person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  ?decedent a dbo:Person .
  ?decedent dbo:deathPlace dbr:Algiers .
  FILTER EXISTS { dbr:Algeria dbo:capital dbr:Algiers }
}
```",2,3,3,2,1,3,3,71,122,0,0,1.0,1.0,1.0
404,3,train,Give me the birth name of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName
WHERE {
  ?person a dbo:Princess ;
          foaf:name ""Victoria Louise of Prussia""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
701,12,train,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfHenuttawy ?spouseOfRamessesII
WHERE {
  # Find the parent of Henuttawy (19th dynasty)
  OPTIONAL { 
    dbr:Henuttawy_(19th_dynasty) dbo:parent ?parentOfHenuttawy .
  }
  
  # Find the spouse of Ramesses II
  OPTIONAL { 
    dbr:Ramesses_II dbo:spouse ?spouseOfRamessesII .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,11,train,Give me the person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Dino Merlin"" .
  OPTIONAL { ?person foaf:name ?name . }
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
492,12,train,Give me the person decedent at Algiers and commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Algiers .
  ?person dbo:militaryCommanderOf dbr:Franco-Hova_Wars .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
783,5,train,"Give me the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthDate ?birthPlace WHERE {
  VALUES ?person { dbr:Priscilla_Opoku-Kwarteng }
  
  ?person dbo:birthDate ?birthDate .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }

  FILTER EXISTS { ?person a dbo:Artist . }
  FILTER EXISTS { ?person a dbo:MusicalArtist . }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
963,5,train,"Give me the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName WHERE {
  ?city dbo:country dbr:Serbia .
  ?city rdfs:label ""Sremski Karlovci""@en .
  
  ?government dbo:governingBody ?city .
  ?government dbo:rulingParty ?party .

  ?party a dbo:PoliticalParty ;
        rdfs:label ?partyName .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
285,1,train,Give me the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseName
WHERE {
  dbr:Aristotle_Onassis dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .
  FILTER (lang(?spouseName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,2,2,0.0,0.0,0
487,0,train,Give me the country of 2022 Vermont House of Representatives election.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
  ?election a dbo:Election .
  ?election rdfs:label ""Vermont House of Representatives election, 2022""@en .
  ?election dbo:country ?country .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
177,5,train,Give me the entity in the residence of Alexander Gamelin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alexander Gamelin""@en .
  ?person dbo:placeOfBirth ?residence .
}
```

### Explanation

- **Prefixes**: 
  - `dbo:` for DBpedia ontology classes and properties.
  - `dbp:` for DBpedia properties.

- **SELECT Clause**:
  - We are selecting the residence (`?residence`).

- **WHERE Clause**:
  - Identify a person (`?person`) who is of type `dbo:Person`.
  - The person's name is ""Alexander Gamelin"" (using `foaf:name` for names).
  - The person has a property `dbo:placeOfBirth` that links to the residence.

This query assumes that the place of birth or residence can be found using the `dbo:placeOfBirth` property. Adjustments might be needed if the data model uses different properties for residence.",2,2,3,2,1,2,2,9,0,0,3065,0,0.0,0
465,0,train,Give me the death place of Jiřina Štěpničková.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace
WHERE {
  dbr:Jiřina_Štěpničková dbo:placeOfBirth ?birthPlace .
  OPTIONAL { dbr:Jiřina_Štěpničková dbo:deathPlace ?deathPlace . }
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
404,11,train,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseName
WHERE {
  dbr:Princess_Victoria_Louise_of_Prussia 
    dbo:spouse ?spouse .
  
  ?spouse rdfs:label ?spouseName .
  FILTER (LANG(?spouseName) = 'en')
}
```",2,3,3,2,1,3,3,71,0,1,1,0.0,0.0,0
328,12,train,Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson .
  OPTIONAL { ?person foaf:name ?name . }
  
  # Commander of the Eastern Front
  ?easternFront dbo:commander ?person ;
                rdfs:label ""Eastern Front (World War II)""@en .

  # Leader of People's Commissariat of Defense
  ?nkoLeader dbo:leader ?person ;
             rdfs:label ""People's Commissariat for Defence""@en .
}
```

This query uses the `dbo:MilitaryPerson` class to identify military figures and checks their roles as commanders or leaders. The `OPTIONAL` clause is used to retrieve names if available.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,5,train,Who is the commander in Battle of Verdun?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderName WHERE {
  ?battle dbo:wikiPageRedirects dbr:Battle_of_Verdun .
  ?battle dbo:commander ?commander .
  ?commander foaf:name ?commanderName .
}
```

### Explanation

- **PREFIXes**: 
  - `dbo:` is used for DBpedia ontology properties.
  - `dbr:` is used for DBpedia resources.

- **SELECT Clause**: We are selecting the names of commanders (`?commanderName`).

- **WHERE Clause**:
  - The first triple pattern identifies the battle using a redirect to ""Battle of Verdun"" in case it's not directly linked.
  - The second triple pattern links the battle to its commander(s).
  - The third triple pattern retrieves the name of each commander.

This query should effectively retrieve the names of individuals who commanded during the Battle of Verdun from DBpedia.",1,1,2,1,1,3,3,71,0,0,17,0,0.0,0
421,5,train,Give me the birth name of Dino Merlin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName
WHERE {
  ?person a dbo:Singer .
  ?person foaf:name ""Dino Merlin"" .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
996,3,train,Who is the awardee of 1778.0?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee
WHERE {
  ?award a dbo:Award ;
         dbo:awardNumber ""1778.0"" .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
801,5,train,"Give me the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional ?name WHERE {
  ?professional a dbo:MusicalArtist .
  ?professional dbo:genre dbp:Rap_music .
  OPTIONAL { ?professional foaf:name ?name . }
}
```",1,2,2,1,1,3,3,71,0,0,1363,0,0.0,0
16,16,train,Give me the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor ?profession 
WHERE {
  ?series dbo:title ""Unnatural"" .
  ?series dbo:starring ?actor .
  OPTIONAL { ?actor rdf:type dbo:Actor . }
  OPTIONAL { ?actor dbp:profession ?profession . }
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
391,12,train,Give me the actor of All About the Andersons and actor of The Departed.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie ?actor
WHERE {
  VALUES ?movie { 
    dbr:All_About_the_Andersons 
    dbr:The_Departed 
  }
  
  ?movie dbo:starring ?actor .
}
```",2,2,3,1,2,3,3,71,1,13,0,0.07142857142857142,1.0,0.13333333333333333
492,9,train,Give me the person decedent at French Algeria and commander in Franco-Hova Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:French_Algérie .
  ?person dbo:occupation dbr:Military_commander .
  ?person dbo:commandedInBattle dbr:Franco-Hova_Wars .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,7,train,Give me the band member of Senidah and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find the band member of Senidah
  ?senidah dbo:musicalArtist dbr:Senidah .
  
  # Find Edin Dervišhalidović and his roles
  dbr:Edin_Dervišhalidović a dbo:Person ;
    foaf:name ""Edin Dervišhalidović"" ;
    dbo:musicalArtist ?edinMusicalRole .
  
  # Check if Edin has any band member role that connects to Senidah
  OPTIONAL {
    ?edinMusicalRole dbo:bandMember ?bandMember .
  }
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
184,7,train,Give me the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  ?margaret a dbo:Archduchess ;
            dbo:birthYear ""1925""^^xsd:gYear ;
            dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
285,9,train,Who is the child of the spouse of Aristotle Onassis?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?person dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  ?person foaf:name ""Aristotle Onassis""@en .
}",2,2,3,2,1,3,2,20,5,0,0,1.0,1.0,1.0
547,0,train,Give me the resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace
WHERE {
  ?person a dbo:Egyptologist .
  ?person foaf:name ""James Burton"" .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}
```

This query does the following:
- Uses `dbo:Egyptologist` to identify James Burton as an Egyptologist.
- Matches his name using `foaf:name`.
- Attempts to retrieve the resting place using `dbo:deathPlace`, which is a common property for such information.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
9,14,train,Give me the figure known as the nickname of Queen's University Belfast.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname
WHERE {
  ?university a dbo:EducationalInstitution ;
              rdfs:label ""Queen's University Belfast""@en .
  OPTIONAL { 
    ?university dbo:nickName ?nickname .
  }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,15,train,"Give me the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?officeHolder ?force
WHERE {
  ?officeHolder a dbo:OfficeHolder .
  ?officeHolder dbo:country dbr:Kingdom_of_Ireland .
  
  OPTIONAL { 
    ?officeHolder dbo:militaryForce ?force .
  }
}",2,3,3,2,1,3,3,71,0,0,60,0,0.0,0
801,16,train,"Give me the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/writer> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?work
WHERE {
  ?artist a dbo:MusicalArtist ;
          dbo:genre dbr:Hip_hop_music ; # Assuming Hip hop is the genre for Rapper
          dbo:work ?work .
  
  ?work rdf:type dbo:SongsAndMusicalWorks ;
        rdfs:label ?workLabel .

  FILTER (CONTAINS(LCASE(?workLabel), ""song"") || CONTAINS(LCASE(?workLabel), ""musical work""))
}
```",2,6,3,2,1,3,3,71,0,0,2395,0,0.0,0
55,9,train,Give me the band member of Metallica and band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?band 
WHERE {
  ?band a dbo:MusicalArtist ;
        rdfs:label ""Metallica""@en .
  
  ?member a dbo:MusicalArtist ;
          rdfs:label ""Newsted""@en ;
          dbo:bandMember ?band .
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
429,0,train,Give me the administration of Andrew Johnson.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationDetails
WHERE {
  dbr:Andrew_Johnson dbo:presidencyStartYear ?startYear .
  OPTIONAL { 
    dbr:Andrew_Johnson dbo:presidencyEndYear ?endYear .
  }
  OPTIONAL {
    dbr:Andrew_Johnson dbo:predecessor ?predecessor .
  }
  OPTIONAL {
    dbr:Andrew_Johnson dbo:successor ?successor .
  }
  OPTIONAL {
    dbr:Andrew_Johnson dbo:spouse ?spouse .
  }
  OPTIONAL {
    dbr:Andrew_Johnson dbo:birthPlace ?birthPlace .
  }
  OPTIONAL {
    dbr:Andrew_Johnson dbo:deathPlace ?deathPlace .
  }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
696,4,train,Who is the commander in Battle of Chishui River?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander
WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Chishui River""@en .
  ?battle dbo:commander ?commander .
}
```

### Explanation:

- **Prefixes**: 
  - `dbo:` is used for DBpedia ontology classes and properties.
  - `dbr:` is used for DBpedia resources.

- **SELECT Clause**:
  - We are selecting the variable `?commander` to find out who commanded in the battle.

- **WHERE Clause**:
  - The first triple pattern identifies a resource that is of type `dbo:Battle`.
  - The second triple pattern matches the label ""Battle of Chishui River"" with English language tag (`@en`) to ensure we are querying the correct battle.
  - The third triple pattern retrieves the commander(s) associated with this battle using the property `dbo:commander`.

This query should effectively retrieve the commanders involved in the Battle of Chishui River from DBpedia.",1,1,2,1,1,3,2,20,0,0,24,0,0.0,0
182,7,train,Give me the entity in Sri Lanka and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person rdfs:label ""Mahesh Senanayake""@en .
  ?person dbo:nationality dbr:Sri_Lanka .
  
  ?war dbo:location dbr:Sri_Lanka ;
       dbo:participant ?person .

  FILTER (lang(?personLabel) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
197,0,train,Give me the birthplace of Dumitru Nadu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Dumitru Nadu"" .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
92,11,train,"Give me the band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName WHERE {
  ?band dbr:Nevermore ;
        dbo:bandMember ?member .
  ?member a dbo:MusicalArtist ;
          rdfs:label ?memberName .
  FILTER (LANG(?memberName) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,12,0,0.0,0
391,2,train,Give me the actor of All About the Andersons.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor
WHERE {
  ?movie dbo:title ""All About the Andersons""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
626,10,train,Give me the award of the military force of Battle of Borodino.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Borodino""@en .
  
  OPTIONAL { 
    ?militaryForce dbo:participatedIn ?battle .
    ?militaryForce dbo:awarded ?award .
  }
}
```",2,2,3,2,1,3,2,20,0,0,53,0,0.0,0
701,5,train,Give me the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?setiI a dbo:Person ;
         foaf:name ""Seti I""@en .
  ?setiI dbo:child ?child .
}
```

This query selects the children of Seti I by matching entities that are linked to him through the `dbo:child` predicate.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
303,9,train,Give me the entity in Panama and party of Arnulfo Arias.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  # Find Arnulfo Arias and his political party
  dbr:Arnulfo_Arias_Madrid dbo:politicalParty ?party .
  
  # Ensure the context is within Panama, if applicable (though this might not be directly needed for DBpedia)
  OPTIONAL { 
    ?party dbo:country dbr:Panama .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
435,1,train,Give me the region of Greenwich Mean Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region
WHERE {
  ?gmt a dbo:TimeZone .
  ?gmt rdfs:label ""Greenwich Mean Time""@en .
  OPTIONAL { ?gmt dbp:country ?region . }
}
```",1,1,2,1,1,2,3,28,0,0,2484,0,0.0,0
54,11,train,Give me the child of the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child
WHERE {
  ?soeMinWimalaDewi a dbo:Person ;
                    foaf:name ""Soe Min Wimala Dewi""@en .
  
  ?father dbo:spouse ?soeMinWimalaDewi ;
          dbo:child ?soeMinWimalaDewi .

  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
9,3,train,"Give me the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization
WHERE {
  ?organization a dbo:Organization .
  ?organization dbo:city dbr:Belfast .
}
```

This query selects organizations (`?organization`) that are instances of `dbo:Organization` and have a property `dbo:city` linking them to the resource for Belfast (`dbr:Belfast`).",1,2,2,1,1,3,3,71,0,0,57,0,0.0,0
492,1,train,Give me the commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander
WHERE {
  ?war dbo:wikiPageRedirects dbr:Franco-Hova_Wars .
  ?war dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
232,12,train,Give me the native of London and actor of Dog Soldiers (film).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?actor dbo:nativePlace dbr:London .
  ?film dbo:title ""Dog Soldiers""@en .
  ?film dbo:starring ?actor .
}
```

This query does the following:
- Uses `dbo:nativePlace` to find individuals native to London.
- Identifies the film ""Dog Soldiers"" using its title.
- Finds actors (`?actor`) who starred in this film.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity
WHERE {
  ?entity dbo:country dbr:United_Kingdom .
}
```",1,1,2,1,1,3,2,20,42999,0,0,1.0,1.0,1.0
488,11,train,Give me the birth place of the commander in Boshin War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?war a dbo:BoshinWar .
  ?war dbo:commander ?commander .
  ?commander dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,3,71,0,0,15,0,0.0,0
404,7,train,Who is the spouse of Princess Victoria Louise of Prussia?,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
534,10,train,"Give me the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/owner> ?result . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?owner
WHERE {
  # Identify the event
  dbr:2012_Pro12_Grand_Final dbo:location ?venue .

  # Ensure the venue is also an architectural structure
  ?venue a dbo:SportsVenue ;
         a dbo:ArchitecturalStructure .

  # Get the owner of the venue
  ?venue dbo:owner ?owner .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
232,10,train,Give me the child of Jon Pertwee and native of London.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child
WHERE {
  ?person dbo:child ?child .
  ?person foaf:name ""Jon Pertwee"" .
  FILTER regex(str(?person), ""Jon Pertwee"", ""i"") # To ensure case-insensitive match

  ?child foaf:nativePlace ?place .
  ?place rdfs:label ""London""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
184,15,train,"Give me the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native
WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""96.0""^^xsd:float)
  
  OPTIONAL {
    ?settlement dbo:hasLandmark ?landmark .
    ?person dbo:nativePlace ?settlement .
    ?person rdfs:label ?native .
    FILTER (lang(?native) = ""en"")
  }
}
```",2,3,3,2,1,3,3,71,0,0,3320,0,0.0,0
747,2,train,Give me the band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Shèna""@en .
  ?person dbo:memberOfBand ?band .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
485,11,train,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region
WHERE {
  ?person a dbo:Naturalist .
  ?person foaf:name ""Joseph Whitaker"" .
  ?person dbo:birthPlace ?birthPlace .

  ?birthPlace rdf:type dbo:Region .

  BIND(?birthPlace AS ?region)
}
```",2,3,3,2,1,2,3,28,0,0,369,0,0.0,0
754,9,train,Give me the parent of the parent of Min Linka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandparent
WHERE {
  ?minLinka dbo:child ?parent .
  ?parent dbo:child ?grandparent .
  VALUES ?minLinka { <http://dbpedia.org/resource/Min_Linka> }
}
```",2,2,3,2,1,3,2,20,0,1,3,0.0,0.0,0
177,0,train,Give me the entity in South Korea.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity
WHERE {
  ?entity dbo:country dbr:South_Korea .
}
```

This query selects entities (`?entity`) that are associated with South Korea through the `dbo:country` property.",1,1,2,1,1,2,2,9,0,0,3065,0,0.0,0
701,0,train,Give me the parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?meritamen dbo:parent ?parent .
  FILTER (str(?meritamen) = ""Meritamen"")
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
365,3,train,Give me the real name of The Blasters.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?realName
WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""The Blasters""@en .
  OPTIONAL { ?band dbo:officialName ?realName . }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
996,2,train,Give me the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?elevation
WHERE {
  ?lake a dbo:Lake ;
        rdfs:label ""Lac d'Avoriaz""@en .
  OPTIONAL { 
    ?lake dbo:elevation ?elevation .
  }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
9,8,train,Give me the nickname of Queen's University Belfast.,SELECT ?result WHERE { <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname
WHERE {
  ?university a dbo:CollegeOrUniversity ;
              rdfs:label ""Queen's University Belfast""@en .
  OPTIONAL { 
    ?university dbo:nickName ?nickname .
  }
}
```

### Explanation

- **PREFIX**: Define prefixes for ontology (`dbo`) and properties (`dbp`).
- **SELECT Clause**: Specify `?nickname` to retrieve the nickname.
- **WHERE Clause**:
  - Identify the university using its label ""Queen's University Belfast"" in English.
  - Use an `OPTIONAL` clause to fetch the nickname, ensuring that even if no nickname is present, other relevant data can still be retrieved.

This query will return any nicknames associated with Queen's University Belfast from DBpedia.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
161,10,train,Give me the military force of Rif War and commander in Biscay Campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?commander WHERE {
  {
    # Rif War military forces and commanders
    ?rifWarEvent a dbo:MilitaryConflict ;
                 dbo:militaryUnit ?militaryForce .
    OPTIONAL { ?militaryForce dbo:commander ?commander . }
    
    FILTER (str(?rifWarEvent) = ""Rif_War"")
  } UNION {
    # Biscay Campaign military forces and commanders
    ?biscayCampaign a dbo:MilitaryConflict ;
                    dbo:militaryUnit ?militaryForce .
    OPTIONAL { ?militaryForce dbo:commander ?commander . }
    
    FILTER (str(?biscayCampaign) = ""Biscay_Campaign"")
  }
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,1,train,Give me the associated musical artist of Red Tide (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist
WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""Red Tide""@en .
  FILTER (lang(?bandLabel) = 'en') # Ensure the label is in English
  OPTIONAL { 
    ?band dbo:musicalArtist ?artist .
  }
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
251,0,train,Give me the location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?location
WHERE {
  dbr:Battle_of_Marengo dbo:location ?location .
}
```

This query selects the location of the Battle of Marengo by matching the event with its associated location property in DBpedia.",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
915,4,train,"Give me the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?lizzie dbo:spouseOrPartner ?parent .
  FILTER (str(?lizzie) = ""Lizzie Spaulding"")
  
  ?parent a dbo:FictionalCharacter ;
          dbp:genre ""Soap opera"" .
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
16,13,train,Give me the professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professional WHERE {
  ?satomiIshihara a dbo:Person ;
                  foaf:name ""Satomi Ishihara""@en .
  
  ?satomiIshihara dbo:occupation ?occupation .

  ?professional a dbo:Person ;
                dbo:occupation ?occupation .
  FILTER(?professional != ?satomiIshihara)
}
```",2,2,3,2,1,3,3,71,0,0,19241,0,0.0,0
617,2,train,Give me the parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?nysa a dbo:Person ;
        dbp:spouse ?pharnaces .
  
  ?pharnaces rdfs:label ""Pharnaces I of Pontus""@en .

  ?nysa dbo:childOf ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
659,5,train,"Give me the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?label ?description
WHERE {
  ?entity rdfs:label ""Polish Horse""@en .
  OPTIONAL { ?entity dbo:militaryUnit ?unit . }
  OPTIONAL { ?entity rdf:type dbpedia-owl:Organization . }
  OPTIONAL { ?entity rdfs:comment ?description . FILTER (lang(?description) = 'en') }
  SERVICE <http://dbpedia.org/sparql> {
    ?entity rdfs:label ?label .
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
391,7,train,Who is the professional in ?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name ?occupation
WHERE {
  ?person a dbo:Person .
  ?person foaf:name ?name .
  ?person dbo:occupation ?occupation .
}
ORDER BY ?name",1,1,2,1,1,3,3,71,25303,774196,14337,0.031648569916910466,0.6383198789101917,0.06030705282438309
659,10,train,Give me the military force of Napoleonic Wars and commander in German campaign of 1813.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Find military forces involved in the German Campaign of 1813
  ?campaign dbo:militaryConflict dbr:Napoleonic_Wars .
  ?campaign dbo:date ""1813""^^xsd:gYear .

  # Link campaigns to military forces and their commanders
  ?militaryForce dbo:participatedIn ?campaign .
  OPTIONAL { 
    ?commander dbo:commanded ?militaryForce .
  }
  
  FILTER EXISTS {
    ?campaign rdfs:label ""German campaign of 1813""@en .
  }
}
```",2,2,3,1,2,3,3,71,0,0,6,0,0.0,0
179,6,train,Give me the person born as Mom Rajawongse Sirikit Kitiyakara and parent of Ubol Ratana.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person rdfs:label ""Mom Rajawongse Sirikit Kitiyakara""@en .
  ?person dbo:spouse ?spouse . # Assuming spouse might be relevant for context
  ?child dbo:parent ?person .
  ?child rdfs:label ""Ubol Ratana""@en .
}
```

This query does the following:
- Uses `rdfs:label` to match the full name of Mom Rajawongse Sirikit Kitiyakara.
- Identifies a person who is a parent (`dbo:parent`) of Ubol Ratana.
- Optionally includes spouse information for additional context, though it's not strictly necessary.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
696,9,train,"Who is the member of the associated musical artist, that is an organisation and a group and a band, of The Boils?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member
WHERE {
  # Identify The Boils as a musical artist
  dbr:The_Boils dbo:associatedMusicalArtist ?band .

  # Ensure the band is also an organization, group, and band
  ?band rdf:type dbo:Band .
  ?band rdf:type dbo:Organization .
  ?band rdf:type dbo:Group .

  # Find members of this band
  ?band dbo:member ?member .
}
```",2,5,3,2,1,3,2,20,0,0,6,0,0.0,0
696,10,train,Give me the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award
WHERE {
  ?battle rdf:type dbo:Battle .
  ?battle rdfs:label ""Battle of Chishui River""@en .

  ?participant dbo:participatedIn ?battle ;
               a dbo:MilitaryPerson ;
               foaf:name ?commander .

  OPTIONAL { 
    ?participant dbo:award ?award .
  }
}
```",2,2,3,2,1,3,2,20,0,0,9,0,0.0,0
492,4,train,"Give me the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joseph C. Satterthwaite""@en .
  
  OPTIONAL { 
    ?position dbo:officeHolder ?person ;
              rdfs:label ""US Assistant Secretary of State for African Affairs""@en .
    
    ?position dbo:duty ?work .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
767,6,train,Give me the administration of George K. Nash.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration
WHERE {
  ?person rdfs:label ""George K. Nash""@en .
  ?person dbo:officeHeld ?administration .
}
```

### Explanation

- **Prefixes**: `dbo` for DBpedia ontology and `dbr` for resources.
- **SELECT Clause**: We are interested in the administration or office held by George K. Nash.
- **WHERE Clause**:
  - The first triple pattern identifies the person with the label ""George K. Nash"".
  - The second triple pattern connects this person to an office they have held.

This query assumes that DBpedia has a property like `dbo:officeHeld` linking individuals to their roles or offices, which is common for political figures.",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
747,10,train,Give me the band of Shèna and person born on 1985-04-29.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName ?personName
WHERE {
  # Find Shèna's band
  dbr:Shèna dbo:memberOf ?band .
  ?band rdfs:label ?bandName .

  # Find person born on 1985-04-29
  ?person dbo:birthday ""1985-04-29""^^xsd:date ;
          foaf:name ?personName .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
356,2,train,"Give me the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?predecessor
WHERE {
  ?season a dbo:SoccerClubSeason ;
          dbo:sportsTeam dbr:Sacramento_Republic_FC ;
          dbo:year ""2015""^^xsd:gYear ;
          dbo:predecessor ?predecessor .
  
  FILTER EXISTS { 
    ?predecessor a dbo:SoccerClubSeason .
  }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
177,1,train,"Give me the headquarter of Ministry of Culture, Sports and Tourism.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ministryName ?headquarters
WHERE {
  ?ministry a dbo:GovernmentAgency ;
            dbo:officialName ""Ministry of Culture, Sports and Tourism""@en .
  
  OPTIONAL { 
    ?ministry dbo:headquarters ?headquarters .
  }
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
666,5,train,Give me the nickname of England national beach soccer team.,SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname
WHERE {
  dbr:England_national_beach_soccer_team dbo:nickname ?nickname .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
378,5,train,"Give me the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  ?peninsularWar a dbo:MilitaryConflict ;
                 rdfs:label ""Peninsular War""@en .
  
  ?peninsularWar dbo:wikiPageWikiLink ?conflict .
  ?conflict a dbo:MilitaryConflict .
}
```",1,2,2,1,1,3,3,71,0,127,1,0.0,0.0,0
435,7,train,"Give me the territory administered from Reykjavík and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?territory ?articleContent
WHERE {
  # Find territory administered from Reykjavík
  ?territory dbo:administrativeCapital dbr:Reykjavík .
  
  # Find content related to Article 62, Section IV of the Constitution of Iceland
  OPTIONAL {
    ?constitution dct:subject dbr:Iceland_Constitution ;
                  dbo:textContent ?articleContent .
    FILTER(CONTAINS(LCASE(?articleContent), ""article 62 section iv""))
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
626,2,train,Who is the commander in Battle of Paris (1814)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander
WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Paris (1814)""@en .
  ?battle dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
528,11,train,Give me the war of the military force of Battle of Pisagua.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warName
WHERE {
  dbr:Battle_of_Pisagua dbo:partOf ?war .
  ?war rdfs:label ?warName .
  FILTER (lang(?warName) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
281,13,train,"Give me the entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .
}
```",2,3,3,2,1,3,3,71,0,1,1,0.0,0.0,0
783,4,train,Give me the persona of Ebony Reigns.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?name ?birthDate ?occupation ?description ?award WHERE {
  VALUES ?person { dbr:Ebony_Reigns }
  
  ?person a dbo:Person ;
          foaf:name ?name ;
          dbo:birthDate ?birthDate ;
          dbo:occupation ?occupation .
  
  OPTIONAL { ?person dbo:description ?description . }
  OPTIONAL { ?person dbo:award ?award . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
492,15,train,Give me the work of the author of French Algeria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?author dbo:nationality dbr:French_Algérie .
  ?author dbo:occupation dbr:Author .
  ?author dbo:works ?work .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
378,3,train,Give me the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?birthName
WHERE {
  ?person a dbpedia-owl:Person .
  ?person foaf:name ""Carl Pontus Gahn""@en .
  OPTIONAL { ?person foaf:givenName ?birthName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
435,2,train,"Give me the work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?description
WHERE {
  dbr:Iceland_Constitution dbo:article ""62"" .
  ?article dbo:section ""IV"" .
  ?article rdfs:comment ?description .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
281,14,train,"Give me the war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warName
WHERE {
  # Heather Roy and her profession linked to a military unit
  dbr:Heather_Roy dbo:occupation ?militaryUnit .
  
  # Ensure the occupation is indeed a military unit
  ?militaryUnit rdf:type dbo:MilitaryUnit .

  # Link the military unit to wars it participated in
  ?militaryUnit dbo:participatedInWar ?war .
  ?war rdfs:label ?warName .
  
  FILTER (lang(?warName) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,14,0,0.0,0
712,4,train,Give me the show of Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?showName WHERE {
  ?show dbo:country dbr:Soviet_Union .
  ?show rdfs:label ?showName .
  FILTER (lang(?showName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,2150,8,0.0,0.0,0
48,7,train,Give me the band of the writer of Emotion (Carly Rae Jepsen album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  # Identify the album ""Emotion"" by Carly Rae Jepsen
  dbr:Emotion_(Carly_Rae_Jepsen_album) dbo:album dbr:Emotion.

  # Find writers of the album
  ?writer dbo:composer dbr:Emotion_(Carly_Rae_Jepsen_album).

  # Check if these writers are part of any band
  OPTIONAL { 
    ?writer dbo:band ?band.
  }
}
```",2,2,3,2,1,3,2,20,0,0,95,0,0.0,0
404,5,train,"Who is the parent, that is a royalty, of Prince George William of Hanover?",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?person dbo:child ?prince .
  ?prince rdfs:label ""Prince George William of Hanover""@en .
  FILTER (CONTAINS(LCASE(?prince), ""prince george william of hanover""))
  
  ?person a dbo:Monarch ;
          dbo:spouse ?parent .

  OPTIONAL {
    ?parent a dbo:RoyalFamilyMember .
  }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
285,0,train,Give me the parent of Alexander Onassis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?person dbo:birthName ""Alexander Onassis""@en .
  ?person dbo:parent ?parent .
}
```

This query uses the `dbo:birthName` property to identify Alexander Onassis and then retrieves his parent(s) using the `dbo:parent` relationship.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
281,0,train,"Give me the war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  ?person a dbo:Person ;
          foaf:name ""Beauchamp Seymour""@en .
  
  ?person dbo:title ""1st Baron Alcester""@en .

  ?event dbo:participatedIn ?person ;
         a dbo:War .

  ?event rdfs:label ?war ;
         dbo:description ?description .

  FILTER (lang(?war) = 'en' && lang(?description) = 'en')
}
```

### Explanation:

- **PREFIX**: We use `dbo` for DBpedia ontology and `dbr` for resources.
- **SELECT Clause**: Retrieves the war (`?war`) and its description (`?description`).
- **WHERE Clause**:
  - Identifies Beauchamp Seymour as a person with the title ""1st Baron Alcester.""
  - Finds events (wars) in which he participated.
  - Extracts labels and descriptions of these wars, ensuring they are in English.

This query should help retrieve information about the war involving Beauchamp Seymour, 1st Baron Alcester.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
281,6,train,"Give me the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bob Heffron""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
754,3,train,Give me the parent of May Hnin Htapi.,SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?person a dbo:Person ;
          foaf:name ""May Hnin Htapi""@en .
  ?person dbo:parent ?parent .
}
```

This query assumes that the name is stored in English and uses `foaf:name` for the person's name. Adjustments might be needed based on actual data representation.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
429,5,train,Give me the administration of the father of Martha Johnson Patterson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration
WHERE {
  ?martha a dbo:Person ;
          foaf:name ""Martha Johnson Patterson""@en .
  
  ?father dbo:child ?martha ;
          dbo:positionHeld ?administration .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
48,6,train,Give me the band of Carl Falk and band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band
WHERE {
  VALUES ?person { 
    dbc:Carl_Falk 
    dbc:Murda_Mook 
  }
  
  ?person dbo:bandMember ?band .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
182,5,train,Give me the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nationality
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Tamara Kunanayakam"" .
  ?person dbo:nationality ?nationality .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
44,5,train,Give me the band member of the band of John Pettibone.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMemberName WHERE {
  ?person foaf:name ""John Pettibone""@en .
  ?person dbo:bandMember ?band .
  
  OPTIONAL {
    ?bandMember dbo:member ?band ;
                foaf:name ?bandMemberName .
  }
}
```

This query does the following:
- Identifies `?person` as John Pettibone using his name.
- Finds all bands (`?band`) that he is a member of.
- For each band, it optionally retrieves other members (`?bandMember`) and their names (`?bandMemberName`).",2,2,3,2,1,2,2,9,0,0,2,0,0.0,0
666,10,train,"Give me the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?club a dbo:SoccerClub ;
        dbo:sport dbr:Soccer ;
        dbo:country dbr:England .
  
  OPTIONAL { ?club rdfs:label ?nickname . FILTER (lang(?nickname) = 'en') }
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
232,6,train,"Give me the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?militaryConflict
WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Sean Pertwee""@en .
  
  OPTIONAL { 
    ?film dbo:starring ?person ;
          a dbo:Film .
    FILTER (lang(?filmLabel) = 'en')
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  OPTIONAL {
    ?militaryConflict dbo:participant ?person ;
                      a dbo:MilitaryConflict .
    FILTER (lang(?militaryConflictLabel) = 'en')
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
820,6,train,Give me the child of Jack Schwartzman and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childName ?profession
WHERE {
  ?parent foaf:name ""Jack Schwartzman""@en .
  ?parent dbo:child ?child .
  ?child foaf:name ?childName .
  OPTIONAL { ?child dbo:occupation ?occupation . }
  FILTER EXISTS { ?occupation rdfs:label ?profession } 
}
```

### Explanation:

- **PREFIX**: Define common prefixes for DBpedia ontology and FOAF vocabulary.
- **SELECT**: Choose the child's name (`?childName`) and their profession (`?profession`).
- **WHERE**:
  - Identify Jack Schwartzman using `foaf:name`.
  - Find his children with `dbo:child`.
  - Retrieve each child's name.
  - Optionally, find the occupation of each child and link it to a human-readable label for the profession.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
54,0,train,Give me the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  ?thinkhaya a dbo:Person ;
             rdfs:label ""Thinkhaya""@en .
  
  OPTIONAL { 
    ?thinkhaya dbo:spouse ?spouse . 
  }
  
  ?thinkhaya dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
488,16,train,"Who is the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?grandfather WHERE {
  ?matsudairaTadamasa dbo:parent ?father .
  FILTER(STRSTARTS(STR(?matsudairaTadamasa), ""http://dbpedia.org/resource/Matsudaira_Tadamasa"")) .

  ?father dbo:occupation ?politicianRole .
  FILTER(CONTAINS(LCASE(str(?politicianRole)), ""politician"")) .

  ?father dbo:parent ?grandfather .
  
  ?grandfather dbo:occupation ?officeHolderRole .
  FILTER(CONTAINS(LCASE(str(?officeHolderRole)), ""office holder""))
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
391,16,train,"Give me the claim to fame, that is a work, of the spouse of Sherry Hormann.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseClaimToFame WHERE {
  ?sherryHormann a dbo:Person ;
                 foaf:name ""Sherry Hormann""@en .
  
  ?sherryHormann dbo:spouse ?spouse .

  OPTIONAL {
    ?spouse dbp:notableWork ?spouseClaimToFame .
  }
}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
666,8,train,Give me the figure known as the nickname of England national beach soccer team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v0 . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v0 . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname
WHERE {
  ?team rdfs:label ""England national beach soccer team""@en .
  ?team dbp:nickname ?nickname .
}
```",2,2,3,2,1,3,2,20,0,1,5,0.0,0.0,0
617,7,train,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Boleslaus I, Duke of Bohemia
  ?boleslausI a dbo:Duke ;
              foaf:name ""Boleslaus I"" .

  # First level children (children of Boleslaus I)
  ?boleslausI dbp:spouse ?parent1 .
  ?child1 dbp:fatherOrMother ?boleslausI .

  # Second level children (grandchildren of Boleslaus I)
  ?child1 dbp:spouse ?parent2 .
  ?grandchild dbp:fatherOrMother ?child1 .

  # Filter for royalty
  ?grandchild a dbo:Monarch ;
              foaf:name ?name .
}
```

### Explanation

- **Prefixes**: `dbo` and `dbp` are used to access DBpedia ontology and properties.
- **Boleslaus I Identification**: We identify Boleslaus I using his title and name.
- **First Level Children**: We find entities related as children of Boleslaus I.
- **Second Level Children**: For each first-level child, we find their children (grandchildren).
- **Royalty Filter**: We ensure the grandchild is a monarch.

This query assumes that DBpedia has structured data for these relationships and roles. Adjustments may be needed based on actual data availability.",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
328,14,train,"Give me the leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader
WHERE {
  # Find offices that are government agencies under Joseph Stalin's influence
  ?office a dbo:GovernmentAgency ;
          dbo:head ?leader .

  # Link the office to Joseph Stalin
  ?stalinOffice dbo:head dbr:Joseph_Stalin .
  ?stalinOffice dbo:memberOrOfficer ?office .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
9,15,train,"Who is the mayor, that is a politician, of the entity, that is an organisation, in Belfast?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayorName ?organisationName
WHERE {
  ?mayor a dbo:Mayor ;
         foaf:name ?mayorName ;
         dbo:memberOf ?organisation .
  
  ?organisation a dbo:Organization ;
                foaf:name ?organisationName ;
                dbp:location dbr:Belfast .

  FILTER (EXISTS { ?mayor rdf:type dbo:Politician } )
}
```",2,4,3,2,1,3,3,71,0,0,13,0,0.0,0
915,10,train,"Give me the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  ?lizzie a dbo:FictionalCharacter ;
          dbp:soapOpera ""The Young and the Restless"" ; # Assuming Lizzie Spaulding is from this soap opera
          dbo:spouse ?parent .

  ?parent a dbo:FictionalCharacter ;
          dbp:soapOpera ?soapOpera ;
          dbo:child ?child .

  ?child a dbo:FictionalCharacter ;
         dbp:soapOpera ?soapOpera .
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
820,2,train,Who is the author of Understanding Comics?,SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?authorLabel
WHERE {
  ?book a dbo:Book .
  ?book rdfs:label ""Understanding Comics""@en .
  ?book dbo:author ?author .
  ?author rdfs:label ?authorLabel .
}
```

This query does the following:
- Selects the label of the author (`?authorLabel`).
- Identifies books using `dbo:Book`.
- Matches the book with the title ""Understanding Comics"".
- Retrieves the author of the book.
- Fetches the human-readable name (label) of the author.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
981,2,train,"Give me the time zone in Salak, North Sumatra.","SELECT ?result WHERE { <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?timeZone
WHERE {
  ?place a dbo:Settlement .
  ?place rdfs:label ""Salak, North Sumatra""@en .
  OPTIONAL { ?place dbo:timeZone ?timeZone . }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
182,9,train,Give me the war of Jagath Dias and entity in Sri Lanka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?relation ?description
WHERE {
  # Find Jagath Dias and his involvement in a war or conflict
  dbr:Jagath_Dias dbo:spouse ?person .
  
  OPTIONAL {
    ?event dbo:location dbr:Sri_Lanka ;
           dbo:agent ?person ;
           rdfs:label ?relation .
    FILTER(CONTAINS(LCASE(?relation), ""war"") || CONTAINS(LCASE(?relation), ""conflict""))
  }
  
  # Find other entities involved in the same event
  OPTIONAL {
    ?event dbo:agent ?entity .
    FILTER(?entity != dbr:Jagath_Dias)
  }

  # Get descriptions of these entities
  OPTIONAL { ?entity rdfs:comment ?description . }
}
ORDER BY ?relation
```",2,2,3,1,2,2,3,28,0,0,5,0,0.0,0
184,3,train,"Give me the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
    ?landmark a dbo:Lighthouse .
    ?landmark dbo:elevationAboveSeaLevel ""96.0""^^xsd:float .
    ?landmark dbo:settlement dbr:.* .
}
```",1,2,2,1,1,3,3,71,0,0,162,0,0.0,0
232,13,train,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?film ?conflict WHERE {
  VALUES ?actor { dbr:Sean_Pertwee }
  
  # Find films associated with Sean Pertwee
  OPTIONAL {
    ?film dbo:starring ?actor .
    FILTER (STRSTARTS(STR(?film), ""http://dbpedia.org/resource/"") && 
            EXISTS { ?film a dbo:Film } )
    BIND(?film AS ?work)
  }
  
  # Find military conflicts associated with Sean Pertwee
  OPTIONAL {
    ?conflict dbo:starring ?actor .
    FILTER (STRSTARTS(STR(?conflict), ""http://dbpedia.org/resource/"") && 
            EXISTS { ?conflict a dbo:MilitaryConflict } )
    BIND(?conflict AS ?work)
  }
  
  # Ensure at least one work is found
  VALUES ?work { ?film ?conflict }
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
498,3,train,"Who is the member, that is an artist, of Mortician (band)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName
WHERE {
  ?band dbr:Mortician .
  ?band dbo:member ?person .
  ?person foaf:name ?memberName .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""artist""))
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
626,5,train,Give me the award of Aleksey Petrovich Yermolov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?yermolov { dbr:Aleksey_Petrovich_Yermolov }
  ?yermolov dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,6,0,0,1.0,1.0,1.0
392,0,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Italy .
}
```

This query selects entities (`?entity`) that are associated with Italy through the `dbo:country` property.",1,1,2,1,1,2,3,28,0,0,13092,0,0.0,0
328,0,train,Give me the awardee of Order of Suvorov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipientName WHERE {
  ?award a dbo:Award ;
         rdfs:label ""Order of Suvorov""@en .
  
  ?recipient dbo:recipientOf ?award .
  ?recipient foaf:name ?recipientName .
}
```

### Explanation:

- **PREFIX**: Define prefixes for common namespaces.
- **SELECT**: Retrieve the names (`?recipientName`) of individuals who received the award.
- **WHERE**:
  - Identify awards that are instances of `dbo:Award` and have a label ""Order of Suvorov.""
  - Find recipients linked to these awards via `dbo:recipientOf`.
  - Use `foaf:name` to get the names of the recipients.

This query assumes that the award is directly linked to its recipients through `dbo:recipientOf`, which is common for such data in DBpedia. Adjustments may be needed if the actual property differs.",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
487,3,train,Give me the administration of Patricia McCoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration
WHERE {
  ?person foaf:name ""Patricia McCoy""@en .
  ?person dbo:positionHeld ?administration .
}
```

This query assumes:
- `foaf:name` is used to identify the person by name.
- `dbo:positionHeld` links a person to their administrative roles.",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
9,7,train,"Give me the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a dbo:EducationalInstitution ;
         a dbo:Organization .
  ?entity dbo:location dbr:Northern_Ireland .
}
```",1,3,2,1,1,3,3,71,0,0,134,0,0.0,0
92,16,train,"Give me the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person ?birthPlace WHERE {
  ?movie dbr:Return_to_Nuke_'Em_High_Volume_1 .
  ?actor dbo:actor ?movie ;
         rdf:type dbo:Artist .
  ?actor dbo:birthPlace ?birthPlace .
  BIND(?actor AS ?person)
}
```",2,3,3,2,1,3,3,71,0,0,205,0,0.0,0
30,0,train,Give me the native of Paris.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name
WHERE {
  ?person dbo:birthPlace dbr:Paris .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,2,2,9,4485,4350,0,0.5076400679117148,1.0,0.6734234234234234
754,4,train,Give me the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?subject WHERE {
  ?subject rdfs:label ""Ram Khamhaeng the Great""@en .
}
```

This query selects the subject (URI) of the resource labeled as ""Ram Khamhaeng the Great"" in English.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
981,9,train,"Give me the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . ?result <http://dbpedia.org/property/timeZone> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region
WHERE {
  ?salak a dbo:Settlement ;
         rdfs:label ""Salak""@en .
  
  OPTIONAL { 
    ?salak dbo:timeZone ?timezone .
    ?timezone dbp:region ?region .
  }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
820,3,train,Give me the award of Scott McCloud.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Scott_McCloud dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,4,4,0.0,0.0,0
488,6,train,"Who is the father, that is a politician, of Yūki Hideyasu?",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fatherName WHERE {
  ?yuki a dbo:Person ;
        foaf:name ""Yūki Hideyasu""@en .
  
  ?yuki dbo:parent ?father .

  ?father a dbo:Politician ;
          foaf:name ?fatherName .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
360,11,train,Give me the reference to the author of Blinded by the Light.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?book dbo:title ""Blinded by the Light""@en .
  ?book dbo:author ?author .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
994,14,train,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  # Identify Donald Maynard Dokken as a musical artist
  dbr:Don_Dokken a dbo:MusicalArtist .

  # Find band members associated with him
  ?bandMember dbo:member dbr:Don_Dokken .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
421,3,train,Who is the awardee of [[#Awards and nominations?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee WHERE {
  ?award dbo:recipient ?awardee .
  FILTER EXISTS { ?award a dbo:Award } 
}
ORDER BY ?awardee
```

### Explanation:

- **Prefixes**: `dbo:` is used for DBpedia ontology properties, and `dbr:` for resources.
- **SELECT Clause**: Retrieves distinct awardees (`?awardee`).
- **WHERE Clause**:
  - Connects awards to their recipients using the property `dbo:recipient`.
  - Uses a `FILTER EXISTS` clause to ensure that only entities classified as awards are considered.
- **ORDER BY**: Sorts results by the name of the awardee for better readability.

This query will return a list of distinct individuals or entities who have received an award, sorted alphabetically by their names.",1,1,2,1,1,2,3,28,0,0,113,0,0.0,0
378,1,train,Give me the war of Joaquín Blake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:MilitaryPerson .
  ?person foaf:name ""Joaquín Blake""@en .
  ?person dbo:participatedIn ?war .
}
```",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
617,6,train,Who is the child of Antiochus III the Great?,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?parent a dbo:Person ;
          foaf:name ""Antiochus III the Great""@en .
  
  OPTIONAL { ?parent dbo:child ?child . }
  OPTIONAL { ?parent dbo:father ?child . }
  OPTIONAL { ?parent dbo:mother ?child . }
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
696,6,train,Give me the landmark at elevation of 50 and birth place of Tim Brennan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation ?birthPlace
WHERE {
  # Find landmarks at an elevation of 50
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""50""^^xsd:integer)

  # Find the birthplace of Tim Brennan
  dbr:Tim_Brennan dbo:birthPlace ?birthPlace .

  OPTIONAL {
    ?landmark rdfs:label ?landmarkLabel .
    FILTER (lang(?landmarkLabel) = 'en')
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
92,17,train,Give me the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person
WHERE {
  ?person rdf:type dbo:Person .
  ?person dbo:birthName ""Joseph Michael"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
16,5,train,Who is the actor of Unnatural (TV series)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?series dbo:title ""Unnatural (TV series)""@en .
  ?series a dbo:TelevisionSeries .
  ?series dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
312,6,train,Give me the entity in the birthplace of Giorgio Grigolli.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?city
WHERE {
  ?person dbo:birthPlace ?place .
  ?place dbp:city ?city .
  FILTER (str(?person) = ""Giorgio Grigolli"")
}
```",2,2,3,2,1,2,2,9,0,0,13092,0,0.0,0
617,1,train,Give me the parent of Mieszko II Lambert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  ?person dbr:Mieszko_II_Lambert .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
427,11,train,Give me the reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?name WHERE {
  ?party rdfs:label ?name .
  FILTER CONTAINS(LCASE(?name), ""italian people's party"")
  FILTER EXISTS { 
    ?party dbo:foundingDate ?date .
    FILTER (YEAR(?date) = 1994)
  }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
92,7,train,Give me the birth name of Joseph Michael.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName
WHERE {
  ?person rdfs:label ""Joseph Michael""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,2,train,Give me the military force of Napoleonic Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  dbr:Napoleonic_Wars dbo:militaryForce ?force .
}
```

This query selects military forces (`?force`) associated with the Napoleonic Wars using the `dbo:militaryForce` property.",1,1,2,1,1,3,3,71,0,0,1051,0,0.0,0
392,10,train,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?event
WHERE {
  # Find the time zone of Aguilar de Segarra
  dbr:Aguilar_de_Segarra dbo:timeZone ?timezone .
  
  # Find the region associated with this time zone
  ?timezone dbo:inRegion ?region .

  # Find sports events in that region
  ?event a dbo:SportEvent ;
         dbo:location ?location .
  ?location dbo:locatedIn ?region .
}
```",2,3,3,2,1,2,3,28,0,0,49990,0,0.0,0
92,12,train,Give me the associated musical artist of Jim Sheppard and band of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist1Label ?artist2Label WHERE {
  ?person1 foaf:name ""Jim Sheppard""@en .
  ?person1 dbo:musicalArtist ?artist1 .

  OPTIONAL { 
    ?person1 dbo:bandMember ?band1 .
    ?band1 dbp:leadSinger ?artist1 .
  }

  ?person2 foaf:name ""Joseph Michael""@en .
  ?person2 dbo:musicalArtist ?artist2 .

  OPTIONAL {
    ?person2 dbo:bandMember ?band2 .
    ?band2 dbp:leadSinger ?artist2 .
  }

  SERVICE <http://dbpedia.org/sparql> {
    VALUES ?label { ""Jim Sheppard""@en ""Joseph Michael""@en }
    ?entity rdfs:label ?label .
    FILTER (lang(?label) = 'en')
  }

  BIND(STR(?artist1Label) AS ?artist1Label)
  BIND(STR(?artist2Label) AS ?artist2Label)

  SERVICE <http://dbpedia.org/sparql> {
    ?artist1 rdfs:label ?artist1Label .
    FILTER (lang(?artist1Label) = 'en')
  }

  SERVICE <http://dbpedia.org/sparql> {
    ?artist2 rdfs:label ?artist2Label .
    FILTER (lang(?artist2Label) = 'en')
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
378,11,train,Give me the war of the person born as Carl Pontus Gahn.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?war
WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:nationality dbr:Sweden .
  ?person dbp:participatedInWar ?war .
}
```

This query does the following:
- It selects wars (`?war`) associated with Carl Pontus Gahn.
- It identifies him using his label and nationality, assuming he is Swedish (as per historical context).
- It uses the `dbp:participatedInWar` property to find any wars he was involved in.",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
54,9,train,Give me the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual
WHERE {
  ?child dbo:parent dbr:Thinkhaya_of_Pagan .
  ?child dbo:spouse ?individual .
  
  ?individual dbo:child dbr:Thado_Minsaw_of_Prome .
}
```

This query assumes that the relationships are defined using `dbo:parent`, `dbo:child`, and `dbo:spouse` properties. Adjustments may be necessary based on the actual schema used in DBpedia.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,11,train,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  ?parent dbo:spouse|dbo:child ?seleucus .
  FILTER(?seleucus = dbpedia:Seleucus_II_Callinicus) .

  ?parent dbo:child ?child .
  
  ?child dbo:child ?grandchild .
  
  ?grandchild a dbo:Monarch .
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
747,0,train,Give me the person born on 1985-04-29.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name
WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  OPTIONAL { ?person foaf:name ?name . }
  FILTER (str(?date) = ""1985-04-29T00:00:00Z""^^xsd:dateTime)
}
```",1,1,2,1,1,3,3,71,0,0,30,0,0.0,0
318,5,train,Give me the person born in the founding year of Eel Pie Publishing.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?birthYear WHERE {
  dbr:Eel_Pie_Publishing dbo:foundingDate ?foundingYear .
  
  ?person a dbo:Person ;
          dbo:birthYear ?birthYear .
  
  FILTER (?birthYear = ?foundingYear)
}
```",2,2,3,2,1,2,2,9,0,0,2810,0,0.0,0
232,11,train,Give me the child of the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child
WHERE {
  ?person foaf:name ""John Devon Roland Pertwee""@en .
  ?person dbo:birthName ""John Devon Roland Pertwee"" .
  ?person dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
547,1,train,Give me the resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Simon Cadell""@en .
  OPTIONAL { 
    ?person dbo:finalBurial ?burialPlace .
  }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
378,7,train,"Give me the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?war
WHERE {
  ?person rdfs:label ""Thomas Trigge""@en .
  ?person dbo:participatedIn ?war .

  FILTER NOT EXISTS { ?war a dbo:Person } # Ensure it's not another person

  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:SocietalEvent ;
       rdf:type dbo:Event .
}
```

This query does the following:
- Selects distinct wars (`?war`) that Thomas Trigge participated in.
- Ensures these wars are of type `dbo:MilitaryConflict`, `dbo:SocietalEvent`, and `dbo:Event`.
- Uses a filter to exclude any results where the war is mistakenly identified as a person.",1,4,2,1,1,3,3,71,0,0,7,0,0.0,0
754,6,train,Give me the parent of Loe Thai and parent of May Hnin Thwe-Da.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?parentName WHERE {
  VALUES ?person { 
    dbr:Loe_Thai 
    dbr:May_Hnin_Thwe-Da 
  }
  
  ?person dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER (lang(?parentName) = 'en')
}
```",2,2,3,1,2,3,2,20,0,3,1,0.0,0.0,0
767,14,train,Give me the reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo
WHERE {
  ?character rdfs:label ""Black Hood""@en .
  ?character dbo:alterEgo ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,0,98447,0,0.0,0
626,3,train,"Give me the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  ?person dbo:spouse ?spouse .
  ?spouse rdfs:label ""Alexander I of Russia""@en .

  ?person dbo:militaryConflict ?conflict .
  FILTER (lang(?conflict) = 'en')
}
```",1,2,2,1,1,3,2,20,0,0,25,0,0.0,0
996,9,train,Who is the awardee of the elevation of Lac d'Avoriaz?,SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee WHERE {
  ?location rdfs:label ""Lac d'Avoriaz""@en .
  ?award dbo:recipient ?awardee ;
         dbo:subjectLocation ?location .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
827,5,train,"Who is the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894)?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childName WHERE {
  ?person dbo:child ?child .
  ?child rdfs:label ?childName .
  FILTER (CONTAINS(LCASE(?childName), ""charles augustus, hereditary grand duke of saxe-weimar-eisenach""))
  
  OPTIONAL { 
    ?child dbo:royalTitle ?title .
    FILTER EXISTS { ?title }
  }

  ?child dbp:dateOfBirth ?dob .
  FILTER (?dob >= ""1844-01-01""^^xsd:date && ?dob <= ""1894-12-31""^^xsd:date)
}
ORDER BY ?childName
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
528,3,train,"Give me the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?event WHERE {
  ?event a dbo:Event .
  ?event dbo:type ?eventType .
  ?eventType rdfs:subClassOf* dbo:SocietalEvent .
  ?event dbo:country dbr:Chile .
}
```",1,2,2,1,1,3,3,71,0,0,34,0,0.0,0
392,5,train,"Give me the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person dbo:birthPlace ?residence .
  FILTER EXISTS { ?residence rdf:type dbo:Settlement }
  FILTER EXISTS { ?residence dbp:country ""Italy"" }
  ?person rdfs:label ""Sebastiano Bianchetti""@en .
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
801,10,train,Give me the associated musical artist of Chris Taylor (music producer) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person a dbo:MusicProducer ;
          foaf:name ""Chris Taylor"" .
  ?person dbo:associatedMusicalArtist ?artist .
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
303,10,train,"Give me the entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
  ?valle a dbo:Settlement ;
         dbo:locatedInCountry ?country .
  FILTER (str(?valle) = ""El Valle de Antón"")
}
```",2,3,3,2,1,2,3,28,0,0,991,0,0.0,0
54,2,train,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?predecessor
WHERE {
  ?person a dbo:Monarch ;
          rdfs:label ""Ameitta Thiri Maha Dhamma Dewi of Ava""@en .
  
  OPTIONAL {
    ?person dbo:predecessor ?predecessor .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
747,11,train,Give me the person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Pavlo Khudzik's birth date
  VALUES (?pavloKhudzik) { dbr:Pavlo_Khudzik }
  
  ?pavloKhudzik dbo:birthday ?birthDate .
  
  # Find other persons born on the same date
  ?person a dbo:Person ;
          dbo:birthday ?sameBirthDate .
  
  FILTER (?sameBirthDate = ?birthDate)
  FILTER (?person != ?pavloKhudzik) # Exclude Pavlo Khudzik himself
}
ORDER BY ?person",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
404,16,train,"Who is the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild
WHERE {
  ?parent dbo:spouse ?spouse .
  FILTER (EXISTS { ?parent dbp:father ""Prince George William of Hanover""@en } || 
          EXISTS { ?parent dbp:mother ""Prince George William of Hanover""@en }) .

  ?parent dbo:child ?child .
  ?child a dbo:Monarch .

  ?child dbo:child ?grandchild .
  ?grandchild a dbo:Monarch .
}
```

This query does the following:
- Identifies `?parent` as either the father or mother of Prince George William of Hanover.
- Ensures that `?parent` has children (`?child`) who are royals (instances of `dbo:Monarch`).
- Finds grandchildren (`?grandchild`) of these royal children, ensuring they too are royals.",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
421,1,train,Give me the native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?language
WHERE {
  dbr:Socialist_Federal_Republic_of_Yugoslavia dbo:officialLanguage ?language .
}
```",1,1,2,1,1,2,3,28,0,0,5399,0,0.0,0
498,5,train,"Give me the band of the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band (GROUP_CONCAT(?organizationLabel; separator="", "") AS ?organizations)
WHERE {
  VALUES ?solaceOfRequiem { dbr:Solace_of_Requiem }
  
  ?solaceOfRequiem dbo:associatedBand ?band .
  ?band a dbo:MusicalGroup .

  OPTIONAL {
    ?band dbo:member ?organization .
    ?organization a dbo:Organization ;
                 rdfs:label ?organizationLabel .
  }

  FILTER EXISTS { ?band dbo:member ?organization . }
}
GROUP BY ?band
ORDER BY ?band",2,4,3,2,1,2,2,9,0,0,11,0,0.0,0
427,17,train,"Who is the person born, that is an office holder and a politician, as the birth name of Romano Prodi?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person foaf:name ""Romano Prodi"" .
  ?person a dbo:OfficeHolder ;
          a dbo:Politician .
}",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
360,4,train,"Give me the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Winnie Madikizela-Mandela""@en .
  
  ?person dbo:placeOfBirth ?birthPlace .
  ?person dbo:dateOfDeath ?dateOfDeath .

  OPTIONAL { 
    ?person dbo:deathPlace ?deathPlace .
    ?deathPlace a dbo:Settlement .
  }
}
```",1,2,2,1,1,2,3,28,0,0,2,0,0.0,0
547,11,train,Give me the resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childName ?restingPlace WHERE {
  ?james a dbo:PropertyDeveloper ;
         foaf:name ""James Burton""@en .
  
  ?james dbo:child ?child .

  ?child foaf:name ?childName .

  OPTIONAL { 
    ?child dbo:deathPlace ?restingPlace .
  }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
617,8,train,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfFather WHERE {
  dbr:Richeza_of_Poland,_Queen_of_Hungary dbo:father ?father .
  
  ?father dbo:parent ?parentOfFather .
  
  ?parentOfFather rdf:type dbo:Monarch .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
391,10,train,"Give me the actor of All About the Andersons and native of Compton, California.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?actor dbo:nativePlace dbr:Compton,_California .

  FILTER (str(?movie) = ""All About the Andersons"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,9,train,Give me the associated musical artist of Red Tide (band) and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?associatedArtist
WHERE {
  VALUES ?band { 
    dbr:Red_Tide_(band) 
    dbr:S.A._Slayer 
  }
  
  OPTIONAL {
    ?band dbo:associatedBand ?artist.
    ?artist a dbo:MusicalArtist.
    BIND(?artist AS ?associatedArtist)
  }

  OPTIONAL {
    ?band dbp:associatedBand ?artist.
    ?artist a dbo:MusicalArtist.
    BIND(?artist AS ?associatedArtist)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
547,10,train,Give me the resting place of James Burton (Egyptologist) and resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?placeOfBurial
WHERE {
  VALUES (?person ?name) {
    (dbo:James_Burton_(Egyptologist) ""James Burton (Egyptologist)"")
    (dbo:Alan_Cunningham_(explorer) ""Alan Cunningham"")
  }
  
  ?person rdfs:label ?name ;
          dbo:placeOfBurial ?placeOfBurial .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,4,train,"Give me the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:isOrganizationOf dbr:Sicily ;
         rdfs:label ?partyName .
  
  FILTER (lang(?partyName) = 'en')
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
915,0,train,"Give me the resident of Springfield, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resident
WHERE {
  ?resident dbo:residenceLocation dbr:Springfield_(Illinois) .
}
```

### Explanation

- **Prefixes**: 
  - `dbo:` is used for DBpedia ontology classes and properties.
  - `dbr:` is used for DBpedia resources.

- **SELECT Clause**: We are selecting the variable `?resident` which represents individuals residing in Springfield, Illinois.

- **WHERE Clause**:
  - The triple pattern `?resident dbo:residenceLocation dbr:Springfield_(Illinois) .` captures the relationship where a person (`?resident`) has a residence location of Springfield, Illinois. 

This query assumes that DBpedia uses `dbo:residenceLocation` to denote residency and that Springfield, Illinois is represented as `dbr:Springfield_(Illinois)`.",1,1,2,1,1,3,2,20,0,0,15,0,0.0,0
294,9,train,"Give me the resting place of Edwin A. Keeble and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?keeblesRestingPlace ?nashvilleEntity
WHERE {
  # Find Edwin A. Keeble's resting place
  OPTIONAL {
    ?keeblesRestingPlace dbo:placeOfBurial dbr:Edwin_A._Keeble .
    ?keeblesRestingPlace rdfs:label ?restingPlaceLabel .
    FILTER (lang(?restingPlaceLabel) = 'en')
  }

  # Find an entity in Nashville, Tennessee
  OPTIONAL {
    ?nashvilleEntity dbo:location dbr:Nashville,_Tennessee .
    ?nashvilleEntity rdfs:label ?entityLabel .
    FILTER (lang(?entityLabel) = 'en')
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
9,5,train,"Give me the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?medal a dbo:Award .
  ?medal rdfs:label ""Royal Medal""@en .
  ?medal dbo:awardedBy ?award .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
754,1,train,Give me the parent of May Hnin Thwe-Da.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?person a dbo:Person ;
          foaf:name ""May Hnin Thwe-Da""@en .
  OPTIONAL { 
    ?person dbo:parent ?parent .
  }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
77,7,train,Give me the war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war
WHERE {
  # Assuming 'Golden Weapon for Bravery' has a specific DBpedia resource identifier
  dbr:Golden_Weapon_for_Bravery dbo:recipient ?recipient .
  
  OPTIONAL {
    ?recipient dbo:memberOf ?militaryUnit .
    ?militaryUnit dbo:participatedIn ?war .
  }
}
```",2,2,3,2,1,3,2,20,0,0,22,0,0.0,0
142,3,train,Give me the actor of Papa wa Newscaster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName
WHERE {
  ?movie dbo:title ""Papa wa Newscaster""@ja .
  ?movie dbo:starring ?actor .
  ?actor foaf:name ?actorName .
}
```",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
115,3,train,Who is the awardee of National Order of Scientific Merit?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?recipientName
WHERE {
  ?award rdfs:label ""National Order of Scientific Merit""@en .
  ?award dbo:recipient ?recipient .
  ?recipient rdfs:label ?recipientName .
}
```",1,1,2,1,1,2,2,9,0,0,9,0,0.0,0
312,4,train,Give me the entity in Italy and entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityLabel
WHERE {
  ?entity dbo:country dbr:Italy .
  ?entity dbp:province dbr:Province_of_Bergamo .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

This query does the following:
- Selects distinct entities (`?entity`) that are associated with both ""Italy"" and ""Province of Bergamo.""
- Uses `dbo:country` to link entities to Italy.
- Uses `dbp:province` to link entities specifically to the Province of Bergamo.
- Utilizes a service call to fetch labels in the preferred language.",2,2,3,1,2,2,2,9,0,0,228,0,0.0,0
754,2,train,Give me the parent of Min Linka.,SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  dbr:Min_Linka dbo:partOf ?parent .
}
```

This query does the following:
- Uses `dbo:partOf` to find the parent entity of ""Min Linka.""
- Retrieves the parent entity and assigns it to the variable `?parent`.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
365,5,train,"Give me the band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:occupation ?occupation .
  
  FILTER (
    ?occupation IN (dbr:Vocalist, dbr:Musician, dbr:Songwriter)
  )
  
  ?person dbo:band ?band .
}
```

This query selects distinct bands associated with individuals who are musical artists and have occupations as a vocalist, musician, or songwriter.",2,4,3,2,1,2,2,9,0,0,2,0,0.0,0
44,4,train,Give me the band member of Undertow (band) and band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?member
WHERE {
  {
    VALUES ?band { 
      dbr:Undertow_(band) 
      dbr:Sledgeback 
    }
    ?band dbo:bandMember ?member .
  }
}
ORDER BY ?band ?member
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
528,14,train,Give me the force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?rank
WHERE {
  ?person foaf:name ""Narciso Campero Leyes"" .
  OPTIONAL { ?person dbo:militaryRank ?rank . }
}
```

This query selects the person and their military rank, if available, based on the birth name.",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
994,8,train,"Who is the person born, that is a musical artist, as Donald Maynard Dokken?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  # Get birth details of Donald Maynard Dokken
  VALUES (?birthDate ?birthPlace) {
    { dbr:Donald_Dokken dbo:birthday ?birthDate . }
    { dbr:Donald_Dokken dbo:birthPlace ?birthPlace . }
  }

  # Find other persons with the same birth date and place who are musical artists
  ?person a dbo:MusicalArtist .
  ?person dbo:birthday ?birthDate .
  ?person dbo:birthPlace ?birthPlace .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
435,10,train,Give me the region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region
WHERE {
  ?chiefdom rdfs:label ""Bombali Shebora Chiefdom""@en .
  OPTIONAL { 
    ?chiefdom dbo:timeZone ?timezone .
    ?timezone dbo:region ?region .
  }
}
```",2,2,3,2,1,2,3,28,0,0,2484,0,0.0,0
996,4,train,Who is the native of Palestine (region)?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
  
  # Check if the person's birthplace is Palestine
  ?person dbo:birthPlace dbr:Palestine .

  UNION

  # Alternatively, check if the person has Palestinian nationality
  ?person dbo:nationality dbr:Palestinian .
}
ORDER BY ?name
```",1,1,2,1,1,3,2,20,0,0,47,0,0.0,0
365,2,train,"Give me the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Artist .
  ?person a dbo:MusicalArtist .

  { ?person dbo:occupation dbr:Vocalist . }
  UNION
  { ?person dbo:occupation dbr:Musician . }
  UNION
  { ?person dbo:occupation dbr:Singer-songwriter . }

}
```

### Explanation

- **PREFIX**: Define common prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT ?person**: Retrieve unique individuals who match the criteria.
- **WHERE Clause**:
  - `?person a dbo:Artist` ensures the individual is an artist.
  - `?person a dbo:MusicalArtist` ensures they are also recognized as a musical artist.
  - The UNION block checks if the person has any of the specified occupations (Vocalist, Musician, Singer-songwriter).

This query will return individuals who are both artists and musical artists, fulfilling at least one of the roles mentioned.",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
314,7,train,Give me the person deceased at Madrid and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:deathPlace dbr:Madrid .
  ?person dbo:role dbr:Spanish_Civil_War_Commander .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
232,7,train,"Give me the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:nationality dbr:France .
  ?person dbo:occupation ?occupation .
  
  FILTER (
    (CONTAINS(LCASE(?occupation), ""politician"") || 
     CONTAINS(LCASE(?occupation), ""office holder""))
  )
  
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,3,2,1,1,3,3,71,0,0,270,0,0.0,0
547,9,train,Give me the resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?restingPlace
WHERE {
  VALUES ?person { 
    dbr:James_Burton_(Egyptologist) 
    dbr:Simon_Cadell 
  }
  
  ?person dbo:finalRestingPlace ?restingPlace .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
429,2,train,Who is the father of Martha Johnson Patterson?,SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  ?person foaf:name ""Martha Johnson Patterson""@en .
  ?person dbo:father ?father .
}
```

This query does the following:
- Uses `foaf:name` to identify Martha Johnson Patterson.
- Utilizes `dbo:father` to find her father.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
328,9,train,Give me the awardee of Order of Suvorov and commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
  ?person dbo:award dbr:Order_of_Suvorov .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en') .

  OPTIONAL {
    ?person dbo:militaryCommanderOf dbr:Eastern_Front_(World_War_II) .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
747,15,train,"Give me the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate
WHERE {
  ?person a dbo:Athlete .
  ?person dbo:sport dbr:Soccer .
  ?person dbo:birthPlace dbr:Zolotonosha .
  ?person dbp:birthday ?birthDate .
}
```

This query does the following:
- Selects individuals who are athletes (`dbo:Athlete`) and specifically play soccer (`dbo:sport` linked to `dbr:Soccer`).
- Filters these individuals by their birthplace being Zolotonosha (`dbo:birthPlace` linked to `dbr:Zolotonosha`).
- Retrieves the person's name and birth date.",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
435,6,train,Give me the territory administered from Reykjavík and region of Greenwich Mean Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory ?region
WHERE {
  ?territory dbo:capital dbr:Reykjavík .
  OPTIONAL { ?territory dbo:timeZone ?tz . }
  
  ?tz rdfs:label ""GMT""@en .
  
  ?territory dbo:countryRegion ?region .
}
```

### Explanation

- **PREFIX**: Define common prefixes for DBpedia ontology and resources.
- **SELECT**: Choose `?territory` (the territory administered from Reykjavík) and `?region` (its region).
- **WHERE**:
  - Find territories where Reykjavík is the capital.
  - Use an optional clause to associate a time zone with the territory, filtering for GMT.
  - Retrieve the country or region associated with the territory.

This query aims to find territories administered from Reykjavík and check if they fall under the GMT time zone, then return their regions.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
339,2,train,Who is the predecessor of Frederick VIII of Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessorName
WHERE {
  ?frederickVIII dbo:predecessor ?predecessor .
  ?predecessor rdfs:label ?predecessorName .
  
  FILTER (lang(?predecessorName) = 'en')
  
  VALUES ?frederickVIII { <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> }
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
142,2,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?jst a dbo:TimeZone ;
       rdfs:label ""Japan Standard Time""@en .
  
  OPTIONAL { 
    ?region dbo:timeZone ?jst .
  }
}
```

### Explanation

- **Prefixes**: `dbo` for DBpedia ontology and `dbr` for resources.
- **SELECT Clause**: We are interested in the region associated with JST.
- **WHERE Clause**:
  - Identify the entity representing Japan Standard Time using its label.
  - Use an optional pattern to find regions linked to this time zone.

This query will return the region(s) associated with Japan Standard Time by leveraging DBpedia's structured data on time zones and their corresponding regions.",1,1,2,1,1,2,2,9,0,0,2255,0,0.0,0
747,16,train,"Who is the writer of the work, that is a song, of Amba Shepherd?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?song dbo:author dbr:Amba_Shepherd .
  ?song dbo:composer ?writer .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
30,6,train,Give me the professional in the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  ?person dbo:profession ?professional .
  FILTER (str(?person) = ""Édouard Alphonse James de Rothschild"")
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
55,0,train,Give me the band member of Guns N' Roses.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName
WHERE {
  ?band dbr:Guns_N%27_Roses ;
        dbo:member ?person .
  ?person foaf:name ?memberName .
}
```",1,1,2,1,1,2,3,28,0,0,55,0,0.0,0
701,6,train,Give me the child of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?parent dbo:givenName ""Ramesses""@en .
  ?parent dbo:familyName ""II""@en .
  ?parent dbo:birthPlace ?place . # Additional filter to ensure we have the correct Ramesses II
  ?parent dbo:child ?child .
}
```

### Explanation:

- **PREFIX**: We define a prefix for DBpedia ontology (`dbo`) to simplify property URIs.
- **SELECT Clause**: We specify `?child` as the variable we want to retrieve, representing the children of Ramesses II.
- **WHERE Clause**:
  - We identify Ramesses II using his given name and family name. Additional filters like birthplace can help ensure accuracy if there are multiple individuals with similar names.
  - The triple pattern `?parent dbo:child ?child` captures the relationship where `?parent` is Ramesses II, and `?child` represents his children.",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
827,7,train,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Maria Pavlovna and her child
  dbr:Grand_Duchess_Maria_Pavlovna_of_Russia (dbo:spouse|dbo:child) ?child .
  
  # Child of Maria Pavlovna and their child (the grandchild)
  ?child dbo:child ?grandchild .

  # Ensure the grandchild is royalty
  ?grandchild a dbo:Monarch ;
              rdfs:label ?name .
}
```",2,3,3,2,1,3,2,20,0,0,6,0,0.0,0
528,1,train,Give me the war of Orozimbo Barbosa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?warLabel WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Orozimbo Barbosa""@en .
  
  ?person dbo:participatedIn ?event .
  ?event a dbo:Battle ; 
         rdfs:label ?war .

  SERVICE <http://dbpedia.org/sparql> {
    ?war rdfs:label ?warLabel .
    FILTER (lang(?warLabel) = 'en')
  }
}
```

### Explanation

- **PREFIX**: Defines common namespaces for DBpedia.
- **SELECT DISTINCT**: Ensures unique results are returned.
- **WHERE Clause**:
  - Identifies Orozimbo Barbosa as a military person.
  - Finds events (wars/battles) they participated in.
  - Uses `SERVICE` to fetch English labels for wars.

This query aims to retrieve distinct wars associated with Orozimbo Barbosa, providing their names or identifiers.",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
487,10,train,"Give me the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person WHERE {
  ?person dbo:birthName ""Phil Scott"" .
  ?person rdf:type dbo:SoccerPlayer .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
303,1,train,Give me the entity in Panama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity
WHERE {
  ?entity dbo:country dbr:Panama .
}
```",1,1,2,1,1,2,3,28,991,0,0,1.0,1.0,1.0
492,8,train,"Give me the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capitalName
WHERE {
  dbr:Algeria dbo:capital ?capital .
  ?capital a dbo:PopulatedPlace ;
           rdfs:label ?capitalName .
  FILTER (LANG(?capitalName) = ""en"")
}
```",1,2,2,1,1,3,3,71,0,1,1,0.0,0.0,0
179,7,train,Give me the person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Sirikit's birth name
  dbp:Sirikit dbo:birthName ?sirikitBirthName .

  # Find another person with the same birth name
  ?person dbo:birthName ?sirikitBirthName .
  
  FILTER(?person != dbp:Sirikit) # Ensure it is not Sirikit herself
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
391,5,train,Who is the spouse of Sherry Hormann?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?person dbo:spouse ?spouse .
  ?person foaf:name ""Sherry Hormann""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
963,2,train,Give me the time zone of Herzegovina-Neretva Canton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timezone
WHERE {
  dbr:Herzegovina-Neretva_Canton dbo:timeZone ?timezone .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
232,14,train,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?native
WHERE {
  # Identify Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:residence ?residence .

  # Ensure the residence is a settlement and British
  ?residence rdf:type ?settlementType .
  FILTER (?settlementType IN (dbr:Settlement, dbr:City, dbr:Town)) .
  
  OPTIONAL { 
    ?residence dbo:nationality dbr:United_Kingdom .
  }

  # Find natives of the residence
  ?native dbo:nativePlace ?residence .
}
```",2,4,3,2,1,3,3,71,0,0,9121,0,0.0,0
77,0,train,Give me the war of Alexander Chechenskiy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  ?person rdfs:label ""Alexander Chechenskiy""@en .
  ?person dbo:nationality ?nationality .
  
  OPTIONAL { 
    ?event dbo:agent ?person ;
           a dbo:MilitaryConflict ;
           rdfs:label ?war .
    ?event dbo:description ?description .
  }
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
827,8,train,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?father WHERE {
  ?charlesAugustus a dbo:HereditaryGrandDuke ;
                   foaf:name ""Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach""@en .
  
  ?child dbo:childOf ?charlesAugustus ;
         rdf:type dbo:RoyalFamilyMember .

  ?father dbo:fatherOf ?child .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
115,0,train,Give me the alma mater of Vladimir Cerrón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater
WHERE {
  dbr:Vladimir_Cerrón dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
16,4,train,Who is the person born as Ted Martin McGinley?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Ted Martin McGinley"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
44,2,train,Give me the band of John Pettibone.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band
WHERE {
  ?person foaf:name ""John Pettibone"" .
  ?person dbo:member ?band .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
427,7,train,Give me the birth name of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Romano Prodi""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
488,7,train,"Who is the spouse, that is a royalty, of Tokugawa Masako?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse WHERE {
  ?masako a dbo:Person ;
          foaf:name ""Tokugawa Masako""@en .
  
  ?masako dbo:spouse ?spouse .

  FILTER EXISTS { 
    ?spouse rdf:type dbo:Royalty .
  }
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
701,17,train,"Give me the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherName
WHERE {
  ?battle dbp:battleOf ""Battle of Perire"" .
  ?commander dbo:commanderOf ?battle ;
             a dbo:RoyalPerson ; # Assuming 'RoyalPerson' is the class for royalty
             dbo:father ?father .

  ?father rdfs:label ?fatherName .
  FILTER (lang(?fatherName) = ""en"")
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
959,12,train,Give me the manager of 2013 Júbilo Iwata season and native of Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName WHERE {
  # Identify the team and its manager for the 2013 season
  ?team dbo:season ""2013"" .
  ?team dbo:manager ?manager .

  # Ensure the manager is native of Japan
  ?manager dbp:nationality dbr:Japan .

  # Get the name of the manager
  ?manager rdfs:label ?managerName .
  
  FILTER (lang(?managerName) = ""en"")
  
  # Specify the team as Júbilo Iwata
  VALUES ?team { dbr:Júbilo_Iwata }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
232,9,train,Give me the actor of Dog Soldiers (film) and child of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?child 
WHERE {
  # Find actor of ""Dog Soldiers"" (film)
  ?movie dbo:title ""Dog Soldiers""@en .
  ?movie dbo:actor ?actor .

  # Find child of Jon Pertwee
  dbr:Jon_Pertwee dbo:child ?child .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,4,train,"Who is the child, that is a royalty, of Seleucus II Callinicus?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child
WHERE {
  ?parent rdfs:label ""Seleucus II Callinicus""@en .
  ?parent dbo:child ?child .

  FILTER EXISTS { 
    ?child rdf:type dbo:RoyalFamilyMember .
  }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
294,3,train,"Who is the awardee, that is a politician, of Distinguished Service Medal (U.S. Army)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee WHERE {
  ?medal a dbo:Award .
  ?medal rdfs:label ""Distinguished Service Medal (U.S. Army)""@en .
  
  ?recipient dbo:award ?medal .
  ?recipient rdf:type dbo:Politician .

  ?recipient foaf:name ?awardee .
}
```",1,2,2,1,1,2,3,28,0,12,11,0.0,0.0,0
547,16,train,Give me the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  ?show dbo:starring dbr:Emily_Richard .
  ?show dbo:starring ?actor .
  FILTER(?actor != dbr:Emily_Richard)
}
```",2,2,3,2,1,3,3,71,19,0,3,1.0,0.8636363636363636,0.9268292682926829
659,6,train,"Give me the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?warName
WHERE {
  ?regiment a dbo:MilitaryUnit ;
            rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  
  ?regiment dbo:participatedIn ?war .

  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:Event ;
       rdfs:label ?warName .
}
```",1,3,2,1,1,3,3,71,0,0,19,0,0.0,0
182,0,train,Give me the war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warName WHERE {
  ?person a dbo:MilitaryPerson .
  ?person foaf:name ""Mahesh Senanayake""@en .
  
  OPTIONAL { 
    ?person dbo:servedInMilitaryOrganization ?organization .
    ?organization dbo:participatedIn ?event .
    ?event rdf:type dbo:War .
    ?event rdfs:label ?warName .
    FILTER (lang(?warName) = ""en"")
  }
}
```

### Explanation

- **PREFIX**: Define common prefixes for DBpedia ontology and resources.
- **SELECT**: Choose the label of the war (`?warName`) as the output.
- **WHERE Clause**:
  - Identify `Mahesh Senanayake` as a military person using properties like `foaf:name`.
  - Use an optional pattern to find any military organization he served in and any wars that organization participated in.

This query assumes Mahesh Senanayake is listed under DBpedia with relevant military information. Adjustments might be needed based on actual data availability.",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
54,14,train,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
             foaf:name ""Thihapate of Mohnyin"" .

  # Identify the child of Thihapate who is an office holder and royalty
  ?child dbo:parent ?thihapate ;
         a dbo:OfficeHolder, dbo:Royalty .

  # Find the predecessor of that child
  ?predecessor dbo:successor ?child .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
339,8,train,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father
WHERE {
  ?grandDuchess rdf:type dbo:Person ;
                foaf:name ""Elena Vladimirovna of Russia""@en .
  
  ?child dbo:parent ?grandDuchess ;
         rdf:type dbo:Person .

  ?child foaf:parent ?father .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
77,10,train,"Who is the mayor of the territory administered, that is an organisation, from Warsaw?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayorName
WHERE {
  ?organisation a dbo:Organisation ;
                dbo:location dbr:Warsaw .
  
  ?territory dbo:administrativeAuthority ?organisation ;
             dbo:mayor ?mayor .

  ?mayor foaf:name ?mayorName .
}
```

This query does the following:
- Selects the name of the mayor (`?mayorName`).
- Identifies organisations located in Warsaw.
- Finds territories administered by these organisations and their respective mayors.",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
318,3,train,Give me the profession of Robert Xavier Rodriguez.,SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?occupation
WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Robert Xavier Rodriguez""@en .
  ?person dbo:occupation ?occupation .
}
```",1,1,2,1,1,2,2,9,1,1,1,0.5,0.5,0.5
963,7,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country
WHERE {
  ?country a dbo:Country .
  ?country dbp:timeZone ""Central European Time"" .
}
```",2,3,3,2,1,3,2,20,0,0,173261,0,0.0,0
435,4,train,Give me the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZone
WHERE {
  dbr:Bombali_Shebora_Chow.html ?p ?o .
  FILTER(?p = dbo:timeZone)
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
488,9,train,Give me the death place of Tokugawa Ieyasu and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceTokugawaIeyasu ?birthPlaceEnomotoTakeaki
WHERE {
  # Retrieve the death place of Tokugawa Ieyasu
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlaceTokugawaIeyasu .
  
  # Retrieve the birth place of Enomoto Takeaki
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceEnomotoTakeaki .
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
534,7,train,"Give me the birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childBirthPlace
WHERE {
  # Identify Desmond FitzGerald (politician)
  dbr:Desmond_FitzGerald_(Irish_politician) dbo:spouse ?parent1 .
  OPTIONAL { dbr:Desmond_FitzGerald_(Irish_politician) dbo:spouse ?parent2 . }
  
  # Find the child of Desmond FitzGerald
  ?child dbo:parent ?parent1 ;
         OPTIONAL { dbo:parent ?parent2 . }

  # Ensure the child is a politician and an office holder
  ?child dbo:occupation dbr:Politician ;
         dbo:officeHolder true .

  # Retrieve the birthplace of this child
  ?child dbo:birthPlace ?childBirthPlace .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
285,4,train,Give me the award of Stan Lee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Stan_Lee dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,4,5,0.0,0.0,0
534,2,train,"Who is the native, that is a politician, of Essex?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name
WHERE {
  ?person dbo:birthPlace dbr:Essex .
  ?person dbo:occupation dbr:Politician .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,2,2,1,1,3,2,20,0,0,89,0,0.0,0
161,14,train,"Give me the commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?commander WHERE {
  ?event dbo:agent dbr:Emilio_Mola .
  ?event dbo:commander ?commander .
}
```",2,3,3,2,1,3,3,71,0,0,85,0,0.0,0
820,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?name WHERE {
  ?professional a dbo:Person .
  ?professional dbo:profession dbr:Medicine . # Assuming ""medicine"" as the profession
  ?professional dbo:residence dbr:Paris .   # Assuming ""Paris"" as the location
  ?professional foaf:name ?name .
}
```",1,1,2,1,1,3,2,20,0,0,39640,0,0.0,0
314,4,train,Give me the award of Sergei Makovetsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Sergei Makovetsky""@en .
  
  OPTIONAL { 
    ?person dbo:honoraryTitle ?award .
  }
  
  FILTER (lang(?award) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
404,17,train,Who is the father of the spouse of Princess Victoria Louise of Prussia?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?father WHERE {
  ?princess a dbo:Princess ;
            foaf:name ""Victoria Louise of Prussia""@en .
  
  ?spouse dbo:spouseOf ?princess ;
          foaf:parent ?father .
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
485,6,train,Give me the entity in United Kingdom and birth place of Thomas Warner (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?birthPlace
WHERE {
  ?person a dbo:Poet ;
          foaf:name ""Thomas Warner"" ;
          dbo:birthPlace ?birthPlace .
  
  FILTER EXISTS { 
    ?birthPlace dbo:country dbr:United_Kingdom .
  }
}
```

This query does the following:
- Selects entities and their birth places.
- Identifies Thomas Warner as a poet with a specific birth place.
- Filters to ensure the birth place is in the United Kingdom.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
312,3,train,Give me the birthplace of Giorgio Grigolli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Giorgio Grigolli"" .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
232,8,train,"Give me the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person foaf:name ""Sylvie Bermann""@en .
  ?person dbo:residence ?residence .

  FILTER EXISTS { 
    ?residence rdf:type dbo:Settlement .
  }

  FILTER EXISTS {
    ?residence dbo:country dbr:United_Kingdom .
  }
}
```",1,3,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
747,4,train,Give me the birth date of Pavlo Khudzik.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthDate
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Pavlo Khudzik""@en .
  ?person dbo:birthDate ?birthDate .
}
```

### Explanation:

- **Prefixes**: 
  - `dbo:` is used for DBpedia ontology properties.
  - `dbp:` is used for DBpedia properties, though not directly needed here.

- **SELECT Clause**:
  - We are selecting the birth date (`?birthDate`).

- **WHERE Clause**:
  - The pattern matches a person who is of type `dbo:Person`.
  - It uses `foaf:name` to match the name ""Pavlo Khudzik"".
  - It retrieves the birth date using `dbo:birthDate`.

This query should effectively retrieve the birth date of Pavlo Khudzik from DBpedia.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
197,1,train,Give me the birthplace of George Lusztig.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Person ;
          foaf:name ""George Lusztig""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
312,1,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Italy .
}
```

This query selects entities (`?entity`) that are associated with Italy through the `dbo:country` property.",1,1,2,1,1,2,2,9,0,0,13092,0,0.0,0
9,17,train,"Give me the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://dbpedia.org/property/nickname> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?nickname
WHERE {
  ?entity a dbo:EducationalInstitution ;
          dbo:location dbr:Northern_Ireland ;
          a dbo:Organization .
  OPTIONAL { ?entity rdfs:label ?nickname FILTER (lang(?nickname) = 'en') }
}
```

This query does the following:
- Uses `PREFIX` to define common namespaces for DBpedia.
- Selects entities that are both an educational institution and an organization located in Northern Ireland.
- Optionally retrieves the nickname of these entities, ensuring it is in English.",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
16,17,train,Give me the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alumnus ?birthName
WHERE {
  ?alumnus dbo:almaMater dbr:Ohio_State_University .
  OPTIONAL { ?alumnus foaf:name ?birthName . }
}
```",2,2,3,2,1,3,3,71,4,903,86,0.004410143329658214,0.044444444444444446,0.00802407221664995
429,4,train,Give me the country of 77th Ohio Infantry Regiment and administration of Andrew Johnson.,SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityLabel ?country ?administrationStart ?administrationEnd
WHERE {
  {
    # Query for the country of the 77th Ohio Infantry Regiment
    dbr:77th_Ohio_Infantry_Regiment dbo:country ?country .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  } UNION {
    # Query for Andrew Johnson's administration details
    dbr:Andrew_Johnson dbo:presidencyStartYear ?administrationStart ;
                       dbo:presidencyEndYear ?administrationEnd .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
360,2,train,Give me the reference to Manfred Mann.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resource WHERE {
  ?resource rdfs:label ""Manfred Mann""@en .
  FILTER (regex(str(?resource), ""Manfred_Mann""))
}
```

### Explanation:

- **Prefixes**: 
  - `dbo:` is used for DBpedia ontology classes.
  - `dbr:` is used for DBpedia resources.

- **SELECT Clause**: We are selecting the resource (`?resource`) which represents Manfred Mann.

- **WHERE Clause**:
  - The triple pattern `?resource rdfs:label ""Manfred Mann""@en .` matches resources labeled as ""Manfred Mann"" in English.
  - The `FILTER` clause ensures that we specifically target the resource related to ""Manfred Mann,"" filtering out unrelated entities with similar names.

- **Note**: DBpedia often uses underscores in URIs for spaces, hence the regex filter to ensure accuracy.",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
487,5,train,"Give me the person born, that is a soccer player, as Philip Brian Scott.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate
WHERE {
  ?person a dbo:SoccerPlayer .
  ?person foaf:name ""Philip Brian Scott"" .
  ?person dbo:birthDate ?birthDate .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
994,6,train,"Give me the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member WHERE {
  # Meshuggah's band members
  dbr:Meshuggah dbo:bandMember ?member .
  
  OPTIONAL { 
    ?member a dbo:Band . 
  }
  OPTIONAL { 
    ?member a dbo:MusicalGroup . 
  }
  OPTIONAL { 
    ?member a dbo:Organization . 
  }

  FILTER (
    EXISTS { ?member a dbo:Band } ||
    EXISTS { ?member a dbo:MusicalGroup } ||
    EXISTS { ?member a dbo:Organization }
  )
}",1,4,2,1,1,3,3,71,0,0,6,0,0.0,0
427,8,train,"Who is the person born, that is an office holder and a politician, as Romano Antonio Prodi?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  # Find Romano Prodi's birthplace
  dbr:Romano_Prodi dbo:birthPlace ?birthPlace .

  # Find other persons with the same birthplace, who are office holders and politicians
  ?person a dbo:Politician ;
          dbo:officeHolder ?office ;
          dbo:birthPlace ?birthPlace .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
747,13,train,Give me the band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  ?song dbo:title ""Apollo"" .
  ?song dbo:artist dbr:Hardwell .
  
  ?lyricsBy dbo:lyrics ?song .
  
  OPTIONAL { 
    ?lyricsBy dbo:band ?band .
  }
}
```

This query does the following:
- Selects songs with the title ""Apollo"" by Hardwell.
- Identifies the writer(s) of these lyrics using `dbo:lyrics`.
- Optionally retrieves the band associated with the writer.",2,2,3,2,1,3,3,71,0,0,13,0,0.0,0
626,9,train,"Give me the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?force
WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Paris (1814)""@en .
  
  ?commander dbo:commanderOf ?battle .
  ?commander dbo:participatedIn ?force .
}
```",2,3,3,2,1,3,2,20,0,0,77,0,0.0,0
754,7,train,Give me the parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandparentName
WHERE {
  ?person rdfs:label ""May Hnin Htapi""@en .
  OPTIONAL {
    ?person dbo:parent ?parent .
    OPTIONAL {
      ?parent dbo:parent ?grandparent .
      ?grandparent rdfs:label ?grandparentName .
    }
  }
}
```",2,2,3,2,1,3,2,20,0,1,1,0.0,0.0,0
92,8,train,Give me the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a foaf:Person .
  ?person foaf:givenName ""Joseph"" .
  ?person foaf:familyName ""Furney"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
838,5,train,"Give me the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?band
WHERE {
  ?yugrupa a dbo:Band .
  ?yugrupa rdfs:label ""YU Grupa""@en .
  OPTIONAL { 
    ?yugrupa dbo:member ?band .
  }
}
```",1,2,2,1,1,3,2,20,0,0,8,0,0.0,0
659,11,train,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander
WHERE {
  # Arthur Wellesley, 1st Duke of Wellington
  dbr:Arthur_Wellesley,_1st_Duke_of_Wellington dbo:commanderInForce ?commander .
}
```

This query uses the `dbo:commanderInForce` property to find individuals who were commanded by Arthur Wellesley. The assumption here is that DBpedia has structured data about military command relationships.",2,2,3,2,1,3,3,71,0,0,175,0,0.0,0
963,8,train,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName ?administration
WHERE {
  # Find Sremski Karlovci's location in Serbia
  dbr:Sremski_Karlovci dbo:locatedIn dbr:Serbia .

  # Identify the current ruling political party in Serbia
  ?rulingParty a dbo:PoliticalParty ;
              dbo:governs dbr:Serbia ;
              rdfs:label ?partyName .
  
  # Find the administration associated with this ruling party
  OPTIONAL {
    ?administration dbo:headOfGovernment ?rulingParty ;
                    rdfs:label ?adminLabel .
  }
}
ORDER BY ?partyName
```",2,3,3,2,1,3,2,20,0,0,86,0,0.0,0
77,5,train,Who is the mayor of Congress Poland?,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?mayor
WHERE {
  ?congressPoland a dbo:AdministrativeRegion .
  ?congressPoland rdfs:label ""Congress Poland""@en .
  
  OPTIONAL {
    ?congressPoland dbo:headOfGovernment ?mayor .
  }
}",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
54,17,train,"Give me the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName
WHERE {
  # Identify Thihapate of Mohnyin
  dbr:Thihapate_of_Mohnyin a dbo:Person .

  # Find children of Thihapate of Mohnyin
  dbr:Thihapate_of_Mohnyin dbo:child ?child .
  
  # Ensure the child is an office holder and royalty
  ?child dbo:officeHolderOf ?office .
  ?child a dbo:Monarch .

  # Retrieve the name of the child
  ?child rdfs:label ?childName .
  FILTER (LANG(?childName) = 'en')
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
345,8,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team
WHERE {
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SoccerManager .
  ?person dbo:birthDate ""1978-09-15""^^xsd:date .
  
  OPTIONAL { ?person dbo:currentClub ?team . }
}
```

This query does the following:
- Filters individuals who are both `SoccerPlayer` and `SoccerManager`.
- Narrows down to those born on September 15, 1978.
- Attempts to retrieve their current club/team using an optional clause.",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
251,9,train,Give me the administration of Forza Italia (2013) and death place of Laura Mancinelli.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?deathPlace
WHERE {
  # Find administration of Forza Italia in 2013
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Forza Italia""@en .
  
  OPTIONAL {
    ?administration dbo:memberOf ?party ;
                    dbo:officeHolder ?leader .
    ?leader dbo:termStart ?startYear .
    FILTER (?startYear <= ""2013-12-31""^^xsd:date && 
            (?endYear > ""2013-01-01""^^xsd:date || NOT EXISTS { ?leader dbo:termEnd ?endYear }))
  }
  
  # Find death place of Laura Mancinelli
  dbr:Laura_Mancinelli dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
404,4,train,"Who is the person born, that is a royalty, as Princess Victoria Louise of Prussia?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?birthDate
WHERE {
  # Identify Princess Victoria Louise of Prussia's characteristics
  dbr:Princess_Victoria_Louise_of_Prussia 
    a dbo:Person ;
    dbo:royalTitle ?title .

  # Find other persons with similar royal titles
  ?person 
    a dbo:Person ;
    dbo:royalTitle ?title ;
    rdfs:label ?name ;
    foaf:birthDate ?birthDate .
  
  FILTER (lang(?name) = 'en')
}
ORDER BY ?birthDate
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
617,3,train,"Give me the child, that is a royalty, of Boleslaus I, Duke of Bohemia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childName WHERE {
  ?boleslausI dbo:child ?child .
  ?child rdf:type dbo:RoyalFamilyMember .
  ?child rdfs:label ?childName .
  
  FILTER (CONTAINS(LCASE(?childName), ""boleslaus i, duke of bohemia""))
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
92,5,train,Give me the actor of Return to Nuke 'Em High Volume 1.,SELECT ?result WHERE { <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor
WHERE {
  ?movie dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,19,0,0.0,0
345,7,train,Give me the figure known as the nickname of FC Vaduz.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nickname
WHERE {
  ?club rdfs:label ""FC Vaduz""@en .
  OPTIONAL { ?club foaf:nick ?nickname . }
  FILTER (lang(?nickname) = 'en')
}
```",2,2,3,2,1,3,2,20,0,3,1,0.0,0.0,0
959,7,train,"Who is the manager, that is a sports manager, of 1998 Kashima Antlers season?",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?manager
WHERE {
  ?season dbo:team <http://dbpedia.org/resource/Kashima_Antlers> .
  ?season dbo:year ""1998""^^xsd:gYear .
  ?season dbo:manager ?manager .
  ?manager a dbo:SportsManager .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
485,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label
WHERE {
  ?entity dbo:country dbr:United_Kingdom .
  OPTIONAL { ?entity rdfs:label ?label FILTER (lang(?label) = 'en') }
}
```

### Explanation

- **Prefixes**: `dbo` for DBpedia ontology and `dbr` for resources.
- **SELECT Clause**: Selects the entity and its label.
- **WHERE Clause**: 
  - The triple pattern `?entity dbo:country dbr:United_Kingdom` identifies entities that are associated with the United Kingdom as their country.
  - An optional clause is used to fetch labels in English for better readability.

This query will retrieve entities located in or associated with the United Kingdom, along with their labels if available.",1,1,2,1,1,2,3,28,0,0,42999,0,0.0,0
959,14,train,Give me the manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerLabel WHERE {
  ?person rdfs:label ""Takashi Sekizuka""@en .
  ?team dbo:member ?person .
  ?team dbo:coach ?manager .
  ?manager rdfs:label ?managerLabel .
  
  FILTER(LANG(?managerLabel) = 'en')
}
```

This query does the following:
- Uses `rdfs:label` to find Takashi Sekizuka.
- Identifies the team (`?team`) he is a member of using `dbo:member`.
- Finds the manager (`?manager`) of that team using `dbo:coach`.
- Retrieves the label (name) of the manager in English.",2,2,3,2,1,3,3,71,0,0,10,0,0.0,0
701,15,train,Give me the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child
WHERE {
  ?amunherkhepeshef rdf:type dbo:Person .
  ?amunherkhepeshef rdfs:label ""Amun-her-khepeshef""@en .

  ?spouse dbo:spouse ?amunherkhepeshef .
  
  ?child dbo:parent ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
963,6,train,Give me the entity in Serbia and administration of Serbian Progressive Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity
WHERE {
  ?entity dbo:country dbr:Srbija .
  ?entity dbo:headquarters ?admin .
  ?admin rdfs:label ""Serbian Progressive Party""@en .
}
```",2,2,3,1,2,3,2,20,0,0,84,0,0.0,0
528,17,train,Give me the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ?birthName .
  FILTER (str(?birthName) = ""Narciso Campero"")
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,7,train,Give me the reference to Rutger Jan Schimmelpenninck.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?reference
WHERE {
  ?person rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  OPTIONAL { ?person dbo:wikiPageID ?reference . }
  OPTIONAL { ?person rdf:about ?reference . }
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
421,0,train,Give me the band member of Senidah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  VALUES ?senidah { dbr:Senidah }
  
  ?senidah dbo:bandMember ?member .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
281,10,train,"Give me the war of New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war
WHERE {
  # Wars involving New Zealand Army
  ?nzWar dbo:participatingMilitaryUnit dbr:New_Zealand_Army .
  
  # Wars involving Beauchamp Seymour, 1st Baron Alcester
  ?beauchampWar dbo:participatingPerson dbr:Beauchamp_Seymour,_1st_Baron_Alcester .

  # Ensure the wars are the same
  FILTER (?nzWar = ?beauchampWar)
  
  BIND(?nzWar AS ?war)
}
ORDER BY ?war",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,7,train,Give me the death place of Laura Mancinelli and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace ?battleLocation
WHERE {
  ?mancinelli dbo:deathPlace ?deathPlace .
  FILTER (str(?mancinelli) = ""Laura Mancinelli"") .

  ?marengo dbp:location ?battleLocation .
  FILTER (str(?marengo) = ""Battle of Marengo"") .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
498,4,train,Give me the band of Malevolent Creation and band of Will Rahmer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?band
WHERE {
  VALUES ?subject { 
    dbr:Malevolent_Creation 
    dbr:Will_Rahmer 
  }
  
  OPTIONAL {
    ?subject dbo:band ?band .
  }

  OPTIONAL {
    ?band dbp:member ?entity .
  }
}
```

This query does the following:
- Uses `VALUES` to specify the subjects of interest (Malevolent Creation and Will Rahmer).
- Utilizes an `OPTIONAL` clause to find bands associated with these entities.
- Another `OPTIONAL` clause is used to list members of those bands, if available.",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
492,16,train,"Give me the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  ?battle a dbo:MilitaryConflict ;
          rdfs:label ""Battle of Verdun""@en .
  
  ?commander dbo:commanderOf ?battle .

  ?conflict dbo:participatedIn ?battle ;
            a dbo:War .

  BIND(?conflict AS ?war)
}
```",2,4,3,2,1,3,3,71,0,0,11,0,0.0,0
465,1,train,Give me the administration of Czech Pirate Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?position
WHERE {
  # Identify the Czech Pirate Party resource
  VALUES ?party { dbr:Czech_Pirate_Party }

  # Find individuals who hold an office or position within the party
  ?officeHolder dbo:memberOrOfficeHolderOfParty ?party .
  
  # Get details about the person holding the office
  ?officeHolder foaf:name ?person .

  # Optionally, get more specific information about their role/position if available
  OPTIONAL { 
    ?officeHolder dbo:positionHeld ?position .
  }
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
528,0,train,Give me the war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  ?person rdfs:label ""Irene Morales""@en .
  ?person dbo:memberOf ?organization .
  ?organization dbo:member ?war .
  
  OPTIONAL { 
    ?war dbo:description ?description .
  }
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
487,7,train,Give me the country of the administration of Patricia McCoy.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?v1 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?countryLabel
WHERE {
  ?person rdfs:label ""Patricia McCoy""@en .
  ?position dbo:agent ?person ;
            dbo:organization ?org .
  ?org dbo:country ?country .
  ?country rdfs:label ?countryLabel .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
994,12,train,Give me the band member of Don Dokken and associated musical artist of Red Tide (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist
WHERE {
  # Find the band associated with Don Dokken
  dbr:Don_Dokken dbo:memberOf ?band .
  
  # Get members of that band
  ?bandMember dbo:memberOf ?band ;
              a dbo:MusicGroup .

  # Find associations for Red Tide (band)
  OPTIONAL {
    dbr:Red_Tide_(band) dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
465,3,train,"Give me the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?party ?organization
WHERE {
  ?leader dbo:position ""Leader of the Chamber of Deputies of the Czech Republic""@en .
  ?leader dbo:memberOf ?party .
  ?party a dbo:PoliticalParty .
  
  ?leader dbo:memberOf ?organization .
  ?organization a dbo:Organization .
}
```

This query does the following:
- Selects the leader, their political party, and organization.
- Uses triple patterns to find leaders of the Chamber of Deputies who are members of both a political party and an organization.",1,3,2,1,1,2,2,9,0,0,5,0,0.0,0
659,4,train,"Give me the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rank
WHERE {
  dbr:Arthur_Wellesley,_1st_Duke_of_Wellington dbo:rank ?rank .
}
```",1,1,2,1,1,3,3,71,0,0,52,0,0.0,0
827,1,train,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father
WHERE {
  ?person a dbo:GrandDuke ;
          foaf:name ""William Ernest"" .
  ?person dbo:father ?father .
  FILTER(CONTAINS(LCASE(STR(?person)), ""william ernest grand duke of saxe-weimar-eisenach""))
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
465,4,train,Give me the death place of Jiřina Štěpničková and administration of Czech Pirate Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?administration
WHERE {
  # Retrieve the death place of Jiřina Štěpničková
  dbr:Ji%C5%99ina_%C5%A0t%C4%9Bpnickov%C3%A1 dbo:deathPlace ?deathPlace .

  # Retrieve administration details for the Czech Pirate Party
  OPTIONAL {
    ?person dbo:member dbr:Czech_Pirate_Party .
    ?person dbo:officeHolder ?administration .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
492,17,train,"Give me the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital ?type
WHERE {
  # Find the Khemis Miliana District resource
  dbr:Khemis_Miliana_District dbo:administrativeRegion dbr:Algeria .
  
  # Find the capital of this district
  dbr:Khemis_Miliana_District dbo:capital ?capital .

  # Ensure the capital is a settlement
  ?capital rdf:type dbo:Settlement .
  
  # Get the type of the capital to confirm it's a settlement
  OPTIONAL { ?capital rdf:type ?type . FILTER(?type = dbo:Settlement) }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
427,1,train,Give me the party of Giulio Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName
WHERE {
  dbr:Giulio_Andreotti dbo:politicalParty ?party .
  ?party rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
161,12,train,Give me the commander in Biscay Campaign and military force of Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce
WHERE {
  ?campaign dbo:partOf dbr:Spanish_Civil_War .
  ?campaign rdfs:label ""Biscay Campaign""@en .
  
  OPTIONAL { 
    ?campaign dbo:commander ?commander .
  }
  
  OPTIONAL {
    ?campaign dbo:militaryUnit ?militaryForce .
  }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
994,13,train,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artistName
WHERE {
  # Meshuggah and its members
  dbr:Meshuggah dbo:bandMember ?member .
  
  # Members associated with other musical artists
  ?member dbo:musicalArtist ?artist .

  # Ensure the artist is a band/group/organization
  ?artist rdf:type ?type .
  FILTER (
    ?type = dbo:Band OR 
    ?type = dbo:MusicalGroup OR 
    ?type = dbo:Organization
  ) .

  # Retrieve the name of the associated musical artist
  ?artist rdfs:label ?artistName .
  FILTER (lang(?artistName) = 'en')
}
```",2,5,3,2,1,3,3,71,0,0,33,0,0.0,0
30,1,train,"Give me the professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?name WHERE {
  ?person a dbo:Person .
  
  # Financier
  ?person dbo:occupation dbp:Financier .

  # Businessman
  ?person dbo:occupation dbp:Businessman .

  # Vineyard Owner
  ?person dbo:owns ?vineyard .
  ?vineyard a dbo:Vineyard .

  # Art Collector
  ?person dbo:artCollection ?collection .
  ?collection a dbo:ArtCollection .

  # Racehorse Owner/Breeder
  ?person dbo:owns ?racehorse .
  ?racehorse a dbo:RaceHorse .

  # Get the name of the person
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
427,0,train,Give me the reference to Partito Popolare Italiano.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?reference WHERE {
  { 
    ?party rdfs:label ""Partito Popolare Italiano""@it .
    FILTER(LANG(?party) = 'it')
  } UNION {
    ?redirect dbo:wikiPageRedirects ?party .
    ?party rdfs:label ""Partito Popolare Italiano""@it .
    FILTER(LANG(?party) = 'it')
  }
  
  OPTIONAL { ?party rdfs:seeAlso ?reference . }
}
```

### Explanation:

- **PREFIX**: We define prefixes for `dbo` (DBpedia ontology) and `rdfs` (RDF Schema).
- **SELECT Clause**: We select the variable `?reference`, which will hold any references related to the party.
- **WHERE Clause**:
  - The first pattern looks for a direct match of ""Partito Popolare Italiano"" in Italian (`@it`).
  - The second pattern accounts for possible redirects using `dbo:wikiPageRedirects`.
  - An `OPTIONAL` clause is used to find any additional references via the `rdfs:seeAlso` property.

This query will retrieve direct and indirect references related to ""Partito Popolare Italiano"" from DBpedia.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
404,1,train,Give me the parent of Prince Ernest Augustus of Hanover (born 1914).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Prince Ernest Augustus of Hanover""@en ;
          dbo:birthYear ?birthYear .
  FILTER (?birthYear = 1914)
  
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
659,13,train,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?warEvent
WHERE {
  ?regiment a dbo:MilitaryUnit ;
            rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  
  ?regiment dbo:commander ?commander .

  ?conflict a dbo:MilitaryConflict ;
            dbo:participatedIn ?regiment .

  ?commander rdfs:label ?commanderLabel .
  FILTER(LANG(?commanderLabel) = 'en')

  ?conflict rdfs:label ?warEvent .
  FILTER(LANG(?warEvent) = 'en')
}
```

### Explanation

- **PREFIX**: Define common prefixes for DBpedia ontology and resources.
- **SELECT**: Choose variables `?commander` and `?warEvent` to retrieve the commander's details and the name of the military conflict.
- **WHERE**:
  - Identify the regiment using its label.
  - Link the regiment to its commander via `dbo:commander`.
  - Connect the regiment to a military conflict through `dbo:participatedIn`.
  - Retrieve labels for both the commander and the event, ensuring they are in English.

This query should effectively retrieve the desired information from DBpedia based on your question.",2,4,3,2,1,3,3,71,0,0,130,0,0.0,0
498,0,train,Give me the band of Malevolent Creation.,SELECT ?result WHERE { <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  dbr:Malevolent_Creation dbo:band ?band .
}
```",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
996,10,train,Give me the award of the native of Palestine (region).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?v0 <http://dbpedia.org/property/awards> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?award
WHERE {
  ?person dbo:nationality dbr:Palestine .
  ?person dbo:award ?award .
}
```

This query selects individuals (`?person`) who are natives of Palestine and the awards (`?award`) they have received. The `dbo:nationality` property is used to link individuals to their nationality, and `dbo:award` links them to any awards.",2,2,3,2,1,3,2,20,0,0,14,0,0.0,0
959,10,train,Give me the manager of 2013 Júbilo Iwata season and member of University of Tsukuba.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the manager of Júbilo Iwata in 2013
  ?team dbo:coach ?manager .
  ?team rdfs:label ""Júbilo Iwata""@en .
  FILTER(YEAR(?team dbo:season) = 2013)

  # Ensure the manager is a member or alumnus of University of Tsukuba
  ?manager dbo:almaMater dbr:University_of_Tsukuba ;
           a dbo:Person .

}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
92,13,train,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist
WHERE {
  ?person dbo:birthName ""Jim Sheppard""@en .
  ?person a dbo:Artist .
  ?person dbo:associatedBand ?band .
  ?band dbo:leadArtist ?artist .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
197,5,train,Give me the birthplace of the member of FC Politehnica Timișoara.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?birthPlace
WHERE {
  ?member dbo:team dbr:FC_Politehnica_Timișoara .
  ?member dbo:birthPlace ?birthPlace .
}
```

This query assumes:
- `dbo:team` is the predicate linking a person to their team.
- `dbr:FC_Politehnica_Timișoara` is the resource identifier for FC Politehnica Timișoara in DBpedia.
- `dbo:birthPlace` is the predicate indicating where someone was born.",2,2,3,2,1,2,2,9,0,0,171,0,0.0,0
981,1,train,Give me the birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace
WHERE {
  ?person rdfs:label ""Novia Indriani Mamuaja""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
534,6,train,Give me the headquarter of Royal Dublin Society and birth place of Garret FitzGerald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?headquarters ?birthPlace
WHERE {
  ?s dbp:name ""Royal Dublin Society""@en .
  ?s dbp:headquarters ?headquarters .

  OPTIONAL {
    ?g dbp:name ""Garret FitzGerald""@en .
    ?g dbo:birthPlace ?birthPlace .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
783,0,train,Give me the associated musical artist of Appietus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?appietus a dbo:MusicalArtist ;
            foaf:name ""Appietus""@en .
  
  ?appietus dbo:associatedMusicalArtist ?artist .
}
```",1,1,2,1,1,3,2,20,15,0,0,1.0,1.0,1.0
963,10,train,"Give me the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?rulingPartyName WHERE {
  ?location dbo:postalCode ""21205"" .
  ?location dbo:rulingParty ?party .
  ?party rdf:type dbo:PoliticalParty .
  ?party rdfs:label ?rulingPartyName .
  FILTER (lang(?rulingPartyName) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
427,15,train,Give me the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Michele Pinto""@en .
  ?person dbo:partyAffiliation ?party .
  ?party rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
```

### Explanation:

- **PREFIX**: Define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT**: Choose `?partyName` to retrieve the name of the political party.
- **WHERE**:
  - Identify Michele Pinto as a person with the label ""Michele Pinto"" in English.
  - Use `dbo:partyAffiliation` to find the associated political party.
  - Retrieve the label (`rdfs:label`) of the party, ensuring it is in English.",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
981,0,train,Give me the entity in Indonesia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity
WHERE {
  ?entity dbo:country dbr:Indonesia .
}
```",1,1,2,1,1,3,2,20,2949,0,0,1.0,1.0,1.0
360,6,train,Give me the writer of The Roaring Silence and native of Johannesburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?book dbo:title ""The Roaring Silence""@en .
  ?book dbo:author ?writer .
  ?writer dbo:birthPlace dbr:Johannesburg .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
492,6,train,"Give me the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warName
WHERE {
  ?person rdfs:label ""Frédéric-Georges Herr""@en .
  ?person dbo:participatedIn ?event .
  
  ?event rdf:type dbo:MilitaryConflict ;
         dbo:wikiPageRedirects ?war .

  ?war rdfs:label ?warName .
  FILTER (LANG(?warName) = 'en')
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
712,0,train,Give me the capital of South Russia (1919–1920).,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capitalCity WHERE {
  # Assuming ""South Russia"" refers to regions within RSFSR during 1919-1920
  VALUES (?region) { 
    dbr:Kharkov 
    dbr:Rostov-on-Don 
  }
  
  ?region dbo:isCapitalOf ?country .
  ?country a dbo:Country ;
           dbo:capital ?capitalCity .

  # Filter for the time period (1919–1920)
  FILTER (
    EXISTS { ?region dbo:hasTimePeriod ?timePeriod . 
             ?timePeriod dbo:startYear ?startYear .
             ?timePeriod dbo:endYear ?endYear .
             FILTER (?startYear <= 1920 && ?endYear >= 1919) }
  )
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
392,4,train,"Give me the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?timeZone
WHERE {
  ?event a dbo:Sport ;
         dbo:location dbr:Aguilar_de_Segarra .
  OPTIONAL { ?event dbp:timezone ?timeZone }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
617,9,train,Give me the spouse of Laodice IV and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:spouse dbr:Laodice_IV .
  ?person dbo:parent dbr:Antiochus_III_the_Great .
}
```

This query uses the `dbo:spouse` and `dbo:parent` properties to find a person who is both the spouse of Laodice IV and the child of Antiochus III the Great.",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
378,6,train,Who is the commander in Peninsular War?,SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?commander WHERE {
  ?war dbo:wikiPageRedirects dbr:Peninsular_War .
  ?war dbo:commander ?commander .
}",1,1,2,1,1,3,3,71,0,0,37,0,0.0,0
281,4,train,Who is the awardee of Knight Grand Cross of the Order of the Bath?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name
WHERE {
  ?person dbo:award dbpedia:KnightGrandCrossOfTheOrderOfTheBath .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
```",1,1,2,1,1,3,3,71,0,0,558,0,0.0,0
959,8,train,Give me the team of Takashi Sekizuka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team
WHERE {
  ?person a dbo:FootballPlayer ;
          foaf:name ""Takashi Sekizuka""@en .
  OPTIONAL { ?person dbo:team ?team . }
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
547,7,train,Give me the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Gerald Graham""@en .
  ?person dbo:honoraryAward ?award .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
838,2,train,"Give me the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band WHERE {
  ?person dbp:name ""Žika Jelić""@en .
  ?person dbo:bandMember ?band .
  ?band rdf:type dbo:Band ;
        rdf:type dbo:MusicalGroup .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
378,0,train,Give me the war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  VALUES ?person { dbr:C._P._Gahn }
  
  ?person dbo:associatedWith ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         rdfs:label ?war ;
         dbo:description ?description .

  FILTER (lang(?war) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
547,8,train,Give me the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
}
```",1,1,2,1,1,3,3,71,59,3,2,0.9516129032258065,0.9672131147540983,0.959349593495935
485,3,train,"Give me the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?timeZone a dbo:TimeZone ;
            dbo:country ?country .
  FILTER (str(?timeZone) = ""Western European Time"")
  FILTER EXISTS { ?country a dbo:Country . }
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
778,6,train,Give me the entity in United States and author of Chroot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entityInUS ?authorOfChroot
WHERE {
  ?entityInUS dbo:country dbr:United_States .
  
  ?chroot dbo:title ""Chroot""@en ;
          dbo:author ?authorOfChroot .

}
```

### Explanation

- **PREFIX**: We define `dbo:` to refer to the DBpedia ontology.
- **SELECT Clause**: Specifies that we want to retrieve the entity in the United States (`?entityInUS`) and the author of ""Chroot"" (`?authorOfChroot`).
- **WHERE Clause**:
  - The first triple pattern finds entities where `dbo:country` is linked to the United States.
  - The second set of patterns identifies the resource for ""Chroot"" and its author.

This query assumes that ""Chroot"" is a well-defined entity in DBpedia with an English title and an associated author. Adjustments might be needed if additional filtering or specific conditions are required.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
617,5,train,"Give me the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherName WHERE {
  ?richeza a dbo:Person ;
           dbp:father ?father .
  ?father a dbo:Monarch ;
          rdfs:label ?fatherName .
  FILTER (CONTAINS(LCASE(?fatherName), ""royalty""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
959,5,train,"Who is the leader, that is a politician, of 2010 Japanese House of Councillors election?",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?election dbo:eventDate ?date .
  FILTER (YEAR(?date) = 2010 && CONTAINS(LCASE(str(?election)), ""japanese house of councillors election""))
  
  ?leader dbo:leaderOf ?election .
  ?leader a dbo:Politician .

  OPTIONAL { 
    ?leader dbo:politicalPartyMember ?party .
  }
}
```",1,2,2,1,1,3,3,71,0,0,9,0,0.0,0
30,2,train,Give me the birthplace of Silvia Cohen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Silvia Cohen""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
77,3,train,Who is the awardee of Golden Weapon for Bravery?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?awardee a dbo:Person .
  ?awardee dbo:receivedAward dbr:Golden_Weapon_for_Bravery .
}
```

### Explanation

- **PREFIX**: Define common prefixes for DBpedia ontology and resources.
- **SELECT ?awardee**: We want to retrieve the awardee's resource.
- **WHERE Clause**:
  - `?awardee a dbo:Person`: Ensures that the subject is a person.
  - `?awardee dbo:receivedAward dbr:Golden_Weapon_for_Bravery`: Specifies that this person has received the ""Golden Weapon for Bravery"" award.

This query will return resources representing individuals who have been awarded the ""Golden Weapon for Bravery.""",1,1,2,1,1,3,2,20,0,0,10,0,0.0,0
232,16,train,"Give me the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?militaryConflict WHERE {
  VALUES ?person { dbr:Morgan_Freeman }
  
  ?person dbo:starring ?film .
  ?person dbo:militaryConflict ?militaryConflict .
}
```

### Explanation

- **PREFIX**: Define common prefixes for DBpedia.
- **VALUES**: Specify the person of interest, Morgan Freeman in this case.
- **SELECT**: Choose variables `?film` and `?militaryConflict`.
- **WHERE**:
  - Use triple patterns to find films (`dbo:starring`) and military conflicts (`dbo:militaryConflict`) associated with the specified person.

This query will return films and military conflicts linked to Morgan Freeman, assuming he has such associations in DBpedia.",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
281,7,train,"Who is the professional, that is an office holder and a politician, in New Zealand Army?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
    ?person a dbo:OfficeHolder .
    ?person a dbo:Politician .
    ?person dbo:profession ?profession .
    ?person dbo:militaryBranch dbr:New_Zealand_Army .
}
```

This query selects distinct individuals (`?person`) who are both office holders and politicians, have a professional role, and are affiliated with the New Zealand Army.",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
747,17,train,Who is the person born as the persona of Shèna?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName WHERE {
  ?person dbo:birthName dbr:Shèna .
  ?person a dbo:Person .
  ?person rdfs:label ?personName .
  FILTER (LANG(?personName) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
783,8,train,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember
WHERE {
  ?person foaf:name ""Priscilla Opoku-Kwarteng""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?person rdf:type dbo:Artist .
  ?person rdf:type dbo:MusicalArtist .

  OPTIONAL { 
    ?person dbp:memberOfBand ?band .
    ?bandMember dbp:memberOf ?band .
    FILTER(?person != ?bandMember)
  }
}
```",2,4,3,2,1,3,2,20,0,0,7,0,0.0,0
378,9,train,Give me the war of Joaquín Blake and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warName
WHERE {
  # Joaquín Blake's wars
  OPTIONAL {
    dbr:Joaqu%C3%ADn_Blake dbo:participatedIn ?war .
    ?war rdfs:label ?warName .
    FILTER (lang(?warName) = 'en')
  }
  
  # Carl Pontus Gahn's historical context (if any)
  OPTIONAL {
    dbr:C._P._Gahn dbo:associatedWith ?event .
    ?event rdf:type dbo:War .
    ?event rdfs:label ?warName .
    FILTER (lang(?warName) = 'en')
  }
}
ORDER BY ?warName
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
391,13,train,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Identify Michael Ballhaus and his works
  dbr:Michael_Ballhaus a dbo:Cinematographer .
  
  # Find films associated with him
  ?film dbo:cinematographyBy dbr:Michael_Ballhaus .

  # Retrieve actors from those films
  ?film dbo:starring ?actor .
}
```",2,3,3,2,1,3,3,71,0,0,20,0,0.0,0
534,9,train,"Who is the child, that is a politician and an office holder, of the native, that is a politician, of Essex?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  ?parent dbo:nationality dbr:Essex .
  ?parent a dbo:Politician .
  ?child dbo:parent ?parent ;
         a dbo:Politician, dbo:OfficeHolder .
  ?child foaf:name ?childName .
}
```

This query does the following:
- Identifies individuals (`?parent`) who are politicians and natives of Essex.
- Finds their children (`?child`) who are both politicians and office holders.
- Retrieves the names of these children.",2,5,3,2,1,3,2,20,0,0,7,0,0.0,0
392,8,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  ?region dbo:timeZone dbr:Central_European_Time .
  ?country dbo:locatedInRegion ?region ;
           a dbo:Country .
}
```",2,3,3,2,1,2,3,28,0,0,173261,0,0.0,0
378,16,train,"Who is the commander in the reference, that is a military conflict, to Peninsular War?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderName WHERE {
  ?war a dbo:MilitaryConflict ;
      rdfs:label ""Peninsular War""@en .
  
  ?commander dbo:role ?role ;
            foaf:name ?commanderName .

  ?role dbo:conflict ?war ;
        rdf:type dbo:MilitaryCommanderRole .

}
```",2,3,3,2,1,3,3,71,0,0,37,0,0.0,0
435,0,train,Give me the territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  ?city dbo:administrativeRegion ?territory .
  FILTER (str(?city) = ""Reykjavík"")
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
251,10,train,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyLabel ?administrationLabel WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:country dbp:Sicily ;
         rdfs:label ?partyLabel .
  
  ?party dbo:organization ?org .
  ?org a dbo:Organization ;
       rdfs:label ?administrationLabel .

  FILTER (CONTAINS(LCASE(?partyLabel), ""ruling""))
}
ORDER BY ?partyLabel
```",2,4,3,2,1,2,3,28,0,0,5,0,0.0,0
294,1,train,Give me the resting place of Edwin A. Keeble.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Edwin A. Keeble"" .
  
  OPTIONAL { 
    ?person dbo:deathPlace ?burialPlace .
  }
  
  OPTIONAL {
    ?person dbo:burialLocation ?burialPlace .
  }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
392,2,train,Give me the province of Schio.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?provinceName
WHERE {
  ?schio a dbo:PopulatedPlace ;
         rdfs:label ""Schio""@en .
  
  ?schio dbo:locatedIn ?province .

  ?province a dbo:AdministrativeRegion ;
            rdfs:label ?provinceName .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
994,10,train,Give me the band member of Don Dokken and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?dokkenBandMember ?slayerAssociatedArtist
WHERE {
  # Find band members of Don Dokken
  ?dokkenBand rdf:type dbo:MusicalArtist ;
              dbo:bandMemberOf dbr:Dokken .
  
  # Find associated artists of Tom Araya (S.A. Slayer)
  ?slayerAssociatedArtist rdf:type dbo:MusicalArtist ;
                          dbo:associatedBandMember dbr:Tom_Araya .

}
```

This query does the following:
- Uses `dbo:bandMemberOf` to find band members associated with Don Dokken.
- Uses `dbo:associatedBandMember` to find artists associated with Tom Araya (S.A. Slayer).",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
528,9,train,Give me the war of Orozimbo Barbosa and war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?warLabel WHERE {
  VALUES (?person) { 
    dbr:Orozimbo_Barbosa 
    dbr:Irene_Morales 
  }
  
  ?person dbo:participatedIn ?war .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
994,17,train,"Who is the person born, that is a musical artist, as the persona of Don Dokken?",SELECT ?result WHERE { <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthDate
WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Don Dokken"" .
  ?person dbo:birthDate ?birthDate .
}
```

4. **Validation**:
   - Ensure the query uses correct prefixes and properties.
   - The query should efficiently retrieve data about individuals associated with the alias ""Don Dokken.""",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
488,0,train,Give me the birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Enomoto Takeaki""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
391,8,train,"Give me the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie WHERE {
  ?work a dbo:Film ;
        a dbo:Work ;
        a dbo:TelevisionSeries .
  
  ?work dbo:starring dbr:Roz_Ryan .

  BIND(?work AS ?movie)
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
294,11,train,"Give me the entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement
WHERE {
  ?person foaf:name ""Marion James"" .
  ?person dbo:birthPlace ?place .
  ?place a dbo:Settlement .
  BIND(?place AS ?settlement)
}
```",2,3,3,2,1,2,3,28,0,0,340,0,0.0,0
92,1,train,Give me the associated musical artist of Jim Sheppard.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist WHERE {
  ?person a dbo:MusicArtist ;
          foaf:name ""Jim Sheppard"" .
  
  OPTIONAL { 
    ?person dbo:associatedBand ?band .
    ?band dbo:member ?artist .
  }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
92,10,train,Give me the band of Joseph Michael and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfJosephMichael ?nevermoreMember
WHERE {
  # Find Joseph Michael's band
  ?person a dbo:MusicArtist ;
          foaf:name ""Joseph Michael"" .
  ?person dbo:memberOfBand ?bandOfJosephMichael .

  # Find a member of Nevermore
  ?band dbr:Nevermore ;
        dbo:member ?nevermoreMember .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
392,1,train,Give me the region of Central European Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region WHERE {
  ?timeZone rdfs:label ""Central European Time""@en .
  ?region dbo:timeZone ?timeZone .
}
```

This query selects regions (`?region`) that are associated with the time zone labeled as ""Central European Time"" in English.",1,1,2,1,1,2,3,28,0,0,49990,0,0.0,0
281,11,train,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war
WHERE {
  ?award a dbo:Award ;
         rdfs:label ""Knight Grand Cross of the Order of the Bath""@en .
  
  ?recipient dbo:recipientOf ?award .
  ?recipient dbo:participatedIn ?war .
}
```

This query does the following:
- Identifies the award ""Knight Grand Cross of the Order of the Bath"".
- Finds individuals who have received this award.
- Retrieves wars in which these recipients participated.",2,2,3,2,1,3,3,71,0,0,450,0,0.0,0
427,16,train,Who is the father of the alumnus of Massachusetts Institute of Technology?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fatherName WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .
  ?father foaf:name ?fatherName .
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
617,0,train,Give me the child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?antiochus a dbo:Person .
  ?antiochus rdfs:label ""Antiochus III the Great""@en .
  FILTER NOT EXISTS { ?antiochus dbo:spouse* ?x . }
  ?antiochus dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
161,8,train,"Give me the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?forceName ?eventName
WHERE {
  # Identify Emilio Mola
  dbr:Emilio_Mola a dbo:Person .

  # Find the force associated with Emilio Mola
  ?militaryGroup dbo:member dbr:Emilio_Mola .
  ?militaryGroup rdfs:label ?forceName .
  
  # Retrieve events related to this military group
  ?event dbo:agent ?militaryGroup .
  ?event rdfs:label ?eventName .

  FILTER (lang(?forceName) = 'en' && lang(?eventName) = 'en')
}
ORDER BY ?forceName ?eventName",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
838,4,train,"Give me the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference
WHERE {
  ?entity rdfs:label ""YU Grupa""@en .
  ?entity a dbo:MusicalGroup ;
          dbo:type dbo:Organization .

  BIND(?entity AS ?reference)
}
```

### Explanation

- **PREFIX**: Define common prefixes for DBpedia ontology and resources.
- **SELECT**: Choose the entity URI that matches our criteria.
- **WHERE**:
  - Find an entity with a label ""YU Grupa"" in English.
  - Ensure it is of type `dbo:MusicalGroup` (group) and also has a property linking to `dbo:Organization`.
- **BIND**: Assign the matched entity URI to `?reference`.

This query will return entities that are both musical groups and organizations related to ""YU Grupa.""",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
617,3,train,"Who is the successor, that is a royalty, of Antiochus II Theos?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?successor
WHERE {
  ?antiochus2 dbo:successor ?successor .
  FILTER (str(?antiochus2) = ""Antiochus II Theos""^^xsd:string)
  
  ?successor rdf:type dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
356,4,train,"Give me the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:FootballPlayer ;
          dbp:birthName ""Gary Williams"" ;
          dbp:birthYear ""1960"" .
  
  ?person dbo:birthPlace ?birthPlace .

  FILTER EXISTS { ?birthPlace dbo:country dbr:United_Kingdom }
  FILTER EXISTS { ?birthPlace a dbo:Settlement }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
55,5,train,"Give me the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?bandLabel
WHERE {
  ?person rdfs:label ""Newsted""@en .
  ?person a dbo:MusicalArtist .

  OPTIONAL { 
    ?membership dbo:member ?person ;
                dbo:musicalBand ?band .
  }

  FILTER NOT EXISTS {
    ?membership dbo:endDate ?endDate .
  }
  
  SERVICE <http://dbpedia.org/sparql> {
    ?band rdfs:label ?bandLabel .
    FILTER(LANG(?bandLabel) = ""en"")
  }
}
ORDER BY ?band
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
915,2,train,Give me the director of Pipe Dreams (1976 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director
WHERE {
  ?film a dbo:Film ;
        dbo:title ""Pipe Dreams"" ;
        dbo:releaseYear ""1976"" .
  
  ?film dbo:director ?director .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
488,3,train,"Give me the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?saitoHajime a dbo:Person ;
               foaf:name ""Saitō Hajime""@en .
  
  ?war a dbo:MilitaryConflict ;
       dbo:agent ?saitoHajime ;
       rdf:type dbo:Event, dbo:SocietalEvent .

  FILTER (str(?saitoHajime) = str(dbr:Saitō_Hajime))
}
```",1,4,2,1,1,3,3,71,0,0,4,0,0.0,0
9,0,train,"Give me the alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater
WHERE {
  ?person a dbo:Person ;
          foaf:name ""John Alderdice"" ;
          rdfs:label ""Baron Alderdice""@en .
  
  ?person dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
435,11,train,Give me the work of the author of Iceland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work
WHERE {
  ?author dbo:nationality dbr:Iceland .
  ?author dbo:work ?work .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
294,8,train,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace
WHERE {
  ?recipient a dbo:AwardRecipient ;
             dbo:award dbr:Distinguished_Service_Medal_(United_States_Army) .
  ?recipient dbo:occupation dbr:Politician .
  OPTIONAL { ?recipient dbo:finalRestingPlace ?restingPlace . }
}
```",2,3,3,2,1,2,3,28,0,0,10,0,0.0,0
528,15,train,"Give me the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?militaryForce
WHERE {
  ?event a dbo:SocietalEvent ;
         dbo:country dbr:Chile .
  
  OPTIONAL {
    ?event dbo:militaryUnit ?militaryForce .
  }
}
```

This query does the following:
- Selects societal events (`?event`) in Chile.
- Attempts to find any associated military units or forces (`?militaryForce`).
- Uses `OPTIONAL` to ensure that even if no military force is linked, the event itself can still be retrieved.",2,3,3,2,1,3,3,71,0,0,91,0,0.0,0
696,0,train,Give me the birth place of Tim Brennan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Tim Brennan""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
996,1,train,Give me the entity in France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:France .
}
```",1,1,2,1,1,3,2,20,0,44301,292,0.0,0.0,0
115,5,train,Give me the alma mater of the alumnus of National University of San Marcos.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater
WHERE {
  ?person dbo:alumnusOf dbr:National_University_of_San_Marcos .
  ?person dbo:almaMater ?almaMater .
}
```

This query does the following:
- It selects distinct alma maters (`?almaMater`) of individuals who are alumni of National University of San Marcos.
- The `WHERE` clause uses two triple patterns to link persons to their alma mater and ensure they are alumni of the specified university.",2,2,3,2,1,2,2,9,0,0,49,0,0.0,0
487,8,train,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration
WHERE {
  ?person a dbo:SoccerPlayer ;
          foaf:name ""Philip Brian Scott"" ;
          dbo:birthName ""Philip Brian Scott"" .
  
  OPTIONAL { 
    ?person dbo:administrator ?administration .
  }
}
```",2,3,3,2,1,3,2,20,0,0,14,0,0.0,0
179,9,train,"Give me the birth name of the child, that is a royalty, of Nakkhatra Mangala.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . ?v0 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childBirthName
WHERE {
  # Identify Nakkhatra Mangala
  dbr:Nakkhatra_Mangala dbo:spouse ?parent .

  # Find children of Nakkhatra Mangala
  ?parent dbo:child ?child .

  # Filter for royalty status
  ?child a ?royaltyClass .
  FILTER (
    ?royaltyClass IN (dbr:Monarch, dbr:Princess, dbr:Prince) 
  )

  # Retrieve the birth name of the child
  ?child foaf:name ?childBirthName .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
767,3,train,Give me the writer of Where It's At (Dustin Lynch album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?song dbo:title ""Where It's At"" .
  ?song dbo:album dbr:Dustin_Lynch_discography .
  ?song dbo:lyricist ?writer .
}
```

### Explanation:

- **Prefixes:** 
  - `dbo:` is used for DBpedia ontology properties.
  - `dbr:` is used for DBpedia resources.

- **SELECT Clause:** 
  - We are selecting the writer(s) of the song, represented by `?writer`.

- **WHERE Clause:**
  - The first triple pattern identifies the song with the title ""Where It's At"".
  - The second triple pattern links this song to an album in Dustin Lynch's discography.
  - The third triple pattern retrieves the lyricist(s) of the song.

This query assumes that the song and its metadata are correctly linked in DBpedia. Adjustments might be necessary if different properties or resource identifiers are used.",1,1,2,1,1,3,3,71,0,0,35,0,0.0,0
427,12,train,Give me the party of Giulio Andreotti and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party
WHERE {
  VALUES ?person { 
    dbr:Giulio_Andreotti 
    dbr:Romano_Prodi 
  }
  
  ?person dbo:partyAffiliation ?party .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
617,2,train,Give me the parent of Mlada (abbess).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  ?m ldt:instanceOf dbr:Mlada_(abbess) .
  ?m dbo:child ?c .
  ?c dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
360,5,train,Give me the author of Blinded by the Light.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?composer
WHERE {
  dbr:Blinded_by_the_Light_(song) dbo:composer ?composer .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
161,9,train,Give me the military force of Rif War and military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?militaryForce
WHERE {
  VALUES ?war { 
    dbr:Rif_War 
    dbr:Spanish_Civil_War 
  }
  
  ?war dbo:participatingMilitaryForce ?militaryForce .
}
```",2,2,3,1,2,3,3,71,0,0,34,0,0.0,0
767,2,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```
# Unable to generate a SPARQL query due to incomplete question.
```",1,1,2,1,1,3,3,71,0,0,98447,0,0.0,0
421,9,train,Give me the person born as Edin Dervišhalidović and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?birthPlaceLabel WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Edin Dervišhalidović"" .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER (CONTAINS(LCASE(?birthPlaceLabel), ""socialist federal republic of yugoslavia""))
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
142,4,train,Give me the birthplace of George Tokoro and entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""George Tokoro""@en .
  ?person dbo:birthPlace ?birthPlace .
  FILTER (CONTAINS(LCASE(STR(?birthPlace)), ""japan""))
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
617,1,train,Give me the spouse of Laodice IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?person dbo:spouse ?spouse .
  ?person rdfs:label ""Laodice IV""@en .
}
```

This query uses the `dbo:spouse` property to find individuals who are spouses of Laodice IV. The `rdfs:label` is used to match the English label for Laodice IV.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
281,8,train,"Give me the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession
WHERE {
  ?person foaf:name ""Heather Roy""@en .
  ?person dbo:occupation ?profession .
  ?profession rdf:type dbo:MilitaryUnit .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
360,7,train,Give me the reference to Manfred Mann and writer of The Roaring Silence.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
    ?album rdf:type dbo:Album .
    ?album rdfs:label ""The Roaring Silence""@en .
    ?album dbo:artist dbr:Manfred_Mann_ (band) .
    ?album dbo:composer ?writer .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
487,1,train,Give me the administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?person foaf:name ""Phil Scott""@en .
  ?person dbo:officeHolderOf ?position .
  ?position dbo:holder ?person .
  ?position dbo:termStart ?start .
  ?position dbo:termEnd ?end .
  OPTIONAL { ?position dbo:administration ?administration . }
  
  FILTER (?person = dbr:Phil_Scott)
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
184,10,train,Give me the parent of Géza von Habsburg and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?parentLabel WHERE {
  VALUES ?person { 
    dbr:Géza_von_Habsburg 
    dbr:Archduchess_Ilona_of_Austria 
  }
  
  ?person dbo:parent ?parent .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
294,0,train,"Give me the resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?restingPlace WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Luke Lea"" ;
          dbp:birthdayYear ""1879"" .
  
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
994,11,train,Give me the associated musical artist of the associated musical artist of Watchtower (band).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?finalArtist
WHERE {
  ?watchtower dbo:associatedMusicalArtist ?firstAssociatedArtist .
  ?firstAssociatedArtist dbo:associatedMusicalArtist ?finalArtist .

  FILTER (str(?watchtower) = ""Watchtower_(band)"")
}
```",2,2,3,2,1,3,3,71,0,0,16,0,0.0,0
232,15,train,Give me the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?birthName .
  
  # Find any person with the same birth name
  ?person dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
314,6,train,Give me the person deceased at Madrid and awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Madrid .
  ?person dbo:numberOfAwards ?awardsCount .
  FILTER (?awardsCount = 30)
  
  OPTIONAL { 
    ?person foaf:name ?name .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
365,1,train,Give me the reference to The Blasters.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band
WHERE {
  ?band rdfs:label ""The Blasters""@en.
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
617,4,train,"Give me the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?title WHERE {
  ?person a dbo:Monarch ;
          foaf:name ""Richeza of Poland""@en .
  
  OPTIONAL { ?person dbo:title ?title . }
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
10,4,train,"Give me the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate WHERE {
  # Identify Luke Francis Vibert's birth date
  VALUES (?vibertBirthDate) { 
    { dbr:Luke_Vibert dbo:birthday ?vibertBirthDate }
  }

  # Find artists born on the same date as Luke Francis Vibert
  ?person a dbo:Artist ;
          dbp:birthday ?birthDate .
  
  FILTER (?birthDate = ?vibertBirthDate)
  FILTER (!sameTerm(?person, dbr:Luke_Vibert))
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
767,11,train,"Give me the entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ""Green""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement
WHERE {
  ?green a dbo:AdministrativeRegion ;
         foaf:name ""Green""@en .
  
  ?adminRelation dbo:administrativeUnit ?green ;
                 dbo:part ?entity .

  ?entity a dbo:Settlement .
  
  BIND(?entity AS ?settlement)
}
```",2,3,3,2,1,3,3,71,0,0,60,0,0.0,0
378,4,train,Who is the person born as Carl Pontus Gahn?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?fullName WHERE {
  ?person a dbo:Person .
  
  OPTIONAL { 
    ?person foaf:givenName ""Carl"" . 
    ?person foaf:familyName ""Gahn"" . 
  }
  
  OPTIONAL {
    ?person dbo:birthName ""Carl Pontus Gahn"" .
  }

  BIND(CONCAT(STR(?person), "" ("", STRAFTER(STR(?person), ""#""), "")"") AS ?fullName)
}
```",1,1,2,1,1,3,3,71,1,2097151,0,4.76837158203125e-07,1.0,9.53673861659116e-07
996,7,train,Give me the force of the awardee of 1778.0.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force
WHERE {
  ?award dbo:dateAwarded ?date .
  FILTER (YEAR(?date) = 1778)
  
  ?award dbo:recipient ?awardee .

  OPTIONAL {
    ?awardee dbo:force ?force .
  }
}
```",2,2,3,2,1,3,2,20,0,0,11,0,0.0,0
360,1,train,Give me the native of Johannesburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name
WHERE {
  ?person dbo:birthPlace dbr:Johannesburg .
  OPTIONAL { ?person foaf:name ?name . }
}
```

### Explanation:

- **Prefixes**: 
  - `dbo:` is used for DBpedia ontology properties.
  - `foaf:` is used for Friend of a Friend vocabulary, which includes the name property.

- **SELECT Clause**:
  - Retrieves individuals (`?person`) and their names (`?name`).

- **WHERE Clause**:
  - Matches individuals whose birthplace is Johannesburg (`dbr:Johannesburg`).
  - Uses an `OPTIONAL` clause to include names if available, ensuring that the query still returns results even if some individuals do not have a name listed.

This query will return a list of people who were born in Johannesburg along with their names, if available.",1,1,2,1,1,2,3,28,0,0,1000,0,0.0,0
617,9,train,"Give me the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  # Find Mlada (abbess) and her parent
  dbr:Mlada_(abbess) dbo:parent ?parent .

  # Find the child of that parent who is royalty
  ?parent dbo:child ?child .
  ?child a dbo:RoyalFamilyMember ; 
         rdfs:label ?childName .
  
  FILTER (lang(?childName) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
92,14,train,Give me the band of the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joseph Michael Furney"" .
  ?person dbo:memberOfBand ?band .
  ?band foaf:name ?bandName .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,17,train,"Give me the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?event WHERE {
  # Find events related to Rutger Jan Schimmelpenninck
  ?event dbo:wikiPageRedirects dbr:Rutger_Jan_Schimmelpenninck .
  
  # Ensure the event is a societal event
  ?event rdf:type dbo:SocietalEvent .

  # Ensure the event is also classified as a general event
  ?event rdf:type dbo:Event .

  # Ensure the event is also classified as a military conflict
  ?event rdf:type dbo:MilitaryConflict .
}
```",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
184,6,train,Give me the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?person a dbo:Archduke .
  ?person foaf:name ""Joseph Karl of Austria"" .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
345,0,train,Give me the figure known as Stolz von Liechtenstein.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?abstract WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Stolz von Liechtenstein""@en .
  OPTIONAL { ?person dbo:abstract ?abstract . FILTER (lang(?abstract) = 'en') }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
55,11,train,"Give me the band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Jason Newsted""@en .
  
  ?band dbo:member ?person .

  FILTER (str(?band) != """")
}
```",2,3,3,2,1,2,3,28,0,0,9,0,0.0,0
701,10,train,Give me the spouse of Ramesses II and parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?ramesses2 dbp:name ""Ramesses II""@en .
  ?ramesses2 dbp:spouse ?spouse .

  OPTIONAL { 
    ?meritamen dbp:name ""Meritamen""@en .
    ?meritamen dbo:childOf ?spouse .
  }
  
  FILTER EXISTS {
    ?meritamen dbp:name ""Meritamen""@en .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
767,10,train,Give me the entity in Baden-Württemberg and reference to .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?entityLabel WHERE {
  ?entity dbo:country dbr:Germany .
  OPTIONAL { ?entity dbp:state dbr:Baden-Württemberg . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,3,3,71,0,0,7,0,0.0,0
44,0,train,Give me the band member of Undertow (band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?memberName
WHERE {
  ?band rdfs:label ""Undertow""@en .
  ?band dbo:bandMember ?member .
  ?member rdfs:label ?memberName .
}
```

### Explanation

- **PREFIX**: Define common prefixes for ontology and RDF Schema.
- **SELECT ?memberName**: We want to retrieve the names of the band members.
- **WHERE Clause**:
  - `?band rdfs:label ""Undertow""@en .`: Find the resource representing the band ""Undertow"".
  - `?band dbo:bandMember ?member .`: Identify entities that are members of this band.
  - `?member rdfs:label ?memberName .`: Retrieve the labels (names) of these member entities.

This query will return the names of individuals who are listed as members of the band ""Undertow"" in DBpedia.",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
915,8,train,"Give me the father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?fatherName
WHERE {
  ?child dbo:parent ?spaulding .
  ?spaulding rdfs:label ""Phillip Spaulding""@en .

  ?child rdf:type dbo:FictionalCharacter ;
         rdf:type dbo:SoapOperaCharacter .

  ?child dbo:father ?father .
  ?father rdfs:label ?fatherName .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
783,10,train,"Give me the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:occupation dbo:Artist ;
          foaf:name ""Ebony Reigns""@en .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
77,1,train,Give me the force of Alexander I of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force
WHERE {
  dbr:Alexander_I_of_Russia dbo:militaryStrength ?force .
}
```

This query assumes that `dbo:militaryStrength` is a relevant property. If this specific property does not exist, you might need to explore other related properties in DBpedia.",1,1,2,1,1,3,2,20,0,0,25,0,0.0,0
115,1,train,Give me the alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jorge Sotomayor Tello"" .
  ?person dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
429,3,train,"Give me the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForceLabel
WHERE {
  ?militaryForce rdf:type dbo:MilitaryUnit .
  ?militaryForce rdfs:label ?militaryForceLabel .
  FILTER (lang(?militaryForceLabel) = 'en') .

  ?event dbo:name ""Camden Expedition"" ;
         dbo:participatedIn ?militaryForce .
}
ORDER BY ?militaryForceLabel
```",1,2,2,1,1,2,2,9,0,0,22,0,0.0,0
285,6,train,Give me the parent of Alexander Onassis and spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfAlexander ?spouseOfAristotle
WHERE {
  # Find parent of Alexander Onassis
  ?alexanderOnassis dbo:birthName ""Alexander Onassis""@en .
  ?alexanderOnassis dbo:parent ?parentOfAlexander .

  # Find spouse of Aristotle Onassis
  ?aristotleOnassis dbo:birthName ""Aristotle Onassis""@en .
  ?aristotleOnassis dbp:spouse ?spouseOfAristotle .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
645,8,train,Give me the alma mater of the child of Richard Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?childAlmaMater
WHERE {
  ?person dbp:name ""Richard Pankhurst""@en .
  
  ?person dbo:child ?child .
  
  ?child dbo:almaMater ?childAlmaMater .
}
```",2,2,3,2,1,3,2,20,2,0,0,1.0,1.0,1.0
328,4,train,"Give me the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award
WHERE {
  dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape dbo:awardsReceived ?award .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
617,15,train,"Who is the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Antiochus II Theos' successor who is a royalty
  dbr:Antiochus_II_Theos dbo:successor ?successor .
  ?successor rdf:type dbo:Monarch .

  # Successor's child who is also a royalty
  ?successor dbo:child ?child .
  ?child rdf:type dbo:Monarch .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
754,10,train,Give me the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  dbr:Ram_Khamhaeng_the_Great dbo:spouse ?parent .
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
356,3,train,Give me the successor of 2014 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorSeason
WHERE {
  ?season a dbo:SoccerLeagueSeason ;
          dbo:team dbr:Sacramento_Republic_FC ;
          dbo:year ""2014""^^xsd:gYear .
  
  OPTIONAL { 
    ?season dbo:successor ?successorSeason .
  }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
996,8,train,Give me the entity in the award of Ekrem Akurgal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ekrem Akurgal""@en .
  
  ?person dbo:honoraryTitle ?award .
}
```

### Explanation

- **PREFIXes**: 
  - `dbo:` is used for DBpedia ontology classes and properties.
  - `dbr:` is used for DBpedia resources.

- **SELECT Clause**: We are selecting the variable `?award` which represents the award entity associated with Ekrem Akurgal.

- **WHERE Clause**:
  - The first triple pattern identifies a person (`?person`) who has the name ""Ekrem Akurgal"".
  - The second triple pattern finds awards (`?award`) that this person has received as an honorary title.

This query assumes that the award is linked to Ekrem Akurgal via the `dbo:honoraryTitle` property. Adjustments may be needed if a different property is used in DBpedia for such relationships.",2,2,3,2,1,3,2,20,0,0,292,0,0.0,0
778,2,train,"Give me the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?prize dbo:category dbr:Wolf_Prize_in_Medicine .
  ?prize dbo:recipient ?awardee .
  ?awardee dbo:nationality dbr:United_States .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
801,6,train,"Give me the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work WHERE {
  ?artist foaf:name ""50 Cent"" .
  ?artist dbo:album ?album .
  ?album dbo:track ?work .
  ?work a dbo:Songs .
  FILTER EXISTS { ?work dbo:musicalWork ?musicalWork . }
}
```",1,4,2,1,1,3,3,71,0,0,58,0,0.0,0
488,15,train,"Who is the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war a dbo:MilitaryConflict ;
      a dbo:Event ;
      a dbo:SocietalEvent .
  
  ?saitoHajime dbr:Saitō_Hajime .

  ?saitoHajime dbo:role ?commanderRole .
  ?commanderRole dbo:involvesMilitaryConflicts ?war .
  ?commanderRole dbo:position ""Commander""^^xsd:string .

  BIND(?saitoHajime AS ?commander)
}
```",2,5,3,2,1,3,3,71,0,0,29,0,0.0,0
981,8,train,"Give me the birth place of the person born, that is a beauty queen, as .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> """"@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person dbo:occupation dbr:Beauty_queen .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,3,23,167,0.11538461538461539,0.01764705882352941,0.030612244897959186
547,14,train,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  ?person dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
  OPTIONAL { ?person dbo:placeOfBurial ?restingPlace . }
}
```",2,2,3,2,1,3,3,71,0,0,28,0,0.0,0
64,6,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
}
```",2,3,3,2,1,2,2,9,29,65,173232,0.30851063829787234,0.00016737754024275515,0.00033457356292001964
666,6,train,Give me the figure known as The Three Lions and player in Steve Bruce.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?team WHERE {
  ?player a dbo:Footballer ;
          foaf:name ""Steve Bruce""@en .
  
  ?player dbo:nationalTeam dbr:England_national_football_team .

  OPTIONAL { 
    ?team dbo:officialName ""The Three Lions""@en .
    ?player dbo:nationalTeam ?team .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
55,7,train,Give me the band member of Guns N' Roses and band of Newsted.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?gunsnrosesMember ?newstedsBand
WHERE {
  # Find members of Guns N' Roses
  ?gunsnrosesMember dbp:bandMember <http://dbpedia.org/resource/Guns_N%27_Roses> .
  
  # Find bands associated with Jason Newsted (Newsted)
  ?newsted dbo:memberOfBand ?newstedsBand ;
           rdfs:label ""Jason Newsted""@en .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
488,4,train,Who is the commander in Boshin War?,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:commander ?commander .
  ?event rdfs:label ""Boshin War""@en .
}
```

This query selects individuals who were commanders in the Boshin War by linking the event to its commanders using DBpedia's ontology.",1,1,2,1,1,3,3,71,0,0,26,0,0.0,0
142,1,train,Give me the birthplace of George Tokoro.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Person ;
          foaf:name ""George Tokoro""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
339,10,train,Who is the child of the parent of Princess Olga of Greece and Denmark?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?olga dbo:birthName ""Princess Olga of Greece and Denmark""@en .
  ?olga dbo:parent ?parent .
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
659,3,train,"Give me the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeHolderRole WHERE {
  ?person dbo:nationality dbr:Kingdom_of_Ireland .
  ?person dbo:occupation ?officeHolderRole .
  FILTER EXISTS { ?officeHolderRole a dbo:PublicOffice . }
}
```",1,2,2,1,1,3,3,71,0,0,23,0,0.0,0
161,2,train,Give me the commander in Biscay Campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderName
WHERE {
  ?campaign a dbo:MilitaryCampaign ;
            rdfs:label ""Biscay Campaign""@en .
  
  OPTIONAL {
    ?campaign dbo:commander ?commander .
    ?commander rdfs:label ?commanderName .
    FILTER(LANG(?commanderName) = 'en')
  }
}
```

### Explanation:

- **PREFIX**: Define common prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT**: Retrieve the label of the commander.
- **WHERE**:
  - Identify the Biscay Campaign using its label in English.
  - Use an `OPTIONAL` clause to find any associated commanders, ensuring flexibility if no direct link is found.
  - Filter results to ensure labels are in English.

This query aims to retrieve the name of the commander(s) involved in the Biscay Campaign by leveraging DBpedia's structured data on military campaigns and their participants.",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
435,8,train,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement ?administeredBy
WHERE {
  ?settlement a dbo:Settlement ;
              dbo:settlementType ?type ;
              dbo:country dbr:Iceland .
  
  FILTER(?type = dbo:Town || ?type = dbo:Village) .

  OPTIONAL { ?settlement dbo:administeredBy ?administeredBy } .
}
ORDER BY ?settlement
```

This query selects settlements in Iceland that are either towns or villages and optionally includes the figure administering them.",2,5,3,2,1,2,3,28,0,0,2,0,0.0,0
54,6,train,Give me the child of Narapati I of Ava.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  ?person a dbo:Monarch ;
          foaf:name ""Narapati I""@en .
  ?person dbo:child ?child .
}
```

This query does the following:
- Uses `dbo:Monarch` to identify Narapati I as a monarch.
- Searches for an entity with the name ""Narapati I"" in English (`foaf:name ""Narapati I""@en`).
- Retrieves the child of this person using the `dbo:child` property.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
345,2,train,"Give me the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find Armando Heeb's association with a sports club
  dbr:Armando_Heeb dbo:memberOf ?player .
  
  # Ensure the player is a sports club
  ?player rdf:type dbo:SportsClub .

  # Ensure the player is also an organization and a soccer club
  ?player rdf:type dbo:Organization ;
          rdf:type dbo:FootballClub .
}
```",1,4,2,1,1,3,2,20,0,0,8,0,0.0,0
314,5,train,"Give me the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession
WHERE {
  ?person rdfs:label ""Lisa Gavrić""@en .
  ?person dbo:occupation ?profession .

  ?profession a dbo:Event ;
              a dbo:SocietalEvent .
  
  FILTER (lang(?person) = 'en')
}
```",1,3,2,1,1,2,3,28,0,0,2,0,0.0,0
801,2,train,Give me the associated musical artist of Chris Taylor (music producer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person rdfs:label ""Chris Taylor (music producer)""@en .
  ?person a dbo:MusicProducer .
  ?person dbo:associatedBand ?artist .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
64,0,train,Give me the alma mater of Jovan Hristić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater
WHERE {
  dbr:Jovan_Hristić dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
339,0,train,Give me the child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  dbr:George_I_of_Greece dbo:child dbr:?child .
}
```

This query uses the `dbo:child` property to find individuals who are children of George I of Greece. The `?child` variable will be replaced with actual DBpedia resources representing his children.",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
48,5,train,"Give me the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName WHERE {
  # Find actors of the movie ""Honor Up""
  ?movie dbo:starring ?actor .
  
  # Ensure the movie is ""Honor Up""
  FILTER(STR(?movie) = STR(dbr:Honor_Up))
  
  # Get actor's name
  ?actor foaf:name ?actorName .

  # Filter actors who are also musical artists
  OPTIONAL {
    ?artist dbo:genre dbr:Musical_arts .
    ?actor owl:sameAs ?artist .
  }
  
  FILTER EXISTS { ?actor owl:sameAs ?artist }
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
54,8,train,"Give me the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Thihapate of Mohnyin as a person
  dbr:Thihapate_of_Mohnyin dbo:spouse ?parent .

  # The child who is an office holder and royalty
  ?parent dbo:child ?child .
  ?child rdf:type dbo:Monarch .  # Assuming royalty implies being a monarch
  ?child dbo:officeHolder ?office .
  
  FILTER EXISTS { ?office rdf:type dbo:PublicOffice }  # Ensuring the child is an office holder
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
184,8,train,Give me the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  dbr:Archduke_Joseph_Francis_of_Austria dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
294,4,train,Who is the architect of P. D. Houston Jr. House?,SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?architect WHERE {
  ?house dbo:architect ?architect .
  ?house rdfs:label ""P. D. Houston Jr. House""@en .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
161,15,train,"Give me the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?force dbo:socialEvent ?event .
  ?force dbo:event ?generalEvent .
  ?force dbo:militaryConflict ?conflict .

  ?person dbo:deathPlace dbr:Francoist_Spain ;
          dbo:decedent ?force .

  FILTER (YEAR(?person.dbo:dateOfDeath) >= 1939 && YEAR(?person.dbo:dateOfDeath) <= 1975)
}
```",2,5,3,2,1,3,3,71,0,0,29,0,0.0,0
356,1,train,Give me the team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team
WHERE {
  ?person foaf:name ""Mark Briggs""@en .
  ?person dbo:team ?team .
}
```

This query assumes:
- `foaf:name` is used to identify the person by name.
- `dbo:team` links a person to their team.

4. **Validation**:
   - Ensure that the prefixes and properties are correctly aligned with DBpedia's schema.
   - Test the query on a SPARQL endpoint to verify it returns expected results.",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
378,15,train,Who is the person born as the birth name of Carl Pontus Gahn?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Carl Pontus Gahn"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
963,4,train,Give me the location for 21205.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/postalCode> ""21205"" . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?location WHERE {
  ?postalCode dbo:postalCode ""21205"" .
  ?postalCode dbo:country dbr:United_States .
  ?postalCode dbo:place dbr:Maryland .
  ?postalCode dbo:city dbr:Baltimore .
  ?postalCode dbo:administrativeArea dbr:Maryland .
  OPTIONAL { ?postalCode dbo:location ?location . }
}
```

4. **Enhancements and Refinements**:
   - The query uses `OPTIONAL` to ensure that if the location is not directly available, it doesn't fail but still returns other relevant information.
   - It assumes ""21205"" refers to a postal code in Baltimore, Maryland, USA, based on common knowledge.

5. **Validation**:
   - Ensure correct use of DBpedia ontology classes and properties.
   - Check for syntax correctness and logical flow.",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
666,0,train,Give me the player in Steve Bruce.,SELECT ?result WHERE { <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?manager foaf:name ""Steve Bruce""@en .
  ?manager a dbo:FootballManager ;
           dbo:managedTeam ?team .

  ?team dbo:member ?player .
}
```

This query does the following:
- Identifies Steve Bruce as a `dbo:FootballManager`.
- Finds teams managed by him.
- Retrieves players who are members of those teams.",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
30,3,train,Give me the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?occupation
WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Édouard Alphonse James de Rothschild""@en .
  ?person dbo:occupation ?occupation .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
767,5,train,Give me the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?wikiPageID
WHERE {
  ?person a dbo:Person ;
          foaf:name ""George Kilbon Nash""@en .
  OPTIONAL { ?person dbo:wikiPageID ?wikiPageID . }
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
232,3,train,Give me the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName
WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Jon Pertwee"" .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
55,10,train,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  ?member dbo:performerIn dbr:San_Francisco_Symphony .
  ?member a dbo:Band ;
          a dbo:MusicalGroup .
  
  BIND(?member AS ?bandMember)
}
```

This query does the following:
- It selects entities (`?bandMember`) that are members of ""San Francisco Symphony"".
- It ensures these entities are classified as both `dbo:Band` and `dbo:MusicalGroup`.",2,4,3,2,1,2,3,28,0,0,15,0,0.0,0
696,5,train,Give me the award of Nie Rongzhen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award
WHERE {
  dbr:Nie_Rongzhen dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,3,2,0.0,0.0,0
701,7,train,"Give me the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?battle dbp:name ""Battle of Perire"" .
  ?battle dbo:commander ?commander .
  ?commander a dbo:Monarch ; # Assuming royalty is represented by Monarch class
             dbo:country ?country . # Optional to ensure the commander has a country association
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
314,11,train,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?role WHERE {
  ?person rdfs:label ""Lisa Gavrić""@en .
  ?person dbo:profession ?role .
  FILTER(CONTAINS(LCASE(?role), ""commander"")) .
  
  ?person dbo:memberOf ?organization .
  ?organization dbo:event ?event .

  ?event a dbo:Event ;
         rdf:type dbo:SocietalEvent .
}
```",2,4,3,2,1,2,3,28,0,0,28,0,0.0,0
281,17,train,"Give me the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession
WHERE {
  ?person dbo:officeHolderOf ?office .
  ?person dbo:politicalPartyMember ?party .
  ?person dbo:militaryUnit ?militaryUnit .
  
  FILTER(?militaryUnit = dbr:New_Zealand_Army)
  
  ?person dbo:occupation ?profession .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
10,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?name WHERE {
  ?professional a dbo:Person .
  ?professional dbo:occupation ?occupation .
  OPTIONAL { ?professional foaf:name ?name . }
  FILTER EXISTS { 
    ?domain rdfs:label ?fieldLabel .
    FILTER (CONTAINS(LCASE(?fieldLabel), LCASE(""<Domain>"")))
    ?professional dbo:fieldOfStudy ?domain .
  }
}
```

Replace `<Domain>` with the specific field or organization you're interested in.",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
645,7,train,"Give me the entity in the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
  ?person a dbo:Person ;
          foaf:name ""James Wilkes Maurice""@en .
  
  ?person dbo:residenceLocation ?location .
  
  ?location rdf:type dbo:Country ;
            rdfs:label ?country .
}
```",2,3,3,2,1,3,2,20,0,0,42999,0,0.0,0
421,4,train,Give me the birthplace of Samir Bekrić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  dbr:Samir_Bekrić dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
421,8,train,Give me the band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?award ?bandMember
WHERE {
  ?awardee dbo:award ?award .
  ?bandMember dbo:bandMember ?awardee .
}
```",2,2,3,2,1,2,3,28,0,169,582,0.0,0.0,0
232,2,train,Give me the native of London.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name
WHERE {
  ?person dbo:birthPlace dbr:London .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,8939,9076,0,0.4961976131001943,1.0,0.6632781776359724
92,3,train,Give me the name of Nevermore (2006 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?title
WHERE {
    ?film a dbo:Film .
    ?film dbo:title ?title .
    ?film dbo:releaseDate ?date .
    FILTER (CONTAINS(LCASE(str(?date)), ""2006""))
    FILTER(CONTAINS(LCASE(str(?title)), ""nevermore""))
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
528,5,train,Give me the work of --01-09.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?work ?title WHERE {
  ?work a dbo:CreativeWork .
  ?work dbo:dateCreated ?date .
  FILTER (YEAR(?date) = 2023 && MONTH(?date) = 1 && DAY(?date) = 9)
  OPTIONAL { ?work rdfs:label ?title . FILTER(LANG(?title) = ""en"") }
}
ORDER BY ?title
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,16,train,"Give me the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warName
WHERE {
  ?polishHorse a dbo:MilitaryUnit ;
               rdfs:label ""Polish Horse""@en .
  
  ?war a dbo:Event, dbo:MilitaryConflict ;
       rdfs:label ?warName .

  ?participation dbo:agent ?polishHorse ;
                 dbo:participant ?war .
}
```

This query does the following:
- Identifies the entity ""Polish Horse"" as a military unit.
- Selects wars that are both events and military conflicts.
- Links the participation of ""Polish Horse"" in these wars.",2,6,3,2,1,3,3,71,0,0,19,0,0.0,0
328,8,train,"Give me the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office
WHERE {
  ?person foaf:name ""Joseph Stalin""@en .
  ?person dbo:positionHeld ?office .
  ?office a dbo:GovernmentAgency .
  FILTER (strstarts(str(?person), str(dbr:Joseph_Stalin)))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
427,10,train,Give me the reference to Partito Popolare Italiano and party of Romano Prodi.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party1Label ?party2Label WHERE {
  # Partito Popolare Italiano
  dbr:Partito_Popolare_Italiano 
    a dbo:PoliticalParty ;
    rdfs:label ?party1Label .

  OPTIONAL {
    # Romano Prodi's associated party (Democratic Party)
    dbr:Romano_Prodi 
      dbo:affiliation ?party2 ;
    FILTER(?party2 != dbr:Partito_Popolare_Italiano) .
    
    ?party2
      a dbo:PoliticalParty ;
      rdfs:label ?party2Label .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
981,10,train,"Who is the person born, that is a beauty queen, as the author of Kamikaze Girls?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?author dbo:book dbr:Kamikaze_Girls .
  ?author a dbo:Person .
  ?author foaf:name ?name .

  OPTIONAL { 
    ?author dbo:title ""Miss Universe"" ; # Example beauty pageant title
            dbo:winnerYear ?year .
  }

  FILTER EXISTS {
    ?person dbo:birthDate ?date .
  }
}
```

- **Explanation**:
  - We use `dbo:book` to link the author to ""Kamikaze Girls"".
  - The `foaf:name` property retrieves the person's name.
  - An `OPTIONAL` clause checks if the person has been a beauty queen, using an example title like ""Miss Universe"". This can be expanded with more titles as needed.
  - A `FILTER EXISTS` ensures that we are dealing with a person by checking for birth date information.

This query assumes some flexibility in identifying beauty queens and may need adjustments based on available DBpedia data. The query is designed to retrieve the name of the author who fits all specified criteria.",2,3,3,2,1,3,2,20,0,0,120,0,0.0,0
328,1,train,Give me the commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?front a dbo:MilitaryFront ;
        dbo:partOf dbr:World_War_II .
  
  ?front dbo:commander ?commander .

  FILTER(CONTAINS(LCASE(STR(?front)), ""eastern front""))
}
```",1,1,2,1,1,3,3,71,0,0,63,0,0.0,0
318,0,train,Give me the person born in 1970.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthYear ""1970""^^xsd:gYear .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,2,2,9,2810,2664,0,0.5133357690902448,1.0,0.6784162240463544
404,6,train,"Who is the child, that is a royalty, of Ernest Augustus, Duke of Brunswick?","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?childName WHERE {
  ?child dbo:parent dbr:Ernest_Augustus,_Duke_of_Brunswick .
  ?child rdf:type dbo:RoyalFamilyMember .
  ?child rdfs:label ?childName .
  FILTER (LANG(?childName) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
339,7,train,Give me the child of the child of Christian IX of Denmark.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild
WHERE {
  ?parent dbo:spouse ?christianIX .
  FILTER (str(?christianIX) = ""Christian IX of Denmark"")
  
  ?parent dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,2,20,0,0,32,0,0.0,0
492,2,train,Give me the person decedent at Algiers.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name
WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Algiers .
  ?person foaf:name ?name .
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,119,132,3,0.47410358565737054,0.9754098360655737,0.6380697050938339
959,9,train,Give me the native of Japan and member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name
WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Japan .
  ?person foaf:name ?name .
  OPTIONAL { 
    ?university a dbo:EducationalInstitution ;
                foaf:member ?person .
    FILTER (str(?university) = ""University of Tsukuba"")
  }
}
```",2,2,3,1,2,3,3,71,0,2402,84,0.0,0.0,0
48,1,train,Give me the band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName
WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Murda Mook"" .
  
  ?membership dbo:member ?person ;
              dbo:organization ?band .
  
  ?band a dbo:Band ;
        rdfs:label ?bandName .
  
  FILTER (lang(?bandName) = 'en')
}
```

### Explanation:

- **PREFIX**: Define common prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT**: Choose `?bandName` to retrieve the name of the band.
- **WHERE**:
  - Identify Murda Mook as a `MusicalArtist`.
  - Use `dbo:member` to find his membership in an organization (band).
  - Ensure the organization is classified as a `Band`.
  - Retrieve the label (`rdfs:label`) of the band, filtering for English language labels.",1,1,2,1,1,3,2,20,0,0,10,0,0.0,0
392,6,train,Give me the region of Central European Time and entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?region ?entity
WHERE {
  ?region dbo:timeZone dbr:Central_European_Time .
  ?region geo:location ?location .
  ?location geo:lat ?lat .
  ?location geo:long ?long .
  FILTER (
    EXISTS { 
      SELECT ?place WHERE {
        ?place a dbo:Place ;
               geo:location ?loc .
        ?loc geo:lat ?plat ;
             geo:long ?plong .
        FILTER (?plat >= 36.0 && ?plat <= 47.5 && ?plong >= 6.0 && ?plong <= 19.0)
      }
    }
  )
  BIND(?region AS ?entity)
}
```

### Explanation

- **PREFIX**: Define prefixes for ontology and resource URIs.
- **SELECT Clause**: Choose `?region` and `?entity` to retrieve the region name and its corresponding entity.
- **WHERE Clause**:
  - Match regions with CET using `dbo:timeZone`.
  - Retrieve geographical coordinates of these regions.
  - Use a `FILTER` clause to ensure that the latitude and longitude fall within Italy's approximate bounding box (latitude between 36.0 and 47.5, longitude between 6.0 and 19.0).
- **BIND**: Assign the region as an entity for clarity in results.

This query effectively captures regions using CET and filters them by their geographical location to ensure they are within Italy.",2,2,3,1,2,2,3,28,0,0,513,0,0.0,0
427,6,train,Who is the father of Lamberto Andreotti?,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?person dbo:father ?father .
  ?person foaf:name ""Lamberto Andreotti""@en .
}
```

This query searches for a person (`?person`) who is identified as Lamberto Andreotti and retrieves the individual (`?father`) linked by the `dbo:father` property.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
701,14,train,Give me the spouse of the father of Merneptah.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouseName
WHERE {
  ?merneptah dbo:father ?father .
  ?father dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .
  
  FILTER (lang(?spouseName) = 'en')
  
  VALUES ?merneptah { <http://dbpedia.org/resource/Merneptah> }
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
404,2,train,"Give me the child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  ?person a dbo:CrownPrince ;
          foaf:name ""Ernest Augustus, Crown Prince of Hanover""@en .
  
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
48,8,train,"Give me the band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  ?actor rdfs:label ""Honor Up""@en .
  ?actor a dbo:Actor .
  ?actor dbo:musicalArtist true .
  ?actor dbo:associatedBand ?band .
}
```",2,3,3,2,1,3,2,20,0,0,10,0,0.0,0
184,14,train,Give me the parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandParent
WHERE {
  ?archduke dbo:child ?child .
  FILTER (str(?archduke) = ""Archduke Joseph Francis of Austria"") .

  ?child dbo:parent ?grandParent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
318,6,train,Give me the professional in the profession of Robert Xavier Rodriguez.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person ?name WHERE {
  # Find Robert Xavier Rodriguez's profession
  ?robert a dbo:FilmDirector ;
          foaf:name ""Robert Xavier Rodríguez"" .
  
  # Get the profession of Robert Xavier Rodriguez
  ?robert dbo:occupation ?profession .

  # Find other professionals with the same occupation
  ?person a dbo:Person ;
          dbo:occupation ?profession ;
          foaf:name ?name .
  
  FILTER(?person != ?robert) # Exclude Robert himself from results
}
ORDER BY ?name
```",2,2,3,2,1,2,2,9,0,0,1942,0,0.0,0
996,5,train,Give me the award of Ekrem Akurgal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Ekrem_Akurgal dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,4,0,1,1.0,0.8,0.888888888888889
617,10,train,"Give me the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?father WHERE {
  ?richeza rdf:type dbo:Royal ;
           foaf:name ""Richeza of Poland""@en .
  
  ?richeza dbo:father ?father .

  ?father rdf:type dbo:Royal .
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
281,9,train,"Give me the entity in Colony of New Zealand and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  # Resource for Colony of New Zealand
  dbr:Colony_of_New_Zealand dbo:relatedEvent ?event .
  
  # Resource or event related to Beauchamp Seymour, 1st Baron Alcester
  OPTIONAL { 
    ?event dbo:agent dbr:Beauchamp_Seymour_1st_Baron_Alcester .
  }
}
```

### Explanation:

- **PREFIX:** We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT Clause:** We select `?event`, which represents any event related to both entities.
- **WHERE Clause:**
  - The first triple pattern finds events related to the Colony of New Zealand.
  - The OPTIONAL clause checks if these events involve Beauchamp Seymour, 1st Baron Alcester.

This query aims to find historical events that connect the Colony of New Zealand with Beauchamp Seymour, 1st Baron Alcester. Adjustments may be needed based on specific DBpedia data availability and structure.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
339,5,train,Who is the child of Grand Duchess Elena Vladimirovna of Russia?,SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  ?parent a dbo:Person ;
          foaf:name ""Elena Vladimirovna of Russia""@en .
  
  ?parent dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
801,3,train,Give me the true self of The Shadow.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?realName
WHERE {
  dbr:The_Shadow dbo:alias ?alias .
  OPTIONAL { ?alias dbo:realName ?realName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
783,6,train,Give me the band member of Ebony Reigns and associated musical artist of Appietus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?associatedArtist
WHERE {
  # Find band members of Ebony Reigns
  { 
    ?ebony a dbo:MusicalArtist ;
           foaf:name ""Ebony Reigns"" .
    ?ebony dbo:bandMember ?bandMember .
  }
  
  UNION
  
  # Find associated musical artists of Appietus
  {
    ?appietus a dbo:MusicalArtist ;
              foaf:name ""Appietus"" .
    ?appietus dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
696,1,train,Give me the landmark at elevation of 50.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmarkName WHERE {
  ?landmark a dbo:Lighthouse .
  ?landmark rdfs:label ?landmarkName .
  FILTER (lang(?landmarkName) = 'en') .
  OPTIONAL { ?landmark dbo:elevationAboveSeaLevel ?elevation . }
  FILTER (?elevation = ""50""^^xsd:integer)
}
```

### Explanation

- **PREFIX**: Define common prefixes for DBpedia ontology and resources.
- **SELECT**: Choose the landmark name to display.
- **WHERE**:
  - Match entities that are of type `Lighthouse` (assuming landmarks refer to lighthouses; adjust if needed).
  - Retrieve the label (`rdfs:label`) as the landmark's name, ensuring it is in English.
  - Use an optional pattern for elevation and filter results where elevation equals 50.",1,1,2,1,1,3,2,20,0,0,599,0,0.0,0
391,15,train,"Give me the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname
WHERE {
  dbr:Jackson,_Tennessee dbo:nickname ?nickname .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
184,9,train,Give me the child of Archduke Joseph August of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  ?child dbo:parent dbr:Archduke_Joseph_August_of_Austria .
  ?child dbo:child dbr:Géza_von_Habsburg .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
44,6,train,"Give me the band member of the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member
WHERE {
  ?artist rdf:type dbo:MusicalGroup .
  ?artist rdf:type dbo:Organization .
  ?artist rdfs:label ""Queensrÿche""@en .

  ?artist dbo:bandMember ?member .
}
```",2,4,3,2,1,2,2,9,0,0,13,0,0.0,0
485,7,train,Give me the entity in United Kingdom and entity in Nottinghamshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity
WHERE {
  ?entity dbo:country dbr:United_Kingdom .
  OPTIONAL { ?entity dbp:county dbr:Nottinghamshire . }
}
```

This query selects distinct entities that are located in the United Kingdom and optionally filters those specifically within Nottinghamshire. The use of `OPTIONAL` ensures that we still retrieve all entities from the UK, even if they don't have a specific county listed.",2,2,3,1,2,2,3,28,0,0,357,0,0.0,0
747,14,train,Give me the band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band
WHERE {
  ?person foaf:name ""Tracey Elizabeth McSween"" .
  ?person dbo:band ?band .
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
314,8,train,Give me the person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?house dbo:headquarters ?headquarters .
  FILTER (str(?house) = ""House_of_Sombrerete"") .

  ?person dbo:deathPlace ?headquarters .
}
```",2,2,3,2,1,2,3,28,0,0,34,0,0.0,0
328,15,train,Give me the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?campaign rdfs:label ""Volcano and Ryukyu Islands campaign""@en .
  ?commander dbo:awarded ?award .
  ?commander dbo:participatedIn ?campaign .
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
314,9,train,Give me the commander in Spanish Civil War and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award
WHERE {
    ?commander a dbo:MilitaryPerson .
    ?commander dbo:nationality dbr:Spain .
    ?commander dbo:occupation dbr:Commander .

    ?warEvent dbo:location dbr:Spanish_Civil_War .
    ?commander dbo:participatedIn ?warEvent .

    ?award a dbo:Award .
    ?award dbo:name ""Order of the Golden Fleece"" ;
           dbo:recipient ?commander .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
328,6,train,Give me the force of Ferenc Szálasi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Ferenc Szálasi as an individual
  dbr:Ferenc_Szálasi a dbo:Person .

  # Political party affiliation
  OPTIONAL { 
    dbr:Ferenc_Szálasi dbo:partyAffiliation ?force .
  }

  # Military role or organization
  OPTIONAL {
    dbr:Ferenc_Szálasi dbo:militaryService ?force .
  }
}
```",1,1,2,1,1,3,3,71,0,1,3,0.0,0.0,0
827,6,train,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherLabel WHERE {
  ?williamErnest rdfs:label ""William Ernest, Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?charlesAlexander rdfs:label ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
  
  ?williamErnest dbo:child ?charlesAlexander .
  ?father dbo:father ?williamErnest .

  ?father rdfs:label ?fatherLabel .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,0,train,Give me the entity in Baden-Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?entity
WHERE {
  ?entity dbo:location dbr:Baden-Württemberg .
}",1,1,2,1,1,3,3,71,0,201,60,0.0,0.0,0
161,7,train,Who is the figure known as El Director?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entity ?label WHERE {
  ?entity rdfs:label ""El Director""@en.
  OPTIONAL { ?entity rdfs:comment ?description. }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
10,3,train,"Give me the person born, that is an artist, as Matt Colton.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:Artist .
  ?person foaf:name ""Matt Colton"" .
  OPTIONAL { ?person dbp:birthday ?birthDate . }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
345,10,train,"Who is the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personName WHERE {
  # Find Eiður Guðjohnsen's birth date
  dbr:Eiður_Guðjohnsen dbo:birthDate ?birthDate .

  # Find another person with the same birth date who is both a soccer player and manager
  ?person dbp:occupation ""Soccer player""@en .
  ?person dbp:occupation ""Soccer manager""@en .
  ?person dbo:birthDate ?birthDate .
  
  # Get the name of this person
  ?person rdfs:label ?personName .

  # Ensure it's not Eiður Guðjohnsen
  FILTER (?person != dbr:Eiður_Guðjohnsen)
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
184,1,train,Give me the child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?person a dbo:Archduke ;
          foaf:name ""Joseph August of Austria""@en .
  ?person dbo:child ?child .
}
```

This query assumes that the DBpedia resource for Archduke Joseph August of Austria can be identified by his name and type (`dbo:Archduke`). Adjustments might be necessary if a more specific URI is known.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
666,4,train,"Give me the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://xmlns.com/foaf/0.1/name> ""England""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference
WHERE {
  ?reference rdf:type dbo:SoccerClub .
  ?reference rdf:type dbo:SportsTeam .
  ?reference rdf:type dbo:Organization .
  ?reference dbo:country dbr:England .
}
```",1,4,2,1,1,3,2,20,0,0,4,0,0.0,0
712,6,train,Give me the resting place of Nina Onilova and capital of South Russia (1919–1920).,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace ?capitalCity
WHERE {
  # Find Nina Onilova's resting place
  OPTIONAL {
    ?ninaOnilova a dbo:Person ;
                 foaf:name ""Nina Onilova"" .
    ?ninaOnilova dbo:deathPlace ?restingPlace .
  }

  # Find the capital of South Russia (1919–1920)
  ?southRussia a dbo:Country ;
               rdfs:label ""South Russia""@en ;
               dbo:capital ?capitalCity .
}
```

### Explanation:

- **Nina Onilova's Resting Place**:
  - We look for an entity representing Nina Onilova and use the `dbo:deathPlace` property to find her resting place.

- **Capital of South Russia (1919–1920)**:
  - We identify ""South Russia"" as a country and retrieve its capital using the `dbo:capital` property. Note that historical context might require additional verification or manual adjustment if DBpedia does not have specific temporal data for this period.

### Considerations:

- Ensure that the labels and properties used are correct according to DBpedia's schema.
- Historical entities like ""South Russia"" may need careful handling due to potential changes in geopolitical boundaries over time.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
16,3,train,Give me the birth name of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName
WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Ted McGinley""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
528,4,train,Give me the military force of Battle of Pisagua.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?militaryForce WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Pisagua""@en .
  
  OPTIONAL { ?battle dbo:participatedIn ?militaryForce . }
  OPTIONAL { ?battle dbo:commander ?militaryCommander . }

  FILTER (lang(?battleLabel) = 'en')
}
```

### Explanation:

- **PREFIX**: Defines the `dbo` prefix for DBpedia ontology properties.
- **SELECT**: Retrieves military forces associated with the battle.
- **WHERE**:
  - Identifies the ""Battle of Pisagua"" using its label in English.
  - Uses `OPTIONAL` clauses to find entities related to participation and command, which might include military forces.

This query aims to capture any direct associations between the Battle of Pisagua and military forces or commanders as recorded in DBpedia.",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
838,9,train,"Give me the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  # Žika Jelić is a member of a band
  dbr:Žika_Jelić dbo:memberOf ?band .
  
  # The band is both a band and a group
  ?band rdf:type dbo:Band ;
        rdf:type dbo:Group .

  # Find members of the band who are artists and musical artists
  ?bandMember dbo:memberOf ?band ;
              rdf:type dbo:Artist ;
              rdf:type dbo:MusicalArtist .
}
```",2,6,3,2,1,3,2,20,0,0,4,0,0.0,0
801,14,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?album dbo:musicalArtist ?artist .
  ?album rdfs:label ""40 Dayz & 40 Nightz""@en .
  
  FILTER NOT EXISTS { ?artist a dbo:Band } # Ensuring it's not just a band
  FILTER EXISTS { ?artist a dbo:MusicalArtist } # Must be a musical artist
  FILTER EXISTS { ?artist a dbo:Artist } # Must also be an artist

  SERVICE <http://dbpedia.org/sparql> {
    ?album rdfs:label ""40 Dayz & 40 Nightz""@en .
  }
}
```",2,4,3,2,1,3,3,71,0,0,50,0,0.0,0
232,1,train,Give me the actor of Dog Soldiers (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor
WHERE {
  ?film rdf:type dbo:Film .
  ?film rdfs:label ""Dog Soldiers""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
92,15,train,"Give me the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artistName WHERE {
  ?film a dbo:Film .
  ?film rdfs:label ""Nevermore (2006 film)""@en .
  OPTIONAL { 
    ?film dbo:musicBy ?artist .
    ?artist rdfs:label ?artistName .
    FILTER(LANG(?artistName) = 'en')
  }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
312,5,train,"Give me the entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity a dbo:Settlement .
  ?entity a dbo:Region .
  ?entity a dbo:State .
  ?entity dbp:country dbr:Italy .
  
  OPTIONAL { ?entity dbo:administrativeUnit ?admin . }
  
  ?party dbo:member ?person .
  ?person dbo:memberOf ?entity .
  ?party rdfs:label ""Democratic Party (Italy)""@en .

  FILTER EXISTS {
    ?entity dbp:governingParty ?party .
  }
}
```",2,6,3,2,1,2,2,9,0,0,587,0,0.0,0
177,2,train,Give me the residence of Alexander Gamelin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alexander Gamelin""@en .
  OPTIONAL { 
    ?person dbo:residence ?residence .
  }
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
959,16,train,"Give me the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?residence WHERE {
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2010 && CONTAINS(LCASE(STR(?election)), ""japanese house of councillors""))
  
  ?candidate dbo:officeHolder ?position .
  ?position dbo:office dbr:House_of_Councillors_(Japan) .
  ?candidate dbo:leader ?leader .

  ?leader dbo:residenceLocation ?location .
  ?location rdf:type dbo:Country .
  BIND(?location AS ?residence)
}
```

This query does the following:
- Filters elections to find those related to the Japanese House of Councillors in 2010.
- Identifies candidates who held a position as leaders during this election.
- Retrieves their residence location, ensuring it is classified as a country.",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
182,3,train,Give me the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author
WHERE {
  VALUES ?event { dbr:Sri_Lanka_Easter_bombings_(2019) }
  
  OPTIONAL {
    ?event dbo:perpetrator ?author .
  }

  OPTIONAL {
    ?event dbo:author ?author .
  }
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
10,7,train,Give me the professional in  and associated musical artist of Matt Colton.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession ?associatedArtist WHERE {
  ?person rdfs:label ""Matt Colton""@en .
  ?person a dbo:Person .

  # Find profession
  OPTIONAL { 
    ?person dbo:occupation ?profession .
  }

  # Find associated musical artists
  OPTIONAL {
    ?work dbp:producer ?person ;
          dbo:artist ?associatedArtist .
  }
}
```

This query does the following:
- Uses `rdfs:label` to identify ""Matt Colton"" as a person.
- Retrieves his profession using `dbo:occupation`.
- Finds associated musical artists through works where he is listed as a producer.",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
696,3,train,Who is the member of Dropkick Murphys?,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member
WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""Dropkick Murphys""@en .
  ?band dbo:member ?member .
}
```

This query selects individuals (`?member`) who are members of the band identified as ""Dropkick Murphys."" The `rdfs:label` property is used to match the English label for the band.",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
285,3,train,Who is the child of Tina Onassis Niarchos?,SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Tina Onassis Niarchos""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
617,13,train,Give me the spouse of the child of Antiochus III the Great.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
   
SELECT ?spouse
WHERE {
    ?antiochus a dbo:Monarch ;
               foaf:name ""Antiochus III the Great"" .
    
    ?child dbo:parent ?antiochus ;
           dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
994,7,train,Give me the persona of Don Dokken.,SELECT ?result WHERE { <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?dateOfBirth ?spouse ?occupation ?genre ?album ?song
WHERE {
  VALUES ?donDokken { dbr:Don_Dokken }
  
  OPTIONAL { ?donDokken dbo:birthName ?birthName . }
  OPTIONAL { ?donDokken dbo:dateOfBirth ?dateOfBirth . }
  OPTIONAL { ?donDokken dbo:spouse ?spouse . }
  OPTIONAL { ?donDokken dbo:occupation ?occupation . }
  OPTIONAL { ?donDokken dbo:genre ?genre . }
  
  OPTIONAL {
    ?album dbo:artist ?donDokken ;
           rdfs:label ?albumLabel .
    FILTER (lang(?albumLabel) = 'en')
  }
  
  OPTIONAL {
    ?song dbo:artist ?donDokken ;
          rdfs:label ?songLabel .
    FILTER (lang(?songLabel) = 'en')
  }
}
```",1,1,2,1,1,3,3,71,0,3,1,0.0,0.0,0
754,0,train,Give me the parent of Loe Thai.,SELECT ?result WHERE { <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentName
WHERE {
  ?loethai a dbo:AdministrativeRegion .
  ?loethai rdfs:label ""Loe Thai""@en .
  ?loethai dbo:partOf ?parent .
  ?parent rdfs:label ?parentName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
77,2,train,Give me the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Maxim Grigorievich Vlasov""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,8,0,0,1.0,1.0,1.0
314,2,train,Give me the commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war dbo:wikiPageRedirects dbr:Spanish_Civil_War .
  ?war dbo:commander ?commander .
}
```",1,1,2,1,1,2,3,28,0,0,28,0,0.0,0
959,1,train,Give me the native of Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?language WHERE {
  ?country dbo:name ""Japan""@en .
  ?country dbo:officialLanguage ?language .
}
```

This query will return the official language of Japan as recorded in DBpedia.",1,1,2,1,1,3,3,71,0,0,8419,0,0.0,0
534,3,train,"Who is the child, that is a politician and an office holder, of Desmond FitzGerald (politician)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childName
WHERE {
  ?parent foaf:name ""Desmond FitzGerald""@en .
  ?parent dbo:spouse ?child .
  
  ?child foaf:name ?childName .
  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician"") || CONTAINS(LCASE(?occupation), ""office holder""))
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
365,6,train,Give me the reference to the real name of The Blasters.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?realName
WHERE {
  ?band rdfs:label ""The Blasters""@en .
  OPTIONAL { ?band foaf:name ?realName . }
  OPTIONAL { ?band dbp:aliasName ?realName . }
}
```",2,2,3,2,1,2,2,9,0,1,1,0.0,0.0,0
360,3,train,"Give me the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/property/author> ""Dave Flett""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?artist a dbo:MusicArtist ;
          foaf:name ""Dave Flett""@en .
  
  ?album dbo:artist ?artist ;
         a dbo:Album .

  FILTER(LANG(?album) = 'en')
}
```

This query does the following:
- Identifies Dave Flett as an artist.
- Retrieves albums (`?album`) associated with him using the `dbo:artist` predicate.
- Ensures that only English language album names are returned.",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
54,7,train,Give me the reference to Thihapate of Mohnyin.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?thihapateURI
WHERE {
  ?thihapateURI a dbo:Person .
  ?thihapateURI rdfs:label ""Thihapate of Mohnyin""@en .
}
```

This query uses the `dbo:Person` class to ensure we are looking at person entities and filters by the label ""Thihapate of Mohnyin"" in English.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
356,10,train,"Give me the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativePerson WHERE {
  # Identify Gary Williams' birthplace
  dbr:Gary_Williams_(footballer,_born_1960) dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is English and a settlement
  ?birthPlace dbp:country ""England"" ;
              rdf:type dbo:Settlement .

  # Find individuals who are both soccer players and managers
  ?nativePerson dbo:nationality ?birthPlace ;
                dbo:occupation ?occupation1, ?occupation2 .
  
  FILTER (
    ?occupation1 = dbo:SoccerPlayer &&
    ?occupation2 = dbo:SoccerManager
  )
}",2,6,3,2,1,3,2,20,0,0,17,0,0.0,0
429,1,train,Give me the country of 77th Ohio Infantry Regiment.,SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
  dbr:77th_Ohio_Infantry_Regiment dbo:country ?country .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
48,2,train,"Give me the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?producer a dbo:RecordProducer ;
            foaf:name ""Shellback"" .
  
  OPTIONAL { 
    ?album dbo:recordProducer ?producer ;
           dbo:title ?work .
  }
  
  OPTIONAL { 
    ?song dbo:composer ?producer ;
          dbo:title ?work .
  }
}
```",1,2,2,1,1,3,2,20,0,0,57,0,0.0,0
281,5,train,"Who is the leader, that is a politician, of 1962 New South Wales state election?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1976/01/rdf-schema#>

SELECT ?leader WHERE {
  ?election dbo:year ""1962"" ;
            dbo:stateOrTerritory dbr:New_South_Wales ;
            dbo:electionType dbr:State_election .
  
  ?office dbo:positionHeldBy ?leader ;
          dbo:electedDuring ?election .

  ?leader rdf:type dbo:Politician .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
281,2,train,Give me the war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warName
WHERE {
  ?army a dbo:MilitaryUnit ;
        rdfs:label ""New Zealand Army""@en .
  
  ?army dbo:participatedIn ?war .
  ?war a dbo:War ;
       rdfs:label ?warName .
}
```

### Explanation:
- **PREFIXes**: `dbo` for DBpedia ontology and `dbr` for resources.
- **SELECT DISTINCT ?warName**: Retrieves distinct names of wars.
- **WHERE Clause**:
  - Identifies the New Zealand Army as a military unit with the label ""New Zealand Army"".
  - Finds wars (`?war`) in which this army participated using the predicate `dbo:participatedIn`.
  - Ensures that these entities are classified as wars and retrieves their labels.

This query should effectively retrieve information about wars involving the New Zealand Army from DBpedia.",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
179,4,train,Who is the parent of Vajiralongkorn?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName
WHERE {
  ?vajiralongkorn a dbo:Person .
  ?vajiralongkorn rdfs:label ""Vajiralongkorn""@en .
  OPTIONAL { ?vajiralongkorn dbo:father ?parent . }
  OPTIONAL { ?vajiralongkorn dbo:mother ?parent . }
  ?parent rdfs:label ?parentName .
}
```

### Explanation:

- **PREFIX**: Define common prefixes for DBpedia ontology and properties.
- **SELECT**: Choose the parent's name as the output.
- **WHERE**:
  - Identify Vajiralongkorn using `rdfs:label`.
  - Use `OPTIONAL` clauses to account for either father or mother relationships.
  - Retrieve the label of the parent entity.

This query will return the names of Vajiralongkorn's parents if available in DBpedia.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
328,16,train,Give me the force of the person decedent at Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?force
WHERE {
  ?person dbo:deathPlace dbr:Budapest .
  OPTIONAL { ?person dbo:abstract ?abstract . FILTER(CONTAINS(LCASE(?abstract), ""force"")) }
  OPTIONAL { ?person rdfs:label ?name FILTER (LANG(?name) = 'en') }
}
ORDER BY ?person
```

This query attempts to find individuals who died in Budapest and have some mention of ""force"" in their abstract or description. The `OPTIONAL` clauses are used to enrich the data without making them mandatory for a match.",2,2,3,2,1,3,3,71,0,0,23,0,0.0,0
64,5,train,"Give me the alma mater of the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMaterName
WHERE {
  ?person a dbo:Writer .
  ?person dbo:deathPlace dbr:Sremska_Kamenica .
  ?person dbo:almaMater ?almaMater .
  ?almaMater rdfs:label ?almaMaterName .
  FILTER (lang(?almaMaterName) = 'en')
}
```",2,3,3,2,1,2,2,9,0,1,1,0.0,0.0,0
767,15,train,"Give me the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  # Link Dustin Lynch to the album ""Where It's At""
  dbr:Dustin_Lynch dbo:album dbr:Where_It%27s_At_(Dustin_Lynch_album) .
  
  # Find the place of birth or residence (settlement) associated with Dustin Lynch
  OPTIONAL { 
    dbr:Dustin_Lynch dbo:birthPlace ?placeOfBirth .
    OPTIONAL { ?placeOfBirth a dbo:Settlement . }
  }
  OPTIONAL {
    dbr:Dustin_Lynch dbo:residence ?placeOfResidence .
    OPTIONAL { ?placeOfResidence a dbo:Settlement . }
  }

  # Link the settlement to its administration
  OPTIONAL {
    ?settlement dbo:administrativeRegion ?administration .
  }
  
  FILTER (?placeOfBirth != dbr:Unknown || ?placeOfResidence != dbr:Unknown)
}
```",2,3,3,2,1,3,3,71,0,0,31,0,0.0,0
251,5,train,Give me the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author
WHERE {
  ?book a dbo:Book .
  ?book rdfs:label ""The Twelve Abbots of Challant""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
314,1,train,Give me the awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee
WHERE {
  ?award a dbo:Award ;
         dbo:year ""30""^^xsd:gYear .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,2,3,28,0,0,951,0,0.0,0
184,12,train,Give me the parent of Archduchess Ilona of Austria and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  dbr:Archduchess_Ilona_of_Austria dbo:parent ?parent .
  
  ?child dbo:parent dbr:Archduke_Joseph_August_of_Austria .

  FILTER (?parent = ?child)
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
328,5,train,Who is the person decedent at Budapest?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?personLabel WHERE {
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ""Budapest""@en .
  ?person rdfs:label ?personLabel .
}
```",1,1,2,1,1,3,3,71,0,1144,1147,0.0,0.0,0
184,11,train,Give me the parent of the native of Budapest.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  ?person dbo:birthPlace dbr:Budapest .
  ?person dbo:parent ?parent .
}
```

This query assumes:
- `dbo:birthPlace` is used to identify the birthplace of a person.
- `dbo:parent` is used to find the parent of an individual.",2,2,3,2,1,3,3,71,0,0,19,0,0.0,0
617,8,train,Who is the child of Antiochus (son of Antiochus III the Great)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  ?antiochus dbp:father dbr:Antiochus_III_the_Great .
  ?antiochus dbo:child ?child .
}
```

This query assumes that Antiochus is identified by his father, Antiochus III the Great. The `dbo:child` property is used to find children of a given individual.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
492,11,train,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?successor WHERE {
  ?satterthwaite a dbo:GovernmentFunction ;
                  dbp:title ""Assistant Secretary of State for African Affairs""@en .
  ?satterthwaite dbp:succeededBy ?successor .
  FILTER (str(?satterthwaite) = str(dbpedia:Joseph_C._Satterthwaite))
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
645,2,train,Give me the commander in Battle of Diamond Rock.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander
WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Diamond Rock""@en .
  ?battle dbo:commander ?commander .
}
```

This query uses the `dbo:Battle` class to identify battles and links them with their commanders using the `dbo:commander` property. The battle is identified by its label, ensuring we target the correct historical event.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
16,1,train,Give me the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actress ?occupation
WHERE {
  ?actress a dbo:Actress .
  ?actress dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,3,71,0,0,19241,0,0.0,0
498,1,train,Give me the band of Will Rahmer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?band
WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Will Rahmer"" .
  ?membership dbo:member ?person .
  ?membership dbo:musicalGroup ?band .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
747,7,train,Give me the persona of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?name ?birthDate ?occupation ?abstract
WHERE {
  VALUES ?person { dbr:Shèna }
  
  ?person a dbo:Person .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') . }
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  OPTIONAL { ?person dbo:occupation ?occupation . }
  OPTIONAL { ?person dbo:abstract ?abstract FILTER (lang(?abstract) = 'en') . }
}
```",1,1,2,1,1,3,3,71,0,2,1,0.0,0.0,0
915,6,train,"Give me the father of Lizzie Spaulding and resident of Springfield, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?lizzie a dbo:Person ;
          dbo:child dbr:Lizzie_Spaulding .
  
  ?father a dbo:Person ;
          dbo:child ?lizzie .

  ?resident a dbo:Person ;
            dbo:residence dbr:Springfield,_Illinois ;
            owl:sameAs ?father .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
161,0,train,Give me the military force of Rif War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Spanish forces
  VALUES ?spanishForces { 
    dbr:Spanish_Army 
    dbr:French_Foreign_Legion 
  }
  
  ?spanishForces dbo:participatedIn dbr:Rif_War .

  # Berber tribes
  ?berberTribes dbo:participatedIn dbr:Rif_War .
  
  BIND(?spanishForces AS ?militaryForce)
  UNION
  BIND(?berberTribes AS ?militaryForce)
}
```",1,1,2,1,1,3,3,71,0,0,56,0,0.0,0
179,2,train,"Who is the child, that is a royalty, of Nakkhatra Mangala?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?childName
WHERE {
  ?parent rdfs:label ""Nakkhatra Mangala""@en .
  ?parent dbo:child ?child .
  ?child rdf:type dbo:RoyalFamilyMember .
  ?child rdfs:label ?childName .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
356,0,train,Give me the player in 2015 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?team a dbo:SoccerClub ;
        foaf:name ""Sacramento Republic FC""@en .
  
  ?season dbo:club ?team ;
          dbo:year ""2015""^^xsd:gYear .

  ?player dbo:playsFor ?team ;
          dbo:playedInSeason ?season .
}
```

This query does the following:
- Selects players (`?player`) who played for Sacramento Republic FC in the 2015 season.
- Uses `dbo:SoccerClub` to identify the team and `foaf:name` to specify ""Sacramento Republic FC.""
- Links the team to a specific season using `dbo:club` and `dbo:year`.
- Connects players to the team and season using `dbo:playsFor` and `dbo:playedInSeason`.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
54,3,train,Give me the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?childName
WHERE {
  ?person dbo:name ""Thinkhaya""@en .
  ?person dbo:spouse ?spouse . # Assuming Thinkhaya is linked to Pagan through spouse or another relation
  ?spouse dbo:placeOfBirth dbr:Pagan . # Linking Thinkhaya indirectly to Pagan
  ?person dbo:child ?child .
  ?child dbo:name ?childName .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
9,4,train,"Who is the mayor, that is a politician, of Northern Ireland Forum?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayor WHERE {
  ?mayor rdf:type dbo:Mayor .
  ?mayor dbo:office dbp:NorthernIrelandForum .
  ?mayor rdf:type dbp:politician .
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
626,4,train,Who is the military force of Battle of Borodino?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  ?unit a dbo:MilitaryUnit .
  ?unit dbo:militaryUnitOf ?country .
  ?unit dbo:participatedIn dbr:Battle_of_Borodino .
}
```",1,1,2,1,1,3,2,20,0,0,52,0,0.0,0
10,9,train,Give me the professional in  and band member of Luke Vibert.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalRole ?bandMember
WHERE {
  VALUES ?lukeVibert { dbr:Luke_Vibert }
  
  OPTIONAL {
    ?lukeVibert dbo:profession ?professionalRole .
  }

  OPTIONAL {
    ?lukeVibert dbo:memberOfBand ?bandMember .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
485,4,train,"Who is the awardee, that is a writer and a poet, of Eric Gregory Award?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:recipient ?awardee .
  ?award rdf:type dbr:Erich_Gregory_Award .
  ?awardee dbo:occupation ?occupation1 .
  ?awardee dbo:occupation ?occupation2 .
  FILTER (
    (str(?occupation1) = ""Writer"" || str(?occupation1) = ""Poet"") &&
    (str(?occupation2) = ""Writer"" || str(?occupation2) = ""Poet"")
  )
}
```",1,3,2,1,1,2,3,28,0,0,7,0,0.0,0
783,2,train,Give me the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?givenName ?familyName WHERE {
  ?person a foaf:Person .
  OPTIONAL { ?person foaf:givenName ?givenName . }
  OPTIONAL { ?person foaf:familyName ?familyName . }
  FILTER (?givenName = ""Samuel"" && ?familyName = ""Ofori Amponsah"")
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
182,11,train,Give me the entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity
WHERE {
  # Find Tamara Kunanayakam's nationality
  dbr:Tamara_Kunanayakam dbo:nationality ?nationality .

  # Find other entities with the same nationality
  ?entity a dbo:Person .
  ?entity dbo:nationality ?nationality .
  
  FILTER(?entity != dbr:Tamara_Kunanayakam) # Exclude Tamara Kunanayakam herself
}
```",2,2,3,2,1,2,3,28,0,860,62,0.0,0.0,0
488,17,train,"Who is the father of the spouse, that is a royalty, of Tokugawa Masako?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherName
WHERE {
  ?masako a dbo:Person ;
          dbp:name ""Tokugawa Masako""@en .
  
  ?masako dbo:spouse ?spouse .

  ?spouse a dbo:RoyalFamilyMember ; # Assuming royalty is represented by this class
          dbo:father ?father .

  BIND(str(?father) AS ?fatherName)
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
827,0,train,"Give me the child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?person dbo:givenName ""Charles"" .
  ?person dbo:familyName ""Alexander"" .
  ?person dbo:title ""Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
92,0,train,Give me the band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName
WHERE {
  ?band dbr:Nevermore ;
        dbo:bandMember ?member .
  ?member rdfs:label ?memberName .
  FILTER (LANG(?memberName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
115,6,train,Give me the alma mater of the awardee of National Order of Scientific Merit.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?university
WHERE {
  ?person dbo:award dbr:National_Order_of_Scientific_Merit .
  OPTIONAL { ?person dbo:almaMater ?university . }
}
```

This query does the following:
- Selects individuals (`?person`) who have received the ""National Order of Scientific Merit.""
- Optionally retrieves their alma mater (`?university`).",2,2,3,2,1,2,2,9,0,0,5,0,0.0,0
701,2,train,Give me the spouse of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseName
WHERE {
  ?ramesses2 a dbo:Monarch ;
             foaf:name ""Ramesses II""@en .
  ?ramesses2 dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
465,6,train,"Give me the administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?politicalParty ?organization
WHERE {
  ?chamber dbr:Chamber_of_Deputies_of_the_Czech_Republic .
  ?leader dbo:leaderOf ?chamber .
  ?leader dbo:politicalParty ?politicalParty .
  ?leader dbo:memberOf ?organization .

  OPTIONAL { ?leader dbo:administration ?administration }
}
```",2,4,3,2,1,2,2,9,0,0,50,0,0.0,0
285,8,train,Give me the spouse of the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?professional dbo:occupation ?occupation .
  FILTER regex(?occupation, ""Professional"", ""i"") .  # Assuming a general filter for professionals
  ?professional foaf:mbox ?email .                  # Example of identifying a professional by email or another property
  OPTIONAL { ?professional foaf:spouse ?spouse }    # Retrieve spouse if available
}
```

**Notes**:
- Replace `?professional` with specific criteria to identify the desired professional.
- Adjust the filter and properties based on more precise information about the professional's characteristics.",2,2,3,2,1,3,2,20,0,0,4149,0,0.0,0
820,8,train,Give me the child of the parent of Jason Schwartzman.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . ?result <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child
WHERE {
  ?jason a dbo:Person ;
         foaf:name ""Jason Schwartzman""@en .
  
  ?parent dbo:child ?jason .
  
  ?parent dbo:child ?child .
}
```

This query assumes:
- `dbo:Person` is the class for people.
- `foaf:name` is used to identify Jason Schwartzman by name.
- `dbo:child` is the property linking parents and children.",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
778,0,train,Give me the entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity
WHERE {
  ?entity dbo:country dbr:United_States .
}
```

This query selects entities (`?entity`) that have a `dbo:country` relationship with the United States (represented by `dbr:United_States` in DBpedia).",1,1,2,1,1,3,2,20,0,0,13008,0,0.0,0
161,3,train,Who is the person decedent at Francoist Spain?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:deathPlace dbr:Francoist_Spain .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
LIMIT 10",1,1,2,1,1,3,3,71,10,10,115,0.5,0.08,0.13793103448275865
303,6,train,Give me the entity in Panama and party of Guillermo Endara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInPanama ?politicalParty
WHERE {
  # Find Guillermo Endara's political party
  dbr:Guillermo_Endara dbo:party ?politicalParty .

  # Find entities in Panama (assuming we are looking for notable people or organizations)
  ?entityInPanama dbo:country dbr:Panama .
  
  OPTIONAL { 
    ?entityInPanama rdfs:label ?label FILTER (lang(?label) = 'en') .
  }
}
```

This query assumes:
- `dbo:party` is the property linking a person to their political party.
- `dbo:country` links an entity to its country, which we use to find entities in Panama.",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
547,17,train,Give me the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee
WHERE {
  ?award dbo:recipient dbr:Gerald_Graham .
  ?award dbo:winner ?awardee .
}
```

This query assumes:
- `dbo:recipient` is the predicate linking Gerald Graham to an award.
- `dbo:winner` is the predicate linking an award to its awardee.",2,2,3,2,1,3,3,71,0,0,2075,0,0.0,0
959,13,train,"Give me the native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace
WHERE {
  ?person dbo:residence ?residence .
  ?person rdfs:label ""Yōichi Masuzoe""@en .

  FILTER NOT EXISTS { ?residence a dbo:City } # Ensure residence is not a city

  OPTIONAL { ?residence dbo:nativePlace ?nativePlace }
}
```

This query does the following:
- Selects the native place of Yōichi Masuzoe's residence.
- Ensures that the residence is not classified as a city, implying it should be a country or similar higher-level administrative division.
- Uses `OPTIONAL` to retrieve the native place if available.",2,3,3,2,1,3,3,71,0,0,8419,0,0.0,0
251,3,train,"Give me the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:MilitaryPerson .
  ?person foaf:name ""Louis François Félix Musnier"" .
  ?person dbo:participatedIn ?war .
  FILTER (isLiteral(?war) = false)
}
```",1,2,2,1,1,2,3,28,0,0,16,0,0.0,0
182,10,train,Give me the war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?description WHERE {
  # Identify Gotabhaya Rajapaksa's DBpedia resource
  dbr:Gotabhaya_Rajapaksa a dbo:Person .
  
  # Find works related to him, focusing on roles or contributions during the war
  OPTIONAL { 
    dbr:Gotabhaya_Rajapaksa dbo:role ?work .
    ?work rdfs:label ?description FILTER (lang(?description) = 'en') .
  }
  
  # Optionally, link directly to the Sri Lankan Civil War for context
  OPTIONAL {
    ?war dbo:relatedPerson dbr:Gotabhaya_Rajapaksa ;
         rdfs:label ?warLabel FILTER (lang(?warLabel) = 'en' && regex(?warLabel, ""Sri Lankan Civil War"", ""i"")) .
  }
}
```",2,2,3,2,1,2,3,28,0,0,5,0,0.0,0
55,3,train,"Give me the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?song dbo:title ""Used to Love Her"" .
  ?song dbo:artist dbr:John_Mayer .
  ?song dbo:producer ?producer .

  ?producer a dbo:Band .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
981,5,train,"Who is the person born, that is a beauty queen, as ?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/property/birthName> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:BeautyQueen .
  ?person dbo:birthDate ?birthDate .
}
ORDER BY ?birthDate
```",1,2,2,1,1,3,2,20,110,3938,10,0.02717391304347826,0.9166666666666666,0.052783109404990404
485,9,train,Give me the entity in Nottinghamshire and birth place of Thomas Warner (poet).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInNottinghamshire ?birthPlace
WHERE {
  # Find entities in Nottinghamshire
  ?entityInNottinghamshire dbo:location dbr:Nottinghamshire .
  
  # Find Thomas Warner and his birthplace
  dbr:Thomas_Warner_(poet) a dbo:Person ;
    dbo:birthPlace ?birthPlace .

  # Optional: Link the entity in Nottinghamshire to Thomas Warner's birthplace if needed
  OPTIONAL {
    ?entityInNottinghamshire rdfs:label ?label .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
783,7,train,Give me the associated musical artist of the band member of Ofori Amponsah.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artistName
WHERE {
  # Find band members of Ofori Amponsah
  ?bandMember dbo:memberOf dbr:Ofori_Amponsah .
  
  # Find associated musical artists for each band member
  OPTIONAL { 
    ?bandMember dbo:associatedMusicalArtist ?artist .
    ?artist rdfs:label ?artistName .
    FILTER (lang(?artistName) = 'en')
  }
}
```",2,2,3,2,1,3,2,20,0,0,35,0,0.0,0
251,8,train,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/place> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?location WHERE {
  ?person rdfs:label ""Louis François Félix Musnier""@en .
  ?person dbo:militaryConflict ?war .
  ?war dbo:location ?location .
}
```

### Explanation:
- **Prefixes**: `dbo` for DBpedia ontology and `dbr` for resources.
- **SELECT Clause**: Retrieves the location of the war (`?location`).
- **WHERE Clause**:
  - Finds a person with the label ""Louis François Félix Musnier"".
  - Links this person to a military conflict (`?war`) using the predicate `dbo:militaryConflict`.
  - Retrieves the location of that war.

This query assumes that DBpedia has structured data linking individuals to their associated military conflicts and the locations of those conflicts. Adjustments may be needed based on actual dataset specifics.",2,3,3,2,1,2,3,28,0,0,25,0,0.0,0
345,3,train,Give me the nickname of FC Vaduz.,SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?nickname
WHERE {
  { 
    dbpedia:FC_Vaduz dbo:nickName ?nickname .
  }
}
```

This query will retrieve the nickname of FC Vaduz from DBpedia.",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
92,9,train,Give me the band member of Nevermore and associated musical artist of Jim Sheppard.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist
WHERE {
  # Find band members of Nevermore
  ?member dbo:memberOfBand dbr:Nevermore .
  
  # Get the name of each member
  ?member rdfs:label ?bandMember .

  FILTER (LANG(?bandMember) = 'en')

  OPTIONAL {
    # Find associated musical artists for Jim Sheppard
    ?sheppard dbo:associatedMusicalArtist ?artist .
    
    # Ensure we are referring to Jim Sheppard
    ?sheppard rdfs:label ""Jim Sheppard""@en .

    # Get the name of each associated artist
    ?artist rdfs:label ?associatedArtist .

    FILTER (LANG(?associatedArtist) = 'en')
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
820,10,train,Who is the parent of the professional in Actor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parent
WHERE {
  ?actor a dbo:Actor .
  ?actor dbo:spouseOrPartner ?person .
  ?person dbo:child ?actor .
  ?person ?parentPredicate ?parent .
}
```

### Explanation:

- **PREFIX**: We define `dbo` for DBpedia Ontology and `rdf` for RDF syntax.
- **SELECT Clause**: We select the variable `?parent`, which represents the parent of an actor.
- **WHERE Clause**:
  - `?actor a dbo:Actor .`: Identifies individuals who are actors.
  - `?actor dbo:spouseOrPartner ?person .`: Finds people related to the actor, potentially parents.
  - `?person dbo:child ?actor .`: Ensures that the person is indeed a parent of the actor.
  - `?person ?parentPredicate ?parent .`: Captures any relationship indicating a parental connection.

This query assumes that DBpedia has structured data where actors are linked to their children and parents through specific properties. Adjustments might be necessary based on actual schema details in DBpedia.",2,2,3,2,1,3,2,20,0,0,921,0,0.0,0
626,1,train,Give me the awardee of Order of St. Andrew.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient
WHERE {
  ?award a dbo:Award ;
         rdfs:label ""Order of St. Andrew""@en .
  
  ?award dbo:recipient ?recipient .
}
```",1,1,2,1,1,3,2,20,0,0,33,0,0.0,0
161,11,train,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Identify Francisco Franco
  dbr:Franco_Francisco_of_Spain dbo:commander ?militaryForce .
  
  # Ensure the military force is involved in societal events, general events, and military conflicts
  ?militaryForce dbo:participatedIn ?event .
  ?event rdf:type ?eventType .

  FILTER (
    ?eventType IN (dbr:Societal_event, dbr:Event, dbr:Military_conflict)
  )
}
```",2,5,3,2,1,3,3,71,0,0,545,0,0.0,0
666,3,train,"Give me the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName WHERE {
  ?team a dbo:SoccerClub ;
        dbo:sportTeamSeason ?season .
  
  ?season dbo:club dbr:Hull_City_A.F.C. ;
          dbo:season ""2016–17""^^xsd:string .

  ?team dbo:manager ?manager .
  ?manager foaf:name ?managerName .
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
232,5,train,"Give me the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?name
WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en') .

  ?person dbo:occupation ?actorRole .
  ?actorRole rdfs:label ""Actor""@en .

  ?person dbo:occupation ?narratorRole .
  ?narratorRole rdfs:label ""Narrator""@en .

  ?person dbo:occupation ?producerRole .
  ?producerRole rdfs:label ""Producer""@en .
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
179,0,train,Give me the person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?fullName ?birthName ?dateOfBirth ?placeOfBirth
WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:name ?fullName . }
  OPTIONAL { ?person dbo:birthName ?birthName . }
  OPTIONAL { ?person dbo:dateOfBirth ?dateOfBirth . }
  OPTIONAL { ?person dbo:birthPlace ?placeOfBirth . }
  FILTER (?birthName = ""Mom Rajawongse Sirikit Kitiyakara"" || ?fullName = ""Mom Rajawongse Sirikit Kitiyakara"")
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
318,1,train,Give me the professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a foaf:Person .
  ?person dbo:occupation dbc:Composers .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,2,2,9,0,0,1916,0,0.0,0
838,10,train,"Give me the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","SELECT ?band WHERE {
  ?reference a dbo:Band ;
             dbo:associatedBand dbr:YU_Grupa .
  
  OPTIONAL { ?reference a dbo:Organization . }
  OPTIONAL { ?reference a dbo:MusicalGroup . }

  ?band dbo:associatedBand ?reference .
}
```

This query does the following:
- Identifies entities that are both bands and associated with YU Grupa.
- Checks if these references are also organizations or musical groups.
- Retrieves the band associated with such a reference.",2,5,3,2,1,3,2,20,0,0,8,0,0.0,0
9,12,train,Give me the figure known as QUB and alma mater of Allen Hill (scientist).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT ?university WHERE {
  ?person wdt:P31 wd:Q5; # Allen Hill is a human (wdt:P31 - instance of, wd:Q5 - human)
          wdt:P69 wd:Q1119503. # Allen Hill's alma mater (wdt:P69 - educational institution)

  ?university rdfs:label ""Queen's University Belfast""@en . # QUB is the university we are interested in

  FILTER (?person = wd:Q1119503) # Ensure the person is Allen Hill
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
9,16,train,"Who is the awardee of the reference, that is an award, to Royal Medals?","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award .
  ?award dbo:awardedBy dbr:Royal_Medal .
  ?award dbo:recipient ?awardee .
}
```",2,3,3,2,1,3,3,71,0,0,45,0,0.0,0
328,11,train,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  dbr:Bruce_Fraser_1st_Baron_Fraser_of_North_Cape dbo:award ?award .
  
  OPTIONAL { 
    ?award dbo:recipient ?awardee .
  }
}
```",2,2,3,2,1,3,3,71,0,0,1484,0,0.0,0
915,3,train,"Give me the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Stephen Verona""@en .
  
  ?person dbo:birthPlace ?birthPlace .

  FILTER EXISTS { 
    ?birthPlace a dbo:Settlement .
  }
}
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
55,4,train,"Give me the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?memberName WHERE {
  ?symphony dbo:performer ?member .
  ?member rdfs:label ?memberName .
  FILTER(CONTAINS(LCASE(?memberName), ""san francisco symphony"")) .

  ?member a dbo:Band ;
          a dbo:Group .

  FILTER(langMatches(lang(?memberName), ""EN""))
}
```",1,3,2,1,1,2,3,28,0,0,3,0,0.0,0
345,1,train,Give me the team of Alessandro Mangiarratti.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team
WHERE {
  ?person a dbo:FootballPlayer .
  ?person foaf:name ""Alessandro Mangiarratti""@en .
  ?person dbo:team ?team .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
55,6,train,Give me the band member of Metallica and band member of Guns N' Roses.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?memberName
WHERE {
  # Metallica band members
  ?metallicaMember dbo:bandMember <http://dbpedia.org/resource/Metallica> .
  
  # Guns N' Roses band members
  ?gunsNRosesMember dbo:bandMember <http://dbpedia.org/resource/Guns_N%27_Roses> .

  # Ensure the same person is a member of both bands
  FILTER (?metallicaMember = ?gunsNRosesMember)

  # Get the name of the band member
  ?metallicaMember foaf:name ?memberName .
}
ORDER BY ?memberName",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
827,2,train,"Who is the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
547,12,train,Give me the resting place of Simon Cadell and resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?restingPlace
WHERE {
  VALUES ?person { 
    dbr:Simon_Cadell 
    dbr:Alan_Cunningham_(actor)
  }
  
  ?person dbo:name ?name .
  OPTIONAL { ?person dbo:finalBurialPlace ?restingPlace . }
}
```

### Explanation

- **PREFIX**: Define prefixes for ontology (`dbo`) and properties (`dbp`).
- **SELECT Clause**: Choose the variables to return, which are the person's URI, name, and resting place.
- **WHERE Clause**:
  - Use `VALUES` to specify the URIs of Simon Cadell and Alan Cunningham.
  - Retrieve their names using `dbo:name`.
  - Use an `OPTIONAL` clause for `dbo:finalBurialPlace` to get the burial site if available.

This query will return the names and resting places of both individuals, provided this information is available in DBpedia.",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
92,4,train,"Give me the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?band dbr:Nevermore .
  ?band dbo:bandMember ?artist .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
378,12,train,"Give me the war of Joaquín Blake and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?claimToFame
WHERE {
  # Joaquín Blake and his associated war
  dbr:Joaqu%C3%ADn_Blake dbo:participatedIn ?war .
  
  # Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and his claim to fame
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mah%C3%B3n dbo:claimToFame ?claimToFame .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
645,1,train,Give me the alma mater of Sylvia Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater
WHERE {
  dbr:Sylvia_Pankhurst dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
427,3,train,Give me the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Michele Pinto""@en .
  OPTIONAL { 
    ?person dbo:partyAffiliation ?party .
  }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
498,6,train,"Give me the band of the member, that is an artist, of Mortician (band).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?memberBand
WHERE {
  ?m a dbo:MusicalArtist .
  ?m dbo:bandMemberOf <http://dbpedia.org/resource/Mortician> .
  ?m dbo:associatedBand ?memberBand .
}
```

This query does the following:
- Selects members (`?m`) who are musical artists.
- Filters those who are band members of Mortician.
- Retrieves the associated bands (`?memberBand`) for these members.",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
44,1,train,Give me the band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName
WHERE {
  ?band dbr:Sledgeback ;
        dbo:bandMember ?member .
  ?member foaf:name ?memberName .
}
```",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
281,15,train,Who is the awardee of the award of Jonathon Band?,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee
WHERE {
  ?award dbo:recipient dbr:Jonathon_Band .
  ?award dbo:recipient ?awardee .
}
```

This query assumes that the award Jonathon Band received is linked to other recipients (awardees) through the same property `dbo:recipient`. The query retrieves all entities (`?awardee`) who are recipients of any award that Jonathon Band has also been a recipient of.",2,2,3,2,1,3,3,71,0,0,558,0,0.0,0
435,3,train,"Give me the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?townName
WHERE {
  ?town a dbo:Town ;
        rdfs:label ?townName ;
        dbo:country dbr:Iceland .
  
  OPTIONAL { 
    ?town dbo:alternateName ""Land of Fire and Ice""@en .
  }
}
```",1,4,2,1,1,2,3,28,0,101,1,0.0,0.0,0
421,10,train,Give me the native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native
WHERE {
  # Find Samir Bekrić's birthplace
  dbr:Samir_Bekrić dbo:birthPlace ?birthPlace .

  # Find who is native to that birthplace
  ?native dbo:nativeOf ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,0,5492,0,0.0,0
659,12,train,Give me the military force of Napoleonic Wars and commander in Battle of Leipzig.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?commander
WHERE {
  # Find military forces involved in the Napoleonic Wars
  ?event a dbo:MilitaryConflict ;
         rdfs:label ""Napoleonic Wars""@en .
  
  ?militaryForce dbo:participatedIn ?event .

  OPTIONAL {
    # Find commanders at the Battle of Leipzig
    ?battleEvent a dbo:Battle ;
                 rdfs:label ""Battle of Leipzig""@en .
    
    ?commander dbo:commanded ?battleEvent .
  }
}
```",2,2,3,1,2,3,3,71,0,0,5,0,0.0,0
712,1,train,Give me the resting place of Nina Onilova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace
WHERE {
  dbr:Nina_Onilova dbo:finalBurialPlace ?burialPlace .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
959,6,train,"Give me the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence
WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Yōichi Masuzoe""@en .
  ?person dbo:residenceLocation ?residence .
  FILTER (?residence != dbr:Japan) # Assuming Japan is not the desired result as it's his nationality.
  ?residence a dbo:Country .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
712,2,train,"Give me the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?uprising dcterms:subject ?subject .
  FILTER(CONTAINS(LCASE(?uprising), ""vyoshenskaya uprising"")) .

  ?subject dbo:militaryUnit ?militaryForce ;
           a dbo:MilitaryOrganization .

  OPTIONAL { 
    ?militaryForce rdfs:label ?label .
    FILTER (langMatches(lang(?label), ""EN""))
  }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
783,3,train,Give me the band member of Ofori Amponsah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMemberName
WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Ofori Amponsah""@en .
  
  ?person dbo:bandMember ?member .
  ?member foaf:name ?bandMemberName .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
232,17,train,"Give me the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person a dbo:Politician ;
          dbo:country dbr:France ;
          dbo:officeHolderOf dbr:France .
  
  ?person dbo:nationality dbr:French ;
          dbo:birthPlace ?native .

  ?native dbo:settlementType dbp:Settlement ;
          dbo:country dbr:United_Kingdom .

  ?native dbo:residence ?residence .
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
179,10,train,Who is the child of the parent of Vajiralongkorn?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  ?vajiralongkorn dbo:parent ?parent .
  FILTER(STR(?vajiralongkorn) = ""Vajiralongkorn"")
  
  ?parent dbo:child ?child .
}
```

This query assumes that the relationships are represented using `dbo:parent` and `dbo:child`. Adjustments may be necessary if different properties are used in DBpedia.",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
10,10,train,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  ?person dbo:birthName ""Luke Francis Vibert"" .
  ?person a dbo:Artist .
  ?person dbo:memberOfBand ?band .
  ?bandMember dbo:memberOfBand ?band ;
              dbo:birthName ?name .
}
```",2,3,3,2,1,2,3,28,0,0,3,0,0.0,0
783,1,train,Give me the band member of Ebony Reigns.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMemberName
WHERE {
  # Find the resource for Ebony Reigns
  dbr:Ebony_Reigns a dbo:MusicalArtist .

  # Look for band members associated with her
  ?ebonyReigns dbo:bandMember ?bandMember .
  
  # Get the name of each band member
  ?bandMember rdfs:label ?bandMemberName .
  
  FILTER (lang(?bandMemberName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,15137,7,0.0,0.0,0
232,0,train,Give me the child of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?person dbo:birthName ""Jon Pertwee""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
182,4,train,Give me the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?position ?organization WHERE {
  VALUES ?person { dbr:Gotabhaya_Rajapaksa }
  
  OPTIONAL {
    ?person dbo:positionHeld ?position .
  }

  OPTIONAL {
    ?person dbo:organizationLeader ?organization .
  }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
391,1,train,Give me the actor of The Departed.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor
WHERE {
  ?movie dbo:title ""The Departed""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
547,2,train,Give me the resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?placeOfBurial
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alan Cunningham""@en .
  ?person dbo:placeOfBurial ?placeOfBurial .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
142,5,train,Give me the entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity
WHERE {
  ?entity dbo:timeZone ?timezone .
  FILTER (str(?timezone) = ""Japan Standard Time"")
}
```

This query selects entities (`?entity`) that have a `dbo:timeZone` property linking them to ""Japan Standard Time.""",2,2,3,2,1,2,2,9,0,0,8922,0,0.0,0
981,7,train,Give me the entity in the region of Time in Indonesia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:locatedIn dbr:Indonesia .
  ?entity dbo:timeZone ?tz .
  ?tz rdfs:label ""Time""@en .
}
```",2,2,3,2,1,3,2,20,0,0,2949,0,0.0,0
659,9,train,Give me the commander in German campaign of 1813 and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commanderName WHERE {
  {
    # German Campaign of 1813
    ?campaign dbp:name ""German campaign of 1813""@en .
    ?campaign dbp:commander ?commander1 .
    ?commander1 rdfs:label ?commanderName1 .
    FILTER (LANG(?commanderName1) = 'en')
  }
  
  UNION
  
  {
    # Battle of Leipzig
    ?battle dbp:name ""Battle of Leipzig""@en .
    ?battle dbp:commander ?commander2 .
    ?commander2 rdfs:label ?commanderName2 .
    FILTER (LANG(?commanderName2) = 'en')
  }
}
```

### Explanation

- **PREFIX**: Define prefixes for DBpedia properties and ontology.
- **SELECT DISTINCT**: Ensure unique commander names are returned.
- **WHERE Clause**:
  - Two separate patterns using `UNION` to handle both the German campaign of 1813 and the Battle of Leipzig.
  - Each pattern retrieves commanders (`dbp:commander`) associated with the respective event.
  - Use `rdfs:label` to get the human-readable name of the commander, filtered for English language.

This query will return distinct names of commanders involved in either the German campaign of 1813 or the Battle of Leipzig.",2,2,3,1,2,3,3,71,0,0,16,0,0.0,0
465,5,train,Give me the death place of the native of Prague.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace
WHERE {
  ?person dbo:birthPlace dbr:Prague .
  ?person dbo:deathPlace ?deathPlace .
}
```",2,2,3,2,1,2,2,9,254,0,0,1.0,1.0,1.0
963,9,train,"Give me the region, that is a country, of the time zone of Herzegovina-Neretva Canton.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?country
WHERE {
  ?canton dbo:timeZone ?timezone .
  FILTER(STRSTARTS(LCASE(?canton), ""herzegovina-neretva canton""))
  
  ?timezone geo:region ?country .
  FILTER(rdf:type(?country, dbo:Country))
}
```",2,3,3,2,1,3,2,20,0,0,56,0,0.0,0
801,1,train,Give me the producer of Westside Story (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer
WHERE {
  dbr:West_Side_Story_(song) dbo:producer ?producer .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
617,16,train,"Who is the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName
WHERE {
  # Find Antiochus, son of Antiochus III the Great
  dbr:Antiochus_III_the_Great dbo:son dbr:Antiochus .
  
  # Find successor of Antiochus
  dbr:Antiochus dbo:succeededBy ?successor .

  # Find children of the successor who are royalty
  ?successor dbo:child ?child .
  ?child a dbo:Monarch .  # Assuming 'Monarch' represents royalty

  # Retrieve child's name
  ?child rdfs:label ?childName .
  
  FILTER (lang(?childName) = ""en"")
}
```",2,3,3,2,1,3,3,71,0,0,6,0,0.0,0
820,7,train,Give me the professional in the award of Scott McCloud.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Scott McCloud"" .
  
  ?award dbo:recipient ?person .

  ?person dbo:occupation ?profession .
}
```

This query does the following:
- Identifies Scott McCloud as an individual (`dbo:Person`) with the name ""Scott McCloud"".
- Finds any award (`?award`) where Scott McCloud is listed as a recipient.
- Retrieves his occupation or professional field.",2,2,3,2,1,3,2,20,0,0,39650,0,0.0,0
617,6,train,Give me the parent of Mieszko II Lambert and child of Doubravka of Bohemia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  ?mieszko dbo:spouse ?doubravka .
  ?mieszko dbo:child ?child .
  ?doubravka dbo:child ?child .
  
  FILTER (str(?mieszko) = ""Mieszko_II_Lambert"")
  FILTER (str(?doubravka) = ""Doubravka_of_Bohemia"")
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
801,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?name WHERE {
  ?professional a dbo:Person .
  ?professional dbo:profession dbr:Medicine . # Assuming ""medicine"" as the profession
  ?professional dbo:residence dbr:Paris .   # Assuming ""Paris"" as the location
  ?professional foaf:name ?name .
}
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
328,13,train,Give me the commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander ?commanderLabel
WHERE {
  ?szalasi dbo:leader ?commander .
  ?szalasi foaf:name ""Ferenc Szálasi""@en .
  
  OPTIONAL { ?commander rdfs:label ?commanderLabel FILTER (lang(?commanderLabel) = 'en') }
}
```",2,2,3,2,1,3,3,71,0,0,73,0,0.0,0
391,4,train,Give me the figure known as Hub City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Hub City""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?figure
WHERE {
  ?figure rdfs:label ""Hub City""@en .
}
```",1,1,2,1,1,3,3,71,0,1,4,0.0,0.0,0
659,14,train,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Rutger Jan Schimmelpenninck""@en .
  
  ?event dbo:societalEvent true ;
         dbo:militaryConflict true .

  ?person dbp:associatedMilitaryForce ?militaryForce .
  ?militaryForce dbo:event ?event .
}
```",2,5,3,2,1,3,3,71,0,0,1127,0,0.0,0
617,17,train,Who is the child of the commander in Battle of Panium?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  ?battle dbo:name ""Battle of Panium""@en .
  ?battle dbo:commander ?commander .
  ?commander dbo:child ?child .
}
```

This query does the following:
- It selects the children (`?child`) of a commander.
- It identifies the battle with the name ""Battle of Panium"".
- It finds the commander associated with this battle and then retrieves their children.",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
360,8,train,"Give me the writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?album (GROUP_CONCAT(?writer; separator="", "") AS ?writers)
WHERE {
  ?person rdfs:label ""Dave Flett""@en .
  ?work dbo:creator ?person ;
        rdf:type dbo:Album .
  OPTIONAL { ?work dbo:composer ?writer . }
}
GROUP BY ?work
```",2,3,3,2,1,2,3,28,0,0,8,0,0.0,0
294,6,train,"Give me the resting place of Luke Lea (American politician, born 1879) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  VALUES ?person { 
    dbr:Luke_Lea_(American_politician) 
    dbr:Edwin_A._Keeble
  }
  
  OPTIONAL {
    ?person dbo:birthDate ?birthDate .
    FILTER (YEAR(?birthDate) = 1879 && ?person = dbr:Luke_Lea_(American_politician))
  }

  OPTIONAL {
    ?person dbo:deathPlace ?restingPlace .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
184,0,train,Give me the parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  { 
    ?person dbp:name ""Géza von Habsburg""@en .
    ?person dbo:father ?parent .
  }
  UNION
  {
    ?person dbp:name ""Géza von Habsburg""@en .
    ?person dbo:mother ?parent .
  }
}
```

### Explanation:

- **PREFIX**: Define prefixes for ontology (`dbo`) and properties (`dbp`).
- **SELECT**: Choose `?parent` to retrieve the parent entity.
- **WHERE**:
  - Use two patterns combined with a `UNION` to account for both father and mother relationships.
  - Match Géza von Habsburg using `dbp:name`.

This query will return either the father or mother of Géza von Habsburg, depending on which relationship is available in DBpedia.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
328,3,train,Who is the commander in Volcano and Ryukyu Islands campaign?,SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderName
WHERE {
  # Volcano Islands campaign commander
  {
    ?volcanoCampaign a dbo:MilitaryOperation ;
                     dbo:commander ?volcanoCommander .
    ?volcanoCommander foaf:name ?commanderName .
    FILTER (str(?volcanoCampaign) = ""Volcano_Islands_campaign"")
  }
  
  UNION
  
  # Ryukyu Islands campaign commander
  {
    ?ryukyuCampaign a dbo:MilitaryOperation ;
                    dbo:commander ?ryukyuCommander .
    ?ryukyuCommander foaf:name ?commanderName .
    FILTER (str(?ryukyuCampaign) = ""Ryukyu_Islands_campaign"")
  }
}
ORDER BY ?commanderName",1,1,2,1,1,3,3,71,0,0,20,0,0.0,0
626,0,train,Give me the commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander
WHERE {
  ?battle a dbo:Battle .
  ?battle dbo:event dbr:Battle_of_Leipzig .
  ?battle dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,21,0,0.0,0
838,3,train,"Give me the band member, that is an artist and a musical artist, of YU Grupa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?member
WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""YU Grupa""@en .

  ?band dbo:bandMember ?member .
  
  ?member rdf:type dbo:Artist ;
          rdf:type dbo:MusicalArtist .
}
```

This query does the following:
- Selects band members (`?member`) of a band identified as ""YU Grupa.""
- Ensures that these members are both classified as `dbo:Artist` and `dbo:MusicalArtist`.",1,3,2,1,1,3,2,20,0,0,4,0,0.0,0
747,8,train,Who is the person born as Tracey Elizabeth McSween?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?person ?fullName WHERE {
  ?person a foaf:Person .
  
  OPTIONAL { 
    ?person foaf:givenName ""Tracey"" . 
    ?person foaf:familyName ""McSween"" .
  }
  
  OPTIONAL {
    ?person schema:birthName ""Tracey Elizabeth McSween"" .
  }

  OPTIONAL {
    ?person foaf:name ?fullName .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
345,6,train,Give me the figure known as Stolz von Liechtenstein and team of Alessandro Mangiarratti.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?horse ?trainer WHERE {
  VALUES ?horse { dbr:Stolz_von_Liechtenstein }
  VALUES ?trainer { dbr:Alessandro_Mangiarratti }

  OPTIONAL {
    ?horse dbo:trainer ?trainer .
  }
}
```

This query attempts to find the relationship between ""Stolz von Liechtenstein"" and ""Alessandro Mangiarratti,"" specifically looking for a trainer association.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
801,8,train,"Give me the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album a dbo:Album ;
         dbo:title ""40 Dayz & 40 Nightz"" ;
         dbo:writer ?writer .
  
  ?writer a dbo:MusicalArtist, dbo:Artist .
}
```",1,3,2,1,1,3,3,71,0,0,12,0,0.0,0
666,7,train,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName
WHERE {
    ?team dbo:season ?season .
    ?season dbo:startDate ?startDate .
    FILTER (CONTAINS(LCASE(?startDate), ""2016"") && CONTAINS(LCASE(?startDate), ""17"")) .
    ?team dbo:manager ?manager .
    ?manager foaf:name ?managerName .
}
```

This query does the following:
- Uses `dbo:season` to link a team to its season.
- Filters the seasons to find those starting in 2016 and ending in 2017, which corresponds to the 2016–17 season.
- Links the team to its manager using `dbo:manager`.
- Retrieves the name of the manager using `foaf:name`.",2,3,3,2,1,3,2,20,0,0,22,0,0.0,0
345,9,train,"Give me the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  ?player foaf:name ""Armando Heeb""@en .
  ?player dbo:nickname ?nickname .

  ?club dbo:member ?player ;
        a dbo:SportsClub, dbo:FootballTeam .

}
```

This query does the following:
- Selects the nickname of a player named Armando Heeb.
- Ensures that the club is both a sports club and a soccer team.",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
981,4,train,Give me the author of Kamikaze Girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author
WHERE {
  ?book a dbo:Book .
  ?book rdfs:label ""Kamikaze Girls""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,1,0,2,1.0,0.3333333333333333,0.5
391,6,train,"Give me the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?workTitle
WHERE {
  ?person a dbo:FilmDirector .
  ?person foaf:name ""Michael Ballhaus"" .
  
  OPTIONAL { 
    ?film dbo:director ?person ;
          rdfs:label ?workTitle .
  }
  
  OPTIONAL {
    ?film dbo:cinematographer ?person ;
          rdfs:label ?workTitle .
  }
}
ORDER BY ?workTitle
LIMIT 10",1,2,2,1,1,3,3,71,0,0,4,0,0.0,0
9,10,train,"Give me the figure known as QUB and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university WHERE {
  ?person dbo:almaMater ?university .
  ?university rdfs:label ""Queen's University Belfast""@en .
  ?person foaf:name ""John Alderdice, Baron Alderdice""@en .
}
```

This query does the following:
- Selects the university (`?university`) associated with John Alderdice.
- Filters to ensure the university is labeled as ""Queen's University Belfast"".
- Ensures the person in question is identified by name.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
197,2,train,Who is the member of FC Politehnica Timișoara?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?memberName
WHERE {
  ?club rdf:type dbo:FootballClub .
  ?club rdfs:label ""FC Politehnica Timișoara""@en .
  ?club dbo:member ?member .
  ?member foaf:name ?memberName .
}
```",1,1,2,1,1,2,2,9,0,0,572,0,0.0,0
54,5,train,Give me the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Thado Minsaw""@en .
  OPTIONAL { ?person dbo:placeOfBirth dbr:Prome . }
  ?person dbo:parent ?parent .
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT Clause**: We select the `?parent` variable to retrieve the parent entity.
- **WHERE Clause**:
  - Identify the person using a combination of type (`a dbo:Person`) and name (`foaf:name ""Thado Minsaw""@en`).
  - Use an optional pattern to associate Thado Minsaw with Prome, though this might not be strictly necessary if the name is unique enough.
  - Retrieve the parent using `dbo:parent`.

This query assumes that DBpedia has structured data for Thado Minsaw and his familial relationships. Adjustments may be needed based on actual schema details in DBpedia.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,6,train,Give me the war of Mahesh Senanayake and war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?description WHERE {
  VALUES ?person { 
    dbr:Mahesh_Senanayake 
    dbr:Jagath_Dias 
  }
  
  ?person dbo:memberOf ?organization .
  ?organization dbo:member ?individual .
  ?war dbo:participant ?individual .
  OPTIONAL { ?war rdfs:comment ?description . }

  FILTER (lang(?description) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
778,7,train,Give me the entity in the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award
WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Ralph L. Brinster""@en .
  ?person dbo:honoraryTitle ?award .
}
```

### Explanation:
- **Prefixes**: `dbo` for DBpedia ontology and `dbr` for resources.
- **SELECT Clause**: We are selecting the award (`?award`) associated with Ralph L. Brinster.
- **WHERE Clause**:
  - Identify a person entity (`?person`) that is of type `dbo:Person`.
  - Match the name ""Ralph L. Brinster"" using the `foaf:name` property.
  - Find the honorary title or award associated with this person using `dbo:honoraryTitle`.

This query assumes that awards are linked via the `dbo:honoraryTitle` predicate, which is common for representing honors and awards in DBpedia.",2,2,3,2,1,3,2,20,0,0,18629,0,0.0,0
179,5,train,Who is the child of Bhumibol Adulyadej?,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childName WHERE {
  ?bhumibol a dbo:Person ;
            foaf:name ""Bhumibol Adulyadej""@en .
  
  ?bhumibol dbo:child ?child .
  ?child foaf:name ?childName .
}
```

### Explanation:

- **PREFIX**: Define common prefixes for ontology and FOAF (Friend of a Friend) vocabulary.
- **SELECT**: Choose the names of Bhumibol Adulyadej's children.
- **WHERE**:
  - Identify Bhumibol Adulyadej using his name and type (`dbo:Person`).
  - Use `dbo:child` to find entities that are children of Bhumibol Adulyadej.
  - Retrieve the names of these child entities.

This query should effectively retrieve the names of Bhumibol Adulyadej's children from DBpedia.",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
54,13,train,Give me the parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandParent
WHERE {
  ?narapatiI dbo:wikiPageID ""Narapati_I_of_Ava"" .
  ?child dbo:parent ?narapatiI .
  ?child dbo:parent ?grandParent .
}
```

This query assumes that `dbo:parent` and `dbo:child` are the correct properties to use for parent-child relationships in DBpedia. Adjustments may be needed based on actual property names.",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
303,5,train,"Who is the person born, that is a politician, as Arnulfo Arias Madrid?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:Politician .
  ?person foaf:name ?name .
  OPTIONAL { ?person dbo:birthName dbr:Arnulfo_Arias_Madrid . }
}
```",1,2,2,1,1,2,3,28,1,364262,0,2.745269214825552e-06,1.0,5.490523356686359e-06
534,5,train,Give me the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?owner
WHERE {
  dbr:RDS_Arena dbo:owner ?owner .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
767,1,train,Give me the alma mater of Carl L. Nippert.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university
WHERE {
  dbr:C_L_Nippert dbo:almaMater ?university .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
963,1,train,Give me the administration of Serbian Progressive Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderName WHERE {
  dbr:Srpska_Progresivna_Stranka dbo:leader ?leader .
  ?leader foaf:name ?leaderName .
}
```

This query assumes that the administration is represented by a `leader` property in DBpedia. It retrieves the names of leaders associated with the Serbian Progressive Party.",1,1,2,1,1,3,2,20,0,0,86,0,0.0,0
345,4,train,Give me the birth date of Eiður Guðjohnsen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthDate
WHERE {
  ?person a dbo:FootballPlayer ;
          foaf:name ""Eiður Guðjohnsen""@en .
  ?person dbo:birthDate ?birthDate .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
10,6,train,Give me the associated musical artist of Matt Colton and band member of Luke Vibert.,SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist WHERE {
  # Find musical artists associated with Matt Colton
  ?coltonArtist dbo:associatedMusicalArtist <http://dbpedia.org/resource/Matt_Colton> .
  
  # Find band members of Luke Vibert
  ?vibertBandMember dbp:band <http://dbpedia.org/resource/Luke_Vibert> .

  # Ensure the artist is both associated with Matt Colton and a member of a band with Luke Vibert
  FILTER (?coltonArtist = ?vibertBandMember)
  
  # Return the artist's name
  ?artist rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
391,3,train,"Give me the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname
WHERE {
  dbr:Jackson_(Tennessee) dbo:officialName ?nickname .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
696,2,train,"Give me the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find The Boils and their associated musical artist
  dbr:The_Boils dbo:musicalArtist ?artist .

  # Ensure the artist is an organization, group, and band
  ?artist a dbo:MusicalGroup .
  ?artist a dbo:Band .
  ?artist a dbo:Organization .
}
```",1,4,2,1,1,3,2,20,0,0,2,0,0.0,0
994,16,train,"Give me the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?bandMember
WHERE {
  # Fredrik Thordendal is a member of a band
  ?band dbo:bandMember ?fredrik .
  
  # The band is an organization and a group
  ?band rdf:type dbo:Band ;
        rdf:type dbo:Organization ;
        rdf:type dbo:Group .

  # Find another band that the member belongs to, which is also an organization and a group
  ?memberBand dbo:bandMember ?bandMember .
  ?memberBand rdf:type dbo:Band ;
              rdf:type dbo:Organization ;
              rdf:type dbo:Group .

  # Ensure Fredrik Thordendal's URI is used (replace with actual DBpedia resource if known)
  ?fredrik foaf:name ""Fredrik Thordendal""@en .
}
```",2,6,3,2,1,3,3,71,0,0,6,0,0.0,0
492,3,train,Give me the author of French Algeria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName
WHERE {
  # Assuming there is a resource representing ""French Algeria""
  dbr:French_Algeria dbo:subject ?work .
  
  # Link the work to its author
  ?work dbo:author ?author .

  # Get the name of the author
  ?author foaf:name ?authorName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
9,1,train,Give me the alma mater of Allen Hill (scientist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMater WHERE {
  ?person a dbo:Scientist ;
          foaf:name ""Allen Hill"" .
  ?person dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,4,train,Give me the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Soe Min Wimala Dewi""@en .
  ?person dbo:father ?father .
  ?father foaf:name ?fatherName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
492,13,train,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find wars that Frédéric-Georges Herr participated in
  dbr:Frédéric-Georges_Herr dbo:participatedIn ?war .
  
  # Ensure the war is a military conflict and an event
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:Event .

  # Find the commander of that war
  ?war dbo:commander ?commander .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
485,2,train,Give me the entity in Nottinghamshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Nottinghamshire .
}
```

This query selects entities (`?entity`) where their location is specified as Nottinghamshire. The `dbr:` prefix is used to denote DBpedia resources, and `dbo:location` is a common predicate for specifying the geographical location of an entity.",1,1,2,1,1,2,3,28,0,0,369,0,0.0,0
827,10,train,"Who is the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?princess a dbo:Princess ;
            dbp:name ""Pauline of Saxe-Weimar-Eisenach"" .
  
  ?princess dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse a dbo:Royalty } .

  ?spouse dbo:child ?child .
  FILTER EXISTS { ?child a dbo:Royalty }
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
142,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity
WHERE {
  ?entity dbo:country dbr:Japan .
}
```

This query selects entities (`?entity`) that are associated with Japan through the `dbo:country` property.",1,1,2,1,1,2,2,9,0,0,8916,0,0.0,0
55,2,train,Give me the band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName
WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Jason Newsted""@en .
  
  ?person dbo:memberOfBand ?band .
  ?band rdfs:label ?bandName .
  
  FILTER(LANG(?bandName) = 'en')
}
```

### Explanation

- **PREFIX**: We use `dbo` for ontology properties and `dbp` for property labels.
- **SELECT**: We select the band's name (`?bandName`).
- **WHERE**:
  - Identify Jason Newsted as a musician with the label ""Jason Newsted"".
  - Find bands he is a member of using `dbo:memberOfBand`.
  - Retrieve the band's label (name) and ensure it's in English.

This query should effectively retrieve the band(s) associated with Jason Newsted from DBpedia.",1,1,2,1,1,2,3,28,0,0,9,0,0.0,0
392,7,train,Give me the province of Schio and entity in Italy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province ?entityInItaly
WHERE {
  # Schio is part of a province
  dbr:Schio dbo:locatedIn ?province .
  
  # The province is located in Italy
  ?province dbo:country dbr:Italy .

  # Optional: Find any entity related to the province or Italy
  OPTIONAL { ?entityInItaly dbo:location ?province . }
  OPTIONAL { ?entityInItaly dbo:country dbr:Italy . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
427,13,train,Give me the party of the father of Lamberto Andreotti.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party
WHERE {
  ?lamberto a dbo:Person ;
            foaf:name ""Lamberto Andreotti""@en .
  
  ?lamberto dbo:father ?father .

  ?father dbp:party ?party .
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
294,2,train,"Give me the entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity dbo:location ?place .
  ?place rdfs:label ""Nashville, Tennessee""@en .
}
```",1,1,2,1,1,2,3,28,340,0,0,1.0,1.0,1.0
303,11,train,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?party
WHERE {
  ?person dbo:birthName ""Arnulfo Arias Madrid""@en .
  ?person rdf:type dbo:Politician .
  ?person dbo:politicalParty ?party .
}
```",2,3,3,2,1,2,3,28,0,0,1,0,0.0,0
767,9,train,Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?entityInBW
WHERE {
  # Find Carl L. Nippert's alma mater
  OPTIONAL {
    ?nippert a dbo:Person ;
            foaf:name ""Carl L. Nippert"" .
    ?nippert dbo:almaMater ?almaMater .
  }
  
  # Find an entity in Baden-Württemberg
  ?entityInBW a dbo:Place ;
              dbo:stateOrProvince dbr:Baden-Württemberg .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
488,8,train,Who is the father of Emperor Go-Mizunoo?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherName WHERE {
  ?emperor rdfs:label ""Emperor Go-Mizunoo""@en .
  ?emperor dbo:father ?father .
  ?father rdfs:label ?fatherName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
838,8,train,"Give me the band member of the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName
WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""YU Grupa""@en .
  ?band dbo:bandMember ?member .
  ?member foaf:name ?memberName .
}
```",2,3,3,2,1,3,2,20,0,2,40,0.0,0.0,0
801,17,train,"Give me the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album a dbo:MusicalAlbum ;
         rdfs:label ""What U See Is What U Get""@en .
  
  ?album dbo:composer ?writer .

  ?writer a dbo:MusicalArtist, dbo:Artist .
}
```",2,6,3,2,1,3,3,71,0,0,12,0,0.0,0
48,4,train,Give me the show with Stacey Dash.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?show WHERE {
  ?person a dbo:Person ;
          foaf:name ""Stacey Dash""@en .
  
  ?appearance dbo:starring ?person ;
              dbo:workExample ?show .
  
  FILTER (?show instanceof dbo:TVSeries)
}
```",1,1,2,1,1,3,2,20,0,0,18,0,0.0,0
378,10,train,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?claimToFame
WHERE {
  VALUES ?person { 
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón 
    dbr:C_P_Gahn 
  }
  
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en')
  
  OPTIONAL {
    ?person dbo:notableWork ?claimToFame .
    FILTER (lang(?claimToFame) = 'en')
  }

  OPTIONAL {
    ?person dbo:award ?award .
    ?award rdfs:label ?awardName .
    FILTER (lang(?awardName) = 'en')
  }
}
ORDER BY ?name
```

### Explanation:
- **PREFIX**: Defines common namespaces for DBpedia.
- **SELECT**: Retrieves the person, their name, and any notable works or awards.
- **WHERE**:
  - Uses `VALUES` to specify the individuals of interest.
  - Retrieves labels (names) in English.
  - Optionally retrieves notable works and awards.

### Enhancements and Refinements:
- The query uses `OPTIONAL` clauses to include additional information about notable works and awards without making them mandatory for a result.
- Results are ordered by name for clarity.",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
328,17,train,"Give me the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person rdfs:label ""Gustav Jonson""@en .
  ?leaderRole dbo:leader ?person ;
              a dbo:OfficeHolder ;
              dbo:positionHeld ?office .
  ?office a dbo:GovernmentAgency .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
339,4,train,Who is the parent of Princess Olga of Greece and Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentLabel
WHERE {
  ?olga a dbo:Person ;
        rdfs:label ""Princess Olga of Greece and Denmark""@en .
  
  ?olga dbo:parent ?parent .

  ?parent rdfs:label ?parentLabel .
}
```",1,1,2,1,1,3,2,20,0,2,2,0.0,0.0,0
701,16,train,Give me the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild
WHERE {
  ?setiI dbo:spouse ?parent1 .
  ?parent1 dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .
  
  FILTER (str(?setiI) = ""Seti I"")
}
```

This query assumes that the relationships are represented using `dbo:spouse` and `dbo:child`. Adjustments may be needed based on the actual schema used in DBpedia.",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
996,6,train,Give me the entity in France and force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?person rdfs:label ""Dagobert Sigmund von Wurmser""@en .
  ?person dbo:militaryCommanderOf ?unit .
  ?unit dbo:country dbr:France .
  
  OPTIONAL { 
    ?unit rdfs:label ?forceLabel .
    FILTER(LANG(?forceLabel) = 'en')
  }
}
```",2,2,3,1,2,3,2,20,0,0,4,0,0.0,0
492,10,train,Give me the person decedent at French Algeria and person decedent at Algiers.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name
WHERE {
  ?person a dbo:Person .
  ?person dbo:name ?name .
  
  OPTIONAL { 
    ?person dbo:deathPlace dbr:French_Algeria .
  }
  OPTIONAL { 
    ?person dbo:deathPlace dbr:Algiers .
  }

  FILTER (
    EXISTS { ?person dbo:deathPlace dbr:French_Algeria . } ||
    EXISTS { ?person dbo:deathPlace dbr:Algiers . }
  )
}
ORDER BY ?name
```",2,2,3,1,2,3,3,71,0,0,16,0,0.0,0
421,6,train,Give me the band member of Senidah and native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find Senidah's band members
  ?senidah dbo:member ?bandMember .
  
  # Ensure the person is a native of Socialist Federal Republic of Yugoslavia
  ?bandMember dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia .

  # Link to Senidah resource in DBpedia
  FILTER(STRSTARTS(STR(?senidah), ""http://dbpedia.org/resource/Senidah""))
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
487,4,train,Give me the birth name of Phil Scott.,SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName
WHERE {
  ?person a dbo:Governor ;
          foaf:name ""Phil Scott""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
827,3,train,"Who is the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?parent dbo:spouse ?mariaPavlovna .
  ?mariaPavlovna a dbo:GrandDuchess ;
                 foaf:name ""Maria Pavlovna of Russia"" ;
                 dbo:birthDate ?birthDate .

  FILTER (YEAR(?birthDate) = 1786 && YEAR(STRDT(?deathDate, xsd:date)) = 1859)

  ?parent dbo:child ?child .
  ?child a ?royaltyClass .
  
  VALUES ?royaltyClass { 
    dbo:Monarch 
    dbo:Princess 
    dbo:Duchess 
    dbo:Queen 
    dbo:GrandDuchess
  }
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
435,9,train,"Give me the region of Greenwich Mean Time and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region WHERE {
  # Part 1: Find the region associated with Greenwich Mean Time
  ?timeZone a dbo:TimeZone ;
            dbo:hasTimeOffset ""UTC+00:00""^^xsd:string .
  
  OPTIONAL { 
    ?timeZone dbo:inRegion ?region .
  }
  
  FILTER EXISTS { ?timeZone rdfs:label ""Greenwich Mean Time""@en . }

  # Part 2: Find information related to Article 62, Section IV of the Constitution of Iceland
  OPTIONAL {
    ?constitution dbr:Iceland#Constitution ;
                  dbo:article ?article .
    
    ?article rdfs:label ?articleLabel .
    
    FILTER CONTAINS(LCASE(?articleLabel), ""article 62 section iv"")
  }
}

ORDER BY ?region
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
488,12,train,Give me the administration of Emperor Go-Yōzei and death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationPeriod ?deathPlace
WHERE {
  # Administration period of Emperor Go-Yōzei
  dbr:Emperor_Go-Yōzei dbo:reignStart ?startYear .
  dbr:Emperor_Go-Yōzei dbo:reignEnd ?endYear .
  BIND(CONCAT(?startYear, "" - "", ?endYear) AS ?administrationPeriod)

  # Death place of Tokugawa Ieyasu
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
666,2,train,"Give me the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?team ?season
WHERE {
  # Leonid Slutsky as a coach of a soccer club
  ?coach dbr:Leonid_Slutsky .
  ?coach dbo:coach ?team .

  # The team is a soccer club and has sports team seasons
  ?team rdf:type dbo:SoccerClub .
  ?season rdf:type dbo:SportsTeamSeason .
  ?team dbo:hasSportTeamSeason ?season .
}",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
767,8,train,Give me the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo
WHERE {
  ?character a dbo:Superhero .
  ?character dbo:alias dbr:Black_Hood .
  OPTIONAL { ?character dbo:civilIdentity ?alterEgo . }
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
9,9,train,"Give me the alma mater of Allen Hill (scientist) and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personLabel ?almaMaterLabel
WHERE {
  VALUES ?personUri { 
    dbr:Allen_Hill_(physicist) 
    dbr:John_Alderdice,_Baron_Alderdice 
  }
  
  ?personUri a dbo:Person ;
            rdfs:label ?personLabel .
  
  OPTIONAL {
    ?personUri dbo:almaMater ?almaMater .
    ?almaMater rdfs:label ?almaMaterLabel .
  }

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?personLabel
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
281,1,train,Give me the entity in Colony of New Zealand.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?property ?value
WHERE {
  VALUES (?entity) { dbr:Colony_of_New_Zealand }
  
  ?entity ?property ?value .
  
  OPTIONAL {
    ?relatedEntity dbo:country ?entity .
    ?relatedEntity ?prop ?val .
    BIND(?relatedEntity AS ?entity)
    BIND(?prop AS ?property)
    BIND(?val AS ?value)
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
179,8,train,Give me the parent of the child of Bhumibol Adulyadej.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent
WHERE {
  ?bhumibol dbo:child ?child .
  FILTER(STRSTARTS(STR(?bhumibol), ""http://dbpedia.org/resource/Bhumibol_Adulyadej""))
  
  ?child foaf:parent ?parent .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
142,6,train,Give me the birthplace of the actor of Papa wa Newscaster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorBirthplace
WHERE {
  ?movie dbo:title ""Papa wa Newscaster""@ja .
  ?movie dbo:starring ?actor .
  ?actor foaf:birthPlace ?actorBirthplace .
}
```

5. **Validation**:
   - Ensure the query uses correct prefixes and properties.
   - Check that it captures the necessary relationships between entities.",2,2,3,2,1,2,2,9,0,0,3,0,0.0,0
778,8,train,"Give me the author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v0 <http://dbpedia.org/ontology/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?author a dbo:Person ;
          foaf:name ""Bill Joy""@en .
  
  ?work dbo:author ?author ;
        rdf:type dbo:Software .

  FILTER (lang(?authorLabel) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
378,8,train,Who is the commander in Great Siege of Gibraltar?,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander
WHERE {
  ?event rdfs:label ""Great Siege of Gibraltar""@en .
  ?event dbo:commander ?commander .
}
```

This query does the following:
- It uses `rdfs:label` to identify the event ""Great Siege of Gibraltar"" in English.
- It looks for a property `dbo:commander` that links the event to its commanders.",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
360,10,train,"Give me the native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeName
WHERE {
  # Find Winnie Madikizela-Mandela's death place that is a settlement
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is classified as a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find the native of this settlement
  ?native dbo:nativePlace ?deathPlace ;
          foaf:name ?nativeName .
}
```",2,3,3,2,1,2,3,28,0,0,1099,0,0.0,0
391,0,train,"Give me the native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name
WHERE {
  ?person a dbo:Person .
  ?person foaf:name ?name .
  ?person dbo:birthPlace dbr:Compton,_California .
}
```",1,1,2,1,1,3,3,71,0,0,97,0,0.0,0
534,0,train,Give me the birth place of Garret FitzGerald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  dbr:Garret_FitzGerald dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
528,10,train,Give me the force of Narciso Campero and war of Irene Morales.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?narcisoForce ?ireneWar
WHERE {
  OPTIONAL {
    dbr:Narciso_Campero dbo:militaryRank ?narcisoForce .
  }
  
  OPTIONAL {
    dbr:Irene_Morales dbo:participatedInWar ?ireneWar .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
303,3,train,"Who is the commander, that is a politician, in United States invasion of Panama?",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:event = dbr:United_States_invasion_of_Panama .
  ?event dbo:commander ?commander .
  ?commander a dbo:Politician .
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
492,7,train,Give me the country of Khemis Miliana District.,SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
  dbr:Khemis_Miliana_District dbo:country ?country .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
427,9,train,Give me the reference to Partito Popolare Italiano and party of Giulio Andreotti.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?partitoPopolareItaliano ?giulioAndreottiParty
WHERE {
  ?partitoPopolareItaliano rdfs:label ""Partito Popolare Italiano""@it .
  ?giulioAndreotti dbo:party ?giulioAndreottiParty .
  FILTER (lang(?partitoPopolareItaliano) = 'it')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
9,11,train,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMater
WHERE {
  ?mayor a dbo:Mayor ;
         dbo:positionHeld ?position .
  
  ?position dbo:officeHolder ?mayor ;
            dbo:officeName ""Northern Ireland Forum"" .

  ?mayor foaf:name ?name .
  
  OPTIONAL { 
    ?mayor dbo:almaMater ?almaMater .
  }
}
```",2,3,3,2,1,3,3,71,0,0,6,0,0.0,0
427,4,train,Give me the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?partyName
WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ?partyLabel .
  FILTER(CONTAINS(LCASE(?partyLabel), ""italian people's party"") && CONTAINS(LCASE(?partyLabel), ""1994""))
  OPTIONAL { 
    ?party dbo:foundingDate ?foundingDate .
    FILTER(YEAR(?foundingDate) = 1994)
  }
  BIND(CONCAT(""The name of the Italian People's Party in 1994 is: "", ?partyLabel) AS ?partyName)
}
```",1,1,2,1,1,3,3,71,0,3,2,0.0,0.0,0
182,2,train,Give me the entity in Sri Lanka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity
WHERE {
  ?entity dbo:country dbr:Sri_Lanka .
}
```",1,1,2,1,1,2,3,28,0,4683,62,0.0,0.0,0
528,2,train,Give me the force of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryRank
WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Narciso Campero""@en .
  OPTIONAL { 
    ?person dbo:militaryRank ?militaryRank .
  }
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
645,9,train,"Give me the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?battle rdfs:label ""Battle of Diamond Rock""@en .
  ?battle dbo:commander ?commander .
  ?commander dbo:residence ?residence .
  ?residence a dbo:Country .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
801,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?alterEgo
WHERE {
  ?shadow dbo:alterEgo ?alterEgo .
  ?shadow rdfs:label ""The Shadow""@en .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
547,15,train,Give me the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?grandGrandChild
WHERE {
  ?person foaf:name ""William Haliburton"" .
  ?child foaf:parent ?person .
  ?grandChild foaf:parent ?child .
  ?grandGrandChild foaf:parent ?grandChild .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
10,0,train,Give me the associated musical artist of Matt Colton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist WHERE {
  ?person a dbo:Person ;
          foaf:name ""Matt Colton""@en .
  
  ?person dbo:associatedMusicalArtist ?artist .
}
```",1,1,2,1,1,2,3,28,4,0,0,1.0,1.0,1.0
528,6,train,Give me the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander
WHERE {
  dbr:Battle_of_La_Rinconada_de_Ate dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
294,7,train,"Give me the entity in Nashville, Tennessee and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Luke Lea"" ;
          dbo:birthYear ""1879""^^xsd:gYear ;
          dbo:deathPlace dbr:Nashville,_Tennessee .
  
  OPTIONAL { 
    ?person dbo:finalBurialPlace ?restingPlace .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
754,8,train,Give me the parent of the child of Ram Khamhaeng.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandParent
WHERE {
  ?ramKhamhaeng dbo:child ?child .
  ?child dbo:parent ?grandParent .
  FILTER(STR(?ramKhamhaeng) = ""Ram Khamhaeng"")
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
54,1,train,Give me the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Thado Minsaw""@en .
  OPTIONAL { ?person dbo:placeOfBirth dbr:Prome . }
  ?person dbo:parent ?parent .
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT Clause**: We select the `?parent` variable to retrieve the parent entity.
- **WHERE Clause**:
  - Identify the person using a combination of type (`a dbo:Person`) and name (`foaf:name ""Thado Minsaw""@en`).
  - Use an optional pattern to associate Thado Minsaw with Prome, though this might not be strictly necessary if the name is unique enough.
  - Retrieve the parent using `dbo:parent`.

This query assumes that DBpedia has structured data for Thado Minsaw and his familial relationships. Adjustments may be needed based on actual schema details in DBpedia.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
360,9,train,Give me the native of Johannesburg and reference to Manfred Mann.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?personLabel WHERE {
  ?person dbo:birthPlace dbr:Johannesburg .
  OPTIONAL { 
    ?association dbo:bandMember ?person ;
                 dbo:band dbr:Manfred_Mann .
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
645,5,train,Give me the child of Richard Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  ?person dbp:name ""Richard Pankhurst""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
161,6,train,"Give me the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?person dbo:birthName ""Francisco Largo Caballero""@en .
  ?person dbo:associatedWith ?event .

  FILTER EXISTS { ?event a dbo:SocietalEvent . }
  FILTER EXISTS { ?event a dbo:MilitaryConflict . }

  VALUES ?person { dbr:Franco_Largo_Caballero }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
251,2,train,Give me the death place of Laura Mancinelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace
WHERE {
  dbr:Laura_Mancinelli dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
314,0,train,Give me the person deceased at Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Madrid .
  ?person foaf:name ?name .
}
```",1,1,2,1,1,2,3,28,10,2616,10,0.003808073115003808,0.5,0.007558578987150415
391,14,train,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?movie a dbo:Film .
  ?movie a dbo:Work .
  ?movie a dbo:TelevisionShow .
  
  ?actorRole dbo:actor ?rozRyan .
  ?actorRole dbo:actedIn ?movie .

  ?rozRyan dbr:Roz_Ryan .
}
```

This query does the following:
- Selects movies (`?movie`) that are classified as a `Film`, `Work`, and `TelevisionShow`.
- Ensures Roz Ryan is linked to these movies through an actor role.",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
712,7,train,Give me the capital of the country of Armed Forces of South Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  OPTIONAL { 
    dbr:Armed_Forces_of_South_Russia dbo:country ?country .
  }
  ?country dbo:capital ?capital .
}
```",2,2,3,2,1,3,2,20,3,0,0,1.0,1.0,1.0
312,2,train,"Give me the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration
WHERE {
  ?party rdf:type dbr:Democratic_Party_(Italy) .
  
  ?administration dbo:hasMember ?party ;
                  a ?type1, ?type2, ?type3, ?type4 .

  FILTER (?type1 = dbr:Settlement || ?type1 = dbr:Region || ?type1 = dbr:State)
  FILTER (?type2 = dbr:Settlement || ?type2 = dbr:Region || ?type2 = dbr:State)
  FILTER (?type3 = dbr:Settlement || ?type3 = dbr:Region || ?type3 = dbr:State)
  FILTER (?type4 = dbr:Settlement || ?type4 = dbr:Region || ?type4 = dbr:State)

  ?administration dbo:country dbr:Italy .
}",1,5,2,1,1,2,2,9,0,0,14,0,0.0,0
801,9,train,Give me the producer of Westside Story (song) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?profession 
WHERE {
  ?song dbo:title ""West Side Story"" .
  ?song dbo:artist dbr:Leonard_Bernstein ; # Assuming Leonard Bernstein as the main artist
        dbo:producer ?producer .

  OPTIONAL { 
    ?producer a ?professionType .
    FILTER(?professionType != dbo:Person) # To filter out general 'Person' type if needed
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
404,15,train,"Who is the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia?",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Princess Victoria Louise of Prussia"" ;
          dbo:royalty true .
  ?person dbo:birthName ?birthName .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
294,10,train,Give me the resting place of the architect of P. D. Houston Jr. House.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  ?house a dbo:Building .
  ?house rdfs:label ""P. D. Houston Jr. House""@en .
  
  ?house dbo:architect ?architect .

  OPTIONAL { ?architect dbo:deathPlace ?deathPlace . }
  
  ?architect dbo:burialPlace ?restingPlace .
}
```

This query assumes:
- The house is linked to its architect via `dbo:architect`.
- The architect's burial place is available through `dbo:burialPlace`.",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
339,1,train,Give me the father of Princess Elizabeth of Greece and Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father
WHERE {
  ?princess dbo:mother ?mother .
  ?mother foaf:parent ?father .
  ?princess rdfs:label ""Princess Elizabeth of Greece and Denmark""@en .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
963,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
}
```",1,2,2,1,1,3,2,20,52,42,4,0.5531914893617021,0.9285714285714286,0.6933333333333335
820,5,train,Who is the parent of Jason Schwartzman?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  ?person dbo:birthName ""Jason Schwartzman""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
994,5,train,"Give me the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Fredrik Thordendal""@en .
  
  ?person dbo:musicGroup ?band .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
617,0,train,Give me the child of Doubravka of Bohemia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?parent dbo:spouse ?doubravka .
  ?doubravka foaf:name ""Doubravka of Bohemia""@en .
  ?parent dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
16,9,train,Give me the professional in Actress and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actressName
WHERE {
  ?person dbo:spouse <http://dbpedia.org/resource/Ted_McGinley> .
  ?person dbo:profession <http://dbpedia.org/resource/Actress> .
  ?person foaf:name ?actressName .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
915,9,train,"Give me the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?film rdf:type dbr:Pipe_Dreams_(1976_film) .
  ?film dbo:director ?director .
  ?director dbo:birthPlace ?birthPlace .
  FILTER (dbo:Settlement ?birthPlace)
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
115,4,train,Give me the alma mater of Vladimir Cerrón and alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?vCerronAlmaMater ?jSotomayorTelloAlmaMater
WHERE {
  ?vCerron dbo:almaMater ?vCerronAlmaMater .
  ?jSotomayorTello dbo:almaMater ?jSotomayorTelloAlmaMater .

  VALUES ?person {
    (dbpedia:Vladimir_Cerrón)
    (dbpedia:Jorge_Sotomayor_Tello)
  }

  FILTER (?vCerron = ?person && ?person != ?jSotomayorTello) .
  FILTER (?jSotomayorTello = ?person && ?person != ?vCerron) .
}
```

### Explanation:

- **PREFIX**: Define prefixes for ontology (`dbo`) and properties (`dbp`).
- **SELECT**: Choose the variables `?vCerronAlmaMater` and `?jSotomayorTelloAlmaMater` to retrieve the alma maters.
- **WHERE**:
  - Use triple patterns to link each person to their alma mater using `dbo:almaMater`.
  - Use `VALUES` to specify the DBpedia resources for Vladimir Cerrón and Jorge Sotomayor Tello.
  - Apply `FILTER` conditions to ensure that each variable corresponds to the correct individual.",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
184,4,train,Give me the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person
WHERE {
  ?person dbo:birthPlace dbp:Budapest .
}
```

This query selects individuals (`?person`) whose birthplace is Budapest, using the `dbo:birthPlace` predicate.",1,1,2,1,1,3,3,71,0,0,2751,0,0.0,0
801,7,train,"Give me the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?album a dbo:MusicalWork .
  ?album rdfs:label ""What U See Is What U Get""@en .
  FILTER (lang(?album) = 'en')
}
```

This query does the following:
- Uses `PREFIX` to define common namespaces for DBpedia.
- Selects albums (`?album`) that are instances of `dbo:MusicalWork`.
- Filters results where the album's label is ""What U See Is What U Get"" in English.",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
427,5,train,Who is the alumnus of Massachusetts Institute of Technology?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus WHERE {
  ?alumnus dbo:almaMater dbp:alma_mater ""Massachusetts Institute of Technology""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1559,0,0.0,0
16,12,train,Give me the professional in Actress and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName ?occupation
WHERE {
  ?person a dbo:Actor .
  ?person foaf:name ""Georgeanne Marie Rice"" .
  ?person dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(?occupation), ""actress""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
16,14,train,Give me the person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Gigi Rice and her birth name
  dbr:Gigi_Rice dbo:birthName ?birthName .

  # Find any person with that birth name
  ?person dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
959,0,train,Give me the member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member ?memberLabel
WHERE {
  VALUES ?university { <http://dbpedia.org/page/University_of_Tsukuba> }
  
  ?member dbo:alumnusOf ?university .
  OPTIONAL { ?member rdfs:label ?memberLabel . FILTER (lang(?memberLabel) = 'en') }

  UNION

  ?member dbo:member ?university .
  OPTIONAL { ?member rdfs:label ?memberLabel . FILTER (lang(?memberLabel) = 'en') }
}
ORDER BY ?memberLabel
```",1,1,2,1,1,3,3,71,0,0,267,0,0.0,0
712,8,train,Give me the resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual ?restingPlace
WHERE {
  ?individual dbo:award ""Hero of the Soviet Union""@en .
  OPTIONAL { ?individual dbo:placeOfBurial ?restingPlace . }
}
```

This query selects individuals who have been awarded the title ""Hero of the Soviet Union"" and retrieves their resting place if available. The use of `OPTIONAL` ensures that even if some individuals do not have a specified resting place, they are still included in the results.",2,2,3,2,1,3,2,20,0,0,49,0,0.0,0
767,17,train,"Give me the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Matthew Burland""@en .
  OPTIONAL { 
    ?person dbo:alterEgo ?alterEgo .
  }
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
356,6,train,Give me the player in 2015 Sacramento Republic FC season and team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?playerName ?teamName WHERE {
  # Mark Briggs as a player
  dbr:Mark_Briggs dbo:birthPlace ?place .
  
  # Team associated with Mark Briggs in the 2015 season
  OPTIONAL {
    ?player foaf:name ""Mark Briggs""@en ;
            dbo:playsFor ?team .
    ?team dbo:season ?season .
    FILTER (?season = dbr:2015_Sacramento_Republic_FC_season)
    
    # Get player name and team name
    ?player foaf:name ?playerName .
    ?team foaf:name ?teamName .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
55,1,train,Give me the band member of Metallica.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:Metallica dbo:bandMember ?member .
}
```",1,1,2,1,1,2,3,28,0,4,15,0.0,0.0,0
77,8,train,Give me the force of the mayor of Congress Poland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?forceDescription
WHERE {
  # Identify the mayor of Congress Poland
  ?mayor a dbo:Mayor ;
         dbo:country dbr:Congress_Poland .

  OPTIONAL {
    # Look for properties that might describe ""force""
    ?mayor dbo:wikiPageWikiLink ?relatedEntity .
    ?relatedEntity rdfs:label ?forceDescription .
    FILTER (lang(?forceDescription) = 'en')
  }
}
```

This query attempts to find the mayor of Congress Poland and any related entities or descriptions that might be linked to them, which could provide insight into their ""force"" or influence.",2,2,3,2,1,3,2,20,0,0,33,0,0.0,0
696,8,train,Give me the landmark at elevation of the award of Nie Rongzhen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v0 . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation
WHERE {
  # Find Nie Rongzhen and his awards
  dbr:Nie_Rongzhen dbo:award ?award .

  # Check if the award is associated with a landmark
  OPTIONAL { 
    ?award dbo:location ?landmark .
    
    # Get elevation of the landmark
    ?landmark dbo:elevationAboveSeaLevel ?elevation .
  }
}
```",2,2,3,2,1,3,2,20,0,0,599,0,0.0,0
427,14,train,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party
WHERE {
  ?person a dbo:OfficeHolder ;
          a dbo:Politician ;
          dbo:birthName ""Romano Antonio Prodi""@en .
  ?person dbo:politicalParty ?party .
}
```",2,4,3,2,1,3,3,71,0,0,7,0,0.0,0
77,4,train,"Give me the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organisation
WHERE {
  ?organisation dbo:administrativeTerritory dbr:Warsaw .
  ?organisation a dbo:Organization .
}
```",1,2,2,1,1,3,2,20,0,0,7,0,0.0,0
281,16,train,"Give me the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace (COUNT(?leader) AS ?numLeaders)
WHERE {
  ?election dbo:electionDate ?date .
  FILTER(YEAR(?date) = 1962 && contains(str(?election), ""New South Wales""))
  
  ?election dbo:winner ?leader .
  ?leader a dbo:Politician .

  ?leader dbp:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .
}
GROUP BY ?birthPlace
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
801,12,train,Give me the associated musical artist of Chris Taylor (music producer) and producer of Westside Story (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find Chris Taylor and his associated musical artist
  OPTIONAL {
    dbr:Chris_Taylor_(music_producer) dbo:musicalArtist ?artist .
  }
  
  # Find the producer of Westside Story (song)
  OPTIONAL {
    dbr:Westside_Story_(song) dbo:producer ?producer .
    
    # Check if Chris Taylor is the producer
    FILTER(?producer = dbr:Chris_Taylor_(music_producer))
    
    # If Chris Taylor is the producer, find associated artists
    ?producer dbo:musicalArtist ?artist .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
184,16,train,"Give me the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?ladislaus a dbo:Archduke ;
             foaf:name ""Ladislaus Philipp of Austria"" .
  
  ?parent dbo:spouseOrChildOf ?ladislaus ;
          dbo:child ?child .

  FILTER EXISTS { ?child dbo:royalTitle ?title }
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
391,11,train,Give me the native of the figure known as Hub City.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?native
WHERE {
  ?entity rdfs:label ""Hub City""@en .
  ?entity dbo:birthPlace ?native .
}
```",2,2,3,2,1,3,3,71,0,0,176,0,0.0,0
77,9,train,Who is the awardee of the award of Maxim Grigorievich Vlasov?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  # Find the award given by Maxim Grigorievich Vlasov
  ?award dbo:recipient dbr:Maxim_Grigorievich_Vlasov .
  
  # Find who received that specific award
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,416,0,0.0,0
16,7,train,Who is the alumnus of Ohio State University?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alumnus WHERE {
  ?alumnus a foaf:Person .
  ?alumnus dbo:almaMater <http://dbpedia.org/resource/The_Ohio_State_University> .
}
```",1,1,2,1,1,3,3,71,0,2,467,0.0,0.0,0
92,6,train,"Give me the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Artist .
  ?person foaf:name ""Jim Sheppard""@en .
}
```

Explanation:
- **PREFIX**: Define common prefixes for DBpedia properties and classes.
- **SELECT**: Choose the variable `?person` to represent individuals matching the criteria.
- **WHERE**:
  - `?person a dbo:Artist .`: Ensures that the person is an artist.
  - `?person foaf:name ""Jim Sheppard""@en .`: Filters for people whose name is ""Jim Sheppard"" in English.

This query will return all individuals who are artists and were born with the name Jim Sheppard.",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
981,3,train,Give me the region of Time in Indonesia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?regionLabel
WHERE {
  ?timeZone a dbo:TimeZone .
  ?timeZone dbo:country dbr:Indonesia .
  ?timeZone rdfs:label ?regionLabel .
  FILTER (lang(?regionLabel) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
