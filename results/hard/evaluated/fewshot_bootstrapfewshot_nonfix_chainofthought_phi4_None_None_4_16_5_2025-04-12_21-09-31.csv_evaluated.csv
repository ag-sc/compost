id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
392,21,test,"Give me the region of Central European Time and entity in Italy and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
SELECT ?region ?entity ?province WHERE {
  # Find regions observing Central European Time
  ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> .
  
  # Ensure the entity is in Italy
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Italy> .

  # Find Sebastiano Bianchetti's residence and its province
  <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/ontology/residence> ?residence .
  
  # Ensure the residence is a settlement and Italian
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .

  # Find the province of the residence
  ?residence <http://dbpedia.org/ontology/province> ?province .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
421,24,test,Give me the person born as the birth name of Dino Merlin and native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?person WHERE {
  # Step 1: Get Dino Merlin's birth name
  <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 2: Get Samir Bekrić's birthplace
  <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 3: Find a person with the same birth name and native to the birthplace of Samir Bekrić
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/nativeLabel> ?nativeLabel .
  FILTER(?nativeLabel = ?birthPlace)
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
427,55,test,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994) and party of the father of Lamberto Andreotti.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v5 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
# Step 1: Identify Romano Antonio Prodi as an office holder and politician, and retrieve his associated party.
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Politician>)).
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/memberOf> ?party .
}

# Step 2: Check for reference to the Italian People's Party (1994) in relation to Prodi or his party.
SELECT ?reference WHERE {
  ?party <http://dbpedia.org/property/reference> ?reference .
  FILTER CONTAINS(LCASE(?reference), ""italian people's party (1994)"")
}

# Step 3: Find Lamberto Andreotti's father and determine his political affiliation.
SELECT ?fatherParty WHERE {
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/memberOf> ?fatherParty .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
996,19,test,Give me the force of the awardee of 1778.0 and entity in the award of the native of Palestine (region).,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?result <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
SELECT ?force WHERE {
  ?entity <http://dbpedia.org/ontology/nativeOf> <http://dbpedia.org/resource/Palestine_(region)> .
  ?entity <http://dbpedia.org/ontology/award> ?award .
  ?award <http://www.w3.org/2002/07/owl#sameAs> ?yearAward .
  ?yearAward <http://dbpedia.org/property/year> ""1778""^^xsd:decimal .
  ?award <http://dbpedia.org/ontology/awardee> ?awardee .
  ?awardee <http://dbpedia.org/ontology/militaryService> ?service .
  ?service <http://dbpedia.org/ontology/force> ?force .
}
```",5,5,6,3,2,3,2,20,0,0,4,0,0.0,0
184,64,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of Archduke Joseph August of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
# Step 1: Find Archduchess Margaret of Austria (born 1925) and her parent
SELECT ?margaretParent WHERE {
  ?margaret <http://dbpedia.org/ontology/birthDate> ""1925-01-01""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?margaret <http://schema.org/name> ""Archduchess Margaret of Austria""@en .
  ?margaret <http://dbpedia.org/ontology/familyName> ""Habsburg-Lorraine""@en .
  ?margaret <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?parent <http://dbpedia.org/ontology/spouse> ?margaret .
  ?parent <http://dbpedia.org/ontology/child> ?margaret .
}

# Step 2: Find the child of this parent
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/child> ?child .
}

# Step 3: Identify the native of a landmark at elevation 96.0 that is a settlement
SELECT ?native WHERE {
  ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#lat> ?lat .
  ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#long> ?long .
  ?landmark <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
  ?landmark <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/Settlement108069627> .
  ?native <http://dbpedia.org/ontology/nativeOf> ?landmark .
}

# Step 4: Find the parent of this native
SELECT ?parentNative WHERE {
  ?native <http://dbpedia.org/ontology/familyName> ?familyName .
  ?parentNative <http://dbpedia.org/ontology/spouse> ?native .
  ?parentNative <http://dbpedia.org/ontology/child> ?native .
}

# Step 5: Identify the child of Archduke Joseph August of Austria
SELECT ?childJoseph WHERE {
  ?joseph <http://dbpedia.org/ontology/name> ""Archduke Joseph August of Austria""@en .
  ?joseph <http://dbpedia.org/ontology/familyName> ""Habsburg-Lorraine""@en .
  ?joseph <http://dbpedia.org/ontology/child> ?childJoseph .
}

# Step 6: Find the parent of both individuals from steps 2 and 5
SELECT ?finalParent WHERE {
  ?parent1 <http://dbpedia.org/ontology/spouse> ?finalParent .
  ?parent1 <http://dbpedia.org/ontology/child> ?child .
  
  ?parent2 <http://dbpedia.org/ontology/spouse> ?finalParent .
  ?parent2 <http://dbpedia.org/ontology/child> ?childJoseph .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
492,46,test,"Give me the person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?person WHERE {
  # Step 1: Find the author of ""French Algeria""
  ?author <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/French_Algeria_(book)> .
  
  # Step 2: Find a work associated with that author
  ?work <http://purl.org/dc/terms/creator> ?author .

  # Step 3: Determine the decedent at that work
  ?decedent <http://dbpedia.org/ontology/deathPlace> ?work .
  
  # Step 4: Identify the war in which Frédéric-Georges Herr was a commander
  <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/commander> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://dbpedia.org/ontology/event> ?event .

  # Step 5: Find the person who matches all these criteria
  FILTER (?decedent = ?person)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,20,test,Give me the reference to Partito Popolare Italiano and party of the father of Lamberto Andreotti.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
# Query to get the reference to Partito Popolare Italiano
SELECT ?partito WHERE {
  ?partito <http://www.w3.org/2000/01/rdf-schema#label> ""Partito Popolare Italiano""@en .
}

# Query to find the party of Lamberto Andreotti's father
SELECT ?party WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
  }
  ?father <http://dbpedia.org/ontology/memberOf> ?party .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
747,61,test,"Give me the band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Part 1: Band of the person born as the persona of Shèna
SELECT ?band WHERE {
  ?shena <http://dbpedia.org/ontology/birthName> ?birthName .
  FILTER (str(?shena) = ""Shèna"") .
  
  OPTIONAL { ?birthName <http://dbpedia.org/ontology/memberOfBand> ?band . }
}

UNION

# Part 2: Band of the writer of the work, that is a song, of Amba Shepherd
SELECT ?writerBand WHERE {
  ?song <http://purl.org/dc/terms/creator> ?ambashepherd .
  FILTER (str(?ambashepherd) = ""Amba_Shepherd"") .

  ?song <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .

  OPTIONAL { ?song <http://purl.org/dc/terms/contributor> ?writer . }
  
  OPTIONAL { ?writer <http://dbpedia.org/ontology/memberOfBand> ?writerBand . }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
328,44,test,"Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/awardee> <http://dbpedia.org/resource/Order_of_Suvorov> .
  
  ?force <http://dbpedia.org/ontology/commander> ?person ;
         <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Ferenc_Szálasi> .

  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> ;
          <http://dbpedia.org/property/leader> ?person .
  
  ?office <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Joseph_Stalin> .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
294,28,test,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in the birth place, that is a settlement, of Marion James and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v5 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
# Step 1: Find the architect of P.D. Houston Jr. House
SELECT ?architect WHERE {
  <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?architect .
}

# Step 2: Find the resting place of this architect
SELECT ?restingPlaceArchitect WHERE {
  ?architect <http://dbpedia.org/ontology/deathPlace> ?restingPlaceArchitect .
}

# Step 3: Find the birthplace of Marion James that is a settlement
SELECT ?birthPlaceMarion WHERE {
  <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceMarion .
  ?birthPlaceMarion <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}

# Step 4: Find the awardee of Distinguished Service Medal (U.S. Army) who is a politician and their resting place
SELECT ?restingPlaceAwardee WHERE {
  ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Distinguished_Service_Medal_(United_States_Army)> .
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?awardee <http://dbpedia.org/ontology/deathPlace> ?restingPlaceAwardee .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
528,41,test,Give me the war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?result WHERE {
  # Part 1: War of the military force in Battle of Pisagua
  {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?force .
    ?force <http://dbpedia.org/ontology/battle> ?result .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
  
  UNION
  
  # Part 2: War of the commander in Battle of La Rinconada de Ate
  {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?result .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
  
  UNION
  
  # Part 3: Force of Narciso Campero
  {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/militaryForce> ?force .
    ?force <http://dbpedia.org/ontology/battle> ?result .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
}
```",5,5,6,2,3,3,3,71,2,12,0,0.14285714285714285,1.0,0.25
9,49,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
# Step 1: Find the mayor who is a politician of the Northern Ireland Forum
SELECT ?mayor WHERE {
  ?mayor <http://dbpedia.org/ontology/politicalParty> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}

# Step 2: Find the alma mater of this mayor
SELECT ?almaMater WHERE {
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
}

# Step 3: Find an organization in Northern Ireland that is also an educational institution and has a nickname
SELECT ?organization WHERE {
  ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?organization <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""northern ireland""))
  ?organization <http://dbpedia.org/ontology/nickname> ?nickname .
  ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
281,41,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
# Part 1: Find the country entity in Bob Heffron's birthplace
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  BIND(?birthPlace AS ?country)
}

UNION

# Part 2: Find the war associated with the awardee of Knight Grand Cross of the Order of the Bath and New Zealand Army
SELECT ?war WHERE {
  ?person <http://dbpedia.org/property/knightGrandCrossOfTheOrderOfTheBath> true .
  ?person <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://dbpedia.org/property/army> <http://dbpedia.org/resource/New_Zealand_Army> .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
485,21,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and entity in United Kingdom and birth place of Thomas Warner (poet).",SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Condition 1: Entity in the birth place region of Joseph Whitaker (naturalist)
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
    ?entity <http://dbpedia.org/ontology/location> ?birthPlace .
  }

  # Condition 2: Entity in the United Kingdom that is also the birth place of Thomas Warner (poet)
  OPTIONAL {
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceWarner .
    ?birthPlaceWarner <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place> .
    ?entity <http://dbpedia.org/ontology/location> ?birthPlaceWarner .
    ?birthPlaceWarner <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/United_Kingdom> .
  }
}
```",4,5,5,2,3,2,3,28,0,101,1,0.0,0.0,0
528,52,test,"Give me the war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v5 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query 1: War of the commander in Battle of La Rinconada de Ate
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?war)
}

UNION

# Query 2: War of the military force of an entity that is a societal event in Chile
SELECT ?war WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?war)
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
534,19,test,"Give me the birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician) and headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/headquarter> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/owner> ?v4 . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Find the child who is both a politician and an office holder
  ?child <http://dbpedia.org/ontology/birthName> ""Desmond FitzGerald"" .
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Politician> <http://dbpedia.org/ontology/OfficeHolder>) .

  # Step 2: Get the birthplace of this child
  ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 3: Find the location of the 2012 Pro12 Grand Final that is a venue and architectural structure
  <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Venue> <http://dbpedia.org/ontology/ArchitecturalStructure>) .

  # Step 4: Identify the owner of this location
  ?location <http://dbpedia.org/property/owner> ?owner .

  # Step 5: Determine the headquarters of this owner
  ?owner <http://dbpedia.org/ontology/headquarters> ?headquarters .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
391,33,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?actor WHERE {
  # Step 1: Find Sherry Hormann's spouse
  <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Check if the spouse is native to Compton, California
  ?spouse <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER (STRSTARTS(STR(?birthPlace), ""http://dbpedia.org/resource/Compton,_California""))

  # Step 3: Find the claim to fame that is a work
  ?spouse <http://purl.org/dc/terms/references> ?claimToFame .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .

  # Step 4: Identify an actor associated with this work
  ?claimToFame <http://dbpedia.org/ontology/starring> ?actor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
54,54,test,Give me the child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v3 <http://dbpedia.org/ontology/child> ?result . },"```sparql
# Step 1: Find the father of Soe Min Wimala Dewi
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/ontology/father> ?father .
}

# Step 2: Identify the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava (should be same as father from step 1)
SELECT ?predecessor WHERE {
  ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
}

# Step 3: Find the parent of this predecessor's child
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/father> ?predecessor .
  ?child <http://dbpedia.org/ontology/mother> ?parent .
}

# Step 4: Identify the child of that parent
SELECT ?finalChild WHERE {
  ?parent <http://dbpedia.org/ontology/child> ?finalChild .
}
```

Note: This query assumes a direct mapping in DBpedia for these relationships, which may require adjustments based on actual data availability and structure.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
10,27,test,"Give me the professional in the birth name of Sharon Kao and associated musical artist of Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
# Part 1: Find professional in birth name of Sharon Kao
SELECT ?professional WHERE {
  <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthName .
  ?birthName <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  ?type <http://dbpedia.org/property/profession> ?professional .
}

UNION

# Part 2: Find associated musical artist of Matt Colton
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

UNION

# Part 3: Find band member of Luke Francis Vibert (an artist)
SELECT ?bandMember WHERE {
  <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?vibertBand <http://dbpedia.org/property/member> ?bandMember .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
528,65,test,Give me the war of the military force of Battle of Pisagua and war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
# Step 1: Find the war of the military force involved in Battle of Pisagua
SELECT ?pisaguaWar WHERE {
  <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/battle> ?pisaguaWar .
  ?pisaguaWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Step 2: Find the war of the commander in the work of --01-09
SELECT ?workWar WHERE {
  ?work <http://purl.org/dc/terms/date> ""--01-09""^^xsd:date .
  ?work <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?workWar .
  ?workWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Step 3: Find the war of the military force associated with Narciso Campero Leyes
SELECT ?camperoWar WHERE {
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/birthDate> ?birthDate .
  FILTER (STR(?birthDate) = ""Narciso Campero Leyes"")
  ?force <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Narciso_Campero_Leyes> .
  ?force <http://dbpedia.org/ontology/battle> ?camperoWar .
  ?camperoWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
492,59,test,"Give me the person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?decedent WHERE {
  # Step 1: Find the author of ""French Algeria""
  <http://dbpedia.org/resource/French_Algeria> <http://purl.org/dc/terms/creator> ?author .

  # Step 2: Identify commanders in the Battle of Verdun
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?commander .

  # Step 3: Find wars associated with these commanders that are also events
  ?commander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/2000/01/rdf-schema#isPartOf> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Step 4: Find the decedent at the work of the author
  ?author_work <http://purl.org/dc/terms/creator> ?author .
  ?decedent <http://dbpedia.org/ontology/decedentAt> ?author_work .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
488,58,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of Enomoto Takeaki and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT DISTINCT ?administration ?birthPlace ?deathPlace WHERE {
  # Step 1: Tokugawa Masako's spouse
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Spouse's father (Royalty)
  ?spouse <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Father's administration
  ?father <http://dbpedia.org/property/administration> ?administration .

  # Step 4: Enomoto Takeaki's birth place
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 5: Yūki Hideyasu's father (Politician)
  <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/ontology/father> ?yukiFather .
  ?yukiFather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 6: Father's death place
  ?yukiFather <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
801,56,test,"Give me the producer of Westside Story (song) and professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?producer WHERE {
  # Step 1: Find producer of ""Westside Story"" (song)
  <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?producer .

  # Step 2: Find professional in the alter ego of The Shadow
  ?shadowAlterEgo <http://dbpedia.org/ontology/profession> ?professional .
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?shadowAlterEgo .

  # Step 3: Find associated musical artist of the writer
  ?writer <http://dbpedia.org/ontology/musicArtist> ?associatedArtist .
  ?professional <http://dbpedia.org/ontology/writer> ?writer .

  # Step 4: Writer that is a musical artist and an artist of the album ""What U See Is What U Get""
  ?album <http://dbpedia.org/ontology/artist> ?writer .
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?album <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> .

  # Ensure the writer is both a musical artist and an artist
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
232,54,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee and native of London.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
# Step 1: Identify John Pertwee's child who is an actor, narrator, and producer
SELECT ?child WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/London> .
  ?person <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> ;
         <http://dbpedia.org/ontology/narrator> ?narrator ;
         <http://dbpedia.org/ontology/producer> ?producer .
}

# Step 2: Find the claim to fame that is both a film and a military conflict
SELECT ?claimToFame WHERE {
  ?child <http://dbpedia.org/property/claimToFame> ?claimToFame .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Film> , <http://dbpedia.org/ontology/MilitaryConflict>) .
}

# Step 3: Identify the actor associated with this claim to fame
SELECT ?actor WHERE {
  ?claimToFame <http://dbpedia.org/ontology/starring> ?actor .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
184,18,test,Give me the parent of Archduchess Ilona of Austria and parent of Géza von Habsburg and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/birthParent> ?parent .
  <http://dbpedia.org/resource/Géza_von_Habsburg> <http://dbpedia.org/ontology/birthParent> ?parent .
  ?parent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
994,33,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and associated musical artist of S.A. Slayer.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Part 1: Find Fredrik Thordendal's band that is an organization
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/member> ?band .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}

# Part 2: Find band members of this band that are also bands, groups, and organizations
SELECT DISTINCT ?member WHERE {
  ?band <http://dbpedia.org/ontology/member> ?member .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1 .
  FILTER (?type1 IN (<http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/MusicalGroup>, <http://dbpedia.org/ontology/Organisation>)).
}

# Part 3: Find associated musical artists of these members
SELECT DISTINCT ?associatedArtist WHERE {
  ?member <http://dbpedia.org/ontology/member> ?artist .
  ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

# Part 4: Find the associated musical artist of S.A. Slayer
SELECT ?associatedArtist WHERE {
  <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
184,47,test,"Give me the parent of the native of Budapest and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?finalParent WHERE {
  # Step 1: Find native of Budapest
  ?native <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
  
  # Step 2: Find parent of the native of Budapest
  ?native <http://dbpedia.org/ontology/father> ?parentOfNative .

  # Step 3: Find child of this parent
  ?childOfParent <http://dbpedia.org/ontology/father> ?parentOfNative .
  
  # Step 4: Identify the parent of Archduke Ladislaus Philipp of Austria
  <http://dbpedia.org/resource/Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/father> ?archdukeParent .

  # Step 5: Find child of this parent (Archduke's child)
  ?childOfArchdukeParent <http://dbpedia.org/ontology/father> ?archdukeParent .
  
  # Step 6: Identify royalty among these children
  ?childOfArchdukeParent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 7: Determine the parent of this royal individual
  ?royalChild <http://dbpedia.org/ontology/father> ?finalParent .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
617,60,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT DISTINCT ?result WHERE {
  # Step 1: Find successor of Antiochus II Theos who is royalty
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_II_Theos> .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 2: Find child of this successor who is royalty
  ?child1 <http://dbpedia.org/ontology/birthParent> ?successor .
  ?child1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 3: Find parent of these royal children
  ?parent <http://dbpedia.org/ontology/birthChild> ?child1 .

  # Step 4: Determine commander in Battle of Panium and their child
  <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?commander .
  ?child2 <http://dbpedia.org/ontology/birthParent> ?commander .

  # Step 5: Find intersection between parents from step 3 and children from step 4
  FILTER (?parent = ?child2)
  BIND(?parent AS ?result)
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
184,55,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
# Step 1: Find child of Archduke Joseph Francis of Austria
SELECT ?child1 WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?child1 .
}

# Step 2: Find parent of the native of Budapest
SELECT ?parentBudapest WHERE {
  ?native <http://www.w3.org/2000/01/rdf-schema#label> ""Budapest"" .
  ?native <http://dbpedia.org/ontology/birthPlace> ?bpd:Budapest .
  ?person <http://dbpedia.org/ontology/nativeOf> ?bpd:Budapest .
  ?person <http://dbpedia.org/ontology/child> ?native .
  ?parentBudapest <http://dbpedia.org/ontology/child> ?person .
}

# Step 3: Find child of the child of Archduke Joseph Karl of Austria
SELECT ?grandChild WHERE {
  ?child2 <http://dbpedia.org/ontology/child> ?grandChild .
  <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?child2 .
}

# Final Step: Find the parent that connects all these entities
SELECT DISTINCT ?parent WHERE {
  VALUES ?entity { ?child1 ?person ?grandChild }
  ?entity <http://dbpedia.org/ontology/child> ?childEntity .
  ?parent <http://dbpedia.org/ontology/child> ?childEntity .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
92,37,test,"Give me the band of Joseph Michael and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band ?associatedArtist WHERE {
  # Step 1: Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  FILTER(STRSTARTS(LCASE(?movie), LCASE(""return to nuke 'em high volume 1"")))

  # Step 2: Find the person born who is an artist and associated with this actor
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?artist <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?actor <http://dbpedia.org/ontology/associatedWith> ?artist .

  # Step 3: Determine the band of Joseph Michael
  <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/ontology/memberOfBand> ?band .

  # Step 4: Find any musical artists associated with both the identified artist and the band
  ?artist <http://dbpedia.org/ontology/associatedWith> ?associatedArtist .
  ?band <http://dbpedia.org/ontology/associatedWith> ?associatedArtist .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
528,69,test,"Give me the force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Part 1: Force of Narciso Campero
SELECT ?force WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Narciso Campero"" .
  ?person <http://dbpedia.org/ontology/militaryForce> ?force .
}

UNION

# Part 2: War of the Commander in Battle of La Rinconada de Ate
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?battle <http://dbpedia.org/ontology/war> ?war .
}

UNION

# Part 3: War of the Military Force of a Societal Event in Chile
SELECT ?war WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/war> ?war .
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
48,20,test,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash and band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
# Part 1: Stacey Dash's show and actor's band
SELECT DISTINCT ?band WHERE {
  # Shows featuring Stacey Dash
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> .
  
  # Actors in those shows who are also musical artists
  ?actor <http://dbpedia.org/ontology/performedIn> ?show ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  
  # Bands associated with these actors
  ?actor <http://dbpedia.org/ontology/memberOf> ?band .
}

UNION

# Part 2: Shellback's work and writer's band
SELECT DISTINCT ?band WHERE {
  # Works produced by Shellback
  ?work <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Shellback_(record_producer)> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  
  # Writers of those works
  ?work <http://purl.org/dc/terms/creator> ?writer .
  
  # Bands associated with these writers
  ?writer <http://dbpedia.org/ontology/memberOf> ?band ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
314,21,test,"Give me the awardee of 30 and commander in the profession, that is an event and a societal event, of Lisa Gavrić and person deceased at Madrid.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . }","```sparql
SELECT ?awardee WHERE {
  # Step 1: Find Lisa Gavrić's profession that is an event and a societal event
  <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Step 2: Find commanders in this profession
  ?commander <http://dbpedia.org/ontology/profession> ?profession .
  
  # Step 3: Check if the commander is an awardee of ""30""
  ?commander <http://dbpedia.org/property/awards> ?award .
  FILTER(CONTAINS(LCASE(STR(?award)), ""30""))

  # Step 4: Ensure the awardee is deceased at Madrid
  ?commander <http://dbpedia.org/ontology/deceasedAt> <http://dbpedia.org/resource/Madrid> .

  BIND(?commander AS ?awardee)
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
161,50,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commander WHERE {
  # Step 1: Find the predecessor of Indalecio Prieto
  <http://dbpedia.org/resource/Indalecio_Prieto> <http://www.w3.org/2002/07/owl#sameAs> ?predecessor .

  # Step 2: Identify the military force associated with this predecessor that is both a societal event and a military conflict
  ?predecessor <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 3: Find the commander in the force (event) involving Emilio Mola
  ?forceEmilio <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> .
  
  # Step 4: Determine the commander involved in the identified force from step 2
  ?force <http://dbpedia.org/ontology/commander> ?commander .
}
```",5,8,6,3,2,3,3,71,0,0,32,0,0.0,0
767,66,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of George K. Nash.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v6 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?settlement WHERE {
  # Step 1: Find the administration associated with George K. Nash
  ?administration <http://dbpedia.org/ontology/administration> <http://dbpedia.org/resource/George_K._Nash> .
  
  # Step 2: Find the alma mater of this administration
  ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Step 3: Determine the alter ego (fictional character) of Matthew Burland
  <http://dbpedia.org/resource/Matthew_Burland> <http://dbpedia.org/ontology/fictionalAlterEgo> ?fictionalCharacter .
  
  # Step 4: Locate a reference to this fictional character
  ?reference <http://dbpedia.org/ontology/reference> ?fictionalCharacter .

  # Step 5: Find an entity in the administration that is a settlement
  ?administration <http://dbpedia.org/property/entityInAdministration> ?settlement .
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Ensure all conditions are met
  FILTER(?almaMater = ?reference)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
182,21,test,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v0 . },"```sparql
# Step 1: Get the nationality of Tamara Kunanayakam
SELECT ?nationality WHERE {
  <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?nationality .
}

# Step 2: Find entities related to that nationality (assuming we have the result from step 1 as ?nationality)
SELECT ?entity WHERE {
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?entity <http://dbpedia.org/ontology/nationality> ?nationality .
}

# Step 3: Get the wars associated with Mahesh Senanayake
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?war .
}

# Step 4: Get the wars in which Jagath Dias participated
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?war .
}

# Final step: Combine results to find common or related wars (assuming we have results from steps 3 and 4 as ?war1 and ?war2)
SELECT DISTINCT ?commonWar WHERE {
  VALUES (?war1) { (<result_from_step_3>) }
  VALUES (?war2) { (<result_from_step_4>) }
  OPTIONAL { ?war1 <http://dbpedia.org/ontology/sameAs> ?commonWar . }
  OPTIONAL { ?war2 <http://dbpedia.org/ontology/sameAs> ?commonWar . }
}
```

Note: The final query assumes that we have the results from previous steps as placeholders (`<result_from_step_3>` and `<result_from_step_4>`). In practice, these would be replaced with actual values obtained from executing the intermediate queries. This SPARQL script is a conceptual representation of how to approach the problem using DBpedia's data model.",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
92,71,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as the birth name of Joseph Michael.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v8 . },"```sparql
SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?actor <http://dbpedia.org/ontology/performedIn> <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> .
  
  # Step 2: Find bands this actor is part of
  OPTIONAL { ?actor <http://dbpedia.org/ontology/memberOfBand> ?band . }
  
  # Step 3: Reference to ""Nevermore (2006 film)""
  ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Nevermore_(2006_film)> .
  
  # Step 4: Identify the band of Joseph Michael
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
          <http://dbpedia.org/property/birthName> ""Joseph Michael"" .
  OPTIONAL { ?person <http://dbpedia.org/ontology/memberOfBand> ?band2 . }
  
  # Step 5: Find associated musical artists
  OPTIONAL {
    ?band <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  }
  
  OPTIONAL {
    ?band2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  }
  
  OPTIONAL {
    ?reference <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  }
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
92,30,test,Give me the band of the person born as Joseph Michael Furney and band member of Nevermore and associated musical artist of Jim Sheppard.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael Furney"" .
  ?person <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Nevermore_(band)> .
  OPTIONAL { ?person <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Jim_Sheppard_(musician)> . }
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
55,21,test,"Give me the band member of Metallica and band member of Guns N' Roses and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . }","```sparql
SELECT DISTINCT ?person WHERE {
  # Find individuals who are members of both Metallica and Guns N' Roses
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Metallica> .
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Guns_N%27_Roses> .

  # Ensure the reference to Newsted indicates they are part of a band
  ?reference <http://dbpedia.org/property/reference> ?person .
  ?reference <http://dbpedia.org/ontology/referencedBy> <http://dbpedia.org/resource/Newsted> .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
801,22,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?associatedArtist WHERE {
  <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",3,5,4,2,2,3,3,71,0,0,22,0,0.0,0
391,46,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Find the figure with a nickname related to Jackson, Tennessee
  ?figure <http://dbpedia.org/ontology/nickName> ?nickname .
  ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""Jackson, Tennessee"" .

  # Step 2: Identify Michael Ballhaus's birthplace
  <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 3: Find the claim to fame (work) of Michael Ballhaus that is a ""Work""
  ?work <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Michael_Ballhaus> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .

  # Step 4: Retrieve the actor involved in this work
  ?work <http://dbpedia.org/property/starring> ?actor .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
378,55,test,Give me the war of the commander in Peninsular War and war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?result WHERE {
  # Part 1: War of the commander in Peninsular War
  { 
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?result .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
  
  UNION
  
  # Part 2: War of the person born as Carl Pontus Gahn
  { 
    <http://dbpedia.org/resource/C._P._Gahn> <http://www.w3.org/2000/01/rdf-schema#label> ""Carl Pontus Gahn""@en .
    ?gahn <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
    ?gahn <http://dbpedia.org/ontology/militaryConflict> ?result .
  }
  
  UNION
  
  # Part 3: Claim to fame of the commander in Great Siege of Gibraltar
  { 
    <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://purl.org/dc/terms/subject> ?claimToFame .
  }
}
```",6,6,7,2,3,3,3,71,2,114,0,0.017241379310344827,1.0,0.03389830508474576
55,26,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of Metallica and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . }","```sparql
# Step 1: Find the producer of ""Used to Love Her"" who is a band.
SELECT ?producer WHERE {
  <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?producer .
  ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
}

# Step 2: Find the band members of that producer-band.
SELECT ?bandMember WHERE {
  ?producer <http://dbpedia.org/ontology/member> ?bandMember .
}

# Step 3: Identify Metallica's band members.
SELECT ?metallicaBandMember WHERE {
  <http://dbpedia.org/resource/Metallica> <http://dbpedia.org/ontology/member> ?metallicaBandMember .
}

# Step 4: Determine the band associated with the reference to Newsted.
SELECT ?band WHERE {
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?reference <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Newsted> .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
161,39,test,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
SELECT ?force ?commander WHERE {
  # Find military forces involved in the Spanish Civil War
  <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/militaryForce> ?force .
  
  # Identify commanders of these forces
  ?force <http://dbpedia.org/ontology/commander> ?commander .
  
  # Ensure the commander is known as ""El Director""
  ?commander <http://xmlns.com/foaf/0.1/knowsAs> ""El Director"" .
  
  # Check if any associated event of the commander is classified as an event
  ?commander <http://dbpedia.org/ontology/event> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}
```",4,5,5,3,2,3,3,71,0,0,32,0,0.0,0
959,63,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of Yōichi Masuzoe.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
SELECT ?manager WHERE {
  # Step 1: Find Yōichi Masuzoe's residence country
  <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/nationality> ?residence .
  
  # Step 2: Find a person born in 1958 and native of that country
  ?person <http://dbpedia.org/property/birthYear> ""1958""^^xsd:gyear ;
          <http://dbpedia.org/ontology/nativePlace> ?residence .

  # Step 3: Determine their alma mater, ensuring it meets the criteria
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1 ;
             ?type2 ;
             ?type3 ;
             ?type4 .
  FILTER (?type1 = <http://dbpedia.org/resource/Japan>)
  FILTER (?type2 = <http://dbpedia.org/ontology/Organization>)
  FILTER (?type3 = <http://dbpedia.org/ontology/University>)
  FILTER (?type4 = <http://dbpedia.org/ontology/EducationalOrganization>)

  # Step 4: Identify Takashi Sekizuka's team
  ?team <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Takashi_Sekizuka> .

  # Step 5: Find the manager of that team
  ?team <http://dbpedia.org/ontology/manager> ?manager .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
959,49,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?teamManager ?almaMater WHERE {
  # Step 1: Find the manager of the 1998 Kashima Antlers season who is a sports manager.
  <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?sportsManager .
  ?sportsManager <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/ontology/SportsManager> .

  # Step 2: Determine the team managed by this sports manager.
  ?team <http://dbpedia.org/ontology/manager> ?sportsManager .
  
  # Step 3: Find Eiji Ōtsuka's alma mater that is Japanese, an organization, a university, and an educational institution.
  <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER (CONTAINS(LCASE(?label), ""japanese""))
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
}
```",5,10,6,3,2,3,3,71,0,0,2,0,0.0,0
391,32,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as Hub City.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Identify Hub City's native figures
  <http://dbpedia.org/resource/Hub_City> <http://dbpedia.org/ontology/nativeOf> ?figure .

  # Step 2: Find the work associated with Michael Ballhaus and the figure
  ?work <http://dbpedia.org/property/claimToFame> ?ballhaus .
  ?work <http://dbpedia.org/property/claimToFame> ?figure .
  ?ballhaus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Michael_Ballhaus> .

  # Step 3: Find actors in that work
  ?work <http://dbpedia.org/ontology/actor> ?actor .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
54,62,test,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find Thado Minsaw of Prome's parent
  ?thado_minsaw <http://dbpedia.org/ontology/father> ?parent_thado_minsaw .

  # Step 2: Find the child of this parent
  ?parent_thado_minsaw <http://dbpedia.org/ontology/child> ?child_parent_thado_minsaw .

  # Step 3: Determine Thinkhaya of Pagan's father
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/father> ?father_thinkhaya .

  # Step 4: Locate the child of this father
  ?father_thinkhaya <http://dbpedia.org/ontology/child> ?child_father_thinkhaya .

  # Step 5: Find the parent of the child from step 4
  ?child_father_thinkhaya <http://dbpedia.org/ontology/father> ?parent_child_father_thinkhaya .

  # Step 6: Identify Ameitta Thiri Maha Dhamma Dewi of Ava's predecessor
  <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://dbpedia.org/ontology/predecessor> ?result .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
488,49,test,"Give me the birth place of the commander in Boshin War and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Step 1: Identify commanders in the Boshin War
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 2: Find Tokugawa Masako's spouse who is royalty and their father's administration
SELECT ?spouse ?fatherAdmin WHERE {
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/property/spouse> ?spouse .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?spouse <http://dbpedia.org/property/father> ?father .
  ?father <http://dbpedia.org/property/administration> ?fatherAdmin .
}

# Step 3: Find the birthplace of the commander from step 1
SELECT ?birthPlace WHERE {
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```

Note: This query is structured to be executed in parts, as SPARQL does not support direct chaining of these complex relationships in a single query without intermediate results. Each step should be run sequentially to gather the necessary information.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
747,71,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v7 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
# Step 1: Find athlete/soccer player born in Zolotonosha with a decedent
SELECT ?athlete ?decedentBirthDate WHERE {
  ?athlete <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Zolotonosha> .
  ?athlete <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Athlete> <http://dbpedia.org/ontology/SoccerPlayer>) .
  ?athlete <http://dbpedia.org/ontology/decedent> ?decedent .
  ?decedent <http://dbpedia.org/ontology/birthDate> ?decedentBirthDate .
}

# Step 2: Find person born on the decedent's birth date
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ?decedentBirthDate .
}

# Step 3: Check if this person was in a band with someone known as ""Shèna""
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/memberOfBand> ?band .
  ?shena <http://dbpedia.org/ontology/persona> ""Shèna"" .
  ?shena <http://dbpedia.org/property/memberOfBand> ?band .
}

# Step 4: Find the writer of the song ""Amba Shepherd"" and their band
SELECT ?writer ?band WHERE {
  ?work <http://purl.org/dc/terms/title> ""Amba Shepherd"" .
  ?work <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://dbpedia.org/property/memberOfBand> ?band .
}

# Step 5: Match the bands from steps 3 and 4
SELECT DISTINCT ?person WHERE {
  # Reuse previous subqueries to get ?decedentBirthDate, ?person, and ?band
  # Ensure the band matches between the person associated with ""Shèna"" and the writer of ""Amba Shepherd""
}
```

Note: This query is conceptual due to the complexity and potential lack of direct mappings in DBpedia. It may require adjustments based on actual data availability.",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
492,63,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/author> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v6 . },"```sparql
SELECT ?commander WHERE {
  # Step 1: Identify the capital of Algeria
  <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/administrativeCapital> ?capital .
  
  # Step 2: Find the work of the author of ""French Algeria""
  <http://dbpedia.org/resource/French_Algeria_(book)> <http://purl.org/dc/terms/creator> ?author .
  ?work <http://purl.org/dc/terms/creator> ?author .

  # Step 3: Determine the person who died at both locations
  <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  FILTER (?deathPlace = ?capital || ?deathPlace = ?work) .

  # Step 4: Identify wars that are military conflicts and events
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/2000/01/rdf-schema#isClassOf> <http://dbpedia.org/ontology/Event> .

  # Step 5: Find commanders involved in these wars
  ?commander <http://dbpedia.org/ontology/commander> ?war .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
617,68,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find Antiochus (son of Antiochus III) and his child
  ?antiochus <http://dbpedia.org/ontology/birthName> ""Antiochus"" .
  ?antiochus <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?child <http://dbpedia.org/ontology/father> ?antiochus .

  # Step 2: Find the parent of this child, ensuring the child is royalty
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?parent <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Identify the successor of Antiochus II Theos who is royalty
  ?antiochusII <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Antiochus_II_theos> .
  ?successor <http://dbpedia.org/ontology/successor> ?antiochusII .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the child of this successor, ensuring they are royalty
  ?childSuccessor <http://dbpedia.org/ontology/father> ?successor .
  ?childSuccessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Determine the spouse of this child
  ?spouse <http://dbpedia.org/ontology/spouse> ?childSuccessor .

  # Ensure the parent from step 2 is returned
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
981,19,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in the region of Time in Indonesia.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . },"```sparql
SELECT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Kamikaze_Girls> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen> .
  ?entity <http://dbpedia.org/ontology/entityInRegion> <http://dbpedia.org/resource/Time_In_Indonesia> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#sameAs> ?entity .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",5,6,6,3,2,3,2,20,0,0,19,0,0.0,0
378,60,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the person born as the birth name of Carl Pontus Gahn.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
SELECT ?claimToFame WHERE {
  # Step 1: Identify Carl Pontus Gahn's birth name
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .
  
  # Step 2: Find the war involving Thomas Trigge and Carl Pontus Gahn
  ?war <http://dbpedia.org/ontology/personInvolved> <http://dbpedia.org/resource/Thomas_Trigge> ;
       <http://dbpedia.org/ontology/personInvolved> ?person .
  
  # Ensure the person is Carl Pontus Gahn
  FILTER(?person = ?birthName)
  
  # Step 3: Confirm the war's types
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  
  # Step 4: Find the commander of this war
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  
  # Step 5: Retrieve the claim to fame of the commander
  ?commander <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
9,33,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
SELECT ?almaMater WHERE {
  ?award <http://dbpedia.org/ontology/name> ""Royal Medals"" .
  ?award <http://purl.org/dc/terms/references> ?reference .
  ?reference <http://dbpedia.org/property/awardee> <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> .
  <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
981,18,test,"Give me the birth place of the person born, that is a beauty queen, as  and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/birthName> """"@en . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Find the time zone for Salak, North Sumatra
  <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://www.w3.org/2006/time#during> ?timeZone .

  # Step 2: Identify regions in this time zone
  ?region <http://www.w3.org/2006/time#hasTimezone> ?timeZone .
  
  # Step 3: Find beauty queens from these regions
  ?beautyQueen <http://dbpedia.org/ontology/birthPlace> ?birthPlace ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen> .
  
  # Step 4: Ensure the beauty queen is from one of these regions
  ?beautyQueen <http://dbpedia.org/ontology/birthPlace> ?region .
}
```",5,6,6,3,2,3,2,20,0,0,19,0,0.0,0
54,49,test,"Give me the child of the father of Soe Min Wimala Dewi and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?child WHERE {
  # Step 1: Identify Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi <http://dbpedia.org/ontology/father> ?father .
  
  # Step 2: Find the child of this father
  ?father <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Ensure this child is a predecessor (assuming temporal or hierarchical data)
  ?child <http://dbpedia.org/ontology/predecessor> ?predecessorChild .

  # Step 4: Check if the predecessor child is an office holder and royalty related to Thihapate of Mohnyin
  ?predecessorChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?predecessorChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?predecessorChild <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .

  # Ensure Soe Min Wimala Dewi is correctly identified
  VALUES ?soeMinWimalaDewi { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
161,48,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Identify the force related to Francoist Spain
  ?force <http://dbpedia.org/ontology/type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/SocietalEvent>, 
                    <http://www.w3.org/2002/07/owl#Thing>, 
                    <http://dbpedia.org/ontology/MilitaryConflict>)).
  ?force <http://dbpedia.org/property/relatedTo> <http://dbpedia.org/resource/Francoist_Spain> .

  # Step 2: Find the decedent associated with Francoist Spain
  ?decedent <http://dbpedia.org/ontology/deathPlace> ?force .
  
  # Step 3: Identify the commander role of this person in another force
  ?decedent <http://dbpedia.org/ontology/commander> ?commandForce .
  FILTER (?commandForce <http://www.w3.org/2002/07/owl#Thing>) .

  # Step 4: Find the military force related to this commander
  ?militaryForce <http://dbpedia.org/ontology/commander> ?decedent .
}
```",5,9,6,3,2,3,3,71,0,0,34,0,0.0,0
303,27,test,"Give me the party of Guillermo Endara and party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
# Query for Guillermo Endara's party
SELECT ?endaraParty WHERE {
  <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/politicalParty> ?endaraParty .
}

# Query for Arnulfo Arias Madrid's party, ensuring he is a politician and born in El Valle de Antón
SELECT ?ariasParty WHERE {
  ?arias a <http://dbpedia.org/ontology/Politician> ;
         <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/El_Valle_de_Antón> ;
         <http://dbpedia.org/ontology/politicalParty> ?ariasParty .
  FILTER (str(?arias) = ""Arnulfo_Arias_Madrid"")
}

# Query for the country associated with El Valle de Antón
SELECT ?country WHERE {
  <http://dbpedia.org/resource/El_Valle_de_Antón> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
  ?country a <http://dbpedia.org/ontology/Country> .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
488,45,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of Enomoto Takeaki and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?administration WHERE {
  # Find Tokugawa Masako's spouse who is royalty
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Find the father of this royal spouse
  ?spouse <http://dbpedia.org/ontology/father> ?father .

  # Determine the administration of this father
  ?father <http://dbpedia.org/ontology/administration> ?administration .

  # Identify Enomoto Takeaki's birthplace
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Identify Tokugawa Ieyasu's death place
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
281,61,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v5 . },"```sparql
SELECT ?war WHERE {
  # Step 1: Identify the leader of the 1962 New South Wales state election who is a politician.
  ?leader <http://dbpedia.org/ontology/politician> _:a .
  ?election <http://dbpedia.org/property/electionLeader> ?leader .
  ?election <http://dbpedia.org/resource/1962_New_South_Wales_state_election> .

  # Step 2: Determine the birthplace country of this leader.
  ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 3: Find entities in that country related to the New Zealand Army.
  ?entity <http://dbpedia.org/property/country> ?birthPlace .
  ?entity <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/New_Zealand_Army> .

  # Step 4: Identify professionals associated with these entities who are both office holders and politicians.
  ?professional <http://dbpedia.org/property/profession> ?entity .
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?professional <http://dbpedia.org/ontology/politician> _:b .

  # Step 5: Determine their profession, which should be a military unit.
  ?professional <http://dbpedia.org/property/profession> ?militaryUnit .
  ?militaryUnit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .

  # Step 6: Find wars associated with these military units.
  ?militaryUnit <http://dbpedia.org/property/war> ?war .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
421,23,test,Give me the person born as the birth name of Dino Merlin and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
# Step 1: Get Dino Merlin's birth name
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Find band members of awardees
SELECT DISTINCT ?person WHERE {
  ?band <http://dbpedia.org/ontology/member> ?person .
  ?award <http://dbpedia.org/ontology/recipient> ?band .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 3: Combine the information
SELECT DISTINCT ?person WHERE {
  # Get Dino Merlin's birth name
  SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/ontology/birthName> ?birthName .
  }
  
  # Find band members of awardees with the same birth name
  ?band <http://dbpedia.org/ontology/member> ?person .
  ?award <http://dbpedia.org/ontology/recipient> ?band .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
801,19,test,Give me the producer of Westside Story (song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
# Query for the producer of Westside Story (song)
SELECT ?producer WHERE {
  <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?producer .
}

UNION

# Query for a professional who is an alter ego of The Shadow
SELECT ?professional WHERE {
  ?alterEgo <http://www.w3.org/2000/01/rdf-schema#label> ""The Shadow""@en .
  ?alterEgo <http://dbpedia.org/ontology/profession> ?professional .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
994,44,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Step 1: Identify Donald Maynard Dokken as a musical artist
  ?person <http://dbpedia.org/ontology/birthName> ""Donald Maynard Dokken"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Step 2: Find band members of this person where the band is a band, group, and organization
  ?bandMember <http://dbpedia.org/property/memberOf> ?person .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/MusicalGroup>, <http://dbpedia.org/ontology/Organisation> .
  ?bandMember <http://dbpedia.org/property/memberOf> ?band .

  # Step 3: Find associated musical artists of these bands
  ?band <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .

  # Step 4: Specifically find the associated musical artist of Meshuggah and S.A. Slayer
  OPTIONAL { ?meshuggah <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist . FILTER(?meshuggah = <http://dbpedia.org/resource/Meshuggah>) }
  OPTIONAL { ?saSlayer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist . FILTER(?saSlayer = <http://dbpedia.org/resource/S.A._Slayer>) }

} ORDER BY ?bandMember
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
232,36,test,"Give me the child of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . },"```sparql
SELECT ?child WHERE {
  # Step 1: Find the native of France who is a politician and an office holder
  ?politician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?politician <http://dbpedia.org/ontology/officeHolder> ?office .

  # Step 2: Find their residence that is a settlement and British
  ?politician <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 3: Find the child of Jon Pertwee who is native to this residence
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/nationality> ?residence .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
404,64,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
SELECT ?child WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia's spouse
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Determine the father of that spouse
  ?spouse <http://dbpedia.org/ontology/father> ?father .

  # Step 3: Find the child of this father (which should be the spouse itself)
  ?father <http://dbpedia.org/ontology/child> ?child .

  # Additional conditions:
  # Verify that the spouse was born as royalty
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .
  
  # Ensure the spouse is also the parent of Prince Ernest Augustus of Hanover (born 1914)
  ?spouse <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,36,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/ontology/Actor> .
  ?movie <http://dbpedia.org/ontology/starring> ?person ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> ;
         <http://dbpedia.org/ontology/work> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?televisionShow <http://dbpedia.org/ontology/basedOn> ?movie ;
                   <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TVSeries> .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
9,55,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Step 1: Find the awardee of the Royal Medal with a nickname related to Queen's University Belfast
SELECT ?awardee WHERE {
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Royal_Medal> .
  ?awardee <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""queen's university belfast""))
}

# Step 2: Find the alma mater of this awardee
SELECT ?almaMater WHERE {
  ?awardee <http://dbpedia.org/ontology/alumniOf> ?almaMater .
}

# Step 3: Identify the mayor of Northern Ireland Forum who is a politician and find their alma mater
SELECT ?mayorAlmaMater WHERE {
  ?mayor <http://dbpedia.org/ontology/politicianFor> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  ?mayor <http://dbpedia.org/ontology/alumniOf> ?mayorAlmaMater .
}
```

Note: This query assumes that the relationships and entities are correctly represented in DBpedia. Adjustments may be necessary based on actual data availability.",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
328,40,test,Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?person WHERE {
  # Commander in Eastern Front (World War II)
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
  
  # Leader of People's Commissariat of Defense of the Soviet Union
  ?person <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> .

  # Awardee in Volcano and Ryukyu Islands campaign
  ?person <http://dbpedia.org/ontology/award> ?award .
  FILTER EXISTS {
    ?award <http://dbpedia.org/property/campaign> [
      <http://dbpedia.org/property/name> ""Volcano and Ryukyu Islands campaign""
    ] .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
626,16,test,"Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT DISTINCT ?awardee WHERE {
  # Step 1: Find the award associated with Aleksey Petrovich Yermolov
  <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/ontology/receivedAward> ?award .

  # Step 2: Find the awardee(s) of that specific award
  ?recipient <http://dbpedia.org/ontology/receivedAward> ?award .
  
  # Step 3: Determine the military conflicts commanded by Alexander I of Russia
  <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?conflict .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 4: Find overlap between awardees and those involved in the conflicts
  ?recipient = ?awardee .
}
```",4,5,5,2,2,3,2,20,0,0,21,0,0.0,0
465,8,test,"Give me the death place of Jiřina Štěpničková and administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for the death place of Jiřina Štěpničková
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}

# Query for the administration of the leader of Chamber of Deputies of the Czech Republic
SELECT DISTINCT ?administration WHERE {
  ?leader <http://dbpedia.org/property/memberOfParliament> <http://dbpedia.org/resource/Czech_Parliament>.
  ?leader <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Czech_Parliament>.
  ?leader <http://dbpedia.org/ontology/member> ?administration .
  ?administration <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .
  ?administration <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
488,65,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
SELECT DISTINCT ?deathPlace ?admin ?birthPlace WHERE {
  # Matsudaira Tadamasa's paternal lineage
  OPTIONAL {
    <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?father1 .
    ?father1 <http://dbpedia.org/ontology/officeHolder> ?officeHolder .
    ?officeHolder <http://dbpedia.org/ontology/father> ?grandFather .
    ?grandFather <http://dbpedia.org/ontology/politician> true .
    ?grandFather <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }

  # Emperor Go-Mizunoo's paternal lineage
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?emperorFather .
    ?emperorFather <http://dbpedia.org/ontology/administration> ?admin .
  }

  # Boshin War commander's birthplace
  OPTIONAL {
    <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",7,9,8,3,3,3,3,71,1,14,0,0.06666666666666667,1.0,0.125
488,68,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> ?v3 . },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Find Matsudaira Tadamasa's father
  ?matTadamasaFather a dbo:OfficeHolder ;
                     dbo:spouse ?matTadamasaMother .

  # Step 2: Find the death place of Matsudaira Tadamasa's grandfather
  ?matTadamasaGrandfather a dbo:Politician ;
                          dbo:child ?matTadamasaFather ;
                          dbo:deathPlace ?deathPlace .

  # Step 3: Identify Emperor Go-Mizunoo's father and his administration
  ?goMizunooFather a dbo:OfficeHolder ;
                   dbo:spouse ?goMizunooMother .
  
  # Step 4: Find the war involving Saitō Hajime
  ?war a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent ;
       dbo:commander ?saitoHajime .

  # Step 5: Determine the commander of this war
  ?commander dbo:battle ?war .

  # Step 6: Locate the birth place of this commander
  ?commander dbo:birthPlace ?birthPlace .
}
```",8,13,9,3,3,3,3,71,0,1,1,0.0,0.0,0
184,57,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Géza von Habsburg and parent of the child of Archduke Joseph Francis of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find the royal parent of Archduke Ladislaus Philipp of Austria
  ?parent <http://dbpedia.org/ontology/birthPlace> ?ladislaus .
  ?ladislaus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Ladislaus_Philipp_of_Austria> .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 2: Find the child of this royal parent
  ?child <http://dbpedia.org/ontology/birthPlace> ?parent .
  
  # Step 3: Find the grandchild (child of the child)
  ?grandchild <http://dbpedia.org/ontology/birthPlace> ?child .

  # Additional conditions for step 4:
  # Ensure this grandchild is a parent of Géza von Habsburg
  ?grandchild <http://dbpedia.org/ontology/spouse> ?geza .
  ?geza <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .

  # Ensure this grandchild is a parent of the child of Archduke Joseph Francis of Austria
  ?grandchild <http://dbpedia.org/ontology/spouse> ?josephChild .
  ?josephChild <http://dbpedia.org/ontology/birthPlace> ?josephFrancis .
  ?josephFrancis <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Joseph_Francis_of_Austria> .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
488,50,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Step 1: Find Matsudaira Tadamasa's father who is an office holder.
SELECT ?matsumatsudairaFather WHERE {
  <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?matsumatsudairaFather .
  ?matsumatsudairaFather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
}

# Step 2: Find Emperor Go-Mizunoo's father and his administration.
SELECT ?goMizunooFather WHERE {
  <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?goMizunooFather .
}

# Step 3: Find the common link through their fathers, focusing on the politician.
SELECT DISTINCT ?politician WHERE {
  # Matsudaira Tadamasa's father
  ?matsumatsudairaFather <http://dbpedia.org/ontology/father> ?commonAncestor .
  
  # Emperor Go-Mizunoo's father
  ?goMizunooFather <http://dbpedia.org/ontology/father> ?commonAncestor .

  # Ensure the common ancestor is a politician
  ?commonAncestor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  
  # Assign the common ancestor as the politician we are interested in
  BIND(?commonAncestor AS ?politician)
}

# Step 4: Find the death place of this identified politician.
SELECT ?deathPlace WHERE {
  ?politician <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,56,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of Giulio Andreotti and reference to the name of Italian People's Party (1994).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
# Step 1: Find the birth name of Romano Prodi
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2 & 3: Find a person with that birth name who is an office holder and politician, and their party
SELECT DISTINCT ?person ?party WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/ontology/memberOf> ?party .
  
  # Assuming we have the birth name from Step 1
  FILTER(?birthName = ""Romano Prodi"") 
}

# Step 4: Find the party of Giulio Andreotti
SELECT DISTINCT ?party WHERE {
  <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/memberOf> ?party .
}

# Step 5: Reference Italian People's Party (1994)
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> ?property ?reference .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
232,66,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v6 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?native WHERE {
  # Step 1: Find Sean Pertwee's claim to fame that includes a film and a military conflict.
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/claimToFame> ?fame .
  ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Film> , <http://dbpedia.org/ontology/MilitaryConflict>) .

  # Step 2: Find the actor associated with these claims who is also native to France and is both a politician and an office holder.
  ?actor <http://dbpedia.org/ontology/claimToFame> ?fame .
  ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Politician> , <http://dbpedia.org/ontology/OfficeHolder>) .

  # Step 3: Determine the person born as John Devon Roland Pertwee, who is the child of this actor.
  ?actor <http://dbpedia.org/ontology/spouse> ?parent .
  ?parent <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .

  # Step 4: Identify the residence of Sean Pertwee's claim to fame that is a settlement and British.
  ?fame <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Settlement> , <http://dbpedia.org/resource/United_Kingdom>) .

  # Step 5: Find the native of this residence.
  ?residence <http://dbpedia.org/ontology/native> ?native .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
378,64,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commanderClaimToFame WHERE {
  # Step 1: Find Carl Pontus Gahn's birth name entity
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://www.w3.org/2000/01/rdf-schema#label> ""Carl Pontus Gahn""@en .
  
  # Step 2: Identify wars involving Joaquín Blake and Thomas Trigge
  ?war1 <http://dbpedia.org/ontology/battleOf> ?joaquinBlakeWar ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?warType .
  
  ?war2 <http://dbpedia.org/ontology/battleOf> ?thomasTriggeWar ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?warType .

  # Step 3: Filter wars that are military conflicts, societal events, and general events
  FILTER(?warType = <http://dbpedia.org/ontology/MilitaryConflict> &&
         ?warType = <http://dbpedia.org/ontology/SocietalEvent> &&
         ?warType = <http://dbpedia.org/ontology/Event>)
  
  # Step 4: Find the commander in this war
  ?war1 <http://dbpedia.org/ontology/commander> ?commander .
  
  # Step 5: Retrieve the claim to fame of that commander
  ?commander <http://dbpedia.org/property/claimToFame> ?commanderClaimToFame .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
9,48,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of Queen's University Belfast.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?almaMater WHERE {
  # Step 1: Identify the organization in Belfast
  ?organization <http://www.w3.org/2000/01/rdf-schema#label> ""Belfast""@en .
  ?organization <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Belfast""@en .

  # Step 2: Find the mayor of this organization
  ?mayor <http://dbpedia.org/ontology/mayor> ?organization .
  ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 3: Get the alma mater of this mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Additional step to find the nickname of Queen's University Belfast
  OPTIONAL {
    <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/property/nickname> ?nickname .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
528,54,test,Give me the war of the military force of Battle of Pisagua and war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . }","```sparql
# Part 1: War of the military force of Battle of Pisagua
SELECT ?force ?war WHERE {
  <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?war)
}

UNION

# Part 2: War of the commander in the work of --01-09
SELECT ?commander ?workWar WHERE {
  ?work <http://purl.org/dc/terms/date> ""--01-09"" ;
        <http://dbpedia.org/ontology/creator> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?workWar)
}

UNION

# Part 3: War of the force of Narciso Campero
SELECT ?force ?war WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?war)
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
161,46,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
# Query for Francisco Largo Caballero
SELECT ?militaryForce1 WHERE {
  ?force <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?force <http://dbpedia.org/property/militaryForce> ?militaryForce1 .
}

UNION

# Query for the person decedent at Francoist Spain
SELECT ?militaryForce2 WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> .
  ?force <http://dbpedia.org/ontology/person> ?person .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?force <http://dbpedia.org/property/militaryForce> ?militaryForce2 .
}
```",5,10,6,3,2,3,3,71,0,0,514,0,0.0,0
184,25,test,Give me the child of Archduke Joseph August of Austria and parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
SELECT ?childOfJosephAugust ?parent WHERE {
  # Step 1: Find children of Archduke Joseph August of Austria
  <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?childOfJosephAugust .
  
  # Step 2: For each child, find their parents and check if they are a child of Archduke Joseph Francis
  ?childOfJosephAugust <http://dbpedia.org/ontology/parent> ?parent .
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
}
```",3,3,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
659,67,test,"Give me the commander in German campaign of 1813 and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commander ?militaryForce WHERE {
  # Step 1: Find the commander in the German campaign of 1813
  <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?commander .

  # Step 2: Identify a military force associated with this commander that is a societal event, an event, and a military conflict
  ?commander <http://dbpedia.org/property/militaryForce> ?militaryForce .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 3: Check for reference to Rutger Jan Schimmelpenninck
  OPTIONAL { ?militaryForce <http://dbpedia.org/property/referenceTo> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> }

  # Step 4: Identify the war involving 'Polish Horse'
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?polishHorse <http://dbpedia.org/property/knowAs> ""Polish Horse"" .
  ?war <http://dbpedia.org/ontology/commander> ?polishHorse .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Ensure the commander from Step 1 is also a commander in this war
  FILTER(?commander = ?polishHorse)
}
```",7,14,8,3,3,3,3,71,0,0,7,0,0.0,0
16,57,test,Give me the spouse of Ted McGinley and person born as the birth name of Gigi Rice and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
# Part 1: Find spouse of Ted McGinley
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}

UNION

# Part 2: Find person born as the birth name of Gigi Rice
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?birthName .
  ?person <http://dbpedia.org/property/birthName> ?birthName .
}

UNION

# Part 3: Find professional in the profession of the actor of Unnatural (TV series)
SELECT ?professional WHERE {
  ?actor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Unnatural_(TV_series)> ;
         <http://dbpedia.org/ontology/profession> ?profession .
  ?professional <http://dbpedia.org/ontology/profession> ?profession .
}

# Combine results to find common entities
SELECT DISTINCT ?entity WHERE {
  VALUES ?entity { 
    # Results from Part 1
    (SELECT ?spouse WHERE {
      <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
    }) 

    # Results from Part 2
    (SELECT ?person WHERE {
      <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?birthName .
      ?person <http://dbpedia.org/property/birthName> ?birthName .
    }) 

    # Results from Part 3
    (SELECT ?professional WHERE {
      ?actor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Unnatural_(TV_series)> ;
             <http://dbpedia.org/ontology/profession> ?profession .
      ?professional <http://dbpedia.org/ontology/profession> ?profession .
    })
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
492,56,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in Franco-Hova Wars.","SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Step 1: Identify the capital of Khemis Miliana District
SELECT ?capital WHERE {
  <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/administrativeCapital> ?capital .
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}

# Step 2: Find person decedent at this capital
SELECT DISTINCT ?decedent WHERE {
  ?deathEvent <http://dbpedia.org/property/deathPlace> ?capital .
  ?deathEvent <http://dbpedia.org/property/deceased> ?decedent .
  
  # Assuming we have identified the capital from Step 1
}

# Step 3: Identify the work of Joseph C. Satterthwaite
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/work> ?work .
}

# Step 4: Find person decedent at this work
SELECT DISTINCT ?decedent WHERE {
  ?deathEvent <http://dbpedia.org/property/deathPlace> ?work .
  ?deathEvent <http://dbpedia.org/property/deceased> ?decedent .
  
  # Assuming we have identified the work from Step 3
}

# Step 5: Identify commander in Franco-Hova Wars
SELECT DISTINCT ?commander WHERE {
  ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Franco-Hova_Wars> .
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 6: Combine results to find the intersection
SELECT DISTINCT ?person WHERE {
  # Person decedent at the capital
  ?deathEvent1 <http://dbpedia.org/property/deathPlace> ?capital .
  ?deathEvent1 <http://dbpedia.org/property/deceased> ?person .

  # Person decedent at Satterthwaite's work
  ?deathEvent2 <http://dbpedia.org/property/deathPlace> ?work .
  ?deathEvent2 <http://dbpedia.org/property/deceased> ?person .

  # Commander in Franco-Hova Wars
  ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Franco-Hova_Wars> .
  ?battle <http://dbpedia.org/ontology/commander> ?person .

  # Assuming we have identified the capital and work from previous steps
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,18,test,"Give me the landmark at elevation of the award of Nie Rongzhen and birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
# Step 1: Find Nie Rongzhen's Award
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/ontology/receivedAward> ?award .
}

# Assuming we have the award, find its location and elevation (hypothetical step)
SELECT ?location ?elevation WHERE {
  ?award <http://dbpedia.org/property/location> ?location .
  ?location <http://dbpedia.org/ontology/elevation> ?elevation .
}

# Step 2: Identify The Boils' Member and Their Birthplace
SELECT ?member ?birthPlace WHERE {
  ?band <http://dbpedia.org/ontology/member> ?member ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  FILTER(?band = <http://dbpedia.org/resource/The_Boils>)
  
  ?member <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
                <http://dbpedia.org/ontology/member> ?member .
  FILTER(?organisation = ?band)
}

# Step 3: Find Landmark at Elevation
SELECT ?landmark WHERE {
  ?landmark <http://dbpedia.org/ontology/elevation> ?elevation .
  FILTER(?elevation = ?elevationFromAward) # Use the elevation found in step 2
}
```

Note: This query assumes certain properties and relationships exist, which may need adjustment based on actual DBpedia data. The steps are hypothetical and depend on the availability of specific data points.",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
328,49,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
SELECT ?finalLeader WHERE {
  # Step 1: Find the leader of Gustav Jonson who is an office holder and a politician.
  <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/leader> ?gustavLeader .
  ?gustavLeader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
                <http://dbpedia.org/ontology/politician> ?politician .

  # Step 2: Determine the award received by Bruce Fraser, 1st Baron Fraser of North Cape.
  <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/award> ?fraserAward .

  # Step 3: Find the awardee of that specific award.
  ?awardee <http://dbpedia.org/ontology/award> ?fraserAward .

  # Step 4: Locate the government agency led by this awardee.
  ?awardee <http://dbpedia.org/ontology/leader> ?agencyLeader .
  ?agencyLeader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .

  # Step 5: Identify the leader of that office.
  ?office <http://dbpedia.org/ontology/leader> ?agencyLeader .
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .

  ?finalLeader <http://dbpedia.org/ontology/leader> ?office .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
778,20,test,"Give me the entity in the award of the awardee, that is American, of Wolf Prize in Medicine and author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v5 <http://dbpedia.org/property/author> ?v4 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v5 <http://dbpedia.org/ontology/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
SELECT ?entity WHERE {
  # Step 1: Identify the author of ""Pushd"" and ""Popd""
  <http://dbpedia.org/resource/Ken_Thompson> <http://purl.org/dc/terms/creator> ?work .
  
  # Step 2: Find works by Ken Thompson that are software
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software> .

  # Step 3: Identify recipients of the Wolf Prize in Medicine
  ?recipient <http://dbpedia.org/property/prize> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> .
  
  # Step 4: Filter for American awardees among them
  ?recipient <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  FILTER(CONTAINS(LCASE(?name), ""american""))

  # Step 5: Retrieve entities related to their awards
  ?award <http://dbpedia.org/property/prize> ?entity .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
427,65,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v6 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
# Part 1: Party of the father of an alumnus from MIT
SELECT ?fatherParty WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?alumnus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?alumnus <http://dbpedia.org/property/father> ?father .
  ?father <http://dbpedia.org/ontology/politicalParty> ?fatherParty .
}

UNION

# Part 2: Party of Romano Antonio Prodi
SELECT ?party WHERE {
  ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
         <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi"" .
  ?prodi <http://dbpedia.org/ontology/politicalParty> ?party .
}

UNION

# Part 3: Reference to the name of Italian People's Party (1994)
SELECT ?name WHERE {
  ?party <http://www.w3.org/2000/01/rdf-schema#label> ""Italian People's Party (1994)""@en ;
         <http://dbpedia.org/ontology/name> ?name .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
161,53,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of Spanish Civil War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?event <http://dbpedia.org/ontology/commander> ?commander .
  ?event <http://dbpedia.org/property/person> <http://dbpedia.org/resource/Emilio_Mola> .
  
  ?force <http://dbpedia.org/ontology/event> ?event .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  ?decedent <http://dbpedia.org/property/deceasedAtLocation> <http://dbpedia.org/resource/Francoist_Spain> .
  ?civilWar <http://dbpedia.org/ontology/militaryForce> ?force .
  ?civilWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Spanish_Civil_War> .
  ?decedent <http://dbpedia.org/property/deceasedAtLocation> ?civilWar .
}
```",6,10,7,3,3,3,3,71,0,0,32,0,0.0,0
645,20,test,"Give me the alma mater of the child of the parent of Adela Pankhurst and entity in the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?almaMater WHERE {
  # Step 1: Identify Adela Pankhurst's parent
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Adela_Pankhurst> .
  
  # Step 2: Find the child of that parent
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .

  # Step 3: Determine the commander in Battle of Diamond Rock
  <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?commander .
  
  # Step 4: Identify the residence country of the commander
  ?commander <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 5: Find the alma mater of the child that matches the country
  ?child <http://dbpedia.org/ontology/almaMater> ?almaMater .
  FILTER(?residence = ?almaMater)
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
182,25,test,Give me the war of the work of Gotabhaya Rajapaksa and war of the author of 2019 Sri Lanka Easter bombings and entity in Sri Lanka.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v3 . },"```sparql
SELECT DISTINCT ?war WHERE {
  # Part 1: Wars related to works of Gotabhaya Rajapaksa
  { 
    ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> .
    ?work <http://dbpedia.org/ontology/war> ?war .
  }
  
  UNION
  
  # Part 2: Wars related to the author of ""2019 Sri Lanka Easter bombings""
  { 
    <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/ontology/author> ?author .
    ?author <http://dbpedia.org/ontology/war> ?war .
  }
  
  UNION
  
  # Part 3: Wars related to entities in Sri Lanka
  { 
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""sri lanka""))
    ?entity <http://dbpedia.org/ontology/war> ?war .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
16,26,test,Give me the professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT DISTINCT ?professional WHERE {
  # Step 1: Get the actors of Unnatural (TV series)
  <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/starring> ?actor .
  
  # Step 2: Determine their professions
  ?actor <http://dbpedia.org/ontology/profession> ?profession .

  # Step 3: Find other professionals in the same profession
  ?professional <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(?actor != ?professional) # Exclude the original actor from results
}
```",3,3,4,3,1,3,3,71,0,0,40872,0,0.0,0
184,44,test,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the child of Archduke Joseph Francis of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
# Step 1: Find the child of Archduke Joseph Karl of Austria
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Find the grandchild (child of the child) of Archduke Joseph Karl
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?intermediateChild .
  ?intermediateChild <http://dbpedia.org/ontology/child> ?grandchild .
}

# Step 3: Find the parent of the child of Archduke Joseph Francis of Austria
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?parent <http://dbpedia.org/ontology/child> ?child .
}

# Step 4: Find the parent of Géza von Habsburg
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/child> ?child .
  ?parent <http://dbpedia.org/ontology/child> ?child .
}

# Step 5: Find the common entity that satisfies both conditions from steps 3 and 4
SELECT DISTINCT ?commonEntity WHERE {
  { 
    ?child <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?child .
    ?parent <http://dbpedia.org/ontology/child> ?child .
  }
  UNION
  {
    <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/child> ?child2 .
    ?parent2 <http://dbpedia.org/ontology/child> ?child2 .
  }
  FILTER (?parent = ?parent2)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
838,16,test,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
SELECT ?band WHERE {
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/YU_Grupa> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?member <http://www.w3.org/2002/07/owl#sameAs> ?artist .
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?member <http://dbpedia.org/ontology/member> ?band .
  ?band <http://www.w3.org/2002/07/owl#sameAs> ?group .
  ?group <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
}
```",4,7,5,2,2,3,2,20,0,0,5,0,0.0,0
427,45,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of Giulio Andreotti and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
# Step 1: Find Romano Prodi's birth name
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Find individuals with the same birth name, who are office holders and politicians
SELECT DISTINCT ?person ?party WHERE {
  # Assuming we have found Romano Prodi's birth name as ""Romano Giuseppe Benito Prodi""
  ?person <http://dbpedia.org/ontology/birthName> ""Romano Giuseppe Benito Prodi"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/ontology/memberOf> ?party .

  # Step 4: Find Giulio Andreotti's party
  OPTIONAL {
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/memberOf> ?andreottiParty .
  }

  # Step 5: Ensure reference to Partito Popolare Italiano
  FILTER EXISTS { 
    ?party <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Partito_Popolare_Italiano> .
  }
}

```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
994,54,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of Don Dokken.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find associated musical artists of Watchtower
  ?watchtowerArtist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Watchtower_(band)> .

  # Step 2: Identify band members who are part of a band, group, and organization
  ?member <http://dbpedia.org/ontology/member> ?band .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/Group>, <http://dbpedia.org/ontology/Organization> .

  # Step 3: Ensure the band has Fredrik Thordendal and Don Dokken as members
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Don_Dokken> .

  # Step 4: Find associated musical artist of the identified band member
  ?memberArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?member .

  # Final step: Find associated musical artist of the previous results
  ?finalArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
  ?finalArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?memberArtist .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
92,48,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
# Part 1: Get the artist related to Nevermore (2006 film)
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Nevermore_(2006_film)> ?p ?reference .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?reference ?artistProperty ?artist .
}

# Part 2: Get the band member of this artist
SELECT DISTINCT ?bandMember WHERE {
  VALUES ?artist { ?artist } # Use the result from Part 1 here
  ?artist <http://dbpedia.org/ontology/memberOf> ?band .
  ?band <http://dbpedia.org/ontology/member> ?bandMember .
}

# Part 3: Get the band associated with Joseph Michael Furney
SELECT DISTINCT ?band WHERE {
  <http://dbpedia.org/resource/Joseph_Michael_Furney> <http://dbpedia.org/ontology/band> ?band .
}

# Combine results to find common band members
SELECT DISTINCT ?bandMember WHERE {
  VALUES ?artist { ?artist } # Use the result from Part 1 here
  ?artist <http://dbpedia.org/ontology/memberOf> ?band .
  ?band <http://dbpedia.org/ontology/member> ?bandMember .

  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_Michael_Furney> <http://dbpedia.org/ontology/band> ?furneyBand .
    ?furneyBand <http://dbpedia.org/ontology/member> ?bandMember .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,70,test,"Give me the parent of the child of the child of Seti I and spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Nefertari.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
# Step 1: Find Seti I's child
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Seti_I> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Find the grandchild of Seti I
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
}

# Step 3: Identify the commander in Battle of Perire and their father
SELECT ?commanderFather WHERE {
  <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/father> ?commanderFather .
}

# Step 4: Determine the spouse of the commander's father
SELECT ?spouse WHERE {
  ?commanderFather <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 5: Find Nefertari's child and their parent
SELECT ?nefertariChildParent WHERE {
  <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?nefertariChild .
  ?nefertariChild <http://dbpedia.org/ontology/parent> ?nefertariChildParent .
}

# Step 6: Find the common entity
SELECT ?result WHERE {
  ?grandchild <http://dbpedia.org/ontology/parent> ?result .
  FILTER(?result = ?spouse)
}
```

Note: This query is conceptual and may require adjustments based on actual data availability in DBpedia. Some relationships might not be directly available, necessitating additional assumptions or external information.",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
281,45,test,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT DISTINCT ?entity ?war WHERE {
  # Step 1: Find a professional who is an office holder and politician in the New Zealand Army
  ?professional <http://dbpedia.org/ontology/profession> ?militaryUnit .
  ?professional <http://dbpedia.org/ontology/officeHolder> ?office .
  ?professional <http://dbpedia.org/ontology/politician> ?politician .
  ?militaryUnit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .

  # Step 2: Find wars involving this military unit in the Colony of New Zealand
  ?militaryUnit <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://dbpedia.org/property/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Colony of New Zealand"" .

  # Step 3: Find wars related to Beauchamp Seymour, 1st Baron Alcester
  OPTIONAL {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?war .
  }
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
712,19,test,Give me the capital of the country of Armed Forces of South Russia and resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?capital ?restingPlace WHERE {
  # Part 1: Capital of the country associated with Armed Forces of South Russia
  <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?country .
  ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital .

  # Part 2: Resting place of the awardee from a Soviet Union show
  ?show <http://dbpedia.org/ontology/show> ?awardee .
  FILTER(CONTAINS(LCASE(?show), ""soviet union""))
  ?awardee <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
959,56,test,"Give me the native of Japan and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
SELECT ?native WHERE {
  # Step 1: Find the manager of the 1998 Kashima Antlers season who is a sports manager.
  <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?manager .
  ?manager <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/ontology/SportsManager> .

  # Step 2: Determine the team managed by this person.
  ?team <http://dbpedia.org/ontology/manager> ?manager .
  
  # Step 3: Find the native of Japan who manages that team.
  ?native <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/ontology/NaturalPerson> ;
          <http://dbpedia.org/property/nationality> ""Japan""^^<http://www.w3.org/2001/XMLSchema#string> ;
          <http://dbpedia.org/ontology/manager> ?team .

  # Step 4: Identify the alma mater of Eiji Ōtsuka.
  <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/property/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type ;
             <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> .

  # Ensure alma mater is a Japanese organization, university, and educational institution.
  FILTER (?type = <http://dbpedia.org/ontology/Organization> &&
          ?type = <http://dbpedia.org/ontology/University> &&
          ?type = <http://dbpedia.org/ontology/EducationalOrganization>)

  # Step 5: Check if the manager is a member of this alma mater.
  ?native <http://dbpedia.org/property/almaMater> ?almaMater .
}
```",6,11,7,3,3,3,3,71,0,0,2,0,0.0,0
404,61,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of the spouse of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
# Step 1: Find Princess Victoria Louise of Prussia's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 2: Find the father of that spouse
SELECT ?father WHERE {
  ?spouse <http://dbpedia.org/property/father> ?father .
}

# Step 3 & 4: Determine and filter for royalty among children of that father
SELECT ?royalChild WHERE {
  ?father <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 5: Identify the parent of each royal child
SELECT ?parent WHERE {
  ?royalChild <http://dbpedia.org/ontology/birthParent> ?parent .
}

# Steps 6 & 7: Find and filter for royalty among children of Prince George William of Hanover
SELECT ?royalHanoverChild WHERE {
  <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/child> ?hanoverChild .
  ?hanoverChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 8: Identify the parent of each royal child from Prince George William
SELECT ?parentHanover WHERE {
  ?royalHanoverChild <http://dbpedia.org/ontology/birthParent> ?parentHanover .
}

# Step 9: Find the parent of the identified parents from steps 5 and 8
SELECT DISTINCT ?finalParent WHERE {
  { ?parent <http://dbpedia.org/ontology/birthParent> ?finalParent . }
  UNION
  { ?parentHanover <http://dbpedia.org/ontology/birthParent> ?finalParent . }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
294,27,test,"Give me the entity in the birth place, that is a settlement, of Marion James and resting place of the architect of P. D. Houston Jr. House and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?result <http://dbpedia.org/ontology/location> ?v0 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Step 1: Find the birthplace of Marion James that is a settlement.
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}

# Step 2: Find the resting place of the architect of P.D. Houston Jr. House.
SELECT ?restingPlaceArchitect WHERE {
  ?architect <http://dbpedia.org/property/architectOf> <http://dbpedia.org/resource/P._D._Houston_Jr._House> .
  ?architect <http://dbpedia.org/ontology/deathPlace> ?restingPlaceArchitect .
}

# Step 3: Find the resting place of Luke Lea (American politician, born 1879).
SELECT ?restingPlaceLukeLea WHERE {
  <http://dbpedia.org/resource/Luke_Lea_(politician)> <http://dbpedia.org/ontology/deathPlace> ?restingPlaceLukeLea .
}

# Step 4: Find the common entity among these locations.
SELECT DISTINCT ?entity WHERE {
  VALUES ?birthPlace { ?birthPlace }
  VALUES ?restingPlaceArchitect { ?restingPlaceArchitect }
  VALUES ?restingPlaceLukeLea { ?restingPlaceLukeLea }

  FILTER (?birthPlace = ?restingPlaceArchitect)
  FILTER (?birthPlace = ?restingPlaceLukeLea)

  BIND(?birthPlace AS ?entity)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
92,69,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Find Jim Sheppard who is an artist
  ?jimSheppard <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
  ?jimSheppard <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Step 2: Find the band associated with Jim Sheppard
  ?band1 <http://dbpedia.org/property/member> ?jimSheppard .
  
  # Step 3: Find reference to Nevermore related to the 2006 film
  ?film <http://dbpedia.org/ontology/name> ""Nevermore (2006 film)"" .
  ?reference <http://dbpedia.org/ontology/reference> ?film .

  # Step 4: Identify band associated with Joseph Michael using his birth name
  ?josephMichael <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
  ?band2 <http://dbpedia.org/property/member> ?josephMichael .

  # Step 5: Find the musical artist associated with both bands
  ?associatedArtist <http://dbpedia.org/property/member> ?band1 ;
                     <http://dbpedia.org/property/member> ?band2 .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
701,57,test,Give me the spouse of the father of Merneptah and parent of the child of the child of Seti I and parent of Meritamen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Meritamen> .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
281,68,test,"Give me the war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v7 . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT DISTINCT ?war1, ?war2 WHERE {
  # Step 1: Find the leader of the 1962 NSW election who is a politician
  <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/ontology/leader> ?leader .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 2: Find the birthplace of this leader that is a country
  ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 3: Find the profession of Heather Roy that is a military unit
  <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .

  # Step 4: Find the award received by Jonathon Band and associated wars
  <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/ontology/award> ?award .
  ?award <http://dbpedia.org/ontology/awardee> ?awardee .

  # Step 5: Find wars associated with the leader's birthplace and Heather Roy's profession
  OPTIONAL { ?awardee <http://dbpedia.org/ontology/battle> ?war1 . 
             ?war1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> }
  
  OPTIONAL { ?profession <http://dbpedia.org/ontology/battle> ?war2 .
             ?war2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
161,31,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
SELECT ?militaryForce WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> .
  ?person <http://dbpedia.org/property/militaryForce> ?spanishCivilWarForce .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?event <http://dbpedia.org/property/decedent> ?person .
  ?militaryForce <http://dbpedia.org/property/militaryForce> ?spanishCivilWarForce .
}
```",4,7,5,3,2,3,3,71,0,0,514,0,0.0,0
820,19,test,Give me the child of the parent of the professional in Actor and professional in the award of Scott McCloud.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v4 <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . }","```sparql
SELECT ?child WHERE {
  # Step 1: Find Scott McCloud's award
  <http://dbpedia.org/resource/Scott_McCloud> <http://purl.org/dc/terms/relation> ?award .

  # Step 2: Find the professional role associated with that award
  ?award <http://dbpedia.org/ontology/profession> ?professional .
  FILTER(?professional = <http://dbpedia.org/resource/Actor>) .

  # Step 3: Determine the parent of this professional role
  ?professional <http://www.w3.org/2000/01/rdf-schema#subClassOf> ?parent .

  # Step 4: Find the child of this parent entity
  ?parent <http://dbpedia.org/ontology/subclass> ?child .
}
```",5,5,6,3,2,3,2,20,0,0,128,0,0.0,0
161,68,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Find the decedent at Francoist Spain
SELECT ?decedent WHERE {
  ?event <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Francoist_Spain> .
  ?event <http://dbpedia.org/ontology/decedent> ?decedent .
}

# Step 2: Find the military force associated with this decedent
SELECT ?force WHERE {
  ?decedent <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 3: Find the predecessor of Indalecio Prieto
SELECT ?predecessor WHERE {
  <http://dbpedia.org/resource/Indalecio_Prieto> <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Step 4: Find the military force associated with this predecessor
SELECT ?force WHERE {
  ?predecessor <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 5: Find Emilio Mola's commander role in a force that is an event
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Emilio_Mola> <http://dbpedia.org/ontology/commander> ?commanderRole .
  ?commanderRole <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
16,50,test,Give me the professional in the profession of the actor of Unnatural (TV series) and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
# Step 1: Find the actor from ""Unnatural""
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 2: Determine the profession of that actor
SELECT ?profession WHERE {
  ?actor <http://dbpedia.org/ontology/profession> ?profession .
}

# Step 3: Find the person born with the birth name ""Gigi Rice""
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Gigi Rice"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
}

# Step 4: Identify the professional in the same profession
SELECT DISTINCT ?professional WHERE {
  # Assuming we have found ?actor and ?profession from previous steps
  ?person <http://dbpedia.org/ontology/profession> ?sameProfession .
  FILTER(?sameProfession = ?profession)
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
}
```

Note: This query assumes that the SPARQL engine can handle multiple queries in sequence or that intermediate results are stored and used for subsequent queries. In practice, you might need to execute these steps separately and combine the results programmatically.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
54,22,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?predecessor WHERE {
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?role <http://dbpedia.org/ontology/heldBy> ?person .
  ?role <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
492,50,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?commander WHERE {
  # Step 1: Find the commander of the Battle of Verdun
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?verdunCommander .

  # Step 2: Find wars (military conflicts and events) involving this commander
  ?verdunCommander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?warType .
  
  FILTER (
    (?warType = <http://dbpedia.org/ontology/MilitaryConflict> || 
     ?warType = <http://dbpedia.org/ontology/Event>)
  )

  # Step 3: Find a person who is a decedent at the capital of Algeria (Algiers)
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
  
  # Step 4: Identify commanders from step 2 who are linked to this person
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  ?person <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?commander .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
488,67,test,"Give me the birth place of Enomoto Takeaki and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . },"```sparql
# Step 1: Birth Place of Enomoto Takeaki
SELECT ?enomotoBirthPlace WHERE {
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?enomotoBirthPlace .
}

# Step 2: Administration of the Father of the Spouse, that is Royalty, of Tokugawa Masako
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/father> ?royalFather .
  ?royalFather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?royalFather <http://dbpedia.org/ontology/administration> ?administration .
}

# Step 3: Death Place of the Father, that is a Politician, of the Father, that is an Office Holder, of Matsudaira Tadamasa
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?officeHolderFather .
  ?officeHolderFather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?officeHolderFather <http://dbpedia.org/ontology/father> ?politicianGrandfather .
  ?politicianGrandfather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?politicianGrandfather <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
184,59,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
SELECT ?grandchild WHERE {
  # Step 1: Identify the royal parent of Archduke Ladislaus Philipp
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ladislaus_Philipp_of_Austria> .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of that royal parent
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
  
  # Step 3: Identify the grandchild (child of the child)
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .

  # Step 4: Find a settlement at elevation 96.0 and its landmark
  ?settlement <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?landmark <http://dbpedia.org/ontology/location> ?settlement .

  # Step 5: Determine the native of this landmark and their parent
  ?native <http://dbpedia.org/ontology/birthPlace> ?landmark .
  ?parentOfNative <http://dbpedia.org/ontology/spouse> ?native .

  # Step 6: Connect these relationships
  FILTER(?grandchild = ?parentOfNative)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
617,57,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus dbpedia-owl:succesor ?successor .
  
  # Step 2: Find successor who is royalty
  ?successor a dbo:Royalty .

  # Step 3: Determine children of this successor
  ?successor dbpedia-owl:child ?child .

  # Step 4: From these children, find their spouses
  ?child dbpedia-owl:spouse ?spouse .

  # Additional steps to satisfy the query conditions:
  
  # Step 5: Identify child of Antiochus (son of Antiochus III the Great)
  ?antiochus dbpedia-owl:child ?antiochusChild .
  
  # Step 6: Identify parent of this child, which should be Antiochus
  ?antiochusChild dbpedia-owl:parent ?antiochus .

  # Step 7: List the child of Antiochus III the Great
  ?antiochus dbpedia-owl:childOf <http://dbpedia.org/resource/Antiochus_III_the_Great> .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
16,59,test,Give me the spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Get Ted McGinley's birth name
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 2: Find a person born with that same birth name
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  FILTER(CONTAINS(LCASE(?name), LCASE(STR(?birthName)))) .
  
  # Step 3: Get the profession of an actor from ""Unnatural""
  <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://purl.org/dc/terms/profession> ?profession .

  # Step 4: Find a person professional in that identified profession
  ?professional <http://purl.org/dc/terms/profession> ?profession .

  # Step 5: Get the spouse of this person
  ?professional <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
994,53,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify Donald Maynard Dokken as a musical artist
  ?dokken <http://dbpedia.org/ontology/birthName> ""Donald Maynard Dokken"" .
  ?dokken <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Step 2: Find band members associated with Donald Maynard Dokken
  ?bandMember <http://dbpedia.org/property/associatedBandMember> ?dokken .
  
  # Step 3: Determine the associated musical artists of Red Tide (band)
  ?redTide <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> ;
           rdfs:label ""Red Tide (band)""@en .
  
  ?associatedArtist1 <http://dbpedia.org/property/associatedMusicalArtist> ?redTide .

  # Step 4: Find the reference to Watchtower and its associated musical artists
  ?watchtower <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> ;
              rdfs:label ""Watchtower""@en .
  
  ?associatedArtist2 <http://dbpedia.org/property/associatedMusicalArtist> ?watchtower .

  # Step 5: Identify any overlap or connection
  FILTER (?bandMember = ?associatedArtist1 || ?bandMember = ?associatedArtist2)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
92,56,test,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find members of Nevermore
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Nevermore_(band)> .
  
  # Step 2: Find associated musical artists of Jim Sheppard
  OPTIONAL { 
    ?sheppard <http://dbpedia.org/ontology/musicalArtist> ?associatedBand ;
              <http://www.w3.org/2000/01/rdf-schema#label> ""Jim Sheppard""@en .
  }
  
  # Step 3: Find the band of Joseph Michael
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" ;
            <http://dbpedia.org/ontology/member> ?band .
  }

  # Combine results to find common entities
  FILTER(?member = ?sheppard && ?member = ?person)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,19,test,Give me the birth place of the member of Dropkick Murphys and landmark at elevation of the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Find the commander in the Battle of Chishui River
  <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?commander .

  # Step 2: Determine awards received by that commander
  ?commander <http://dbpedia.org/property/award> ?award .

  # Step 3: Find landmarks associated with those awards at a specific elevation
  ?award <http://dbpedia.org/ontology/location> ?landmark .
  ?landmark <http://dbpedia.org/ontology/elevation> ?elevation .
  
  FILTER(?elevation > ""1000""^^xsd:integer) # Assuming we are interested in landmarks above 1000 meters

  # Step 4: Identify members of Dropkick Murphys and their birthplaces
  ?member <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Dropkick_Murphys> .
  ?member <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
345,17,test,"Give me the figure known as Stolz von Liechtenstein and team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v3 . }","```sparql
SELECT ?person ?team WHERE {
  # Step 1: Get Eiður Guðjohnsen's birth date
  <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?birthDate .

  # Step 2: Find persons born on that date who are both soccer players and managers
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  FILTER(CONTAINS(LCASE(?name), ""soccer player"") && CONTAINS(LCASE(?name), ""soccer manager""))

  # Step 3: Find the team associated with each person
  OPTIONAL { ?person <http://dbpedia.org/ontology/team> ?team . }

  # Step 4: Identify Stolz von Liechtenstein (assuming we have a way to match this name)
  FILTER(CONTAINS(LCASE(?name), ""stolz von liechtenstein""))
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
64,9,test,"Give me the entity in the region, that is a country, of Central European Time and alma mater of the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
SELECT ?almaMater WHERE {
  # Step 1: Find countries in Central European Time
  ?country <http://www.w3.org/2006/time#during> [
    a <http://dbpedia.org/ontology/Timezone>;
    <http://www.w3.org/2006/time#hasTimeZoneName> ""Central European Time""
  ].

  # Step 2: Find writers who died at Sremska Kamenica
  ?writer <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica>;
          a <http://dbpedia.org/ontology/Writer>.

  # Step 3: Get the alma mater of this writer
  ?writer <http://dbpedia.org/ontology/almaMater> ?almaMater.

  # Step 4: Ensure the almaMater is in one of the CET countries
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country.
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
9,34,test,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?figure WHERE {
  ?organization <http://www.w3.org/2000/01/rdf-schema#label> ""Belfast"" ;
                 a <http://dbpedia.org/ontology/Organisation> .
  
  ?mayor <http://dbpedia.org/ontology/mayorOf> ?organization ;
         a <http://dbpedia.org/ontology/Politician> .

  ?university <http://dbpedia.org/ontology/almaMater> ?mayor ;
               <http://www.w3.org/2000/01/rdf-schema#label> ""Queen's University Belfast"" .
  
  ?figure <http://dbpedia.org/ontology/alumniOf> ?university ;
          <http://www.w3.org/2000/01/rdf-schema#label> ""QUB""@en .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
701,37,test,Give me the parent of the child of the child of Seti I and spouse of Ramesses II.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find Seti I's child
  ?childSetiI <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Seti_I> .
  
  # Step 2: Find the grandchild of Seti I (child of Seti I's child)
  ?grandChild <http://dbpedia.org/ontology/father> ?childSetiI .
  
  # Step 3: Identify who is both a child of this grandchild and spouse of Ramesses II
  ?spouseRamessesII <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> .
  ?spouseRamessesII <http://dbpedia.org/ontology/father> ?grandChild .

  # Step 4: Find the parent of this individual
  ?parent <http://dbpedia.org/ontology/spouse> ?spouseRamessesII .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
356,17,test,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960) and player in 2015 Sacramento Republic FC season.","SELECT ?result WHERE { <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v3 . }","```sparql
SELECT ?team WHERE {
  # Step 1: Find Gary Williams' birthplace that is English and a settlement.
  <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> ;
              <http://dbpedia.org/property/country> <http://dbpedia.org/resource/England> .

  # Step 2: Find individuals native to this place who are both soccer players and managers.
  ?person <http://dbpedia.org/ontology/nationality> ?birthPlace .
  ?person <http://dbpedia.org/ontology/profession> ?profession1 ;
          <http://dbpedia.org/ontology/profession> ?profession2 .
  FILTER (?profession1 = <http://dbpedia.org/resource/Soccer_player>)
  FILTER (?profession2 = <http://dbpedia.org/resource/Soccer_manager>)

  # Step 3: Find the team they played for in the 2015 Sacramento Republic FC season.
  ?person <http://dbpedia.org/ontology/team> ?team .
  ?team <http://dbpedia.org/property/season> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
161,38,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
SELECT ?force WHERE {
  ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  ?force <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?militaryForce <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .

  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",4,7,5,2,2,3,3,71,0,0,32,0,0.0,0
994,70,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?commonBandMember WHERE {
  # Step 1: Identify Don Dokken as a musical artist
  ?donDokken <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?donDokken <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Step 2: Find associated musical artists of Watchtower
  ?watchtower <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .
  
  # Step 3: Identify Fredrik Thordendal's band as an organization
  ?fredrikBand <http://dbpedia.org/ontology/bandMember> ?bandMember .
  ?fredrikBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .

  # Step 4: Find common band member
  ?artist1 <http://dbpedia.org/ontology/bandMember> ?commonBandMember .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
}
```",8,13,9,3,3,3,3,71,0,14252,1,0.0,0.0,0
54,38,test,"Give me the parent of the child of Narapati I of Ava and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find the child of Narapati I of Ava
  <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?child .

  # Step 2: Find the predecessor of that child who is an office holder and a royalty
  ?child <http://dbpedia.org/ontology/predecessor> ?predecessor .
  ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the parent of this predecessor
  ?predecessor <http://dbpedia.org/ontology/parent> ?parent .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
404,52,test,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child ?parent ?spouse WHERE {
  # Step 1: Find the child of Ernest Augustus, Crown Prince of Hanover
  <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> <http://dbpedia.org/ontology/child> ?child .
  
  # Step 2: Ensure the child is royalty
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the parent of this royal child related to Ernest Augustus, Duke of Brunswick
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?parent <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .

  # Step 4: Identify the spouse of this parent
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?parent <http://dbpedia.org/property/spouse> ?spouse .

  # Step 5: Ensure the spouse was born with the birth name of Princess Victoria Louise of Prussia
  ?spouse <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
232,55,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
SELECT DISTINCT ?actor WHERE {
  # Step 1: Find Sean Pertwee as a child of John Devon Roland Pertwee
  ?sean rdf:type dbo:Person ;
        foaf:name ""Sean Pertwee"" ;
        dbo:parent <http://dbpedia.org/resource/John_Devon_Roland_Pertwee> .

  # Step 2: Find Sylvie Bermann's residence that is a settlement and British
  ?sylvie rdf:type dbo:Person ;
          foaf:name ""Sylvie Bermann"" .
  ?residence dbo:nativeOf ?sylvie ;
             rdf:type dbo:Settlement, dbo:Country ;
             dbp:countryName ""United Kingdom"" .

  # Step 3: Find Sean Pertwee's claim to fame that is both a film and military conflict
  ?claimToFame rdf:type dbo:Film, dbo:MilitaryConflict ;
               dbo:actor ?sean .

  # Step 4: Retrieve actors associated with the claim to fame
  ?claimToFame dbo:actor ?actor .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
16,52,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?professional WHERE {
  # Step 1: Find Satomi Ishihara's profession
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?profession .

  # Step 2: Identify Ted McGinley and Georgeanne Marie Rice by birth name
  ?ted <http://www.w3.org/2000/01/rdf-schema#label> ""Ted McGinley""@en .
  ?ted <http://dbpedia.org/ontology/birthName> ?birthNameTed .
  FILTER(?birthNameTed = ""Ted McGinley"")

  ?georgeanne <http://www.w3.org/2000/01/rdf-schema#label> ""Georgeanne Marie Rice""@en .
  ?georgeanne <http://dbpedia.org/ontology/birthDate> ?birthDateGeorgeanne .

  # Step 3: Find their spouse
  ?spouse <http://xmlns.com/foaf/0.1/marriedTo> ?ted ;
          <http://xmlns.com/foaf/0.1/marriedTo> ?georgeanne .

  # Step 4: Identify a professional in Satomi Ishihara's profession who is also this spouse
  ?spouse <http://dbpedia.org/ontology/profession> ?profession .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
9,52,test,"Give me the figure known as QUB and alma mater of the awardee of Royal Medal and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . }","```sparql
SELECT DISTINCT ?figure WHERE {
  # Step 1: Identify QUB in Belfast
  ?qub <http://www.w3.org/2000/01/rdf-schema#label> ""Queen's University Belfast""@en .
  ?qub <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Belfast""@en .

  # Step 2: Find the mayor of QUB's location
  ?mayor <http://dbpedia.org/ontology/politicalParty> ?party ;
         <http://dbpedia.org/ontology/almaMater> ?almaMaterMayor .
  ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 3: Find awardees of the Royal Medal
  ?awardee <http://dbpedia.org/property:award> ?award .
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medal""@en ;
         <http://dbpedia.org/ontology/receiver> ?awardee .
  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMaterAwardee .

  # Step 4: Find the common figure
  FILTER (?almaMaterMayor = ?almaMaterAwardee)
  ?figure owl:sameAs ?mayor ;
          owl:sameAs ?awardee .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
666,19,test,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season and figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?v4 . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . }","```sparql
# Part 1: Get the manager of the 2016–17 Hull City A.F.C. season
SELECT ?manager WHERE {
  <http://dbpedia.org/resource/2016%E2%80%9317_Hull_City_A.FC_season> <http://dbpedia.org/ontology/manager> ?manager .
  ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
}

# Part 2: Get players managed by the manager from Part 1
SELECT DISTINCT ?player WHERE {
  ?manager <http://dbpedia.org/property/player> ?player .
  FILTER(?manager = [MANAGER_URI_FROM_PART_1])
}

# Part 3: Find organizations that are soccer clubs, sports clubs in England and their nicknames
SELECT ?organization ?nickname WHERE {
  ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub> .
  ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .
  ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?organization <http://dbpedia.org/property/country> <http://dbpedia.org/resource/England> .
  ?organization <http://dbpedia.org/ontology/nickName> ?nickname .
}

# Note: Replace [MANAGER_URI_FROM_PART_1] with the actual URI obtained from Part 1.
```",5,9,6,3,2,3,2,20,0,0,2,0,0.0,0
659,55,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . }","```sparql
SELECT ?commander WHERE {
  # Find the war involving both entities
  ?war <http://dbpedia.org/ontology/militaryForce> [
    <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> ;
    <http://dbpedia.org/ontology/commander> ?commander .
  ] ;
  <http://dbpedia.org/ontology/militaryForce> [
    <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  ] .

  # Ensure the war is an event and a military conflict
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> [
    <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/class/yago/MilitaryConflicts1000000000> ;
    <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/class/yago/Events1000000000> .
  ] .

  # Check if the commander also served in a force involving Arthur Wellesley
  ?force <http://dbpedia.org/ontology/militaryForce> [
    <http://dbpedia.org/ontology/commander> ?commander ;
    <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
  ] .

  # Ensure the force is a societal event, an event, and a military conflict
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> [
    <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/class/yago/SocietalEvents1000000000> ;
    <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/class/yago/Events1000000000> ;
    <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/class/yago/MilitaryConflicts1000000000> .
  ] .
}
```",6,11,7,2,3,3,3,71,0,0,15,0,0.0,0
488,31,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Find the military conflict involving Saitō Hajime
  ?war <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Sait%C5%8D_Hajime> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .

  # Step 2: Find the commander of this war
  ?war <http://dbpedia.org/ontology/commander> ?commander .

  # Step 3: Get the birthplace of the commander
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Additional step to ensure we get Tokugawa Ieyasu's death place (though not directly used in result)
  OPTIONAL {
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
391,56,test,"Give me the actor of The Departed and native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
# Step 1: Get the actor(s) of ""The Departed""
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 2: Identify who is known as ""Hub City"" and find their native place
SELECT ?person ?nativePlace WHERE {
  ?person <http://dbpedia.org/property/nicknames> ""Hub City""@en .
  ?person <http://dbpedia.org/ontology/birthPlace> ?nativePlace .
}

# Step 3: Find a movie that is also classified as both a work and television show, and identify its actors
SELECT ?movie ?actor WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
981,17,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in Indonesia.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . },"```sparql
SELECT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/authored> <http://dbpedia.org/resource/Kamikaze_Girls> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen> .
  ?person <http://dbpedia.org/ontology/entityInLocation> <http://dbpedia.org/resource/Indonesia> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,19,0,0.0,0
55,22,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . },"```sparql
SELECT ?bandMember WHERE {
  # Step 1: Find the producer of ""Used to Love Her"" who is a band
  ?song <http://dbpedia.org/ontology/producer> ?producer .
  FILTER(STR(?song) = ""Used_to_Love_Her"")
  
  ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .

  # Step 2: Find the band members of this producer-band
  ?producer <http://dbpedia.org/ontology/member> ?bandMember1 .
  
  # Step 3: Check if this band member is both a band and a group
  ?bandMember1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?bandMember1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .

  # Step 4: Find the band members of this entity
  ?bandMember1 <http://dbpedia.org/ontology/member> ?bandMember .
  
  # Additional condition to ensure connection with San Francisco Symphony
  OPTIONAL {
    ?symphony <http://dbpedia.org/ontology/member> ?bandMember2 .
    FILTER(STR(?symphony) = ""San_Francisco_Symphony"")
    ?bandMember1 = ?bandMember2
  }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
281,60,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
# Step 1: Find the award associated with Jonathon Band
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/ontology/award> ?award .
}

# Step 2: Find wars related to this award
SELECT DISTINCT ?war WHERE {
  ?award <http://dbpedia.org/property/relatedToWar> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 3: Find professionals in the New Zealand Army who are military units, office holders, and politicians
SELECT DISTINCT ?professional WHERE {
  ?professional <http://dbpedia.org/ontology/profession> ?unit .
  ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?professional <http://dbpedia.org/ontology/officeHolder> ?office .
  ?office <http://dbpedia.org/ontology/politician> ?politician .
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?professional <http://dbpedia.org/property/memberOfMilitaryOrganization> <http://dbpedia.org/resource/New_Zealand_Army> .
}

# Step 4: Find wars related to these professionals
SELECT DISTINCT ?war WHERE {
  ?professional <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",6,9,7,3,2,3,3,71,0,0,9,0,0.0,0
184,67,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of Géza von Habsburg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Find the royal parent of Archduke Ladislaus Philipp of Austria
  ?parent <http://dbpedia.org/ontology/birthName> ""Archduke Ladislaus Philipp of Austria"" .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child and then grandchild of this royal parent
  ?parent <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> ?child1 .
  ?child1 <http://dbpedia.org/ontology/child> ?grandchild .

  # Step 3: Find the parent of Archduchess Margaret of Austria (born 1925) and their child's parent
  ?parentMargaret <http://dbpedia.org/ontology/birthName> ""Archduchess Margaret of Austria"" .
  ?parentMargaret <http://www.w3.org/2000/01/rdf-schema#label> ""Archduchess Margaret of Austria (born 1925)"" .
  ?parentMargaret <http://dbpedia.org/ontology/spouse> ?spouseMargaret .
  ?spouseMargaret <http://dbpedia.org/ontology/child> ?child2 .
  ?child2 <http://dbpedia.org/ontology/child> ?grandchildMargaret .

  # Step 4: Find the parent of Géza von Habsburg
  ?parentGéza <http://dbpedia.org/ontology/birthName> ""Géza von Habsburg"" .
  ?parentGéza <http://dbpedia.org/ontology/spouse> ?spouseGéza .
  ?spouseGéza <http://dbpedia.org/ontology/child> ?child3 .

  # Step 5: Find the common entity that fits all these criteria
  FILTER (?grandchild = ?grandchildMargaret && ?grandchild = ?child3)
  BIND(?grandchild AS ?result)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
54,45,test,"Give me the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?parent ?child WHERE {
  # Step 1: Find the parent of Thado Minsaw of Prome
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/birthParent> ?parent .

  # Step 2: Identify Thinkhaya of Pagan's child
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  
  # Step 3: Find the predecessor who is an office holder and royalty related to Thihapate of Mohnyin
  ?officeHolder <http://dbpedia.org/ontology/predecessor> ?child .
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?officeHolder <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
959,59,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
SELECT ?member WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election who is a politician.
  ?election <http://dbpedia.org/ontology/politicalLeader> ?leader .
  FILTER(?election = <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election>)
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 2: Determine their place of residence that is a country.
  ?leader <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 3: Find a person born in 1958 and native of that country.
  ?person <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> .
  ?person <http://dbpedia.org/ontology/nationality> ?residence .
  
  # Step 4: Identify this person's alma mater, which must be an organization, university, educational institution, and located in Japan.
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1 .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type2 .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type3 .
  FILTER(?type1 = <http://dbpedia.org/ontology/Organisation>)
  FILTER(?type2 = <http://dbpedia.org/ontology/University>)
  FILTER(?type3 = <http://dbpedia.org/ontology/EducationalOrganization>)
  ?almaMater <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  FILTER(STR(?location) = ""Japan"")

  # Step 5: Find the members associated with this alma mater.
  ?almaMater <http://dbpedia.org/ontology/member> ?member .
}
```",6,12,7,3,2,3,3,71,0,0,167,0,0.0,0
498,9,test,"Give me the band of the band, that is an organisation and a band, of Solace of Requiem and band of the member, that is an artist, of Mortician (band).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Part 1: Band of ""Solace of Requiem""
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Solace_of_Requiem> <http://www.w3.org/2002/07/owl#sameAs> ?entity .
  ?entity <http://dbpedia.org/ontology/member> ?member .
  ?member <http://dbpedia.org/ontology/band> ?result .
  FILTER EXISTS { ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> }
  FILTER EXISTS { ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> }
}

UNION

# Part 2: Band of a member of ""Mortician (band)""
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/member> ?member .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?member <http://dbpedia.org/ontology/band> ?result .
}
```",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
547,62,test,Give me the resting place of the child of the child of William Haliburton and resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,"SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . }","```sparql
# Part 1: Resting place of the child of the child of William Haliburton
SELECT ?grandchildRestingPlace WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton> .
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
  ?grandchild <http://dbpedia.org/ontology/deathPlace> ?grandchildRestingPlace .
}

UNION

# Part 2: Resting place of Alan Cunningham
SELECT ?cunninghamRestingPlace WHERE {
  <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/deathPlace> ?cunninghamRestingPlace .
}

UNION

# Part 3: Resting place of the actor of the show with Emily Richard
SELECT ?actorRestingPlace WHERE {
  ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/E._Richard> .
  ?show <http://dbpedia.org/ontology/starredBy> ?actor .
  ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
251,26,test,"Give me the administration of Forza Italia (2013) and location of the war, that is a military conflict, of Louis François Félix Musnier and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?administration ?warLocation ?deathPlace WHERE {
  
  # Part 1: Administration of Forza Italia (2013)
  <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?administration .

  # Part 2: Location of the war involving Louis François Félix Musnier
  ?musnier <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://dbpedia.org/ontology/location> ?warLocation .
  FILTER(?musnier = <http://dbpedia.org/resource/Louis_François_Félix_Musnier>) .

  # Part 3: Death place of the author of ""The Twelve Abbots of Challant""
  ?author <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> .
  ?author <http://dbpedia.org/ontology/deathPlace> ?deathPlace .

}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
92,28,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of Joseph Michael and associated musical artist of Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?bandMember WHERE {
  ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Nevermore> .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  ?bandMember <http://dbpedia.org/property/memberOf> ?reference .
  
  ?josephBand <http://dbpedia.org/ontology/band> <http://dbpedia.org/resource/Joseph_Michael> .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  
  ?jimBand <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Jim_Sheppard> .
  ?bandMember = ?jimBand .

}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
488,54,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
SELECT ?deathPlace ?birthPlace WHERE {
  # Step 1: Find Matsudaira Tadamasa's father who is an office holder
  <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .

  # Step 2: Find the father's father who is a politician
  ?father <http://dbpedia.org/ontology/father> ?grandfather .
  ?grandfather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 3: Get the death place of this grandfather
  ?grandfather <http://dbpedia.org/ontology/deathPlace> ?deathPlace .

  # Step 4: Find the commander in the Boshin War and their birthplace
  <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
391,50,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . },"```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Find the claim to fame of that spouse, ensuring it is a work
SELECT ?work WHERE {
  ?spouse <http://dbpedia.org/ontology/claimToFame> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
}

# Step 3: Find the actor associated with that work
SELECT ?actor WHERE {
  ?work <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 4: Identify movies featuring Roz Ryan that are both works and television shows
SELECT ?movie WHERE {
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
}

# Step 5: Find the actor who acted in those movies
SELECT DISTINCT ?actor WHERE {
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
54,50,test,"Give me the parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find the parent of Thado Minsaw of Prome
  ?thadoMinsaw <http://dbpedia.org/ontology/birthParent> ?parentOfThado .
  
  # Step 2: Find the child of that parent
  ?childOfParent <http://dbpedia.org/ontology/birthParent> ?parentOfThado .

  # Step 3: Determine the predecessor who is an office holder and royalty
  ?predecessor <http://dbpedia.org/ontology/predecessor> ?childOfParent .
  ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the parent of this predecessor
  ?parentOfPredecessor <http://dbpedia.org/ontology/birthParent> ?predecessor .
  
  # Filter for Thihapate of Mohnyin's child
  FILTER(?childOfParent = <http://dbpedia.org/resource/Thihapate_of_Mohnyin>)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
251,22,test,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT ?administration ?location WHERE {
  # Part 1: Administration of the ruling party in Sicily
  ?party <http://dbpedia.org/ontology/politicalParty> ?rulingParty .
  ?rulingParty <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?rulingParty <http://dbpedia.org/property/rulingPartyOf> <http://dbpedia.org/resource/Sicily> .
  ?administration <http://dbpedia.org/ontology/administration> ?rulingParty .

  # Part 2: Location of the military conflict involving Louis François Félix Musnier
  ?musnier <http://dbpedia.org/property/battle> ?conflict .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?conflict <http://dbpedia.org/ontology/location> ?location .
  
  # Linking the person to Louis François Félix Musnier
  ?musnier <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Louis_François_Félix_Musnier> .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
328,65,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of Joseph Stalin and commander in the force of the person decedent at Budapest.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v4 . }","```sparql
SELECT ?awardee WHERE {
  # Step 1: Find the award received by Bruce Fraser
  <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/receivedAward> ?award .

  # Step 2: Identify government agency led by Joseph Stalin
  ?agency <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Joseph_Stalin> .
  ?agency <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .

  # Step 3: Find the force commanded by a person who died in Budapest
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
  ?force <http://dbpedia.org/ontology/commander> ?person .
  
  # Final step: Combine to find the awardee
  ?awardee <http://dbpedia.org/ontology/receivedAward> ?award ;
           <http://dbpedia.org/ontology/leader> ?agency ;
           <http://dbpedia.org/ontology/commander> ?force .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
251,23,test,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/place> ?result . },"```sparql
SELECT ?location WHERE {
  # Find the war associated with Louis François Félix Musnier that is a military conflict
  ?war <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Louis_François_Félix_Musnier> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  
  # Find the location of this war
  ?war <http://dbpedia.org/ontology/location> ?location .

  # Find the author of ""The Twelve Abbots of Challant""
  ?book <http://purl.org/dc/terms/creator> ?author .
  FILTER (str(?book) = ""The_Twelve_Abbots_of_Challant"")

  # Find the death place of this author
  ?author <http://dbpedia.org/ontology/deathPlace> ?deathPlace .

  # Ensure the location matches the death place
  FILTER (?location = ?deathPlace)
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
528,66,test,Give me the war of the military force of Battle of Pisagua and force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Part 1: War of the military force in the Battle of Pisagua
  {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?force .
    ?force <http://dbpedia.org/ontology/battle> ?result .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
  
  UNION
  
  # Part 2: Force of the person born as Narciso Campero
  {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/property/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/militaryForce> ?result .
  }
  
  UNION
  
  # Part 3: War of the commander in the Battle of La Rinconada de Ate
  {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?result .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
}
```",7,7,8,3,3,3,3,71,2,12,0,0.14285714285714285,1.0,0.25
547,66,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the child of James Burton (property developer) and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v6 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Resting place of the awardee of Gerald Graham
SELECT ?restingPlace WHERE {
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Gerald_Graham> .
  ?awardee <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
}

UNION

# Resting place of the child of James Burton (property developer)
SELECT ?childRestingPlace WHERE {
  ?jamesBurton <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PropertyDeveloper> .
  ?jamesBurton <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/deathPlace> ?childRestingPlace .
}

UNION

# Resting place of the actor in ""Enemy at the Door""
SELECT ?actorRestingPlace WHERE {
  <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
184,68,test,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/father> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find landmark at elevation 96.0 that is a settlement
  ?landmark <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
  ?landmark <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 2: Find native of this landmark
  ?native <http://dbpedia.org/ontology/nationality> ?landmark .
  
  # Step 3: Determine the parent of this native
  ?native <http://dbpedia.org/ontology/birthPlace> ?parent .

  # Step 4: Identify Archduke Joseph Francis of Austria's child
  ?child1 <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  
  # Step 5: Find the child of this child and its parent
  ?grandChild <http://dbpedia.org/ontology/birthPlace> ?child1 .
  ?parent2 <http://dbpedia.org/ontology/birthPlace> ?grandChild .

  # Step 6: Filter these parents to be royalty
  ?parent2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 7: Identify Archduke Ladislaus Philipp of Austria's parent who is royalty
  ?royalParent <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> .
  ?royalParent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 8: Find the child of this royal parent
  ?child2 <http://dbpedia.org/ontology/birthPlace> ?royalParent .

  # Step 9: Determine the parent of these children
  ?parent = ?child2 .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
767,47,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?almaMater WHERE {
  ?administration <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/G._K._Nash> .
  ?entityInAdmin <http://dbpedia.org/ontology/entityInAdministration> ?administration .
  ?entityInAdmin <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?entityInAdmin <http://dbpedia.org/property/name> ""Green"" .
  ?entityInAdmin <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
92,58,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of Nevermore.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Part 1: Find the band of Joseph Michael (associated musical artist)
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  FILTER(CONTAINS(LCASE(?name), ""musical artist""))
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}

UNION

# Part 2: Find the band of Jim Sheppard (artist and member of Nevermore)
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  FILTER(CONTAINS(LCASE(?name), ""artist""))
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
  ?person <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Nevermore_(band)> .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
959,22,test,Give me the member of University of Tsukuba and manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?person WHERE {
  # Find people associated with the University of Tsukuba
  ?person <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/University_of_Tsukuba> .
  
  UNION
  
  ?person <http://dbpedia.org/ontology/staffMember> <http://dbpedia.org/resource/University_of_Tsukuba> .

  # Find the manager of Takashi Sekizuka's team
  ?team <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Takashi_Sekizuka> .
  ?team <http://dbpedia.org/ontology/manager> ?person .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,52,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Step 1: Find Nysa's parent
SELECT ?nysaParent WHERE {
  <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> <http://dbpedia.org/ontology/birthPlace> ?nysa .
  ?nysa <http://dbpedia.org/ontology/father> ?nysaParent .
}

# Step 2: Find Antiochus III's child married to Nysa's parent
SELECT ?childOfAntiochus WHERE {
  ?antiochusChild <http://dbpedia.org/ontology/spouse> ?nysaParent .
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?antiochusChild .
}

# Step 3: Find the child of the marriage who is royalty
SELECT ?royalChild WHERE {
  ?marriageChild <http://dbpedia.org/ontology/birthPlace> ?childOfAntiochus .
  ?marriageChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 4: Find the successor of Antiochus II Theos who is royalty
SELECT ?successor WHERE {
  ?antiochusII <http://dbpedia.org/ontology/successor> ?successor .
  <http://dbpedia.org/resource/Antiochus_II_theos> ?antiochusII .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 5: Find the child of the successor who is royalty
SELECT ?royalGrandchild WHERE {
  ?grandChild <http://dbpedia.org/ontology/birthPlace> ?successor .
  ?grandChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Final step: Find the parent of Nysa
SELECT ?finalParent WHERE {
  ?nysaParent <http://dbpedia.org/ontology/birthPlace> ?royalGrandchild .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
92,52,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
# Step 1: Find the reference (artist) for ""Nevermore (2006 film)""
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://dbpedia.org/ontology/reference> ?reference .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 2: Find the band member of this reference
SELECT DISTINCT ?bandMember WHERE {
  ?reference <http://dbpedia.org/ontology/member> ?bandMember .
}

# Step 3: Find the person born as Jim Sheppard who is an artist and their associated musical artist
SELECT ?associatedArtist WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Jim Sheppard"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/ontology/associatedBand> ?band .
  ?band <http://dbpedia.org/property/member> ?associatedArtist .
}

# Step 4: Identify the band of Joseph Michael
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Joseph_Michael_(musician)> <http://dbpedia.org/ontology/band> ?band .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,51,test,Give me the band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query 1: Band of the person born as the persona of Shèna
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Shèna"" .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}

UNION

# Query 2: Band of the writer of Apollo (Hardwell song)
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
9,53,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
SELECT ?figure WHERE {
  # Step 1: Identify Queen's University Belfast and its nickname
  <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/ontology/nickname> ?nickname .
  
  # Step 2: Confirm Allen Hill (scientist) is an alumnus of Queen's University Belfast
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Queen%27s_University_Belfast> .
  
  # Step 3: Determine the mayor of Belfast who is a politician and an alumnus
  ?mayor <http://dbpedia.org/ontology/politicalParty> ?party ; 
         <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Queen%27s_University_Belfast> ;
         <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Belfast> .
  
  # Step 4: Ensure the mayor is associated with an organization in Belfast
  ?organization <http://www.w3.org/ns/org#location> <http://dbpedia.org/resource/Belfast> ;
                <http://www.w3.org/ns/org#head> ?mayor .
  
  # Final condition: The figure must be Queen's University Belfast
  ?figure = <http://dbpedia.org/resource/Queen%27s_University_Belfast> .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,63,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of Ramesses II and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?parent WHERE {
  # Part related to Amun-her-khepeshef
  ?spouse1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
  ?child1 <http://dbpedia.org/ontology/parent> ?spouse1 .
  ?parent1 <http://dbpedia.org/ontology/child> ?child1 .

  # Part related to Ramesses II
  ?child2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ramesses_II> .
  ?spouse2 <http://dbpedia.org/ontology/spouse> ?child2 .

  # Part related to Merneptah
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Merneptah> .
  ?spouse3 <http://dbpedia.org/ontology/spouse> ?father .

  # Find the common parent entity
  FILTER (?parent1 = ?parent2)
  BIND(?parent1 AS ?parent)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,58,test,"Give me the war of the commander in Peninsular War and war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT DISTINCT ?war ?commander ?claimToFame WHERE {
  # Step 1: Find commanders in the Peninsular War
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .

  # Step 2: Check if these commanders were involved in a war with Carl Pontus Gahn
  ?war <http://dbpedia.org/ontology/battle> ?commander .
  ?war <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Carl_Pontus_Gahn> .

  # Step 3: Ensure the war is a military conflict, societal event, and an event
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Step 4: Find Thomas Trigge's claim to fame in this war
  ?commander <http://dbpedia.org/property/claimToFame> ?triggeClaim .
  ?triggeClaim <http://www.w3.org/2000/01/rdf-schema#label> ""Thomas Trigge"" .

  # Bind the claim to fame of the commander in this war
  ?commander <http://dbpedia.org/property/claimToFame> ?claimToFame .
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
427,68,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v5 <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?party1 AS ?FatherParty, 
       ?party2 AS ?MichelePintoParty, 
       ?party3 AS ?RomanoProdiParty WHERE {
  # Part 1: Party of the father of an MIT alumnus
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?father <http://dbpedia.org/ontology/father> ?alumnus .
  ?father <http://dbpedia.org/ontology/memberOfPoliticalParty> ?party1 .

  # Part 2: Party of Michele Pinto
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/memberOfPoliticalParty> ?party2 .

  # Part 3: Party of Romano Prodi, who is an office holder and politician
  <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
     <http://dbpedia.org/ontology/memberOfPoliticalParty> ?party3 .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
391,61,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Identify Sherry Hormann's spouse
  <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .

  # Step 2: Determine the claim to fame of Sherry Hormann's spouse, which is a work
  ?spouse <http://dbpedia.org/ontology/claimToFame> ?fameWork .
  ?fameWork <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .

  # Step 3: Find the professional and actor associated with that claim to fame
  ?professional <http://dbpedia.org/ontology/profession> ?fameWork .
  ?actor <http://dbpedia.org/ontology/actor> ?fameWork .

  # Step 4: Locate a movie that is categorized as a movie, work, and television show, involving this actor
  ?movie <http://dbpedia.org/ontology/movie> ?movieType ;
         <http://dbpedia.org/ontology/work> ?workType ;
         <http://dbpedia.org/ontology/televisionShow> ?tvShowType .
  ?movie <http://dbpedia.org/ontology/actor> ?actor .

  # Ensure the movie is of all three types
  FILTER(?movieType = <http://dbpedia.org/resource/Movie> &&
         ?workType = <http://dbpedia.org/resource/Work> &&
         ?tvShowType = <http://dbpedia.org/resource/Television_show>)
}
```",6,10,7,3,2,3,3,71,0,0,11,0,0.0,0
528,57,test,Give me the war of the commander in the work of --01-09 and war of Irene Morales and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Part 1: War of Irene Morales
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?war)
}

UNION

# Part 2: Force of Narciso Campero Leyes
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/property/birthPlace> ?birth .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
          <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes"" ;
          <http://dbpedia.org/ontology/memberOf> ?force .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
48,19,test,"Give me the band of the writer of Emotion (Carly Rae Jepsen album) and band of the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Part 1: Band of the writer of ""Emotion"" (Carly Rae Jepsen album)
SELECT ?writerBand WHERE {
  <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://purl.org/dc/terms/creator> ?writer .
  OPTIONAL { ?writer <http://dbpedia.org/ontology/band> ?writerBand . }
}

UNION

# Part 2: Band of the actor, who is a musical artist, from a show with Stacey Dash
SELECT ?actorBand WHERE {
  ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Stacey_Dash> .
  ?show <http://dbpedia.org/ontology/starredBy> ?actor .
  OPTIONAL { 
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?actor <http://dbpedia.org/ontology/band> ?actorBand .
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
391,65,test,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of the figure known as Hub City.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?actor WHERE {
  # Step 1: Find a movie that is a Movie, Work, and TelevisionShow with Roz Ryan as an actor
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .

  # Step 2: Find the actor of this movie
  ?movie <http://dbpedia.org/ontology/starring> ?actor .

  # Step 3: Find Sherry Hormann's spouse and their claim to fame
  OPTIONAL {
    ?spouse <http://xmlns.com/foaf/0.1/spouse> <http://dbpedia.org/resource/Sherry_Hormann> .
    ?claimToFame <http://dbpedia.org/ontology/claimToFame> ?spouse .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  }

  # Step 4: Find the native place of the figure known as Hub City
  OPTIONAL {
    ?figure <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Hub_City> .
    ?figure <http://dbpedia.org/ontology/birthPlace> ?nativePlace .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
617,66,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of the commander in Battle of Panium and spouse of the child of Antiochus III the Great.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find the royal children of Seleucus II Callinicus
  ?child1 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
  ?child1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 2: Find the royal grandchildren of Seleucus II Callinicus
  ?grandChild <http://dbpedia.org/ontology/birthParent> ?child1 .
  ?grandChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 3: Identify the commander in the Battle of Panium
  ?battleCommander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Battle_of_Panium> .
  
  # Step 4: Find the parent of the commander's child
  ?commanderChild <http://dbpedia.org/ontology/birthParent> ?battleCommander .
  ?parentOfCommandersChild <http://dbpedia.org/ontology/birthParent> ?commanderChild .

  # Step 5: Identify the spouse of Antiochus III the Great's child
  ?antiochusChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?spouseOfAntiochusChild <http://dbpedia.org/ontology/spouse> ?antiochusChild .

  # Step 6: Combine conditions to find the final entity
  FILTER (?grandChild = ?parentOfCommandersChild && ?grandChild = ?spouseOfAntiochusChild)
  BIND(?grandChild AS ?result)
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
251,21,test,Give me the death place of the author of The Twelve Abbots of Challant and administration of Forza Italia (2013) and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . },"```sparql
SELECT ?authorDeathPlace, ?forzaItaliaAdmin, ?marengoLocation WHERE {
  # Find the author of ""The Twelve Abbots of Challant"" and their death place
  <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/ontology/author> ?author .
  ?author <http://dbpedia.org/property/deathPlace> ?authorDeathPlace .

  # Find the administration related to Forza Italia (2013)
  <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?forzaItaliaAdmin .

  # Find the location of the Battle of Marengo
  <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/location> ?marengoLocation .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
747,54,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on the birth date of Pavlo Khudzik and band of Shèna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . },"```sparql
# Step 1: Find the writer of a song by Amba Shepherd
SELECT ?song ?writer WHERE {
  <http://dbpedia.org/resource/Amba_Shepherd> <http://purl.org/dc/terms/creator> ?song .
  ?song <http://dbpedia.org/ontology/writer> ?writer .
}

# Step 2: Find a person born on the same date as Pavlo Khudzik
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/property/birthDate> ?birthDate .
  ?person <http://dbpedia.org/property/birthDate> ?birthDate .
}

# Step 3: Find the band associated with Shèna
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/memberOf> ?band .
}

# Combine results to find bands related to both the writer of Amba Shepherd's song and the person born on Pavlo Khudzik's birthdate, as well as Shèna
SELECT DISTINCT ?band WHERE {
  # Writer of Amba Shepherd's song
  { 
    <http://dbpedia.org/resource/Amba_Shepherd> <http://purl.org/dc/terms/creator> ?song .
    ?song <http://dbpedia.org/ontology/writer> ?writer .
    ?writer <http://dbpedia.org/ontology/memberOf> ?band .
  }
  
  UNION
  
  # Person born on Pavlo Khudzik's birthdate
  {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/property/birthDate> ?birthDate .
    ?person <http://dbpedia.org/property/birthDate> ?birthDate .
    ?person <http://dbpedia.org/ontology/memberOf> ?band .
  }
  
  UNION
  
  # Band of Shèna
  {
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/memberOf> ?band .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,53,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
# Step 1: Find the father of Ernest Augustus, Duke of Brunswick
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/father> ?father .
}

# Step 2: Identify Princess Victoria Louise of Prussia and her spouse
SELECT ?spouse WHERE {
  ?princess <http://www.w3.org/2000/01/rdf-schema#label> ""Princess Victoria Louise of Prussia""@en ;
            <http://dbpedia.org/ontology/birthName> ?birthName .
  ?princess <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 3: Find Prince Ernest Augustus of Hanover (born 1914) and his parent
SELECT ?parent WHERE {
  ?prince <http://www.w3.org/2000/01/rdf-schema#label> ""Prince Ernest Augustus of Hanover""@en ;
          <http://dbpedia.org/ontology/birthYear> ""1914""^^xsd:gYear .
  ?prince <http://dbpedia.org/ontology/father> ?parent .
}

# Step 4: Determine the child of the father found in step 1
SELECT ?child WHERE {
  ?father <http://dbpedia.org/ontology/child> ?child .
}
```

Note: This query is broken down into steps for clarity. In practice, you would need to execute these queries sequentially and use the results from each step to inform the next.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,55,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find the father of Ernest Augustus, Duke of Brunswick
  <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Find children of this father who are royalty and have a spouse born as Princess Victoria Louise of Prussia
  ?child <http://dbpedia.org/ontology/father> ?father .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?spouse <http://dbpedia.org/ontology/spouse> ?child .
  ?spouse <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> .

  # Step 3: Ensure the child is royalty
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the parent of this child
  ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
994,61,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?associatedArtist WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> ?place .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?persona rdfs:label ""Don Dokken""@en .
  ?person foaf:nick ?persona .

  ?bandMember <http://dbpedia.org/ontology/member> ?person .
  
  ?band <http://dbpedia.org/ontology/members> ?bandMember .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Band> <http://dbpedia.org/ontology/Group> <http://dbpedia.org/ontology/Organization>) .

  ?fredrikBand <http://dbpedia.org/ontology/members> <http://dbpedia.org/resource/Fredrik_Thordendal> .
  ?fredrikBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .

  FILTER(?band = ?fredrikBand)

  ?bandMember <http://dbpedia.org/ontology/associatedBand> ?associatedArtist .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
182,26,test,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . },"```sparql
SELECT DISTINCT ?warJagathDias ?entityTamaraNationality ?warAuthorEasterBombs WHERE {
  # Part 1: War of Jagath Dias
  OPTIONAL {
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?warJagathDias .
    ?warJagathDias <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }

  # Part 2: Entity in the nationality of Tamara Kunanayakam
  OPTIONAL {
    <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?nationalityTamara .
    ?entityTamaraNationality <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?nationalityTamara .
  }

  # Part 3: War of the author of 2019 Sri Lanka Easter bombings
  OPTIONAL {
    <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/ontology/author> ?authorEasterBombs .
    ?authorEasterBombs <http://dbpedia.org/ontology/battle> ?warAuthorEasterBombs .
    ?warAuthorEasterBombs <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
}
```",5,5,6,2,3,2,3,28,1,4,0,0.2,1.0,0.33333333333333337
404,62,test,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
SELECT ?child ?parentOfChild ?parentOfPrinceGeorgeWilliam ?spouse WHERE {
  # Step 1: Find child of Ernest Augustus, Crown Prince of Hanover
  <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> <http://dbpedia.org/ontology/child> ?child .
  
  # Step 2: Find parent of this child who is a royalty
  ?child <http://dbpedia.org/ontology/parent> ?parentOfChild .
  ?parentOfChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 3: Find parent of Prince George William of Hanover who is a royalty
  <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?parentOfPrinceGeorgeWilliam .
  ?parentOfPrinceGeorgeWilliam <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 4: Find spouse of the person born as Princess Victoria Louise of Prussia who is a royalty
  ?person <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .

  # Ensure the parent of the child is the same as the parent of Prince George William
  FILTER (?parentOfChild = ?parentOfPrinceGeorgeWilliam)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
421,25,test,Give me the person born as Edin Dervišhalidović and native of the birthplace of Samir Bekrić and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
SELECT ?person WHERE {
  # Step 1: Find the birthplace of Samir Bekrić
  <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 2: Find a person born as Edin Dervišhalidović and native to that birthplace
  ?person <http://dbpedia.org/ontology/birthName> ""Edin Dervišhalidović"" .
  ?person <http://dbpedia.org/ontology/nativeOf> ?birthPlace .

  # Step 3: Find the band this person is a member of
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .

  # Step 4: Identify an award received by that band
  ?award <http://dbpedia.org/property/awardee> ?band .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
378,56,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Joaquín Blake and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . }","```sparql
# Step 1: Find the war involving both Thomas Trigge and Joaquín Blake that is a military conflict, societal event, and an event.
SELECT ?war WHERE {
  ?war <http://dbpedia.org/ontology/battleCommander> <http://dbpedia.org/resource/Thomas_Trigge> .
  ?war <http://dbpedia.org/ontology/battleCommander> <http://dbpedia.org/resource/Joaquín_Blake> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?societalEvent .
  ?societalEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}

# Step 2: Identify the person born as Carl Pontus Gahn and find their associated war.
SELECT ?personWar WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
  ?personWar <http://dbpedia.org/ontology/battleCommander> <http://dbpedia.org/resource/Carl_Pontus_Gahn> .
}

# Step 3: Find the commander of the war from step 1 who also participated in the war associated with Carl Pontus Gahn.
SELECT DISTINCT ?commander WHERE {
  ?war <http://dbpedia.org/ontology/battleCommander> ?commander .
  VALUES ?war { ?warFromStep1 } # Replace with actual result from Step 1
  ?personWar <http://dbpedia.org/ontology/battleCommander> ?commander .
  VALUES ?personWar { ?personWarFromStep2 } # Replace with actual result from Step 2
}

# Step 4: Retrieve the claim to fame for this commander.
SELECT ?claimToFame WHERE {
  ?commander <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
}
```

Note: The placeholders `?warFromStep1` and `?personWarFromStep2` need to be replaced with actual results from the previous steps when executing the query in a SPARQL endpoint.",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
994,52,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and band member of Don Dokken.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
# Step 1: Find an associated musical artist of Watchtower
SELECT ?artist1 WHERE {
  <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .
}

# Step 2: Find an associated musical artist of the artist from step 1
SELECT ?artist2 WHERE {
  ?artist1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .
}

# Step 3: Identify a band member of Meshuggah who is also part of a band, group, and organization
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Meshuggah> <http://dbpedia.org/ontology/member> ?member .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?types .
  FILTER (?types IN (<http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/MusicalGroup>, <http://dbpedia.org/ontology/Organisation>)).
}

# Step 4: Find an associated musical artist of the band member from step 3
SELECT ?artist3 WHERE {
  ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist3 .
}

# Step 5: Identify a band member of Don Dokken
SELECT ?donMember WHERE {
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/member> ?donMember .
}

# Final query to find the associated musical artist of the results from steps 2, 4, and 5
SELECT DISTINCT ?finalArtist WHERE {
  { ?artist2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalArtist . }
  UNION
  { ?artist3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalArtist . }
  UNION
  { ?donMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalArtist . }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
747,42,test,Give me the person born on the birth date of Pavlo Khudzik and band of Amba Shepherd and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find Pavlo Khudzik's birth date
SELECT ?birthDate WHERE {
  <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

# Step 2: Identify people born on that date
SELECT DISTINCT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  FILTER(?birthDate = ""Pavlo Khudzik's birth date"") # Replace with actual date from step 1
}

# Step 3: Find the band associated with Amba Shepherd
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/memberOf> ?band .
}

# Step 4: Determine Tracey Elizabeth McSween's birth name and corresponding person
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween"" .
}

# Step 5: Find the band of the person born as Tracey Elizabeth McSween
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/memberOf> ?band .
  FILTER(?person = ""Person found in step 4"") # Replace with actual entity from step 4
}

# Combine results for bands
SELECT DISTINCT ?band WHERE {
  { 
    SELECT ?band WHERE {
      <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/memberOf> ?band .
    }
  }
  UNION
  {
    SELECT ?band WHERE {
      ?person <http://dbpedia.org/ontology/memberOf> ?band .
      FILTER(?person = ""Person found in step 4"") # Replace with actual entity from step 4
    }
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
281,20,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?heffronBirthPlace ?surreyWar WHERE {
  # Task 1: Find Bob Heffron's birthplace that is a country
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?heffronBirthPlace .
  ?heffronBirthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Task 2: Find the war associated with Beauchamp Seymour, 1st Baron Alcester
  OPTIONAL {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/property/battle> ?surreyWar .
    ?surreyWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
}
```",3,4,4,2,2,3,3,71,0,1,1,0.0,0.0,0
747,43,test,"Give me the person born on 1985-04-29 and band of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?person ?bandOfShena ?writerBand WHERE {
  # Find person born on 1985-04-29
  ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^xsd:date .
  
  # Find band of Shèna
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/memberOf> ?bandOfShena .

  # Find writer of a song by Amba Shepherd
  ?song <http://purl.org/dc/terms/creator> ?writer .
  ?song <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Amba_Shepherd> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  ?work = ?song .

  # Find band of the writer
  ?writer <http://dbpedia.org/ontology/memberOf> ?writerBand .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
959,27,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?teamManager WHERE {
  # Step 1: Identify the manager of the 1998 Kashima Antlers season who is a sports manager
  ?season <http://dbpedia.org/ontology/manager> ?manager .
  ?season <http://www.w3.org/2000/01/rdf-schema#label> ""1998 Kashima Antlers season"" .
  ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .

  # Step 2: Find the team associated with this manager during that season
  ?season <http://dbpedia.org/property/team> ?team .
  
  # Step 3: Determine the current or next known manager of that team
  ?team <http://dbpedia.org/ontology/manager> ?teamManager .
}
```",3,4,4,3,1,3,3,71,0,0,10,0,0.0,0
488,29,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei and birth place of Enomoto Takeaki.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  # Find Yūki Hideyasu's father who is a politician
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Y%C5%ABki_Hideyasu> .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Get the death place of that father
  ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .

  # Find the administration under which Emperor Go-Yōzei served
  ?administration <http://dbpedia.org/property/administrationOf> <http://dbpedia.org/resource/Emperor_Go-Y%C5%8Dzei> .
  
  # Get Enomoto Takeaki's birthplace
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  FILTER(?deathPlace = ?birthPlace)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
92,68,test,"Give me the band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
# Step 1: Identify Joseph Michael Furney and his band
SELECT ?person ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael Furney"" .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}

UNION

# Step 2: Find musical artists associated with Joseph Michael Furney
SELECT ?artist WHERE {
  ?person <http://dbpedia.org/ontology/musicalArtist> ?artist .
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael Furney"" .
}

UNION

# Step 3: Identify the actor of ""Return to Nuke 'Em High Volume 1"" who is also an artist
SELECT ?actor WHERE {
  ?film <http://dbpedia.org/ontology/starring> ?actor .
  ?film <http://dbpedia.org/ontology/title> ""Return to Nuke 'Em High Volume 1"" .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}

UNION

# Step 4: Find the band member associated with ""Nevermore (2006 film)""
SELECT ?bandMember WHERE {
  ?film <http://dbpedia.org/ontology/reference> ?reference .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?film <http://dbpedia.org/ontology/title> ""Nevermore (2006 film)"" .
  ?bandMember <http://dbpedia.org/ontology/memberOfBand> ?reference .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,42,test,Give me the parent of the native of Budapest and child of Archduke Joseph August of Austria and parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?individual ?parent WHERE {
  # Step 1: Find individuals native to Budapest
  ?individual <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Budapest> .
  
  # Step 2: Check if their parent is Archduke Joseph August of Austria
  ?individual <http://dbpedia.org/ontology/birthParent> ?parent1 .
  ?parent1 rdfs:label ""Archduke Joseph August of Austria""@en .

  # Step 3: Find if they have a child whose parent is Archduke Joseph Francis of Austria
  ?individual <http://dbpedia.org/ontology/birthChild> ?child .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent2 .
  ?parent2 rdfs:label ""Archduke Joseph Francis of Austria""@en .

  # Step 4: Determine the parent of this individual
  ?individual <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
328,38,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . },"```sparql
SELECT ?commander WHERE {
  # Find commanders in the force of Ferenc Szálasi
  ?force <http://dbpedia.org/ontology/commander> ?commander .
  ?force <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> .

  # Find offices that are government agencies led by Joseph Stalin
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?office <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Joseph_Stalin> .

  # Ensure the commander is also a leader of such an office
  ?commander <http://dbpedia.org/property/leader> ?office .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
801,46,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
SELECT ?producer WHERE {
  # Find the professional individual associated with The Shadow
  ?shadow <http://dbpedia.org/ontology/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
  
  # Identify works that are musical, songs, and general works of 50 Cent
  ?work <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/50_Cent> ;
        a <http://dbpedia.org/ontology/MusicalWork>, <http://dbpedia.org/ontology/Song>, <http://dbpedia.org/ontology/Work> .
  
  # Find the producer of these works
  ?work <http://dbpedia.org/property/producer> ?producer .
}
```",5,8,6,3,2,3,3,71,0,0,27,0,0.0,0
232,58,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?actor WHERE {
  # Step 1: Find Sean Pertwee's claim to fame that is both a film and a military conflict.
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/film> ?film .
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/militaryConflict> ?conflict .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  FILTER(?film = ?conflict)

  # Step 2: Find Jon Pertwee's child who is also Sean Pertwee's child.
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Jon_Pertwee> .
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Sean_Pertwee> .

  # Step 3: Find the residence of this child, which is a settlement in Britain.
  ?child <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 4: Find the native of this settlement who is a politician and an office holder.
  ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?native <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/France> .
  ?native <http://dbpedia.org/ontology/residence> ?residence .

  # Step 5: Find the actor associated with Sean Pertwee's claim to fame.
  ?film <http://dbpedia.org/ontology/starring> ?actor .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
827,17,test,"Give me the child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach and father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?child ?father WHERE {
  # Step 1: Find children of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach
  <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?child .
  
  # Step 2: Ensure the child is royalty
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 3: Find spouse of the child who is also royalty
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 4: Identify the father of this royal spouse
  ?spouse <http://dbpedia.org/ontology/father> ?father .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
659,59,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . }","```sparql
SELECT ?commander WHERE {
  # Step 1: Find native of Kingdom of Ireland who is an office holder
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
  ?person a <http://dbpedia.org/ontology/OfficeHolder> .

  # Step 2: Find commander in force associated with this person
  ?force <http://dbpedia.org/ontology/commander> ?commander .
  ?person <http://dbpedia.org/property/memberOf> ?force .

  # Step 3: Identify war involving 'Polish Horse'
  ?polishHorse a <http://dbpedia.org/ontology/MilitaryUnit>, <http://dbpedia.org/ontology/Organisation> ;
               rdfs:label ""Polish Horse""@en .
  
  ?war <http://dbpedia.org/ontology/battle> ?polishHorse ;
       a <http://dbpedia.org/ontology/MilitaryConflict>, <http://dbpedia.org/ontology/Event> .

  # Step 4: Find commander related to this specific war
  ?war <http://dbpedia.org/ontology/commander> ?commander .
}
```",6,11,7,3,2,3,3,71,0,0,71,0,0.0,0
16,63,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
# Step 1: Find Satomi Ishihara's profession
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?profession .
}

# Step 2: Find Ted McGinley's spouse using his birth name
SELECT ?spouse WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Ted McGinley""@en .
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  FILTER(?birthName = ""Thomas Edward McGinley"")
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 3: Find Gigi Rice's spouse using her birth name
SELECT ?spouse WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Gigi Rice""@en .
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  FILTER(?birthName = ""Gigi Rice"")
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 4: Find a professional who matches the criteria
SELECT DISTINCT ?result WHERE {
  # Assuming we have found Satomi Ishihara's profession as ?profession from step 1
  ?result <http://dbpedia.org/ontology/profession> ?profession .

  # Ted McGinley's spouse connection
  ?person1 <http://www.w3.org/2000/01/rdf-schema#label> ""Ted McGinley""@en .
  ?person1 <http://dbpedia.org/ontology/birthName> ""Thomas Edward McGinley"" .
  ?person1 <http://dbpedia.org/ontology/spouse> ?spouse1 .

  # Gigi Rice's spouse connection
  ?person2 <http://www.w3.org/2000/01/rdf-schema#label> ""Gigi Rice""@en .
  ?person2 <http://dbpedia.org/ontology/birthName> ""Gigi Rice"" .
  ?person2 <http://dbpedia.org/ontology/spouse> ?spouse2 .

  # Check if the same person is a spouse to both
  FILTER(?spouse1 = ?spouse2)
  ?result <http://dbpedia.org/ontology/spouse> ?spouse1 .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,46,test,Give me the war of the person born as the birth name of Carl Pontus Gahn and war of the commander in Peninsular War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query 1: Wars involving Carl Pontus Gahn
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://www.w3.org/2000/01/rdf-schema#label> ""Carl Pontus Gahn""@en .
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Query 2: Wars commanded by commanders of the Peninsular War
SELECT DISTINCT ?result WHERE {
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
356,20,test,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season and team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
# Step 1: Find Gary Williams' birthplace that is English and a settlement
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?birthPlace <http://dbpedia.org/property/country> <http://dbpedia.org/resource/England> .
}

# Step 2: Find natives of this birthplace who are soccer players and managers
SELECT ?native WHERE {
  ?native <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
}

# Step 3: Determine their team
SELECT ?team WHERE {
  ?native <http://dbpedia.org/property/team> ?team .
}

# Step 4: Identify the predecessor season of the 2015 Sacramento Republic FC season
SELECT ?predecessorSeason WHERE {
  <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/predecessor> ?predecessorSeason .
  ?predecessorSeason <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason> .
  ?predecessorSeason <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason> .
}

# Step 5: Find the successor of this predecessor
SELECT ?successor WHERE {
  ?predecessorSeason <http://dbpedia.org/ontology/successor> ?successor .
}

# Step 6: Identify players in this successor season
SELECT ?player WHERE {
  ?successor <http://dbpedia.org/property/player> ?player .
}
```",6,12,7,3,2,3,2,20,0,0,1,0,0.0,0
645,17,test,Give me the entity in United Kingdom and alma mater of the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?entity WHERE {
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Adela_Pankhurst> .
  ?parent <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
  ?entity <http://dbpedia.org/ontology/location> ?location .
  ?location <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
  FILTER(?almaMater = ?entity)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
696,17,test,Give me the landmark at elevation of the award of the commander in Battle of Chishui River and birth place of Tim Brennan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v3 . <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"```sparql
# Step 1: Find the commander of the Battle of Chishui River
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 2: Find the award received by this commander
SELECT ?award WHERE {
  ?commander <http://dbpedia.org/property/receivedAward> ?award .
}

# Step 3: Determine the elevation of the landmark associated with the award
SELECT ?landmark ?elevation WHERE {
  ?award <http://dbpedia.org/ontology/location> ?location .
  ?location <http://dbpedia.org/ontology/contains> ?landmark .
  ?landmark <http://dbpedia.org/property/elevation> ?elevation .
}

# Step 4: Identify the birthplace of Tim Brennan
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Tim_Brennan_(American_football)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Step 5: Find a landmark at the same elevation in Tim Brennan's birthplace
SELECT ?landmark WHERE {
  ?birthPlace <http://dbpedia.org/ontology/contains> ?landmark .
  ?landmark <http://dbpedia.org/property/elevation> ?elevation .
  FILTER(?elevation = ?elevationFromAward) # Use the elevation found in Step 3
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
184,54,test,"Give me the parent of Archduchess Ilona of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the native of Budapest.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
# Step 1: Identify the parent of Archduchess Ilona of Austria
SELECT ?parentIlona WHERE {
  <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/birthParent> ?parentIlona .
}

# Step 2: Find the child of that parent who is a royalty
SELECT ?royaltyChild WHERE {
  ?parentIlona <http://dbpedia.org/ontology/birthChild> ?royaltyChild .
  ?royaltyChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .
}

# Step 3: Determine the parent of Archduke Ladislaus Philipp of Austria
SELECT ?parentLadislaus WHERE {
  <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/birthParent> ?parentLadislaus .
}

# Step 4: Identify the child of the child of this parent
SELECT ?grandchild WHERE {
  ?parentLadislaus <http://dbpedia.org/ontology/birthChild> ?childOfParent .
  ?childOfParent <http://dbpedia.org/ontology/birthChild> ?grandchild .
}

# Step 5: Find the native of Budapest
SELECT ?nativeBudapest WHERE {
  ?nativeBudapest <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Hungary> ;
                  <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
}

# Step 6: Determine the parent of the native from step 5
SELECT ?parentNative WHERE {
  ?nativeBudapest <http://dbpedia.org/ontology/birthParent> ?parentNative .
}

# Final query to find the intersection as per the question's requirements
SELECT DISTINCT ?finalResult WHERE {
  # Parent of Archduchess Ilona of Austria
  ?parentIlona <http://dbpedia.org/ontology/birthChild> ?royaltyChild .

  # Child of the child of the parent of Archduke Ladislaus Philipp of Austria
  ?parentLadislaus <http://dbpedia.org/ontology/birthChild> ?childOfParent .
  ?childOfParent <http://dbpedia.org/ontology/birthChild> ?grandchild .

  # Parent of the native of Budapest
  ?nativeBudapest <http://dbpedia.org/ontology/birthParent> ?parentNative .

  # Find intersection or connection
  FILTER(?royaltyChild = ?grandchild)
  FILTER(?parentIlona = ?parentNative)

  BIND(?parentIlona AS ?finalResult)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
767,63,test,"Give me the reference to the alter ego of Black Hood and alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v3 . },"```sparql
# Step 1: Find the alter ego of Black Hood
SELECT ?alterEgo WHERE {
  <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/ontology/alternateName> ?alterEgo .
}

UNION

# Step 2: Find the alma mater of George K. Nash's administration
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/education> ?almaMater .
}

UNION

# Step 3: Find an entity in the administration that is a settlement
SELECT ?settlement WHERE {
  ?administration <http://dbpedia.org/property/administrationOf> <http://dbpedia.org/resource/George_K._Nash> .
  ?administration <http://dbpedia.org/ontology/entity> ?settlement .
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}

UNION

# Step 4: Find the writer of ""Where It's At"" (Dustin Lynch album)
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://dbpedia.org/ontology/writer> ?writer .
}

# Get references for all identified entities
SELECT DISTINCT ?entity ?reference WHERE {
  VALUES ?entity { ?alterEgo ?almaMater ?settlement ?writer }
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
54,53,test,"Give me the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v3 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find the parent of Thado Minsaw of Prome
  ?thadoMinsaw <http://dbpedia.org/ontology/birthName> ""Thado Minsaw of Prome"" .
  ?thadoMinsaw <http://dbpedia.org/ontology/father> ?parent .

  # Step 2: Find the child of Thinkhaya of Pagan's father (Thinkhaya himself)
  ?thinkhaya <http://dbpedia.org/ontology/birthName> ""Thinkhaya of Pagan"" .
  ?thinkhaya <http://dbpedia.org/ontology/father> ?fatherOfThinkhaya .
  ?child <http://dbpedia.org/ontology/father> ?fatherOfThinkhaya .

  # Step 3: Find the predecessor of this child, who is an office holder and royalty related to Thihapate of Mohnyin
  ?thihapate <http://dbpedia.org/ontology/birthName> ""Thihapate of Mohnyin"" .
  ?officeHolder <http://dbpedia.org/ontology/predecessor> ?child .
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Final result: The parent of Thado Minsaw of Prome
  BIND(?parent AS ?result)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
161,58,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . }","```sparql
SELECT DISTINCT ?commander WHERE {
  # Step 1: Find El Director's force
  ?elDirector <http://dbpedia.org/ontology/kind> ""El Director"" .
  ?elDirector <http://dbpedia.org/ontology/militaryForce> ?force1 .

  # Step 2: Find Francisco Largo Caballero's military force that is a societal event and a military conflict
  <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/ontology/militaryForce> ?force2 .
  ?force2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?force2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 3: Find the military force involved in the Rif War
  <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?force3 .

  # Step 4: Identify commanders common across these forces
  ?commander <http://dbpedia.org/ontology/commanderOf> ?force1 .
  ?commander <http://dbpedia.org/ontology/commanderOf> ?force2 .
  ?commander <http://dbpedia.org/ontology/commanderOf> ?force3 .
}
```",6,9,7,3,3,3,3,71,0,0,11,0,0.0,0
9,43,test,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as QUB.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
# Find John Alderdice's alma mater
SELECT ?almaMaterJohn WHERE {
  <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMaterJohn .
}

UNION

# Find the awardee of Royal Medals associated with QUB and their alma mater
SELECT ?almaMaterAwardee WHERE {
  # Identify the award related to ""Royal Medals""
  ?award <http://dbpedia.org/ontology/reference> ?reference .
  FILTER(CONTAINS(LCASE(?reference), ""royal medals""))
  
  # Find the awardee associated with QUB
  ?awardee <http://dbpedia.org/ontology/recipient> ?award .
  ?awardee <http://dbpedia.org/ontology/almaMater> ?qubAlmaMater .
  FILTER(CONTAINS(LCASE(?qubAlmaMater), ""queen's university belfast""))

  # Get the alma mater of this awardee
  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMaterAwardee .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
645,19,test,"Give me the entity in the residence, that is a country, of James Wilkes Maurice and alma mater of the child of the parent of Adela Pankhurst.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Step 1: Find the country of residence for James Wilkes Maurice
  <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 2: Find the alma mater of a child of Adela Pankhurst's parent
  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Adela_Pankhurst> .
    ?child <http://dbpedia.org/ontology/birthParent> ?parent .
    ?child <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }

  # Step 3: Find the common entity
  FILTER (?residence = ?entity || ?almaMater = ?entity)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
617,20,test,Give me the spouse of the child of Antiochus III the Great and child of Antiochus III the Great.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
SELECT ?child ?spouse WHERE {
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,3,4,2,2,3,3,71,4,2,0,0.6666666666666666,1.0,0.8
547,29,test,Give me the resting place of Alan Cunningham and resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person, ?restingPlace WHERE {
  { 
    <http://dbpedia.org/resource/Alan_Cunningham_(British_Army_officer)> <http://dbpedia.org/ontology/burial> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Alan_Cunningham_(British_Army_officer)> AS ?person)
  }
  UNION
  {
    ?actor <http://www.w3.org/2000/01/rdf-schema#label> ""Enemy at the Door""@en .
    ?actor <http://dbpedia.org/ontology/burial> ?restingPlace .
    BIND(?actor AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/burial> ?restingPlace .
    BIND(<http://dbpedia.org/resource/James_Burton_(Egyptologist)> AS ?person)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
994,50,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify Donald Maynard Dokken as a musical artist
  ?dokken <http://dbpedia.org/ontology/birthName> ""Donald Maynard Dokken"" .
  ?dokken <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Step 2: Find band members of Donald Maynard Dokken
  ?bandMember <http://dbpedia.org/property/memberOfBand> ?dokkenBand .
  
  # Step 3: Identify bands that are both a band and an organization
  ?dokkenBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> ;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .

  # Step 4: Find associated musical artists of these bands
  ?dokkenBand <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
488,20,test,"Give me the birth place of Enomoto Takeaki and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v2 . },"```sparql
# Query for Enomoto Takeaki's birthplace
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

UNION

# Query for the death place of Yūki Hideyasu's father who is a politician
SELECT ?deathPlace WHERE {
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?father <http://dbpedia.org/property/fatherOf> <http://dbpedia.org/resource/Yūki_Hideyasu> .
  ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
392,26,test,"Give me the entity in the region, that is a country, of Central European Time and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of Central European Time.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?entity WHERE {
  # Find the country in the region of Central European Time
  <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/country> ?country .
  ?country <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Find Sebastiano Bianchetti's residence details
  <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/province> ?province .
  ?province <http://www.w3.org/2000/01/rdf-schema#label> ""Italy""@it .

  # Ensure both entities are linked to the same region under CET
  ?country <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> .
  ?residence <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> .

  # Return the entity that satisfies all conditions
  BIND(?country AS ?entity)
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
994,57,test,"Give me the associated musical artist of S.A. Slayer and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . }","```sparql
SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Find the associated musical artist of S.A. Slayer
  <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .

  # Step 2: Identify a band member who is part of a band, group, and organization
  ?bandMember <http://dbpedia.org/ontology/memberOfBand> ?band .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1 .
  FILTER (?type1 IN (<http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/MusicalGroup>, <http://dbpedia.org/ontology/Organisation>)).
  
  # Step 3: Find the band of Fredrik Thordendal
  ?bandMember2 <http://dbpedia.org/ontology/memberOfBand> ?bandFredrik .
  ?bandFredrik <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .

  # Step 4: Find the band member of Donald Maynard Dokken
  ?person <http://dbpedia.org/resource/D._M._Dokken> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?bandMember3 <http://dbpedia.org/ontology/memberOfBand> ?bandDokken .

  # Final step: Find the associated musical artist of the band member
  ?bandMember3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .

  # Return the associated artists found in steps 1 and final step
  VALUES ?associatedArtist { ?artist1 ?artist2 }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
838,17,test,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa and band of Raša Đelmaš.","SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?bandMember WHERE {
  # Step 1: Identify the reference that is both a group and an organisation related to YU Grupa.
  ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/YU_Grupa> .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .

  # Step 2: Determine the band associated with Raša Đelmaš.
  ?band <http://dbpedia.org/property/band> <http://dbpedia.org/resource/Raša_Đelmaš> .
  
  # Step 3: Find the band member of the identified band.
  ?bandMember <http://dbpedia.org/ontology/member> ?band .
}
```",4,7,5,3,2,3,2,20,0,0,4,0,0.0,0
994,27,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
SELECT ?bandMember WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Don Dokken"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?bandMember .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
281,54,test,"Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Step 1: Find the leader of the 1962 NSW state election who is a politician.
SELECT ?leader WHERE {
  <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/ontology/leader> ?leader .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}

# Step 2: Determine the birthplace of this leader, ensuring it's a country.
SELECT ?birthPlace WHERE {
  ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}

# Step 3: Find entities associated with this birthplace (country).
SELECT ?entity WHERE {
  ?birthPlace <http://dbpedia.org/ontology/entity> ?entity .
}

# Step 4: Locate the awardee of the Knight Grand Cross of the Order of the Bath and identify wars they were involved in.
SELECT ?war1 WHERE {
  ?awardee <http://dbpedia.org/property/orderOfTheBathAwardee> ""Knight Grand Cross"" .
  ?awardee <http://dbpedia.org/ontology/battle> ?war1 .
}

# Step 5: Identify wars involving the New Zealand Army.
SELECT ?war2 WHERE {
  <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?war2 .
}
```

Note: This query is structured in steps and may need to be executed sequentially or combined into a single query depending on the SPARQL endpoint's capabilities.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,26,test,Give me the parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
SELECT ?grandparent WHERE {
  ?child1 <http://dbpedia.org/ontology/child> ?setiI .
  ?setiI <http://www.w3.org/2000/01/rdf-schema#label> ""Seti I"" .
  
  ?child2 <http://dbpedia.org/ontology/child> ?child1 .
  
  ?grandchild <http://dbpedia.org/ontology/child> ?child2 .
  
  ?parent <http://dbpedia.org/ontology/child> ?grandchild .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
547,54,test,Give me the resting place of the child of James Burton (property developer) and resting place of the actor of the show with Emily Richard and resting place of Alan Cunningham.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Part 1: Resting place of the child of James Burton (property developer)
SELECT ?child ?restingPlace WHERE {
  <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
  OPTIONAL { ?child <http://dbpedia.org/ontology/restingPlace> ?restingPlace . }
}

# Part 2: Resting place of the actor of the show with Emily Richard
SELECT DISTINCT ?actor ?show ?restingPlace WHERE {
  ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/E._Richard> .
  ?show <http://dbpedia.org/ontology/actor> ?actor .
  OPTIONAL { ?actor <http://dbpedia.org/ontology/restingPlace> ?restingPlace . }
}

# Part 3: Resting place of Alan Cunningham
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
294,22,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of the architect of P. D. Houston Jr. House.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for resting place of awardee (politician) of Distinguished Service Medal (U.S. Army)
SELECT ?restingPlace WHERE {
  ?person <http://dbpedia.org/ontology/honoraryAward> <http://dbpedia.org/resource/Distinguished_Service_Medal_(United_States_Army)> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
}

UNION

# Query for resting place of architect of P.D. Houston Jr. House
SELECT ?architectRestingPlace WHERE {
  <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?architect .
  ?architect <http://dbpedia.org/ontology/deathPlace> ?architectRestingPlace .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
232,47,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Identify John Pertwee
  ?john <http://www.w3.org/2000/01/rdf-schema#label> ""John Devon Roland Pertwee""@en .
  
  # Step 2: Find his child who is an actor, narrator, and producer
  ?child <http://dbpedia.org/ontology/father> ?john ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?profession1 ,
             ?profession2 , ?profession3 .
  
  FILTER(?profession1 = <http://dbpedia.org/ontology/Actor> &&
         ?profession2 = <http://dbpedia.org/ontology/Narrator> &&
         ?profession3 = <http://dbpedia.org/ontology/Producer>)
  
  # Step 3: Find the claim to fame that is both a film and a military conflict
  ?child <http://purl.org/dc/terms/references> ?claimToFame .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1 ,
                ?type2 .
  
  FILTER(?type1 = <http://dbpedia.org/ontology/Film> &&
         ?type2 = <http://dbpedia.org/ontology/MilitaryConflict>)
  
  # Step 4: Identify the actor associated with this claim to fame
  ?claimToFame <http://dbpedia.org/ontology/starring> ?actor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
161,29,test,"Give me the commander in Biscay Campaign and military force of Rif War and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Step 1: Find the commander in the Biscay Campaign
SELECT ?biscayCommander WHERE {
  <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?biscayCommander .
}

# Step 2: Find the military force commanded by Francisco Largo Caballero during the Rif War
SELECT ?rifWarForce WHERE {
  <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/ontology/militaryForce> ?rifWarForce .
  ?rifWarForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> .
}

# Step 3: Find the societal event and military conflict associated with that force
SELECT DISTINCT ?societalEvent ?militaryConflict WHERE {
  ?rifWarForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?eventType .
  FILTER (?eventType IN (<http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/MilitaryConflict>)).
  
  OPTIONAL { ?rifWarForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> . BIND(?rifWarForce AS ?societalEvent) }
  OPTIONAL { ?rifWarForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> . BIND(?rifWarForce AS ?militaryConflict) }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
16,47,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
# Step 1: Find the actor of Unnatural (TV series) and their profession
SELECT ?actor ?profession WHERE {
  <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://purl.org/dc/terms/profession> ?profession .
}

# Step 2: Find Ted Martin McGinley's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://xmlns.com/foaf/0.1/birthName> ""Ted Martin McGinley"" .
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 3: Find a professional in the same profession as the actor
SELECT DISTINCT ?professional WHERE {
  # Assuming we have found ?actor and ?profession from step 1
  ?professional <http://purl.org/dc/terms/profession> ?profession .
}
```

Note: The above query is split into logical steps. In practice, you would need to execute these queries sequentially or combine them using subqueries or a more complex SPARQL structure to get the final result.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
427,24,test,Give me the party of Romano Prodi and party of the father of Lamberto Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?prodiParty ?fatherName ?fatherParty WHERE {
  # Query for Romano Prodi's party
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?prodiParty .

  # Query for Lamberto Andreotti's father and his party
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?father .
  ?father rdfs:label ?fatherName .
  ?father <http://dbpedia.org/ontology/party> ?fatherParty .
}
```",3,3,4,2,2,3,3,71,3,7,0,0.3,1.0,0.4615384615384615
801,45,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in  and producer of Westside Story (song).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify the album and its writer who is a musical artist and an artist
  ?album <http://dbpedia.org/ontology/work> ?musicalWork .
  ?album <http://dbpedia.org/property/title> ""What U See Is What U Get"" .
  ?writer <http://purl.org/dc/terms/creator> ?album ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> , <http://dbpedia.org/ontology/Artist> .

  # Step 2: Find the producer of ""Westside Story""
  ?song <http://purl.org/dc/terms/title> ""Westside Story"" .
  ?producer <http://dbpedia.org/property/producer> ?song .

  # Step 3: Link the writer to the producer
  ?writer = ?producer .

  # Step 4: Find associated musical artists of this writer
  ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
747,62,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the writer of the work, that is a song, of Amba Shepherd and band of Shèna.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v6 . },"```sparql
SELECT ?person WHERE {
  # Step 1: Identify athlete and soccer player from Zolotonosha
  ?athlete <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Zolotonosha>;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>, <http://dbpedia.org/ontology/SoccerPlayer>.

  # Step 2: Find the decedent's death date
  ?athlete <http://dbpedia.org/ontology/deathDate> ?deathDate.

  # Step 3: Identify writer of song ""Amba Shepherd""
  ?song <http://purl.org/dc/terms/title> ""Amba Shepherd"";
        <http://dbpedia.org/property/writer> ?writer.

  # Step 4: Find band associated with Shèna
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Shèna>.

  # Step 5: Link the song to the band
  ?song <http://dbpedia.org/property/band> ?band.

  # Step 6: Get birthdate of athlete
  ?athlete <http://dbpedia.org/ontology/birthDate> ?birthDate.

  # Step 7: Find person born on this date
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate.
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
328,45,test,"Give me the commander in Eastern Front (World War II) and awardee of Order of Suvorov and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT DISTINCT ?commander WHERE {
  # Step 1: Find commanders in Eastern Front (World War II)
  ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
  ?battle <http://dbpedia.org/ontology/commander> ?commander .

  # Step 2: Check if the commander was awarded Order of Suvorov
  ?commander <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> .

  # Step 3: Find if the commander led a government agency
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?commander <http://dbpedia.org/ontology/leader> ?office .

  # Step 4: Check if the leader is connected to Gustav Jonson
  ?gustav <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Politician> .
  ?gustav <http://dbpedia.org/property/leader> ?office .

}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
492,36,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
# Part 1: Find the person decedent at the capital of Khemis Miliana District
SELECT ?person WHERE {
  ?district <http://dbpedia.org/ontology/capital> ?capital .
  ?district <http://www.w3.org/2000/01/rdf-schema#label> ""Khemis Miliana District"" .
  FILTER (STRSTARTS(STR(?capital), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> }).
  
  ?person <http://dbpedia.org/ontology/deathPlace> ?capital .
}

UNION

# Part 2: Find the person decedent at French Algeria
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
}
```",4,5,5,3,2,3,3,71,0,0,16,0,0.0,0
16,18,test,Give me the professional in Actress and spouse of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Category:American_actresses> .
  ?person <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Georgeanne Marie Rice""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
404,65,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
# Step 1: Find the father of Ernest Augustus, Duke of Brunswick
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/father> ?father .
}

# Step 2: Identify the spouse of Princess Victoria Louise of Prussia who is royalty
SELECT ?spouse WHERE {
  ?princess <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?princess <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia"" .
  ?princess <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 3: Find the parent of a child who is royalty and whose parent (also royalty) is Prince George William of Hanover
SELECT ?parent WHERE {
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?child <http://dbpedia.org/ontology/father> ?grandParent .
  ?grandParent <http://www.w3.org/2000/01/rdf-schema#label> ""Prince George William of Hanover"" .
  ?parent <http://dbpedia.org/ontology/child> ?child .
}

# Step 4: Find the child of the father identified in step 1
SELECT ?child WHERE {
  ?father <http://dbpedia.org/ontology/father> ?child .
}
```

Note: This query is broken down into steps for clarity. In practice, you would need to combine these queries logically to get a single result, potentially using subqueries or temporary variables in SPARQL.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
959,47,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . },"```sparql
SELECT ?member WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election who is a politician.
  ?election <http://dbpedia.org/ontology/leader> ?leader .
  FILTER (?election = <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election>)
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 2: Determine the country where this leader resides.
  ?leader <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 3: Find Eiji Ōtsuka's alma mater that fits the criteria.
  <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  FILTER (?almaMater != <http://dbpedia.org/resource/Japan>)
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?types .
  VALUES ?types {<http://dbpedia.org/ontology/Organisation> <http://dbpedia.org/ontology/University> <http://dbpedia.org/ontology/EducationalOrganization>}
  
  # Step 4: Identify members of this alma mater.
  ?almaMater <http://dbpedia.org/ontology/member> ?member .
}
```",5,11,6,3,2,3,3,71,0,0,84,0,0.0,0
427,63,test,"Give me the party of the father of Lamberto Andreotti and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v6 <http://dbpedia.org/ontology/party> ?result . }","```sparql
# Query 1: Party of Lamberto Andreotti's Father
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://xmlns.com/foaf/0.1/familyName> ""Andreotti"" .
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/birthParent> ?father .
  ?father <http://dbpedia.org/ontology/politicalParty> ?party .
}

# Query 2: Name of the Party of Michele Pinto
SELECT ?partyName WHERE {
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/politicalParty> ?party .
  ?party <http://www.w3.org/2000/01/rdf-schema#label> ?partyName .
}

# Query 3: Party of Romano Antonio Prodi
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://xmlns.com/foaf/0.1/familyName> ""Prodi"" ;
    a <http://dbpedia.org/ontology/Politician>, <http://dbpedia.org/ontology/OfficeHolder> .
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?party .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
778,16,test,"Give me the entity in the award of Ralph L. Brinster and author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
# Step 1: Find the award associated with Ralph L. Brinster
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/ontology/awards> ?award .
}

# Step 2: Find software authored by Bill Joy
SELECT ?software WHERE {
  ?work <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Bill_Joy> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software> .
  BIND(?work AS ?software)
}

# Step 3: Find the common entity related to both the award and software
SELECT DISTINCT ?entity WHERE {
  VALUES (?award) { (<result from step 1>) }
  VALUES (?software) { (<result from step 2>) }

  OPTIONAL { ?award <http://dbpedia.org/ontology/entity> ?entity . }
  OPTIONAL { ?software <http://dbpedia.org/ontology/entity> ?entity . }
}
```

Note: The above query is structured in steps. In practice, you would need to execute the first two queries separately to obtain specific results for `?award` and `?software`, then use those results in the final query.",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
9,66,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . },"```sparql
SELECT ?almaMater WHERE {
  # Part 1: Mayor of Northern Ireland Forum who is a politician
  ?mayor <http://dbpedia.org/ontology/politician> true .
  ?mayor <http://dbpedia.org/property/mayorOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  
  # Part 2: Alma mater of the mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Part 3: Awardee of Royal Medal and their alma mater
  ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Royal_Medal> .
  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Part 4: Nickname of an organization that is both an educational institution and in Northern Ireland
  ?org <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?org <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
  ?org <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Northern_Ireland> .
  ?org <http://dbpedia.org/ontology/nickName> ?nickname .

  # Ensure all alma maters are the same
  FILTER(?almaMater = ?mayorAlmaMater && ?almaMater = ?awardeeAlmaMater)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
281,66,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?result <http://dbpedia.org/ontology/place> ?v6 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Step 1: Find Bob Heffron's birthplace that is a country.
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  BIND(?birthPlace AS ?country)
}

# Step 2: Find the war associated with his profession if it is a military unit.
SELECT ?war WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/profession> ?profession .
    ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?profession <http://dbpedia.org/ontology/battle> ?war .
  }
}

# Step 3: Find the professional who is both an office holder and a politician in the New Zealand Army.
SELECT ?professional WHERE {
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?professional <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .
}

# Step 4: Identify the war related to someone awarded the Knight Grand Cross of the Order of the Bath.
SELECT ?war WHERE {
  ?awardee <http://dbpedia.org/property/order> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
  ?awardee <http://dbpedia.org/ontology/battle> ?war .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
747,69,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v7 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
# Step 1: Find the writer of ""Apollo"" by Hardwell
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://purl.org/dc/terms/creator> ?writer .
}

# Step 2: Find the band associated with this writer
SELECT ?band WHERE {
  ?writer <http://dbpedia.org/ontology/memberOf> ?band .
}

# Step 3: Identify Shèna's persona and her band
SELECT ?shenaPersona, ?shenaBand WHERE {
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/persona> ?shenaPersona .
  ?shenaPersona <http://dbpedia.org/ontology/memberOf> ?shenaBand .
}

# Step 4: Find an athlete and soccer player decedent in Zolotonosha
SELECT ?athlete WHERE {
  ?athlete <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> ;
           <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
}

# Step 5: Determine their birth date
SELECT ?birthDate WHERE {
  ?athlete <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

# Step 6: Identify a person born on that specific date
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
}
```

Note: This query is structured to be executed in parts, as SPARQL does not support direct chaining of these complex queries without intermediate results. Each step should be run sequentially to gather the necessary data for subsequent steps.",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
92,21,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of Joseph Michael.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?artist WHERE {
  ?artist <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Nevermore> .
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  OPTIONAL {
    ?artist <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Band_of_Joseph_Michael> .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
161,70,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
# Step 1: Find El Director's commander in a force that is an event
SELECT ?elDirectorCommander WHERE {
  ?elDirector <http://dbpedia.org/ontology/knows> ""El Director"" .
  ?elDirector <http://dbpedia.org/ontology/commander> ?elDirectorCommander .
  ?force <http://dbpedia.org/ontology/commander> ?elDirectorCommander .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}

UNION

# Step 2: Find Francisco Franco's military force that is a societal event and a military conflict
SELECT ?francoForce WHERE {
  <http://dbpedia.org/resource/Francisco_Franco> <http://dbpedia.org/ontology/militaryForce> ?francoForce .
  ?francoForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
  ?francoForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Step 3: Find Indalecio Prieto's predecessor and their military force that is a societal event and a military conflict
SELECT ?predecessorCommander WHERE {
  ?prietoPredecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto> .
  ?force <http://dbpedia.org/ontology/commander> ?predecessorCommander .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
959,62,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of 2013 Júbilo Iwata season and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v5 . }","```sparql
SELECT ?member WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election who is a politician.
  ?leader <http://dbpedia.org/ontology/politician> _:a .
  ?leader <http://dbpedia.org/property/office> <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> .

  # Step 2: Determine their place of residence that is a country.
  ?leader <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 3: Find the person native to that country who was the manager of the 2013 Júbilo Iwata season and born in 1958.
  ?person <http://dbpedia.org/property/birthYear> ""1958""^^xsd:gyear .
  ?person <http://dbpedia.org/ontology/nationality> ?residence .
  ?person <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> .

  # Step 4: Identify this person's alma mater, ensuring it is Japanese, an organization, a university, and an educational institution.
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> ;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
  ?almaMater <http://dbpedia.org/property/country> ""Japan"" .

  # Step 5: Find a member associated with this alma mater.
  ?member <http://dbpedia.org/ontology/memberOf> ?almaMater .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
285,18,test,Give me the parent of the child of the spouse of Aristotle Onassis and spouse of the professional in .,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Jacqueline_Kennedy> <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> .
  }
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Jacqueline_Kennedy> .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
827,16,test,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859) and father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
# Step 1: Find children of Grand Duchess Maria Pavlovna who are royalty
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 2: Find grandchildren of Grand Duchess Maria Pavlovna who are royalty
SELECT DISTINCT ?grandChild WHERE {
  ?child <http://dbpedia.org/ontology/child> ?grandChild .
  ?grandChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  # Join with Step 1 results
  FILTER(?child IN {SELECT ?child WHERE {
    <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  }})
}

# Step 3: Find the father of Charles Augustus who is royalty
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 4: Find overlap between grandchildren and the father identified in step 3
SELECT DISTINCT ?grandChild WHERE {
  ?grandChild IN {SELECT ?grandChild WHERE {
    ?child <http://dbpedia.org/ontology/child> ?grandChild .
    ?grandChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    FILTER(?child IN {SELECT ?child WHERE {
      <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> <http://dbpedia.org/ontology/child> ?child .
      ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    }})
  }}
  ?grandChild = {SELECT ?father WHERE {
    <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  }}
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
747,39,test,Give me the band of Amba Shepherd and band of the person born as the persona of Shèna.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to find the band of Amba Shepherd
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/memberOf> ?band .
}

UNION

# Query to find the person born as Shèna and their band
SELECT ?band WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Shèna"" .
  ?person <http://dbpedia.org/ontology/memberOf> ?band .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
281,51,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?war WHERE {
  # Step 1: Find Bob Heffron's birthplace that is a country.
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 2: Find military units in the New Zealand Army.
  ?unit <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .
  ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .

  # Step 3: Find professionals associated with these units who are office holders and politicians.
  ?professional <http://dbpedia.org/ontology/profession> ?unit .
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 4: Identify wars these professionals participated in.
  ?professional <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
294,25,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query 1: Resting place of the awardee who is a politician and received the Distinguished Service Medal (U.S. Army)
SELECT DISTINCT ?restingPlace WHERE {
  ?person <http://dbpedia.org/ontology/receivedAward> <http://dbpedia.org/resource/Distinguished_Service_Medal_(United_States_Army)> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  OPTIONAL { ?person <http://dbpedia.org/ontology/placeOfBurial> ?restingPlace . }
}

UNION

# Query 2: Resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee
SELECT DISTINCT ?restingPlace WHERE {
  ?house <http://dbpedia.org/property/architect> ?architect .
  ?house <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> .
  ?house <http://dbpedia.org/resource/P._D._Houston_Jr._House> .
  OPTIONAL { ?architect <http://dbpedia.org/ontology/placeOfBurial> ?restingPlace . }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
378,41,test,"Give me the war of the person born as Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query to find wars associated with Carl Pontus Gahn
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
}

UNION

# Query to find wars commanded by commanders in the Peninsular War
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Query to find the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?claimToFame WHERE {
  <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
303,21,test,"Give me the entity in Panama and party of the person born, that is a politician, as Arnulfo Arias Madrid and party of Guillermo Endara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT DISTINCT ?politician WHERE {
  ?politician <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Panama> .
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Association with Arnulfo Arias Madrid's party
  ?party1 <http://dbpedia.org/property/partyLeader> <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> .
  ?politician <http://dbpedia.org/ontology/memberOf> ?party1 .

  # Association with Guillermo Endara's party
  ?party2 <http://dbpedia.org/property/partyLeader> <http://dbpedia.org/resource/Guillermo_Endara> .
  ?politician <http://dbpedia.org/ontology/memberOf> ?party2 .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
701,27,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify commanders in the Battle of Perire who are royalty
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Perire> .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 2: Find the father of these royal commanders
  ?father <http://dbpedia.org/property/father> ?commander .
  
  # Step 3: Determine the spouse of these fathers
  ?father <http://dbpedia.org/property/spouse> ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
959,58,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of University of Tsukuba and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?teamManager WHERE {
  # Step 1: Find the manager of the 1998 Kashima Antlers season who is a sports manager.
  <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?seasonManager .
  ?seasonManager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .

  # Step 2: Determine the team associated with this manager.
  ?team <http://dbpedia.org/property/team> ?seasonManager .
  
  # Step 3: Find the manager of that team.
  ?team <http://dbpedia.org/ontology/manager> ?teamManager .

  # Step 4: Ensure this manager is also a member of the University of Tsukuba.
  ?teamManager <http://dbpedia.org/property/member> <http://dbpedia.org/resource/University_of_Tsukuba> .
  
  # Step 5: Confirm that this manager's native residence is in the same country as Yōichi Masuzoe.
  ?teamManager <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
  ?yMasuzoeNativePlace <http://dbpedia.org/resource/Yōichi_Masuzoe#native_place> ?yMasuzoeCountry .
  ?nativePlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  FILTER(?nativePlace = ?yMasuzoeCountry)
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
421,20,test,Give me the band member of Senidah and native of the birthplace of Samir Bekrić and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
# Step 1: Get band members of Senidah
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Senidah> <http://dbpedia.org/ontology/member> ?member .
}

# Step 2: Find the birthplace of Samir Bekrić
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Step 3: Determine who was born as Edin Dervišhalidović
SELECT ?person WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Edin Dervišhalidović""@en .
  ?person <http://dbpedia.org/ontology/birthName> ""Edin Dervišhalidović"" .
}

# Step 4: Check if any band member is native to the birthplace of Samir Bekrić and was born as Edin Dervišhalidović
SELECT ?member WHERE {
  # Band members of Senidah
  <http://dbpedia.org/resource/Senidah> <http://dbpedia.org/ontology/member> ?member .
  
  # Native to the birthplace of Samir Bekrić
  ?member <http://dbpedia.org/ontology/nativeOf> ?birthPlace .
  <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Born as Edin Dervišhalidović
  ?member <http://www.w3.org/2000/01/rdf-schema#label> ""Edin Dervišhalidović""@en .
  ?member <http://dbpedia.org/ontology/birthName> ""Edin Dervišhalidović"" .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
767,44,test,Give me the alma mater of the administration of George K. Nash and reference to the alter ego of Black Hood and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
SELECT ?almaMater ?alterEgo ?entity WHERE {
  # Alma mater of George K. Nash's administration
  <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Alter ego of Black Hood
  ?blackHood <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
  FILTER(STRSTARTS(LCASE(?blackHood), ""http://dbpedia.org/resource/black_hood""))

  # Entity in Baden-Württemberg
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?almaMater .
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?alterEgo .
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Baden-Württemberg> .

}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
994,56,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
# Step 1: Find associated musical artists of Watchtower
SELECT ?watchtowerArtist WHERE {
  <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
  ?watchtowerArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 2: Find associated musical artists of Red Tide
SELECT ?redTideArtist WHERE {
  <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?redTideArtist .
  ?redTideArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 3: Find common associated musical artists
SELECT DISTINCT ?commonArtist WHERE {
  { 
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?commonArtist .
    ?commonArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  }
  {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?commonArtist .
    ?commonArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  }
}

# Step 4: Identify the persona of Don Dokken
SELECT ?persona WHERE {
  ?persona <http://dbpedia.org/property/personaOf> <http://dbpedia.org/resource/Don_Dokken> .
  ?persona <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 5: Find band members of the persona
SELECT ?bandMember WHERE {
  ?persona <http://dbpedia.org/property/bandMember> ?bandMember .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 6: Combine results
SELECT DISTINCT ?result WHERE {
  { 
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  }
  {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  }
  {
    ?persona <http://dbpedia.org/property/personaOf> <http://dbpedia.org/resource/Don_Dokken> .
    ?persona <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?persona <http://dbpedia.org/property/bandMember> ?result .
  }",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
488,64,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Find Tokugawa Masako's spouse who is royalty
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ?spouseLabel .
  FILTER(CONTAINS(LCASE(?spouseLabel), ""royalty"")) .

  # Step 2: Find the father of this spouse
  ?spouse <http://dbpedia.org/ontology/father> ?father .

  # Step 3: Determine the administration of this father
  ?father <http://dbpedia.org/ontology/administration> ?administration .

  # Step 4: Identify Saitō Hajime's war that is a military conflict, event, and societal event
  <http://dbpedia.org/resource/Sait%C5%8D_Hajime> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1, ?type2, ?type3 .
  FILTER(?type1 = <http://dbpedia.org/ontology/MilitaryConflict> && 
         ?type2 = <http://dbpedia.org/ontology/Event> &&
         ?type3 = <http://dbpedia.org/ontology/SocietalEvent>) .

  # Step 5: Find the commander of this war
  ?war <http://dbpedia.org/ontology/commander> ?commander .

  # Step 6: Determine the birth place of this commander
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
528,51,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
SELECT ?force ?war WHERE {
  # Find the force associated with Narciso Campero
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ""Narciso Campero"" .
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/force> ?force .
  }

  # Find the war associated with commanders in the Battle of La Rinconada de Ate
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
}
```",5,5,6,3,2,3,3,71,2,12,0,0.14285714285714285,1.0,0.25
92,24,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v2 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find Jim Sheppard who is an artist
SELECT ?jimSheppard WHERE {
  ?jimSheppard <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
  ?jimSheppard <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 2: Find Joseph Michael's band
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Joseph_Michael_(musician)> <http://dbpedia.org/property/band> ?band .
}

# Step 3: Find associated musical artists between Jim Sheppard and Joseph Michael's band
SELECT DISTINCT ?associatedArtist WHERE {
  VALUES (?jimSheppard) { (<result from step 1>) }
  VALUES (?band) { (<result from step 2>) }

  OPTIONAL { ?jimSheppard <http://dbpedia.org/ontology/member> ?associatedArtist . }
  OPTIONAL { ?band <http://dbpedia.org/property/member> ?associatedArtist . }
}
```

Note: The above query is structured to be executed in parts due to the complexity of chaining results directly within a single SPARQL query. You would need to execute step 1 and step 2 separately, then use their results in step 3.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
617,42,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of Antiochus (son of Antiochus III the Great) and spouse of Laodice IV.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Find the child of Seleucus II Callinicus who is royalty
  ?child1 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
  ?child1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 2: Find the parent of Antiochus (son of Antiochus III the Great)
  ?parent <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> .

  # Step 3: Find the spouse of Laodice IV
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Laodice_IV> .

  # Step 4: Find a common entity that is a child of the royal child, and matches parent and spouse
  ?result <http://dbpedia.org/ontology/birthParent> ?child1 .
  ?result = ?parent .
  ?result = ?spouse .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
92,57,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v5 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify Joseph Michael Furney
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael Furney"" .
  
  # Step 2: Determine the band associated with Joseph Michael Furney
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .

  # Step 3: Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?actor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> .
  
  # Ensure this person is a member of Nevermore and the band from step 2
  ?actor <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Nevermore_(band)> ;
         <http://dbpedia.org/ontology/memberOfBand> ?band .

  # Step 4: Identify associated musical artists for this person
  ?actor <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
92,35,test,"Give me the band of the person born as Joseph Michael Furney and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . }","```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael Furney"" .
  ?person <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Nevermore_(band)> .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
345,19,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen and figure known as the nickname of FC Vaduz.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> ?v4 . },"```sparql
SELECT DISTINCT ?team WHERE {
  # Step 1: Get Eiður Guðjohnsen's birth date
  <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?birthDate .

  # Step 2: Find people who are both soccer players and managers born on that date
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .

  # Step 3: Get FC Vaduz's nickname
  ?vaduz <http://dbpedia.org/resource/Football_Club_Vaduz> .
  ?vaduz <http://dbpedia.org/ontology/nickname> ?nickname .

  # Step 4: Find the team of these individuals
  ?person <http://dbpedia.org/ontology/team> ?team .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
801,29,test,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in .","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  
  ?work <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>, <http://dbpedia.org/ontology/Song> .
  
  ?work <http://dbpedia.org/ontology/professionalIn> <http://dbpedia.org/resource/50_Cent> .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
184,69,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of the child of Archduke Joseph Karl of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v7 . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
# Step 1: Find Archduchess Margaret's parent
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> <http://dbpedia.org/ontology/birthParent> ?parent .
}

# Step 2: Find the child of this parent
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/child> ?child .
}

# Step 3: Find Archduke Joseph Karl's child
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/birthChild> ?child .
}

# Step 4: Find the parent of this child
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
}

# Step 5: Identify the landmark at 96.0 meters elevation that is a settlement and its native region/city
SELECT ?landmark ?native WHERE {
  ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#elevation> ""96.0""^^xsd:float .
  ?landmark <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/Settlement108069068> .
  ?landmark <http://dbpedia.org/property/nativeTo> ?native .
}

# Step 6: Find the parent of this native",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
391,62,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/nickname> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Determine the claim to fame of Sherry Hormann's spouse that is a work
SELECT ?work WHERE {
  ?spouse <http://dbpedia.org/ontology/claimToFame> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
}

# Step 3: Find the actor associated with ""All About the Andersons""
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 4: Identify the nickname for Jackson, Tennessee
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/nickName> ?nickname .
}

# Step 5: Find the native of this nickname
SELECT ?native WHERE {
  ?person <http://dbpedia.org/ontology/nickName> ?nickname .
  ?person <http://dbpedia.org/ontology/birthPlace> ?place .
  ?place <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,45,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of Compton, California and actor of The Departed.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?movie WHERE {
  ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?actor <http://dbpedia.org/property/nativePlace> <http://dbpedia.org/resource/Compton,_California> .
  ?actor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/The_Departed> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
  ?actor <http://dbpedia.org/ontology/actor> ?movie .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
427,59,test,Give me the reference to the name of the party of Michele Pinto and party of the father of the alumnus of Massachusetts Institute of Technology.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
# Query for Michele Pinto's party
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/politicalParty> ?party .
}

UNION

# Query for the father of an MIT alumnus and his party
SELECT ?fatherParty WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?alumnus <http://dbpedia.org/property/father> ?father .
  ?father <http://dbpedia.org/ontology/politicalParty> ?fatherParty .
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
754,18,test,Give me the parent of the parent of the parent of Min Linka and parent of the child of Ram Khamhaeng.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
# Step 1: Find Min Linka's grandparent (parent of the parent)
WITH {
  SELECT ?grandparent WHERE {
    ?minLinka <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Min_Linka> .
    ?minLinka <http://dbpedia.org/ontology/father> ?parent1 .
    ?parent1 <http://dbpedia.org/ontology/father> ?grandparent .
  }
} AS %grandparents

# Step 2: Find Min Linka's great-grandparent (parent of the grandparent)
WITH %grandparents {
  SELECT ?greatGrandparent WHERE {
    ?grandparent <http://dbpedia.org/ontology/father> ?greatGrandparent .
  }
} AS %greatGrandparents

# Step 3: Find Ram Khamhaeng's child and its parent
WITH %greatGrandparents {
  SELECT ?childParent WHERE {
    ?ramKhamhaeng <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Ram_Khamhaeng> .
    ?ramKhamhaeng <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/father> ?childParent .
  }
} AS %childParents

# Step 4: Find the common entity between great-grandparent of Min Linka and parent of Ram Khamhaeng's child
SELECT DISTINCT ?result WHERE {
  VALUES ?greatGrandparent { %greatGrandparents }
  VALUES ?childParent { %childParents }
  
  FILTER (?greatGrandparent = ?childParent)
  BIND(?greatGrandparent AS ?result)
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
378,54,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
# Part 1: War associated with Carl Pontus Gahn
SELECT ?war WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
  ?person <http://dbpedia.org/ontology/commander> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?war)
}

UNION

# Part 2: Claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?claimToFame WHERE {
  <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
}

UNION

# Part 3: War related to a commander in reference to the Peninsular War
SELECT ?war WHERE {
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  ?peninsularWar <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/reference> ?reference .
  ?reference <http://dbpedia.org/ontology/mentions> ?commander .
  BIND(?battle AS ?war)
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
701,65,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . },"```sparql
# Step 1: Find Seti I's child
SELECT ?setiChild WHERE {
  <http://dbpedia.org/resource/Seti_I> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> ?setiChild .
}

# Step 2: Find the grandchild of Seti I
SELECT ?grandchild WHERE {
  ?setiChild <http://dbpedia.org/ontology/child> ?grandchild .
}

# Step 3: Determine the parent of this grandchild (should be one of Seti I's children)
SELECT ?parent WHERE {
  ?grandchild <http://dbpedia.org/ontology/parent> ?parent .
}

# Step 4: Identify Merneptah's father and his spouse
SELECT ?merneptahFather, ?spouse WHERE {
  <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/ontology/father> ?merneptahFather .
  ?merneptahFather <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 5: Find Nefertari's child and their parent
SELECT ?nefertariChild, ?parent WHERE {
  <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?nefertariChild .
  ?nefertariChild <http://dbpedia.org/ontology/parent> ?parent .
}

# Final query to find the common entity
SELECT DISTINCT ?result WHERE {
  # Parent of Seti I's grandchild
  ?grandchild <http://dbpedia.org/ontology/parent> ?result .

  # Spouse of Merneptah's father
  ?merneptahFather <http://dbpedia.org/ontology/spouse> ?result .

  # Parent of Nefertari's child
  ?nefertariChild <http://dbpedia.org/ontology/parent> ?result .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
783,18,test,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . }","```sparql
# Step 1: Identify Priscilla Opoku-Kwarteng as an artist and musical artist
SELECT ?priscilla WHERE {
  <http://dbpedia.org/resource/Priscilla_Opoku-Kwarteng> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/Artist>, <http://dbpedia.org/ontology/MusicalArtist>)).
}

# Step 2: Find band members associated with Priscilla Opoku-Kwarteng
SELECT DISTINCT ?bandMember WHERE {
  ?priscilla <http://dbpedia.org/property/member> ?band .
  ?band <http://dbpedia.org/property/member> ?bandMember .
  FILTER(?priscilla = <http://dbpedia.org/resource/Priscilla_Opoku-Kwarteng>)
}

# Step 3: For each band member, find associated musical artists
SELECT DISTINCT ?associatedArtist WHERE {
  ?bandMember <http://dbpedia.org/ontology/member> ?group .
  ?group <http://dbpedia.org/property/member> ?associatedArtist .
  FILTER(?bandMember IN (SELECT ?bm WHERE { ... })) # Replace with results from Step 2
}

# Step 4: Identify Samuel Ofori Amponsah as an artist and musical artist
SELECT ?samuel WHERE {
  <http://dbpedia.org/resource/Samuel_Ofori_Amponsah> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/Artist>, <http://dbpedia.org/ontology/MusicalArtist>)).
}

# Step 5: Find band members associated with Samuel Ofori Amponsah
SELECT DISTINCT ?bandMemberSamuel WHERE {
  ?samuel <http://dbpedia.org/property/member> ?band .
  ?band <http://dbpedia.org/property/member> ?bandMemberSamuel .
  FILTER(?samuel = <http://dbpedia.org/resource/Samuel_Ofori_Amponsah>)
}

# Step 6: Find overlap or association between band members from Priscilla and Samuel
SELECT DISTINCT ?commonBandMember WHERE {
  ?commonBandMember IN (SELECT ?bm FROM { ... }) # Replace with results from Step 2
  ?commonBandMember IN (SELECT ?bs FROM { ... }) # Replace with results from Step 5
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
959,57,test,"Give me the member of University of Tsukuba and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of Takashi Sekizuka.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v1 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
SELECT ?member WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election who is a politician.
  ?leader <http://dbpedia.org/ontology/politician> true ;
           <http://dbpedia.org/property/electionLeader> <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> .

  # Step 2: Determine the country where this leader resides.
  ?leader <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 3: Find the manager of the team associated with Takashi Sekizuka.
  <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/property/teamManager> ?manager .
  
  # Step 4: Locate members of the University of Tsukuba who are natives of that country.
  ?member <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> ;
          <http://dbpedia.org/ontology/nationality> ?residence .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
328,46,test,Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?awardee WHERE {
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi#Military_commanders> .
  ?commander <http://purl.org/dc/terms/receivedAward> ?award .
  ?award <http://purl.org/dc/terms/awardee> ?awardee .
}
```",5,5,6,3,2,3,3,71,0,0,5,0,0.0,0
404,66,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
SELECT ?spouse WHERE {
  ?princess rdf:type dbo:Person ;
            foaf:name ""Princess Victoria Louise of Prussia"" ;
            dbo:royaltyType dbo:Royalty .
  
  ?princess dbo:spouse ?spouse .

  ?spouse dbo:father ?father .

  ?father dbo:child ?child .
  ?child rdf:type dbo:Person ;
         dbo:royaltyType dbo:Royalty ;
         foaf:name ""Ernest Augustus, Duke of Brunswick"" .

}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
161,66,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . }","```sparql
# Find the commander in the force associated with ""El Director""
SELECT ?commander WHERE {
  ?elDirector <http://www.w3.org/2000/01/rdf-schema#label> ""El Director""@en .
  ?elDirector <http://dbpedia.org/ontology/militaryForce> ?force1 .
  ?force1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?force1 <http://dbpedia.org/ontology/commander> ?commander .
}

UNION

# Find the commander in Francisco Franco's military forces that are societal events and military conflicts
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Francisco_Franco> <http://dbpedia.org/ontology/militaryForce> ?force2 .
  ?force2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1, ?type2 .
  FILTER (?type1 = <http://dbpedia.org/ontology/SocietalEvent> && ?type2 = <http://dbpedia.org/ontology/MilitaryConflict>) .
  ?force2 <http://dbpedia.org/ontology/commander> ?commander .
}

UNION

# Find the commander in Francisco Largo Caballero's military forces that are societal events and military conflicts
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/ontology/militaryForce> ?force3 .
  ?force3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1, ?type2 .
  FILTER (?type1 = <http://dbpedia.org/ontology/SocietalEvent> && ?type2 = <http://dbpedia.org/ontology/MilitaryConflict>) .
  ?force3 <http://dbpedia.org/ontology/commander> ?commander .
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
184,21,test,Give me the parent of Archduchess Ilona of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?archduchessParent ?budaParent WHERE {
  # Find the parent of Archduchess Ilona of Austria
  <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/parent> ?archduchessParent .

  # Find a notable person native to Budapest and their parent
  ?person <http://dbpedia.org/property/nationality> ""Hungarian"" .
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
  ?person <http://dbpedia.org/ontology/parent> ?budaParent .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,70,test,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . },"```sparql
SELECT ?native WHERE {
  # Step 1: Identify the Leader of the 2010 Japanese House of Councillors Election
  ?leader <http://dbpedia.org/ontology/politician> _:a .
  ?leader <http://dbpedia.org/property/election> <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> .

  # Step 2: Find the Manager of the Team Managed by the Manager of the 1998 Kashima Antlers Season
  ?manager1 <http://dbpedia.org/ontology/sportsManager> _:b .
  ?manager1 <http://dbpedia.org/property/team> <http://dbpedia.org/resource/1998_Kashima_Antlers_season> .
  ?team <http://dbpedia.org/ontology/manager> ?manager2 .

  # Step 3: Determine the Alma Mater of Eiji Ōtsuka
  <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
             <http://dbpedia.org/ontology/university> _:c ;
             <http://dbpedia.org/ontology/educationalInstitution> _:d .
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER (CONTAINS(LCASE(?label), ""japanese""))

  # Step 4: Find the Native of the Residence Country of the Leader
  ?leader <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?native <http://dbpedia.org/ontology/birthPlace> ?residence .

}
```",8,15,9,3,3,3,3,71,0,0,2,0,0.0,0
547,49,test,Give me the resting place of the child of James Burton (property developer) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query 1: Resting place of the child of James Burton (property developer)
SELECT ?child ?restingPlace WHERE {
  <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
  OPTIONAL { ?child <http://dbpedia.org/ontology/restingPlace> ?restingPlace . }
}

# Query 2: Resting place of the awardee of the award of Gerald Graham
SELECT ?award ?awardee ?restingPlace WHERE {
  <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/ontology/receivedAward> ?award .
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  OPTIONAL { ?awardee <http://dbpedia.org/ontology/restingPlace> ?restingPlace . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
378,66,test,"Give me the war of the person born as Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT DISTINCT ?carlWar ?peninsularCommander ?triggeEvent WHERE {
  # Part 1: War associated with Carl Pontus Gahn
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?carlWar .
  
  # Part 2: Commander of the Peninsular War and their claim to fame
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?peninsularCommander .
  ?peninsularCommander <http://dbpedia.org/ontology/claimToFame> ?fame .

  # Part 3: Thomas Trigge's involvement in a military conflict that is also a societal event and an event
  <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?triggeEvent .
  ?triggeEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?triggeEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?triggeEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
9,56,test,"Give me the alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
# Step 1: Find the alma mater of Allen Hill (Scientist)
SELECT ?almaMaterHill WHERE {
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMaterHill .
}

# Step 2: Identify the organization in Northern Ireland that is both an organization and educational institution with a nickname
SELECT ?organization WHERE {
  ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
  ?organization <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Northern_Ireland> .
  OPTIONAL { ?organization <http://dbpedia.org/ontology/nickName> ?nickname . }
}

# Step 3: Find the mayor of Northern Ireland Forum and their alma mater
SELECT ?almaMaterMayor WHERE {
  ?mayor <http://dbpedia.org/property/politicalAffiliation> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMaterMayor .
}

# Step 4: Find common alma mater
SELECT DISTINCT ?commonAlmaMater WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> 
    ?mayor 
  }
  ?person <http://dbpedia.org/ontology/almaMater> ?commonAlmaMater .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
312,9,test,"Give me the entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy) and entity in the birthplace of Giorgio Grigolli.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v1 . },"```sparql
SELECT ?entity WHERE {
  # Entity is part of the administration of Democratic Party (Italy)
  <http://dbpedia.org/resource/Democratic_Party_(Italy)> <http://dbpedia.org/ontology/administration> ?entity .

  # The entity must be a settlement, region, Italian state
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?entity <http://dbpedia.org/property/countryName> ""Italy""@en .

  # The entity must also be in the birthplace of Giorgio Grigolli
  <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/Settlement>, <http://dbpedia.org/ontology/Region>, <http://dbpedia.org/ontology/Country>)).
  ?birthPlace = ?entity .
}
```",4,8,5,2,2,2,2,9,0,0,587,0,0.0,0
232,69,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?actor WHERE {
  # Step 1: Identify Jon Pertwee by birth name
  ?jonPertwee <http://dbpedia.org/ontology/birthName> ""Jon Pertwee"" .
  
  # Step 2: Find Sean Pertwee as child of Jon Pertwee
  ?seanPertwee <http://dbpedia.org/ontology/father> ?jonPertwee .

  # Step 3: Identify Sean Pertwee's claim to fame involving a film and military conflict
  ?claimToFame <http://dbpedia.org/ontology/person> ?seanPertwee .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1 .
  FILTER (?type1 = dbpedia:Film || ?type1 = dbpedia:MilitaryConflict) .

  # Step 4: Find the actor in the film
  OPTIONAL { ?claimToFame <http://dbpedia.org/ontology/starring> ?actor . }

  # Step 5: Identify a French politician who is an office holder
  ?politician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> dbpedia:Politician .
  ?politician <http://dbpedia.org/ontology/officeHolder> ?office .

  # Step 6: Determine their British residence
  ?residence <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> dbpedia:Settlement .
  ?politician <http://dbpedia.org/ontology/residence> ?residence .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
391,70,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of the figure known as Hub City and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v1 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v1 <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Determine the claim to fame of Sherry Hormann's spouse
SELECT ?claimToFame WHERE {
  ?spouse <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
}

# Step 3: Find the actor associated with that work
SELECT ?actor WHERE {
  ?claimToFame <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 4: Identify the figure known as ""Hub City"" and find their native place and professional field
SELECT ?nativePlace, ?professional WHERE {
  <http://dbpedia.org/resource/Hub_City> <http://dbpedia.org/ontology/nationality> ?nationality .
  ?nationality <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
  <http://dbpedia.org/resource/Hub_City> <http://dbpedia.org/ontology/profession> ?professional .
}

# Step 5: Locate a movie that fits all these criteria
SELECT ?movie WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://dbpedia.org/ontology/work> ?workType1 .
  ?workType1 <http://www.w3.org/2000/01/rdf-schema#subClassOf>* <http://dbpedia.org/ontology/Work> .
  ?movie <http://dbpedia.org/ontology/tvShow> ?tvShowType .
  ?tvShowType <http://www.w3.org/2000/01/rdf-schema#subClassOf>* <http://dbpedia.org/ontology/TVSeries> .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
161,28,test,"Give me the military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
# Part 1: Military force of Spanish Civil War
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/militaryForce> ?force .
}

UNION

# Part 2: Military force of societal event and military conflict involving Francisco Franco in Biscay Campaign
SELECT ?event ?force WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?event <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> .
  ?event <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Biscay_Campaign> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?force .
}
```",4,7,5,2,3,3,3,71,0,0,3,0,0.0,0
783,20,test,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?associatedMusicalArtist WHERE {
  # Step 1: Identify the person born as Samuel Ofori Amponsah
  ?person <http://dbpedia.org/ontology/birthName> ""Samuel Ofori Amponsah"" .
  
  # Step 2: Find band members associated with this person
  ?bandMember <http://dbpedia.org/ontology/member> ?person .
  
  # Step 3: Ensure these band members are also artists and musical artists
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> ;
              <http://dbpedia.org/ontology/MusicalArtist> .
  
  # Step 4: Identify any persona of Ebony Reigns related to these individuals
  ?persona <http://dbpedia.org/ontology/personaOf> ""Ebony Reigns"" .
  ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?persona .
  
  # Step 5: Find the associated musical artist linked to these band members
  ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedMusicalArtist .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
281,64,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in Colony of New Zealand.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Step 1: Find the award received by Jonathon Band
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Jonathan_Band> <http://dbpedia.org/ontology/award> ?award .
}

# Step 2: Find wars associated with this award
SELECT DISTINCT ?war WHERE {
  ?award <http://dbpedia.org/property/awardee> ?person .
  ?person <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 3: Find a profession that is a military unit and its associated war
SELECT DISTINCT ?professionWar WHERE {
  ?person <http://dbpedia.org/ontology/profession> ?militaryUnit .
  ?militaryUnit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?person <http://dbpedia.org/ontology/battle> ?professionWar .
  ?professionWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 4: Find an office holder who is a politician in the New Zealand Army and was part of the Colony of New Zealand, then find their associated war
SELECT DISTINCT ?officeHolderWar WHERE {
  ?person <http://dbpedia.org/ontology/officeHolder> ?office .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .
  ?person <http://dbpedia.org/ontology/entityLocatedIn> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
  ?person <http://dbpedia.org/ontology/battle> ?officeHolderWar .
  ?officeHolderWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
801,50,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Find the writer who is a musical artist and an artist for ""40 Dayz & 40 Nightz""
  ?writer <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Step 2: Find the producer of this writer's work
  ?work <http://purl.org/dc/terms/creator> ?writer .
  ?producer <http://dbpedia.org/ontology/producer> ?work .

  # Step 3: Identify the professional (musical artist) related to this producer's work
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?producerWork <http://purl.org/dc/terms/creator> ?producer .
  ?producerWork <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?producerWork <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  ?producerWork <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .

  # Step 4: Find the associated musical artist of this professional
  ?professional <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",5,11,6,3,2,3,3,71,0,0,9,0,0.0,0
435,20,test,"Give me the work of Article 62, Section IV of Constitution of Iceland and territory administered from Reykjavík and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . }","```sparql
# Query for work related to Article 62, Section IV of Constitution of Iceland
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Article_62,_Section_IV_of_Constitution_of_Iceland> <http://purl.org/dc/terms/references> ?work .
}

UNION

# Query for territory administered from Reykjavík
SELECT ?territory WHERE {
  ?territory <http://dbpedia.org/ontology/administrativeUnit> <http://dbpedia.org/resource/Reykjavík> .
}

UNION

# Query for region of the time zone in Bombali Shebora Chiefdom
SELECT ?region WHERE {
  <http://dbpedia.org/resource/Bombali_Shebora_Cheifdom> <http://www.w3.org/2006/timezone#timeZone> ?timezone .
  ?timezone <http://www.w3.org/2006/timezone#inRegion> ?region .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
232,64,test,"Give me the actor of Dog Soldiers (film) and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
SELECT ?actor WHERE {
  # Step 1: Find Jon Pertwee's birth name and child
  ?jonPertwee <http://dbpedia.org/ontology/birthName> ""Jon Pertwee"" .
  ?child <http://dbpedia.org/ontology/father> ?jonPertwee .

  # Step 2: Identify the politician native to France, who is an office holder
  ?politician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> ;
              <http://dbpedia.org/ontology/birthPlace> ?birthPlace ;
              <http://dbpedia.org/ontology/officeHolder> ?office .

  # Step 3: Ensure the birth place is a settlement and British
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> ;
              <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 4: Find the residence of this politician that is a settlement and British
  ?politician <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> ;
             <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 5: Find the actor of Dog Soldiers who is native to this residence
  ?actor <http://dbpedia.org/ontology/nationality> ?residence .
  ?actor <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
232,49,test,"Give me the child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child WHERE {
  # Step 1: Identify John Devon Roland Pertwee
  ?person <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .
  
  # Step 2: Find his residence that is a settlement and British
  ?person <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 3: Find the native of this residence who is a politician and office holder in France
  ?native <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
  ?native <http://dbpedia.org/ontology/birthPlace> ?residence .
  ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?native <http://dbpedia.org/ontology/officeHolder> ?office .

  # Step 4: Find the child of John Devon Roland Pertwee
  ?person <http://dbpedia.org/ontology/child> ?child .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
701,50,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Seti I's child
  ?childSetiI <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seti_I> .
  
  # Step 2: Find the grandchild of Seti I
  ?grandChild <http://dbpedia.org/ontology/birthParent> ?childSetiI .

  # Step 3: Determine the parent of this grandchild
  ?parent <http://dbpedia.org/ontology/birthParent> ?grandChild .
  
  # Step 4: Identify Merneptah's father
  ?merneptahFather <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Merenptah> .

  # Step 5: Find the spouse of Merneptah's father
  ?spouse <http://dbpedia.org/property/spouse> ?merneptahFather .
  
  # Final step: Match the parent from step 3 with the spouse from step 5
  FILTER (?parent = ?spouse)
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
328,47,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of the person decedent at Budapest.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . }","```sparql
SELECT ?awardee WHERE {
  # Step 1: Find awards of Bruce Fraser
  <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/award> ?award .

  # Step 2: Identify the force associated with a person who died in Budapest
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Budapest""@en .
  ?person <http://dbpedia.org/property/deathPlace> ?place .
  FILTER(?place = <http://dbpedia.org/resource/Budapest>) .

  # Assuming the person was part of a military force
  ?person <http://dbpedia.org/ontology/memberOf> ?force .
  
  # Find commander in that force
  ?commander <http://dbpedia.org/ontology/commander> ?force .

  # Step 3: Link awardees to these elements
  ?award <http://dbpedia.org/property/recipient> ?awardee .
}
```",5,5,6,3,2,3,3,71,0,0,5,0,0.0,0
747,66,test,Give me the band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song) and person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . },"```sparql
# Part 1: Band of the person born as the persona of Shèna
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName ;
          <http://dbpedia.org/ontology/memberOfBand> ?band .
}

UNION

# Part 2: Band of the writer of Apollo (Hardwell song)
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://dbpedia.org/ontology/memberOfBand> ?band .
}

UNION

# Part 3: Person born on the birth date of Pavlo Khudzik
SELECT ?person ?band WHERE {
  <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate ;
          <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
492,64,test,"Give me the person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Part 1: Person Decedent at the Work of the Author of ""French Algeria""
SELECT ?decedent WHERE {
  ?work <http://dbpedia.org/ontology/author> ?author .
  ?author <http://dbpedia.org/property/book> <http://dbpedia.org/resource/French_Algeria_(book)> .
  ?work <http://dbpedia.org/ontology/decedent> ?decedent .
}

UNION

# Part 2: Person Decedent at the Capital, that is a Settlement, of Khemis Miliana District
SELECT ?decedent WHERE {
  <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?country .
  ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital .
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?capital <http://dbpedia.org/ontology/decedent> ?decedent .
}

UNION

# Part 3: Commander in Franco-Hova Wars
SELECT ?commander WHERE {
  ?war <http://dbpedia.org/ontology/name> ""Franco-Hova Wars"" .
  ?war <http://dbpedia.org/ontology/commander> ?commander .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
184,53,test,"Give me the child of Archduke Joseph August of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
# Step 1: Find children of Archduke Joseph August
SELECT ?childAugust WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?childAugust .
}

# Step 2: Identify the landmark at elevation 96.0 meters that is a settlement and find its native's parent
SELECT ?parentNative WHERE {
  ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#lat> ?lat ;
            <http://www.w3.org/2003/01/geo/wgs84_pos#long> ?long .
  FILTER (?elevation = 96.0)
  ?landmark <http://dbpedia.org/ontology/elevation> ?elevation .
  ?landmark <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?native <http://dbpedia.org/ontology/nationality> ?landmark .
  ?native <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://dbpedia.org/ontology/parent> ?parentNative .
}

# Step 3: Find the child of Archduke Joseph Francis
SELECT ?childFrancis WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?childFrancis .
}

# Final step: Combine to find the individual who fits all criteria
SELECT DISTINCT ?individual WHERE {
  VALUES (?childAugust) { ?childAugust }
  VALUES (?parentNative) { ?parentNative }
  VALUES (?childFrancis) { ?childFrancis }
  
  ?individual <http://dbpedia.org/ontology/child> ?childAugust .
  ?individual <http://dbpedia.org/ontology/parent> ?parentNative .
  ?individual <http://dbpedia.org/ontology/parent> ?childFrancis .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
701,31,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?grandParent WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
  ?spouse <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/parent> ?parent .
  ?parent <http://dbpedia.org/ontology/parent> ?grandParent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
328,50,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . },"```sparql
SELECT ?commander WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
  ?person <http://dbpedia.org/ontology/leaderOf> ?office .
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?force <http://dbpedia.org/ontology/commander> ?commander .
  ?person <http://dbpedia.org/ontology/memberOf> ?force .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
179,19,test,Give me the parent of the child of the parent of Vajiralongkorn and person born as the birth name of Sirikit.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find Vajiralongkorn's parent
  <http://dbpedia.org/resource/Vajiralongkorn> <http://dbpedia.org/ontology/father> ?parent .

  # Step 2: The child of that parent is Vajiralongkorn himself, so we skip to step 3

  # Step 3: Find the person born with the birth name of Sirikit
  ?sirikit <http://dbpedia.org/property/birthName> ""Sirikit"" .

  # Step 4: Find the parent of this person
  ?sirikit <http://dbpedia.org/ontology/father> ?result .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
77,18,test,Give me the force of the mayor of Congress Poland and war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query 1: Force of the Mayor of Congress Poland
SELECT ?force WHERE {
  ?mayor <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Congress_Poland> .
  ?mayor <http://dbpedia.org/ontology/memberOf> ?force .
}

# Query 2: War of the Awardee of Maxim Grigorievich Vlasov's Award
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/ontology/receivedAward> ?award .
  ?awardee <http://dbpedia.org/ontology/receivedAward> ?award .
  ?awardee <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",5,5,6,3,2,3,2,20,0,0,24,0,0.0,0
303,20,test,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Guillermo Endara and party of Arnulfo Arias.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Find the country where El Valle de Antón is located
  <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Find entities related to Guillermo Endara's party in that country
  ?endaraParty <http://dbpedia.org/property/politicalParty> <http://dbpedia.org/resource/Guillermo_Endara> .
  ?endaraParty <http://dbpedia.org/ontology/location> ?location .

  # Find entities related to Arnulfo Arias' party in that country
  ?ariasParty <http://dbpedia.org/property/politicalParty> <http://dbpedia.org/resource/Arnulfo_Arias> .
  ?ariasParty <http://dbpedia.org/ontology/location> ?location .

  # Find the common entity related to both parties
  ?endaraParty <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?entity .
  ?ariasParty <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?entity .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
959,24,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?native WHERE {
  # Step 1: Find Yōichi Masuzoe's residence that is a country
  <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 2: Find the manager of the 2013 Júbilo Iwata season
  <http://dbpedia.org/resource/2013_J%C3%BAbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?manager .
  
  # Step 3: Get the native place (birthplace) of the manager
  ?manager <http://dbpedia.org/ontology/birthPlace> ?native .
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
617,64,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of Laodice IV and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?finalChild WHERE {
  # Step 1: Find the successor of Antiochus II Theos who is a royalty
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_II_Theos> .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of this successor who is a royalty
  ?child1 <http://dbpedia.org/ontology/birthParent> ?successor .
  ?child1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Determine the spouse of Laodice IV from these children
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Laodice_IV> .
  FILTER(?child1 = ?spouse)

  # Step 4: Identify the parent of the child of the commander in the Battle of Panium
  <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?commander .
  ?child2 <http://dbpedia.org/ontology/birthParent> ?commander .

  # Step 5: Find the child of the spouse who is also a parent of the child from step 4
  ?finalChild <http://dbpedia.org/ontology/birthParent> ?spouse .
  ?parentOfChild2 <http://dbpedia.org/ontology/birthParent> ?child2 .
  FILTER(?finalChild = ?parentOfChild2)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
281,59,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Step 1: Find the leader of the 1962 New South Wales state election
  ?election <http://dbpedia.org/ontology/politicalLeader> ?leader .
  FILTER(?election = <http://dbpedia.org/resource/1962_New_South_Wales_state_election>) .

  # Step 2: Determine the birthplace that is a country
  ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 3: Find the awardee of an award associated with Jonathon Band
  ?award <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Jonathan_Band> .
  ?award <http://dbpedia.org/property/recipient> ?awardee .

  # Step 4: Identify any war related to this awardee
  ?awardee <http://dbpedia.org/ontology/battle> ?war .

  # Final step: Find entities in the birthplace (country) of the politician that are also related to the war involving the awardee
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER(?entity IN (?birthPlace, ?war))
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
963,20,test,"Give me the administration of the ruling party, that is a political party, in the location for 21205 and entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton.","SELECT ?result WHERE { <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leaderParty> ?v5 . ?v4 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
SELECT ?administration WHERE {
  # Step 1: Find the time zone for Herzegovina-Neretva Canton
  <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/ontology/timeZone> ?timeZone .

  # Step 2: Find countries in this time zone
  ?country <http://www.w3.org/2006/vcard/ns#adr;timezone> ?timeZone .
  
  # Step 3: Find regions within these countries
  ?region <http://dbpedia.org/ontology/country> ?country .
  ?region a <http://dbpedia.org/ontology/Region> .

  # Step 4: Identify entities in those regions
  ?entity <http://dbpedia.org/ontology/locatedInRegion> ?region .
  
  # Step 5: Determine the location for ""21205""
  ?location <http://dbpedia.org/property/postalCode> ""21205""^^<http://www.w3.org/2001/XMLSchema#string> .
  ?location <http://dbpedia.org/ontology/location> ?entity .

  # Step 6: Find the ruling party's administration
  ?party <http://dbpedia.org/ontology/rulingParty> ?administration .
  ?party a <http://dbpedia.org/ontology/POLITICAL_PARTY> .
  ?location <http://dbpedia.org/property/administration> ?party .
}
```",6,8,7,3,2,3,2,20,0,0,84,0,0.0,0
328,42,test,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?person WHERE {
  # Condition 1: Commander in Eastern Front (World War II)
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .

  # Condition 2: Leader of an office that is a government agency
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?person <http://dbpedia.org/ontology/leader> ?office .

  # Condition 3: Awardee of the same award as Bruce Fraser, 1st Baron Fraser of North Cape
  ?award <http://dbpedia.org/property/awardee> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
  ?person <http://dbpedia.org/ontology/recipient> ?award .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
488,66,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in Boshin War and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Step 1: Find the father of Yūki Hideyasu who is a politician
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}

# Step 2: Find the death place of this father
SELECT ?deathPlace WHERE {
  ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}

# Step 3: Find the commander in Boshin War and their birthplace
SELECT ?commander, ?birthPlace WHERE {
  <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Step 4: Find the spouse of Tokugawa Masako who is royalty
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 5: Find the father of this spouse and his administration
SELECT ?father, ?administration WHERE {
  ?spouse <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/administration> ?administration .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
10,22,test,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . }","```sparql
SELECT DISTINCT ?artist WHERE {
  # Matt Colton's associated musical artists
  OPTIONAL { 
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  }
  
  # Luke Francis Vibert's associated musical artists and band membership
  OPTIONAL {
    <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://dbpedia.org/ontology/bandMember> ?band .
    ?band <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  }
}
```",4,6,5,2,2,2,3,28,1,3,0,0.25,1.0,0.4
92,46,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
SELECT ?associatedArtist WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://dbpedia.org/property/memberOf> ?band .

  ?film <http://dbpedia.org/resource/2006_film> <http://dbpedia.org/resource/Nevermore_(2006_film)> .
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?film <http://dbpedia.org/ontology/reference> ?reference .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  ?band <http://dbpedia.org/property/member> ?associatedArtist .
  ?reference <http://dbpedia.org/property/associatedWith> ?associatedArtist .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
767,69,test,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
SELECT ?almaMater ?settlement WHERE {
  # Step 1: Find alma mater of an entity in George K. Nash's administration
  ?entityInAdmin <http://dbpedia.org/ontology/administration> <http://dbpedia.org/resource/G._George_Nash> .
  ?entityInAdmin <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Step 2: Find entity in administration related to Dustin Lynch album writer
  OPTIONAL {
    ?writer <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> .
    ?entityInAdmin <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?writer .
  }

  # Step 3: Check if the entity is a settlement
  OPTIONAL {
    ?entityInAdmin <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    BIND(?entityInAdmin AS ?settlement)
  }

  # Step 4: Reference to alter ego of Matthew Burland's persona
  OPTIONAL {
    ?fictionalCharacter <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
    ?fictionalCharacter <http://dbpedia.org/ontology/persona> <http://dbpedia.org/resource/Matthew_Burland> .
    ?entityInAdmin <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?fictionalCharacter .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
16,44,test,Give me the person born as the birth name of Gigi Rice and spouse of Ted McGinley and professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?person WHERE {
  # Condition 1: Person born with birth name Gigi Rice
  ?person <http://dbpedia.org/ontology/birthName> ""Gigi Rice"" .
  
  # Condition 2: Person is or has been spouse of Ted McGinley
  ?person <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ted_McGinley> ;
          <http://dbpedia.org/ontology/ex-spouse> <http://dbpedia.org/resource/Ted_McGinley> .
  
  # Condition 3: Person has the same profession as Satomi Ishihara
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?sameProfession .
  
  FILTER (?profession = ?sameProfession)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
488,36,test,"Give me the birth place of Enomoto Takeaki and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace ?administration WHERE {
  # Part 1: Birth place of Enomoto Takeaki
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Part 2: Administration of the father of the spouse (royalty) of Tokugawa Masako
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ?spouseLabel .
  FILTER(CONTAINS(LCASE(?spouseLabel), ""royalty"")) # Assuming the spouse's label contains 'royalty'
  
  ?spouse <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/administration> ?administration .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
161,57,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of Emilio Mola and military force of Rif War.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . },"```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Find predecessor of Indalecio Prieto
  ?indalecio <http://dbpedia.org/ontology/predecessor> ?predecessor .
  
  # Step 2: Identify military force that is a societal event and a military conflict for the predecessor
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?predecessor <http://dbpedia.org/property/militaryForce> ?force .

  # Step 3: Find commander in a force that is an event for Emilio Mola
  ?emilioMola <http://dbpedia.org/ontology/commander> ?commander .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> ;
         <http://dbpedia.org/property/militaryForce> ?militaryForce .
  ?emilioMola <http://dbpedia.org/property/commanderIn> ?event .

  # Step 4: Identify military force related to the Rif War
  ?rifWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
          <http://dbpedia.org/property/militaryForce> ?militaryForce .
  FILTER(?rifWar = <http://dbpedia.org/resource/Rif_War>) .

  # Combine conditions to find the desired military force
  FILTER(?force = ?militaryForce)
}
```",6,9,7,3,3,3,3,71,0,0,11,0,0.0,0
767,32,test,"Give me the entity in the administration, that is a settlement, of Green and alma mater of the administration of George K. Nash.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?settlement WHERE {
  ?administration <http://dbpedia.org/ontology/administration> ?entity .
  ?administration <http://xmlns.com/foaf/0.1/almaMater> ?almaMater .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  FILTER(?settlement = ?entity && ?settlement = ?almaMater)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
391,23,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . }","```sparql
SELECT ?native WHERE {
  <http://dbpedia.org/resource/Nickname_of_Jackson,_Tennessee> <http://dbpedia.org/ontology/birthPlace> ?native .
}
```",3,3,4,3,1,3,3,71,0,0,176,0,0.0,0
404,22,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?child WHERE {
  # Step 1: Identify Ernest Augustus, Duke of Brunswick
  ?ernestAugustus <http://www.w3.org/2000/01/rdf-schema#label> ""Ernest Augustus, Duke of Brunswick""@en .
  
  # Step 2: Determine his father
  ?ernestAugustus <http://dbpedia.org/ontology/father> ?father .

  # Step 3: Find the spouse of Princess Victoria Louise of Prussia
  ?princessVictoriaLouise <http://www.w3.org/2000/01/rdf-schema#label> ""Princess Victoria Louise of Prussia""@en .
  ?princessVictoriaLouise <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 4: Verify the spouse is Ernest Augustus's father
  FILTER(?father = ?spouse)

  # Step 5: Find the children of this individual
  ?father <http://dbpedia.org/ontology/child> ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
427,58,test,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . }","```sparql
# Query 1: Party of the Father of Lamberto Andreotti
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/memberOf> ?party .
}

# Query 2: Party of Romano Prodi and reference to Partito Popolare Italiano
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Politician>)).
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/memberOf> ?party .
  OPTIONAL {
    ?party <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Partito_Popolare_Italiano> .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,38,test,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find children of Ramesses II
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ramesses_II> .
  
  # Step 2: Identify the parent of each child (should be Ramesses II)
  ?child <http://dbpedia.org/ontology/mother> ?mother .

  # Step 3: Find the father of Merneptah
  <http://dbpedia.org/resource/Merenptah> <http://dbpedia.org/ontology/father> ?fatherOfMerneptah .
  
  # Step 4: Identify the spouse of that father
  ?fatherOfMerneptah <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 5: Determine the parent of this spouse
  ?spouse <http://dbpedia.org/ontology/father> ?result .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
281,62,test,"Give me the war of New Zealand Army and war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v6 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Part 1: War of New Zealand Army
SELECT ?newZealandWar WHERE {
  <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?newZealandWar .
  ?newZealandWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Part 2: War of Awardee of Jonathon Band's Award
SELECT ?awardWar WHERE {
  ?awardee <http://purl.org/dc/terms/relation> <http://dbpedia.org/resource/Jonathon_Band> ;
           <http://dbpedia.org/ontology/battle> ?awardWar .
  ?awardWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Part 3: War of Entity in Birth Place of Leader of 1962 NSW Election
SELECT ?electionWar WHERE {
  <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/ontology/politicalLeader> ?leader .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
           <http://dbpedia.org/ontology/birthPlace> ?birthCountry .
  ?birthCountry <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?entityInBirthCountry .
  ?entityInBirthCountry <http://dbpedia.org/ontology/battle> ?electionWar .
  ?electionWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
994,39,test,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v2 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?associatedArtist ?bandMember WHERE {
  # Step 1: Find associated musical artists of Red Tide
  <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedBand> ?associatedArtist .

  # Step 2: Identify the persona of Don Dokken
  ?persona rdfs:label ""Don Dokken""@en .
  
  # Step 3: Find musical artists born as persons
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Step 4: Check if the person is a band member of the associated artist
  ?person <http://dbpedia.org/ontology/memberOfBand> ?associatedArtist .

  # Filter to ensure persona matches Don Dokken's persona
  FILTER(?persona = <http://dbpedia.org/resource/Don_Dokken#Persona>)
  
  # Return results
  BIND(?person AS ?bandMember)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
16,62,test,Give me the person born as Georgeanne Marie Rice and spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
# Step 1: Identify Georgeanne Marie Rice
SELECT ?georgeanne WHERE {
  ?georgeanne <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
}

# Step 2: Find the birth name of Ted McGinley
SELECT ?tedBirthName WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?tedBirthName .
}

# Step 3: Determine the profession of the actor in ""Unnatural"" (TV series)
SELECT ?profession WHERE {
  ?unnaturalActor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Unnatural_(TV_series)> .
  ?unnaturalActor <http://purl.org/dc/terms/profession> ?profession .
}

# Step 4: Find the spouse of Ted McGinley who is a professional in the identified field
SELECT ?spouse WHERE {
  ?ted <http://dbpedia.org/ontology/birthName> ?tedBirthName .
  ?ted <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://purl.org/dc/terms/profession> ?profession .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
528,49,test,Give me the force of the person born as the birth name of Narciso Campero and war of the military force of Battle of Pisagua.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Query 1: Force associated with Narciso Campero
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
  ?person <http://dbpedia.org/ontology/militaryForce> ?force .
}

# Query 2: War associated with military force in Battle of Pisagua
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/property/foughtBy> ?militaryForce .
  ?militaryForce <http://dbpedia.org/ontology/war> ?war .
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
747,52,test,"Give me the band of the writer of Apollo (Hardwell song) and band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find the band of the writer of Apollo (Hardwell song)
SELECT ?band1 WHERE {
  <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://dbpedia.org/ontology/memberOf> ?band1 .
}

# Step 2: Find the band of Shèna
SELECT ?band2 WHERE {
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/memberOf> ?band2 .
}

# Step 3: Find a person born on the birth date of an athlete and soccer player decedent at Zolotonosha
SELECT DISTINCT ?person WHERE {
  ?athlete <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> .
  ?athlete <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  ?athlete <http://dbpedia.org/ontology/decedent> ?decedent .
  ?athlete <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Zolotonosha> .
  ?athlete <http://dbpedia.org/ontology/birthDate> ?birthDate .

  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,70,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v7 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT DISTINCT ?war1 ?war2 WHERE {
  # Step 1: Find leader of the 1962 NSW state election who is a politician
  ?leader <http://dbpedia.org/ontology/politician> _:a .
  ?election <http://dbpedia.org/property/winner> ?leader .
  ?election <http://dbpedia.org/resource/1962_New_South_Wales_state_election> .

  # Step 2: Determine leader's birthplace which is a country
  ?leader <http://dbpedia.org/ontology/birthPlace> ?birthCountry .
  ?birthCountry <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 3: Find entity in that country related to New Zealand Army with a profession as a military unit and also holding an office or being a politician
  ?entity <http://dbpedia.org/property/birthPlace> ?birthCountry .
  ?entity <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  OPTIONAL { ?entity <http://dbpedia.org/ontology/politician> _:b . }
  OPTIONAL { ?entity <http://dbpedia.org/ontology/officeHolder> _:c . }

  # Step 4: Identify the war associated with this professional's role
  ?entity <http://dbpedia.org/property/war> ?war1 .

  # Step 5: Find the war associated with someone who was awarded the Knight Grand Cross of the Order of the Bath
  ?awardee <http://dbpedia.org/ontology/nationality> ?nationality .
  ?award <http://dbpedia.org/property/recipient> ?awardee .
  ?award <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
  ?awardee <http://dbpedia.org/ontology/war> ?war2 .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
617,69,test,"Give me the spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find child of Antiochus III the Great
  ?child1 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  
  # Step 2: Find spouse of that child
  ?child1 <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 3: Identify successor to Antiochus II Theos who is royalty and their royal child
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_II_theos> .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?royalChild <http://dbpedia.org/ontology/birthParent> ?successor .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find commander in Battle of Panium and their child
  ?battleCommander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Battle_of_Panium> .
  ?child2 <http://dbpedia.org/ontology/birthParent> ?battleCommander .

  # Step 5: Find parent of that child
  ?parent <http://dbpedia.org/ontology/birthChild> ?child2 .

  # Ensure the spouse is connected to the royal lineage from Antiochus II Theos through their successor
  FILTER (?spouse = ?royalChild || ?spouse = ?parent)
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
801,71,test,"Give me the professional in the alter ego of the true self of The Shadow and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/writer> ?v8 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v5 <http://dbpedia.org/property/writer> ?v4 . }","```sparql
SELECT ?professional WHERE {
  # Step 1: Find the writer of ""What U See Is What U Get""
  <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://purl.org/dc/terms/creator> ?writer .
  
  # Step 2: Identify the Rapper and associated musical artist
  ?rapper <http://dbpedia.org/ontology/associatedMusicalArtist> ?writer .
  ?rapper <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/Rapper108930069> .

  # Step 3: Find the professional in the alter ego of The Shadow's true self
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?trueSelf .
  ?trueSelf <http://dbpedia.org/ontology/profession> ?professional .

  # Step 4: Find the producer of a musical work that is both a song and a work by the professional
  ?work <http://purl.org/dc/terms/creator> ?professional .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?work <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/Song108930069> .
}
```",9,17,10,3,3,3,3,71,0,0,8,0,0.0,0
767,54,test,"Give me the reference to  and alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . }","```sparql
SELECT ?administration ?reference ?almaMater ?settlement ?greenReference WHERE {
  # Step 1: Identify George Kilbon Nash
  <http://dbpedia.org/resource/George_Kilbon_Nash> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?administration .

  # Step 2 & 3: Find references and alma mater for the administration
  OPTIONAL { ?administration <http://xmlns.com/foaf/0.1/page> ?reference . }
  OPTIONAL { <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater . }

  # Step 4: Find entities in the administration that are settlements
  ?administration <http://dbpedia.org/ontology/entity> ?settlement .
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 5: Find reference to Green related to these settlements
  OPTIONAL { ?settlement <http://dbpedia.org/property/referenceTo> <http://dbpedia.org/resource/Green> . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
179,16,test,Give me the parent of the child of Bhumibol Adulyadej and person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify children of Bhumibol Adulyadej
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Bhumibol_Adulyadej>.

  # Step 2: Find parents of each child (should include Sirikit)
  ?child <http://dbpedia.org/ontology/birthParent> ?parent.

  # Step 3: Determine the birth name of Sirikit
  BIND(<http://dbpedia.org/resource/Sirikit> AS ?sirikit).
  ?sirikit <http://dbpedia.org/ontology/birthName> ?birthName.

  # Step 4: Find a person born with that birth name
  ?person <http://dbpedia.org/ontology/birthName> ?birthName.
  
  # Step 5: Identify the parent of this person
  ?person <http://dbpedia.org/ontology/birthParent> ?parent.
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
801,53,test,"Give me the producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
SELECT DISTINCT ?producer ?professional ?associatedArtist WHERE {
  # Producer of ""Westside Story"" (song)
  <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?producer .

  # Professional in the alter ego of The Shadow's true self
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/allegedAlterEgo> ?alterEgo .
    ?alterEgo <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?alterEgo <http://purl.org/dc/terms/profession> ?professional .
  }

  # Associated musical artist of the writer of ""40 Dayz & 40 Nightz""
  OPTIONAL {
    <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> <http://dbpedia.org/ontology/writer> ?writer .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?types .
    FILTER (?types = <http://dbpedia.org/ontology/MusicalArtist> || ?types = <http://dbpedia.org/ontology/Artist) .
    ?writer <http://dbpedia.org/property/associatedMusicalArtists> ?associatedArtist .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,55,test,Give me the band of the writer of Apollo (Hardwell song) and band of the person born as Tracey Elizabeth McSween and person born on the birth date of Pavlo Khudzik.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . }","```sparql
# Part 1: Band of the writer of ""Apollo"" (Hardwell song)
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://purl.org/dc/terms/creator> ?writer .
  ?writer <http://dbpedia.org/ontology/memberOfBand> ?band .
}

UNION

# Part 2: Band of the person born as Tracey Elizabeth McSween
SELECT ?band WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Tracey Elizabeth McSween""@en .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}

UNION

# Part 3: Person born on the birth date of Pavlo Khudzik
SELECT ?person WHERE {
  ?pavlo <http://www.w3.org/2000/01/rdf-schema#label> ""Pavlo Khudzik""@en .
  ?pavlo <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
404,54,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
SELECT ?finalParent WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia who is royalty
  ?princess a <http://dbpedia.org/ontology/Royalty> ;
            <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia"" .
  
  # Step 2: Find her spouse, who must also be royalty
  ?princess <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse a <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Determine their child, who is royalty
  ?spouse <http://dbpedia.org/ontology/child> ?child .
  ?child a <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Identify the parent (royalty) of that child
  ?child <http://dbpedia.org/ontology/parent> ?parent .
  ?parent a <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Find the parent of this last identified royal individual
  ?parent <http://dbpedia.org/ontology/parent> ?finalParent .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
485,24,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT DISTINCT ?commonEntity WHERE {
  # Find the region of Joseph Whitaker's birthplace
  <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace1 .
  ?birthPlace1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .

  # Find the birthplace of an awardee who is a writer and poet
  ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Eric_Gregory_Award> .
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet> .
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthPlace2 .

  # Check for common entities between the two birthplaces
  FILTER(?birthPlace1 = ?commonEntity || ?birthPlace2 = ?commonEntity)
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
767,18,test,Give me the alma mater of Carl L. Nippert and reference to  and entity in Baden-Württemberg.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . }","```sparql
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
  OPTIONAL { 
    ?almaMater <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Baden-Württemberg""@en .
  }
}
```",3,3,4,1,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
801,23,test,Give me the professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
SELECT ?professional WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alternateName> ?alterEgo .
  ?alterEgo <http://dbpedia.org/ontology/profession> ?professional .
}
```",3,3,4,3,1,3,3,71,0,0,39640,0,0.0,0
485,26,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of Thomas Warner (poet).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?entity WHERE {
  # Western European Time region that is a country
  { 
    <http://dbpedia.org/resource/Western_European_Time> <http://dbpedia.org/ontology/timeZone> ?region .
    ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
    ?entity <http://dbpedia.org/ontology/country> ?region .
  }
  
  UNION
  
  # Entity in the birthplace region of Joseph Whitaker
  { 
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthRegion .
    ?birthRegion <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
    ?entity <http://dbpedia.org/ontology/location> ?birthRegion .
  }
  
  UNION
  
  # Birthplace of Thomas Warner
  { 
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?entity <http://dbpedia.org/ontology/location> ?birthPlace .
  }
}
```",5,7,6,2,3,2,3,28,0,3632,1,0.0,0.0,0
360,28,test,"Give me the writer of the work, that is an album, of Dave Flett and reference to the author of Blinded by the Light and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
SELECT ?writer WHERE {
  # Part 1: Find the writer of an album by Dave Flett
  ?album <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Dave_Flett> .
  ?album <http://purl.org/dc/terms/creator> ?writer .
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalAlbum> .

  # Part 2: Reference to the author of ""Blinded by the Light""
  OPTIONAL {
    ?blindedWork <http://purl.org/dc/terms/title> ""Blinded by the Light"" .
    ?blindedWork <http://purl.org/dc/terms/creator> ?authorOfBlindedByTheLight .
  }

  # Part 3: Native of the death place, that is a settlement, of Winnie Madikizela-Mandela
  OPTIONAL {
    <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?nativePerson <http://dbpedia.org/ontology/birthPlace> ?deathPlace .
  }
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
378,62,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
# Part 1: Find Carl Pontus Gahn's birth name
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Part 2: Find Louis des Balbes de Berton de Crillon, 1st Duke of Mahón's claim to fame
SELECT ?claimToFame WHERE {
  <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
}

# Part 3: Find wars associated with commanders linked to Peninsular War
SELECT DISTINCT ?war WHERE {
  # Find commanders in the Peninsular War
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Peninsular_War> .
  
  # Find military conflicts (wars) associated with these commanders
  ?commander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
528,20,test,Give me the war of Irene Morales and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?person ?war WHERE {
  { 
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    BIND(<http://dbpedia.org/resource/Irene_Morales> AS ?person)
  }
  
  UNION
  
  {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    BIND(?commander AS ?person)
  }
}
```",3,3,4,2,2,3,3,71,2,19,0,0.09523809523809523,1.0,0.17391304347826084
488,61,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?administration ?deathPlace WHERE {
  # Step 1: Identify Tokugawa Masako's spouse
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2 and 3: Find the father of that spouse who is royalty
  ?spouse <http://dbpedia.org/ontology/father> ?royalFather .
  ?royalFather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Determine the administration of this royal figure
  OPTIONAL { ?royalFather <http://dbpedia.org/property/administration> ?administration . }

  # Step 5: Identify Matsudaira Tadamasa's father who is an office holder
  <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?officeHolderFather .
  ?officeHolderFather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .

  # Step 6 and 7: Find the father of that office holder who is a politician
  ?officeHolderFather <http://dbpedia.org/ontology/father> ?politicalGrandfather .
  ?politicalGrandfather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 8: Determine the death place of this political figure
  OPTIONAL { ?politicalGrandfather <http://dbpedia.org/property/deathPlace> ?deathPlace . }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
747,56,test,Give me the band of Amba Shepherd and person born on the birth date of Pavlo Khudzik and band of the person born as the persona of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
# Part 1: Band of Amba Shepherd
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/memberOf> ?band .
}

UNION

# Part 2: Person born on the birth date of Pavlo Khudzik and their band
SELECT ?personBand WHERE {
  # Find the birthdate of Pavlo Khudzik
  <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .
  
  # Find a person born on that date
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  
  # Find the band of that person
  ?person <http://dbpedia.org/ontology/memberOf> ?personBand .
}

UNION

# Part 3: Band of the person born as the persona of Shèna
SELECT ?personaBand WHERE {
  # Identify the persona of Shèna
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/persona> ?persona .
  
  # Find the person associated with that persona
  ?person <http://dbpedia.org/ontology/persona> ?persona .
  
  # Find the band of that person
  ?person <http://dbpedia.org/ontology/memberOf> ?personaBand .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
54,36,test,"Give me the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
# Step 1: Find the child of Thinkhaya of Pagan
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Find the predecessor of that child
SELECT ?predecessor WHERE {
  ?child <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Step 3: Identify Thihapate of Mohnyin's children who are office holders and royalty
SELECT ?thihapateChild WHERE {
  <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?thihapateChild .
  ?thihapateChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?thihapateChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 4: Match the predecessor with Thihapate's child
SELECT DISTINCT ?predecessor WHERE {
  ?child <http://dbpedia.org/ontology/predecessor> ?predecessor .
  ?thihapateChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?thihapateChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  FILTER(?predecessor = ?thihapateChild)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
427,29,test,Give me the party of the father of Lamberto Andreotti and reference to Partito Popolare Italiano and party of Romano Prodi.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?fatherParty ?prodiParty WHERE {
  # Step 1: Identify Lamberto Andreotti's father
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Determine the political party of his father
  ?father <http://dbpedia.org/ontology/politicalParty> ?fatherParty .

  # Step 3: Check if this party is referenced as Partito Popolare Italiano (PPI)
  OPTIONAL { 
    ?fatherParty rdfs:label ""Partito Popolare Italiano""@it .
  }

  # Step 4: Find the political party associated with Romano Prodi
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?prodiParty .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,53,test,"Give me the person decedent at the work of the author of French Algeria and commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT DISTINCT ?person WHERE {
  # Step 1: Find the author of ""French Algeria""
  ?work <http://dbpedia.org/ontology/author> ?author .
  ?work rdfs:label ""French Algeria""@en .

  # Step 2: Find commanders in Franco-Hova Wars
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  ?war rdfs:label ""Franco-Hova Wars""@en .

  # Step 3: Identify the capital of Algeria that is a settlement
  ?capital <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  ?capital <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Algeria> .
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 4: Find decedents
  OPTIONAL { ?author <http://dbpedia.org/ontology/decedent> ?person . }
  OPTIONAL { ?commander <http://dbpedia.org/ontology/decedent> ?person . }
  OPTIONAL { ?capital <http://dbpedia.org/ontology/decedent> ?person . }

  # Step 5: Ensure the person is a decedent in all three contexts
  FILTER(?person != ?author && ?person != ?commander && ?person != ?capital)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
485,25,test,"Give me the entity in the region, that is a country, of Western European Time and entity in Nottinghamshire and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Part 1: Entity in the region (country) of Western European Time
  {
    <http://dbpedia.org/resource/Western_European_Time> <http://dbpedia.org/ontology/timeZoneOfRegion> ?region .
    ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    FILTER(CONTAINS(LCASE(?name), ""country""))
  }
  
  UNION
  
  # Part 2: Entity in Nottinghamshire
  {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nottinghamshire> .
  }

  UNION

  # Part 3: Birthplace of an awardee who is a writer and poet of the Eric Gregory Award
  {
    ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Eric_Gregory_Award> ;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    FILTER(CONTAINS(LCASE(STR(?type)), ""writer"") && CONTAINS(LCASE(STR(?type)), ""poet""))
    ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthplace .
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    FILTER(CONTAINS(LCASE(?name), ""city"") || CONTAINS(LCASE(?name), ""town""))
  }
}
```",5,8,6,2,3,2,3,28,0,101,1,0.0,0.0,0
994,38,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify Donald Maynard Dokken as a musical artist
  ?dokken <http://dbpedia.org/ontology/birthName> ""Donald Maynard Dokken"" .
  ?dokken <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Step 2: Find band members associated with Donald Maynard Dokken
  ?bandMember <http://dbpedia.org/property/memberOf> ?dokkenBand .
  ?dokkenBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .

  # Step 3: Check if the band member is part of a band that is also an organization and group
  ?bandMember <http://dbpedia.org/property/memberOf> ?memberBand .
  ?memberBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?bandType .
  
  FILTER (
    (?bandType = <http://dbpedia.org/ontology/Band> || 
     ?bandType = <http://dbpedia.org/ontology/Organisation> ||
     ?bandType = <http://dbpedia.org/ontology/Group>)
  )

  # Step 4: Ensure the band member is associated with Meshuggah
  ?memberBand <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Meshuggah> .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
10,21,test,Give me the associated musical artist of Matt Colton and band member of Luke Vibert and professional in the birth name of Sharon Kao.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Part 1: Associated musical artist of Matt Colton
  ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Matt_Colton> .
  
  # Part 2: Band member of Luke Vibert
  ?bandMember <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Luke_Vibert> .

  # Part 3: Professional in the birth name of Sharon Kao
  <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthName .
  ?professional <http://dbpedia.org/ontology/profession> ?birthName .

  # Find common entity satisfying all conditions
  FILTER (?artist = ?bandMember && ?artist = ?professional)
  
  BIND(?artist AS ?result)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
488,69,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Find the war involving Saitō Hajime
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  ?commander rdfs:label ""Saitō Hajime""@en .
  
  # Ensure the war is a military conflict, event, and societal event
  ?war rdf:type <http://dbpedia.org/ontology/MilitaryConflict> ;
       rdf:type <http://dbpedia.org/ontology/Event> ;
       rdf:type <http://dbpedia.org/ontology/SocietalEvent> .

  # Step 2: Find the administration of the father of Tokugawa Masako's spouse
  ?spouse rdfs:label ""Tokugawa Masako""@en .
  ?spouse <http://dbpedia.org/property/spouse> ?royaltySpouse .
  ?royaltySpouse <http://dbpedia.org/ontology/father> ?fatherOfRoyalty .
  ?fatherOfRoyalty <http://dbpedia.org/ontology/administration> ?administration .

  # Step 3: Find the death place of Yūki Hideyasu's father
  ?yukiHideyasu rdfs:label ""Yūki Hideyasu""@en .
  ?yukiHideyasu <http://dbpedia.org/property/father> ?fatherOfYuki .
  ?fatherOfYuki rdf:type <http://dbpedia.org/ontology/Politician> ;
                <http://dbpedia.org/ontology/deathPlace> ?deathPlace .

  # Step 4: Get the birth place of the commander
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
54,68,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . },"```sparql
SELECT ?finalChild WHERE {
  # Step 1: Thinkhaya of Pagan's child
  ?thinkhayaChild <http://dbpedia.org/ontology/birth> ?thinkhaya .
  ?thinkhaya rdfs:label ""Thinkhaya of Pagan""@en .

  # Step 2: Father of Thinkhaya's Child (Thinkhaya himself)
  ?thinkhaya <http://dbpedia.org/ontology/predecessor> ?predecessor .

  # Step 3: Predecessor's child who is an office holder and royalty
  ?predecessorChild <http://dbpedia.org/ontology/birth> ?predecessor .
  ?predecessorChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?types .
  FILTER (?types = <http://dbpedia.org/ontology/OfficeHolder> || ?types = <http://dbpedia.org/ontology/Royalty>) .

  # Step 4: Thihapate of Mohnyin's child who matches the above criteria
  ?thihapateChild <http://dbpedia.org/ontology/birth> ?thihapate .
  ?thihapate rdfs:label ""Thihapate of Mohnyin""@en .
  FILTER (?predecessorChild = ?thihapateChild) .

  # Step 5: Parent of Thado Minsaw's parent
  ?thadoParent <http://dbpedia.org/ontology/birth> ?thadoMinsaw .
  ?thadoMinsaw rdfs:label ""Thado Minsaw of Prome""@en .
  ?parentOfThadoParent <http://dbpedia.org/ontology/birth> ?thadoParent .

  # Step 6: Child of this Parent
  ?finalChild <http://dbpedia.org/ontology/birth> ?parentOfThadoParent .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
427,48,test,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of the party of Michele Pinto.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
SELECT ?prodiParty WHERE {
  ?prodi <http://dbpedia.org/ontology/birthName> ""Romano Antonio Prodi"" .
  ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?prodi <http://dbpedia.org/ontology/politicalParty> ?prodiParty .

  OPTIONAL {
    ?michelePinto <http://dbpedia.org/ontology/politicalParty> ?partyName .
    FILTER(?partyName = ?prodiParty)
    BIND(""Michele Pinto"" AS ?nameCheck) # Ensuring the reference to Michele Pinto
  }
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
281,53,test,"Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
# Step 1: Find the award received by Jonathon Band
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/ontology/award> ?award .
}

# Step 2: Find wars associated with this award
SELECT DISTINCT ?war WHERE {
  ?award <http://dbpedia.org/property/awardee> <http://dbpedia.org/resource/Jonathon_Band> .
  ?award <http://dbpedia.org/ontology/militaryConflict> ?war .
}

# Step 3: Find wars related to the Colony of New Zealand
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/Colony_of_New_Zealand> <http://dbpedia.org/ontology/militaryConflict> ?war .
}

# Step 4: Identify Heather Roy's profession as a military unit and find associated wars
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?profession <http://dbpedia.org/ontology/militaryConflict> ?war .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,41,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia as a person born who is royalty.
  ?princess <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
  ?princess <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Confirm she is the child of Ernest Augustus, Crown Prince of Hanover.
  ?princess <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?parent <http://dbpedia.org/ontology/name> ""Ernest Augustus, Crown Prince of Hanover"" .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?princess <http://dbpedia.org/ontology/birthParent> ?parent .

  # Step 3: Find her spouse.
  ?princess <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 4: Ensure one of her children is royalty and the child of Ernest Augustus, Duke of Brunswick.
  ?child <http://dbpedia.org/ontology/birthParent> ?princess .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?parent2 <http://dbpedia.org/ontology/name> ""Ernest Augustus, Duke of Brunswick"" .
  ?parent2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent2 .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
915,18,test,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?result <http://dbpedia.org/ontology/residence> ?v2 . <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?resident WHERE {
  # Step 1: Identify the director of ""Pipe Dreams"" (1976 film)
  ?director <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> .
  
  # Step 2: Determine the birthplace of this director that is a settlement
  ?director <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 3: Find the residents of this birthplace
  ?residence <http://dbpedia.org/ontology/resident> ?resident .
  ?residence <http://dbpedia.org/ontology/location> ?birthPlace .

  # Step 4: Identify Phillip Spaulding's child who is both a fictional character and a soap character
  ?child <http://dbpedia.org/ontology/father> ?director .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?child <http://dbpedia.org/ontology/soapCharacter> true .

  # Step 5: Ensure the father of this child is the director identified in step 1
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
487,17,test,"Give me the country of 2022 Vermont House of Representatives election and administration of the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/property/governor> ?v3 . },"```sparql
# Part 1: Country of 2022 Vermont House of Representatives election
SELECT ?country WHERE {
  <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?country .
}

UNION

# Part 2: Administration of the person born that is a soccer player, with birth name Phil Scott
SELECT ?birthCountry WHERE {
  ?person <http://xmlns.com/foaf/0.1/birthName> ""Phil Scott"" .
  ?person <http://dbpedia.org/ontology/soccerPlayer> true .
  ?person <http://dbpedia.org/ontology/birthPlace> ?place .
  ?place <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?place <http://dbpedia.org/ontology/administrativeTerritory> ?birthCountry .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
801,62,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v6 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
# Step 1: Find The Shadow's alter ego's true self
SELECT ?trueSelf WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
  ?alterEgo <http://dbpedia.org/ontology/trueSelf> ?trueSelf .
}

# Step 2: Find the professional associated with this true self and Chris Taylor
SELECT DISTINCT ?professional WHERE {
  ?trueSelf <http://dbpedia.org/property/professional> ?professional .
  ?professional <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> .
}

# Step 3: Find a musical work (song) produced by this professional
SELECT DISTINCT ?musicalWork WHERE {
  ?professional <http://dbpedia.org/ontology/producer> ?musicalWork .
  ?musicalWork <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?musicalWork <http://dbpedia.org/ontology/song> ?song .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
9,60,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?almaMater WHERE {
  # Step 1: Find the organization in Belfast with a nickname
  ?organization <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> .
  ?organization <http://www.w3.org/2000/01/rdf-schema#label> ?nickname .
  
  # Step 2: Ensure it's an educational institution in Northern Ireland
  ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> ;
                <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Northern_Ireland> .
  
  # Step 3: Find the mayor who is a politician
  ?mayor <http://dbpedia.org/ontology/politicianForParty> ?organization ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  
  # Step 4: Retrieve the alma mater of this mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
994,58,test,"Give me the associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Get associated musical artist for S.A. Slayer
SELECT ?slayerArtist WHERE {
  <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?slayerArtist .
}

# Step 2: Find the person born as Don Dokken's persona who is a musical artist
SELECT ?dokkenPersona WHERE {
  ?persona <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?persona <http://dbpedia.org/property/birthName> ""Don Dokken"" .
}

# Step 3: Find the band member of Meshuggah that is a band and an organization
SELECT ?meshuggahMember WHERE {
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Meshuggah> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}

# Step 4: Get associated musical artist for the band member found in step 3
SELECT ?meshuggahArtist WHERE {
  ?meshuggahMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?meshuggahArtist .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
994,63,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find a musical artist associated with Watchtower
  ?watchtowerArtist <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Watchtower> .
  
  # Step 2: Find the associated musical artist of the artist from step 1
  ?watchtowerArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?artistFromStep2 .

  # Step 3: Identify a band member of Meshuggah who is also a band, group, and organization
  ?meshuggahMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Meshuggah> .
  ?meshuggahMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?meshuggahMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
  ?meshuggahMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .

  # Step 4: Find a band member of Donald Maynard Dokken
  ?dokkenBandMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Dokken> .
  
  # Step 5: Find the associated musical artist of the band member from step 4
  ?dokkenBandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalArtist .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
391,49,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of the figure known as Hub City.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Identify Hub City and its native professional
  <http://dbpedia.org/resource/Hub_City> <http://www.w3.org/2000/01/rdf-schema#label> ""Hub City"" .
  
  # Assuming 'professional' refers to an actor, find the actor who is a native of Hub City
  ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Hub_City> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .

  # Step 2: Find the movie that is a movie, work, and television show
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .

  # Step 3: Find the actor of this movie
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
747,67,test,"Give me the band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
# Part 1: Band of the person born as the persona of Shèna
SELECT ?bandShena WHERE {
  ?shena <http://dbpedia.org/ontology/birthName> ""Shèna"" .
  OPTIONAL { ?shena <http://dbpedia.org/ontology/memberOfBand> ?bandShena . }
}

# Part 2: Band of the writer of a song by Amba Shepherd
SELECT DISTINCT ?bandWriter WHERE {
  ?song <http://purl.org/dc/terms/creator> ?writer .
  ?song <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  ?song <http://dbpedia.org/resource/Amba_Shepherd> .
  OPTIONAL { ?writer <http://dbpedia.org/ontology/memberOfBand> ?bandWriter . }
}

# Part 3: Band of the person born on 1985-04-29
SELECT ?bandPerson WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
  OPTIONAL { ?person <http://dbpedia.org/ontology/memberOfBand> ?bandPerson . }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
488,63,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT DISTINCT ?birthPlace ?deathPlace ?administration WHERE {
  # Step 1: Identify the war involving Saitō Hajime
  ?war <http://dbpedia.org/ontology/battleCommander> <http://dbpedia.org/resource/Sait%C5%8D_Hajime> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
       <http://www.w3.org/2002/07/owl#sameAs> ?event .
  ?event <http://www.w3.org/2000/01/rdf-schema#isClassOf> <http://dbpedia.org/class/yago/Event108069> ; # Event
         <http://www.w3.org/2000/01/rdf-schema#isClassOf> <http://dbpedia.org/class/yago/SocietalEvent108070> . # Societal event

  # Step 2: Find the commander's birthplace
  ?war <http://dbpedia.org/ontology/battleCommander> ?commander .
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 3: Yūki Hideyasu's father's death place
  <http://dbpedia.org/resource/Y%C5%ABki_Hideyasu> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
          <http://dbpedia.org/ontology/deathPlace> ?deathPlace .

  # Step 4: Emperor Go-Mizunoo's father's administration
  <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?emperorFather .
  ?emperorFather <http://dbpedia.org/ontology/administration> ?administration .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
994,67,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of S.A. Slayer.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Find the band associated with Fredrik Thordendal
  ?band a <http://dbpedia.org/ontology/Organisation> ;
        <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .

  # Step 2: Find a member of this band that is also a band, group, and organization
  ?member a <http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/MusicalGroup>, <http://dbpedia.org/ontology/Organisation> ;
          <http://dbpedia.org/ontology/member> ?band .

  # Step 3: Identify the person born as Don Dokken's persona
  ?person a <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://dbpedia.org/property/birthName> ""Don Dokken""^^<http://www.w3.org/2001/XMLSchema#string> .

  # Step 4: Find the associated musical artist of S.A. Slayer
  ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist ;
          <http://dbpedia.org/ontology/member> ?person .
  
  FILTER(?artist = <http://dbpedia.org/resource/S._A._Slayer>)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
421,26,test,Give me the person born as the birth name of Dino Merlin and band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
SELECT ?person WHERE {
  # Step 1: Find Dino Merlin's birth name
  <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 2: Identify awardees who are band members and native to the Socialist Federal Republic of Yugoslavia
  ?bandMember <http://dbpedia.org/ontology/memberOf> ?band .
  ?bandMember <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
  ?bandMember <http://dbpedia.org/ontology/award> ?award .

  # Step 3: Find the person born with Dino Merlin's birth name
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
378,68,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
SELECT ?war WHERE {
  # Step 1: Identify Carl Pontus Gahn and his claim to fame
  ?person <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
  ?person <http://dbpedia.org/ontology/claimToFame> ?commander .

  # Step 2: Find the wars associated with this commander
  ?commander <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 3: Filter for wars related to the Peninsular War
  FILTER EXISTS {
    ?battle <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Peninsular_War> .
  }

  BIND(?battle AS ?war)
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
360,26,test,"Give me the reference to the author of Blinded by the Light and native of Johannesburg and writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . }","```sparql
SELECT ?author WHERE {
  ?work <http://dbpedia.org/ontology/author> ?author .
  ?work <http://www.w3.org/2000/01/rdf-schema#label> ""Blinded by the Light""@en .
  
  ?author <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ""Johannesburg""@en .

  ?album <http://dbpedia.org/ontology/writer> ?author .
  ?album <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Dave_Flett> .
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalAlbum> .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
435,26,test,"Give me the work of the author of Iceland and region of Greenwich Mean Time and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
SELECT ?work WHERE {
  # Step 1: Find the author of Iceland
  <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/ontology/author> ?author .

  # Step 2: Get works by that author
  ?author <http://purl.org/dc/terms/creator> ?work .

  # Step 3: Find regions associated with GMT
  ?region <http://www.w3.org/2006/time#hasTimezone> <http://dbpedia.org/resource/Greenwich_Mean_Time> .
  
  # Step 4: Identify territories administered from Iceland (Land of fire and ice)
  ?territory <http://dbpedia.org/ontology/administeredBy> <http://dbpedia.org/resource/Iceland> .

  # Ensure the region is also a settlement, town, and Icelandic
  ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?types .
  FILTER (
    EXISTS { ?region <http://dbpedia.org/ontology/Settlement> [] . }
    && EXISTS { ?region <http://dbpedia.org/ontology/Town> [] . }
    && EXISTS { ?region <http://www.w3.org/2000/01/rdf-schema#label> ""Icelandic""@en . }
  )
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
427,70,test,"Give me the reference to the name of Italian People's Party (1994) and party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?italianPartyRef ?fatherParty ?prodiParty WHERE {
  # Part 1: Reference to the name of Italian People's Party (1994)
  <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> rdfs:label ?italianPartyRef .

  # Part 2: Party of the father of an alumnus of MIT
  ?alumnus dbpedia-owl:almaMater <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?father dbo:child ?alumnus .
  ?father dbo:partyAffiliation ?fatherParty .

  # Part 3: Party of the person born who is both an office holder and a politician, as the birth name of Romano Prodi
  <http://dbpedia.org/resource/Romano_Prodi> rdfs:label ?birthName .
  ?person foaf:name ?birthName ;
           dbo:officeHolder true ;
           dbo:partyAffiliation ?prodiParty .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
360,20,test,"Give me the reference to Manfred Mann and native of the death place, that is a settlement, of Winnie Madikizela-Mandela and writer of The Roaring Silence.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . }","```sparql
# Step 1: Find Winnie Madikizela-Mandela's death place that is a settlement
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}

# Step 2: Find the native of this death place
SELECT ?native WHERE {
  ?deathPlace <http://dbpedia.org/property/nativeOf> ?native .
}

# Step 3: Check if this person is associated with Manfred Mann
SELECT ?reference WHERE {
  ?native <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Manfred_Mann> .
}

# Step 4: Identify the writer of ""The Roaring Silence""
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/The_Roaring_Silence> <http://purl.org/dc/terms/creator> ?writer .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
92,45,test,Give me the band member of Nevermore and associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
SELECT DISTINCT ?artist WHERE {
  # Step 1: Find band members of Nevermore
  ?member <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nevermore_(band)> .
  
  # Step 2: Find associated musical artists of Jim Sheppard for each member
  ?member <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
  ?artist <http://dbpedia.org/ontology/biographicalSubject> <http://dbpedia.org/resource/Jim_Sheppard_(musician)> .

  # Step 3: Find bands of the person born as Joseph Michael
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael""@en .
  ?person <http://xmlns.com/foaf/0.1/name> ?birthName .
  FILTER (str(?birthName) = ""Joseph Michael"")
  
  # Check if the artist is part of a band with Joseph Michael
  ?artist <http://dbpedia.org/ontology/bandMember> ?band .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,45,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of Rif War and military force of Spanish Civil War.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
SELECT ?commander WHERE {
  ?elDirector <http://dbpedia.org/ontology/nickName> ""El Director"" .
  ?elDirector <http://dbpedia.org/property/militaryForce> ?rifWar .
  ?rifWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Rif_War> .
  
  ?elDirector <http://dbpedia.org/property/militaryForce> ?civilWar .
  ?civilWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Spanish_Civil_War> .

  ?commander <http://dbpedia.org/ontology/commander> ?elDirector .
  ?force <http://dbpedia.org/property/militaryForce> ?commander .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}
```",5,6,6,3,3,3,3,71,0,0,11,0,0.0,0
232,44,test,"Give me the child of Jon Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
# Step 1: Find Jon Pertwee's children
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Find Sylvie Bermann's residence that is a settlement and British
SELECT ?residence WHERE {
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
}

# Step 3: Find Sean Pertwee's claim to fame that is a film and a military conflict
SELECT ?claimToFame WHERE {
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Final query: Find the child of Jon Pertwee who is native to Sylvie Bermann's residence and an actor in Sean Pertwee's claim to fame
SELECT ?child WHERE {
  # Jon Pertwee's child
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .
  
  # Native of Sylvie Bermann's residence
  ?child <http://dbpedia.org/ontology/nationality> ?residence .
  {
    SELECT DISTINCT ?residence WHERE {
      <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/residence> ?residence .
      ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
      ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
    }
  }

  # Actor in Sean Pertwee's claim to fame
  {
    SELECT DISTINCT ?claimToFame WHERE {
      <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
      ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
      ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    }
  }

  # Actor in the claim to fame
  ?child <http://dbpedia.org/ontology/actor> ?claimToFame .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
617,37,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
# Step 1: Find Nysa's parent(s)
SELECT ?nysaParent WHERE {
  <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> <http://dbpedia.org/ontology/parent> ?nysaParent .
}

# Step 2: Identify the successor of Antiochus (son of Antiochus III the Great)
SELECT ?successor WHERE {
  <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?successor .
}

# Step 3: Find children of this successor who are royalty
SELECT ?child WHERE {
  ?successor <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 4: Find the spouse of these children
SELECT ?spouse WHERE {
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 5: Match Nysa's parent with any of these spouses
SELECT DISTINCT ?nysaParent WHERE {
  { 
    SELECT ?nysaParent WHERE {
      <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> <http://dbpedia.org/ontology/parent> ?nysaParent .
    }
  }
  UNION
  {
    SELECT ?spouse WHERE {
      ?child <http://dbpedia.org/ontology/spouse> ?spouse .
      ?successor <http://dbpedia.org/ontology/child> ?child .
      ?successor <http://dbpedia.org/ontology/successor> ?antiochusSon .
      FILTER(?antiochusSon = <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)>)
      ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    }
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
54,70,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v7 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v4 . }","```sparql
SELECT ?predecessor WHERE {
  # Step 1: Find Thado Minsaw of Prome's parent
  ?thadoMinsawParent <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
  
  # Step 2: Identify the child of this parent
  ?child1 <http://dbpedia.org/ontology/father> ?thadoMinsawParent .

  # Step 3: Find Soe Min Wimala Dewi's father and his parent
  ?soeMinFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> .
  ?parentOfFather <http://dbpedia.org/ontology/father> ?soeMinFather .

  # Step 4: Reference to Thihapate of Mohnyin
  ?thihapateRef <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .

  # Step 5: Find the child that is an office holder and royalty
  ?child2 <http://dbpedia.org/ontology/father> ?thihapateRef .
  ?child2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?child2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 6: Determine the predecessor of this child
  ?predecessor <http://dbpedia.org/ontology/predecessor> ?child2 .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
48,17,test,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash and band of Carl Falk.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Part 1: Find the show with Stacey Dash
SELECT ?show WHERE {
  <http://dbpedia.org/resource/Stacey_Dash> <http://dbpedia.org/ontology/starring> ?show .
}

# Part 2 and 3: Find an actor from that show who is a musical artist, then find their band
SELECT DISTINCT ?actorBand WHERE {
  ?show <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?actor <http://dbpedia.org/property/band> ?actorBand .
}

# Part 4: Find the band of Carl Falk
SELECT ?falkBand WHERE {
  <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/property/band> ?falkBand .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
9,68,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
# Step 1: Find the mayor who is a politician in an organization in Belfast
SELECT ?mayor WHERE {
  ?organization <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> .
  ?organization <http://dbpedia.org/ontology/politicalLeader> ?mayor .
  ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}

# Step 2: Find the alma mater of this mayor
SELECT ?almaMater WHERE {
  ?mayor <http://dbpedia.org/ontology/alumniOf> ?almaMater .
}

# Step 3: Find the nickname of Queen's University Belfast
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/ontology/nickName> ?nickname .
}

# Step 4: Identify the awardee of Royal Medals and their alma mater
SELECT ?almaMaterAwardee WHERE {
  ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Royal_Medals> .
  ?awardee <http://dbpedia.org/ontology/alumniOf> ?almaMaterAwardee .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
48,16,test,"Give me the band of the actor, that is a musical artist, of Honor Up and band of the writer of Emotion (Carly Rae Jepsen album).",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query 1: Find the band of the actor who is also a musical artist of ""Honor Up""
SELECT ?actorBand WHERE {
  ?honorUp <http://dbpedia.org/ontology/artist> ?actor .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?actor <http://dbpedia.org/ontology/memberOfBand> ?actorBand .
}

UNION

# Query 2: Find the band of the writer of ""Emotion"" from Carly Rae Jepsen's album
SELECT ?writerBand WHERE {
  <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/ontology/song> ?emotionSong .
  ?emotionSong <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://dbpedia.org/ontology/memberOfBand> ?writerBand .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
801,48,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?professional ?associatedArtist WHERE {
  # Step 1: Find The Shadow's alter ego
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alternateName> ?alterEgo .
  
  # Step 2: Determine the professional role of this alter ego
  ?alterEgo <http://dbpedia.org/ontology/profession> ?professional .

  # Step 3: Find the writer of ""40 Dayz & 40 Nightz""
  <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> <http://dbpedia.org/ontology/writer> ?writer .
  
  # Step 4: Identify associated musical artist who is also an artist
  ?writer <http://dbpedia.org/ontology/musicArtist> ?associatedArtist .
  ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",5,7,6,3,2,3,3,71,0,0,22,0,0.0,0
488,57,test,"Give me the birth place of Enomoto Takeaki and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
# Step 1: Birth place of Enomoto Takeaki
SELECT ?enomotoBirthPlace WHERE {
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?enomotoBirthPlace .
}

UNION

# Step 2: Death place of Matsudaira Tadamasa's father (Politician)
SELECT ?matsudairaFatherDeathPlace WHERE {
  ?matsudairaTadamasa <http://dbpedia.org/ontology/father> ?matsudairaFather .
  ?matsudairaFather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?matsudairaFather <http://dbpedia.org/ontology/deathPlace> ?matsudairaFatherDeathPlace .
}

UNION

# Step 3: Administration of Emperor Go-Mizunoo's father
SELECT ?goMizunooFatherAdministration WHERE {
  <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?goMizunooFather .
  ?goMizunooFather <http://dbpedia.org/ontology/administration> ?goMizunooFatherAdministration .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
427,50,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . }","```sparql
# Query 1: Party of the father of an alumnus from MIT
SELECT ?fatherParty WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?alumnus <http://www.w3.org/2000/01/rdf-schema#parent> ?father .
  ?father <http://dbpedia.org/ontology/memberOf> ?party .
  BIND(STR(?party) AS ?fatherParty)
}

UNION

# Query 2: Party of Romano Prodi
SELECT ?prodiParty WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/memberOf> ?party .
  BIND(STR(?party) AS ?prodiParty)
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
492,67,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT DISTINCT ?person WHERE {
  # Step 1: Find the commander in the Battle of Verdun
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Verdun""))

  # Step 2: Identify wars associated with this commander
  ?commander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 3: Find persons who were decedents at French Algeria
  ?person <http://dbpedia.org/ontology/decedentAt> <http://dbpedia.org/resource/French_Algeria> .

  # Step 4: Identify the capital of Khemis Miliana District and find decedents there
  ?district <http://dbpedia.org/property/capital> ?capital .
  FILTER(STRSTARTS(STR(?district), ""http://dbpedia.org/resource/Khemis_Miliana_District""))
  ?person <http://dbpedia.org/ontology/decedentAt> ?capital .
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
701,60,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the spouse of Amun-her-khepeshef.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find the royal commander in the Battle of Perire
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Perire""))
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the father of this commander
  ?father <http://dbpedia.org/ontology/father> ?commander .

  # Step 3: Determine the spouse of this father
  ?spouse <http://dbpedia.org/ontology/spouse> ?father .

  # Step 4: Identify the child of Amun-her-khepeshef's spouse
  ?amunSpouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
  ?child <http://dbpedia.org/ontology/fatherOrMother> ?amunSpouse .

  # Step 5: Find the parent of that child
  ?result <http://dbpedia.org/ontology/fatherOrMother> ?child .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
747,28,test,Give me the band of Shèna and person born on the birth date of Pavlo Khudzik and band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
# Find the band associated with Shèna
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/memberOf> ?band .
}

UNION

# Find a person born on the same date as Pavlo Khudzik and their band
SELECT DISTINCT ?person ?band WHERE {
  # Get Pavlo Khudzik's birthdate
  <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .
  
  # Find a person born on the same date
  ?person <http://dbpedia.org/ontology/birthDate> ?sameBirthDate .
  FILTER (YEAR(?sameBirthDate) = YEAR(?birthDate) && MONTH(?sameBirthDate) = MONTH(?birthDate) && DAY(?sameBirthDate) = DAY(?birthDate))
  
  # Get the band of that person
  ?person <http://dbpedia.org/ontology/memberOf> ?band .
}

UNION

# Find the band associated with Amba Shepherd
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/memberOf> ?band .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
659,50,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
SELECT ?commander WHERE {
  ?polishHorse <http://dbpedia.org/ontology/knownAs> ""Polish Horse"" .
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  
  ?rutgerForce <http://dbpedia.org/property/militaryForce> ?polishHorse .
  ?rutgerForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?rutgerForce dbp:militaryForceOf <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .

  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  
  ?polishHorse <http://dbpedia.org/property/militaryForce> ?war .

  ?war <http://dbpedia.org/ontology/commander> ?commander .
}
```",5,12,6,3,2,3,3,71,0,0,31,0,0.0,0
182,27,test,Give me the war of Mahesh Senanayake and war of the work of Gotabhaya Rajapaksa and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?result <http://dbpedia.org/ontology/place> ?v0 . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  # Part 1: War of Mahesh Senanayake
  { 
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?result .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
  
  UNION
  
  # Part 2: War of the work of Gotabhaya Rajapaksa
  { 
    ?work <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> .
    ?work <http://dbpedia.org/ontology/topic> ?result .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
  
  UNION
  
  # Part 3: Entity in the nationality of Tamara Kunanayakam
  { 
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    ?entity <http://dbpedia.org/ontology/nationality> ?nationality .
    <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?sameNationality .
    FILTER(?nationality = ?sameNationality)
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
701,64,test,"Give me the parent of Henuttawy (19th dynasty) and parent of the child of the spouse of Amun-her-khepeshef and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
# Step 1: Find the parent of Henuttawy (19th dynasty)
SELECT ?henuttawyParent WHERE {
  <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/family> ?henuttawyParent .
}

# Step 2: Find the child of the spouse of Amun-her-khepeshef
SELECT ?childOfSpouse WHERE {
  ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
  ?spouse <http://dbpedia.org/ontology/family> ?childOfSpouse .
}

# Step 3: Find the spouse of the father of the commander in Battle of Perire, that is royalty
SELECT ?royalSpouse WHERE {
  ?battleCommander <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Battle_of_Perire> .
  ?father <http://dbpedia.org/ontology/family> ?battleCommander .
  ?father <http://dbpedia.org/property/spouse> ?royalSpouse .
  ?royalSpouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 4: Find the parent of the royal spouse
SELECT ?parentOfRoyalSpouse WHERE {
  ?royalSpouse <http://dbpedia.org/ontology/family> ?parentOfRoyalSpouse .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
232,53,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
# Step 1: Find Sylvie Bermann's British settlement residence and its native
SELECT ?native WHERE {
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> .
  ?residence <http://dbpedia.org/ontology/native> ?native .
}

# Step 2: Find an actor from Dog Soldiers (film)
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 3: Find Jon Pertwee's birth name and a person born with that name
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/property/birthName> ?birthName .
}

# Step 4: Link the actor to the person born with Jon Pertwee's birth name
SELECT ?actor WHERE {
  ?actor <http://dbpedia.org/ontology/family> ?person .
}
```

Note: This query is a conceptual breakdown and may require adjustments based on actual DBpedia data availability and structure. The final answer would be derived by combining results from these queries.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
197,8,test,Give me the birthplace of the awardee of Leroy P. Steele Prize and birthplace of Dumitru Nadu.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?steeleAwardeeBirthPlace ?nanduBirthPlace WHERE {
  # Query for the awardee of Leroy P. Steele Prize
  ?steeleAwardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Leroy_P._Steele_Prize> .
  ?steeleAwardee <http://dbpedia.org/ontology/birthPlace> ?steeleAwardeeBirthPlace .

  # Query for Dumitru Nadu's birthplace
  <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?nanduBirthPlace .
}
```",3,3,4,2,2,2,2,9,1,91,0,0.010869565217391304,1.0,0.02150537634408602
747,45,test,Give me the person born on 1985-04-29 and band of Amba Shepherd and band of the person born as the persona of Shèna.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
# Step 1: Identify the person born on 1985-04-29
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
}

# Step 2: Find the band associated with Amba Shepherd
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/band> ?band .
}

# Step 3: Determine the persona of Shèna and find the person born as that persona
SELECT ?person WHERE {
  ?persona <http://dbpedia.org/ontology/personaOf> <http://dbpedia.org/resource/Shèna> .
  ?person <http://dbpedia.org/ontology/birthName> ?persona .
}

# Step 4: Find the band associated with the person identified in step 3
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/band> ?band .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
963,17,test,"Give me the entity in Serbia and administration of the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Serbia#21205> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .
  ?entity <http://dbpedia.org/property/rulingParty> ?location .
}
```",4,5,5,3,2,3,2,20,0,0,84,0,0.0,0
391,47,test,"Give me the native of the figure known as Hub City and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Determine the claim to fame of the spouse that is a work
SELECT ?work WHERE {
  ?spouse <http://purl.org/dc/terms/subject> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
}

# Step 3: Find who acted in that work
SELECT ?actor WHERE {
  ?work <http://dbpedia.org/property/starring> ?actor .
}

# Step 4: Identify the figure known as ""Hub City""
SELECT ?hubCity WHERE {
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ""Hub City""@en .
  ?entity <http://dbpedia.org/ontology/wikiPageRedirects> ?hubCity .
}

# Step 5: Determine the native place of this actor
SELECT ?nativePlace WHERE {
  ?actor <http://dbpedia.org/ontology/birthPlace> ?nativePlace .
}
```

Note: This is a multi-step process, and each step may need to be executed separately or combined into a more complex query depending on the data availability in DBpedia. The final result will depend on the successful execution of all these steps.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
392,22,test,"Give me the entity in the region, that is a country, of Central European Time and region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Step 1: Find the country associated with Central European Time
  <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/timeZoneForRegion> ?region .
  ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 2: Find sports events in the region of Aguilar de Segarra
  <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZoneForRegion> ?regionEvent .
  ?event <http://dbpedia.org/ontology/timeZoneForRegion> ?regionEvent .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent> .

  # Step 3: Find entities that are in both the country and region
  ?entity <http://dbpedia.org/ontology/country> ?country .
  FILTER (?country = ?region)
  
  ?entity <http://dbpedia.org/ontology/timeZoneForRegion> ?regionEvent .
}
```",4,6,5,2,2,2,3,28,0,0,28787,0,0.0,0
9,35,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of Queen's University Belfast.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?almaMater WHERE {
  # Find the mayor who is also a politician from the Northern Ireland Forum
  ?mayor <http://dbpedia.org/ontology/politician> _:a .
  ?mayor <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  
  # Find the figure known as the nickname of Queen's University Belfast
  ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""Queen's University Belfast""@en .
  
  # Get alma mater for both individuals
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?figure <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
488,62,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of Emperor Go-Yōzei and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v6 . ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Identify the war
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/2000/01/rdf-schema#isClassOf> <http://dbpedia.org/ontology/Event> .
  ?war <http://www.w3.org/2000/01/rdf-schema#isClassOf> <http://dbpedia.org/ontology/SocietalEvent> .

  # Step 2: Find the commander of this war
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  
  # Step 3: Determine the birthplace of this commander
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 4 & 5: Identify the administration under Emperor Go-Yōzei and Saitō Hajime's involvement
  ?administration <http://dbpedia.org/property/administrationOf> <http://dbpedia.org/resource/Emperor_Go-Yozei> .
  ?saitoHajime <http://dbpedia.org/ontology/memberOf> ?administration .

  # Step 6 & 7: Trace Matsudaira Tadamasa's lineage
  <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?father <http://dbpedia.org/property/father> ?grandfather .
  ?grandfather <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
184,50,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find the child of Archduke Joseph Francis of Austria
  <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?child1 .
  
  # Step 2: Find the parent of that child (likely Archduke Joseph Francis himself)
  ?child1 <http://dbpedia.org/ontology/parent> ?parent1 .

  # Step 3: Identify the child of the child of the parent from step 2
  ?child1 <http://dbpedia.org/ontology/child> ?grandchild1 .
  
  # Step 4: Determine the parent of this grandchild, ensuring it is royalty
  ?grandchild1 <http://dbpedia.org/ontology/parent> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Repeat similar steps for Archduke Ladislaus Philipp of Austria
  <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/child> ?child2 .
  ?child2 <http://dbpedia.org/ontology/parent> ?parent2 .
  ?child2 <http://dbpedia.org/ontology/child> ?grandchild2 .
  ?grandchild2 <http://dbpedia.org/ontology/parent> ?result2 .
  ?result2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Ensure the results are the same
  FILTER(?result = ?result2)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,49,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Find Francisco Franco's military force that is a societal event, an event, and a military conflict
  ?francoForce <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> .
  ?francoForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
  ?francoForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?francoForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 2: Identify the commander known as ""El Director"" and their associated force
  ?elDirector <http://dbpedia.org/property/commonName> ""El Director""@en .
  ?elDirectorForce <http://dbpedia.org/ontology/commander> ?elDirector .
  ?elDirectorForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Step 3: Find the military force related to this commander
  ?militaryForce <http://dbpedia.org/ontology/commander> ?elDirector .
}
```",5,9,6,3,2,3,3,71,0,0,34,0,0.0,0
547,70,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v3 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Part 1: Resting place of the awardee of Gerald Graham's award
SELECT ?restingPlace WHERE {
  ?award <http://dbpedia.org/ontology/awardedBy> <http://dbpedia.org/resource/Gerald_Graham> .
  ?recipient <http://purl.org/dc/terms/relation> ?award .
  ?recipient <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
}

UNION

# Part 2: Resting place of the actor in a show with Emily Richard
SELECT ?actorRestingPlace WHERE {
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> .
  ?show <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .
}

UNION

# Part 3: Resting place of the child of James Burton (property developer)
SELECT ?childRestingPlace WHERE {
  <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/deathPlace> ?childRestingPlace .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
488,53,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Identify the war involving Saitō Hajime
  ?war <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Sait%C5%8D_Hajime> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> ;
       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .

  # Step 2: Find the administration of Emperor Go-Mizunoo's father
  ?emperorFather <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Go-Mizunoo> .
  ?administration <http://dbpedia.org/ontology/administration> ?emperorFather .

  # Step 3: Find Tokugawa Ieyasu's death place
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/property/deathPlace> ?deathPlace .

  # Step 4: Use the identified war to find the commander
  ?war <http://dbpedia.org/ontology/commander> ?commander .

  # Step 5: Query for the birthplace of this commander
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
754,17,test,Give me the parent of the child of the reference to Ram Khamhaeng the Great and parent of Loe Thai.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?commonParent WHERE {
  # Step 1: Find child of Ram Khamhaeng the Great
  ?child <http://dbpedia.org/ontology/birth> <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> .
  
  # Step 2: Identify reference to these children (assuming direct link)
  ?reference <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?child .

  # Step 3: Find parent of Loe Thai
  <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/birth> ?parentOfLoeThai .
  
  # Step 4: Determine the common parent
  ?reference <http://dbpedia.org/ontology/birth> ?commonParent .
  ?parentOfLoeThai <http://dbpedia.org/ontology/birth> ?commonParent .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
55,20,test,"Give me the band of Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony and band member of Guns N' Roses.",SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
# Step 1: Find the band associated with Newsted
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Mike_Newsted> <http://dbpedia.org/ontology/memberOf> ?band .
}

# Step 2: Find a member of that band who is also in San Francisco Symphony and Guns N' Roses
SELECT DISTINCT ?person WHERE {
  # Member of the band found in step 1
  ?person <http://dbpedia.org/ontology/memberOf> ?band .

  # Also a member of San Francisco Symphony
  ?person <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/San_Francisco_Symphony> .

  # Also a member of Guns N' Roses
  ?person <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Guns_N%27_Roses> .
}

# Step 3: Ensure the person's band is both a ""Band"" and a ""Group""
SELECT DISTINCT ?band WHERE {
  # Person found in step 2
  ?person <http://dbpedia.org/ontology/memberOf> ?band .

  # Band must be of type ""Band"" and ""Group""
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
184,56,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?parentOfCombinedEntity WHERE {
  # Step 1: Identify Archduchess Margaret of Austria (born 1925)
  ?margaret <http://dbpedia.org/ontology/birthDate> ?date .
  FILTER(STRSTARTS(STR(?date), ""1925"")) .
  
  # Step 2: Find the parent of Archduchess Margaret
  ?parent1 <http://dbpedia.org/ontology/spouse> ?margaret .

  # Step 3: Find the child of this parent
  ?childOfParent1 <http://dbpedia.org/ontology/birthParent> ?parent1 .

  # Step 4: Identify the native of Budapest
  ?native <http://dbpedia.org/ontology/nationality> ?hungary .
  ?hungary <http://www.w3.org/2000/01/rdf-schema#label> ""Hungary""@en .
  ?native <http://dbpedia.org/property/birthPlace> ?budapest .
  ?budapest <http://www.w3.org/2000/01/rdf-schema#label> ""Budapest""@en .

  # Step 5: Find the parent of the native of Budapest
  ?parent2 <http://dbpedia.org/ontology/spouse> ?native .

  # Step 6: Identify Archduke Joseph August and his child
  ?josephAugust <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
  ?childOfJoseph <http://dbpedia.org/ontology/birthParent> ?josephAugust .

  # Step 7: Combine conditions to find the common entity
  ?combinedEntity = ?childOfParent1 ;
                   = ?parent2 ;
                   = ?childOfJoseph .

  # Step 8: Find the parent of this combined entity
  ?parentOfCombinedEntity <http://dbpedia.org/ontology/spouse> ?combinedEntity .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
427,69,test,"Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . ?v7 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Query for Michele Pinto's party
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/memberOf> ?result .
  
  UNION
  
  # Query for Lamberto Andreotti's father's party
  OPTIONAL { 
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/memberOf> ?result .
  }
  
  UNION
  
  # Query for Romano Prodi's birth name linked to a politician and office holder
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    ?person <http://dbpedia.org/ontology/memberOf> ?result .
    ?person <http://dbpedia.org/ontology/officeHolder> ?office .
    ?person <http://dbpedia.org/ontology/politician> ?politician .
  }
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
617,41,test,"Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find the child of Antiochus III the Great
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  
  # Step 2: Find the spouse of that child
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 3: Check if this spouse is a parent of Nysa (wife of Pharnaces I of Pontus)
  ?spouse <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> .

  # Step 4: Check if any child of this spouse is royalty and a descendant of Seleucus II Callinicus
  ?royalChild <http://dbpedia.org/ontology/birthParent> ?spouse .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?descendantPath ?intermediate .
  ?intermediate <http://dbpedia.org/ontology/birthParent> ?royalChild .
  ?descendantPath <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
}
```",5,6,6,2,3,3,3,71,0,0,2,0,0.0,0
232,42,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
# Step 1: Find Sylvie Bermann's British settlement residence
SELECT ?residence WHERE {
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/property/nationality> ""British""^^<http://www.w3.org/2001/XMLSchema#string> .
}

# Step 2: Identify the native of this residence
SELECT DISTINCT ?native WHERE {
  ?native <http://dbpedia.org/ontology/birthPlace> ?residence .
  FILTER(?residence IN (<result_from_step_1>))
}

# Step 3: Find John Pertwee's child
SELECT ?child WHERE {
  <http://dbpedia.org/resource/John_Pertwee> <http://dbpedia.org/ontology/parent> ?child .
}

# Step 4: Check if this child acted in ""Dog Soldiers (film)""
SELECT ?actor WHERE {
  ?actor <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .
  FILTER(?actor IN (<result_from_step_3>))
}
```

Note: Replace `<result_from_step_1>` and `<result_from_step_3>` with actual URIs obtained from executing the respective queries.",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
915,19,test,"Give me the father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding and resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
# Step 1: Find Lizzie Spaulding's parent who is a fictional character and soap character.
SELECT ?lizziesParent WHERE {
  <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/father> ?lizziesParent .
  ?lizziesParent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?lizziesParent <http://dbpedia.org/ontology/soapCharacter> [] .
}

# Step 2: Find the child of that parent who is a fictional character and soap character.
SELECT ?child WHERE {
  ?lizziesParent <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?child <http://dbpedia.org/ontology/soapCharacter> [] .
}

# Step 3: Find Stephen Verona's birthplace which is a settlement.
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}

# Step 4: Find residents of that settlement who are fictional characters and soap characters.
SELECT ?resident WHERE {
  ?birthPlace <http://dbpedia.org/ontology/resident> ?resident .
  ?resident <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?resident <http://dbpedia.org/ontology/soapCharacter> [] .
}

# Step 5: Find the father of the child identified in step 2.
SELECT ?father WHERE {
  ?child <http://dbpedia.org/ontology/father> ?father .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
427,41,test,Give me the party of the father of Lamberto Andreotti and reference to the name of Italian People's Party (1994) and party of Romano Prodi.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
# Step 1: Find Lamberto Andreotti's father
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://www.w3.org/2002/07/owl#sameAs> ?person .
  ?person <http://dbpedia.org/ontology/father> ?father .
}

# Step 2: Find the party of Lamberto Andreotti's father
SELECT ?party WHERE {
  ?father <http://dbpedia.org/ontology/memberOf> ?party .
}

# Step 3: Reference to Italian People's Party (1994)
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> ?property ?reference .
}

# Step 4: Find the party of Romano Prodi
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/memberOf> ?party .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
161,41,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
# Query for Francisco Largo Caballero's military force in societal events that are also military conflicts
SELECT DISTINCT ?force1 WHERE {
  ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?force1 .
}

UNION

# Query for Francisco Franco's military force in societal events that are also general events and military conflicts
SELECT DISTINCT ?force2 WHERE {
  ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Franco> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?force2 .
}

UNION

# Query for the commander in the Biscay Campaign
SELECT DISTINCT ?commander WHERE {
  <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?commander .
}
```",5,10,6,2,3,3,3,71,0,0,3,0,0.0,0
404,47,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia as a royalty and find her spouse.
  ?princess <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?princess <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  # Step 2: Find her spouse.
  ?princess <http://dbpedia.org/property/spouse> ?spouse .

  # Step 3: Determine her child who is royalty.
  ?princess <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Identify the parent (grandparent) of that child, ensuring they are royalty.
  ?child <http://dbpedia.org/ontology/parent> ?grandparent .
  ?grandparent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Find the child of this grandparent who is Prince George William of Hanover.
  ?grandparent <http://dbpedia.org/ontology/child> ?prince .
  ?prince rdfs:label ""Prince George William of Hanover""@en .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
959,55,test,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
SELECT ?manager WHERE {
  # Step 1: Find Takashi Sekizuka's team
  ?team <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Takashi_Sekizuka> .
  
  # Step 2: Get the manager of that team
  ?team <http://dbpedia.org/ontology/manager> ?manager .

  # Step 3: Find Yōichi Masuzoe's residence country
  <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 4: Identify Eiji Ōtsuka's alma mater
  ?almaMater <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Eiji_Ōtsuka> .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (
    ?type = <http://dbpedia.org/ontology/Organization> &&
    ?type = <http://dbpedia.org/ontology/University> &&
    ?type = <http://dbpedia.org/ontology/EducationalInstitution> &&
    EXISTS { ?almaMater <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> }
  )

  # Step 5: Find common member
  ?commonMember <http://dbpedia.org/ontology/member> ?team .
  ?commonMember <http://dbpedia.org/ontology/alumni> ?almaMater .
}
```",6,11,7,2,3,3,3,71,0,0,2,0,0.0,0
179,17,test,Give me the parent of the child of the parent of Vajiralongkorn and person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find the parent of Vajiralongkorn
  <http://dbpedia.org/resource/Vajiralongkorn> <http://dbpedia.org/ontology/father> ?parentVajiralongkorn .
  
  # Step 2: The child of that parent is Vajiralongkorn himself
  ?child . { ?child <http://dbpedia.org/ontology/father> ?parentVajiralongkorn }
  
  # Step 3: Find the parent of Mom Rajawongse Sirikit Kitiyakara
  <http://dbpedia.org/resource/Sirikit_of_Thailand> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?parentSirikit . { ?parentSirikit <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Sirikit_of_Thailand> }
  
  # Step 4: Find the parent of Vajiralongkorn (which is also Sirikit)
  ?result . { ?result <http://dbpedia.org/ontology/spouse> ?parentVajiralongkorn }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
303,28,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón and party of the commander, that is a politician, in United States invasion of Panama.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . }","```sparql
# Find the party of Arnulfo Arias Madrid
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://dbpedia.org/ontology/politicalParty> ?party .
}

UNION

# Find politicians born in El Valle de Antón and their parties
SELECT DISTINCT ?person ?party WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/El_Valle_de_Antón> .
  ?person <http://dbpedia.org/ontology/politicalParty> ?party .
}

UNION

# Find the party of commanders in the United States invasion of Panama who are politicians
SELECT DISTINCT ?commander ?party WHERE {
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/United_States_invasion_of_Panama> .
  ?commander <http://dbpedia.org/ontology/politicalParty> ?party .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
659,69,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v7 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?commander WHERE {
  # Step 1: Identify the war involving the regiment
  ?war <http://dbpedia.org/ontology/event> ?event .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  
  # Step 2: Regiment as a military force in the war
  <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/militaryForce> ?war .

  # Step 3: Find commanders of the war
  ?war <http://dbpedia.org/ontology/commander> ?commander .

  # Step 4: Link to Rutger Jan Schimmelpenninck's societal event and military conflict
  ?societalEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
  ?societalEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?societalEvent <http://dbpedia.org/ontology/commander> ?commander .
  
  # Step 5: Rutger Jan Schimmelpenninck's reference
  ?reference <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  ?societalEvent <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference .

  # Step 6: Connect to Kingdom of Ireland's office holder
  ?officeHolder <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .

  # Step 7: Commander in the force of the office holder
  ?force <http://dbpedia.org/ontology/commander> ?officeHolder .
  ?commander <http://dbpedia.org/ontology/commander> ?force .
}
```",8,14,9,3,3,3,3,71,0,0,15,0,0.0,0
281,56,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in Colony of New Zealand and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
# Part 1: Wars related to the profession (military unit) of a politician who is an office holder in New Zealand Army
SELECT DISTINCT ?war WHERE {
  ?person <http://dbpedia.org/ontology/politician> _:b0 .
  ?person <http://dbpedia.org/ontology/officeHolder> _:b1 .
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?profession <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .
  ?profession <http://dbpedia.org/ontology/battle> ?war .
}

UNION

# Part 2: Wars related to the awardee of Knight Grand Cross of the Order of the Bath
SELECT DISTINCT ?war WHERE {
  ?person <http://dbpedia.org/property/honours> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
  ?person <http://dbpedia.org/ontology/battle> ?war .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
404,24,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/birthPlace> ?place .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  ?child <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
  ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
492,62,test,"Give me the person decedent at Algiers and person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . },"```sparql
# Step 1: Find the author of ""French Algeria"" and their works
SELECT ?author WHERE {
  <http://dbpedia.org/resource/French_Algeria> <http://purl.org/dc/terms/creator> ?author .
}

WITH ?author

# Step 2: Find decedents at Algiers related to these works
SELECT DISTINCT ?decedent WHERE {
  ?work <http://purl.org/dc/terms/creator> ?author .
  ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
  ?decedent <http://dbpedia.org/ontology/work> ?work .
}

WITH ?decedent

# Step 3: Find the commander in the Battle of Verdun
SELECT DISTINCT ?commander WHERE {
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?commander .
}

WITH ?commander

# Step 4: Identify wars that are both military conflicts and events involving this commander
SELECT DISTINCT ?war WHERE {
  ?commander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://dbpedia.org/ontology/event> ?event .
}

WITH ?war

# Step 5: Find persons who are decedents at Algiers and also involved as commanders in those wars
SELECT DISTINCT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
  ?person <http://dbpedia.org/ontology/battleCommander> ?war .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
391,67,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of Compton, California and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Determine the claim to fame of Sherry Hormann's spouse, which is a work
SELECT ?claimToFame WHERE {
  ?spouse <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
}

# Step 3: Find an actor who has a professional role in that work and is native to Compton, California
SELECT ?actor WHERE {
  ?claimToFame <http://dbpedia.org/ontology/professional> ?actor .
  ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?actor <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .
}

# Step 4: Identify a movie that is classified as a movie, work, and television show
SELECT ?movie WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
547,51,test,Give me the resting place of the actor of Enemy at the Door and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Query for the actor of ""Enemy at the Door"" and their resting place
SELECT ?actor ?restingPlaceActor WHERE {
  <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/ontology/starring> ?actor .
  OPTIONAL { ?actor <http://dbpedia.org/property/restingPlace> ?restingPlaceActor . }
}

# Query for the awardee of an award associated with Gerald Graham and their resting place
SELECT ?award ?awardee ?restingPlaceAwardee WHERE {
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  ?award <http://dbpedia.org/property/awardedTo> <http://dbpedia.org/resource/Gerald_Graham> .
  OPTIONAL { ?awardee <http://dbpedia.org/property/restingPlace> ?restingPlaceAwardee . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
820,20,test,Give me the child of the parent of the professional in Actor and professional in the award of the author of Understanding Comics.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v1 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?child WHERE {
  # Step 1: Identify the author of ""Understanding Comics""
  <http://dbpedia.org/resource/Understanding_Comics> <http://purl.org/dc/terms/creator> ?author .

  # Step 2: Determine the award associated with that author
  ?award <http://dbpedia.org/ontology/winner> ?author .
  
  # Step 3: Find a professional who is an actor and also involved in the identified award
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> ;
                <http://dbpedia.org/property/profession> ?award .
  
  # Step 4: Locate the parent of this professional
  ?professional <http://dbpedia.org/ontology/parent> ?parent .

  # Step 5: Find the child of that parent
  ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",6,6,7,3,2,3,2,20,0,0,128,0,0.0,0
701,54,test,Give me the parent of the child of the child of Seti I and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find Seti I's child (Ramesses II)
  <http://dbpedia.org/resource/Seti_I> <http://dbpedia.org/ontology/spouse> ?setiSpouse .
  ?setiChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ramesses_II> .

  # Step 2: Find the child of Ramesses II (Meritamen)
  ?ramessesChild <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Nefertari> .
  
  # Step 3: Identify Tuya as the parent of Ramesses II
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> .
  ?parent <http://dbpedia.org/ontology/father> ?ramessesChild .

  # Filter to ensure the parent is also a spouse of Ramesses II and fits historical context
  FILTER(?parent = <http://dbpedia.org/resource/Tuya>)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
547,63,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT DISTINCT ?restingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  {
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?parent .
    ?parent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton> .
    ?grandchild <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
  
  UNION
  
  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?person <http://dbpedia.org/property/honours> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
    ?person <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
  
  UNION
  
  # Resting place of the actor of Enemy at the Door
  {
    ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Enemy_at_the_Door> .
    ?actor <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
659,60,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
SELECT ?commander WHERE {
  # Step 1: Find the native place of Rutger Jan Schimmelpenninck who is an office holder.
  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/ontology/birthPlace> ?native .
  ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .

  # Step 2: Find the military force associated with this native place.
  ?native <http://dbpedia.org/property/militaryForce> ?force .

  # Step 3: Determine the commander in that military force.
  ?force <http://dbpedia.org/ontology/commander> ?commander .

  # Step 4: Identify a societal event and military conflict related to this force.
  ?force <http://dbpedia.org/property/reference> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?eventType .
  
  FILTER (?eventType IN (<http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/MilitaryConflict>)).
}
```",6,10,7,3,2,3,3,71,0,0,40,0,0.0,0
783,19,test,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns and associated musical artist of the band member of Ofori Amponsah.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
# Step 1: Identify the person born as Ebony Reigns who is both an artist and a musical artist
SELECT ?ebony WHERE {
  ?ebony <http://dbpedia.org/ontology/birthName> ""Ebony Reigns"" .
  ?ebony <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?ebony <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 2: Find band members associated with Ebony Reigns
SELECT DISTINCT ?bandMember WHERE {
  VALUES ?ebony { ?ebony } # Use the result from step 1
  ?ebony <http://dbpedia.org/property/memberOf> ?band .
  ?band <http://dbpedia.org/ontology/member> ?bandMember .
}

# Step 3: Find associated musical artists of Ofori Amponsah
SELECT DISTINCT ?associatedArtist WHERE {
  <http://dbpedia.org/resource/Ofori_Amponsah> <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}

# Step 4: Find common entities between band members and associated musical artists
SELECT DISTINCT ?commonEntity WHERE {
  VALUES ?bandMember { ?bandMember } # Use the result from step 2
  VALUES ?associatedArtist { ?associatedArtist } # Use the result from step 3
  FILTER (?bandMember = ?associatedArtist)
  BIND(?bandMember AS ?commonEntity)
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
232,30,test,"Give me the child of Jon Pertwee and actor of Dog Soldiers (film) and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?child WHERE {
  # Find child of Jon Pertwee
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .

  # Ensure this child is an actor in ""Dog Soldiers"" (film)
  ?child <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .
  
  # Find the native settlement of Sylvie Bermann
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> ;
     <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?settlementType .
  
  # Ensure the settlement is a type of settlement
  FILTER(?settlementType = <http://dbpedia.org/ontology/Settlement>) .

  # Check if the child's native place matches this settlement
  ?child <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?settlementType .
  
  # Ensure the child's native place is the same settlement type
  FILTER(?settlementType = <http://dbpedia.org/ontology/Settlement>) .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
492,44,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
SELECT DISTINCT ?person WHERE {
  # Find decedent at French Algeria
  ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
  
  # Find capital of Algeria that is a settlement and its decedents
  <http://dbpedia.org/resource/Algiers> <http://www.w3.org/2000/01/rdf-schema#label> ""Algiers""@en ;
    <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/Settlements100000001> .
  
  ?decedent2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .

  # Find war in which Frédéric-Georges Herr was a commander
  <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/commander> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>, <http://dbpedia.org/ontology/Event> .

  # Combine conditions to find the person
  FILTER (?decedent = ?decedent2)
  BIND(?decedent AS ?person)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
767,59,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT DISTINCT ?almaMater WHERE {
  # Step 1: Find the writer of ""Where It's At"" by Dustin Lynch
  <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://purl.org/dc/terms/creator> ?writer .

  # Step 2: Identify administration entities related to George Kilbon Nash that are settlements
  ?administration <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/George_Kilbon_Nash> .
  ?administration <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 3: Find the alma mater for both the writer and the settlement-related administration entity
  OPTIONAL { ?writer <http://dbpedia.org/property/almaMater> ?almaMater . }
  OPTIONAL { ?administration <http://dbpedia.org/property/almaMater> ?almaMater . }

}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,71,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as the birth name of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v8 . ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v4 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Step 1: Find the actor of ""Unnatural (TV series)""
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 2: Determine their profession
SELECT ?profession WHERE {
  ?actor <http://dbpedia.org/ontology/profession> ?profession .
}

# Step 3: Find Ted McGinley's birth name and spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 4: Identify an alumnus of Ohio State University by birth name
SELECT ?alumnus WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> .
  ?alumnus <http://dbpedia.org/property/birthName> ?birthName .
}

# Step 5: Find the spouse of this alumnus
SELECT ?spouse WHERE {
  ?alumnus <http://dbpedia.org/ontology/spouse> ?spouse .
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person = ?alumnus .
}

# Step 6: Identify a professional in the same profession as the actor
SELECT DISTINCT ?professional WHERE {
  ?actor <http://dbpedia.org/ontology/profession> ?profession .
  ?professional <http://dbpedia.org/ontology/profession> ?profession .
  OPTIONAL { 
    ?spouse1 <http://dbpedia.org/ontology/spouse> ?professional .
    ?person1 <http://dbpedia.org/property/birthName> ?birthName1 .
    ?person1 = ?spouse1 .
  }
  OPTIONAL {
    ?spouse2 <http://dbpedia.org/ontology/spouse> ?professional .
    ?person2 <http://dbpedia.org/property/birthName> ?birthName2 .
    ?person2 = ?spouse2 .
  }
}
```",9,9,10,3,3,3,3,71,0,0,1,0,0.0,0
285,19,test,Give me the spouse of the professional in the award of Stan Lee and parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find the award associated with Stan Lee
  ?award <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Stan_Lee> .
  
  # Step 2: Identify the professional linked to that award
  ?professional <http://purl.org/dc/terms/subject> ?award .
  
  # Step 3: Determine the spouse of that professional
  ?professional <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 4: Find Tina Onassis Niarchos and her child
  <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?child .
  
  # Step 5: Identify the parent of that child (should match with spouse)
  ?parent <http://dbpedia.org/ontology/child> ?child .
  FILTER (?spouse = ?parent)
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
391,64,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of The Departed and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find the nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/nickName> ?nickname .
}

# Step 2: Identify an actor in ""The Departed"" and another work that is a movie and television show
SELECT DISTINCT ?actor WHERE {
  ?work1 <http://dbpedia.org/ontology/starring> ?actor .
  ?work1 <http://dbpedia.org/ontology/title> ""The Departed""@en .

  ?work2 <http://dbpedia.org/ontology/starring> ?actor .
  ?work2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?work2 <http://dbpedia.org/ontology/title> ?title .
  
  # Ensure the work is also a television show
  OPTIONAL { ?work2 <http://dbpedia.org/ontology/basedOn> ?tvShow . }
}

# Step 3: Find the native place of this actor
SELECT ?nativePlace WHERE {
  ?actor <http://dbpedia.org/ontology/nationality> ?nationality .
  ?actor <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
528,45,test,Give me the war of Orozimbo Barbosa and war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Wars of Orozimbo Barbosa
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Wars of Irene Morales
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Force of the person born as Narciso Campero
SELECT ?force WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Narciso Campero"" .
  ?person <http://dbpedia.org/ontology/force> ?force .
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
251,25,test,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier and administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/ontology/place> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/property/leaderParty> ?v4 . },"```sparql
SELECT ?location WHERE {
  # Step 1: Find the military conflict involving Louis François Félix Musnier
  ?war <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Louis_François_Félix_Musnier> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 2: Find the ruling party's administration involved in this war
  ?party <http://dbpedia.org/property/rulingParty> ?administration .
  ?administration <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .

  # Step 3: Ensure the administration was active in Sicily during this war
  ?administration <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Sicily> .
  
  # Step 4: Find the location of this political party's activity
  ?party <http://dbpedia.org/ontology/location> ?location .

  # Step 5: Identify Laura Mancinelli's death place and ensure it matches
  OPTIONAL {
    <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/property/deathPlace> ?deathPlace .
    FILTER(?location = ?deathPlace)
  }
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
281,49,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
# First Part: Wars associated with a military unit profession of an office holder and politician in New Zealand Army
SELECT DISTINCT ?war1 WHERE {
  ?person <http://dbpedia.org/ontology/profession> ?unit .
  ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?person <http://dbpedia.org/ontology/politicalPartyMember> ?party .
  ?person <http://dbpedia.org/ontology/officeHolder> ?office .
  ?unit <http://dbpedia.org/property/army> <http://dbpedia.org/resource/New_Zealand_Army> .
  ?unit <http://dbpedia.org/ontology/battle> ?war1 .
}

# Second Part: Wars associated with the awardee of Knight Grand Cross of the Order of the Bath
UNION

SELECT DISTINCT ?war2 WHERE {
  ?person <http://dbpedia.org/property/orderOfTheBath> ""Knight Grand Cross"" .
  ?person <http://dbpedia.org/ontology/battle> ?war2 .
}
```",5,8,6,3,2,3,3,71,0,0,9,0,0.0,0
9,62,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as QUB and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?almaMater WHERE {
  # Step 1: Identify QUB as an organization in Belfast
  <http://dbpedia.org/resource/Queen's_University_Belfast> <http://www.w3.org/2000/01/rdf-schema#label> ""QUB""@en .
  
  # Step 2: Find the mayor of this organization who is a politician
  ?mayor <http://dbpedia.org/ontology/politicianForOrganization> <http://dbpedia.org/resource/Queen's_University_Belfast> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  
  # Step 3: Determine the alma mater of this mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .

  UNION

  # Step 4: Identify the award associated with Royal Medals
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medal""@en .
  
  # Step 5: Find the awardee(s) of this award and their alma mater
  ?awardee <http://dbpedia.org/ontology/receivesAward> ?award ;
           <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
994,51,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?bandMember WHERE {
  ?dokken <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?dokken <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?dokken rdfs:label ""Don Dokken""@en .

  ?bandMember <http://dbpedia.org/ontology/member> ?dokken .
  
  ?meshuggah <http://dbpedia.org/ontology/member> ?bandMember .
  ?meshuggah <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/MusicalGroup>, <http://dbpedia.org/ontology/Organisation>))
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
528,56,test,Give me the war of Orozimbo Barbosa and war of the military force of Battle of Pisagua and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
# Part 1: War of Orozimbo Barbosa
SELECT ?war1 WHERE {
  <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://dbpedia.org/ontology/conflict> ?war1 .
}

UNION

# Part 2: War of the Military Force of Battle of Pisagua
SELECT ?war2 WHERE {
  <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/property/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://dbpedia.org/ontology/conflict> ?war2 .
}

UNION

# Part 3: Force of the Person Born as Narciso Campero
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://www.w3.org/2000/01/rdf-schema#label> ""Narciso Campero""@en .
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryForce> ?force .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
55,24,test,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
# Step 1: Get band members of San Francisco Symphony that are also a band and group
SELECT ?member WHERE {
  ?symphony <http://dbpedia.org/ontology/member> ?member .
  FILTER(STRSTARTS(STR(?symphony), ""http://dbpedia.org/resource/San_Francisco_Symphony""))
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
}

UNION

# Step 2: Get bands associated with Newsted
SELECT ?band WHERE {
  ?newsted <http://dbpedia.org/property/band> ?band .
  FILTER(STRSTARTS(STR(?newsted), ""http://dbpedia.org/resource/Newsted""))
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
}

# Step 3: Find common band members
SELECT DISTINCT ?commonMember WHERE {
  # Members from San Francisco Symphony that are bands and groups
  ?member1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?member1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
  ?symphony <http://dbpedia.org/ontology/member> ?member1 .
  FILTER(STRSTARTS(STR(?symphony), ""http://dbpedia.org/resource/San_Francisco_Symphony""))

  # Bands associated with Newsted
  ?newstedBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?newsted <http://dbpedia.org/property/band> ?newstedBand .
  FILTER(STRSTARTS(STR(?newsted), ""http://dbpedia.org/resource/Newsted""))

  # Find common members
  ?member1 = ?commonMember .
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
16,70,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as Ted Martin McGinley and person born as the birth name of the alumnus of Ohio State University.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . }","```sparql
# Step 1: Find the actor of ""Unnatural (TV series)"" and their profession
SELECT ?actor ?profession WHERE {
  <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://purl.org/dc/terms/profession> ?profession .
}

# Step 2: Find Ted Martin McGinley
SELECT ?ted WHERE {
  ?ted <http://www.w3.org/2000/01/rdf-schema#label> ""Ted Martin McGinley""@en .
  ?ted <http://dbpedia.org/ontology/birthName> ""Ted Martin McGinley"" .
}

# Step 3: Find the alumnus of Ohio State University by birth name
SELECT ?alumnus WHERE {
  ?alumnus <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> .
}

# Step 4: Find the common spouse
SELECT DISTINCT ?spouse WHERE {
  # Spouse of the actor's profession
  ?actor <http://purl.org/dc/terms/profession> ?profession .
  ?profession <http://xmlns.com/foaf/0.1/marriedTo> ?spouse .

  # Spouse of Ted Martin McGinley
  ?ted <http://dbpedia.org/ontology/spouse> ?spouse .

  # Spouse of the alumnus by birth name
  ?alumnus <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
404,68,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v7 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
  ?princess <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Determine her father, Ernest Augustus, Duke of Brunswick
  ?father <http://dbpedia.org/ontology/father> ?princess .
  ?father <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .

  # Step 3: Find the child of Ernest Augustus, Duke of Brunswick who is royalty
  ?child <http://dbpedia.org/ontology/father> ?father .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Identify the parent (royalty) of this child
  ?parent <http://dbpedia.org/ontology/child> ?child .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Locate Prince George William of Hanover and find his royal parent
  ?georgeParent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_George_William_of_Hanover> .
  ?georgeParent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Ensure the parent from step 4 is the same as the parent from step 5
  FILTER (?parent = ?georgeParent)

  # Step 6: Determine the spouse of Princess Victoria Louise of Prussia
  ?princess <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
617,62,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v3 <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?finalChild WHERE {
  # Step 1: Find Nysa's parent
  ?nysa <http://dbpedia.org/ontology/wife> <http://dbpedia.org/resource/Pharnaces_I_of_Pontus> .
  ?nysa <http://dbpedia.org/ontology/birthName> ""Nysa"" .
  ?nysa <http://dbpedia.org/ontology/father> ?parent .

  # Step 2: Find a child of Nysa's parent who is royalty
  ?child1 <http://dbpedia.org/ontology/father> ?parent .
  ?child1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the successor of Antiochus II Theos who is royalty
  ?antiochusII <http://dbpedia.org/resource/Antiochus_II_Theos> .
  ?successor1 <http://dbpedia.org/ontology/successor> ?antiochusII .
  ?successor1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find a child of this successor who is royalty
  ?child2 <http://dbpedia.org/ontology/father> ?successor1 .
  ?child2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Find the spouse of this royal child
  ?spouse <http://dbpedia.org/ontology/spouse> ?child2 .

  # Step 6: Find the successor of Antiochus (son of Antiochus III) who is royalty
  ?antiochusIII <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?antiochusSon <http://dbpedia.org/ontology/child> ?antiochusIII .
  ?successor2 <http://dbpedia.org/ontology/successor> ?antiochusSon .
  ?successor2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 7: Find the child of this successor
  ?finalChild <http://dbpedia.org/ontology/father> ?successor2 .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
659,18,test,Give me the military force of Napoleonic Wars and commander in Battle of Leipzig and commander in German campaign of 1813.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT DISTINCT ?militaryForce WHERE {
  ?militaryForce <http://dbpedia.org/ontology/war> <http://dbpedia.org/resource/Napoleonic_Wars> .
  
  OPTIONAL { 
    ?commander1 <http://dbpedia.org/ontology/battleCommanded> <http://dbpedia.org/resource/Battle_of_Leipzig> .
    ?militaryForce <http://dbpedia.org/ontology/commander> ?commander1 .
  }
  
  OPTIONAL {
    ?commander2 <http://dbpedia.org/ontology/battleCommanded> <http://dbpedia.org/resource/German_campaign_of_1813> .
    ?militaryForce <http://dbpedia.org/ontology/commander> ?commander2 .
  }

  FILTER EXISTS { ?commander1 = ?commander2 }
}
```",3,3,4,1,3,3,3,71,0,0,5,0,0.0,0
391,69,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/nickname> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Step 1: Get Michael Ballhaus's claim to fame (work)
SELECT ?ballhausWork WHERE {
  <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/claimToFame> ?ballhausWork .
}

# Step 2: Find the figure associated with Jackson, Tennessee's nickname and their native place
SELECT ?figureNativePlace WHERE {
  ?figure <http://dbpedia.org/property/nickName> ""Jackson, Tennessee"" .
  ?figure <http://dbpedia.org/ontology/nativeOf> ?figureNativePlace .
}

# Step 3: Find an actor of a movie that is also a work and TV show
SELECT ?actor WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> ;
         <http://dbpedia.org/ontology/work> ?work ;
         <http://dbpedia.org/ontology/tvShow> ?tvShow .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 4: Combine the results to find the final actor
SELECT DISTINCT ?finalActor WHERE {
  # Assuming we have intermediate variables from previous steps
  VALUES (?ballhausWork ?figureNativePlace) { (VALUES) }
  
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/ontology/nativeOf> ?figureNativePlace .
}
```

Note: The query is conceptual and assumes certain relationships exist in DBpedia. Adjustments may be needed based on actual data availability.",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
959,60,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v5 . }","```sparql
SELECT ?manager ?team ?almaMater ?person WHERE {
  # Step 1: Find the manager of the 1998 Kashima Antlers season
  <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?manager .
  
  # Step 2: Ensure the manager is a sports manager
  ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .

  # Step 3: Identify the team managed by this sports manager
  ?manager <http://dbpedia.org/ontology/team> ?team .
  
  # Step 4: Find the alma mater that fits all criteria
  ?manager <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> ;
             <http://dbpedia.org/ontology/University> ;
             <http://dbpedia.org/ontology/EducationalInstitution> .
  ?almaMater <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> .

  # Step 5: Locate a person born in 1958 who attended this alma mater
  ?person <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",6,11,7,3,2,3,3,71,0,0,3,0,0.0,0
281,38,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
# Task 1: Find entity in Bob Heffron's birthplace (country)
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?birthPlace ?property ?entity .
}

UNION

# Task 2: Find war of Heather Roy's profession (military unit)
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?profession <http://dbpedia.org/property/battle> ?war .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
404,46,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find Princess Victoria Louise of Prussia's birth name
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/birthName> ?birthName .
  
  # Step 2: Identify a person born as that royalty who is also a spouse
  ?person <http://dbpedia.org/ontology/birthName> ?birthName ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  
  # Step 3: Find the child of Ernest Augustus, Duke of Brunswick who is royalty
  <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?royalChild ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  
  # Step 4: Find the parent of this royal child
  ?royalChild <http://dbpedia.org/ontology/parent> ?parent .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
959,45,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and native of Japan and member of University of Tsukuba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
SELECT ?finalManager WHERE {
  # Step 1: Find the manager of the 1998 Kashima Antlers season who is a sports manager.
  <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?manager .
  
  # Ensure this manager is categorized as a SportsManager
  ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .

  # Step 2: Check if the manager is native to Japan and a member of University of Tsukuba.
  ?manager <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> .
  ?manager <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Tsukuba> .

  # Step 3: Find the team managed by this manager.
  ?team <http://dbpedia.org/ontology/manager> ?manager .

  # Step 4: Identify the manager of that team.
  ?team <http://dbpedia.org/ontology/manager> ?finalManager .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
378,40,test,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?result WHERE {
  # Claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  { 
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/claimToFame> ?result .
  }
  
  UNION
  
  # War of Joaquín Blake
  { 
    ?joaquinBlake <http://dbpedia.org/ontology/battle> ?war .
    FILTER(?joaquinBlake = <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake>)
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
  
  UNION
  
  # War of the person born as Carl Pontus Gahn
  { 
    ?person <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn"" .
    ?person <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
701,62,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II and parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find spouse of Amun-her-khepeshef
  ?amunHerKhepeshef <http://dbpedia.org/ontology/spouse> ?spouse .
  FILTER(?amunHerKhepeshef = <http://dbpedia.org/resource/Amun-her-khepeshef>) .

  # Step 2: Find child of this spouse
  ?spouse <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Find parent of this child (should be Amun-her-khepeshef)
  ?child <http://dbpedia.org/ontology/parent> ?amunHerKhepeshef .

  # Step 4: Identify spouse of Ramesses II who is also a parent to the child of Seti I's child
  ?ramessesII <http://dbpedia.org/ontology/spouse> ?anotherSpouse .
  FILTER(?ramessesII = <http://dbpedia.org/resource/Ramesses_II>) .

  ?setiI <http://dbpedia.org/ontology/child> ?setiIClone .
  FILTER(?setiI = <http://dbpedia.org/resource/Seti_I>) .

  ?setiIClone <http://dbpedia.org/ontology/child> ?grandChildOfSetiI .
  
  ?anotherSpouse <http://dbpedia.org/ontology/parent> ?grandChildOfSetiI .

  # Step 5: Find the parent of this identified individual
  ?anotherSpouse <http://dbpedia.org/ontology/parent> ?result .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
801,67,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v6 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
SELECT ?professional WHERE {
  # Step 1: Find the album ""What U See Is What U Get""
  <http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)> <http://purl.org/dc/terms/creator> ?writer .
  
  # Step 2: Ensure the writer is a musical artist and an artist
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  
  # Step 3: Find associated musical artist(s) who are rappers
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?rapper ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Rapper> .
  
  # Step 4: Identify a work that is a musical work, song, and general work by the rapper
  ?work <http://purl.org/dc/terms/creator> ?rapper ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  
  # Step 5: Find the professional involved in this work as both an artist and producer
  ?work <http://purl.org/dc/terms/contributor> ?professional ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Producer> .
}
```",7,15,8,3,3,3,3,71,0,0,8,0,0.0,0
747,47,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on the birth date of Pavlo Khudzik.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
SELECT DISTINCT ?band WHERE {
  # Step 1: Find Pavlo Khudzik's birth date
  <http://dbpedia.org/resource/Pavlo_Khudzik> <http://www.w3.org/2000/01/rdf-schema#birthDate> ?birthDate .

  # Step 2: Find a person born on that date
  ?person <http://www.w3.org/2000/01/rdf-schema#birthDate> ?birthDate .
  
  # Step 3: Identify works by Amba Shepherd that are songs
  ?work <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/Amba_Shepherd> ;
        <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/Song104069068> .

  # Step 4: Determine the writer of these songs
  ?work <http://dbpedia.org/ontology/writer> ?writer .
  
  # Step 5: Find the band associated with this writer
  ?writer <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
77,20,test,"Give me the war of the awardee of the award of Maxim Grigorievich Vlasov and force of the mayor of the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/leader> ?v5 . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war ?force WHERE {
  # Step 1: Find Maxim Grigorievich Vlasov's award
  <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/ontology/receivedAward> ?award .

  # Step 2: Find the awardee of that award and their associated war
  ?awardee <http://dbpedia.org/ontology/receivedAward> ?award .
  ?awardee <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 3: Find the mayor of Warsaw and their administered territory
  ?mayor <http://dbpedia.org/property/mayorOf> <http://dbpedia.org/resource/Warsaw> .
  ?territory <http://dbpedia.org/ontology/administeredBy> ?mayor .

  # Step 4: Find the force of the organisation administering the territory
  ?organisation <http://dbpedia.org/ontology/administers> ?territory .
  ?organisation <http://dbpedia.org/property/militaryForce> ?force .
}
```",6,7,7,3,2,3,2,20,0,0,26,0,0.0,0
994,46,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . }","```sparql
# Step 1: Find band members of Meshuggah who are also a band, group, and organization.
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Meshuggah> <http://dbpedia.org/ontology/member> ?member .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}

# Step 2: Find associated musical artists of these members.
SELECT DISTINCT ?associatedArtist WHERE {
  VALUES ?member { 
    # Replace with actual URIs found in step 1
  }
  ?member <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}

# Step 3: For each associated artist from step 2, find their associated musical artists.
SELECT DISTINCT ?secondLevelAssociatedArtist WHERE {
  VALUES ?associatedArtist { 
    # Replace with actual URIs found in step 2
  }
  ?associatedArtist <http://dbpedia.org/property/associatedMusicalArtist> ?secondLevelAssociatedArtist .
}

# Step 4: Find the reference to Watchtower and its associated musical artists.
SELECT DISTINCT ?watchtowerAssociatedArtist WHERE {
  <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/reference> ?reference .
  ?reference <http://dbpedia.org/property/associatedMusicalArtist> ?watchtowerAssociatedArtist .
}
```

Note: The placeholders in the `VALUES` clauses need to be replaced with actual URIs obtained from executing each step sequentially.",5,8,6,3,2,3,3,71,0,0,5,0,0.0,0
492,45,test,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT DISTINCT ?commander WHERE {
  # Part 1: Find commanders in Franco-Hova Wars
  ?war <http://dbpedia.org/ontology/name> ""Franco-Hova Wars"" .
  ?war <http://dbpedia.org/ontology/commander> ?commander .

  # Part 2: Find a person decedent at the capital of Khemis Miliana District and French Algeria
  ?person <http://dbpedia.org/property/diedPlace> ?place1 ;
          <http://dbpedia.org/property/diedPlace> ?place2 .
  
  ?place1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?place1 <http://dbpedia.org/ontology/capital> ?capital .
  ?capital <http://dbpedia.org/resource/Khemis_Miliana_District> .

  ?place2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> ;
          <http://dbpedia.org/property/name> ""French Algeria"" .
  
  # Ensure the same person is found in both parts
  FILTER(?commander = ?person)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
184,61,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Step 1: Find the royal parent of Archduke Ladislaus Philipp of Austria
SELECT ?royalParent WHERE {
  <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/birthParent> ?parent .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 2: Find the child of this royal parent
SELECT ?child WHERE {
  ?royalParent <http://dbpedia.org/ontology/birthChild> ?child .
}

# Step 3: Find the grandchild (child of the child) of this royal parent
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/ontology/birthChild> ?grandchild .
}

# Step 4: Identify the parent of Archduchess Margaret of Austria (born 1925)
SELECT ?parentMargaret WHERE {
  <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> <http://dbpedia.org/ontology/birthParent> ?parentMargaret .
}

# Step 5: Find the grandparent of Archduchess Margaret of Austria
SELECT ?grandparent WHERE {
  ?parentMargaret <http://dbpedia.org/ontology/birthParent> ?grandparent .
}

# Step 6: Find the child of this grandparent
SELECT ?childGrandparent WHERE {
  ?grandparent <http://dbpedia.org/ontology/birthChild> ?childGrandparent .
}

# Final step: Combine results to find common entities
SELECT DISTINCT ?commonEntity WHERE {
  VALUES ?entity1 { ?grandchild }
  VALUES ?entity2 { ?childGrandparent }
  FILTER(?entity1 = ?entity2)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,49,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?person WHERE {
  # Step 1: Get the alumnus of Ohio State University
  ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/OHIO_State_University> .
  
  # Step 2: Find Ted Martin McGinley's spouse
  ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ted_McGinley> .

  # Step 3: Get the birth name of that spouse
  ?spouse <http://dbpedia.org/ontology/birthName> ?birthName .
  
  # Step 4: Find a person born with that birth name
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?alumnusLabel .
  FILTER(?alumnusLabel = ?alumnus)
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
16,65,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as Ted Martin McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v6 . }","```sparql
SELECT ?person WHERE {
  # Step 1: Find Gigi Rice's birth name
  <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 2: Identify Ted Martin McGinley's spouse
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 3: Determine the profession of the actor from ""Unnatural"" (TV series)
  ?unnaturalActor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Unnatural_(TV_series)> .
  ?unnaturalActor <http://purl.org/dc/terms/profession> ?profession .

  # Step 4: Find the person who matches all criteria
  ?person <http://dbpedia.org/ontology/birthName> ?birthName ;
          <http://dbpedia.org/ontology/spouse> ?spouse ;
          <http://purl.org/dc/terms/profession> ?profession .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
16,60,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Step 1: Find the alumnus of Ohio State University
SELECT ?alumnus WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Ohio_State_University> .
}

# Step 2: Retrieve their spouse
SELECT ?spouse WHERE {
  ?alumnus <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 3: Get Ted McGinley's birth name
SELECT ?tedBirthName WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?tedBirthName .
}

# Step 4: Identify the person with that birth name
SELECT ?personWithTedBirthName WHERE {
  ?personWithTedBirthName <http://dbpedia.org/ontology/birthName> ?tedBirthName .
}

# Step 5: Determine the birth name of the spouse from step 2 and find the corresponding person
SELECT ?finalPerson WHERE {
  ?spouse <http://dbpedia.org/ontology/birthName> ?birthNameOfSpouse .
  ?finalPerson <http://dbpedia.org/ontology/birthName> ?birthNameOfSpouse .
}
```

Note: This query is structured in steps and would need to be executed sequentially, with each step's result feeding into the next. In practice, this might require a more complex SPARQL setup or additional scripting to handle intermediate results.",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
547,60,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
SELECT ?restingPlace WHERE {
  # Resting place of the awardee of Gerald Graham's award
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  ?award <http://dbpedia.org/resource/Gerald_Graham> .
  ?awardee <http://dbpedia.org/ontology/deathPlace> ?restingPlace .

  UNION

  # Resting place of the child of the child of William Haliburton
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton> .
  ?grandchild <http://dbpedia.org/ontology/deathPlace> ?restingPlace
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
659,49,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
SELECT ?commander WHERE {
  # Step 1: Find the military force associated with Arthur Wellesley
  <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/militaryForce> ?force .

  # Step 2: Identify commanders of this force
  ?commander <http://dbpedia.org/ontology/commanderOfMilitaryUnit> ?unit .
  ?unit <http://dbpedia.org/ontology/memberOfMilitaryForce> ?force .

  # Step 3: Filter by events that are societal, general, and military conflicts
  ?event <http://dbpedia.org/ontology/event> ?commander ;
         a <http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 4: Ensure reference to Rutger Jan Schimmelpenninck
  ?event <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
}
```",5,8,6,3,2,3,3,71,0,0,38,0,0.0,0
547,67,test,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . },"```sparql
# Query 1: Resting place of James Burton (Egyptologist)
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
}

UNION

# Query 2: Resting place of the awardee of Gerald Graham's award
SELECT ?awardeeRestingPlace WHERE {
  ?award <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Gerald_Graham> .
  ?recipient <http://dbpedia.org/ontology/receivesAward> ?award .
  ?recipient <http://dbpedia.org/ontology/restingPlace> ?awardeeRestingPlace .
}

UNION

# Query 3: Resting place of the actor in a show with Emily Richard
SELECT ?actorRestingPlace WHERE {
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> .
  ?show <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/ontology/restingPlace> ?actorRestingPlace .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
994,62,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find entities related to Watchtower
  ?entity <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Watchtower_(band)> .
  
  # Step 2: Find associated musical artists of these entities
  ?entity <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .

  # Step 3: Check if the artist is a band member of Don Dokken
  ?artist1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Don_Dokken> .
  
  # Step 4: Find associated musical artists of these band members
  ?artist1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .

  # Step 5: Ensure the artist is a band, group, and organization
  ?artist2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?artist2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
  ?artist2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .

  # Step 6: Find bands associated with Fredrik Thordendal
  <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/bandMember> ?band .
  
  # Step 7: Find final associated musical artists of these bands
  ?band <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalArtist .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
328,71,test,"Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> ?v2 . ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?commander WHERE {
  # Step 1: Identify Gustav Jonson's leader who is an office holder and a politician.
  ?leader <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/Gustav_Jonson> .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 2: Find the government agency led by this person.
  ?agency <http://dbpedia.org/ontology/leader> ?leader .
  ?agency <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .

  # Step 3: Determine the commander associated with the Volcano and Ryukyu Islands campaign, who also received an award for it.
  ?campaign <http://dbpedia.org/property/campaignName> ""Volcano and Ryukyu Islands"" .
  ?commander <http://dbpedia.org/ontology/commander> ?campaign .
  ?award <http://dbpedia.org/ontology/receiver> ?commander .
  ?award <http://dbpedia.org/ontology/awardedFor> ?campaign .

  # Step 4: Locate the force commanded by this individual at Budapest.
  ?force <http://dbpedia.org/ontology/commander> ?commander .
  ?battle <http://dbpedia.org/ontology/battleLocation> ""Budapest"" .
  ?battle <http://dbpedia.org/ontology/foughtBy> ?force .

  # Step 5: Identify the decedent related to this force.
  ?decedent <http://dbpedia.org/ontology/deceased> ?person .
  ?person <http://dbpedia.org/ontology/memberOf> ?force .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
391,66,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as Hub City.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Find a movie that is a movie, work, and television show
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .

  # Step 2: Find an actor of this movie
  ?movie <http://dbpedia.org/property/starring> ?actor .

  # Step 3: Identify Michael Ballhaus's claim to fame work
  <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/work> ?fameWork .
  
  # Step 4: Find the native place of a figure known as ""Hub City""
  ?figure <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?figure <http://dbpedia.org/property/knowAs> ""Hub City"" .
  ?figure <http://dbpedia.org/ontology/birthPlace> ?hubCity .

  # Ensure the actor is associated with both the movie and Michael Ballhaus's claim to fame
  ?actor <http://dbpedia.org/ontology/starring> ?fameWork .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
801,69,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
SELECT ?producer WHERE {
  # Step 1: Find the writer of the album ""What U See Is What U Get""
  <http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)> <http://purl.org/dc/terms/creator> ?writer .
  
  # Step 2: Ensure the writer is a musical artist
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Step 3: Find associated musical artists for this writer
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  
  # Step 4: Identify the alter ego or true self of The Shadow among these artists
  ?associatedArtist rdfs:label ""The Shadow""@en ; 
                   <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  
  # Step 5: Find works that are musical works, songs, and general works by 50 Cent and this artist
  ?work <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/50_Cent> ;
        <http://purl.org/dc/terms/creator> ?associatedArtist ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  
  # Step 6: Find the producer of such a work
  ?work <http://purl.org/dc/terms/producer> ?producer .
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
488,21,test,Give me the administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query 1: Find the administration of Emperor Go-Yōzei
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/administration> ?administration .
}

UNION

# Query 2: Find the birthplace of a commander in the Boshin War
SELECT ?birthPlace WHERE {
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Boshin_War> .
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
429,9,test,"Give me the country of the military force, that is an organisation, of Camden Expedition and administration of the father of Martha Johnson Patterson.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/country> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT DISTINCT ?country WHERE {
  # Find the military force associated with Camden Expedition that is an organization
  OPTIONAL {
    <http://dbpedia.org/resource/Camden_Expedition> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
    ?militaryForce <http://dbpedia.org/property/country> ?country .
  }

  # Find the administration related to the father of Martha Johnson Patterson
  OPTIONAL {
    <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://www.w3.org/2002/07/owl#sameAs> ?mother .
    ?mother <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/administration> ?administration .
    ?administration <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Administration> .
    ?administration <http://dbpedia.org/property/country> ?country .
  }
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
427,53,test,"Give me the reference to the name of the party of Michele Pinto and party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . }","```sparql
SELECT ?michelePintoParty ?giulioAndreottiParty ?prodiParty WHERE {
  # Find the political party of Michele Pinto
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/politicalParty> ?michelePintoParty .

  # Find the political party of Giulio Andreotti
  <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/politicalParty> ?giulioAndreottiParty .

  # Find Romano Antonio Prodi's political party, ensuring he is an office holder and a politician
  {
    SELECT ?prodi WHERE {
      ?prodi <http://www.w3.org/2000/01/rdf-schema#label> ""Romano Antonio Prodi""@en .
      ?prodi <http://dbpedia.org/ontology/birthName> ""Romano Antonio Prodi"" .
      ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
      ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    }
  } 
  # Find the political party of Romano Antonio Prodi
  ?prodi <http://dbpedia.org/ontology/politicalParty> ?prodiParty .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
285,17,test,Give me the spouse of the professional in the award of Stan Lee and parent of Alexander Onassis.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?spouse WHERE {
  ?award <http://dbpedia.org/ontology/awardedBy> <http://dbpedia.org/resource/Stan_Lee> .
  ?professional <http://dbpedia.org/ontology/receivesAward> ?award .
  ?professional <http://dbpedia.org/ontology/spouse> ?spouse .
  ?professional <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Alexander_Onassis> .
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
232,67,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of Jon Pertwee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Find Jon Pertwee's child who is a politician and an office holder.
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Jon_Pertwee> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
         <http://dbpedia.org/ontology/officeHolder> ?office .

  # Step 2: Ensure this person is native to France.
  ?child <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .

  # Step 3: Find the residence of this person which is a settlement in Britain.
  ?residence <http://dbpedia.org/ontology/residence> ?child .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> ;
             <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 4: Locate the professional actor, narrator, and producer associated with this residence.
  ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> ;
                 <http://dbpedia.org/ontology/narrator> ?narrator ;
                 <http://dbpedia.org/ontology/producer> ?producer ;
                 <http://dbpedia.org/ontology/residence> ?residence .

  # Step 5: Identify the film (which is also a military conflict) related to their claim to fame.
  ?film <http://dbpedia.org/ontology/claimToFame> ?professional .
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Film> <http://dbpedia.org/ontology/MilitaryConflict>) .

  # Return the actor involved in this film.
  ?film <http://dbpedia.org/ontology/starring> ?actor .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
281,67,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
SELECT DISTINCT ?entity WHERE {
  # Step 1: Find the leader of the 1962 New South Wales state election who is a politician.
  ?leader <http://dbpedia.org/ontology/politicalLeader> <http://dbpedia.org/resource/1962_New_South_Wales_state_election> .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 2: Determine their birthplace, which is a country.
  ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 3: Find the entity associated with this birthplace.
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?birthPlaceLabel .
  FILTER (lang(?birthPlaceLabel) = 'en') .

  # Step 4: Identify Beauchamp Seymour's military unit in the New Zealand Army.
  <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/profession> ?militaryUnit .
  ?militaryUnit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .

  # Step 5: Determine the wars associated with both the politician's profession and Beauchamp Seymour.
  OPTIONAL { ?politicianProfession <http://dbpedia.org/ontology/war> ?war . }
  OPTIONAL { ?militaryUnit <http://dbpedia.org/ontology/war> ?war . }

  FILTER EXISTS {
    ?leader <http://dbpedia.org/ontology/profession> ?politicianProfession .
  }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
487,16,test,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of the administration of Patricia McCoy.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> ?result . ?result <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT ?administration ?country WHERE {
  # Find the administration of Philip Brian Scott, who is a soccer player
  ?person <http://dbpedia.org/ontology/birthName> ""Philip Brian Scott"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://dbpedia.org/ontology/team> ?administration .

  # Find the country of the administration of Patricia McCoy
  ?patricia <http://dbpedia.org/ontology/birthName> ""Patricia McCoy"" .
  ?patricia <http://dbpedia.org/ontology/team> ?adminTeam .
  ?adminTeam <http://dbpedia.org/ontology/country> ?country .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
232,50,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
SELECT ?native ?actor WHERE {
  # Step 1: Find Sylvie Bermann's British settlement residence
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 2: Find the native of this residence
  ?native <http://dbpedia.org/ontology/nativeOf> ?residence .

  # Step 3: Identify claim to fame that is both a film and military conflict for an actor, narrator, and producer
  ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
  ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Narrator> .
  ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Producer> .
  ?professional <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 4: Find the actor associated with this claim to fame
  ?actor <http://dbpedia.org/ontology/actor> ?claimToFame .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
281,71,test,"Give me the war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v8 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Step 1: Find the leader of the 1962 NSW state election who is a politician.
SELECT ?leader WHERE {
  <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/ontology/winner> ?leader .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}

# Step 2: Determine their birthplace, which is a country.
SELECT ?birthPlace WHERE {
  ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}

# Step 3: Find wars associated with the entity in that country.
SELECT DISTINCT ?war WHERE {
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?birthPlace .
  ?entity <http://dbpedia.org/ontology/war> ?war .
}

# Step 4: Find Jonathon Band's award and related wars.
SELECT DISTINCT ?awardWar WHERE {
  <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/ontology/awards> ?award .
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  ?awardee <http://dbpedia.org/ontology/war> ?awardWar .
}

# Step 5: Identify the profession of a military unit in the New Zealand Army.
SELECT DISTINCT ?professionWar WHERE {
  ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?unit <http://dbpedia.org/property/army> <http://dbpedia.org/resource/New_Zealand_Army> .
  ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?profession .
  ?profession <http://dbpedia.org/ontology/war> ?professionWar .
}

# Step 6: Find the professional who is both an office holder and politician, and their war involvement.
SELECT DISTINCT ?officeHolderWar WHERE {
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?professional <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://dbpedia.org/ontology/war> ?officeHolderWar .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
30,9,test,Give me the professional in the profession of Édouard Alphonse James de Rothschild and native of the birthplace of Silvia Cohen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT ?professional WHERE {
  # Find Édouard Alphonse James de Rothschild's profession
  <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/ontology/profession> ?profession .

  # Find Silvia Cohen's birthplace
  <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Ensure the birthplace is a region
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .

  # Find professionals with the same profession and native to the birthplace of Silvia Cohen
  ?professional <http://dbpedia.org/ontology/profession> ?profession .
  ?professional <http://dbpedia.org/ontology/nativePlace> ?birthPlace .
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
528,58,test,Give me the war of the commander in Battle of La Rinconada de Ate and war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query for the war of the commander in Battle of La Rinconada de Ate
SELECT ?war1 WHERE {
  <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war1 .
  ?war1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Query for the war of Irene Morales
SELECT ?war2 WHERE {
  <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?war2 .
  ?war2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Query for the force of the person born as Narciso Campero
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
  ?person <http://dbpedia.org/ontology/militaryService> ?force .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
617,45,test,Give me the spouse of Laodice IV and child of Antiochus III the Great and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?child WHERE {
  # Step 1: Find Laodice IV's spouse
  ?laodiceIV <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Find a child of Antiochus III the Great who is also a parent
  ?antiochusIII <http://dbpedia.org/ontology/child> ?potentialChild .
  ?potentialChild <http://dbpedia.org/ontology/parent> ?child .

  # Step 3: Identify the commander in the Battle of Panium
  <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?commander .

  # Step 4: Ensure the child is also a child of the commander
  ?commander <http://dbpedia.org/ontology/child> ?child .

  # Filter to ensure all conditions are met
  FILTER (?laodiceIV = <http://dbpedia.org/resource/Laodice_IV>)
  FILTER (?antiochusIII = <http://dbpedia.org/resource/Antiochus_III_the_Great>)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,59,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
# Part 1: Predecessor of Indalecio Prieto
SELECT ?militaryForce WHERE {
  ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto> .
  ?event <http://dbpedia.org/ontology/agent> ?predecessor ;
         a <http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/MilitaryConflict> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}

UNION

# Part 2: Person decedent at Francoist Spain
SELECT ?militaryForce WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> ;
          <http://dbpedia.org/ontology/dateOfDeath> ?date .
  ?event <http://dbpedia.org/ontology/agent> ?person ;
         a <http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/MilitaryConflict> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",6,11,7,3,2,3,3,71,0,0,514,0,0.0,0
801,70,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://dbpedia.org/property/writer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify the professional known as ""The Shadow""
  ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Rapper> .
  ?professional rdfs:label ""The Shadow""@en .

  # Step 2: Find the work (song) produced by this professional
  ?work <http://dbpedia.org/ontology/producer> ?professional ;
        a <http://dbpedia.org/ontology/MusicalWork>, <http://dbpedia.org/ontology/Song> .

  # Step 3: Determine the album that includes this song
  ?album <http://dbpedia.org/ontology/song> ?work ;
         a <http://dbpedia.org/ontology/MusicalWork>, <http://dbpedia.org/ontology/Work> .

  # Step 4: Identify the writer of this album who is also a musical artist and an artist
  ?writer <http://dbpedia.org/ontology/writer> ?album ;
          a <http://dbpedia.org/ontology/MusicalArtist>, <http://dbpedia.org/ontology/Artist> .

  # Step 5: Find the associated musical artist linked to this writer
  ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  
  FILTER regex(?album, ""What U See Is What U Get"", ""i"")
}
```",8,16,9,3,3,3,3,71,0,0,8,0,0.0,0
981,20,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v4 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Identify the author of ""Kamikaze Girls""
  ?author <http://dbpedia.org/ontology/book> <http://dbpedia.org/resource/Kamikaze_Girls> .
  
  # Step 2: Check if this person is a beauty queen
  ?author <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen> .

  # Step 3: Find their birthplace
  ?author <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Step 4: Ensure the birthplace is in a region associated with the time zone of Salak, North Sumatra
  ?region <http://www.w3.org/2000/01/rdf-schema#label> ""Salak""@en .
  ?region <http://dbpedia.org/ontology/timeZone> ?timeZone .
  
  # Find the time zone for Salak, North Sumatra
  ?northSumatraRegion <http://www.w3.org/2000/01/rdf-schema#label> ""North Sumatra""@en .
  ?northSumatraRegion <http://dbpedia.org/ontology/timeZone> ?timeZone .

  # Ensure the birthplace is in this region
  ?birthPlace <http://dbpedia.org/ontology/location> ?region ;
              <http://dbpedia.org/ontology/location> ?northSumatraRegion .
}
```",6,7,7,3,2,3,2,20,0,0,19,0,0.0,0
666,16,test,"Give me the figure known as the nickname of England national beach soccer team and player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v3 . },"```sparql
SELECT ?figure WHERE {
  # Step 1: Find the nickname of the England national beach soccer team
  <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/ontology/nickname> ?nickname .

  # Step 2: Find a player with this nickname who is also a manager in the 2016–17 Hull City A.F.C. season
  ?player <http://dbpedia.org/property/nicknames> ?nickname .
  <http://dbpedia.org/resource/2016%E2%80%9317_Hull_City_A.FC_season> <http://dbpedia.org/ontology/manager> ?player .

  # Step 3: Ensure the manager is categorized as a sports manager
  ?player <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
  
  BIND(?player AS ?figure)
}
```",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
427,22,test,"Give me the reference to Partito Popolare Italiano and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Politician>)).
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/birthName> ""Romano Antonio Prodi"" .
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/memberOf> ?party .
  FILTER EXISTS { ?party <http://www.w3.org/2000/01/rdf-schema#label> ""Partito Popolare Italiano""@en }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
528,40,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa and force of Narciso Campero.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
# Part 1: Wars involving military forces of societal events in Chile
SELECT DISTINCT ?war WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/battle> ?war .
}

UNION

# Part 2: Wars involving military forces of Orozimbo Barbosa
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/militaryForce> ?force1 .
  ?force1 <http://dbpedia.org/ontology/battle> ?war .
}

UNION

# Part 3: Wars involving military forces of Narciso Campero
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryForce> ?force2 .
  ?force2 <http://dbpedia.org/ontology/battle> ?war .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
328,63,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?individual WHERE {
  # Commander under Ferenc Szálasi
  ?szalasiCommander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> .
  
  # Leader of a government agency associated with Joseph Stalin
  ?stalinAgency <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> ;
                 <http://dbpedia.org/property/leader> ?individual .
  ?stalinAgency <http://dbpedia.org/ontology/minister> <http://dbpedia.org/resource/Joseph_Stalin> .

  # Awardee of an award for the Volcano and Ryukyu Islands campaign
  ?campaignCommander <http://dbpedia.org/ontology/commander> ?individual .
  ?award <http://dbpedia.org/property/recipient> ?campaignCommander ;
         <http://dbpedia.org/property/campaign> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .

  # Ensure all conditions are met by the same individual
  FILTER (?szalasiCommander = ?individual && ?stalinAgencyLeader = ?individual && ?campaignCommander = ?individual)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
659,29,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of Napoleonic Wars and commander in German campaign of 1813.",SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . },"```sparql
SELECT ?commander WHERE {
  ?regiment <http://dbpedia.org/ontology/commander> ?commander .
  ?regiment rdf:type <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> .

  ?war rdf:type <http://www.w3.org/2002/07/owl#Thing>, 
        <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://dbpedia.org/resource/Napoleonic_Wars> .

  ?campaign rdf:type <http://www.w3.org/2002/07/owl#Thing>, 
             <http://dbpedia.org/ontology/MilitaryConflict> .
  ?campaign rdfs:label ""German campaign of 1813""@en .
  
  FILTER EXISTS { ?commander <http://dbpedia.org/ontology/commander> ?regiment }
  FILTER EXISTS { ?commander <http://dbpedia.org/ontology/militaryForce> ?force }
  FILTER EXISTS { ?commander <http://dbpedia.org/ontology/commander> ?campaign }
}
```",4,6,5,2,3,3,3,71,0,0,6,0,0.0,0
659,52,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of Napoleonic Wars and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
# Step 1: Find the native office holder for Kingdom of Ireland and Napoleonic Wars military force
SELECT ?native WHERE {
  ?native <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
  ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?militaryForce <http://dbpedia.org/property/memberOfMilitaryForce> ?native .
  ?militaryForce <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Napoleonic_Wars> .
}

# Step 2: Find the commander of this military force
SELECT ?commander WHERE {
  ?force <http://dbpedia.org/property/memberOfMilitaryForce> ?native .
  ?force <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 3: Identify the war involving the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
SELECT ?war WHERE {
  <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}

# Step 4: Find the commander in both identified contexts
SELECT DISTINCT ?commander WHERE {
  # From step 2
  ?force <http://dbpedia.org/property/memberOfMilitaryForce> ?native .
  ?force <http://dbpedia.org/ontology/commander> ?commander .

  # From step 3
  ?battle <http://dbpedia.org/ontology/battleCommander> ?commander .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}
```",6,9,7,3,3,3,3,71,0,0,13,0,0.0,0
404,71,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v7 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia by birth name
  ?princess <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
  ?princess <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find her spouse
  ?princess <http://dbpedia.org/property/spouse> ?spouse .

  # Step 3: Determine the father of her spouse
  ?spouse <http://dbpedia.org/ontology/father> ?fatherSpouse .

  # Step 4: Identify the child of this father who is royalty
  ?fatherSpouse <http://dbpedia.org/ontology/child> ?royalChild .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Find the parent of this child, who is royalty
  ?royalChild <http://dbpedia.org/ontology/parent> ?royalParent .
  ?royalParent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 6: Determine the spouse of this parent
  ?royalParent <http://dbpedia.org/property/spouse> ?spouse .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
16,55,test,Give me the person born as the birth name of Gigi Rice and professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
SELECT ?person WHERE {
  # Find Gigi Rice's birth name
  <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Identify Satomi Ishihara's profession
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?profession .

  # Determine Ted Martin McGinley's spouse
  ?spouse <http://dbpedia.org/ontology/birthName> ""Ted Martin McGinley"" .
  ?spouse <http://dbpedia.org/property/spouse> ?person .

  # Find the person who matches all criteria
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/profession> ?profession .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
404,51,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
  # Step 1: Find the spouse of Princess Victoria Louise of Prussia
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Determine the father of that spouse
  ?spouse <http://dbpedia.org/ontology/father> ?father .

  # Step 3: Find the children of this individual (the father)
  ?father <http://dbpedia.org/ontology/child> ?child .

  # Step 4: Identify those who are royalty and also a parent of Ernest Augustus, Duke of Brunswick
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,20,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
SELECT ?militaryForce WHERE {
  ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  
  ?rifWar <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  FILTER(?rifWar = <http://dbpedia.org/resource/Rif_War>) .

  ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",3,5,4,2,2,3,3,71,0,0,34,0,0.0,0
281,58,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v5 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . }","```sparql
# Step 1: Find professionals who are office holders, politicians in the New Zealand Army, born in Bob Heffron's country
SELECT ?professional WHERE {
  ?professional <http://dbpedia.org/ontology/profession> ?militaryUnit .
  ?militaryUnit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?professional <http://dbpedia.org/ontology/politicalParty> ?party .
  ?professional <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  
  # Bob Heffron's birthplace
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?heffronBirthPlace .
  ?heffronBirthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  FILTER (?birthPlace = ?heffronBirthPlace)
  
  # New Zealand Army association
  ?professional <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .
}

# Step 2: Find wars associated with the military unit of the professional found in step 1
SELECT DISTINCT ?war WHERE {
  ?militaryUnit <http://dbpedia.org/property/war> ?war .
  ?professional <http://dbpedia.org/ontology/profession> ?militaryUnit .
}

# Step 3: Find wars associated with Beauchamp Seymour, 1st Baron Alcester
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/property/war> ?war .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
838,20,test,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa and band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?bandMember WHERE {
  # Step 1: Identify YU Grupa as a group and organization
  <http://dbpedia.org/resource/YU_Grupa> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?groupType .
  FILTER (?groupType IN (<http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/Organisation>)).
  
  # Step 2: Find the band associated with YU Grupa
  <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/property/band> ?band .
  
  # Step 3: Determine members of this band who are artists or musical artists
  ?band <http://dbpedia.org/ontology/member> ?member .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?artistType .
  FILTER (?artistType IN (<http://dbpedia.org/ontology/Artist>, <http://dbpedia.org/ontology/MusicalArtist>)).
  
  # Step 4: Identify bands these members belong to, ensuring they are both a band and a group
  ?member <http://dbpedia.org/property/band> ?relatedBand .
  ?relatedBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?bandType .
  FILTER (?bandType IN (<http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/MusicalGroup>)).
  
  # Step 5: Find the band member Žika Jelić belongs to
  ?relatedBand <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/%C5%BDika_Jeli%C4%87> .
}
```",6,13,7,3,2,3,2,20,0,0,5,0,0.0,0
92,60,test,"Give me the band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
  ?film <http://dbpedia.org/property/reference> ?artist .
  FILTER(?film = <http://dbpedia.org/resource/Nevermore_(2006_film)>)
  FILTER(?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
827,20,test,"Give me the father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  # Step 1: Find Princess Pauline's spouse who is royalty
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find a child of that spouse who is royalty
  ?child <http://dbpedia.org/ontology/birthParent> ?spouse .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Determine the parent of Charles Alexander
  ?parent <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> .

  # Step 4: Identify a child of this parent who is royalty
  ?royalChild <http://dbpedia.org/ontology/birthParent> ?parent .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Find the father of the child identified in step 2
  ?father <http://dbpedia.org/ontology/birthChild> ?child .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
54,46,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
# Step 1: Find the child of Thinkhaya of Pagan
SELECT ?thinkhayasChild WHERE {
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?thinkhayasChild .
}

# Step 2: The father of thinkhayasChild is Thinkhaya himself

# Step 3: Find the parent of the child of Narapati I of Ava
SELECT ?narapatisChildParent WHERE {
  <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?narapatisChild .
  ?narapatisChild <http://dbpedia.org/ontology/father> ?narapatisChildParent .
}

# Step 4: Find the child of Thinkhaya who is also the parent from step 3
SELECT ?result WHERE {
  ?thinkhayasChild <http://dbpedia.org/ontology/father> ?parent .
  FILTER (?parent = ?narapatisChildParent)
  ?thinkhayasChild <http://dbpedia.org/ontology/child> ?result .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,71,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v7 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Find Fredrik Thordendal's band
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .

  # Step 2: Find the person born as Don Dokken
  ?person <http://dbpedia.org/property/birthName> ""Don Dokken"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Step 3: Find associated musical artists of Don Dokken
  ?associatedArtist1 <http://dbpedia.org/property/associatedMusicalArtist> ?person .
  
  # Step 4: Reference to Watchtower
  ?watchtowerRef <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Watchtower_(band)> .
  ?associatedArtist2 <http://dbpedia.org/property/associatedMusicalArtist> ?watchtowerRef .

  # Step 5: Band member that is a band, group, and organization
  ?bandMember <http://dbpedia.org/ontology/member> ?associatedArtist2 .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/MusicalGroup>, <http://dbpedia.org/ontology/Organisation> .

  # Step 6: Associated musical artist of this band
  ?associatedArtist <http://dbpedia.org/property/associatedMusicalArtist> ?bandMember .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
179,20,test,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of the child of the parent of Vajiralongkorn.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
SELECT ?person WHERE {
  # Step 1: Identify Vajiralongkorn's parent
  <http://dbpedia.org/resource/Vajiralongkorn> <http://dbpedia.org/ontology/father> ?parentVajiralongkorn .

  # Step 2: Find the child of that parent (another relation or sibling)
  ?childSibling <http://dbpedia.org/ontology/father> ?parentVajiralongkorn .
  
  # Step 3: Determine the parent of this child, leading back to Nakkhatra Mangala
  ?childSibling <http://dbpedia.org/ontology/mother> ?nakNakhatraMangala .

  # Ensure Nakkhatra Mangala is indeed a person
  ?nakNakhatraMangala <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  
  # Step 4: From Nakkhatra Mangala, find their children who are royalty
  ?nakNakhatraMangala <http://dbpedia.org/ontology/child> ?royalChild .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 5: For each royal child, identify their birth name and determine who was born with that name
  ?royalChild <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
547,53,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of the child of William Haliburton and resting place of Simon Cadell.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query 1: Resting place of an awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT ?restingPlace WHERE {
  ?person <http://dbpedia.org/ontology/nationality> ?nationality .
  ?person <http://dbpedia.org/property/orderOfStMichaelAndStGeorge> ""Knight Grand Cross"" .
  ?person <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
}

UNION

# Query 2: Resting place of the grandchild of William Haliburton
SELECT ?grandChildRestingPlace WHERE {
  <http://dbpedia.org/resource/William_Haliburton> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/child> ?grandChild .
  ?grandChild <http://dbpedia.org/ontology/deathPlace> ?grandChildRestingPlace .
}

UNION

# Query 3: Resting place of Simon Cadell
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
617,48,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find Antiochus (son of Antiochus III the Great) and his child
  ?antiochus <http://dbpedia.org/ontology/birthName> ""Antiochus"" .
  ?antiochus <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?child1 <http://dbpedia.org/ontology/birthParent> ?antiochus .

  # Step 2: Find the child of that child who is royalty
  ?child2 <http://dbpedia.org/ontology/birthParent> ?child1 .
  ?child2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Identify the successor of Antiochus II Theos who is royalty
  ?antiochusII <http://dbpedia.org/resource/Antiochus_II_theos> .
  ?successor <http://dbpedia.org/property/successor> ?antiochusII .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Determine the parent of the individual identified in step 2
  ?parent <http://dbpedia.org/ontology/birthParent> ?child2 .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
659,23,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://dbpedia.org/ontology/commander> ?commander .
}
```",3,4,4,3,1,3,3,71,0,0,269,0,0.0,0
161,61,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
# Step 1: Find the predecessor of Indalecio Prieto
SELECT ?predecessor WHERE {
  <http://dbpedia.org/resource/Indalecio_Prieto> <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Step 2: Identify the military force associated with this predecessor as a commander
SELECT ?militaryForce WHERE {
  ?predecessor <http://dbpedia.org/ontology/commander> ?commanderRole .
  ?commanderRole <http://dbpedia.org/ontology/battle> ?militaryForce .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
}

# Step 3: Determine who is known as ""El Director""
SELECT ?elDirector WHERE {
  ?person <http://dbpedia.org/property/kindOf> ""El Director"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
}

# Step 4: Identify the military force where ""El Director"" was a commander
SELECT ?eventForce WHERE {
  ?elDirector <http://dbpedia.org/ontology/commander> ?commanderRole .
  ?commanderRole <http://dbpedia.org/ontology/battle> ?eventForce .
  ?eventForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}

# Step 5: Find the military force of the force identified in step 2
SELECT ?finalMilitaryForce WHERE {
  ?militaryForce <http://dbpedia.org/ontology/militaryForce> ?finalMilitaryForce .
}
```",6,9,7,3,2,3,3,71,0,0,32,0,0.0,0
161,60,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Identify ""El Director""
  ?elDirector <http://dbpedia.org/ontology/knowAs> ""El Director"" .
  
  # Step 2: Find the force where El Director was a commander
  ?force <http://dbpedia.org/ontology/commander> ?elDirector .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Step 3: Find the person who was decedent at Francoist Spain and a commander in that force
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> .
  ?person <http://dbpedia.org/ontology/commander> ?force .

  # Step 4: Identify the societal event, event, and military conflict associated with this person's force
  ?societalEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?militaryConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 5: Find the military force related to these events
  ?societalEvent <http://dbpedia.org/property/relatedTo> ?person .
  ?event <http://dbpedia.org/property/relatedTo> ?person .
  ?militaryConflict <http://dbpedia.org/property/relatedTo> ?person .

  # Final step: Find the military force of this person
  ?militaryForce <http://dbpedia.org/ontology/militaryForce> ?person .
}
```",6,10,7,3,2,3,3,71,0,0,34,0,0.0,0
55,23,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . }","```sparql
# Part 1: Identify the producer-band for ""Used to Love Her""
SELECT ?producerBand WHERE {
  <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?producer .
  ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
}

# Part 2: Find band members of the producer-band
SELECT ?bandMember WHERE {
  ?producerBand <http://dbpedia.org/ontology/member> ?bandMember .
}

# Part 3: Identify the reference to ""Newsted"" which is a band
SELECT ?newstedBand WHERE {
  <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/reference> ?newstedBand .
  ?newstedBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
}

# Part 4: Find band members of the Newsted-referenced band
SELECT ?bandMember WHERE {
  ?newstedBand <http://dbpedia.org/ontology/member> ?bandMember .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
659,61,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Find the war involving Rutger Jan Schimmelpenninck as a commander
  ?war <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 2: Find the reference (battle or campaign) related to this war
  ?reference <http://dbpedia.org/ontology/war> ?war .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 3: Identify the figure known as 'Polish Horse'
  ?figure <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>, <http://dbpedia.org/ontology/Organisation> .
  ?figure rdfs:label ""Polish Horse""@en .

  # Step 4: Find the military force associated with this figure
  ?militaryForce <http://dbpedia.org/ontology/militaryForce> ?figure .
}
```",6,13,7,3,2,3,3,71,0,0,31,0,0.0,0
328,35,test,"Give me the leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v2 . }","```sparql
SELECT ?office WHERE {
  ?office <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Joseph_Stalin> .
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?award <http://dbpedia.org/property/awardee> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
  ?office <http://dbpedia.org/property/relatedAward> ?award .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
328,51,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in the force of Ferenc Szálasi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
# Step 1: Find Gustav Jonson's leader who is an office holder and politician
SELECT ?gustavLeader WHERE {
  <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/leader> ?gustavLeader .
  ?gustavLeader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
                <http://dbpedia.org/ontology/politician> true .
}

# Step 2: Find the force commanded by Ferenc Szálasi
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/militaryUnit> ?force .
}

# Step 3: Find the intersection of Gustav Jonson's leader and Ferenc Szálasi's commander
SELECT DISTINCT ?commonLeader WHERE {
  { 
    SELECT ?gustavLeader WHERE {
      <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/leader> ?gustavLeader .
      ?gustavLeader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
                    <http://dbpedia.org/ontology/politician> true .
    }
  }
  {
    SELECT ?commander WHERE {
      <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> <http://dbpedia.org/ontology/commander> ?commander .
      ?commander <http://dbpedia.org/ontology/militaryUnit> ?force .
    }
  }
  FILTER (?gustavLeader = ?commander)
}

# Step 4: Find the government agency associated with this common leader
SELECT ?agency WHERE {
  ?commonLeader <http://dbpedia.org/ontology/leader> ?office .
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> ;
          <http://dbpedia.org/ontology/leader> ?agency .
}

# Step 5: Find the leader of that government agency
SELECT ?finalLeader WHERE {
  ?agency <http://dbpedia.org/ontology/leader> ?finalLeader .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
92,54,test,"Give me the band of Joseph Michael and band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . }","```sparql
SELECT DISTINCT ?band ?artist ?associatedArtist WHERE {
  # Step 1: Find Joseph Michael's band
  <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/ontology/band> ?band .

  # Step 2: Find an artist who is a member of Nevermore and referenced as an artist
  ?artist <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Nevermore_(band)> .
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Step 3: Find the actor of ""Return to Nuke 'Em High Volume 1"" and their associated musical artists
  ?actor <http://dbpedia.org/property/role> <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?actor <http://dbpedia.org/property/birthPlace> ?birthPlace .

  # Find associated musical artists of the actor
  ?actor <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,19,test,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
SELECT ?war WHERE {
  ?person <http://dbpedia.org/ontology/honours> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
  ?person <http://dbpedia.org/ontology/battle> ?war .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,68,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/nickname> ?v5 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Identify Sherry Hormann's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Determine the claim to fame of this spouse, which is a work
SELECT ?work WHERE {
  ?spouse <http://dbpedia.org/ontology/claimToFame> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
}

# Step 3: Find the actor associated with this work
SELECT ?actor WHERE {
  ?work <http://dbpedia.org/ontology/actor> ?actor .
}

# Step 4: Identify movies that are also works and television shows featuring Roz Ryan
SELECT ?movie WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> ;
         <http://dbpedia.org/ontology/work> ?work .
  ?work <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Roz_Ryan> .
}

# Step 5: Find actors in these movies
SELECT DISTINCT ?actor WHERE {
  ?movie <http://dbpedia.org/ontology/actor> ?actor .
}

# Step 6: Determine the figure known by the nickname of Jackson, Tennessee, and their native place
SELECT ?figure ?nativePlace WHERE {
  ?figure <http://dbpedia.org/property/nickName> ""Jackson, Tennessee"" ;
          <http://dbpedia.org/ontology/nativeOf> ?nativePlace .
}

# Step 7: Find the actor who connects all these elements (hypothetical step)
SELECT DISTINCT ?actor WHERE {
  # This part is hypothetical and assumes a direct connection can be made
  ?actor IN (?actor1, ?actor2) .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
404,70,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?finalParent WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia's spouse
  ?princess a <http://dbpedia.org/ontology/Royalty> ;
            <http://dbpedia.org/property/spouse> ?spouse .
  
  FILTER(?princess = <http://dbpedia.org/resource/Victoria_Louise_of_Prussia>) .

  # Step 2: Find the father of her spouse
  ?spouse <http://dbpedia.org/ontology/father> ?fatherOfSpouse .

  # Step 3: Determine their child who is royalty
  ?fatherOfSpouse <http://dbpedia.org/ontology/child> ?royalChild .
  
  FILTER(?royalChild a <http://dbpedia.org/ontology/Royalty>) .

  # Step 4: Find the parent of that royal child
  ?royalChild <http://dbpedia.org/ontology/parent> ?parentOfRoyalChild .

  # Step 5: Identify the child of this parent who is royalty
  ?parentOfRoyalChild <http://dbpedia.org/ontology/child> ?anotherRoyalChild .
  
  FILTER(?anotherRoyalChild a <http://dbpedia.org/ontology/Royalty>) .

  # Step 6: Find the parent of this last royal child
  ?anotherRoyalChild <http://dbpedia.org/ontology/parent> ?finalParent .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
659,45,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in Battle of Leipzig and commander in German campaign of 1813.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?force WHERE {
  ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  ?force <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Leipzig> .
  ?force <http://dbpedia.org/ontology/militaryConflict> <http://dbpedia.org/resource/German_campaign_of_1813> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",5,8,6,3,3,3,3,71,0,0,6,0,0.0,0
161,47,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
# Part 1: Francisco Franco's military forces
SELECT DISTINCT ?francoForce WHERE {
  ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Franco> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?event <http://dbpedia.org/property/militaryForce> ?francoForce .
}

UNION

# Part 2: Predecessor of Indalecio Prieto's military forces
SELECT DISTINCT ?predecessorForce WHERE {
  ?prietoPredecessor <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Indalecio_Prieto> .
  ?event2 <http://dbpedia.org/ontology/person> ?prietoPredecessor .
  ?event2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?event2 <http://dbpedia.org/property/militaryForce> ?predecessorForce .
}
```",5,10,6,3,2,3,3,71,0,0,514,0,0.0,0
232,45,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of Jon Pertwee and actor of Dog Soldiers (film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?finalNative WHERE {
  # Step 1: Find actor of ""Dog Soldiers"" who is Jon Pertwee's child
  ?actor <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .
  ?actor <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Jon_Pertwee> .

  # Step 2: Check if they are a politician and office holder from France
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .

  # Step 3: Find the native place that is a settlement and British
  ?actor <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
  ?nativePlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?nativePlace <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 4: Identify the native of this residence
  ?finalNative <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
617,55,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find children of Antiochus (son of Antiochus III the Great)
  ?antiochusChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_IV_Epiphanes> .
  
  # Step 2: Identify which child is also a spouse of another child from Antiochus III
  ?spouse <http://dbpedia.org/ontology/spouse> ?antiochusChild .
  ?otherChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  FILTER(?spouse = ?otherChild)
  
  # Step 3: Find the child of this spouse who is royalty and whose parent is Seleucus II Callinicus
  ?royalChild <http://dbpedia.org/ontology/birthParent> ?spouse .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?royalChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .

  # Step 4: Identify the parent of this royal child
  ?parent <http://dbpedia.org/ontology/birthParent> ?royalChild .
}
```",6,7,7,2,3,3,3,71,0,0,2,0,0.0,0
391,43,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?actor WHERE {
  # Step 1: Find Sherry Hormann's spouse
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Sherry_Hormann> .
  
  # Step 2: Check if the spouse is native of Compton, California
  ?spouse <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .

  # Step 3 & 4: Find the claim to fame that is a work
  ?spouse <http://dbpedia.org/property/claimToFame> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .

  # Step 5: Find an actor from this work who also acted in ""All About the Andersons""
  ?work <http://dbpedia.org/property/starring> ?actor .
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/All_About_the_Andersons> .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
184,71,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v8 <http://dbpedia.org/property/father> ?v7 . }","```sparql
# Step 1: Archduchess Margaret of Austria (born 1925)
SELECT ?margaretParent WHERE {
  <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> <http://dbpedia.org/ontology/birth> ?birth .
  ?birth <http://dbpedia.org/property/father> ?margaretParent .
}

SELECT ?childOfMargaretParent WHERE {
  ?margaretParent <http://dbpedia.org/ontology/child> ?childOfMargaretParent .
}

# Step 2: Landmark at Elevation 96.0
SELECT ?landmark WHERE {
  ?landmark <http://dbpedia.org/property/elevation> ""96.0""^^xsd:float .
}

SELECT ?nativeSettlement WHERE {
  ?landmark <http://dbpedia.org/ontology/nativePlace> ?nativeSettlement .
  ?nativeSettlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}

SELECT ?parentOfNative WHERE {
  ?nativeSettlement <http://dbpedia.org/ontology/parent> ?parentOfNative .
}

# Step 3: Archduke Ladislaus Philipp of Austria
SELECT ?ladislausParent WHERE {
  <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/birth> ?birthLadislaus .
  ?birthLadislaus <http://dbpedia.org/property/father> ?ladislausParent .
  ?ladislausParent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

SELECT ?childOfLadislausParent WHERE {
  ?ladislausParent <http://dbpedia.org/ontology/child> ?childOfLadislausParent .
}

SELECT ?grandChildOfLadislausParent WHERE {
  ?childOfLadislausParent <http://dbpedia.org/ontology/child> ?grandChildOfLadislausParent .
}

# Final Step: Find the common parent
SELECT DISTINCT ?commonParent WHERE {
  { ?commonParent <http://dbpedia.org/ontology/parent> ?childOfMargaretParent . }
  UNION
  { ?commonParent <http://dbpedia.org/ontology/parent> ?grandChildOfLadislausParent . }
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
617,18,test,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary and child of the child, that is a royalty, of the parent of Mlada (abbess).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?parentOfParent WHERE {
  # Step 1: Find Mlada's parent
  ?mlada <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER(STRSTARTS(STR(?birthPlace), ""http://dbpedia.org/resource/Mlada_(abbess)"")) .

  ?parentOfMlada <http://dbpedia.org/ontology/child> ?mlada .
  
  # Step 2: Find children of Mlada's parent who are royalty
  ?royaltyChild <http://dbpedia.org/ontology/child> ?parentOfMlada .
  ?royaltyChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find Richeza's father who is royalty
  ?richeza <http://dbpedia.org/ontology/birthPlace> ?birthPlaceRicheza .
  FILTER(STRSTARTS(STR(?birthPlaceRicheza), ""http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary"")) .

  ?fatherOfRicheza <http://dbpedia.org/ontology/spouse> ?richeza .
  ?fatherOfRicheza <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find child of Richeza's father who is royalty
  ?royaltyGrandchild <http://dbpedia.org/ontology/child> ?fatherOfRicheza .
  ?royaltyGrandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Find the parent of this child
  ?parentOfParent <http://dbpedia.org/ontology/child> ?royaltyGrandchild .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
281,47,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
# Step 1: Find the leader of the 1962 New South Wales state election
SELECT ?leader WHERE {
  <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/ontology/politicalLeader> ?leader .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}

# Step 2: Find the birthplace of this leader that is a country
SELECT ?birthPlace WHERE {
  ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}

# Step 3: Find the awardee of Knight Grand Cross of the Order of the Bath and associated wars
SELECT ?awardee ?war WHERE {
  ?awardee <http://dbpedia.org/property/orderOfTheBath> ""Knight Grand Cross"" .
  ?awardee <http://dbpedia.org/ontology/war> ?war .
}

# Step 4: Find an entity in the birthplace (country) related to the war
SELECT DISTINCT ?entity WHERE {
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?war <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?entity .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
314,27,test,"Give me the person deceased at Madrid and awardee of the award of Sergei Makovetsky and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  # Deceased at Madrid
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> .

  # Awardee of an award associated with Sergei Makovetsky
  ?award <http://dbpedia.org/property/awardee> ?person .
  ?award <http://dbpedia.org/ontology/recipient> <http://dbpedia.org/resource/Sergei_Makovetsky> .

  # Commander in a profession that is an event and societal event related to Lisa Gavrić
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/SocialEvent> .
  ?profession <http://dbpedia.org/property/commander> ?person .
  ?profession <http://dbpedia.org/ontology/relatedTo> <http://dbpedia.org/resource/Lisa_Gavrić> .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
996,16,test,Give me the entity in the award of Ekrem Akurgal and force of the awardee of 1778.0.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . }","```sparql
# Find the award associated with Ekrem Akurgal
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/ontology/receivedAward> ?award .
}

# Find the force of the awardee related to the year 1778
SELECT ?force WHERE {
  ?entity <http://dbpedia.org/property/year> ""1778""^^<http://www.w3.org/2001/XMLSchema#gYear> .
  ?entity <http://dbpedia.org/ontology/memberOf> ?force .
}
```",4,4,5,2,2,3,2,20,0,0,4,0,0.0,0
701,66,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Ramesses II and parent of the child of Nefertari.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify the commander in Battle of Perire
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(STR(?battle) = ""Battle_of_Perire"")

  # Step 2: Find the father of the commander who is royalty
  ?commander <http://www.w3.org/2000/01/rdf-schema#parent> ?father .
  ?father <http://dbpedia.org/ontology/nationality> ?royalty .
  FILTER(STR(?royalty) = ""Royalty"")

  # Step 3: Determine the spouse of this royal father
  ?father <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 4: Verify parental connections
  ?spouse <http://www.w3.org/2000/01/rdf-schema#parent> ?child1 .
  ?child1 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ramesses_II> .

  ?spouse <http://www.w3.org/2000/01/rdf-schema#parent> ?child2 .
  ?child2 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Nefertari> .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
378,61,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v1 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?claimToFame WHERE {
  # Step 1: Identify the war involving Thomas Trigge
  ?war <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Thomas_Trigge> .
  
  # Ensure the war is a military conflict, societal event, and an event
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  
  # Step 2: Find the commander of that war
  ?war <http://dbpedia.org/property/commander> ?commander .

  # Step 3: Get the claim to fame of the commander
  ?commander <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
767,52,test,"Give me the alma mater of the administration of George K. Nash and reference to  and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/state> ?v2 . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
SELECT ?writer ?settlement ?almaMater WHERE {
  # Step 1: Identify the writer of ""Where It's At"" (Dustin Lynch album)
  <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://purl.org/dc/terms/creator> ?writer .

  # Step 2: Find the administration of George K. Nash
  ?administration <http://dbpedia.org/ontology/administrationOf> <http://dbpedia.org/resource/George_K._Nash> .
  
  # Step 3: Locate a settlement related to the administration
  ?administration <http://dbpedia.org/ontology/entityInAdministration> ?settlement .
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 4: Determine the alma mater of this administration
  ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
528,70,test,Give me the war of the commander in the work of --01-09 and force of the person born as the birth name of Narciso Campero and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
# Step 1: Find the work associated with --01-09
SELECT ?work WHERE {
  <http://dbpedia.org/resource/--01-09> <http://purl.org/dc/terms/subject> ?work .
}

# Step 2: Find the military force of Narciso Campero
SELECT ?force WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Narciso Campero""@en ;
          <http://dbpedia.org/ontology/birthName> ""Narciso Campero"" .
  ?person <http://dbpedia.org/ontology/militaryForce> ?force .
}

# Step 3: Find the war involving the military force in Battle of Pisagua
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
          <http://dbpedia.org/ontology/war> ?war .
}
```",8,8,9,3,3,3,3,71,0,0,2,0,0.0,0
404,48,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia as a royalty
  ?princess <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
  ?princess <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Determine her father, Ernest Augustus, Duke of Brunswick
  ?father <http://dbpedia.org/property/father> ?princess .
  ?father <http://www.w3.org/2000/01/rdf-schema#label> ""Ernest Augustus, Duke of Brunswick""@en .

  # Step 3: Find the spouse of Princess Victoria Louise of Prussia
  ?princess <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
617,38,test,Give me the spouse of the child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find children of Antiochus III the Great
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  
  # Step 2: For each child, find their spouse
  OPTIONAL { ?child <http://dbpedia.org/ontology/spouse> ?spouse . }
  
  # Step 3: Identify Antiochus as a child and determine his parent
  ?antiochus <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  FILTER(?antiochus = <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)>)
  
  # Step 4: Find the spouse of Antiochus's parent
  ?parent <http://dbpedia.org/ontology/father> ?antiochus .
  OPTIONAL { ?parent <http://dbpedia.org/ontology/spouse> ?spouse . }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
528,63,test,"Give me the force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile and war of the commander in Battle of La Rinconada de Ate.","SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v6 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Part 1: Find the military force associated with Narciso Campero Leyes
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/birthName> ""Narciso Campero Leyes"" .
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/property/memberOf> ?force .
}

# Part 2: Find wars involving the military force in Chile
SELECT DISTINCT ?war WHERE {
  ?force <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Chile> .
  ?force <http://dbpedia.org/property/participatedIn> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
  ?event <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Military_conflict> .
}

# Part 3: Find wars involving the commander in Battle of La Rinconada de Ate
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
712,18,test,"Give me the resting place of the awardee of Hero of the Soviet Union and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v1 <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?restingPlace WHERE {
  # Step 1: Identify the awardee related to Vyoshenskaya Uprising
  ?awardee <http://dbpedia.org/ontology/honour> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> .
  ?uprising <http://dbpedia.org/property/event> ""Vyoshenskaya Uprising"" .
  ?uprising <http://dbpedia.org/ontology/personInvolved> ?awardee .

  # Step 2: Find the military force involved in the uprising
  ?militaryForce <http://dbpedia.org/ontology/militaryUnit> ?unit ;
                 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?uprising <http://dbpedia.org/property/militaryForce> ?militaryForce .

  # Step 3: Determine the country of the military force and its capital
  ?country <http://dbpedia.org/ontology/country> ?militaryForce ;
           <http://dbpedia.org/ontology/administrativeCapital> ?capitalCity .

  # Step 4: Get the resting place of the awardee
  ?awardee <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
281,42,test,"Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
# Part 1: Find the war of awardees who are associated with Colony of New Zealand
SELECT DISTINCT ?war WHERE {
  ?person <http://dbpedia.org/ontology/honoraryTitle> ""Knight Grand Cross of the Order of the Bath"" .
  ?person <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
  ?person <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Part 2: Find the war related to Heather Roy's profession if it is a military unit
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?profession <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
360,27,test,"Give me the writer of The Roaring Silence and native of the death place, that is a settlement, of Winnie Madikizela-Mandela and reference to the author of Blinded by the Light.",SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?writer ?nativePerson ?authorOfBlindedByTheLight WHERE {
  # Step 1: Find the writer of ""The Roaring Silence""
  <http://dbpedia.org/resource/The_Roaring_Silence> <http://purl.org/dc/terms/creator> ?writer .

  # Step 2: Find the death place of Winnie Madikizela-Mandela that is a settlement
  <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  FILTER (?deathPlace != <http://www.wikidata.org/entity/Q4813>) # Exclude Wikidata entity if needed
  ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 3: Find individuals native to this death place
  ?nativePerson <http://dbpedia.org/ontology/birthPlace> ?deathPlace .

  # Step 4: Identify the author of ""Blinded by the Light""
  <http://dbpedia.org/resource/Blinded_by_the_Light_(film)> <http://purl.org/dc/terms/creator> ?authorOfBlindedByTheLight .

  # Step 5: Find any reference or connection (this part is more abstract and may require additional context)
  OPTIONAL {
    ?writer <http://dbpedia.org/ontology/wikiPageWikiLink> ?authorOfBlindedByTheLight .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
701,69,test,"Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of Ramesses II and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Amun-her-khepeshef's spouse and their child
  ?spouse_amun <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
  ?child_amun <http://dbpedia.org/ontology/parent> ?spouse_amun .

  # Step 2: Parent of Amun-her-khepeshef's child
  ?parent_child_amun <http://dbpedia.org/ontology/parent> ?child_amun .

  # Step 3: Ramesses II and his spouse, their child
  ?spouse_ramesses <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> .
  ?child_ramesses <http://dbpedia.org/ontology/parent> ?spouse_ramesses .

  # Step 4: Parent of Ramesses II's child
  ?parent_child_ramesses <http://dbpedia.org/ontology/parent> ?child_ramesses .

  # Step 5: Commander in the Battle of Perire and their father
  ?battle_perire <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(STRSTARTS(STR(?battle_perire), ""http://dbpedia.org/resource/Battle_of_Perire""))
  ?father_commander <http://dbpedia.org/ontology/parent> ?commander .

  # Step 6: Spouse of the commander's father who is royalty
  ?spouse_father_commander <http://dbpedia.org/ontology/spouse> ?father_commander .
  ?spouse_father_commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 7: Find the parent of the child who is common in both paths
  ?result <http://dbpedia.org/ontology/parent> ?child_amun .
  ?result <http://dbpedia.org/ontology/parent> ?child_ramesses .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
528,50,test,Give me the war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://dbpedia.org/property/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?battle <http://dbpedia.org/ontology/war> ?war .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
16,51,test,Give me the professional in the profession of Satomi Ishihara and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
# Step 1: Find Satomi Ishihara's profession
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?profession .
}

# Step 2: Find the birth name of an alumnus of Ohio State University
SELECT ?birthName WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> ;
           <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 3: Find professionals in the same profession as Satomi Ishihara
# and check if they were born with the birth name found in step 2
SELECT DISTINCT ?professional WHERE {
  # Assuming we have already determined ?profession from step 1 and ?birthName from step 2
  ?person <http://dbpedia.org/ontology/profession> ?profession ;
          <http://dbpedia.org/ontology/birthName> ?birthName .
  BIND(?person AS ?professional)
}
```

Note: This query assumes that the results of steps 1 and 2 are known or can be substituted directly into step 3. In practice, you might need to execute these queries separately and use their results in a subsequent query execution environment.",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
378,63,test,Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in Peninsular War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
# Step 1: Find Carl Pontus Gahn's birth name
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Identify a person with that birth name who commanded in the Great Siege of Gibraltar
SELECT DISTINCT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/claimToFame> ?fame .
  ?fame <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> .
}

# Step 3: Find wars associated with the commander from step 2
SELECT DISTINCT ?war1 WHERE {
  ?person <http://dbpedia.org/ontology/battle> ?war1 .
  ?war1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 4: Find wars associated with commanders in the Peninsular War
SELECT DISTINCT ?war2 WHERE {
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Peninsular_War> .
  ?commander <http://dbpedia.org/ontology/battle> ?war2 .
  ?war2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Combine results from steps 3 and 4
SELECT DISTINCT ?result WHERE {
  VALUES ?result { ?war1 ?war2 }
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
767,27,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
SELECT ?alterEgo WHERE {
  <http://dbpedia.org/resource/Matthew_Burland> <http://dbpedia.org/ontology/fictionalCharacter> ?alterEgo .
  ?alterEgo <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
}
```",3,4,4,3,1,3,3,71,0,0,98447,0,0.0,0
281,30,test,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and war of the profession, that is a military unit, of Heather Roy and entity in Colony of New Zealand.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT DISTINCT ?war1 ?war2 ?entity WHERE {
  # Part 1: War of Beauchamp Seymour, 1st Baron Alcester
  OPTIONAL {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?war1 .
    FILTER (?war1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>)
  }

  # Part 2: War of the profession that is a military unit of Heather Roy
  OPTIONAL {
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
    ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?profession <http://dbpedia.org/ontology/battle> ?war2 .
    FILTER (?war2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>)
  }

  # Part 3: Entity in Colony of New Zealand
  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
488,56,test,"Give me the birth place of the commander in Boshin War and death place of Tokugawa Ieyasu and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT DISTINCT ?birthPlaceCommander ?deathPlaceIeyasu ?adminFatherSpouse WHERE {
  # Part 1: Birth place of commander in Boshin War
  ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Boshin_War> .
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlaceCommander .

  # Part 2: Death place of Tokugawa Ieyasu
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlaceIeyasu .

  # Part 3: Administration of father of spouse (royalty) of Tokugawa Masako
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://www.w3.org/2002/07/owl#sameAs> ?royalSpouse .
  ?royalSpouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?spouse <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/administration> ?adminFatherSpouse .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
492,34,test,Give me the person decedent at the work of the author of French Algeria and person decedent at Algiers.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT DISTINCT ?person1 AS ?PersonAtWorkOfAuthor, ?person2 AS ?PersonAtAlgiers WHERE {
  # Part 1: Person decedent at work of author of ""French Algeria""
  <http://dbpedia.org/resource/French_Algeria> <http://purl.org/dc/terms/creator> ?author .
  ?work <http://purl.org/dc/terms/creator> ?author .
  ?work <http://dbpedia.org/ontology/decedent> ?person1 .

  # Part 2: Person decedent at Algiers
  OPTIONAL {
    <http://dbpedia.org/resource/Algiers> <http://dbpedia.org/ontology/decedent> ?person2 .
  }
}
```",4,4,5,3,2,3,3,71,0,0,16,0,0.0,0
10,26,test,"Give me the band member of Luke Vibert and associated musical artist of the person born, that is an artist, as Matt Colton and professional in the birth name of Sharon Kao.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v4 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?bandMember ?associatedArtist WHERE {
  # Step 1: Find band member of Luke Vibert
  <http://dbpedia.org/resource/Luke_Vibert> <http://dbpedia.org/ontology/memberOf> ?band .
  ?band <http://dbpedia.org/ontology/member> ?bandMember .

  # Step 2: Find associated musical artist of Matt Colton
  OPTIONAL {
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(?profession = <http://dbpedia.org/resource/Musician>)
    ?associatedArtist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Matt_Colton> .
  }

  # Step 3: Find professional in the birth name of Sharon Kao
  OPTIONAL {
    <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthName .
    ?professional <http://dbpedia.org/ontology/birthName> ?birthName .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
9,59,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT DISTINCT ?almaMater WHERE {
  # Find the mayor who is a politician of an organization in Belfast
  ?mayor <http://dbpedia.org/ontology/politician> true .
  ?organization <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> ;
                 <http://dbpedia.org/ontology/mayor> ?mayor .
  
  # Get the alma mater of this mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Find awardees of Royal Medals
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Royal_Medals> .
  
  # Check if the alma mater is shared with any awardee
  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
115,8,test,Give me the alma mater of Vladimir Cerrón and alma mater of the awardee of National Order of Scientific Merit.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?vCerronAlmaMater, ?awardeeAlmaMater WHERE {
  # Query for Vladimir Cerrón's alma mater
  <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?vCerronAlmaMater .

  # Query for the awardee of National Order of Scientific Merit and their alma mater
  ?awardee <http://dbpedia.org/property/nationalOrderOfScientificMeritAwardee> true .
  ?awardee <http://dbpedia.org/ontology/almaMater> ?awardeeAlmaMater .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
232,65,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v4 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Identify John Pertwee
  ?john a dbo:Person ;
        foaf:name ""John Devon Roland Pertwee""@en .
  
  # Step 2: Find his child who is an actor, narrator, and producer
  ?child dbo:parent ?john ;
         a dbo:Actor ;
         dbo:occupation ""narrator""@en ;
         dbo:occupation ""producer""@en .

  # Step 3: Claim to fame involving a film and military conflict
  ?claimToFame dbo:associatedWith ?film, ?militaryConflict ;
               dbo:subject ?child .
  ?film a dbo:Film .
  ?militaryConflict a dbo:MilitaryConflict .

  # Step 4: Sylvie Bermann's residence
  ?sylvie dbo:nativePlace ?residence ;
          foaf:name ""Sylvie Bermann""@en .
  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Step 5: Actor associated with the claim to fame
  ?actor dbo:actedIn ?film .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
328,24,test,Give me the leader of People's Commissariat of Defense of the Soviet Union and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?leader WHERE {
  ?person <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> .

  BIND(?person AS ?leader)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,63,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?figure WHERE {
  # Step 1: Find Queen's University Belfast and its nickname
  <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/ontology/nickname> ?nickname .

  # Step 2: Find the mayor of an organization in Belfast who is a politician and attended Queen's University Belfast
  ?organization <http://www.w3.org/ns/org#location> <http://dbpedia.org/resource/Belfast> .
  ?mayor <http://dbpedia.org/ontology/politicianForOrganization> ?organization ;
         <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Queen's_University_Belfast> .

  # Step 3: Find the awardee of the Royal Medal who also attended Queen's University Belfast
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Royal_Medal> ;
           <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Queen's_University_Belfast> .

  # Combine the results to find the common figure
  ?mayor = ?awardee .
  BIND(?nickname AS ?figure)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,57,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on 1985-04-29 and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Part 1: Band of Tracey Elizabeth McSween
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Tracey Elizabeth McSween"" .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}

UNION

# Part 2: Band of person born on 1985-04-29
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}

UNION

# Part 3: Band of the writer of Amba Shepherd's song
SELECT ?writerBand WHERE {
  ?song <http://purl.org/dc/terms/creator> ""Amba Shepherd"" .
  ?song <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  ?song <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://dbpedia.org/ontology/memberOfBand> ?writerBand .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,61,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?commander WHERE {
  # Step 1: Identify Gustav Jonson's leader who is an office holder and a politician.
  <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/leader> ?leader .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Politician> .

  # Step 2: Find the government agency led by this person.
  ?leader <http://dbpedia.org/ontology/office> ?office .
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .

  # Step 3: Determine the decedent at Budapest associated with this agency.
  ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
  ?decedent <http://dbpedia.org/ontology/office> ?office .

  # Step 4: Locate the force related to this decedent.
  ?force <http://dbpedia.org/ontology/member> ?decedent .

  # Step 5: Identify the commander of that force.
  ?force <http://dbpedia.org/ontology/commander> ?commander .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
994,48,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
# Step 1: Identify Donald Maynard Dokken as a musical artist
SELECT ?dokken WHERE {
  ?dokken <http://dbpedia.org/ontology/birthName> ""Donald Maynard Dokken"" .
  ?dokken <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 2: Find band members associated with Donald Maynard Dokken
SELECT DISTINCT ?bandMember WHERE {
  VALUES ?dokken { <INSERT_DOKKEN_URI_HERE> } # Replace with the URI found in step 1
  ?dokken <http://dbpedia.org/ontology/memberOf> ?band .
  ?bandMember <http://dbpedia.org/ontology/memberOf> ?band .
}

# Step 3: Find associated musical artists of these band members
SELECT DISTINCT ?associatedArtist WHERE {
  VALUES ?bandMember { <INSERT_BAND_MEMBER_URIS_HERE> } # Replace with URIs found in step 2
  ?bandMember <http://dbpedia.org/ontology/memberOf> ?otherBand .
  ?associatedArtist <http://dbpedia.org/ontology/memberOf> ?otherBand .
}

# Step 4: Find the reference to Watchtower among these associated musical artists
SELECT DISTINCT ?watchtower WHERE {
  VALUES ?associatedArtist { <INSERT_ASSOCIATED_ARTIST_URIS_HERE> } # Replace with URIs found in step 3
  ?associatedArtist <http://dbpedia.org/ontology/referenceTo> ?watchtower .
  FILTER regex(str(?watchtower), ""Watchtower"", ""i"")
}
```

Note: The placeholders `<INSERT_DOKKEN_URI_HERE>`, `<INSERT_BAND_MEMBER_URIS_HERE>`, and `<INSERT_ASSOCIATED_ARTIST_URIS_HERE>` need to be replaced with actual URIs obtained from executing the previous steps.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
9,65,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of Northern Ireland Forum.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v4 . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
SELECT ?almaMater WHERE {
  # Step 1: Find the nickname of Queen's University Belfast
  <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/ontology/nickname> ?nickname .
  
  # Step 2: Get alma mater of this figure
  ?figure <http://www.w3.org/2000/01/rdf-schema#label> ?nickname ;
          <http://dbpedia.org/ontology/almaMater> ?almaMater1 .

  # Step 3: Find the mayor of Northern Ireland Forum
  ?mayor <http://dbpedia.org/ontology/politicianForParty> <http://dbpedia.org/resource/Northern_Ireland_Forum> ;
         <http://www.w3.org/2000/01/rdf-schema#label> ?mayorLabel .

  # Step 4: Get alma mater of this mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater2 .

  # Step 5: Identify the award reference to Royal Medals
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medal"" ;
         <http://dbpedia.org/ontology/reference> ?reference .

  # Step 6: Find the awardee of this award
  ?awardee <http://dbpedia.org/ontology/award> ?award .

  # Step 7: Get alma mater of this awardee
  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
959,46,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
SELECT ?native WHERE {
  # Step 1: Identify Yōichi Masuzoe born in 1958
  ?person <http://dbpedia.org/ontology/birthYear> ""1958"" .
  ?person rdfs:label ""Yōichi Masuzoe""@en .

  # Step 2: Find his alma mater that is a Japanese organization, university, and educational institution
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1 .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type2 .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type3 .
  FILTER(?type1 = <http://dbpedia.org/ontology/Organisation>)
  FILTER(?type2 = <http://dbpedia.org/ontology/University>)
  FILTER(?type3 = <http://dbpedia.org/ontology/EducationalOrganization>)
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(langMatches(lang(?label), ""ja""))

  # Step 3: Find his residence that is a country
  ?person <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 4: Identify the native place of this residence
  ?residence <http://dbpedia.org/ontology/nativePlace> ?native .
}
```",5,10,6,3,2,3,3,71,0,0,167,0,0.0,0
547,68,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v5 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Part 1: Resting place of the child of the child of William Haliburton
SELECT ?grandchildRestingPlace WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton> .
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
  ?grandchild <http://dbpedia.org/ontology/deathPlace> ?grandchildRestingPlace .
}

UNION

# Part 2: Resting place of the actor of the show with Emily Richard
SELECT ?actorRestingPlace WHERE {
  ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/E._Richard> .
  ?show <http://dbpedia.org/ontology/starredBy> ?actor .
  ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .
}

UNION

# Part 3: Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT ?awardeeRestingPlace WHERE {
  ?person <http://dbpedia.org/property/honours> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
  ?person <http://dbpedia.org/ontology/deathPlace> ?awardeeRestingPlace .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
659,62,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of Napoleonic Wars and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
SELECT ?commander WHERE {
  # Step 1: Identify 'Polish Horse'
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?polishHorse <http://www.w3.org/2000/01/rdf-schema#label> ""Polish Horse""@en .

  # Step 2: Find the military force of Napoleonic Wars
  ?force <http://dbpedia.org/property/militaryForceOf> <http://dbpedia.org/resource/Napoleonic_Wars> .
  ?polishHorse <http://dbpedia.org/ontology/member> ?force .

  # Step 3: Find the commander in that force
  ?commander <http://dbpedia.org/ontology/commander> ?force .

  # Step 4: Identify the native office holder of Kingdom of Ireland
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?officeHolder <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland> .

  # Step 5: Ensure the commander is also a commander in the force of this office holder
  ?commander <http://dbpedia.org/ontology/commander> ?officeHolderForce .
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?officeHolder <http://dbpedia.org/property/militaryForceOf> ?officeHolderForce .

  # Step 6: Find the war that is both an event and a military conflict
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/2000/01/rdf-schema#isPartOf> ?event .
  ?commander <http://dbpedia.org/ontology/commander> ?war .
}
```",7,12,8,3,3,3,3,71,0,0,13,0,0.0,0
54,60,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?v2 . }","```sparql
SELECT ?finalChild WHERE {
  # Step 1: Find Thinkhaya's child
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?thinkhayasChild .

  # Step 2: Thinkhaya is the father of his own child, so we move to step 3

  # Step 3: Find Thinkhaya's successor
  ?thinkhayasChild <http://dbpedia.org/ontology/predecessor> ?successor .

  # Step 4: Find Thihapate of Mohnyin and his children who are office holders and royalty
  <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?thihapatesChild .
  ?thihapatesChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?thihapatesChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Find the child of Thinkhaya's successor
  ?successor <http://dbpedia.org/ontology/child> ?finalChild .
}
```",6,8,7,3,2,3,3,71,0,1,1,0.0,0.0,0
427,64,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to the name of the party of Michele Pinto and party of Giulio Andreotti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT DISTINCT ?party WHERE {
  # Step 1: Get Romano Prodi's birth name
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 2: Find a person with that birth name who is an office holder and politician
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  ?person <http://dbpedia.org/ontology/officeHolder> ?office .
  ?person <http://dbpedia.org/ontology/politician> ?politician .

  # Step 3: Get the party of this person
  ?person <http://dbpedia.org/ontology/memberOf> ?party .

  # Step 4: Ensure the party matches those of Michele Pinto and Giulio Andreotti
  OPTIONAL { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/memberOf> ?party . }
  OPTIONAL { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/memberOf> ?party . }

  FILTER EXISTS { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/memberOf> ?party . }
  FILTER EXISTS { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/memberOf> ?party . }
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
9,47,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
SELECT ?almaMater WHERE {
  # Find the mayor who is a politician
  ?mayor <http://dbpedia.org/ontology/politician> _:a .
  ?mayor <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  
  # Find the awardee of Royal Medals
  ?awardee <http://dbpedia.org/ontology/awardRecipient> _:b .
  ?reference <http://dbpedia.org/ontology/reference> ?awardee .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award> .
  FILTER(?reference = <http://dbpedia.org/resource/Royal_Medals>) .

  # Find alma maters
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
184,63,test,"Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
# Step 1: Find child of Archduke Joseph Karl of Austria
SELECT ?childOfJosephKarl WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?childOfJosephKarl .
}

# Step 2: Find parent of native of landmark at elevation 96.0
SELECT ?parentOfNative WHERE {
  ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#elevation> ""96.0""^^xsd:float ;
            <http://dbpedia.org/ontology/type> <http://dbpedia.org/ontology/Settlement> .
  ?native <http://dbpedia.org/ontology/nationality> ?landmark .
  ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?native <http://dbpedia.org/ontology/familyName> ?parentOfNative .
}

# Step 3: Find child of Archduke Joseph Francis of Austria
SELECT ?childOfJosephFrancis WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?childOfJosephFrancis .
}

# Final step: Find the common entity that satisfies all conditions
SELECT DISTINCT ?result WHERE {
  # Assuming intermediate results are stored or can be joined appropriately
  VALUES (?intermediate1) { ?childOfJosephKarl }
  VALUES (?intermediate2) { ?parentOfNative }
  VALUES (?intermediate3) { ?childOfJosephFrancis }

  ?intermediate1 <http://dbpedia.org/ontology/child> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?result = ?intermediate2 .
  ?result = ?intermediate3 .
}
```

Note: This query is conceptual and assumes that intermediate results can be joined or stored appropriately. The actual execution may require additional context or assumptions about the data structure in DBpedia.",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
994,65,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Find Fredrik Thordendal's band
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .

  # Step 2: Find band members who are bands/groups
  ?member <http://dbpedia.org/ontology/member> ?band .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Band> <http://dbpedia.org/ontology/Organisation>) .

  # Step 3: Find Donald Maynard Dokken's associated musical artist
  ?dokkenBirth <http://dbpedia.org/property/birthPlace> ?place .
  ?dokkenBirth <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?dokkenBirth <http://dbpedia.org/resource/Donald_Maynard_Dokken> .

  # Step 4: Find Watchtower's associated musical artists
  <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
  
  # Step 5: Find the associated artist of the watchtower artist
  ?watchtowerArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalArtist .

  # Combine results to find the final associated musical artist
  ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  FILTER(?associatedArtist = ?finalArtist)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
492,48,test,"Give me the person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . },"```sparql
SELECT DISTINCT ?person1, ?person2 WHERE {
  # Task 1: Find the author of ""French Algeria"" and a decedent at their work
  <http://dbpedia.org/resource/French_Algeria> <http://purl.org/dc/terms/creator> ?author .
  ?work <http://dbpedia.org/ontology/author> ?author .
  ?work <http://dbpedia.org/ontology/decedentAt> ?person1 .

  # Task 2: Find the capital of Algeria and a decedent there
  <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?capital .
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?capital <http://dbpedia.org/ontology/decedentAt> ?person2 .
}
```",5,6,6,3,2,3,3,71,0,0,16,0,0.0,0
617,51,test,Give me the parent of the child of the commander in Battle of Panium and spouse of the child of Antiochus III the Great.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find the commander in the Battle of Panium
  <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?commander .

  # Step 2: Find children of that commander
  ?commander <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Check if the child is also a child of Antiochus III the Great
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  
  # Step 4: Find the spouse of that child
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 5: Find the parent of that spouse
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?spouse <http://dbpedia.org/ontology/father> ?parent .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
16,61,test,Give me the professional in the profession of the actor of Unnatural (TV series) and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . },"```sparql
# Step 1: Find the actor's profession from ""Unnatural (TV series)""
SELECT ?actor ?profession WHERE {
  <http://dbpedia.org/resource/Unnatural_(TV_series)> dbo:castMember ?actor .
  ?actor dbo:occupation ?profession .
}

UNION

# Step 2: Find a person with the same birth name as an Ohio State University alumnus
SELECT ?person ?profession WHERE {
  ?alumnus dbp:almaMater <http://dbpedia.org/resource/Ohio_State_University> ;
           foaf:name ?birthName .
  ?person foaf:name ?birthName ;
          dbo:occupation ?profession .
}
```",6,6,7,3,2,3,3,71,0,0,3,0,0.0,0
378,36,test,"Give me the war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?war ?claimToFame WHERE {
  # Step 1: Find wars associated with Carl Pontus Gahn
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
  
  # Step 2: For each war, find the commanders involved
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  
  # Step 3: Check if the commander is Thomas Trigge
  FILTER(?commander = <http://dbpedia.org/resource/Thomas_Trigge>)
  
  # Step 4: Ensure the war is a military conflict, societal event, and an event
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?societalEvent .
  ?societalEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Step 5: Retrieve the claim to fame for Thomas Trigge
  ?commander <http://dbpedia.org/property/claimToFame> ?claimToFame .
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
801,68,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v5 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v7 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify The Shadow's true self
  ?shadow <http://dbpedia.org/ontology/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
  
  # Step 2: Find the professional roles in Rapper and musical artist
  ?trueSelf <http://dbpedia.org/ontology/profession> ?profession .
  FILTER (?profession IN (<http://dbpedia.org/resource/Rapper>, <http://dbpedia.org/resource/Musical_artist>)) .

  # Step 3: Determine the work produced by this individual that is a musical work and a song
  ?trueSelf <http://dbpedia.org/ontology/work> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?workType .
  FILTER (?workType IN (<http://dbpedia.org/ontology/MusicalWork>, <http://dbpedia.org/ontology/Song>)) .

  # Step 4: Identify the producer of this work
  ?work <http://dbpedia.org/ontology/producer> ?producer .

  # Step 5: Locate the writer of ""40 Dayz & 40 Nightz"" who is also a musical artist and an artist
  ?writer <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?writerType .
  FILTER (?writerType IN (<http://dbpedia.org/ontology/MusicalArtist>, <http://dbpedia.org/ontology/Artist>)) .

  # Step 6: Find the associated musical artist linked to this writer
  ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",8,14,9,3,3,3,3,71,0,0,8,0,0.0,0
547,52,test,Give me the resting place of the child of the child of William Haliburton and resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Resting place of the child's child of William Haliburton
SELECT DISTINCT ?grandchildRestingPlace WHERE {
  # Find grandchildren of William Haliburton
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton> .
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
  
  # Get the resting place of these grandchildren
  OPTIONAL { ?grandchild <http://dbpedia.org/ontology/restingPlace> ?restingPlace . }
  BIND(IF(BOUND(?restingPlace), ?restingPlace, ""Unknown"") AS ?grandchildRestingPlace)
}

UNION

# Resting place of Alan Cunningham
SELECT DISTINCT ?cunninghamRestingPlace WHERE {
  <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?cunninghamRestingPlace .
}

UNION

# Resting place of the actor of ""Enemy at the Door""
SELECT DISTINCT ?actorRestingPlace WHERE {
  <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/ontology/starring> ?actor .
  OPTIONAL { ?actor <http://dbpedia.org/ontology/restingPlace> ?actorRestingPlace . }
  BIND(IF(BOUND(?actorRestingPlace), ?actorRestingPlace, ""Unknown"") AS ?actorRestingPlace)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
528,35,test,Give me the force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . }","```sparql
SELECT ?force1 ?war WHERE {
  # Query for Narciso Campero Leyes' military force
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/birthName> ""Narciso Campero Leyes"" .
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/property/militaryForce> ?force1 .
  }

  # Query for the war of the military force in Battle of Pisagua
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    ?militaryForce <http://dbpedia.org/property/war> ?war .
  }
}
```",4,4,5,2,2,3,3,71,0,0,3,0,0.0,0
92,70,test,"Give me the band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v7 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
  ?person <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Nevermore_(band)> .
  
  OPTIONAL { 
    ?artist <http://dbpedia.org/ontology/musicalArtist> ?person .
    ?actor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> .
    FILTER(?artist = ?actor)
  }
  
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,62,test,"Give me the parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
# Step 1: Find parent of Archduchess Ilona of Austria
SELECT ?parentIlona WHERE {
  <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/birthParent> ?parentIlona .
}

UNION

# Step 2: Find native of a landmark at elevation 96.0 that is a settlement
SELECT ?native WHERE {
  ?landmark <http://dbpedia.org/property/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
  ?landmark <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?landmark <http://dbpedia.org/property/native> ?native .
}

UNION

# Step 3: Find child of the child of the parent (royalty) of Archduke Ladislaus Philipp
SELECT ?grandchild WHERE {
  ?parentLadislaus <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> .
  ?parentLadislaus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?childLadislaus <http://dbpedia.org/ontology/birthParent> ?parentLadislaus .
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?childLadislaus .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
303,22,test,"Give me the party of the commander, that is a politician, in United States invasion of Panama and entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . },"```sparql
SELECT ?party WHERE {
  # Step 1: Find the commander of the United States invasion of Panama
  <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?commander .
  
  # Step 2: Ensure the commander is a politician
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 3: Get the political party of this commander
  ?commander <http://dbpedia.org/property/party> ?party .
  
  # Step 4: Find entities related to El Valle de Antón and ensure they are in a country
  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/El_Valle_de_Antón> .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  }
}
```",4,6,5,2,2,2,3,28,2,2,0,0.5,1.0,0.6666666666666666
547,44,test,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?actorRestingPlace ?burtonRestingPlace ?awardeeRestingPlace WHERE {
  # Actor of ""Enemy at the Door"" and their resting place
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?movie rdfs:label ""Enemy at the Door""@en .
  ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .

  # James Burton (Egyptologist) and his resting place
  <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/deathPlace> ?burtonRestingPlace .

  # Awardee of Knight Grand Cross of the Order of St Michael and St George and their resting place
  ?awardee <http://dbpedia.org/property/orderOfStMichaelAndStGeorge> ""Knight Grand Cross"" .
  ?awardee <http://dbpedia.org/ontology/deathPlace> ?awardeeRestingPlace .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
492,26,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT DISTINCT ?commander WHERE {
  # Step 1: Identify the commander(s) involved in the Battle of Verdun.
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?verdunCommander .

  # Step 2: Determine which wars these commanders were part of, ensuring they are military conflicts and events.
  ?verdunCommander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Step 3: Find other commanders who participated in those wars.
  ?war <http://dbpedia.org/ontology/commander> ?commander .
}
```",3,5,4,3,1,3,3,71,92,0,0,1.0,1.0,1.0
339,17,test,Give me the father of the child of the parent of Princess Olga of Greece and Denmark and child of George I of Greece.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
SELECT ?father WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> <http://dbpedia.org/ontology/father> ?father .
  }
  UNION
  {
    ?parent <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/father> ?father .
    FILTER (
      ?parent IN (<http://dbpedia.org/resource/King_George_I_of_Greece>, 
                  <http://dbpedia.org/resource/Grand_Duchess_Olga_Constantinovna_of_Russia>)
    )
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
959,21,test,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
# Step 1: Find the manager of the 2013 Júbilo Iwata season
SELECT ?manager WHERE {
  <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?manager .
}

# Step 2: Find Eiji Ōtsuka's alma mater that is Japanese and an organization, university, and educational institution
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> ;
             <http://dbpedia.org/ontology/University> ;
             <http://dbpedia.org/ontology/EducationalOrganization> .
  ?almaMater <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> .
}

# Step 3: Find the common entity between the manager and alma mater
SELECT DISTINCT ?commonEntity WHERE {
  { 
    SELECT ?manager WHERE {
      <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?manager .
    }
  }
  UNION
  {
    SELECT ?almaMater WHERE {
      <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
      ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> ;
                 <http://dbpedia.org/ontology/University> ;
                 <http://dbpedia.org/ontology/EducationalOrganization> .
      ?almaMater <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> .
    }
  }
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
427,71,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v4 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://dbpedia.org/ontology/party> ?result . },"```sparql
# Step 1: Find an MIT alumnus who is also a politician
SELECT ?alumnus WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?alumnus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}

# Step 2: Find the father's political party
SELECT ?party WHERE {
  ?father <http://dbpedia.org/property/father> ?alumnus .
  ?father <http://dbpedia.org/ontology/memberOf> ?party .
}

# Step 3: Retrieve Michele Pinto's party
SELECT ?micheleParty WHERE {
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/memberOf> ?micheleParty .
}

# Step 4: Identify Romano Prodi's birth name
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?birthName .
}
```",9,11,10,3,3,3,3,71,0,0,2,0,0.0,0
281,55,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of Knight Grand Cross of the Order of the Bath and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
# Part 1: War of Heather Roy's profession as a military unit
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?profession <http://dbpedia.org/ontology/battle> ?war .
}

UNION

# Part 2: War of the awardee of Knight Grand Cross of the Order of the Bath
SELECT ?war WHERE {
  ?person <http://dbpedia.org/property/knightGrandCrossOfTheOrderOfTheBath> ""true""^^<http://www.w3.org/2001/XMLSchema#boolean> .
  ?person <http://dbpedia.org/ontology/battle> ?war .
}

UNION

# Part 3: Entity in Bob Heffron's birthplace (country) and its associated wars
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?entity <http://dbpedia.org/property/location> ?birthPlace .
  ?entity <http://dbpedia.org/ontology/battle> ?war .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
16,46,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
# Step 1: Find Satomi Ishihara's profession
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .
}

# Step 2: Find Ted McGinley's birth name and spouse
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ted McGinley"" .
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 3: Combine the results to find a match
SELECT DISTINCT ?result WHERE {
  # Get Satomi Ishihara's profession
  ?profession1 <http://purl.org/dc/terms/subject> ?profession .
  FILTER(?profession = ?profession2) .

  # Find Ted McGinley's spouse who shares the same profession as Satomi Ishihara
  ?person <http://dbpedia.org/ontology/birthName> ""Ted McGinley"" .
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://purl.org/dc/terms/subject> ?profession2 .

  # Result is the spouse who matches the profession
  BIND(?spouse AS ?result)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
959,50,test,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
SELECT ?manager WHERE {
  # Step 1: Find the leader who is a politician in the 2010 Japanese House of Councillors election
  ?election <http://dbpedia.org/ontology/elected> ?leader .
  FILTER(?election = <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election>)
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 2: Determine the residence of this leader that is a country
  ?leader <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 3: Identify Takashi Sekizuka's team
  ?sekizukaTeam <http://dbpedia.org/ontology/teamMember> <http://dbpedia.org/resource/Takashi_Sekizuka> .
  
  # Step 4: Retrieve the manager of that team
  ?sekizukaTeam <http://dbpedia.org/ontology/manager> ?manager .
}
```",5,7,6,3,2,3,3,71,0,0,6,0,0.0,0
161,65,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
SELECT ?event WHERE {
  # Step 1: Find predecessor of Indalecio Prieto
  <http://dbpedia.org/resource/Indalecio_Prieto> <http://www.w3.org/2002/07/owl#sameAs> ?predecessor .

  # Step 2: Identify military forces associated with the predecessor that are societal events and military conflicts
  ?force <http://dbpedia.org/ontology/militaryForce> ?predecessor .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 3: Find commanders Emilio Mola and Francisco Franco in these forces
  ?event <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?force1 .
  ?force1 = ?force .

  ?event2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> .
  ?event2 <http://dbpedia.org/ontology/militaryForce> ?force2 .
  ?force2 = ?force .

  # Step 4: Identify the event where both commanders are involved
  FILTER (?event = ?event2)
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
492,69,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/author> ?v4 . },"```sparql
# Step 1: Find the author of ""French Algeria"" and their works
SELECT ?author WHERE {
  <http://dbpedia.org/resource/French_Algeria> <http://purl.org/dc/terms/creator> ?author .
}

WITH ?author

# Step 2: Identify the capital city of Khemis Miliana District and its country
SELECT DISTINCT ?capital ?country WHERE {
  <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/capital> ?capital .
  ?capital <http://dbpedia.org/ontology/country> ?country .
}

WITH ?author ?capital ?country

# Step 3: Find persons who are decedents at both the work and the capital
SELECT DISTINCT ?person WHERE {
  ?work <http://dbpedia.org/ontology/creator> ?author .
  ?work <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  FILTER(?deathPlace = ?capital) .

  ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace1 .
  ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace2 .
  FILTER((?deathPlace1 = ?work || ?deathPlace2 = ?work) && (?deathPlace1 = ?capital || ?deathPlace2 = ?capital)) .

  # Step 4: Locate Frédéric-Georges Herr among these persons
  FILTER(?person = <http://dbpedia.org/resource/Fr%C3%A9d%C3%A9ric-Georges_Herr>) .
}

WITH ?author ?capital ?country ?person

# Step 5: Identify a military conflict involving Frédéric-Georges Herr as a commander
SELECT DISTINCT ?result WHERE {
  ?person <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(?commander = ?person) .

  ?conflict <http://dbpedia.org/ontology/commander> ?commander .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?conflict <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> ?event .
  FILTER(?event = <http://dbpedia.org/resource/Event>) .

  # Ensure the conflict is related to the country identified in step 2
  ?conflict <http://dbpedia.org/ontology/location> ?location .
  ?location <http://dbpedia.org/ontology/country> ?country .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
54,57,test,"Give me the child of Thinkhaya of Pagan and parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find Thado Minsaw of Prome's parent
  ?thadoMinsaw <http://dbpedia.org/ontology/birthParent> ?parentOfThado .

  # Step 2: Find the child of this parent
  ?parentOfThado <http://dbpedia.org/ontology/child> ?childOfParent .

  # Step 3: Identify Thinkhaya of Pagan's children
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?thinkhayaChild .

  # Step 4: Match the child from step 2 with a child of Thinkhaya of Pagan
  FILTER(?childOfParent = ?thinkhayaChild)

  # Step 5: Identify Thihapate of Mohnyin's predecessor
  <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/predecessor> ?predecessor .

  # Step 6: Find the office holder and royalty that matches both criteria
  ?result <http://dbpedia.org/ontology/predecessor> ?childOfParent .
  ?result a <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Royalty> .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
767,67,test,"Give me the entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . }","```sparql
SELECT ?entity WHERE {
  # Step 1: Find Matthew Burland's fictional alter ego
  ?burland <http://dbpedia.org/ontology/fictionalAlterEgo> ?alterEgo .
  
  # Step 2: Ensure the alter ego is a fictional character with an alma mater in Baden-Württemberg
  ?alterEgo <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?alterEgo <http://dbpedia.org/ontology/almaMater> ?almaMater .
  
  # Step 3: Alma mater must be in Baden-Württemberg
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?region .
  FILTER (STR(?region) = ""Baden-Württemberg"")

  # Step 4: Link alma mater to the administration of George Kilbon Nash
  ?admin <http://dbpedia.org/ontology/administrationOf> ?almaMater .
  ?admin <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?nashType .
  ?nashType <http://dbpedia.org/resource/George_Kilbon_Nash> .

  # Final entity in Baden-Württemberg
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?region .
  FILTER (STR(?region) = ""Baden-Württemberg"")
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
492,55,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at the capital, that is a settlement, of Algeria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?commander WHERE {
  # Step 1: Capital of Algeria that is a settlement
  <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?capital .
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 2: Joseph C. Satterthwaite's work and decedent
  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/property/work> ?work .
  FILTER(CONTAINS(LCASE(STR(?work)), ""us assistant secretary of state for african affairs""))
  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/deathPlace> ?decedent .

  # Step 3: Frédéric-Georges Herr's decedent
  <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/deathPlace> ?herrDecedent .
  
  # Ensure both decedents are the same place
  FILTER(?decedent = ?herrDecedent)

  # Step 4: Military conflict involving both individuals
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?conflict <http://dbpedia.org/ontology/personInvolved> <http://dbpedia.org/resource/Frédéric-Georges_Herr> .
  ?conflict <http://dbpedia.org/ontology/personInvolved> <http://dbpedia.org/resource/Joseph_C._Satterthwaite> .

  # Step 5: Commander of the conflict
  ?conflict <http://dbpedia.org/ontology/commander> ?commander .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
360,24,test,"Give me the reference to the author of Blinded by the Light and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?authorReference WHERE {
  # Step 1: Find the death place of Winnie Madikizela-Mandela that is a settlement.
  <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  FILTER (?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>) .

  # Step 2: Find the author of ""Blinded by the Light.""
  <http://dbpedia.org/resource/Blinded_by_the_Light_(film)> <http://purl.org/dc/terms/creator> ?author .

  # Step 3: Retrieve references related to this author.
  ?author <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?authorReference .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
959,39,test,"Give me the native of Japan and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/manager> ?v2 . },"```sparql
SELECT ?native WHERE {
  # Step 1: Find the sports manager for the 1998 Kashima Antlers season
  <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?sportsManager .
  
  # Ensure the manager is categorized as a Sports Manager
  ?sportsManager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .

  # Step 2: Find the team managed by this sports manager
  ?sportsManager <http://dbpedia.org/property/team> ?team .
  
  # Step 3: Identify the native of Japan who is also a manager of that team
  ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> ;
          <http://dbpedia.org/property/team> ?team ;
          <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Ensure the birth place is in Japan
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> ;
              <http://dbpedia.org/property/name> ""Japan"" .
}
```",4,5,5,3,2,3,3,71,0,0,6,0,0.0,0
339,19,test,Give me the child of the child of Christian IX of Denmark and father of the child of the parent of Princess Olga of Greece and Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
# Part 1: Get Christian IX's grandchild and their father
SELECT ?grandchildFather WHERE {
  # Step 1: Find Christian IX's child
  <http://dbpedia.org/resource/Christian_IX_of_Denmark> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> ?child .

  # Step 2: Find that child's own child (grandchild of Christian IX)
  ?child <http://dbpedia.org/ontology/child> ?grandchild .

  # Step 3: Get the father of this grandchild
  ?grandchild <http://dbpedia.org/ontology/father> ?grandchildFather .
}

# Part 2: Get Princess Olga's parent and her child (herself)
SELECT ?olgaParent WHERE {
  <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/spouse> ?mother .
  ?mother <http://dbpedia.org/ontology/child> ?olgaParent .
}

# Final step: Find the common entity
SELECT DISTINCT ?result WHERE {
  VALUES ?grandchildFather { ?grandchildFather }
  VALUES ?olgaParent { ?olgaParent }

  # The result is where these two match, i.e., the child of Christian IX's grandchild who is also Olga's father
  ?grandchildFather = ?olgaParent .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
55,25,test,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony and band of Newsted and band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find band members of San Francisco Symphony who are also part of a group.
SELECT ?bandMember WHERE {
  ?symphony <http://dbpedia.org/ontology/member> ?bandMember .
  FILTER(STRSTARTS(STR(?symphony), ""http://dbpedia.org/resource/San_Francisco_Symphony""))
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
}

UNION

# Step 2: Find bands associated with Newsted and their band members.
SELECT ?bandMember WHERE {
  ?newstedBand <http://dbpedia.org/ontology/member> ?bandMember .
  FILTER(STRSTARTS(STR(?newstedBand), ""http://dbpedia.org/resource/Newsted""))
}

UNION

# Step 3: Find the producer of ""Used to Love Her"" and their band membership.
SELECT ?producerBandMember WHERE {
  <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?producer .
  ?producer <http://dbpedia.org/ontology/member> ?producerBandMember .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
547,58,test,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?actorRestingPlace, ?burtonRestingPlace, ?awardeeRestingPlace WHERE {
  # Resting place of the actor from ""Enemy at the Door""
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?movie <http://dbpedia.org/property/title> ""Enemy at the Door"" .
  ?actor <http://dbpedia.org/ontology/restingPlace> ?actorRestingPlace .

  # Resting place of James Burton (Egyptologist)
  <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?burtonRestingPlace .

  # Resting place of the awardee associated with Gerald Graham
  ?award <http://dbpedia.org/property/recipient> ?awardee .
  ?award <http://dbpedia.org/property/awardedTo> <http://dbpedia.org/resource/Gerald_Graham> .
  ?awardee <http://dbpedia.org/ontology/restingPlace> ?awardeeRestingPlace .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,59,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Find the war involving Saitō Hajime that is a military conflict, event, and societal event.
  ?war <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Sait%C5%8D_Hajime> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .

  # Step 2: Find the commander of this war.
  ?war <http://dbpedia.org/property/commander> ?commander .
  
  # Step 3: Get the birthplace of this commander.
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 4: Identify Matsudaira Tadamasa's father who is a politician and office holder.
  <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .

  # Step 5: Find the death place of this father.
  ?father <http://dbpedia.org/property/deathPlace> ?deathPlace .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
528,48,test,"Give me the force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . }","```sparql
# Query 1: Find the military force of Narciso Campero Leyes
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/militaryForce> ?force .
}

UNION

# Query 2: Find the war of the military force associated with a societal event in Chile
SELECT ?war WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/battle> ?war .
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
488,51,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
# Step 1: Find Yūki Hideyasu's father who is a politician
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Y%C5%ABki_Hideyasu> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}

# Step 2: Find the death place of Yūki Hideyasu's father
SELECT ?deathPlace WHERE {
  ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  FILTER(?father IN (<result_from_step_1>))
}

# Step 3: Identify Tokugawa Masako's spouse who is royalty
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 4: Find the administration of Tokugawa Masako's spouse's father
SELECT ?administration WHERE {
  ?spouse <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/property/administration> ?administration .
  FILTER(?spouse IN (<result_from_step_3>))
}
```

Note: The above SPARQL queries are structured to be executed sequentially, where the results of one step are used as input for the next. In practice, you would need to execute these steps in sequence and substitute `<result_from_step_X>` with actual values obtained from previous query executions.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,57,test,"Give me the reference to Partito Popolare Italiano and party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . }","```sparql
SELECT ?reference WHERE {
  # Partito Popolare Italiano reference
  OPTIONAL { 
    <http://dbpedia.org/resource/Partito_Popolare_Italiano> ?p ?reference .
  }
  
  # Father of an alumnus from MIT and his party
  OPTIONAL {
    ?alumnus <http://www.w3.org/2000/01/rdf-schema#label> ""Massachusetts Institute of Technology""@en ;
             <http://dbpedia.org/ontology/alumniOf> ?mit .
    ?alumnus <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/memberOf> ?party .
    ?party ?p ?reference .
  }
  
  # Romano Prodi as an office holder and politician
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type ;
                                                 ?p ?reference .
    FILTER (?type IN (<http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Politician>) &&
            EXISTS { ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Romano Antonio Prodi""@en })
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
498,8,test,"Give me the band of the member, that is an artist, of Mortician (band) and band of Malevolent Creation.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT DISTINCT ?member ?otherBand WHERE {
  # Find members of Mortician (band)
  <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/member> ?member .
  
  # Ensure the member is also a member of Malevolent Creation
  <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/member> ?member .

  # Check if the member is an artist
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Find other bands that this member belongs to
  ?member <http://dbpedia.org/ontology/member> ?otherBand .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
485,23,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?entity WHERE {
  { 
    <http://dbpedia.org/resource/Western_European_Time> <http://dbpedia.org/ontology/timeZoneForRegion> ?region .
    ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
    BIND(?region AS ?entity)
  }
  
  UNION
  
  {
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthplace .
    ?birthplace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
    BIND(?birthplace AS ?entity)
  }
}
```",4,6,5,2,2,2,3,28,0,1,357,0.0,0.0,0
547,30,test,Give me the resting place of James Burton (Egyptologist) and resting place of Simon Cadell and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  { 
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/finalRestingPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/James_Burton_(Egyptologist)> AS ?person)
  }
  UNION
  { 
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/finalRestingPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Simon_Cadell> AS ?person)
  }
  UNION
  {
    ?awardee <http://dbpedia.org/property/orderOfStMichaelAndStGeorge> ""Knight Grand Cross"" .
    ?awardee <http://dbpedia.org/ontology/finalRestingPlace> ?restingPlace .
    BIND(?awardee AS ?person)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,40,test,Give me the person decedent at the work of the author of French Algeria and person decedent at Algiers and commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
# Step 1: Find author of ""French Algeria"" and person decedent at work's location
SELECT ?author ?decedentAtWork WHERE {
  <http://dbpedia.org/resource/French_Algeria_(book)> <http://purl.org/dc/terms/creator> ?author .
  ?work <http://dbpedia.org/ontology/author> ?author .
  ?work <http://dbpedia.org/ontology/deathPlace> ?location .
  ?decedent <http://dbpedia.org/ontology/deathPlace> ?location .
}

# Step 2: Find person decedent in Algiers
SELECT ?decedentInAlgiers WHERE {
  ?decedentInAlgiers <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
}

# Step 3: Find commander in Franco-Hova Wars
SELECT ?commander WHERE {
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  ?war <http://www.w3.org/2000/01/rdf-schema#label> ""Franco-Hova Wars""@en .
}

# Final intersection of results from the above queries
SELECT DISTINCT ?person WHERE {
  VALUES ?person { ?decedentAtWork ?decedentInAlgiers ?commander }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
54,66,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
SELECT ?predecessor WHERE {
  # Step 1: Identify Soe Min Wimala Dewi's father
  ?soeminwimaladewi <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Find the children of Soe Min Wimala Dewi's father
  ?father <http://dbpedia.org/ontology/child> ?narapatiChild .

  # Step 3: Determine Narapati I of Ava's child who is also a child of the person identified in step 2
  <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?narapatiChild .
  
  # Step 4: Identify Thihapate of Mohnyin and find his reference
  ?thihapateReference <http://dbpedia.org/ontology/reference> ?thihapateOfMohnyin .
  ?thihapateOfMohnyin <http://www.w3.org/2000/01/rdf-schema#label> ""Thihapate of Mohnyin""@en .

  # Step 5: Find the children of this reference, ensuring they are office holders and royalty
  ?thihapateReference <http://dbpedia.org/ontology/child> ?royalOfficeHolder .
  ?royalOfficeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
                      <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  
  # Step 6: Determine the predecessor of these children
  ?royalOfficeHolder <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
92,50,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
SELECT DISTINCT ?musicalArtist ?band WHERE {
  # Part 1: Find the musical artist of the actor from ""Return to Nuke 'Em High Volume 1""
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?actor <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?actor <http://dbpedia.org/ontology/associatedMusicalArtist> ?musicalArtist .

  # Part 2: Find the band of Joseph Michael Furney
  <http://dbpedia.org/resource/Joseph_Michael_Furney> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?furneyBand <http://dbpedia.org/property/band> <http://dbpedia.org/resource/Joseph_Michael_Furney> .
  ?furneyBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .

  BIND(?furneyBand AS ?band)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
54,27,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?predecessor WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?child <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
314,25,test,Give me the awardee of the award of Sergei Makovetsky and commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/restingPlace> ?v3 . ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v3 . },"```sparql
SELECT ?person WHERE {
  # Find awards associated with Sergei Makovetsky
  ?award <http://dbpedia.org/ontology/recipient> ?person .
  ?award <http://dbpedia.org/property/awardedTo> <http://dbpedia.org/resource/Sergei_Makovetsky> .

  # Find commanders in the Spanish Civil War
  ?person <http://dbpedia.org/ontology/commander> ?battle .
  ?battle <http://www.w3.org/2000/01/rdf-schema#label> ""Spanish Civil War""@en .

  # Find persons deceased at the headquarter of House of Sombrerete
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/House_of_Sombrerete> .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
767,60,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
SELECT ?settlement WHERE {
  # Step 1: Find the writer of ""Where It's At"" (Dustin Lynch album)
  <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://purl.org/dc/terms/creator> ?writer .

  # Step 2: Find a settlement in the administration related to this writer
  ?writer <http://dbpedia.org/ontology/administrativeOffice> ?office .
  ?office <http://dbpedia.org/ontology/location> ?settlement .
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 3: Identify the alter ego of Matthew Burland
  <http://dbpedia.org/resource/Matthew_Burland> <http://dbpedia.org/ontology/fictionalAlterEgo> ?fictionalCharacter .
  ?fictionalCharacter <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .

  # Step 4: Reference the fictional character in relation to the settlement
  FILTER(?settlement = ?office) # Assuming a direct reference is needed
}
```",6,8,7,3,2,3,3,71,0,0,8,0,0.0,0
547,59,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of the show with Emily Richard.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
# Part 1: Resting place of the child of the child of William Haliburton
SELECT ?grandchildRestingPlace WHERE {
  ?parent <http://dbpedia.org/ontology/birth> ?child .
  ?child <http://dbpedia.org/ontology/birth> ?grandchild .
  ?grandchild <http://dbpedia.org/ontology/deathPlace> ?grandchildDeathPlace .
  OPTIONAL { ?grandchildDeathPlace <http://dbpedia.org/ontology/place> ?grandchildRestingPlace . }
  FILTER(?parent = <http://dbpedia.org/resource/William_Haliburton>)
}

UNION

# Part 2: Resting place of the actor of the show with Emily Richard
SELECT ?actorRestingPlace WHERE {
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> .
  ?show <http://dbpedia.org/ontology/starring> ?actor .
  OPTIONAL { ?actor <http://dbpedia.org/ontology/deathPlace> ?actorDeathPlace . }
  OPTIONAL { ?actorDeathPlace <http://dbpedia.org/ontology/place> ?actorRestingPlace . }
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
251,27,test,"Give me the death place of the author of The Twelve Abbots of Challant and administration of the ruling party, that is a political party and an organisation, in Sicily and location of Battle of Marengo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
# Step 1: Get the author's death place
SELECT ?deathPlace WHERE {
  ?book <http://dbpedia.org/ontology/bookAuthor> ?author .
  ?book rdfs:label ""The Twelve Abbots of Challant""@en .
  ?author <http://dbpedia.org/property/deathPlace> ?deathPlace .
}

UNION

# Step 2: Get the ruling party in Sicily
SELECT ?party WHERE {
  ?region <http://dbpedia.org/ontology/rulingParty> ?party .
  ?region rdfs:label ""Sicily""@en .
  ?party a <http://dbpedia.org/ontology/PoliticalParty> ;
         a <http://dbpedia.org/ontology/Organisation> .
}

UNION

# Step 3: Get the location of the Battle of Marengo
SELECT ?location WHERE {
  <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/property/location> ?location .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
747,20,test,Give me the person born on 1985-04-29 and band of the writer of Apollo (Hardwell song).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query to find a person born on 1985-04-29
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
}

UNION

# Query to find the band of the writer of Apollo (Hardwell song)
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/ontology/writtenBy> ?writer .
  ?writer <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
712,17,test,Give me the capital of South Russia (1919–1920) and resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
# Part 1: Capital of South Russia (1919–1920)
SELECT ?capital WHERE {
  <http://dbpedia.org/resource/South_Russia_(1919%E2%80%931920)> <http://dbpedia.org/ontology/administrativeCapital> ?capital .
}

UNION

# Part 2: Resting place of the awardee of a show in the Soviet Union
SELECT ?restingPlace WHERE {
  ?show <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Soviet_Union> ;
        <http://dbpedia.org/ontology/awardee> ?awardee .
  ?awardee <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
16,56,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as Ted Martin McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?person WHERE {
  # Step 1: Find an alumnus of Ohio State University
  ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/OHIO_State_University> .
  
  # Step 2: Find the spouse of Ted Martin McGinley
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
  
  # Step 3: Ensure this spouse is a professional actress
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actress> .
  
  # Step 4: Match the alumnus with the spouse found in step 2 and 3
  ?alumnus <http://dbpedia.org/ontology/spouse> ?spouse .
  
  # Get the birth name of the alumnus
  ?alumnus <http://dbpedia.org/ontology/birthName> ?birthName .

  # Return the person (alumnus) who matches all criteria
  BIND(?alumnus AS ?person)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
959,54,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
SELECT ?member WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?leader <http://dbpedia.org/ontology/politician> _:a .
  ?election <http://dbpedia.org/property/electionLeader> ?leader .
  ?election <http://dbpedia.org/property/electionDate> ""2010""^^xsd:year .

  # Step 2: Determine the country of residence for this leader
  ?leader <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 3: Find Eiji Ōtsuka's alma mater
  <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> ;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
  ?almaMater <http://dbpedia.org/property/country> ""Japan"" .

  # Step 4: Identify members of this alma mater
  ?member <http://dbpedia.org/ontology/alumniOf> ?almaMater .

  # Step 5: Combine conditions to find the member native to the leader's country
  ?member <http://dbpedia.org/ontology/nationality> ?residence .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
801,47,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
SELECT ?producer WHERE {
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Rapper> .
  ?person <http://dbpedia.org/ontology/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
  ?work <http://dbpedia.org/ontology/workOf> ?person ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> , <http://dbpedia.org/ontology/Song> .
  ?work <http://dbpedia.org/ontology/producer> ?producer .
}
```",5,9,6,3,2,3,3,71,0,0,473,0,0.0,0
488,70,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of the commander in Boshin War and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT DISTINCT ?admin ?birthPlace ?deathPlace WHERE {
  # Step 1: Tokugawa Masako's spouse who is royalty
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Father of the spouse and his administration
  ?father <http://dbpedia.org/ontology/father> ?spouse .
  ?father <http://dbpedia.org/ontology/administration> ?admin .

  # Step 3: Commander in Boshin War's birth place
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Boshin_War> .
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 4: Matsudaira Tadamasa's father who is an office holder
  ?officeHolderFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Matsudaira_Tadamasa> .
  ?officeHolderFather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .

  # Step 5: Father's father who is a politician and his death place
  ?politicianGrandfather <http://dbpedia.org/ontology/father> ?officeHolderFather .
  ?politicianGrandfather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?politicianGrandfather <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
285,16,test,Give me the parent of the child of Tina Onassis Niarchos and spouse of the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Tina_Onassis_Niarchos> .
  ?child <http://dbpedia.org/ontology/father> ?father .
  ?child <http://dbpedia.org/ontology/mother> ?mother .
  OPTIONAL { ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?parentType . FILTER(?parentType = <http://dbpedia.org/ontology/Human>) }
  OPTIONAL { ?mother <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?parentType . FILTER(?parentType = <http://dbpedia.org/ontology/Human>) }
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
659,70,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Find the war involving Arthur Wellesley as a commander
  ?war <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
  
  # Step 2: Identify the force related to Rutger Jan Schimmelpenninck that is an event and a military conflict
  ?force <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  
  FILTER (?type = <http://dbpedia.org/ontology/SocietalEvent> && 
          ?type = <http://dbpedia.org/ontology/Event> &&
          ?type = <http://dbpedia.org/ontology/MilitaryConflict>)
  
  # Step 3: Find the figure known as 'Polish Horse'
  ?figure <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?unitType .
  FILTER (?unitType = <http://dbpedia.org/ontology/MilitaryUnit> || 
          ?unitType = <http://dbpedia.org/ontology/Organisation>)
  
  # Step 4: Find the military force associated with 'Polish Horse'
  ?figure rdfs:label ""Polish Horse""@en .
  ?force <http://dbpedia.org/property/militaryForce> ?militaryForce .
}
```",8,15,9,3,3,3,3,71,0,0,15,0,0.0,0
328,59,test,Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?commander WHERE {
  # Step 1: Identify the person who died in Budapest
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
  
  # Step 2: Find out which force this person was a commander of
  ?person <http://dbpedia.org/ontology/commanderOf> ?force .
  
  # Step 3: Determine the award received by this commander for their role in the Volcano and Ryukyu Islands campaign
  ?commanderAward <http://dbpedia.org/property/awardee> ?person ;
                  <http://dbpedia.org/ontology/campaign> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .
  
  # Ensure the commander is the same person identified in step 1
  BIND(?person AS ?commander)
}
```",6,6,7,3,2,3,3,71,0,0,15,0,0.0,0
54,64,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?child WHERE {
  # Step 1: Find Thinkhaya's child
  ?thinkhayaChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  
  # Step 2: Find the predecessor of Thinkhaya's child (successor of Thinkhaya)
  ?predecessor <http://dbpedia.org/ontology/successor> ?thinkhayaChild .

  # Step 3: Find an office holder and royalty related to Thihapate of Mohnyin
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Royalty> .
  ?officeHolder <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .

  # Step 4: Find the parent of Thado Minsaw of Prome
  ?parent <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
  
  # Step 5: Ensure the office holder is also this parent
  FILTER(?officeHolder = ?parent)

  # Step 6: Find the child of this office holder and royalty
  ?child <http://dbpedia.org/ontology/father> ?officeHolder .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
232,61,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/residence> ?v3 . }","```sparql
SELECT ?finalNative WHERE {
  # Step 1: Identify the professional who is an actor, narrator, and producer
  ?professional <http://dbpedia.org/ontology/profession> ?role .
  FILTER(?role IN (<http://dbpedia.org/resource/Actor>, <http://dbpedia.org/resource/Narrator>, <http://dbpedia.org/resource/Producer>)).
  
  # Step 2: Find their claim to fame that includes a film and a military conflict
  ?professional <http://dbpedia.org/ontology/film> ?film .
  ?professional <http://dbpedia.org/ontology/militaryConflict> ?conflict .

  # Step 3: Determine the actor associated with both France and the identified military conflict
  ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
  ?actor <http://dbpedia.org/ontology/militaryConflict> ?conflict .

  # Step 4: Locate the native of this actor who is also a politician and office holder
  ?native <http://dbpedia.org/ontology/nationality> ?actor .
  ?native <http://dbpedia.org/ontology/politician> true .
  ?native <http://dbpedia.org/ontology/officeHolder> true .

  # Step 5: Find the residence of this native which is a settlement and British
  ?native <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 6: Identify the native of this residence
  ?finalNative <http://dbpedia.org/ontology/nationality> ?residence .
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
184,45,test,Give me the parent of Géza von Habsburg and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
# Part 1: Parent of Géza von Habsburg
SELECT ?parentGéza WHERE {
  <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/parent> ?parentGéza .
}

UNION

# Part 2 and 3: Child of the Parent of Archduchess Margaret of Austria (born 1925) and Child of Archduke Joseph August of Austria
SELECT DISTINCT ?commonParent WHERE {
  
  # Step 2: Find children of parents of Archduchess Margaret of Austria
  <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> <http://dbpedia.org/ontology/parent> ?parentMargaret .
  ?childMargaret <http://dbpedia.org/ontology/parent> ?parentMargaret .

  # Step 3: Find children of Archduke Joseph August
  <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?childJosephAugust .

  # Step 4: Find common parent(s) between the children from steps 2 and 3
  ?commonParent <http://dbpedia.org/ontology/parent> ?childMargaret .
  ?commonParent <http://dbpedia.org/ontology/parent> ?childJosephAugust .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
747,58,test,Give me the person born on 1985-04-29 and band of the writer of Apollo (Hardwell song) and band of the person born as the persona of Shèna.,"SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?personBornOn1985 ?bandOfApolloWriter ?bandOfShenaPersona WHERE {
  # Part 1: Person born on 1985-04-29
  ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^xsd:date .
  BIND(?person AS ?personBornOn1985)

  # Part 2: Band of the writer of Apollo (Hardwell song)
  ?apolloSong <http://purl.org/dc/terms/creator> ?writer .
  ?bandOfWriter <http://dbpedia.org/ontology/member> ?writer .
  FILTER(STRSTARTS(STR(?apolloSong), ""Apollo""))
  BIND(?bandOfWriter AS ?bandOfApolloWriter)

  # Part 3: Band of the persona of Shèna
  ?shenaPersona <http://www.w3.org/2000/01/rdf-schema#label> ""Shèna"" .
  ?bandOfShena <http://dbpedia.org/ontology/member> ?shenaPersona .
  BIND(?bandOfShena AS ?bandOfShenaPersona)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,60,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Identify Tokugawa Masako's spouse who is royalty
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Determine the father of that spouse
  ?spouse <http://dbpedia.org/property/father> ?father .

  # Step 3: Find out which administration the father was part of
  ?father <http://dbpedia.org/property/administration> ?administration .

  # Step 4: Identify Saitō Hajime and find a war he participated in that qualifies as a military conflict, an event, and a societal event
  <http://dbpedia.org/resource/Sait%C5%8D_Hajime> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type = <http://dbpedia.org/ontology/MilitaryConflict> && 
          ?type = <http://dbpedia.org/ontology/Event> &&
          ?type = <http://dbpedia.org/ontology/SocietalEvent>) .

  # Step 5: Locate the commander involved in this specific war
  ?war <http://dbpedia.org/ontology/commander> ?commander .

  # Step 6: Determine the birthplace of this commander
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
54,24,test,Give me the parent of the child of Narapati I of Ava and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify the child of Narapati I of Ava
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> .
  
  # Step 2: Determine predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
  
  # Step 3: Find the parent of the child that matches the predecessor
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?predecessor .
  ?parent <http://dbpedia.org/ontology/father> ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
328,56,test,"Give me the commander in Eastern Front (World War II) and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?commander WHERE {
  # Step 1: Find commanders in Eastern Front (World War II)
  ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
  ?battle <http://dbpedia.org/ontology/commander> ?commander .

  # Step 2: Find awardees of Bruce Fraser, 1st Baron Fraser of North Cape
  ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .

  # Step 3: Find leaders of government agencies that are office holders and politicians
  ?agency <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?leader <http://dbpedia.org/ontology/officeHolder> ?position .
  ?position <http://dbpedia.org/ontology/office> ?agency .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 4: Specifically identify Gustav Jonson as a leader
  ?gustavJonson <http://dbpedia.org/ontology/leader> ?agency .
  FILTER(?gustavJonson = <http://dbpedia.org/resource/Gustav_Jonson>) .

  # Find overlap among these groups
  FILTER(?commander = ?awardee && ?commander = ?gustavJonson)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
534,17,test,"Give me the birth place of Garret FitzGerald and headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/owner> ?v3 . ?v3 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. },"```sparql
SELECT ?birthPlace ?headquarters WHERE {
  # Step 1: Find Garret FitzGerald's birthplace
  <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 2: Identify the venue of the 2012 Pro12 Grand Final that is a venue and an architectural structure
  ?venue <http://dbpedia.org/property/location> <http://dbpedia.org/resource/2012_Pro12_Grand_Final> .
  ?venue <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue> .
  ?venue <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure> .

  # Step 3: Determine the owner of the venue
  ?venue <http://dbpedia.org/property/owner> ?owner .

  # Step 4: Find the headquarters of the owner
  ?owner <http://dbpedia.org/ontology/headquarters> ?headquarters .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
659,65,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?commander WHERE {
  # Step 1: Identify the 'Polish Horse' unit
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?polishHorse rdfs:label ""Polish Horse""@en .

  # Step 2: Find the war involving 'Polish Horse' under Arthur Wellesley
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?polishHorse <http://dbpedia.org/ontology/participatedIn> ?war .
  ?wellesley rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
  ?wellesley <http://dbpedia.org/ontology/commander> ?war .

  # Step 3: Identify the force associated with Rutger Jan Schimmelpenninck
  ?schimmelpenninck rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?schimmelpenninck <http://dbpedia.org/ontology/commander> ?force .

  # Step 4: Find the commander common to both war and force
  ?commander <http://dbpedia.org/ontology/commander> ?war .
  ?commander <http://dbpedia.org/ontology/commander> ?force .
}
```",7,14,8,3,3,3,3,71,0,0,15,0,0.0,0
994,59,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find Fredrik Thordendal's band that is an organization
  <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/member> ?band .
  FILTER(?band <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Musician/Band/Organization>) .

  # Step 2: Find band members that are bands, groups, and organizations
  ?member <http://dbpedia.org/ontology/member> ?band .
  FILTER(?member <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Musician/Band/Group/Organization>) .

  # Step 3: Find associated musical artists of these members
  ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .

  # Step 4: Check for reference to Watchtower in the context of these artists
  ?artist <http://dbpedia.org/property/reference> ?reference .
  FILTER(CONTAINS(LCASE(?reference), ""watchtower"")) .

  # Step 5: Find associated musical artist of this artist
  ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalArtist .
}
```",6,10,7,3,2,3,3,71,0,0,5,0,0.0,0
712,20,test,"Give me the resting place of the awardee of the show of Soviet Union and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
# Step 1: Find the military force involved in Vyoshenskaya Uprising
SELECT ?militaryForce WHERE {
  <http://dbpedia.org/resource/Vyoshenskaya_Uprising> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?militaryForce a <http://dbpedia.org/ontology/Organisation> ;
                 a <http://dbpedia.org/ontology/MilitaryUnit> .
}

# Step 2: Determine the country of this military force
SELECT ?country WHERE {
  ?militaryForce <http://dbpedia.org/ontology/country> ?country .
}

# Step 3: Find the capital city of that country
SELECT ?capital WHERE {
  ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital .
}

# Step 4: Locate shows associated with the Soviet Union in this capital city
SELECT ?show WHERE {
  ?show <http://dbpedia.org/ontology/showLocation> ?capital ;
        <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Soviet_Union> .
}

# Step 5: Identify awardees from these shows
SELECT ?awardee WHERE {
  ?show <http://dbpedia.org/ontology/awardRecipient> ?awardee .
}

# Step 6: Find the resting places of these awardees
SELECT DISTINCT ?restingPlace WHERE {
  ?awardee <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
435,28,test,"Give me the work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v5 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
SELECT ?work ?region ?territory WHERE {
  # Step 1: Find the author of ""Iceland""
  <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/ontology/author> ?author .

  # Step 2: Determine works by this author
  ?author <http://purl.org/dc/terms/creator> ?work .

  # Step 3: Identify the time zone in Bombali Shebora Chiefdom and its region
  <http://dbpedia.org/resource/Bombali_Shebora_Cheifdom> <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?timeZone <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?region .

  # Step 4: Find the territory administered from ""Land of fire and ice""
  <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/ontology/administrativeUnit> ?territory .
  
  # Step 5: Filter by specific types
  FILTER (?region <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/ontology/Region>)
  FILTER (?territory <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Settlement> <http://dbpedia.org/ontology/Town>) && ?territory <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>)
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
534,18,test,"Give me the birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex and headquarter of the owner of RDS Arena.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v3 <http://dbpedia.org/ontology/headquarter> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Identify the native politician of Essex
  ?politician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> ;
              <http://dbpedia.org/ontology/placeOfBirth> ?essexLocation .
  ?essexLocation <http://www.w3.org/2000/01/rdf-schema#label> ""Essex"" .

  # Step 2: Find the owner of RDS Arena and its headquarters
  <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?owner .
  ?owner <http://dbpedia.org/ontology/headquarters> ?headquarters .

  # Step 3: Find a child who is both a politician and an office holder of the identified native politician
  ?politician <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
         <http://dbpedia.org/ontology/officeHolder> ?office .

  # Step 4: Retrieve the birthplace of this child
  ?child <http://dbpedia.org/ontology/placeOfBirth> ?birthPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
339,18,test,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?father WHERE {
  # Step 1: Find predecessor of Frederick VIII of Denmark
  <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> <http://dbpedia.org/ontology/predecessor> ?predecessor .

  # Step 2: Find children of the predecessor
  ?predecessor <http://dbpedia.org/ontology/child> ?child1 .

  # Step 3: Check if these children are also children of Grand Duchess Elena Vladimirovna of Russia
  <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?child1 .

  # Step 4: Find the father of these identified individuals
  ?child1 <http://dbpedia.org/ontology/father> ?father .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
666,20,test,"Give me the figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England and player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/property/nickname> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
SELECT ?nickname WHERE {
  # Step 1: Find the team season managed by Leonid Slutsky
  ?teamSeason <http://dbpedia.org/ontology/team> ?team ;
               <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Lenid_Slutskiy> .
  
  # Ensure it's a soccer club and sports team
  ?team <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam> .

  # Step 2: Find the player associated with this manager
  ?player <http://dbpedia.org/property/team> ?team .
  
  # Step 3: Identify the organization linked to England, that is a soccer club and sports club
  ?org <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> ;
       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam> .
  ?org <http://dbpedia.org/property/country> <http://dbpedia.org/resource/England> .

  # Ensure the player is linked to this organization
  ?player <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> ;
          <http://dbpedia.org/property/team> ?org .

  # Step 4: Find the nickname of this organization
  ?org <http://dbpedia.org/ontology/nickName> ?nickname .
}
```",6,12,7,3,2,3,2,20,0,0,2,0,0.0,0
16,67,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
# Find the actor of ""Unnatural"" (TV series)
SELECT ?unnaturalActor WHERE {
  <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/starring> ?unnaturalActor .
}

# Find the spouse of Ted McGinley
SELECT ?tedSpouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/spouse> ?tedSpouse .
}

# Find a person born with a specific birth name among Ohio State University alumni
SELECT ?osuAlumnus WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> ;
           <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Find the professional in the profession of these three individuals
SELECT DISTINCT ?professional WHERE {
  VALUES (?person) { ?unnaturalActor ?tedSpouse ?osuAlumnus }
  
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  ?professional <http://dbpedia.org/ontology/profession> ?profession .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,52,test,"Give me the war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query for the war of the commander in Peninsular War and his claim to fame
SELECT ?war ?claimToFame WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?war .
    FILTER(?war != <http://dbpedia.org/resource/Peninsular_War>)
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
  }
}

# Query for the war of the person born as Carl Pontus Gahn
SELECT ?war WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Carl Pontus Gahn""@en .
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  FILTER(?birthName = ""Carl Pontus Gahn"")
  
  ?person <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
328,60,test,"Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?awardee WHERE {
  # Step 1: Identify Gustav Jonson's leadership role in a government agency.
  <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/officeHolder> ?office .
  
  # Step 2: Determine the leader of that office who is both an office holder and a politician.
  ?office <http://dbpedia.org/ontology/leader> ?leader .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
           <http://dbpedia.org/ontology/politician> true .

  # Step 3: Find out which campaign (Volcano and Ryukyu Islands) this leader commanded.
  ?leader <http://dbpedia.org/ontology/commander> ?campaign .
  FILTER(?campaign = <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign>) .

  # Step 4: Identify any awards associated with this campaign.
  ?campaign <http://dbpedia.org/ontology/awards> ?award .

  # Step 5: Determine the awardee(s) of those awards.
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
391,60,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Step 1: Find the nickname for Jackson, Tennessee
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/nickName> ?nickname .
}

# Step 2: Identify movies that are both works and television shows
SELECT DISTINCT ?movie WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> ;
         <http://dbpedia.org/ontology/work> ?work .
  ?movie <http://dbpedia.org/ontology/tvSeries> ?tvShow .
}

# Step 3: Find actors of these movies and their birthplaces
SELECT DISTINCT ?actor ?native WHERE {
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/ontology/birthPlace> ?native .
}
```

Note: This query is broken down into steps for clarity. In practice, you would combine these queries to filter and match the specific actor whose birthplace matches the nickname's associated figure.",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
184,46,test,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of Archduke Joseph Karl of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find children of Archduke Joseph Karl of Austria
  ?child1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
  
  # Step 2: Find grandchildren (children of the child)
  ?grandchild <http://dbpedia.org/ontology/child> ?child1 .

  # Step 3 & 4: Find landmarks at elevation 96.0 that are settlements
  ?landmark <http://dbpedia.org/ontology/elevation> ""96.0""^^xsd:float ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 5: Find natives of these settlements
  ?native <http://dbpedia.org/ontology/nativePlace> ?landmark .

  # Step 6: Find the parent of these natives
  ?native <http://dbpedia.org/ontology/parent> ?parent .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,53,test,Give me the spouse of the father of Merneptah and parent of Henuttawy (19th dynasty) and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Step 1: Find Merneptah's father
SELECT ?merneptahFather WHERE {
  <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/ontology/father> ?merneptahFather .
}

# Step 2: Find the spouse of Merneptah's father who is also a parent of Henuttawy (19th dynasty)
SELECT ?spouse WHERE {
  ?merneptahFather <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> .
}

# Step 3: Determine the child of Amun-her-khepeshef's spouse
SELECT ?amunChild WHERE {
  <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?spouse2 .
  ?spouse2 <http://dbpedia.org/ontology/child> ?amunChild .
}

# Step 4: Find the spouse of the person identified in step 2 who is also a parent of the individual from step 3
SELECT DISTINCT ?finalSpouse WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> ?finalSpouse .
  ?finalSpouse <http://dbpedia.org/ontology/child> ?amunChild .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,46,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
# Step 1: Find Yūki Hideyasu's father who is a politician
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Y%C5%ABki_Hideyasu> <http://xmlns.com/foaf/0.1/family_name> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}

# Step 2: Get the death place of this father
SELECT ?deathPlace WHERE {
  ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}

# Step 3: Identify Saitō Hajime and find the war he commanded
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Sait%C5%8D_Hajime> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
}

# Step 4: Find the birthplace of the commander in that war
SELECT ?birthPlace WHERE {
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
659,35,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?force WHERE {
  # Find forces associated with Rutger Jan Schimmelpenninck
  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/ontology/commander> ?force .
  
  # Find forces associated with Arthur Wellesley, 1st Duke of Wellington
  <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/commander> ?force .

  # Ensure the force is a societal event, an event, and a military conflict
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",4,7,5,2,2,3,3,71,0,0,38,0,0.0,0
659,48,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?commander WHERE {
  # Step 1: Find Rutger Jan Schimmelpenninck's native place
  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/ontology/birthPlace> ?nativePlace .

  # Step 2: Check if the native place is associated with an office holder
  ?nativePlace <http://dbpedia.org/ontology/officeHolder> ?officeHolder .
  
  # Step 3: Find military force related to Kingdom of Ireland involving this office holder
  ?militaryForce <http://dbpedia.org/property/member> ?officeHolder ;
                 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Kingdom_of_Ireland> .

  # Step 4: Identify societal events and military conflicts related to this force
  ?event <http://dbpedia.org/ontology/involvesMilitaryForce> ?militaryForce ;
         a <http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 5: Find the commander involved in these forces
  ?event <http://dbpedia.org/ontology/commander> ?commander .
}
```",5,9,6,3,2,3,3,71,0,0,40,0,0.0,0
64,8,test,"Give me the alma mater of Jovan Hristić and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Query 1: Alma Mater of Jovan Hristić
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

UNION

# Query 2: Entity in the Region of Central European Time that is a Country
SELECT ?country WHERE {
  ?region <http://www.w3.org/2000/01/rdf-schema#label> ""Central European Time"" .
  ?region <http://dbpedia.org/ontology/country> ?country .
  ?country <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
232,41,test,"Give me the native of London and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
# Step 1: Find Sean Pertwee's claims to fame that are both films and military conflicts.
SELECT ?claimToFame WHERE {
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 2: Identify the child of John Devon Roland Pertwee (Sean Pertwee).
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Jonathan_Pertwee> <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .
  <http://dbpedia.org/resource/Jonathan_Pertwee> <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Sean_Pertwee> .
}

# Step 3: Find a person who is native to London, an actor, and associated with the claim to fame.
SELECT ?person WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> .
  ?person <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
  FILTER(?claimToFame IN ({?claimToFame})) # Use the result from Step 1
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
92,62,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band of Joseph Michael and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v6 <http://dbpedia.org/property/birthName> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Step 1: Identify the actor who is also an artist for ""Return to Nuke 'Em High Volume 1""
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 2: Find the band associated with Joseph Michael where this person is a member
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/member> ?band .
  ?band <http://dbpedia.org/property/bandMember> <http://dbpedia.org/resource/Joseph_Michael> .
}

# Step 3: Determine the reference to ""Nevermore (2006)"" related to this band or member
SELECT ?reference WHERE {
  ?band <http://dbpedia.org/ontology/reference> ?reference .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Nevermore_(2006_film)> .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
959,25,test,Give me the native of Japan and manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
SELECT ?manager WHERE {
  ?team <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Takashi_Sekizuka> .
  ?team <http://dbpedia.org/ontology/manager> ?manager .
  ?manager <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Japan> .
}
```",3,3,4,2,2,3,3,71,0,0,6,0,0.0,0
427,61,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
# Query 1: Party of the person born with Romano Prodi's birth name who is an office holder and politician
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://xmlns.com/foaf/0.1/birthName> ?birthName .
  ?person <http://xmlns.com/foaf/0.1/birthName> ?birthName .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/property/politicalParty> ?party .
}

UNION

# Query 2: Party of the father of an alumnus from MIT
SELECT ?fatherParty WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?alumnus <http://xmlns.com/foaf/0.1/familyName> ?familyName .
  ?father <http://xmlns.com/foaf/0.1/name> ?familyName ;
          <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  OPTIONAL { ?father <http://dbpedia.org/property/politicalParty> ?fatherParty . }
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
626,18,test,"Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Step 1: Find the award received by Aleksey Petrovich Yermolov
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/ontology/receivedAward> ?award .
}

# Step 2: Identify the commander in the Battle of Paris (1814)
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 3: Find military conflicts commanded by this commander
SELECT DISTINCT ?conflict WHERE {
  ?commander <http://dbpedia.org/ontology/battleCommanded> ?conflict .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 4: Find common awardees
SELECT DISTINCT ?commonAwardee WHERE {
  # Awardees of Aleksey Petrovich Yermolov's award
  ?award <http://dbpedia.org/ontology/receivedAward> ?commonAwardee .
  
  # Awardees related to the commander from Battle of Paris (1814)
  ?conflict <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/receivedAward> ?commonAwardee .
}
```",5,6,6,3,2,3,2,20,0,0,23,0,0.0,0
959,48,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of Takashi Sekizuka.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . }","```sparql
SELECT ?member WHERE {
  # Step 1: Find the person born in 1958 who is a manager of Takashi Sekizuka's team
  ?person <http://dbpedia.org/ontology/birthYear> ""1958"" .
  ?person <http://dbpedia.org/ontology/manager> ?team .
  ?team <http://dbpedia.org/property/teamMember> <http://dbpedia.org/resource/Takashi_Sekizuka> .

  # Step 2: Find the alma mater of this person
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  
  # Ensure the alma mater is Japanese, an organization, a university, and an educational institution
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> ;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> ;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
  ?almaMater <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .

  # Step 3: Find members of this alma mater
  ?member <http://dbpedia.org/ontology/alumniOf> ?almaMater .
}
```",5,9,6,3,2,3,3,71,0,0,3,0,0.0,0
754,20,test,Give me the parent of the child of the reference to Ram Khamhaeng the Great and parent of the parent of the parent of Min Linka.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
SELECT ?parentOfChildOfReference, ?grandGrandParentOfMinLinka WHERE {
  # Step 1: Find reference to Ram Khamhaeng the Great
  ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> .
  
  # Step 2: Identify child of this reference
  ?reference <http://dbpedia.org/ontology/child> ?childOfReference .

  # Step 3: Determine the parent of this child
  ?childOfReference <http://dbpedia.org/ontology/parent> ?parentOfChildOfReference .
  
  # Step 4: Find Min Linka and trace back three generations
  <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?minLinkaParent .
  ?minLinkaParent <http://dbpedia.org/ontology/parent> ?secondGenerationParent .
  ?secondGenerationParent <http://dbpedia.org/ontology/parent> ?grandGrandParentOfMinLinka .

  # Step 5: Identify the parent of the entity found in step 3
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
528,62,test,"Give me the force of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile and war of the commander in the work of --01-09.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
# Step 1: Find Narciso Campero's military force
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryForce> ?force .
}

# Step 2: Find wars of the military force that are societal events
SELECT DISTINCT ?war WHERE {
  ?force <http://dbpedia.org/property/war> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
}

# Step 3: Find wars involving a military force related to Chile
SELECT DISTINCT ?chileWar WHERE {
  ?forceChile <http://dbpedia.org/property/war> ?chileWar .
  ?forceChile <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Chile> .
}

# Step 4: Find the commander's war from a work dated --01-09
SELECT DISTINCT ?commanderWar WHERE {
  ?entity <http://purl.org/dc/terms/date> ""----01-09""^^xsd:date .
  ?entity <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/war> ?commanderWar .
}
```

Note: This query is split into parts due to the complexity and potential lack of direct links in DBpedia. Each part addresses a specific sub-question, and combining results may require additional processing outside SPARQL.",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
767,70,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v7 <http://dbpedia.org/property/governor> ?v0 . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v4 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/state> ?v4 . }","```sparql
SELECT ?settlement WHERE {
  # Step 1: Find Matthew Burland's alter ego (fictional character)
  ?burland <http://dbpedia.org/ontology/alterEgo> ?fictionalCharacter .
  
  # Step 2: Identify George Kilbon Nash's alma mater
  <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/property/almaMater> ?almaMater .

  # Step 3: Find a settlement in Green's administration linked to both the fictional character and the alma mater
  ?green <http://dbpedia.org/ontology/administration> ?settlement .
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Linking fictional character and alma mater to the settlement
  ?fictionalCharacter <http://dbpedia.org/property/referenceTo> ?settlement .
  ?almaMater <http://dbpedia.org/property/administrationOf> ?settlement .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
392,25,test,"Give me the province of Schio and region of the time zone, that is a sports event, of Aguilar de Segarra and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
# Step 1: Find the province of Schio
SELECT ?province WHERE {
  <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?province .
}

# Step 2: Find the time zone for Aguilar de Segarra and its region
SELECT ?region WHERE {
  <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?timeZone <http://dbpedia.org/ontology/region> ?region .
}

# Step 3: Find sports events related to this region
SELECT ?sportsEvent WHERE {
  ?region <http://dbpedia.org/property/sportsEvents> ?sportsEvent .
  FILTER(?region = ?regionFromStep2)
}

# Step 4: Find the country in the CET region
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/country> ?country .
}
```

Note: The above queries are structured to be executed sequentially, with each step depending on the results of the previous one. In practice, these would need to be combined into a single query or handled programmatically to pass intermediate results between steps.",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
360,23,test,"Give me the reference to the author of Blinded by the Light and writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
SELECT ?reference WHERE {
  # Step 1: Identify the author of ""Blinded by the Light""
  ?blinded <http://dbpedia.org/ontology/author> ?author .
  
  # Step 2: Find the album written by Dave Flett
  ?album <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Dave_Flett> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalAlbum> .
  
  # Step 3: Ensure the author from step 1 is related to the album in some way
  ?album <http://dbpedia.org/property/relatedTo> ?author .

  # Retrieve the reference for this album
  ?album <http://www.w3.org/2002/07/owl#sameAs> ?reference .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
547,45,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Gerald_Graham> 
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> 
    <http://dbpedia.org/resource/Simon_Cadell>
  }
  ?person <http://dbpedia.org/ontology/finalRestingPlace> ?restingPlace .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
391,51,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
# Step 1: Find Michael Ballhaus's claim to fame that is a work.
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/claimToFame> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
}

# Step 2: Find actors associated with this work.
SELECT DISTINCT ?actor WHERE {
  ?work <http://dbpedia.org/ontology/actor> ?actor .
}

# Step 3: Identify movies that are classified as a movie, work, and television show.
SELECT ?movie WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
}

# Step 4: Determine the professional (actor) involved in these movies.
SELECT DISTINCT ?professional WHERE {
  ?movie <http://dbpedia.org/ontology/actor> ?professional .
}
```",5,9,6,3,2,3,3,71,0,0,11,0,0.0,0
391,59,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Determine the claim to fame of Sherry Hormann's spouse that is a work
SELECT ?work WHERE {
  ?spouse <http://dbpedia.org/ontology/claimToFame> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CreativeWork> .
}

# Step 3: Find out who acted in that particular work
SELECT ?actor WHERE {
  ?work <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 4: Identify the nickname for Jackson, Tennessee
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/property/nickName> ?nickname .
}

# Step 5: Find the native place associated with the actor identified in step 3
SELECT ?nativePlace WHERE {
  ?actor <http://dbpedia.org/ontology/birthPlace> ?nativePlace .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,66,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley and person born as the birth name of the alumnus of Ohio State University.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
SELECT ?professional WHERE {
  # Step 1: Find Satomi Ishihara's profession
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?profession .

  # Step 2: Find Ted Martin McGinley's spouse
  ?ted <http://www.w3.org/2000/01/rdf-schema#label> ""Ted Martin McGinley""@en .
  ?ted <http://dbpedia.org/property/birthName> ?birthName .
  ?ted <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 3: Find an Ohio State University alumnus and their birth name
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> .
  ?alumnus <http://www.w3.org/2000/01/rdf-schema#label> ?alumnusLabel .
  ?alumnus <http://dbpedia.org/property/birthName> ?birthName .

  # Step 4: Find the person with that birth name
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?personLabel .
  ?person <http://dbpedia.org/property/birthName> ?birthName .

  # Step 5: Check if there is a professional in Satomi Ishihara's profession who is also the spouse
  ?professional <http://dbpedia.org/ontology/profession> ?profession .
  ?professional <http://dbpedia.org/ontology/spouse> ?spouse .
  ?professional <http://dbpedia.org/ontology/spouse> ?person .

}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
421,22,test,Give me the native of the birthplace of Samir Bekrić and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
# Step 1: Find Samir Bekrić's birthplace
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Step 2: Identify natives of that birthplace
SELECT DISTINCT ?native WHERE {
  ?native <http://dbpedia.org/ontology/nationality> ?birthPlace .
}

# Step 3 and 4: Check if these natives are band members and find awards or nominations for those bands
SELECT DISTINCT ?native ?band ?award WHERE {
  ?native <http://dbpedia.org/ontology/memberOfBand> ?band .
  ?band <http://dbpedia.org/ontology/awardsReceived> ?award .
}
```

Note: This query assumes the existence of certain properties like `memberOfBand` and `awardsReceived`, which may need to be adjusted based on actual DBpedia schema. The query is structured in steps for clarity, but would typically be combined into a single SPARQL query with appropriate joins.",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
54,30,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?individual ?predecessor WHERE {
  ?individual <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?individual <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?individual <http://dbpedia.org/ontology/royalty> [] .
  ?individual <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  ?individual <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/offspring> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .

  ?individual <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
378,53,test,Give me the war of Joaquín Blake and claim to fame of the commander in Great Siege of Gibraltar and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
# Part 1: War of Joaquín Blake
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
          rdfs:label ?war .
}

UNION

# Part 2: Claim to Fame of Commander in Great Siege of Gibraltar
SELECT ?claimToFame WHERE {
  <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander rdfs:comment ?claimToFame .
}

UNION

# Part 3: War of Person Born as Carl Pontus Gahn
SELECT ?war WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Carl Pontus Gahn""@en ;
          <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
  ?person <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
          rdfs:label ?war .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
801,59,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v5 <http://dbpedia.org/property/writer> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
SELECT ?producer WHERE {
  ?trueSelf <http://dbpedia.org/ontology/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
  ?trueSelf <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(?profession IN (<http://dbpedia.org/resource/Rapper>, <http://dbpedia.org/resource/Musical_artist>)) .

  ?work <http://dbpedia.org/ontology/workOf> ?trueSelf ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?workType .
  FILTER(?workType IN (<http://dbpedia.org/ontology/MusicalWork>, <http://dbpedia.org/ontology/Song>, <http://dbpedia.org/ontology/Work>)) .

  ?work <http://dbpedia.org/ontology/producer> ?producer .
}
```",6,10,7,3,2,3,3,71,0,0,473,0,0.0,0
767,68,test,"Give me the reference to the alter ego of Black Hood and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . ?result <http://dbpedia.org/ontology/state> ?v4 . ?v7 <http://dbpedia.org/property/governor> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
SELECT ?alterEgo ?settlement WHERE {
  # Step 1: Find the alter ego of Black Hood
  ?blackHood <http://dbpedia.org/ontology/alterEgo> ?alterEgo .

  # Step 2: Identify the writer of ""Where It's At"" (Dustin Lynch album)
  ?album <http://purl.org/dc/terms/creator> ?writer .
  FILTER(STR(?album) = ""Where_It's_At_(Dustin_Lynch_album)"")

  # Step 3: Find the alma mater of the administration related to George Kilbon Nash
  ?nash <http://dbpedia.org/ontology/administration> ?administration .
  ?administration <http://dbpedia.org/property/almaMater> ?almaMater .

  # Step 4: Identify a settlement in the administration
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?administration <http://dbpedia.org/property/entityInAdministration> ?settlement .

  # Combine elements to find the reference
  FILTER(?alterEgo = ?writer || ?alterEgo = ?almaMater)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
801,66,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?producer WHERE {
  # Step 1: Find the album ""What U See Is What U Get"" and its writers
  <http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)> <http://purl.org/dc/terms/creator> ?writer .
  
  # Step 2: Ensure the writer is a musical artist
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Step 3: Find associated artists with an alter ego ""The Shadow""
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
  ?artist <http://www.w3.org/2000/01/rdf-schema#label> ""The Shadow""@en .
  
  # Step 4: Identify works that are songs and musical works by both 50 Cent and the writer
  ?work <http://dbpedia.org/ontology/work> ?writer ;
        <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/50_Cent> ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  
  # Step 5: Find the producer of this work
  ?work <http://dbpedia.org/property/producer> ?producer .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
378,32,test,Give me the war of the commander in Peninsular War and war of the person born as Carl Pontus Gahn.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
# Wars commanded by a commander in the Peninsular War
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?battle <http://dbpedia.org/property/name> ?war .
}

UNION

# Wars associated with Carl Pontus Gahn
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?person <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?person <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?battle <http://dbpedia.org/property/name> ?war .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
9,23,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . },"```sparql
SELECT ?almaMater WHERE {
  ?organization <http://www.w3.org/2000/01/rdf-schema#label> ""Belfast""@en .
  ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .

  ?mayor <http://dbpedia.org/ontology/mayorOf> ?organization ;
         <http://www.w3.org/2000/01/rdf-schema#label> ?mayorLabel .
  
  FILTER(CONTAINS(LCASE(?mayorLabel), ""mayor""))

  ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",3,5,4,3,1,3,3,71,0,0,10,0,0.0,0
328,53,test,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
SELECT ?person WHERE {
  # Condition 1: Commander in Eastern Front (World War II)
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .

  # Condition 2: Leader of a government agency office associated with Joseph Stalin
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?office <http://dbpedia.org/ontology/leader> ?person .
  ?office <http://dbpedia.org/property/associatedWith> <http://dbpedia.org/resource/Joseph_Stalin> .

  # Condition 3: Awardee in Volcano and Ryukyu Islands campaign
  ?campaign <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .
  ?person <http://dbpedia.org/ontology/awardee> ?campaign .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
492,70,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","```sparql
SELECT DISTINCT ?person WHERE {
  # Step 1: Find decedent of Joseph C. Satterthwaite's work
  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/US_Assistant_Secretary_of_State_for_African_Affairs> .
  ?workDecedent <http://dbpedia.org/ontology/decedent> ?person .

  # Step 2: Find commander in Battle of Verdun and their wars
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Step 3: Find decedent at the capital of Khemis Miliana District
  <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/capital> ?capital .
  ?capitalDecedent <http://dbpedia.org/ontology/decedent> ?person2 .
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 4: Find intersection of persons from steps 1 and 3
  FILTER (?person = ?person2)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
184,70,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
SELECT ?finalChild WHERE {
  # Step 1: Archduke Ladislaus Philipp of Austria
  ?ladislaus <http://dbpedia.org/ontology/birthParent> ?parentLadislaus .
  ?parentLadislaus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?childOfParentLadislaus <http://dbpedia.org/ontology/birthParent> ?parentLadislaus .
  ?grandChildOfParentLadislaus <http://dbpedia.org/ontology/birthParent> ?childOfParentLadislaus .

  # Step 2: Archduchess Margaret of Austria (born 1925)
  <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> <http://dbpedia.org/ontology/birthParent> ?parentMargaret .
  ?childOfParentMargaret <http://dbpedia.org/ontology/birthParent> ?parentMargaret .
  ?grandParentOfChildMargaret <http://dbpedia.org/ontology/birthParent> ?childOfParentMargaret .

  # Step 3: Native of Budapest
  ?nativeBudapest <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Hungary> .
  ?parentNativeBudapest <http://dbpedia.org/ontology/birthParent> ?nativeBudapest .

  # Final condition to find the common entity
  ?finalChild = ?grandChildOfParentLadislaus ;
               = ?grandParentOfChildMargaret ;
               = ?parentNativeBudapest .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
492,58,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v1 <http://dbpedia.org/ontology/capital> ?v2 . },"```sparql
SELECT DISTINCT ?person WHERE {
  # Find the decedent at French Algeria
  ?decedent1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
  
  # Find the capital of Khemis Miliana District and its decedents
  <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/capital> ?capital .
  ?decedent2 <http://dbpedia.org/ontology/deathPlace> ?capital .
  
  # Ensure the capital is a settlement
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Find the war in which Frédéric-Georges Herr was a commander
  <http://dbpedia.org/resource/Fr%C3%A9d%C3%A9ric-Georges_Herr> <http://dbpedia.org/ontology/commander> ?war .
  
  # Ensure the war is both a military conflict and an event
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Find the person who satisfies all conditions
  ?person = ?decedent1 .
  ?person = ?decedent2 .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
617,50,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  <http://dbpedia.org/resource/Antiochus_IV_Epiphanes> <http://dbpedia.org/ontology/father> ?antiochus .

  # Step 2: Find his successor who is royalty
  ?successor <http://dbpedia.org/ontology/successor> ?antiochus .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Determine the child of this successor
  ?successor <http://dbpedia.org/ontology/child> ?child .

  # Step 4: Identify the spouse of that child
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 5: Ensure this child is also a parent to another child of Antiochus
  ?child <http://dbpedia.org/ontology/parent> ?grandchild .
  ?antiochus <http://dbpedia.org/ontology/child> ?grandchild .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
345,18,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1978-09-15 and figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.","SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
# Step 1: Find the person born on 1978-09-15 who is both a soccer player and a soccer manager
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
}

# Step 2: Find the nickname of this person that is a sports club, organization, and soccer club
SELECT ?nickname WHERE {
  ?person :nickname ?nickname .
  ?nickname <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub> .
  ?nickname <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?nickname <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .
}

# Step 3: Determine which team Armando Heeb was associated with
SELECT ?team WHERE {
  <http://dbpedia.org/resource/Armando_Heeb> :member ?team .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
528,59,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of the commander in the work of --01-09.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . }","```sparql
SELECT DISTINCT ?result WHERE {
  # Part 1: War of the military force of a societal event in Chile
  {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile> .
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    ?militaryForce <http://dbpedia.org/ontology/battle> ?result .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
  
  # Part 2: War of the commander in the work of --01-09
  UNION {
    ?work <http://purl.org/dc/terms/date> ""--01-09""^^xsd:date .
    ?work <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?result .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
}
```",6,7,7,3,2,3,3,71,0,0,14,0,0.0,0
281,50,test,"Give me the war of the profession, that is a military unit, of Heather Roy and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  # Step 1: Identify the leader of the 1962 New South Wales state election who is a politician.
  ?election <http://dbpedia.org/ontology/politicalLeader> ?leader .
  FILTER(?election = <http://dbpedia.org/resource/1962_New_South_Wales_state_election>)
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 2: Determine the birthplace of this leader, ensuring it's categorized as a country.
  ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 3: Find entities in that birthplace and identify those with professions classified as military units.
  ?entity <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?entity <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .

  # Step 4: Determine any wars associated with these military unit professions.
  ?entity <http://dbpedia.org/ontology/war> ?war .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
281,52,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
SELECT DISTINCT ?entityInBirthPlace ?newZealandWar ?warOfAwardee WHERE {
  # Part 1: Entity in the birthplace of Bob Heffron that is a country
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?entityInBirthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?birthPlace .

  # Part 2: War of New Zealand Army
  ?newZealandWar <http://dbpedia.org/property/army> <http://dbpedia.org/resource/New_Zealand_Army> .
  ?newZealandWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Part 3: War of the awardee of the award of Jonathon Band
  ?award <http://dbpedia.org/property/awardedBy> <http://dbpedia.org/resource/Jonathon_Band> .
  ?award <http://purl.org/dc/terms/creator> ?awardee .
  ?warOfAwardee <http://dbpedia.org/ontology/battle> ?awardee .
  ?warOfAwardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,48,test,"Give me the leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
SELECT ?leader WHERE {
  # Find the government agency led by Joseph Stalin
  ?office <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Joseph_Stalin> .
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .

  # Find the award associated with the commander in the Volcano and Ryukyu Islands campaign
  <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/awards> ?award .

  # Find the leader of the office who is also an awardee
  ?leader <http://dbpedia.org/ontology/officeHolder> ?office ;
          <http://dbpedia.org/property/awards> ?award .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
391,71,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ?v1 . ?v7 <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v8 <http://dbpedia.org/property/starring> ?result . ?v8 <http://dbpedia.org/property/starring> ?v7 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v4 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Determine the claim to fame of that spouse, which is a work
SELECT ?claimToFame WHERE {
  ?spouse <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
}

# Step 3: Find the professional and actor associated with that claim to fame
SELECT ?actor WHERE {
  ?claimToFame <http://dbpedia.org/ontology/professional> ?actor .
  ?actor <http://dbpedia.org/ontology/actor> ?claimToFame .
}

# Step 4: Locate the movie that is also classified as a work and a television show involving this actor
SELECT ?movie WHERE {
  ?actor <http://dbpedia.org/ontology/actor> ?movie .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
}

# Step 5: Identify the nickname for Jackson, Tennessee
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/property/nickName> ?nickname .
}

# Step 6: Find the native of this nickname
SELECT ?native WHERE {
  ?nickname <http://dbpedia.org/ontology/nativeOf> ?native .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
659,24,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?commander WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://dbpedia.org/ontology/event> ?event .
  ?event <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/Napoleonic_Wars> .
  ?war <http://dbpedia.org/ontology/militaryForce> <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> .
  ?war <http://dbpedia.org/ontology/commander> ?commander .
}
```",3,5,4,2,2,3,3,71,0,0,29,0,0.0,0
232,62,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of London and child of the person born as the birth name of Jon Pertwee.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Identify Jon Pertwee
  ?jonPertwee <http://dbpedia.org/ontology/birthName> ""Jon Pertwee"" .
  
  # Step 2: Find the child of Jon Pertwee who is a professional actor, narrator, and producer, native of London
  ?child <http://dbpedia.org/ontology/father> ?jonPertwee ;
         <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/London> ;
         <http://dbpedia.org/ontology/profession> ?profession .
  
  FILTER(?profession IN (<http://dbpedia.org/resource/Actor>, 
                        <http://dbpedia.org/resource/Narrator>, 
                        <http://dbpedia.org/resource/Producer>)).
  
  # Step 3: Determine their claim to fame that involves both a film and a military conflict
  ?child <http://dbpedia.org/ontology/claimToFame> ?fame .
  ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Film>, 
                                                          <http://dbpedia.org/ontology/MilitaryConflict>) .
  
  # Step 4: Identify an actor associated with this claim to fame
  ?fame <http://dbpedia.org/ontology/starring> ?actor .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
659,71,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v8 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v7 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?result WHERE {
  # Step 1: Find the native (office holder) of Kingdom of Ireland
  ?native <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
  ?native a <http://dbpedia.org/ontology/OfficeHolder> .

  # Step 2: Find the military force commanded by this office holder
  ?force <http://dbpedia.org/ontology/commander> ?native .

  # Step 3: Identify 'Polish Horse' and find the war they commanded in
  ?polishHorse a <http://dbpedia.org/ontology/MilitaryUnit>, <http://dbpedia.org/ontology/Organisation> .
  FILTER (str(?polishHorse) = ""Polish_Horse"") .
  ?war <http://dbpedia.org/ontology/commander> ?polishHorse .
  ?war a <http://dbpedia.org/ontology/MilitaryConflict>, <http://www.w3.org/2002/07/owl#Thing> .

  # Step 4: Find the reference to Rutger Jan Schimmelpenninck and identify the commander in that war
  ?reference <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  ?commanderInWar <http://dbpedia.org/ontology/commander> ?reference .

  # Step 5: Determine the military force associated with this societal event, event, and military conflict
  ?result <http://dbpedia.org/ontology/militaryForce> ?force .
  ?result a <http://dbpedia.org/ontology/SocietalEvent>, <http://www.w3.org/2002/07/owl#Thing>, <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",9,17,10,3,3,3,3,71,0,0,15,0,0.0,0
427,46,test,Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti.,SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . },"```sparql
SELECT ?micheleParty ?fatherParty WHERE {
  # Find Michele Pinto's party
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?micheleParty .

  # Find Lamberto Andreotti's father and his party
  OPTIONAL {
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/party> ?fatherParty .
  }
}
```",5,5,6,3,2,3,3,71,2,0,0,1.0,1.0,1.0
161,62,test,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commander WHERE {
  # Step 1: Find the predecessor of Indalecio Prieto
  <http://dbpedia.org/resource/Indalecio_Prieto> <http://www.w3.org/2002/07/owl#sameAs> ?predecessor .

  # Step 2: Identify military force related to this predecessor
  ?predecessor <http://dbpedia.org/ontology/militaryForce> ?force1 .
  ?force1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1, ?type2 .

  FILTER (?type1 = <http://dbpedia.org/ontology/SocietalEvent> && ?type2 = <http://dbpedia.org/ontology/MilitaryConflict>) .

  # Step 3: Find the person who died in Francoist Spain
  ?decedent <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> .

  # Step 4: Identify military force related to this decedent
  ?decedent <http://dbpedia.org/ontology/militaryForce> ?force2 .
  ?force2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type3, ?type4, ?type5 .

  FILTER (?type3 = <http://dbpedia.org/ontology/SocietalEvent> && 
          ?type4 = <http://dbpedia.org/ontology/Event> &&
          ?type5 = <http://dbpedia.org/ontology/MilitaryConflict>) .

  # Step 5: Find the commander in Biscay Campaign
  ?commander <http://dbpedia.org/ontology/commander> ?biscayCampaign .
  ?biscayCampaign <http://www.w3.org/2000/01/rdf-schema#label> ""Biscay Campaign"" .

}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
435,25,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and work of Article 62, Section IV of Constitution of Iceland and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?v2 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/ontology/timeZone> ?v4 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
SELECT ?territory WHERE {
  # Step 1: Identify Iceland as a settlement, town, and Icelandic region
  <http://dbpedia.org/resource/Iceland> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/Settlement>, <http://dbpedia.org/ontology/Town>, <http://dbpedia.org/ontology/Region>) && 
          EXISTS { <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/language> ""Icelandic"" }).

  # Step 2: Find territories administered from Iceland as per its constitution
  ?territory <http://dbpedia.org/ontology/administeredFrom> <http://dbpedia.org/resource/Iceland> .
  FILTER EXISTS { 
    ?constitution <http://dbpedia.org/property/article> ""62"" ;
                  <http://dbpedia.org/property/section> ""IV"" ;
                  <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Iceland> .
  }

  # Step 3: Identify the region related to Bombali Shebora Chiefdom's time zone
  ?region <http://dbpedia.org/ontology/timeZone> ?timeZone .
  FILTER EXISTS { 
    ?chiefdom <http://dbpedia.org/property/name> ""Bombali Shebora Chiefdom"" ;
               <http://dbpedia.org/ontology/timeZone> ?timeZone .
  }
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
281,35,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
# Part 1: War associated with Heather Roy's profession as a military unit
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?profession <http://dbpedia.org/ontology/battle> ?war .
}

UNION

# Part 2: War associated with awardees of Knight Grand Cross of the Order of the Bath
SELECT ?war WHERE {
  ?person <http://dbpedia.org/property/orderOfTheBath> ""Knight Grand Cross"" .
  ?person <http://dbpedia.org/ontology/battle> ?war .
}
```",4,5,5,2,2,3,3,71,0,0,9,0,0.0,0
281,69,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v7 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT DISTINCT ?war1 ?war2 WHERE {
  # Step 1: Find the award of Jonathon Band
  <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/ontology/award> ?award .

  # Step 2: Find the war associated with that award
  ?award <http://dbpedia.org/ontology/war> ?war1 .

  # Step 3: Find a profession related to a military unit and an office holder who is also a politician in the New Zealand Army
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?officeHolder <http://dbpedia.org/ontology/profession> ?profession ;
                <http://dbpedia.org/ontology/politicalParty> ?party ;
                <http://dbpedia.org/ontology/memberOfParliament> <http://dbpedia.org/resource/New_Zealand_Army> .

  # Step 4: Find the war associated with this office holder
  ?officeHolder <http://dbpedia.org/ontology/war> ?war2 .

  # Step 5: Identify Bob Heffron's birthplace that is a country
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER (?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>) .

  # Ensure the office holder is from Bob Heffron's birthplace
  ?officeHolder <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
547,69,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of the award of Gerald Graham and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v7 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT DISTINCT ?restingPlace WHERE {
  # Part 1: Resting place of the child of the child of William Haliburton
  {
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?parent .
    ?parent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton> .
    ?grandchild <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
  
  UNION
  
  # Part 2: Resting place of the awardee of the award of Gerald Graham
  {
    ?award <http://dbpedia.org/property/recipient> ?awardee .
    ?gGraham <http://dbpedia.org/ontology/receivesAward> ?award .
    FILTER(?gGraham = <http://dbpedia.org/resource/Gerald_Graham>) .
    ?awardee <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
  
  UNION
  
  # Part 3: Resting place of the actor of ""Enemy at the Door""
  {
    ?actor <http://dbpedia.org/ontology/performedIn> <http://dbpedia.org/resource/Enemy_at_the_Door> .
    ?actor <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
492,65,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at the capital, that is a settlement, of Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v4 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Part 1: Person decedent at the work of Joseph C. Satterthwaite
SELECT ?decedent1 WHERE {
  ?work <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Joseph_C._Satterthwaite> .
  ?work <http://dbpedia.org/ontology/decedent> ?decedent1 .
}

# Part 2: Person decedent at the capital of Algeria
SELECT ?decedent2 WHERE {
  <http://dbpedia.org/resource/Algiers> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  <http://dbpedia.org/resource/Algiers> <http://dbpedia.org/ontology/decedent> ?decedent2 .
}

# Part 3: Commander in the war involving the commander from Battle of Verdun
SELECT ?war, ?commander, ?decedent3 WHERE {
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://dbpedia.org/ontology/event> ?event .
  ?commander <http://dbpedia.org/ontology/decedent> ?decedent3 .
}

# Final query to find common decedents
SELECT DISTINCT ?commonDecedent WHERE {
  VALUES ?decedent1 { ?decedent1 }
  VALUES ?decedent2 { ?decedent2 }
  VALUES ?decedent3 { ?decedent3 }
  
  FILTER (?decedent1 = ?decedent2 && ?decedent1 = ?decedent3)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
981,16,test,"Give me the entity in the region of Time in Indonesia and birth place of the person born, that is a beauty queen, as .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/birthName> """"@en . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Identify entities related to ""Time in Indonesia""
  ?region <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> .
  
  # Step 2: Find a beauty queen born in the identified region
  ?beautyQueen <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyContestant> ;
               <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Ensure the birth place is a region
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> ;
              <http://dbpedia.org/ontology/country> ?region .

}
```",4,5,5,2,2,3,2,20,0,0,19,0,0.0,0
391,35,test,"Give me the native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?native WHERE {
  # Step 1: Identify the figure known as ""Hub City""
  ?person rdfs:label ""Hub City""@en .
  
  # Step 2: Find movies featuring Roz Ryan that are also works and have TV show adaptations
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> , <http://dbpedia.org/ontology/Work> .
  ?movie <http://dbpedia.org/property/adaptation> ?tvShow .

  # Step 3: Determine the native place of ""Hub City"" who acted in such a movie
  ?person <http://dbpedia.org/ontology/starring> ?movie .
  ?person <http://dbpedia.org/ontology/birthPlace> ?native .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
485,27,test,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and entity in United Kingdom.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT DISTINCT ?birthPlace WHERE {
  # Step 1: Find awardees of Eric Gregory Award who are writers and poets
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Eric_Gregory_Award> .
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet> .

  # Step 2: Get their birthplaces
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 3: Ensure the birthplace is a region and also the birthplace of Joseph Whitaker (naturalist)
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
  <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 4: Ensure the region is in the United Kingdom
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/United_Kingdom> .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
435,23,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and work of the author of Iceland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . }","```sparql
SELECT ?territory WHERE {
  # Step 1: Identify Iceland as a settlement and town
  <http://dbpedia.org/resource/Iceland> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/Settlement>, <http://dbpedia.org/ontology/Town>) && 
          EXISTS { <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Iceland> }).

  # Step 2: Find the author of ""Iceland""
  ?book <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Icelandic_books> .
  ?book <http://purl.org/dc/terms/creator> ?author .

  # Step 3: Identify works by this author
  ?work <http://purl.org/dc/terms/creator> ?author .

  # Step 4: Find territories administered from Iceland
  ?territory <http://dbpedia.org/ontology/administrativeTerritory> <http://dbpedia.org/resource/Iceland> .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
378,42,test,Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of Joaquín Blake.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query 1: Claim to fame of Carl Pontus Gahn
SELECT ?claimToFame WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/notableFor> ?claimToFame .
}

# Query 2: Claim to fame of the commander in the Great Siege of Gibraltar
SELECT ?commander, ?claimToFame WHERE {
  <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/notableFor> ?claimToFame .
}

# Query 3: War associated with Joaquín Blake
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?battle <http://dbpedia.org/ontology/name> ?war .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
360,25,test,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v3 <http://dbpedia.org/property/writer> ?result . }","```sparql
SELECT ?writer WHERE {
  # Part 1: Find Dave Flett's albums
  ?album <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/Dave_Flett> .
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalAlbum> .

  # Part 2: Find writers of these albums with a reference to Manfred Mann
  ?album <http://dbpedia.org/ontology/writer> ?writer .
  ?album <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Manfred_Mann> .

  # Part 3: Find Winnie Madikizela-Mandela's death place that is a settlement
  ?deathPlace <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> .
  ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Part 4: Find the native of this death place
  ?native <http://dbpedia.org/ontology/nativeOf> ?deathPlace .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
318,9,test,Give me the professional in the profession of Robert Xavier Rodriguez and person born in the founding year of Eel Pie Publishing.,SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
# Step 1: Get the profession of Robert Xavier Rodriguez
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://purl.org/dc/terms/profession> ?profession .
}

# Step 2: Find the founding year of Eel Pie Publishing
SELECT ?foundingYear WHERE {
  <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingDate> ?foundingYear .
}

# Step 3: Find a person with the same profession and born in that founding year
SELECT DISTINCT ?person WHERE {
  # Assuming we have obtained ?profession and ?foundingYear from previous queries
  ?person <http://purl.org/dc/terms/profession> ?profession .
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  
  FILTER (YEAR(?birthDate) = YEAR(?foundingYear))
}
```

Note: The above SPARQL query is structured in steps. In practice, you would need to execute the first two queries separately to obtain `?profession` and `?foundingYear`, then use those values in the final query.",4,4,5,2,2,2,2,9,0,0,7,0,0.0,0
701,55,test,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ramesses_II> .
  ?parent <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
285,20,test,Give me the parent of the child of the spouse of Aristotle Onassis and spouse of the professional in the award of Stan Lee.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
# Step 1: Identify Aristotle Onassis's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 2: Find the child of that spouse
SELECT ?child WHERE {
  ?spouse <http://dbpedia.org/ontology/child> ?child .
}

# Step 3: Determine the parent of that child
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
}

# Step 4: Identify the professional associated with Stan Lee's award
SELECT ?professional WHERE {
  ?award <http://dbpedia.org/property/receiver> <http://dbpedia.org/resource/Stan_Lee> .
  ?award <http://dbpedia.org/ontology/recipient> ?professional .
}

# Step 5: Find the spouse of that professional
SELECT ?spouse2 WHERE {
  ?professional <http://dbpedia.org/ontology/spouse> ?spouse2 .
}

# Final step: Find a common entity or relationship between the parent and the spouse
SELECT DISTINCT ?parent ?spouse2 WHERE {
  # Reuse previous results
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
  ?professional <http://dbpedia.org/ontology/spouse> ?spouse2 .

  # Assuming we need to find a direct relationship or commonality
  FILTER(?parent = ?spouse2)
}
```",6,6,7,3,2,3,2,20,0,0,3,0,0.0,0
487,18,test,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of the administration of the person born on 1955-01-26.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://dbpedia.org/property/governor> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
# Task 1: Find the administration of Philip Brian Scott who is a soccer player.
SELECT ?administration WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Philip Brian Scott"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://dbpedia.org/property/currentclub> ?administration .
}

UNION

SELECT ?country WHERE {
  # Task 2: Find the country of administration for the person born on 1955-01-26.
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  ?person <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?administration <http://dbpedia.org/property/currentclub> ?person .
  ?administration <http://dbpedia.org/ontology/country> ?country .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
465,9,test,"Give me the death place of the native of Prague and administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
SELECT ?deathPlace WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> .
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> ;
         <http://www.w3.org/2000/01/rdf-schema#isPartOf> <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> .
  ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
                 <http://www.w3.org/2000/01/rdf-schema#isPartOf> <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> .
  ?party <http://dbpedia.org/ontology/leader> ?person .
  ?organisation <http://dbpedia.org/ontology/leader> ?person .
  ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",4,6,5,2,2,2,2,9,0,0,8,0,0.0,0
161,69,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v7 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT DISTINCT ?force1 ?force2 ?commander WHERE {
  # Step 1: Find the decedent at Francoist Spain
  ?person <http://dbpedia.org/ontology/decedent> ?decedent .
  ?decedent <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Francoist_Spain> .

  # Step 2: Find the military force associated with this decedent
  ?force1 <http://dbpedia.org/ontology/militaryForce> ?person .
  ?force1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 3: Find Francisco Largo Caballero's military force
  ?force2 <http://dbpedia.org/ontology/militaryForce> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
  ?force2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 4: Identify ""El Director"" and find the commander of his force
  ?figure <http://dbpedia.org/property/kindOf> ""El Director""@en .
  ?force3 <http://dbpedia.org/ontology/militaryForce> ?figure .
  ?force3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  ?commander <http://dbpedia.org/ontology/commander> ?force3 .
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
488,28,test,Give me the death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for the death place of Tokugawa Ieyasu
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}

UNION

# Query for the administration (reign) period of Emperor Go-Yōzei
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Emperor_Go-Yozei> <http://dbpedia.org/property/reign> ?administration .
}

UNION

# Query for the birth place of commanders in the Boshin War
SELECT DISTINCT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
701,68,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v5 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
# Step 1: Seti I's child
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Seti_I> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Child of Seti I's child (grandchild)
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
}

# Step 3: Parent of the grandchild
SELECT ?parent WHERE {
  ?grandchild <http://dbpedia.org/ontology/parent> ?parent .
}

# Step 4: Merneptah's father and his spouse
SELECT ?father, ?spouse WHERE {
  <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 5: Parent of the child of Amun-her-khepeshef's spouse
SELECT ?amunSpouse, ?childOfAmunSpouse, ?parentOfChild WHERE {
  <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?amunSpouse .
  ?amunSpouse <http://dbpedia.org/ontology/child> ?childOfAmunSpouse .
  ?childOfAmunSpouse <http://dbpedia.org/ontology/parent> ?parentOfChild .
}

# Final step: Find the common entity
SELECT DISTINCT ?result WHERE {
  { ?parent = ?result . }
  UNION
  { ?parentOfChild = ?result . }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
754,19,test,Give me the parent of the parent of May Hnin Htapi and parent of the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
# Step 1: Find the parent of May Hnin Htapi
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/father> ?parent .
  UNION
  { 
    <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/mother> ?parent .
  }
}

# Step 2: Find the grandparent of May Hnin Htapi
SELECT ?grandparent WHERE {
  ?parent <http://dbpedia.org/ontology/father> ?grandparent .
  UNION
  { 
    ?parent <http://dbpedia.org/ontology/mother> ?grandparent .
  }
  # Assuming ?parent is the result from Step 1
}

# Step 3: Find the child of Ram Khamhaeng the Great
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> <http://dbpedia.org/ontology/father> ?child .
  UNION
  { 
    <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> <http://dbpedia.org/ontology/mother> ?child .
  }
}

# Step 4: Find the parent of Ram Khamhaeng's child
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/father> ?parent .
  UNION
  { 
    ?child <http://dbpedia.org/ontology/mother> ?parent .
  }
  # Assuming ?child is the result from Step 3
}

# Final step: Find the common entity that matches both conditions
SELECT DISTINCT ?entity WHERE {
  VALUES ?entity {
    (<result_from_step_2>)
    (<result_from_step_4>)
  }
}
```

Note: The above SPARQL script outlines the steps needed to find the answer. Each step should be executed sequentially, and intermediate results should be used in subsequent queries. The final query combines these results to identify the common entity.",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
701,51,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Ramesses II.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find the commander in Battle of Perire who is royalty
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Perire>)
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the father of that commander
  ?father <http://dbpedia.org/ontology/spouse> ?spouse .
  ?commander <http://dbpedia.org/ontology/father> ?father .

  # Step 3: Ensure this spouse is a parent of one of Ramesses II's children
  ?ramessesChild <http://dbpedia.org/ontology/father> ?father .
  FILTER(?ramessesChild = <http://dbpedia.org/resource/Ramesses_II#children>)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
747,48,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?personWithBand WHERE {
  # Step 1: Find Tracey Elizabeth McSween
  ?tracey a <http://dbpedia.org/ontology/Person> ;
          <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween"" .

  # Step 2: Find the decedent who is an athlete and soccer player from Zolotonosha
  ?decedent a <http://dbpedia.org/ontology/SoccerPlayer>, <http://dbpedia.org/ontology/Athlete> ;
            <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Zolotonosha> .

  # Get the birth date of this decedent
  ?decedent <http://www.w3.org/2000/01/rdf-schema#label> ?birthDate .

  # Step 3: Find a person born on that specific birth date
  ?person a <http://dbpedia.org/ontology/Person> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type ;
          <http://dbpedia.org/property/birthDate> ?birthDate .

  # Step 4: Check if this person has an associated band
  OPTIONAL { ?person <http://dbpedia.org/ontology/memberOfBand> ?band . }
  
  FILTER EXISTS { ?band a <http://dbpedia.org/ontology/Band> }

  BIND(?person AS ?personWithBand)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
959,52,test,"Give me the manager of 2013 Júbilo Iwata season and native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
SELECT ?manager WHERE {
  # Part 1: Manager of 2013 Júbilo Iwata season
  <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?manager .

  # Part 2: Native country of Yōichi Masuzoe's residence
  <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?manager <http://dbpedia.org/ontology/nativePlace> ?residence .

  # Part 3: Alma mater of a person born in 1958
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
          <http://dbpedia.org/property/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (
    ?type = <http://dbpedia.org/ontology/JapaneseOrganisation> &&
    ?type = <http://dbpedia.org/ontology/Organisation> &&
    ?type = <http://dbpedia.org/ontology/University> &&
    ?type = <http://dbpedia.org/ontology/EducationalOrganization>
  )
  
  # Ensure the manager is a member of this alma mater
  ?manager <http://dbpedia.org/ontology/memberOf> ?almaMater .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
16,68,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
SELECT ?person WHERE {
  # Step 1: Find Gigi Rice's birth name
  <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?gigiBirthName .

  # Step 2: Find person born as Gigi Rice's birth name
  ?personBornAsGigi <http://dbpedia.org/ontology/birthName> ?gigiBirthName .
  
  # Step 3: Find Ted McGinley's birth name
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?tedBirthName .

  # Step 4: Find spouse of person born as Ted McGinley's birth name
  ?personBornAsTed <http://dbpedia.org/ontology/birthName> ?tedBirthName .
  ?personBornAsTed <http://dbpedia.org/property/spouse> ?spouseOfTed .

  # Step 5: Find profession of actor in ""Unnatural"" TV series
  ?unnaturalActor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Unnatural_(TV_series)> .
  ?unnaturalActor <http://purl.org/dc/terms/profession> ?profession .

  # Step 6: Find professional in that profession
  ?spouseOfTed <http://purl.org/dc/terms/profession> ?profession .

  # Final condition to match the person from step 2 with spouse from step 4
  FILTER (?person = ?spouseOfTed)
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
328,57,test,"Give me the awardee of Order of Suvorov and commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/awardee> <http://dbpedia.org/resource/Order_of_Suvorov> .
  ?person <http://dbpedia.org/ontology/commander> ?force .
  ?force <http://dbpedia.org/property/location> ""Budapest"" .
  ?person <http://dbpedia.org/ontology/leader> ?office .
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?office <http://dbpedia.org/property/leaderDuring> <http://dbpedia.org/resource/Joseph_Stalin> .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
161,71,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT DISTINCT ?militaryForce1 ?militaryForce2 ?force3 WHERE {
  # Step 1: Find the decedent at Francoist Spain
  ?person <http://dbpedia.org/ontology/decedent> <http://dbpedia.org/resource/Francoist_Spain> .
  
  # Step 2: Identify military force related to this person, categorized as societal event and military conflict
  ?person <http://dbpedia.org/property/militaryForce> ?militaryForce1 .
  ?militaryForce1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?militaryForce1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 3: Find the predecessor of Indalecio Prieto
  <http://dbpedia.org/resource/Indalecio_Prieto> <http://dbpedia.org/ontology/predecessor> ?predecessor .
  
  # Step 4: Identify military force related to this predecessor, categorized as societal event and military conflict
  ?predecessor <http://dbpedia.org/property/militaryForce> ?militaryForce2 .
  ?militaryForce2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?militaryForce2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 5: Find the figure known as ""El Director"" and their associated force
  ?figure rdfs:label ""El Director""@en .
  ?figure <http://dbpedia.org/property/commander> ?commander .
  ?force <http://dbpedia.org/ontology/commander> ?commander .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Return the military forces
}
```",9,15,10,3,3,3,3,71,0,0,32,0,0.0,0
915,17,test,"Give me the resident of Springfield, Illinois and father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?resident WHERE {
  # Step 1: Find Lizzie Spaulding's parent who is a fictional and soap character
  ?parent <http://dbpedia.org/ontology/familyName> ""Spaulding"" .
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lizzie_Spaulding> .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?parent <http://dbpedia.org/ontology/soapOperaCharacter> ?soaper .

  # Step 2: Find the child of that parent who is a fictional and soap character
  ?child <http://dbpedia.org/ontology/familyName> ""Spaulding"" .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?child <http://dbpedia.org/ontology/soapOperaCharacter> ?soaper2 .

  # Step 3: Determine the father of this child
  ?father <http://dbpedia.org/ontology/familyName> ""Spaulding"" .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?father <http://dbpedia.org/ontology/husband> ?child .

  # Step 4: Find the resident of Springfield, Illinois who is this father
  ?resident <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> .
  ?resident = ?father .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
617,46,test,"Give me the spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Step 1: Identify Antiochus III's children
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Find the spouse of Antiochus III's child
SELECT ?spouse WHERE {
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .
  FILTER EXISTS { ?child <http://dbpedia.org/ontology/child> ?grandChild . }
}

# Step 3: Identify Antiochus II Theos' successor who is royalty
SELECT ?successor WHERE {
  <http://dbpedia.org/resource/Antiochus_II_theos> <http://dbpedia.org/ontology/successor> ?successor .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 4: Find the child of this successor who is royalty
SELECT ?royalChild WHERE {
  ?successor <http://dbpedia.org/ontology/child> ?royalChild .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 5: Find the spouse of this royal child
SELECT ?spouse WHERE {
  ?royalChild <http://dbpedia.org/ontology/spouse> ?spouse .
}
```

Note: This query is broken down into steps for clarity. In practice, you would combine these queries to retrieve the final result in a single SPARQL query.",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
767,38,test,Give me the reference to the alter ego of Black Hood and alma mater of the administration of George K. Nash.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
SELECT ?alterEgo ?almaMater WHERE {
  # Find alter ego of Black Hood
  <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/ontology/alternateName> ?alterEgo .

  # Find alma mater of George K. Nash
  <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/property/almaMater> ?almaMater .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
161,67,test,"Give me the military force of Rif War and commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
# Step 1: Find the military force of the Rif War
SELECT ?rifWarForce WHERE {
  <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?rifWarForce .
}

# Step 2: Find the commander known as ""El Director"" in that force, and ensure it's an event
SELECT ?commander WHERE {
  ?rifWarForce <http://dbpedia.org/ontology/commander> ?commander .
  ?commander rdfs:label ""El Director""@en .
  ?rifWarForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
}

# Step 3: Find the predecessor of Indalecio Prieto
SELECT ?predecessor WHERE {
  <http://dbpedia.org/resource/Indalecio_Prieto> <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Step 4: Identify the military force associated with this predecessor, ensuring it's both a societal event and a military conflict
SELECT ?militaryForce WHERE {
  ?predecessor <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",7,10,8,3,3,3,3,71,0,0,11,0,0.0,0
767,55,test,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
SELECT DISTINCT ?almaMater ?settlement WHERE {
  # Step 1: Find the alma mater of entities in George K. Nash's administration
  ?entity <http://dbpedia.org/ontology/administration> <http://dbpedia.org/resource/G._W._Nash> .
  ?entity <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Step 2: Identify entities in the administration that are settlements
  OPTIONAL {
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    BIND(?entity AS ?settlement)
  }

  # Step 3: Reference to the alter ego of Black Hood
  OPTIONAL {
    ?blackHood <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?alterEgo <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?entityType .
    FILTER(?entityType = ?settlement)
  }
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
429,8,test,"Give me the administration of Andrew Johnson and country of the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
# Query 1: Find the administration of Andrew Johnson
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Andrew_Johnson> <http://dbpedia.org/ontology/politicalLeader> ?administration .
}

# Query 2: Find the country of the military force involved in the Camden Expedition
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Camden_Expedition> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?militaryForce <http://dbpedia.org/property/country> ?country .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
701,48,test,Give me the spouse of the father of Merneptah and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?spouseOfMerneptahsFather WHERE {
  # Step 1: Find Merneptah's father
  ?merneptah <http://dbpedia.org/ontology/father> ?merneptahsFather .
  
  # Step 2: Find the spouse of Merneptah's father
  ?merneptahsFather <http://dbpedia.org/ontology/spouse> ?spouseOfMerneptahsFather .

  # Step 3: Find Amun-her-khepeshef's spouse
  ?amunHerKhepeshef <http://dbpedia.org/ontology/spouse> ?amunsSpouse .
  
  # Step 4: Find the child of Amun-her-khepeshef's spouse
  ?amunsSpouse <http://dbpedia.org/ontology/child> ?childOfAmunsSpouse .

  # Step 5: Find the parent of this child
  ?childOfAmunsSpouse <http://dbpedia.org/ontology/fatherOrMother> ?parentOfChild .
  
  FILTER(?parentOfChild = ?spouseOfMerneptahsFather)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,55,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
# Step 1: Identify Donald Maynard Dokken as a musical artist
SELECT ?dokken WHERE {
  ?dokken <http://dbpedia.org/ontology/birthName> ""Donald Maynard Dokken"" .
  ?dokken <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 2: Find band members of Donald Maynard Dokken
SELECT DISTINCT ?bandMember WHERE {
  VALUES ?dokken { <URI_of_Donald_Maynard_Dokken> } # Replace with actual URI from step 1
  ?dokken <http://dbpedia.org/ontology/memberOf> ?band .
  ?band <http://dbpedia.org/ontology/member> ?bandMember .
}

# Step 3: Find associated artists of Watchtower and their associations
SELECT DISTINCT ?associatedArtist WHERE {
  <URI_of_Watchtower> <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
  ?artist <http://dbpedia.org/ontology/memberOf> ?band .
  ?band <http://dbpedia.org/ontology/member> ?associatedArtist .
}

# Step 4: Find band members of Meshuggah who are also bands/groups/organizations
SELECT DISTINCT ?meshuggahMember WHERE {
  <URI_of_Meshuggah> <http://dbpedia.org/ontology/member> ?member .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/MusicalGroup>, <http://dbpedia.org/ontology/Organisation>)).
}
```

Note: Replace `<URI_of_Donald_Maynard_Dokken>`, `<URI_of_Watchtower>`, and `<URI_of_Meshuggah>` with the actual URIs from DBpedia for these entities. This query assumes that such URIs are known or can be retrieved separately.",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
747,26,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?song <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Amba_Shepherd> .
  ?song <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  ?song <http://dbpedia.org/property/band> ?band .
}
```",3,4,4,3,1,3,3,71,0,0,13,0,0.0,0
528,30,test,Give me the war of Irene Morales and force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query 1: Wars of Irene Morales
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Query 2: Force of Narciso Campero Leyes
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/commander> ?commandedEntity .
  ?commandedEntity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
}

# Query 3: Wars of Orozimbo Barbosa
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
378,30,test,Give me the war of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of Joaquín Blake.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query 1: War of Carl Pontus Gahn
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Query 2: Claim to Fame and War of Joaquín Blake
SELECT DISTINCT ?commander ?claimToFame ?war WHERE {
  # Find the commander in the Great Siege of Gibraltar
  <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
  
  # Get claim to fame of this commander
  ?commander <http://dbpedia.org/property/claimToFame> ?claimToFame .

  # Find wars Joaquín Blake was involved in
  <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
16,58,test,Give me the spouse of Ted McGinley and professional in the profession of Satomi Ishihara and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
# Find the spouse of Ted McGinley
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}

UNION

# Find professionals in the same profession as Satomi Ishihara
SELECT ?professional WHERE {
  ?satomiIshihara <http://dbpedia.org/ontology/profession> ?profession .
  ?professional <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(?satomiIshihara != ?professional)
}

UNION

# Find person born as the birth name of an alumnus of Ohio State University
SELECT ?person WHERE {
  ?alumnus <http://dbpedia.org/resource/Oakland_College> <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> .
  ?alumnus <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
404,27,test,Give me the child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?child WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Find the father of her spouse
  ?spouse <http://dbpedia.org/ontology/father> ?father .

  # Step 3: Find the children of this father
  ?father <http://dbpedia.org/ontology/child> ?child .
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
281,65,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v6 . },"```sparql
# Step 1: Find the leader of the 1962 New South Wales state election who is a politician.
SELECT ?politician WHERE {
  <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/ontology/leader> ?politician .
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}

# Step 2: Determine their birthplace, which is a country.
SELECT ?country WHERE {
  ?politician <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  BIND(?birthPlace AS ?country)
}

# Step 3: Find an entity related to this birthplace.
SELECT DISTINCT ?entity WHERE {
  VALUES (?country) { ?country }
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
}

# Additional Steps:
# Step 4: Identify the awardee of the Knight Grand Cross of the Order of the Bath and find any wars they were involved in.
SELECT DISTINCT ?war WHERE {
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
  ?awardee <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 5: Determine Heather Roy's profession if it is a military unit and identify any associated wars.
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?profession <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
801,49,test,"Give me the professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . },"```sparql
SELECT ?professional WHERE {
  # Step 1: Identify the album and its writer(s)
  <http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)> <http://purl.org/dc/terms/creator> ?writer .
  
  # Step 2: Ensure the writer is both a musical artist and an artist
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  
  # Step 3: Find associated musical artists with the writer
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?musicalArtist .

  # Step 4: Identify the alter ego of The Shadow
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> <http://dbpedia.org/resource/Lamont_Cranston> .
  
  # Step 5: Find the professional role or identity of Lamont Cranston related to the musical artist
  ?musicalArtist <http://dbpedia.org/property/professionalIn> ?professional .
}
```",5,9,6,3,2,3,3,71,0,0,22,0,0.0,0
659,58,test,"Give me the commander in German campaign of 1813 and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
# Step 1: Find the commander in the German campaign of 1813
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 2: Identify the military force associated with this commander that is a societal event, an event, and a military conflict
SELECT ?militaryForce WHERE {
  ?commander <http://dbpedia.org/property/militaryForce> ?militaryForce .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 3: Check for any reference to Rutger Jan Schimmelpenninck
SELECT ?reference WHERE {
  ?militaryForce <http://dbpedia.org/property/referenceTo> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
}

# Step 4: Identify the war involving the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) with the same commander
SELECT ?war WHERE {
  <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/commander> ?commander .
  ?war <http://dbpedia.org/ontology/event> ?militaryForce .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",6,11,7,3,3,3,3,71,0,0,7,0,0.0,0
294,26,test,"Give me the resting place of Edwin A. Keeble and entity in the birth place, that is a settlement, of Marion James and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
SELECT ?result WHERE {
  # Part 1: Resting place of Edwin A. Keeble
  <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/burialPlace> ?result .
  
  UNION
  
  # Part 2: Entity in the birthplace (settlement) of Marion James
  {
    <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?birthPlace ?relation ?result .
  }
  
  UNION
  
  # Part 3: Resting place of the awardee (politician) of Distinguished Service Medal (U.S. Army)
  {
    ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Distinguished_Service_Medal_(United_States_Army)> .
    ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?awardee <http://dbpedia.org/ontology/burialPlace> ?result .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
16,22,test,Give me the spouse of Ted McGinley and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Find the spouse of Ted McGinley
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}

UNION

# Find a person born as Gigi Rice
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Gigi Rice"" .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
801,61,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?producer WHERE {
  # Step 1: Identify the album ""What U See Is What U Get""
  <http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)> <http://purl.org/dc/terms/creator> ?writer .

  # Step 2: Find writers who are both a musical artist and an artist
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Step 3: Determine associated musical artists who are rappers
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?rapper .
  ?rapper <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?rapper <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Rapper> .

  # Step 4: Locate the professional work of these rappers
  ?rapper <http://purl.org/dc/terms/subject> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .

  # Step 5: Find the producer of that specific work
  ?work <http://dbpedia.org/property/producer> ?producer .
}
```",6,14,7,3,2,3,3,71,0,0,9,0,0.0,0
182,23,test,Give me the war of the author of 2019 Sri Lanka Easter bombings and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
# Task 1: Find the author of ""2019 Sri Lanka Easter bombings"" and associated wars
SELECT ?authorWar WHERE {
  <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/ontology/author> ?author .
  ?author <http://dbpedia.org/ontology/battle> ?authorWar .
  ?authorWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Task 2: Find the nationality of Tamara Kunanayakam and associated wars
SELECT ?nationalityEntityWar WHERE {
  <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?nationality .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?nationality .
  ?entity <http://dbpedia.org/ontology/battle> ?nationalityEntityWar .
  ?nationalityEntityWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
303,26,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in Panama and party of the commander, that is a politician, in United States invasion of Panama.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . }","```sparql
# Query for Arnulfo Arias Madrid's party
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://dbpedia.org/property/birthPlace> ?birthPlace .
  FILTER(CONTAINS(LCASE(STR(?birthPlace)), ""panama""))
  <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://dbpedia.org/ontology/memberOf> ?party .
}

# Query for the commander's party in United States Invasion of Panama
SELECT DISTINCT ?commanderParty WHERE {
  <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?commander <http://dbpedia.org/ontology/memberOf> ?commanderParty .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
767,62,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to .","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v6 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?almaMater WHERE {
  # Step 1: Find the writer of ""Where It's At"" by Dustin Lynch
  <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://dbpedia.org/ontology/writer> ?writer .

  # Step 2: Identify administration entity related to George Kilbon Nash that is a settlement
  ?administration <http://dbpedia.org/property/referenceTo> <http://dbpedia.org/resource/George_Kilbon_Nash> .
  ?administration <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 3: Find alma mater for both the writer and the administration entity
  ?writer <http://dbpedia.org/property/almaMater> ?almaMater .
  ?administration <http://dbpedia.org/property/almaMater> ?almaMater .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
801,36,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify the album ""What U See Is What U Get""
  <http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)> <http://purl.org/dc/terms/creator> ?writer .

  # Step 2: Ensure the writer is both a musical artist and an artist
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Step 3: Find associated musical artists related to these writers
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",4,8,5,3,2,3,3,71,0,0,22,0,0.0,0
617,30,test,Give me the child of Antiochus III the Great and spouse of Laodice IV and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?person WHERE {
  # Find children of Antiochus III the Great
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?person .
  
  # Check if they are spouses of Laodice IV
  ?person <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Laodice_IV> ;
          <http://dbpedia.org/ontology/spouse> ?spouse .

  # Ensure the person is a parent of Antiochus (son of Antiochus III the Great)
  ?person <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antiochus_IV_Soter> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,60,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Find The Shadow's true self or alter ego
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?trueSelf .
  
  # Step 2: Determine the professional identity of that alter ego
  ?trueSelf <http://dbpedia.org/ontology/profession> ?professionalIdentity .

  # Step 3 & 4: Find albums associated with this professional identity, specifically ""What U See Is What U Get""
  ?album <http://dbpedia.org/ontology/writer> ?writer .
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?album <http://dbpedia.org/ontology/work> ?work .
  ?album rdfs:label ""What U See Is What U Get""@en .

  # Step 5: Identify the writer who is also a musical artist and an artist
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Step 6: Find associated musical artists linked to this writer
  ?album <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",6,10,7,3,2,3,3,71,0,0,22,0,0.0,0
421,21,test,Give me the band member of Senidah and native of Socialist Federal Republic of Yugoslavia and person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
SELECT ?bandMember WHERE {
  ?bandMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Senidah> .
  ?bandMember <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
  ?bandMember <http://www.w3.org/2000/01/rdf-schema#label> ""Dino Merlin""@en .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
48,18,test,"Give me the band of the writer of the work, that is a work, of Shellback (record producer) and band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . },"```sparql
# Part 1: Band of the writer of a work by Shellback (record producer)
SELECT ?band WHERE {
  ?work <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Shellback_(record_producer)> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?work <http://purl.org/dc/terms/creator> ?writer .
  ?writer <http://dbpedia.org/property/band> ?band .
}

UNION

# Part 2: Band of the actor, who is also a musical artist, in Honor Up
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?actor <http://dbpedia.org/property/band> ?band .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
747,64,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find the person born as ""Shèna""
SELECT ?shena WHERE {
  ?shena <http://dbpedia.org/ontology/birthName> ""Shèna"" .
}

# Step 2: Find a decedent athlete and soccer player from Zolotonosha
SELECT ?decedent WHERE {
  ?decedent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> .
  ?decedent <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> .
}

# Step 3: Find a person with the same birth date as the decedent
SELECT DISTINCT ?person WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?decedent <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

# Step 4: Find the band of Shèna and the person from step 3
SELECT DISTINCT ?band WHERE {
  { 
    ?shena <http://dbpedia.org/ontology/memberOfBand> ?band .
  }
  UNION
  {
    ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
  }
}

# Step 5: Find the band of Amba Shepherd
SELECT ?ambashepherdBand WHERE {
  <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/memberOfBand> ?ambashepherdBand .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
54,47,test,Give me the child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Step 1: Find the father of Soe Min Wimala Dewi
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/ontology/father> ?father .
}

# Step 2: Find the child of that father (which is Soe Min Wimala Dewi)
SELECT ?child WHERE {
  ?father <http://dbpedia.org/ontology/child> ?child .
  FILTER(?father = [INSERT_FATHER_URI_HERE]) # Replace with actual URI from step 1
}

# Step 3: Find the parent of Thado Minsaw of Prome
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?parent .
}

# Step 4: Determine the child of this parent
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/child> ?child .
  FILTER(?parent = [INSERT_PARENT_URI_HERE]) # Replace with actual URI from step 3
}

# Step 5: Find the parent of the child identified in step 4
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/parent> ?result .
  FILTER(?child = [INSERT_CHILD_URI_HERE]) # Replace with actual URI from step 4
}
```

Note: The placeholders `[INSERT_FATHER_URI_HERE]`, `[INSERT_PARENT_URI_HERE]`, and `[INSERT_CHILD_URI_HERE]` need to be replaced with the actual URIs obtained from executing each respective query.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
404,60,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia's spouse
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Determine the father of that spouse
  ?spouse <http://dbpedia.org/ontology/father> ?father .

  # Step 3: Find the children of this father
  ?father <http://dbpedia.org/ontology/child> ?child .

  # Step 4: Ensure these children are also spouses of individuals who were born as royalty and share the birth name
  ?child <http://dbpedia.org/ontology/spouse> ?royalSpouse .
  ?royalSpouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?royalSpouse <http://dbpedia.org/ontology/birthName> ""Victoria Louise""^^<http://www.w3.org/2001/XMLSchema#string> .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
197,9,test,Give me the birthplace of the awardee of Leroy P. Steele Prize and birthplace of the member of FC Politehnica Timișoara.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
# Query for the birthplace of an awardee of Leroy P. Steele Prize
SELECT DISTINCT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Leroy_P._Steele_Prize> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

UNION

# Query for the birthplace of a member of FC Politehnica Timișoara
SELECT DISTINCT ?memberBirthPlace WHERE {
  ?teamMember <http://dbpedia.org/property/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> .
  ?teamMember <http://dbpedia.org/ontology/birthPlace> ?memberBirthPlace .
}
```",4,4,5,2,2,2,2,9,0,0,4,0,0.0,0
54,31,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?finalChild WHERE {
  # Step 1: Find the child of Thinkhaya of Pagan
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?thinkhayasChild .

  # Step 2: The father of that child is Thinkhaya himself, so we move to step 3

  # Step 3: Find the parent of Thado Minsaw of Prome
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/father> ?parentOfThado .

  # Step 4: Find the child of the parent identified in step 3
  ?parentOfThado <http://dbpedia.org/ontology/child> ?finalChild .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
9,26,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
SELECT ?almaMater WHERE {
  ?award <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Royal_Medals> .
  ?award <http://purl.org/dc/terms/creator> ?awardee .
  ?awardee <http://www.w3.org/2006/vcard/ns#hasEducation> ?education .
  ?education <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
  ?education <http://purl.org/dc/terms/publisher> ?almaMater .
}
```",3,4,4,3,1,3,3,71,0,0,31,0,0.0,0
391,54,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons and native of the figure known as Hub City.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Determine the claim to fame of Sherry Hormann's spouse that is a work
SELECT ?work WHERE {
  ?spouse <http://purl.org/dc/terms/subject> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
}

# Step 3: Find an actor of ""All About the Andersons"" and native to Hub City
SELECT ?actor WHERE {
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/All_About_the_Andersons> .
  ?actor <http://dbpedia.org/property/nativePlace> <http://dbpedia.org/resource/Hub_City> .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
345,20,test,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb and team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://dbpedia.org/ontology/birthDate> ?v4 . <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/manager> ?v5 . },"```sparql
SELECT ?nickname WHERE {
  # Step 1: Get Eiður Guðjohnsen's birth date
  <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?birthDate .

  # Step 2: Find soccer players and managers born on that date
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .

  # Step 3: Determine teams associated with these individuals
  ?team <http://dbpedia.org/property/teamOf> ?person .

  # Step 4: Identify Armando Heeb's team
  ?heebTeam <http://dbpedia.org/property/teamOf> <http://dbpedia.org/resource/Armando_Heeb> .

  # Step 5: Find sports clubs that are organizations and soccer clubs
  ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub> .
  ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .

  # Step 6: Determine nicknames for these clubs
  ?club <http://dbpedia.org/property/nickname> ?nickname .
  
  FILTER(?team = ?heebTeam)
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
617,43,test,"Give me the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find the child of Antiochus III who is royalty
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the successor of Antiochus (son of Antiochus III) and their child who is royalty
  ?antiochus <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?successor <http://dbpedia.org/ontology/successor> ?antiochus .
  ?royalChild <http://dbpedia.org/ontology/birthParent> ?successor .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the spouse of this royal child
  ?spouse <http://dbpedia.org/ontology/spouse> ?royalChild .

  # Step 4: Identify the parent of Nysa, wife of Pharnaces I of Pontus
  ?nysa <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> .
  ?parent <http://dbpedia.org/ontology/birthParent> ?nysa .

  # Step 5: Combine conditions to find the result
  FILTER (?child = ?result && ?spouse = ?result && ?parent = ?result)
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
801,20,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
SELECT ?work ?producer WHERE {
  <http://dbpedia.org/resource/50_Cent> <http://dbpedia.org/ontology/work> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  OPTIONAL { ?work <http://dbpedia.org/property/producer> ?producer . }
}
```",3,6,4,2,2,3,3,71,0,0,27,0,0.0,0
360,21,test,Give me the writer of The Roaring Silence and native of Johannesburg and reference to the author of Blinded by the Light.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?writer WHERE {
  ?writer <http://dbpedia.org/ontology/writtenWork> <http://dbpedia.org/resource/The_Roaring_Silence> .
  ?writer <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> .
  ?author <http://dbpedia.org/ontology/authored> <http://dbpedia.org/resource/Blinded_by_the_Light_(novel)> .
  ?reference <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?writer .
  FILTER (?author = ?reference)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
801,39,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of Westside Story (song).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify the writer of ""What U See Is What U Get"" who is a musical artist and an artist.
  <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://purl.org/dc/terms/creator> ?writer .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Step 2: Find albums produced by this writer, specifically ""Westside Story (song)"".
  ?writer <http://dbpedia.org/property/producedAlbums> ?album .
  FILTER(?album = <http://dbpedia.org/resource/Westside_Story_(song)>)

  # Step 3: Identify associated musical artists of these albums.
  ?album <http://purl.org/dc/terms/contributor> ?associatedArtist .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
314,26,test,"Give me the person deceased at the headquarter of House of Sombrerete and commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of 30.","SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?person WHERE {
  ?deathEvent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/House_of_Sombrerete> .
  ?deathEvent <http://dbpedia.org/ontology/deceased> ?person .
  
  ?event <http://dbpedia.org/ontology/commander> ?person .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/SocietalEvent> .
  
  ?awardEvent <http://dbpedia.org/ontology/awardee> ?person .
  ?awardEvent <http://dbpedia.org/property/number> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> .

  FILTER EXISTS { 
    ?event <http://dbpedia.org/ontology/profession> ?profession .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
281,57,test,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of Heather Roy.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
# Part 1: War of Beauchamp Seymour, 1st Baron Alcester
SELECT ?war1 WHERE {
  <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?war1 .
  ?war1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Part 2: Entity in the birthplace that is a country of the leader of the 1962 New South Wales state election
SELECT ?country WHERE {
  ?leader <http://dbpedia.org/property/election> <http://dbpedia.org/resource/1962_New_South_Wales_state_election> .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  BIND(?birthPlace AS ?country)
}

UNION

# Part 3: War of the profession, that is a military unit, of Heather Roy
SELECT ?war2 WHERE {
  <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?profession <http://dbpedia.org/ontology/battle> ?war2 .
  ?war2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,63,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v6 . },"```sparql
# Step 1: Find Sylvie Bermann's British settlement residence
SELECT ?residence WHERE {
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
}

# Step 2: Find Sean Pertwee's claim to fame that is both a film and a military conflict
SELECT ?claimToFame WHERE {
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 3: Find the person born with Jon Pertwee's birth name
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 4: Find the child of the person identified in step 3
SELECT ?child WHERE {
  ?person <http://dbpedia.org/ontology/child> ?child .
}

# Final Step: Find the native place of the residence from step 1
SELECT ?nativePlace WHERE {
  ?residence <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
659,63,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?commander WHERE {
  # Step 1: Identify the war involving both entities
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Step 2: Link the war to the 1st Light Cavalry Lancers Regiment
  <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/property/battle> ?war .

  # Step 3: Link the war to Rutger Jan Schimmelpenninck's military force
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/property/militaryForce> ?force .

  # Step 4: Ensure the war involves both forces
  ?war <http://dbpedia.org/property/battle> ?force .

  # Step 5: Find commanders of this war
  ?war <http://dbpedia.org/ontology/commander> ?commander .

  # Step 6: Link commander to a military force associated with an office holder from Kingdom of Ireland
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?officeHolder <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland> .

  ?commander <http://dbpedia.org/property/commanderInForce> ?force2 .
  ?force2 <http://dbpedia.org/property/militaryForce> ?officeHolder .
}
```",7,13,8,3,3,3,3,71,0,0,15,0,0.0,0
232,31,test,Give me the actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
# Step 1: Get Jon Pertwee's birth name
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Find the person born with that birth name
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  FILTER(?birthName = ""Jon Pertwee's birth name"") # Replace with actual birth name from step 1
}

# Step 3: Find the children of that person
SELECT ?child WHERE {
  ?person <http://dbpedia.org/ontology/child> ?child .
}

# Step 4: Get actors in Dog Soldiers (film)
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 5: Find overlap between actors and children
SELECT DISTINCT ?result WHERE {
  ?person <http://dbpedia.org/ontology/child> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
  ?film <http://dbpedia.org/ontology/starring> ?result .
  FILTER(?film = <http://dbpedia.org/resource/Dog_Soldiers_(film)>)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
528,60,test,"Give me the force of the person born as the birth name of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
# Query 1: Force of Narciso Campero
SELECT ?force WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Narciso Campero"" .
  ?person <http://dbpedia.org/ontology/militaryForce> ?force .
}

UNION

# Query 2: War of the military force of a societal event in Chile
SELECT ?war WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/battle> ?war .
}
```",6,7,7,3,2,3,3,71,0,0,4,0,0.0,0
232,24,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of London.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?actor WHERE {
  # Identify Sean Pertwee's claim to fame that is both a film and a military conflict
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/London> .
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/property/claimToFame> ?fame .
  ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Film> , <http://dbpedia.org/ontology/MilitaryConflict>) .

  # Find actors associated with this claim to fame
  ?fame <http://dbpedia.org/ontology/starring> ?actor .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
659,53,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . },"```sparql
SELECT DISTINCT ?commander WHERE {
  # Step 1: Find office holder native to Kingdom of Ireland
  ?officeHolder <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
  
  # Step 2: Identify forces associated with this office holder
  ?force <http://dbpedia.org/ontology/commander> ?commander .
  ?officeHolder <http://dbpedia.org/ontology/memberOf> ?force .

  # Step 3: Check if the commander was involved in the Battle of Leipzig
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Leipzig> .
  
  # Step 4: Verify military force is related to a societal event involving Rutger Jan Schimmelpenninck
  ?force <http://dbpedia.org/ontology/event> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?event <http://dbpedia.org/ontology/militaryConflict> ?militaryConflict .
  ?militaryConflict <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
}
```",6,10,7,3,3,3,3,71,0,0,6,0,0.0,0
54,59,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find child of Thinkhaya of Pagan
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?thinkhayaChild .

  # Step 2: Father of that child is Thinkhaya himself, so we skip this step

  # Step 3: Find parent of the child of Thado Minsaw of Prome
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/child> ?thadoChild .
  ?thadoChild <http://dbpedia.org/ontology/parent> ?thadoParent .

  # Step 4: Find the child of Thinkhaya who is also a parent from step 3
  ?thinkhayaChild <http://dbpedia.org/ontology/child> ?result .
  FILTER(?result = ?thadoParent)
}
```",6,6,7,3,2,3,3,71,0,2,1,0.0,0.0,0
10,25,test,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert and associated musical artist of the person born, that is an artist, as Matt Colton and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
# Step 1: Find Luke Francis Vibert who is an artist
SELECT ?luke WHERE {
  ?luke <http://dbpedia.org/ontology/birthName> ""Luke Francis Vibert"" .
  ?luke <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}

# Step 2: Find band members of Luke Francis Vibert
SELECT ?bandMember WHERE {
  ?luke <http://dbpedia.org/property/bandMember> ?bandMember .
  FILTER(?luke = ?lukeFromStep1) # Assuming we have the result from step 1 as ?lukeFromStep1
}

# Step 3: Find Matt Colton who is an artist and his associated musical artists
SELECT ?matt, ?associatedArtist WHERE {
  ?matt <http://dbpedia.org/ontology/birthName> ""Matt Colton"" .
  ?matt <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?matt <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}

# Step 4: Find the profession of Matt Colton
SELECT ?profession WHERE {
  ?matt <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(?matt = ?mattFromStep3) # Assuming we have the result from step 3 as ?mattFromStep3
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
801,54,test,"Give me the professional in the alter ego of The Shadow and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of Chris Taylor (music producer).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
# Step 1: Identify Chris Taylor's associated musical artists who are rappers.
SELECT ?rapper WHERE {
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?rapper .
  ?rapper <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  FILTER(CONTAINS(LCASE(?rapperLabel), ""rapper""))
}

# Step 2: Check if any of these rappers have an alter ego known as ""The Shadow.""
SELECT ?rapper WHERE {
  ?rapper <http://dbpedia.org/ontology/alterEgo> <http://dbpedia.org/resource/The_Shadow_(comics)> .
}

# Step 3: Identify works produced by Chris Taylor that are musical works and songs.
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/producer> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
}

# Step 4: Find the professional (musical artist) involved in these works.
SELECT DISTINCT ?professional WHERE {
  ?work <http://dbpedia.org/ontology/artist> ?professional .
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
994,49,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find the associated musical artist of Watchtower (band)
SELECT ?associatedArtist WHERE {
  <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

# Step 2: Identify the person born as Don Dokken's persona and their band membership
SELECT ?person ?bandMember WHERE {
  ?persona <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?persona <http://dbpedia.org/property/birthName> ""Don Dokken"" .
  ?person <http://dbpedia.org/ontology/birthName> ?persona .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?bandMember .
}

# Step 3: Find the associated musical artist of this band member
SELECT ?finalArtist WHERE {
  ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalArtist .
}
```

Note: This query is structured in steps and may need to be executed sequentially or combined depending on the SPARQL endpoint's capabilities.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
392,28,test,"Give me the entity in the region, that is a country, of Central European Time and region of the time zone, that is a sports event, of Aguilar de Segarra and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v5 . ?v5 <http://dbpedia.org/ontology/province> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
SELECT ?entity WHERE {
  # Step 1: Find the country associated with Central European Time
  ?cet <http://dbpedia.org/ontology/timeZone> ?region .
  ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 2: Find the sports event related to Aguilar de Segarra's time zone region
  <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?timeZoneRegion .
  ?timeZoneRegion <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent> .

  # Step 3: Find the Italian settlement (province) of Sebastiano Bianchetti
  <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> ;
             <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .

  # Final step: Ensure the entity satisfies all conditions
  ?entity = ?region .
  ?entity = ?timeZoneRegion .
  ?entity = ?residence .
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
356,18,test,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton and player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v1 <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
# Step 1: Find the native of Wolverhampton who is both a soccer player and a soccer manager
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Wolverhampton>.
  ?person <http://dbpedia.org/ontology/profession> ?profession.
  FILTER (
    EXISTS { ?profession <http://www.w3.org/2000/01/rdf-schema#label> ""soccer player"" }
    && EXISTS { ?profession <http://www.w3.org/2000/01/rdf-schema#label> ""soccer manager"" }
  )
}

# Step 2: Find the predecessor of the 2015 Sacramento Republic FC season
SELECT ?predecessor WHERE {
  <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/predecessor> ?predecessor.
  ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/SportsTeamSeason> | <http://dbpedia.org/ontology/SoccerClubSeason>).
}

# Step 3: Find the successor of this predecessor
SELECT ?successor WHERE {
  ?predecessor <http://dbpedia.org/ontology/successor> ?successor.
}

# Step 4: Identify the player in this successor season
SELECT ?player WHERE {
  ?successor <http://dbpedia.org/ontology/player> ?player.
}

# Step 5: Determine the team associated with this player
SELECT ?team WHERE {
  ?player <http://dbpedia.org/ontology/team> ?team.
}
```

Note: This is a conceptual breakdown and may require adjustments based on actual data availability in DBpedia. Each step assumes that the necessary properties exist and are correctly linked.",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
312,8,test,Give me the entity in the birthplace of Giorgio Grigolli and entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?entity WHERE {
  # Find Giorgio Grigolli's birthplace
  <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Find entities related to the birthplace and Province of Bergamo
  {
    ?entity <http://www.w3.org/2004/02/skos/core#broader> ?birthPlace .
  } UNION {
    ?entity <http://dbpedia.org/ontology/location> ?birthPlace .
  }
  
  # Ensure the entity is also related to Province of Bergamo
  ?entity <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Province_of_Bergamo> .
}
```",3,3,4,2,2,2,2,9,0,0,228,0,0.0,0
314,22,test,Give me the awardee of the award of Sergei Makovetsky and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
# Step 1: Find awards associated with Sergei Makovetsky
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Sergei_Makovetsky> <http://purl.org/dc/terms/relation> ?award .
}

# Step 2: Identify the headquarter of House of Sombrerete and find deceased persons there
SELECT DISTINCT ?deceasedPerson WHERE {
  ?house <http://dbpedia.org/ontology/headquarters> ?headquarter .
  FILTER(?house = <http://dbpedia.org/resource/House_of_Sombrerete>)
  
  ?deceasedPerson <http://www.w3.org/2002/07/owl#sameAs> ?personUri .
  ?personUri <http://dbpedia.org/ontology/deathPlace> ?headquarter .
  ?personUri <http://dbpedia.org/ontology/isDead> ""true""^^<http://www.w3.org/2001/XMLSchema#boolean> .
}

# Step 3: Find common awardees
SELECT DISTINCT ?commonAwardee WHERE {
  # Awardees from Sergei Makovetsky's awards
  ?award <http://purl.org/dc/terms/relation> ?commonAwardee .
  FILTER EXISTS { 
    <http://dbpedia.org/resource/Sergei_Makovetsky> <http://purl.org/dc/terms/relation> ?award .
  }
  
  # Deceased persons at House of Sombrerete's headquarter
  ?deceasedPerson <http://www.w3.org/2002/07/owl#sameAs> ?commonAwardeeUri .
  FILTER EXISTS {
    ?house <http://dbpedia.org/ontology/headquarters> ?headquarter .
    FILTER(?house = <http://dbpedia.org/resource/House_of_Sombrerete>)
    
    ?deceasedPerson <http://dbpedia.org/ontology/deathPlace> ?headquarter .
    ?deceasedPerson <http://dbpedia.org/ontology/isDead> ""true""^^<http://www.w3.org/2001/XMLSchema#boolean> .
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
54,51,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of Narapati I of Ava.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?predecessor WHERE {
  # Step 1: Find the child of Narapati I of Ava
  <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?narapatiChild .

  # Step 2: Find the parent of that child
  ?narapatiChild <http://dbpedia.org/ontology/parent> ?parent .

  # Step 3: Ensure this parent is a reference to Thihapate of Mohnyin and is an office holder and royalty
  FILTER(?parent = <http://dbpedia.org/resource/Thihapate_of_Mohnyin>)
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the predecessor of this individual
  ?parent <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
182,28,test,Give me the war of the work of Gotabhaya Rajapaksa and entity in the nationality of Tamara Kunanayakam and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v5 . },"```sparql
# Step 1: Get works by Gotabhaya Rajapaksa
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://purl.org/dc/terms/creator> ?work .
}

# Step 2: Find wars related to these works
SELECT DISTINCT ?war WHERE {
  ?work <http://dbpedia.org/ontology/topic> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 3: Get Tamara Kunanayakam's nationality
SELECT ?nationality WHERE {
  <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""nationality""))
}

# Step 4: Find wars involving the nationality entity
SELECT DISTINCT ?war WHERE {
  ?entity <http://dbpedia.org/ontology/nationality> ?nationality .
  ?war <http://dbpedia.org/ontology/belligerent> ?entity .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 5: Get author of works related to the 2019 Sri Lanka Easter bombings
SELECT ?author WHERE {
  <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://purl.org/dc/terms/creator> ?author .
}

# Step 6: Find wars associated with this author
SELECT DISTINCT ?war WHERE {
  ?author <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?war <http://dbpedia.org/ontology/belligerent> ?birthPlace .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
959,61,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?finalManager WHERE {
  # Step 1: Find the manager of the 1998 Kashima Antlers season
  <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?manager .
  
  # Ensure the manager is a sports manager
  ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .

  # Step 2: Find the team managed by this manager
  ?team <http://dbpedia.org/ontology/manager> ?manager .
  
  # Step 3: Identify leaders of the 2010 Japanese House of Councillors election and their residence countries
  ?election <http://dbpedia.org/property/electedLeader> ?leader .
  FILTER(?election = <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election>)
  
  # Ensure the leader is a politician
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  
  # Find the residence country of this leader
  ?leader <http://dbpedia.org/property/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 4: Find the sports manager native to that country
  ?finalManager <http://dbpedia.org/ontology/nativePlace> ?residence .
  
  # Ensure this final manager is a sports manager
  ?finalManager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
}
```",6,9,7,3,2,3,3,71,0,0,6,0,0.0,0
179,18,test,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of the child of Bhumibol Adulyadej.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT DISTINCT ?person WHERE {
  # Step 1: Find children of Nakkhatra Mangala who are royalty
  ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nakkhatra_Mangala> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find grandchildren of Nakkhatra Mangala who are children of Bhumibol Adulyadej
  ?grandchild <http://dbpedia.org/ontology/child> ?child .
  ?grandchild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Bhumibol_Adulyadej> .

  # Step 3: Retrieve the person born with that name (birth name)
  ?person <http://dbpedia.org/ontology/birthName> ?grandchild .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
547,36,test,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Query for the resting place of James Burton (Egyptologist)
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/burial> ?restingPlace .
}

UNION

# Query for the resting place of the awardee of Gerald Graham's award
SELECT ?awardeeRestingPlace WHERE {
  ?award <http://dbpedia.org/property/recipient> ?awardee .
  <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/ontology/receivesAward> ?award .
  ?awardee <http://dbpedia.org/ontology/burial> ?awardeeRestingPlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
427,51,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of Lamberto Andreotti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Task 1: Find the party of Romano Prodi who is an office holder and a politician.
SELECT ?party WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Romano Prodi"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/ontology/memberOfParliament> ?party .
}

UNION

SELECT ?party WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Romano Prodi"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/ontology/politicalParty> ?party .
}

UNION

# Task 2: Find the party of Lamberto Andreotti's father.
SELECT ?fatherParty WHERE {
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/politicalParty> ?fatherParty .
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
747,50,test,"Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Part 1: Band of Tracey Elizabeth McSween (Tracy Bonham)
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Tracy_Bonham> <http://www.w3.org/2000/01/rdf-schema#label> ""Tracey Elizabeth McSween""@en .
  OPTIONAL { 
    <http://dbpedia.org/resource/Tracy_Bonham> <http://dbpedia.org/ontology/memberOf> ?band .
  }
}

UNION

# Part 2: Band of the writer of a song by Amba Shepherd
SELECT ?writerBand WHERE {
  ?song <http://purl.org/dc/terms/creator> ?writer .
  ?song <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  ?song <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Amba_Shepherd> .
  OPTIONAL {
    ?writer <http://dbpedia.org/ontology/memberOf> ?writerBand .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
9,28,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as QUB and alma mater of Allen Hill (scientist).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT DISTINCT ?almaMater WHERE {
  # Find the mayor who is a politician for Northern Ireland Forum
  ?mayor <http://dbpedia.org/ontology/politician> _:a .
  ?mayor <http://dbpedia.org/property/mayorFor> <http://dbpedia.org/resource/Northern_Ireland_Forum> .

  # Find the figure known as QUB (Queen's University Belfast)
  ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""QUB""@en .
  
  # Find Allen Hill's alma mater
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaHill .

  # Ensure the mayor is associated with QUB and has the same alma mater as Allen Hill
  ?mayor <http://www.w3.org/2000/01/rdf-schema#label> ?figure .
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Ensure the alma mater is the same for both the mayor and Allen Hill
  FILTER (?almaMater = ?almaHill)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
9,70,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
SELECT ?figure WHERE {
  # Step 1: Find an organization in Northern Ireland that is also an educational institution.
  ?org <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
       <http://dbpedia.org/ontology/location> ?location ;
       <http://dbpedia.org/ontology/type> ?type .
  FILTER (?location = <http://dbpedia.org/resource/Northern_Ireland> && 
          ?type = <http://dbpedia.org/ontology/EducationalInstitution>) .

  # Step 2: Find a politician who was the mayor of the Northern Ireland Forum and attended this institution.
  ?politician <http://dbpedia.org/ontology/almaMater> ?org ;
              <http://dbpedia.org/ontology/politicalParty> ?party .
  FILTER EXISTS { 
    ?mayorship <http://dbpedia.org/ontology/officeHolder> ?politician ;
               <http://dbpedia.org/ontology/officeName> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  }

  # Step 3: Determine an award associated with Royal Medals.
  ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award> ;
         <http://dbpedia.org/property/reference> ?reference .
  FILTER (?reference = <http://dbpedia.org/resource/Royal_Medals>) .

  # Step 4: Identify an awardee of this award who also attended the same educational institution.
  ?awardee <http://dbpedia.org/ontology/almaMater> ?org ;
           <http://dbpedia.org/ontology/receivedAward> ?award .

  # Final step: Find the nickname of this organization.
  ?org <http://dbpedia.org/property/nickname> ?figure .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
184,52,test,"Give me the child of the child of Archduke Joseph Karl of Austria and parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
SELECT ?individual WHERE {
  # Step 1: Find children of Archduke Joseph Karl
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
  
  # Step 2: Find grandchildren (children of the child)
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .

  # Step 3: Identify who is a parent of Archduchess Ilona
  ?parent <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .
  
  # Step 4: Find the native of a landmark at elevation 96.0 that is a settlement
  ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#lat> ?latitude ;
            <http://www.w3.org/2003/01/geo/wgs84_pos#long> ?longitude .
  FILTER (?elevation = 96.0)
  ?native <http://dbpedia.org/ontology/birthPlace> ?landmark .

  # Step 5: Find the individual who satisfies both conditions
  VALUES ?individual { ?grandchild ?parent }
}
```

Note: The query assumes that DBpedia has structured data for these relationships and properties. Adjustments may be needed based on actual data availability.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
391,52,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of All About the Andersons and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
# Step 1: Find the nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/nickName> ?nickname .
}

# Step 2: Check if this figure is an actor in ""All About the Andersons""
SELECT ?actor WHERE {
  ?figure <http://dbpedia.org/ontology/nickName> ?nickname .
  ?figure <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/All_About_the_Andersons> .
}

# Step 3: Find Michael Ballhaus's claim to fame that is a work and its actors
SELECT ?work ?actor WHERE {
  <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/claimToFame> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?work <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 4: Find the overlap between actors from steps 2 and 3
SELECT DISTINCT ?commonActor WHERE {
  { ?figure <http://dbpedia.org/ontology/nickName> ?nickname . 
    ?figure <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/All_About_the_Andersons> .
    ?figure <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> . }
  UNION
  { ?work <http://dbpedia.org/ontology/starring> ?commonActor .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/claimToFame> ?work . }
}

# Step 5: Find the birthplace of the overlapping figure
SELECT ?birthPlace WHERE {
  ?commonActor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
994,47,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
# Step 1: Find Fredrik Thordendal's band that is an organization
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/memberOf> ?band .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}

# Step 2: Find a band member of the above band that is part of another band and group which are organizations
SELECT ?memberBand WHERE {
  ?bandMember <http://dbpedia.org/ontology/memberOf> ?band .
  ?bandMember <http://dbpedia.org/ontology/memberOf> ?memberBand .
  ?memberBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?memberBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
  ?memberBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}

# Step 3: Find the associated musical artist of Watchtower (band)
SELECT ?watchtowerArtist WHERE {
  <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
}

# Step 4: Find the common associated musical artist
SELECT DISTINCT ?commonArtist WHERE {
  ?artist1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
  ?artist2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?memberBand .
  FILTER (?artist1 = ?artist2)
  BIND(?artist1 AS ?commonArtist)
}
```",5,9,6,3,2,3,3,71,0,0,5,0,0.0,0
659,66,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v6 . }","```sparql
SELECT ?commander WHERE {
  # Find military force of Arthur Wellesley, 1st Duke of Wellington
  <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/militaryForce> ?force .
  
  # Ensure the force is linked to a societal event and military conflict involving Rutger Jan Schimmelpenninck
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?event <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  FILTER(?force = ?event)
  
  # Find the commander of this force
  ?commander <http://dbpedia.org/ontology/commander> ?force .

  # Ensure the commander is involved in a war related to the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?commander <http://dbpedia.org/ontology/commander> ?war .
  ?war <http://dbpedia.org/ontology/militaryForce> <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> .
}
```",7,12,8,3,3,3,3,71,0,0,15,0,0.0,0
547,65,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
# Part 1: Resting place of an actor from a show with Emily Richard
SELECT ?actorRestingPlace WHERE {
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/E._Richard>.
  ?show <http://dbpedia.org/ontology/starring> ?actor.
  ?actor <http://dbpedia.org/ontology/deathPlace> ?actorDeathPlace.
  OPTIONAL { ?actorDeathPlace <http://dbpedia.org/ontology/burialPlace> ?actorRestingPlace. }
}

UNION

# Part 2: Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT ?awardeeRestingPlace WHERE {
  ?person <http://dbpedia.org/property/honours> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George>.
  OPTIONAL { ?person <http://dbpedia.org/ontology/deathPlace> ?awardeeDeathPlace. }
  OPTIONAL { ?awardeeDeathPlace <http://dbpedia.org/ontology/burialPlace> ?awardeeRestingPlace. }
}

UNION

# Part 3: Resting place of a child of James Burton (property developer)
SELECT ?childRestingPlace WHERE {
  <http://dbpedia.org/resource/J._W._Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child.
  OPTIONAL { ?child <http://dbpedia.org/ontology/deathPlace> ?childDeathPlace. }
  OPTIONAL { ?childDeathPlace <http://dbpedia.org/ontology/burialPlace> ?childRestingPlace. }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
547,71,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/awards> ?v7 . ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v8 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v7 . ?v4 <http://dbpedia.org/property/starring> ?v5 . }","```sparql
# Part 1: Resting place of the awardee of Gerald Graham's award
SELECT DISTINCT ?awardeeRestingPlace WHERE {
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  ?award <http://dbpedia.org/property/awardedBy> <http://dbpedia.org/resource/Gerald_Graham> .
  OPTIONAL { ?awardee <http://dbpedia.org/ontology/restingPlace> ?awardeeRestingPlace . }
}

UNION

# Part 2: Resting place of the actor in a show with Emily Richard
SELECT DISTINCT ?actorRestingPlace WHERE {
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> .
  ?show <http://dbpedia.org/ontology/starring> ?actor .
  OPTIONAL { ?actor <http://dbpedia.org/ontology/restingPlace> ?actorRestingPlace . }
}

UNION

# Part 3: Resting place of the child of the child of William Haliburton
SELECT DISTINCT ?grandchildRestingPlace WHERE {
  ?parent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton> .
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?parent .
  OPTIONAL { ?grandchild <http://dbpedia.org/ontology/restingPlace> ?grandchildRestingPlace . }
}
```",9,9,10,3,3,3,3,71,0,0,1,0,0.0,0
55,28,test,"Give me the band of the reference, that is a band, to Newsted and band member of the producer, that is a band, of Used to Love Her and band member of the band member, that is a band and a group, of San Francisco Symphony.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?band WHERE {
  # Find bands referencing Newsted as a member
  ?newstedBand <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Mike_Newsted> .
  
  # Find the producer of ""Used to Love Her"" who is also a band member
  ?producer <http://dbpedia.org/property/produced> <http://dbpedia.org/resource/Used_to_Love_Her> .
  ?producerBand <http://dbpedia.org/ontology/member> ?producer .

  # Find the band members of San Francisco Symphony who are both a band and a group
  ?symphonyMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/San_Francisco_Symphony> .
  ?symphonyMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?symphonyMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .

  # Find the band that connects all these criteria
  ?band <http://dbpedia.org/ontology/member> ?newstedBand .
  ?band <http://dbpedia.org/ontology/member> ?producerBand .
  ?band <http://dbpedia.org/ontology/member> ?symphonyMember .
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
303,25,test,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Arnulfo Arias and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v4 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v4 . },"```sparql
SELECT ?entity WHERE {
  # Step 1: Find the country of El Valle de Antón
  <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/location> ?country .
  
  # Ensure it's a country
  ?country <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 2: Find the party of Arnulfo Arias
  <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/memberOf> ?party .
  
  # Step 3: Find the commander in United States invasion of Panama who is a politician
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/United_States_invasion_of_Panama> .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 4: Find an entity that is in the country, related to the party and commander
  ?entity <http://dbpedia.org/ontology/location> ?country .
  ?entity <http://dbpedia.org/ontology/memberOf> ?party .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  
  # Ensure it's a country
  FILTER(?type = <http://dbpedia.org/ontology/Country>)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
404,49,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  ?princess a <http://dbpedia.org/ontology/Royalty> ;
            rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  ?princess <http://dbpedia.org/ontology/spouse> ?spouse .

  ?spouse <http://dbpedia.org/ontology/father> ?father .

  ?father <http://dbpedia.org/ontology/child> ?child .

  ?child <http://dbpedia.org/ontology/spouse> ?result .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
427,62,test,Give me the reference to the name of the party of Michele Pinto and party of the father of the alumnus of Massachusetts Institute of Technology and party of Romano Prodi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v6 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?michelePintoParty ?fatherOfAlumnusParty ?romanoProdiParty WHERE {
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/politicalParty> ?michelePintoParty .
  
  ?alumnus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AlumniOf> ;
           <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/politicalParty> ?fatherOfAlumnusParty .
  
  FILTER EXISTS { ?alumnus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AlumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> }
  
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?romanoProdiParty .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
547,48,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query for the resting place of the child's child of William Haliburton
SELECT DISTINCT ?grandchildRestingPlace WHERE {
  # Find children of William Haliburton
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton> .
  
  # Find grandchildren (children of the above children)
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
  
  # Get resting places of these grandchildren
  ?grandchild <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  OPTIONAL { ?restingPlace <http://www.w3.org/2000/01/rdf-schema#label> ?grandchildRestingPlace . }
}

UNION

# Query for the resting place of awardees of Knight Grand Cross of the Order of St Michael and St George
SELECT DISTINCT ?awardeeRestingPlace WHERE {
  # Find individuals awarded with the honor
  ?person <http://dbpedia.org/ontology/honour> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
  
  # Get their resting places
  ?person <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  OPTIONAL { ?restingPlace <http://www.w3.org/2000/01/rdf-schema#label> ?awardeeRestingPlace . }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
16,38,test,Give me the professional in the profession of Satomi Ishihara and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT ?professional WHERE {
  # Find Satomi Ishihara's profession
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?profession .

  # Find Gigi Rice's birth name
  <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?birthName .

  # Find a person born with that name and their profession
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
  ?person <http://dbpedia.org/ontology/profession> ?profession .

  FILTER(?profession = ?profession) # Ensure the professions match

  BIND(?person AS ?professional)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
404,31,test,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?parent ?spouse WHERE {
  # Step 1: Identify Prince Ernest Augustus and find his parent
  <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914)> <http://dbpedia.org/ontology/parent> ?parent .

  # Step 2: Identify Princess Victoria Louise of Prussia's birth name
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?birthName .
  
  # Step 3: Check if the birth name is categorized as Royalty
  ?birthName <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the spouse of Prince Ernest Augustus who matches the birth name criteria
  ?spouse <http://dbpedia.org/property/birthName> ?birthName .
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914)> .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
492,49,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
# Step 1: Find the capital of Khemis Miliana District
SELECT ?capital WHERE {
  <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?country .
  ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital .
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}

# Step 2: Find person decedent at the capital
SELECT DISTINCT ?decedent WHERE {
  ?capital <http://dbpedia.org/property/capital> ?countryCapital .
  ?person <http://dbpedia.org/ontology/deathPlace> ?countryCapital .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
}

# Step 3: Find the work of Joseph C. Satterthwaite
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/work> ?work .
}

# Step 4: Find person decedent at this work
SELECT DISTINCT ?decedent WHERE {
  ?work <http://dbpedia.org/property/relatedTo> ?person .
  ?person <http://dbpedia.org/ontology/deathPlace> ?work .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
}
```",5,6,6,3,2,3,3,71,0,0,16,0,0.0,0
10,20,test,"Give me the professional in  and associated musical artist of Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?professional ?associatedArtist ?bandMember WHERE {
  # Matt Colton's professional role
  <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/profession> ?professional .

  # Associated musical artists with Matt Colton
  OPTIONAL { 
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  }

  # Band members of Luke Francis Vibert, ensuring he is an artist
  {
    SELECT ?bandMember WHERE {
      <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
      <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://dbpedia.org/property/memberOfBand> ?bandMember .
    }
  }

}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
328,66,test,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/property/office> ?v2 . }","```sparql
SELECT ?commander WHERE {
  # Find the military force commanded by Ferenc Szálasi
  ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> .
  
  # Find the award received by Bruce Fraser, 1st Baron Fraser of North Cape
  ?award <http://dbpedia.org/property/recipient> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .

  # Identify Gustav Jonson's role and the government agency he led
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?officeHolder <http://dbpedia.org/ontology/politician> true .
  ?officeHolder foaf:name ""Gustav Jonson"" .
  ?agency <http://dbpedia.org/property/leader> ?officeHolder .
  ?agency <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .

  # Find the commander who fits all criteria
  ?commander <http://dbpedia.org/ontology/memberOfMilitaryForce> ?force .
  ?commander <http://dbpedia.org/property/awardee> ?award .
  ?agency <http://dbpedia.org/ontology/commander> ?commander .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
427,34,test,Give me the party of Romano Prodi and reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?prodiParty (GROUP_CONCAT(?pintoPartyName; separator="", "") AS ?pintoPartyNames) WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?prodiParty .
  
  OPTIONAL {
    <http://dbpedia.org/resource/Michele_Pinto_(politician)> <http://dbpedia.org/ontology/politicalParty> ?pintoParty .
    ?pintoParty rdfs:label ?pintoPartyName .
    FILTER (lang(?pintoPartyName) = ""en"")
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
617,70,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find the successor of Antiochus who is royalty
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of this successor
  ?child <http://dbpedia.org/ontology/birthParent> ?successor .

  # Step 3: Identify the spouse of this child
  ?spouse <http://dbpedia.org/ontology/spouse> ?child .

  # Step 4: Identify the commander in the Battle of Panium
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Battle_of_Panium> .

  # Step 5: Find the child of this commander
  ?commandersChild <http://dbpedia.org/ontology/birthParent> ?commander .

  # Step 6: Identify the successor of Seleucus II Callinicus who is royalty and their child
  ?royalSuccessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
  ?royalSuccessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?royalsChild <http://dbpedia.org/ontology/birthParent> ?royalSuccessor .

  # Ensure the spouse is connected through these relationships
  FILTER(?spouse = ?commandersChild && ?child = ?royalsChild)
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
184,58,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of Géza von Habsburg and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
# Step 1: Find the parent of Archduchess Margaret of Austria (born 1925)
SELECT ?parentMargaret WHERE {
  <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> <http://dbpedia.org/ontology/birth> ?birth .
  ?birth <http://dbpedia.org/ontology/birthPlace> ?place .
  ?parentMargaret <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> .
}

# Step 2: Find the child of that parent
SELECT ?childOfParent WHERE {
  ?childOfParent <http://dbpedia.org/ontology/parent> ?parentMargaret .
}

# Step 3: Determine the parent of Géza von Habsburg and find their common child with step 2
SELECT ?commonChild WHERE {
  ?parentGéza <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
  ?commonChild <http://dbpedia.org/ontology/parent> ?parentMargaret .
  ?commonChild <http://dbpedia.org/ontology/parent> ?parentGéza .
}

# Step 4: Identify the child of Archduke Joseph Karl of Austria
SELECT ?childJosephKarl WHERE {
  ?childJosephKarl <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Joseph_Karl_of_Austria> .
}

# Step 5: Find the child of the entity identified in step 3 who is also a child of the entity from step 4
SELECT ?finalChild WHERE {
  ?finalChild <http://dbpedia.org/ontology/parent> ?commonChild .
  ?finalChild <http://dbpedia.org/ontology/parent> ?childJosephKarl .
}

# Step 6: Determine the parent of this last identified individual
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/child> ?finalChild .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
404,69,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v7 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
  ?princess <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Determine her spouse
  ?princess <http://dbpedia.org/property/spouse> ?spouse .

  # Step 3: Find the child of Ernest Augustus, Duke of Brunswick who is royalty
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Identify the father of the spouse of Princess Victoria Louise
  ?spouse <http://dbpedia.org/ontology/father> ?fatherOfSpouse .

  # Step 5: Find the spouse of the person identified in step 4
  ?fatherOfSpouse <http://dbpedia.org/property/spouse> ?finalSpouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,24,test,Give me the parent of Archduchess Ilona of Austria and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find the child of Archduke Joseph Karl of Austria
  <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?intermediateChild .

  # Step 2: Find the parent of Archduchess Ilona who is also a child from step 1
  <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/parent> ?result .
  
  FILTER(?intermediateChild = ?result)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
820,17,test,Give me the child of the parent of the professional in Actor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?grandChild WHERE {
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
  ?actor <http://dbpedia.org/ontology/parent> ?parent .
  ?parent <http://dbpedia.org/ontology/child> ?grandChild .
}
```",4,4,5,3,2,3,2,20,0,50,128,0.0,0.0,0
767,71,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v8 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . ?v5 <http://dbpedia.org/property/governor> ?v4 . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v4 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v7 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
SELECT ?alterEgo WHERE {
  # Step 1: Find the writer of ""Where It's At"" by Dustin Lynch
  <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://purl.org/dc/terms/creator> ?writer .

  # Step 2: Find the entity in the administration that is a settlement related to this writer
  ?administration <http://dbpedia.org/ontology/administration> ?settlement .
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?writer <http://dbpedia.org/ontology/placeOfBirth> ?settlement .

  # Step 3: Determine the alma mater associated with the administration of George Kilbon Nash
  <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/administration> ?administration .
  ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Step 4: Locate Matthew Burland's persona, which is a fictional character, and find its alter ego
  <http://dbpedia.org/resource/Matthew_Burland> <http://dbpedia.org/ontology/persona> ?persona .
  ?persona <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?persona <http://dbpedia.org/ontology/alterEgo> ?alterEgo .

  # Ensure the almaMater is related to the administration of George Kilbon Nash
  FILTER(?almaMater = ?administration)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
77,17,test,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw and war of Alexander Chechenskiy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/mayorOf> ?territory .
  ?territory <http://dbpedia.org/ontology/administeredBy> ?organisation .
  FILTER (?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>) .
  
  ?organisation <http://dbpedia.org/ontology/militaryForce> ?force .

  OPTIONAL {
    <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/war> ?war .
    FILTER (?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>)
  }
}
```",4,5,5,3,2,3,2,20,0,0,6,0,0.0,0
54,58,test,"Give me the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?individual WHERE {
  # Step 1: Find child of Thinkhaya of Pagan
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  
  # Step 2: Find parent of the child of Narapati I of Ava
  ?narapatiChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Narapati_I_of_Ava> .
  ?parent <http://dbpedia.org/ontology/birthChild> ?narapatiChild .

  # Step 3: Find predecessor of the child
  ?predecessor <http://dbpedia.org/ontology/successor> ?individual .

  # Step 4: Identify office holder and royalty related to Thihapate of Mohnyin
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?officeHolder <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .

  # Combine conditions
  FILTER (?individual = ?child && ?individual = ?parent && ?individual = ?predecessor && ?individual = ?officeHolder)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
391,55,test,"Give me the native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?native WHERE {
  # Step 1: Identify the figure known as Hub City
  ?hubCity <http://dbpedia.org/ontology/native> ?native .
  
  # Step 2: Find movies that are works and television shows featuring Roz Ryan
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> ;
         <http://dbpedia.org/ontology/work> ?work ;
         <http://dbpedia.org/ontology/televisionShow> ?tvShow .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .

  # Step 3: Identify actors whose claim to fame is related to Michael Ballhaus
  ?actor <http://dbpedia.org/ontology/starring> ?movie ;
         <http://dbpedia.org/ontology/claimToFame> ?fame .
  ?fame <http://www.w3.org/2000/01/rdf-schema#label> ""Michael Ballhaus"" .

  # Step 4: Determine the native of the figure who acted in such a movie
  ?native <http://dbpedia.org/ontology/starring> ?movie .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
701,28,test,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?entity WHERE {
  # Condition 1: Parent of Henuttawy (19th dynasty)
  ?entity <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> .

  # Condition 2: Spouse of Ramesses II
  ?entity <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> .

  # Condition 3: Parent of the child of Nefertari
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Nefertari> .
  ?entity <http://dbpedia.org/ontology/parent> ?child .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
16,45,test,Give me the spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University and professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Query for the spouse of Ted McGinley
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}

UNION

# Query for a person with specific criteria
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Specific Birth Name"" .
  ?person <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/OHIO_State_University> .
  ?person <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Actresses> .
}
```

Note: Replace `""Specific Birth Name""` with the actual birth name you are looking for.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
328,64,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in Eastern Front (World War II) and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?governmentAgencyLeader WHERE {
  # Step 1: Find Gustav Jonson's leader who is an office holder and a politician
  ?gustavJonsonLeader <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Gustav_Jonson> .
  ?gustavJonsonLeader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Politician> .

  # Step 2: Find the commander in the Eastern Front (World War II) associated with Gustav Jonson's leader
  ?easternFrontCommander <http://dbpedia.org/ontology/commander> ?gustavJonsonLeader .
  ?easternFrontCommander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .

  # Step 3: Find the awardee of the award given by this commander for their role in the Volcano and Ryukyu Islands campaign
  ?volcanoRyukyuCampaign <http://dbpedia.org/ontology/commander> ?easternFrontCommander .
  ?awardAwardee <http://dbpedia.org/ontology/awardee> ?volcanoRyukyuCampaign .

  # Step 4: Identify the government agency led by this awardee
  ?governmentAgencyLeader <http://dbpedia.org/ontology/leader> ?awardAwardee .
  ?governmentAgencyLeader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
54,52,test,Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find the child of Narapati I of Ava
  ?narapatiChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> .

  # Step 2: Find the father of the child of Thinkhaya of Pagan
  ?thinkhayasChild <http://dbpedia.org/ontology/father> ?thinkhaya .
  ?thinkhaya <http://www.w3.org/2000/01/rdf-schema#label> ""Thinkhaya of Pagan""@en .

  # Step 3: Find the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?ameittaPredecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .

  # Step 4: Find the common child from steps 1 and 2, who is also a successor of step 3
  ?commonChild <http://dbpedia.org/ontology/father> ?narapatiChild .
  ?commonChild <http://dbpedia.org/ontology/father> ?thinkhayasChild .
  ?ameittaPredecessor <http://dbpedia.org/ontology/successor> ?commonChild .

  # Step 5: Find the parent of this common child
  ?parent <http://dbpedia.org/ontology/child> ?commonChild .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
9,54,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as QUB.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
SELECT DISTINCT ?almaMater WHERE {
  # Part 1: Alma Mater of Awardee of Royal Medals
  { 
    ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Royal_Medals> .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  
  UNION
  
  # Part 2: Alma Mater of Mayor associated with Northern Ireland Forum and QUB
  { 
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?mayor <http://dbpedia.org/ontology/mayorFor> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
    FILTER EXISTS { 
      ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""QUB""@en .
      ?figure <http://dbpedia.org/ontology/personSameAs> ?mayor .
    }
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
492,68,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/author> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v5 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Find the commander of the Battle of Verdun
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 2: Find wars associated with that commander
SELECT DISTINCT ?war WHERE {
  ?commander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 3: Find the capital of Algeria and its decedents
SELECT DISTINCT ?decedent WHERE {
  <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/administrativeCapital> ?capital .
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?decedent <http://dbpedia.org/property/deathPlace> ?capital .
}

# Step 4: Identify works by the author of French Algeria and find decedents at that location
SELECT DISTINCT ?work WHERE {
  ?author <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/French_Algeria> .
  ?author <http://purl.org/dc/terms/creator> ?work .
}

SELECT DISTINCT ?decedent WHERE {
  ?work <http://dbpedia.org/ontology/deathPlace> ?location .
  ?decedent <http://dbpedia.org/property/deathPlace> ?location .
}

# Step 5: Find common commander
SELECT DISTINCT ?commonCommander WHERE {
  ?commander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?decedent1 <http://dbpedia.org/property/deathPlace> ?capital .
  ?decedent2 <http://dbpedia.org/property/deathPlace> ?location .
  FILTER(?commander = ?commonCommander)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
488,55,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in Boshin War and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
# Step 1: Identify Yūki Hideyasu's father who is a politician
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Yūki_Hideyasu> <http://xmlns.com/foaf/0.1/knows> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}

# Step 2: Find the death place of this father
SELECT ?deathPlace WHERE {
  ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}

# Step 3: Identify the commander in Boshin War and their birthplace
SELECT ?commander, ?birthPlace WHERE {
  <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Step 4: Find the father of Emperor Go-Mizunoo and his administration
SELECT ?father, ?administration WHERE {
  <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://xmlns.com/foaf/0.1/knows> ?father .
  ?father <http://dbpedia.org/ontology/officeHolder> ?administration .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
378,70,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT DISTINCT ?war ?commanderFame WHERE {
  # Step 1: Find commanders of the Peninsular War
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .

  # Step 2: Identify wars commanded by these commanders that are also societal events
  ?commander <http://dbpedia.org/ontology/battle> ?war .
  FILTER EXISTS { ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> }
  FILTER EXISTS { ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> }

  # Step 3: Find claim to fame of Thomas Trigge related to these wars
  OPTIONAL {
    <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/property/claimToFame> ?commanderFame .
    FILTER EXISTS { ?commanderFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> }
  }

  # Step 4: Identify wars associated with Carl Pontus Gahn
  OPTIONAL {
    <http://dbpedia.org/resource/C._P._Gahn> <http://dbpedia.org/property/birthPlace> ?birthPlace .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
            <http://dbpedia.org/property/birthPlace> ?birthPlace ;
            <http://dbpedia.org/ontology/battle> ?war .
  }
}
```",8,12,9,3,3,3,3,71,2,103,0,0.01904761904761905,1.0,0.03738317757009346
617,67,test,"Give me the parent of the child of the commander in Battle of Panium and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify the commander in the Battle of Panium
  <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?commander .

  # Step 2: Find the children of this commander
  ?child <http://dbpedia.org/ontology/father> ?commander .
  
  # Step 3: Determine the spouse who is a child of Antiochus III's successor and royalty
  ?spouse <http://dbpedia.org/ontology/spouse> ?child .
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?spouse <http://dbpedia.org/ontology/father> ?successor .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the parent of this identified person
  ?parent <http://dbpedia.org/ontology/fatherOrMother> ?spouse .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
747,60,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
# Step 1: Find the decedent athlete/soccer player at Zolotonosha
SELECT ?decedent WHERE {
  ?decedent <http://dbpedia.org/ontology/decedentPlace> <http://dbpedia.org/resource/Zolotonosha> .
  ?decedent <http://dbpedia.org/ontology/athlete> true .
  ?decedent <http://dbpedia.org/ontology/soccerPlayer> true .
}

# Step 2: Find a person born on the same date as the decedent
SELECT DISTINCT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  FILTER EXISTS { 
    ?decedent <http://dbpedia.org/ontology/decedentPlace> <http://dbpedia.org/resource/Zolotonosha> ;
               <http://dbpedia.org/ontology/athlete> true ;
               <http://dbpedia.org/ontology/soccerPlayer> true ;
               <http://dbpedia.org/ontology/birthDate> ?birthDate .
  }
}

# Step 3: Find the person with persona Shèna
SELECT DISTINCT ?person WHERE {
  ?person <http://dbpedia.org/ontology/persona> ""Shèna"" .
}

# Step 4: Determine any band associated with either of these two people
SELECT DISTINCT ?band WHERE {
  VALUES ?person { ?person1 ?person2 }
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
492,66,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v6 . ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Step 1: Find the capital of Khemis Miliana District
SELECT ?capital WHERE {
  <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/administrativeCapital> ?capital .
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}

# Step 2: Find the person decedent at this capital
SELECT DISTINCT ?decedent WHERE {
  ?deathEvent <http://dbpedia.org/ontology/deathPlace> ?capital .
  ?deathEvent <http://dbpedia.org/ontology/personDecedent> ?decedent .
}

# Step 3: Find the work of Joseph C. Satterthwaite
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/work> ?work .
  FILTER(CONTAINS(LCASE(STR(?work)), ""us assistant secretary of state for african affairs""))
}

# Step 4: Find the person decedent at this work
SELECT DISTINCT ?decedent WHERE {
  ?deathEvent <http://dbpedia.org/ontology/deathPlace> ?work .
  ?deathEvent <http://dbpedia.org/ontology/personDecedent> ?decedent .
}

# Step 5: Identify the war involving Frédéric-Georges Herr as a commander
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/commander> ?command .
  ?command <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 6: Find the person decedent associated with this war
SELECT DISTINCT ?decedent WHERE {
  ?deathEvent <http://dbpedia.org/ontology/deathPlace> ?war .
  ?deathEvent <http://dbpedia.org/ontology/personDecedent> ?decedent .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
778,19,test,"Give me the author of the work, that is a software, of the author of Pushd and popd and entity in the award of Ralph L. Brinster.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
# Step 1: Find the author of ""Pushd"" and ""Popd""
SELECT ?author WHERE {
  <http://dbpedia.org/resource/Pushd> <http://dbpedia.org/ontology/creator> ?author .
  UNION
  <http://dbpedia.org/resource/Popd> <http://dbpedia.org/ontology/creator> ?author .
}

# Step 2: Find a software work by this author
SELECT ?software WHERE {
  ?author <http://dbpedia.org/ontology/work> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software> .
}

# Step 3: Find an entity associated with an award received by Ralph L. Brinster
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/award> ?award .
  ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award> .
  ?award <http://dbpedia.org/ontology/entity> ?entity .
}

# Step 4: Find the author of the software identified in step 2
SELECT ?finalAuthor WHERE {
  ?software <http://dbpedia.org/ontology/creator> ?finalAuthor .
}
```

Note: This is a conceptual breakdown. In practice, you would need to execute these queries sequentially or combine them into a single query using subqueries or temporary variables.",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
360,22,test,"Give me the writer of the work, that is an album, of Dave Flett and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
# Step 1: Find Winnie Madikizela-Mandela's death place that is a settlement.
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}

# Step 2: Find Dave Flett's native place and identify albums associated with him.
SELECT ?album WHERE {
  ?flett <http://dbpedia.org/property/nativePlace> ?nativePlace .
  ?flett <http://dbpedia.org/ontology/work> ?album .
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalAlbum> .
  FILTER(?flett = <http://dbpedia.org/resource/Dave_Flett>)
}

# Step 3: Determine the writer(s) of those albums.
SELECT ?writer WHERE {
  ?album <http://purl.org/dc/terms/creator> ?writer .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
666,18,test,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach) and figure known as the nickname of England national beach soccer team.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  # Step 1: Find the team managed by Leonid Slutsky
  ?teamSeason <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky> .
  
  # Step 2: Ensure it's a soccer club and sports team season
  ?teamSeason <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason> ;
              <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Football_(soccer)> .
  
  # Step 3: Find the nickname of England national beach soccer team
  ?nickname <http://dbpedia.org/property/nickname> ""England"" .
  ?teamSeason <http://dbpedia.org/ontology/team> ?team .
  ?team <http://www.w3.org/2000/01/rdf-schema#label> ?nickname .

  # Step 4: Find players in the team
  ?player <http://dbpedia.org/property/playerInTeam> ?teamSeason .
}
```",5,8,6,3,2,3,2,20,0,0,2,0,0.0,0
701,20,test,Give me the parent of the child of Ramesses II and parent of Meritamen.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ramesses_II> .
  ?child <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Meritamen> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?parent <http://dbpedia.org/ontology/birthParent> ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,68,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v7 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Find the military force associated with Rutger Jan Schimmelpenninck
  ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  
  # Step 2: Ensure this force is a societal event, an event, and a military conflict
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  
  # Step 3: Find the native office holder of the Kingdom of Ireland
  ?officeHolder <http://dbpedia.org/property/nativePlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> ;
                <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  
  # Step 4: Ensure this office holder commanded in the same war as the force
  ?officeHolder <http://dbpedia.org/ontology/commander> ?war ;
                <http://dbpedia.org/property/memberOfMilitaryForce> ?force .
  
  # Step 5: Identify the figure known as 'Polish Horse'
  ?figure <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
          rdfs:label ""Polish Horse""@en .
  
  # Step 6: Ensure this figure was involved in a war that is an event and a military conflict
  ?figure <http://dbpedia.org/property/memberOfMilitaryForce> ?war ;
          ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  
  # Step 7: Return the military force that fits all criteria
  BIND(?force AS ?militaryForce)
}
```",8,16,9,3,3,3,3,71,0,0,15,0,0.0,0
9,45,test,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
SELECT ?almaMater WHERE {
  # Alma mater of John Alderdice, Baron Alderdice
  <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMater1 .

  # Alma mater of Allen Hill (scientist)
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMater2 .

  # Organization and educational institution in Northern Ireland with a nickname
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?nickname .
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Northern_Ireland> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Organisation> <http://dbpedia.org/ontology/EducationalInstitution>) .
  ?entity <http://dbpedia.org/ontology/almaMater> ?almaMater3 .

  # Ensure all alma maters are the same
  FILTER (?almaMater1 = ?almaMater2)
  FILTER (?almaMater2 = ?almaMater3)

  BIND(?almaMater1 AS ?almaMater) # Bind the common alma mater to the result variable
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
281,25,test,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?entity WHERE {
  ?heatherRoy <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?profession <http://dbpedia.org/property/memberOf> ?entity .
  ?entity <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
182,24,test,Give me the entity in the nationality of Tamara Kunanayakam and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Find the nationality of Tamara Kunanayakam
  <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?nationality .

  # Find wars associated with Gotabhaya Rajapaksa's work
  ?work <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> .
  ?work <http://dbpedia.org/ontology/war> ?war .

  # Find an entity that is both the nationality of Tamara Kunanayakam and involved in the war
  FILTER (?nationality = ?entity)
  OPTIONAL { ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?entityType . }
}
```",4,4,5,2,2,2,3,28,0,0,5,0,0.0,0
994,19,test,Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of Red Tide (band).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT DISTINCT ?commonArtist WHERE {
  # Find associated artists of Watchtower (band)
  <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
  
  # Find associated artists of Red Tide (band)
  <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?redTideArtist .

  # Find common associated artist
  FILTER (?watchtowerArtist = ?commonArtist || ?redTideArtist = ?commonArtist)
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
747,41,test,Give me the person born on the birth date of Pavlo Khudzik and band of Shèna and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Get Pavlo Khudzik's birth date
SELECT ?birthDate WHERE {
  <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

# Step 2: Find people born on the same date as Pavlo Khudzik
SELECT DISTINCT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  FILTER(?birthDate = ""Pavlo_Khudzik_birth_date"") # Replace with actual birth date from Step 1
}

# Step 3: Find the band associated with Shèna
SELECT DISTINCT ?band WHERE {
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/memberOf> ?band .
}

# Step 4: Find the writer of ""Apollo"" by Hardwell and their band
SELECT DISTINCT ?writerBand WHERE {
  <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://dbpedia.org/ontology/memberOf> ?writerBand .
}

# Step 5: Combine results to find the person who is a member of both bands
SELECT DISTINCT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  FILTER(?birthDate = ""Pavlo_Khudzik_birth_date"") # Replace with actual birth date from Step 1

  ?person <http://dbpedia.org/ontology/memberOf> ?band1 .
  ?person <http://dbpedia.org/ontology/memberOf> ?band2 .

  VALUES (?band1) { (<Shèna_band_uri>) } # Replace with actual URI from Step 3
  VALUES (?band2) { (<Apollo_writer_band_uri>) } # Replace with actual URI from Step 4
}
```

Note: The placeholders like `""Pavlo_Khudzik_birth_date""`, `<Shèna_band_uri>`, and `<Apollo_writer_band_uri>` need to be replaced with the actual values obtained from executing the respective subqueries.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
915,16,test,"Give me the resident of the birthplace, that is a settlement, of Stephen Verona and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://dbpedia.org/ontology/residence> ?v2 . <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?resident WHERE {
  # Step 1: Find Stephen Verona's birthplace that is a settlement
  <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 2: Find residents of that settlement
  ?resident <http://dbpedia.org/ontology/residence> ?birthPlace .

  # Step 3: Identify Phillip Spaulding's child who is a fictional and soap character
  ?child <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?child <http://dbpedia.org/property/isASoapCharacter> true .

  # Step 4: Find the father of this child
  ?resident <http://dbpedia.org/property/father> ?child .
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
184,49,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?commonParent WHERE {
  # Step 1: Find the parent of Archduchess Margaret of Austria (born 1925)
  <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> <http://dbpedia.org/ontology/parent> ?parentMargaret .

  # Step 2: Find the child of that parent
  ?parentMargaret <http://dbpedia.org/ontology/child> ?childOfParentMargaret .

  # Step 3: Identify the native of Budapest
  ?nativeBudapest <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?nativeBudapest <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .

  # Step 4: Find the parent of this native
  ?nativeBudapest <http://dbpedia.org/ontology/parent> ?parentNativeBudapest .

  # Step 5: Determine the common parent
  ?childOfParentMargaret <http://dbpedia.org/ontology/parent> ?commonParent .
  ?parentNativeBudapest <http://dbpedia.org/ontology/parent> ?commonParent .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
994,41,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Find associated artists of Watchtower
  ?watchtowerMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Watchtower_(band)> .
  
  # Step 2: Check if they are also band members of Don Dokken
  ?watchtowerMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Don_Dokken> .

  # Step 3: Find associated artists of these individuals
  ?watchtowerMember <http://dbpedia.org/ontology/associatedBand> ?associatedArtist .
  
  # Step 4: Ensure the associated artist is a band, group, or organization
  ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (
    ?type = <http://dbpedia.org/ontology/Band> ||
    ?type = <http://dbpedia.org/ontology/MusicalGroup> ||
    ?type = <http://dbpedia.org/ontology/Organisation>
  )
  
  # Additional condition: Associated artist must be linked to a band member of Meshuggah
  ?meshuggahMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Meshuggah> .
  ?meshuggahMember <http://dbpedia.org/ontology/associatedBand> ?associatedArtist .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
161,56,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in the force, that is an event, of the figure known as El Director and military force of Spanish Civil War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . }","```sparql
SELECT ?militaryForce WHERE {
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  
  ?militaryForce <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> .
  ?militaryForce <http://dbpedia.org/ontology/militaryForce> <http://dbpedia.org/resource/Spanish_Civil_War> .

  OPTIONAL {
    ?militaryForce <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> .
    FILTER (str(?militaryForce) = str(<http://dbpedia.org/resource/Francisco_Franco>) || 
            str(?militaryForce) = str(<http://dbpedia.org/resource/El_Director>))
  }
}
```",6,10,7,3,3,3,3,71,0,0,32,0,0.0,0
318,8,test,Give me the professional in the profession of Robert Xavier Rodriguez and person born in 1970.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?person WHERE {
  # Find the profession of Robert Xavier Rodriguez
  <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/ontology/profession> ?profession .

  # Find persons with the same profession and born in 1970
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  ?person <http://dbpedia.org/ontology/birthYear> ""1970""^^xsd:gYear .
}
```",3,3,4,2,2,2,2,9,0,0,7,0,0.0,0
659,43,test,"Give me the military force of Napoleonic Wars and commander in German campaign of 1813 and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
SELECT ?militaryForce ?campaignCommander ?war ?polishHorseWarCommander WHERE {
  # Identify military forces in the Napoleonic Wars
  ?militaryForce <http://dbpedia.org/ontology/partOf> <http://dbpedia.org/resource/Napoleonic_Wars> .

  # Find commander of the German campaign of 1813
  <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?campaignCommander .

  # Identify the war involving 'Polish Horse' as a military unit and organization
  <http://dbpedia.org/resource/Polish_Horse> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?unitType .
  FILTER (?unitType IN (<http://dbpedia.org/ontology/MilitaryUnit>, <http://dbpedia.org/ontology/Organisation>)).
  
  ?polishHorseWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?warType .
  FILTER (?warType IN (<http://dbpedia.org/ontology/MilitaryConflict>, <http://dbpedia.org/ontology/Event>)).
  
  # Find the commander of this specific war
  ?polishHorseWar <http://dbpedia.org/ontology/commander> ?polishHorseWarCommander .
}
```",5,9,6,3,3,3,3,71,0,0,6,0,0.0,0
963,19,test,"Give me the administration of the ruling party, that is a political party, in the location for 21205 and entity in the region, that is a country, of Central European Time.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
SELECT ?administration WHERE {
  # Step 1: Identify the entity for postal code ""21205""
  ?entity <http://dbpedia.org/ontology/postalCode> ""21205"" .
  
  # Step 2: Determine the location of this entity
  ?entity <http://dbpedia.org/ontology/location> ?location .

  # Step 3: Find countries in the Central European Time region
  ?country <http://www.w3.org/2006/time#during> ?cet .
  ?cet <http://www.w3.org/2006/time#inCalendar> ?calendar .
  ?calendar <http://dbpedia.org/ontology/name> ""Central European Time"" .

  # Step 4: Find the ruling political party in that country
  ?country <http://dbpedia.org/property/rulingParty> ?rulingParty .
  
  # Ensure it's a political party
  ?rulingParty <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .

  # Step 5: Retrieve the administration of that ruling party
  ?rulingParty <http://dbpedia.org/property/administration> ?administration .
}
```",5,7,6,3,2,3,2,20,0,0,84,0,0.0,0
391,53,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Identify the nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/nickName> ?nickname .
}

# Step 2: Find a movie that is also a work and television show with Roz Ryan
SELECT DISTINCT ?movie WHERE {
  ?movie <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Roz_Ryan> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
}

# Step 3: Find an actor in both the identified movie and ""The Departed""
SELECT DISTINCT ?actor WHERE {
  # Assuming ?movie is the result from step 2
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 4: Find the native place of this actor
SELECT ?nativePlace WHERE {
  # Assuming ?actor is the result from step 3
  ?actor <http://dbpedia.org/ontology/birthPlace> ?nativePlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,70,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
# Step 1: Find John Pertwee's child who is an actor, narrator, and producer
SELECT ?child WHERE {
  <http://dbpedia.org/resource/John_Pertwee> <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/John_Pertwee> .
  ?child <http://dbpedia.org/ontology/profession> ?profession .
  FILTER (
    EXISTS { ?profession <http://www.w3.org/2000/01/rdf-schema#label> ""Actor"" . }
    && EXISTS { ?profession <http://www.w3.org/2000/01/rdf-schema#label> ""Narrator"" . }
    && EXISTS { ?profession <http://www.w3.org/2000/01/rdf-schema#label> ""Producer"" . }
  )
}

# Step 2: Find the claim to fame of this child that includes a film and a military conflict
SELECT ?claimToFame WHERE {
  ?child <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (
    EXISTS { ?type <http://www.w3.org/2000/01/rdf-schema#label> ""Film"" . }
    && EXISTS { ?type <http://www.w3.org/2000/01/rdf-schema#label> ""MilitaryConflict"" . }
  )
}

# Step 3: Find the actor associated with these claims to fame who is a politician and office holder in France
SELECT ?actor WHERE {
  ?claimToFame <http://dbpedia.org/ontology/actor> ?actor .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (
    EXISTS { ?type <http://www.w3.org/2000/01/rdf-schema#label> ""Politician"" . }
    && EXISTS { ?type <http://dbpedia.org/ontology/officeHolder> ?office . }
    && ?actor <http://dbpedia.org/property/country> <http://dbpedia.org/resource/France> .
  )
}

# Step 4: Identify the residence of this French politician that is a settlement and British
SELECT ?residence WHERE {
  ?actor <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (
    EXISTS { ?type <http://www.w3.org/2000/01/rdf-schema#label> ""Settlement"" . }
    && EXISTS { ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . }
  )
}

# Step 5: Find the native of this British settlement
SELECT ?native WHERE {
  ?residence <http://dbpedia.org/ontology/nativeOf> ?native .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
16,69,test,Give me the spouse of the person born as the birth name of Ted McGinley and person born as the birth name of the alumnus of Ohio State University and professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v7 . },"```sparql
# Find Ted McGinley's birth name
SELECT ?tedBirthName WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?tedBirthName .
}

# Determine Satomi Ishihara's profession
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/profession> ?profession .
}

# Find an alumnus of Ohio State University with the same profession as Satomi Ishihara
SELECT ?alumnus WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> ;
           <http://purl.org/dc/terms/profession> ?profession .
}

# Find the spouses of both individuals identified
SELECT DISTINCT ?spouse WHERE {
  VALUES (?person) { 
    (<http://dbpedia.org/resource/Ted_McGinley>),
    (?alumnus)
  }
  
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  OPTIONAL { ?person <http://dbpedia.org/ontology/spouse> ?spouse . }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
701,45,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of Meritamen and parent of Henuttawy (19th dynasty).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify the royal commander in the Battle of Perire
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Perire""))
  
  # Ensure the commander is royalty
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .
  
  # Step 2: Determine the father of this royal commander
  ?father <http://dbpedia.org/ontology/spouse> ?spouse .
  ?commander <http://dbpedia.org/ontology/father> ?father .
  
  # Step 3: Ensure the father is a parent of both Meritamen and Henuttawy (19th dynasty)
  ?father <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Meritamen> .
  ?father <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
232,68,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of Sylvie Bermann and child of the person born as the birth name of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
SELECT ?actor WHERE {
  # Step 1: Find Sylvie Bermann's residence
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> ;
             <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 2: Find the child born in this residence
  ?person <http://dbpedia.org/ontology/birthPlace> ?residence .
  
  # Step 3: Determine Jon Pertwee's birth name
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?birthName .

  # Step 4: Identify the person born with that name
  ?person2 <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
  
  # Step 5: Find their child
  ?child <http://dbpedia.org/ontology/birthParent> ?person2 .

  # Step 6: Determine the professional in Actor, narrator, and producer
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?role1 .
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?role2 .
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?role3 .
  FILTER(?role1 = <http://dbpedia.org/ontology/Actor> && 
         ?role2 = <http://dbpedia.org/ontology/Narrator> &&
         ?role3 = <http://dbpedia.org/ontology/Producer>) .

  # Step 7: Identify their claim to fame
  ?professional <http://dbpedia.org/property/filmography> ?claimToFame .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER(?type = <http://dbpedia.org/ontology/Film> || 
         ?type = <http://dbpedia.org/ontology/MilitaryConflict>) .

  # Step 8: Find the actor involved
  ?claimToFame <http://dbpedia.org/property/castMember> ?actor .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
378,51,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in Peninsular War.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?commander ?claimToFame WHERE {
  # Step 1: Find Thomas Trigge's war
  ?triggeWar <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Thomas_Trigge> .
  
  # Step 2: Find Peninsular War commanders and their wars
  ?peninsularCommander <http://dbpedia.org/ontology/battle> ?peninsularWar .
  FILTER(?peninsularWar = <http://dbpedia.org/resource/Peninsular_War>) .

  # Step 3: Find wars of these commanders that are military conflicts, societal events, and events
  ?peninsularCommander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  
  # Ensure the war is a military conflict, societal event, and general event
  VALUES ?type { 
    <http://dbpedia.org/ontology/MilitaryConflict> 
    <http://dbpedia.org/ontology/SocietalEvent> 
    <http://dbpedia.org/ontology/Event>
  }
  
  # Retrieve the claim to fame of these commanders
  ?peninsularCommander <http://dbpedia.org/property/claimToFame> ?claimToFame .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
528,42,test,Give me the war of Orozimbo Barbosa and force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
# Part 1: War of Orozimbo Barbosa
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?war)
}

UNION

SELECT ?result WHERE {
  <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

SELECT ?war WHERE {
  <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/property/militaryService> ?service .
  ?service <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?service AS ?war)
}

UNION

# Part 2: Force of Narciso Campero Leyes
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/property/militaryService> ?service .
  ?service <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  BIND(?service AS ?force)
}

UNION

SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  BIND(?commander AS ?force)
}

UNION

# Part 3: War of the military force of Battle of Pisagua
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/property/faction1> ?faction1 .
  ?faction1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?faction1 <http://dbpedia.org/property/militaryService> ?service .
  ?service <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?service AS ?war)
}

UNION

SELECT ?war WHERE {
  <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/property/faction2> ?faction2 .
  ?faction2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?faction2 <http://dbpedia.org/property/militaryService> ?service .
  ?service <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?service AS ?war)
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
747,68,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as Tracey Elizabeth McSween and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://dbpedia.org/ontology/birthDate> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
# Step 1: Find the decedent who is an athlete and a soccer player born in Zolotonosha
SELECT ?decedent WHERE {
  ?decedent <http://dbpedia.org/ontology/deceased> ?death .
  ?decedent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> ;
            <http://dbpedia.org/ontology/SoccerPlayer> ;
            <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Zolotonosha> .
}

# Step 2: Retrieve the birth date of this decedent
SELECT ?birthDate WHERE {
  ?decedent <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

# Step 3: Find a person born on that same birth date
SELECT DISTINCT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

# Step 4: Identify Tracey Elizabeth McSween and her band
SELECT ?tracey ?band WHERE {
  ?tracey <http://www.w3.org/2000/01/rdf-schema#label> ""Tracey Elizabeth McSween""@en ;
          <http://dbpedia.org/ontology/memberOfBand> ?band .
}

# Step 5: Find the writer of a song by Amba Shepherd
SELECT ?writer WHERE {
  ?song <http://purl.org/dc/terms/creator> ?writer ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  ?song <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Amba_Shepherd> .
}

# Step 6: Identify the band associated with this writer
SELECT ?band WHERE {
  ?writer <http://dbpedia.org/ontology/memberOfBand> ?band .
}

# Final step: Combine results from steps 3 and 6 to find the person
SELECT DISTINCT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?band <http://dbpedia.org/ontology/member> ?person .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
427,47,test,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?alumnus ?father ?party ?reference WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?alumnus <http://xmlns.com/foaf/0.1/familyName> ?fatherFamilyName .
  ?father <http://xmlns.com/foaf/0.1/familyName> ?fatherFamilyName .
  ?father <http://dbpedia.org/ontology/memberOf> ?party .
  
  OPTIONAL {
    ?reference <http://www.w3.org/2004/02/skos/core#subject> <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> .
    ?alumnus <http://purl.org/dc/terms/references> ?reference .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,66,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?bandMember WHERE {
  # Step 1: Find persona of Don Dokken
  ?persona rdfs:label ""Don Dokken""@en .
  ?persona <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Step 2: Find associated musical artist of Watchtower
  ?watchtower rdfs:label ""Watchtower (band)""@en .
  ?watchtower <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist1 .

  # Step 3: Find band member that is a band/group/organization and part of Meshuggah
  ?meshuggah rdfs:label ""Meshuggah""@en .
  ?bandMember <http://dbpedia.org/ontology/bandMember> ?meshuggah ;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1, ?type2, ?type3 .

  FILTER(?type1 = <http://dbpedia.org/ontology/Band> &&
         ?type2 = <http://dbpedia.org/ontology/MusicalGroup> &&
         ?type3 = <http://dbpedia.org/ontology/Organisation>) .

  # Step 4: Find associated musical artist of the band member
  ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist2 .

  # Final condition: The persona must be a band member
  ?persona <http://dbpedia.org/ontology/bandMember> ?bandMember .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
356,16,test,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton and player in the successor of 2014 Sacramento Republic FC season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?team WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
  ?season <http://dbpedia.org/property/successorOf> <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> .
  ?person <http://dbpedia.org/ontology/team> ?team .
  ?playerSeason <http://dbpedia.org/ontology/player> ?person .
  ?playerSeason <http://dbpedia.org/property/season> ?season .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
92,66,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v6 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v2 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Step 1: Find Jim Sheppard's associated musical artist
SELECT ?artist WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
  ?band <http://dbpedia.org/ontology/musicalArtist> ?artist .
}

UNION

# Step 2: Find the band of Joseph Michael
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}

UNION

# Step 3: Find the reference to Nevermore that involves an artist
SELECT ?artist WHERE {
  ?reference <http://dbpedia.org/ontology/reference> ""Nevermore"" .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
701,29,test,Give me the parent of Meritamen and spouse of Ramesses II and parent of the child of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?person WHERE {
  # Meritamen's parent is the person we are looking for
  <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?person .
  
  # The same person must be a spouse of Ramesses II
  ?person <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramses_II> .

  # Additionally, the person must be a parent of at least one child of Ramesses II
  ?child <http://dbpedia.org/ontology/parent> ?person .
  ?child <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramses_II> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
617,53,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of Laodice IV.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find Antiochus (son of Antiochus III) and his child
  ?antiochus <http://dbpedia.org/ontology/birthName> ""Antiochus"" .
  ?antiochus <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?child1 <http://dbpedia.org/ontology/birthParent> ?antiochus .

  # Step 2: Find the child of that child who is royalty
  ?grandChild <http://dbpedia.org/ontology/birthParent> ?child1 .
  ?grandChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the successor of Antiochus II Theos who is royalty
  ?antiochusII <http://dbpedia.org/resource/Antiochus_II_theos> .
  ?successor <http://dbpedia.org/property/successor> ?antiochusII .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the spouse of Laodice IV
  ?laodiceIV <http://dbpedia.org/resource/Laodice_IV> .
  ?spouse <http://dbpedia.org/property/spouse> ?laodiceIV .
  
  # Ensure the successor is related to the spouse
  FILTER(?successor = ?spouse)

  # Step 5: Find the parent of the grandChild identified in step 2
  ?parent <http://dbpedia.org/ontology/birthParent> ?grandChild .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
161,33,test,"Give me the military force of Rif War and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Task 1: Find the military force involved in the Rif War
SELECT ?rifWarForce WHERE {
  <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?rifWarForce .
}

UNION

# Task 2: Find the predecessor of Indalecio Prieto and their military force that is a societal event and a military conflict
SELECT ?militaryForce WHERE {
  ?predecessor <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Indalecio_Prieto> .
  ?predecessor <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",4,6,5,3,2,3,3,71,0,0,34,0,0.0,0
801,26,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
SELECT ?producer WHERE {
  ?artist rdf:type <http://dbpedia.org/ontology/MusicalArtist> .
  ?artist dbo:profession <http://dbpedia.org/resource/Rapper> .
  
  ?work dbo:performer ?artist ;
        rdf:type <http://dbpedia.org/ontology/Song> ,
                 <http://dbpedia.org/ontology/MusicalWork> ,
                 <http://www.w3.org/2002/07/owl#Thing> .

  ?work dbo:producer ?producer .
}
```",3,7,4,3,1,3,3,71,0,0,956,0,0.0,0
547,46,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query for the resting place of the child of the child of William Haliburton
SELECT ?grandchild ?restingPlace WHERE {
  # Find children of William Haliburton
  <http://dbpedia.org/resource/William_Haliburton> <http://dbpedia.org/ontology/child> ?child .
  
  # Find grandchildren (children of the child)
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
  
  # Get resting place of the grandchild
  OPTIONAL { ?grandchild <http://dbpedia.org/ontology/restingPlace> ?restingPlace . }
}

UNION

# Query for the resting place of the actor of ""Enemy at the Door""
SELECT ?actor ?restingPlace WHERE {
  # Find actors associated with the movie ""Enemy at the Door""
  <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/ontology/starring> ?actor .
  
  # Get resting place of the actor
  OPTIONAL { ?actor <http://dbpedia.org/ontology/restingPlace> ?restingPlace . }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
294,24,test,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Step 1: Find the architect of P. D. Houston Jr. House
SELECT ?architect WHERE {
  <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?architect .
}

# Step 2: Find the resting place of the architect
SELECT ?restingPlace WHERE {
  ?architect <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  FILTER(?architect = [ARCHITECT_URI_FROM_STEP_1])
}

# Step 3: Find the birthplace of Marion James that is a settlement
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}

# Step 4: Ensure the resting place is related to the birthplace
SELECT ?restingPlace WHERE {
  ?architect <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  FILTER(?architect = [ARCHITECT_URI_FROM_STEP_1])
  ?birthPlace <http://dbpedia.org/property/isPartOf> ?restingPlace .
  FILTER(?birthPlace = [BIRTH_PLACE_URI_FROM_STEP_3])
}
```

Note: Replace `[ARCHITECT_URI_FROM_STEP_1]` and `[BIRTH_PLACE_URI_FROM_STEP_3]` with the actual URIs obtained from executing steps 1 and 3.",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
492,51,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
SELECT ?commander WHERE {
  # Step 1: Find the capital of Khemis Miliana District
  <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/capital> ?capital .
  
  # Step 2: Identify a person who died in that capital
  ?person <http://dbpedia.org/ontology/deathPlace> ?capital ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  
  # Step 3: Find the military conflict involving Frédéric-Georges Herr and the identified person
  ?war <http://dbpedia.org/ontology/battleCommander> <http://dbpedia.org/resource/Fr%C3%A9d%C3%A9ric-Georges_Herr> ;
       <http://dbpedia.org/ontology/battleCommander> ?person ;
       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>, <http://dbpedia.org/ontology/Event> .
  
  # Step 4: Retrieve the commander of this war
  ?war <http://dbpedia.org/ontology/commander> ?commander .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
92,67,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of the person born as the birth name of Joseph Michael.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
# Step 1: Find Joseph Michael who is an artist
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}

# Step 2: Find the band associated with Joseph Michael (band member of Nevermore)
SELECT ?band WHERE {
  ?person <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Nevermore_(band)> .
  ?person <http://dbpedia.org/ontology/bandMember> ?band .
}

# Step 3: Find the actor of ""Return to Nuke 'Em High Volume 1""
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/ontology/actor> ?actor .
}

# Step 4: Find associated musical artists with both the band and actor
SELECT DISTINCT ?associatedArtist WHERE {
  # Assuming we have identified ?band from step 2 and ?actor from step 3
  OPTIONAL { ?band <http://dbpedia.org/property/memberOf> ?associatedArtist . }
  OPTIONAL { ?actor <http://dbpedia.org/ontology/musicArtist> ?associatedArtist . }
}
```

Note: The above SPARQL query is structured to guide the process. In practice, you would need to execute each step sequentially and use the results from one step as input for the next.",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
488,48,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Identify the war involving Saitō Hajime
  ?war <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Sait%C5%8D_Hajime> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> ;
       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .

  # Step 2: Determine the administration of the father of Emperor Go-Mizunoo
  <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?father .
  ?administration <http://dbpedia.org/ontology/administrationOf> ?father .

  # Step 3: Find the commander involved in both the war and administration
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  ?administration <http://dbpedia.org/ontology/commander> ?commander .

  # Step 4: Retrieve the birthplace of this commander
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
232,59,test,"Give me the child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?child WHERE {
  # Step 1: Get Jon Pertwee's birth name
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 2: Find a person with the same birth name
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  
  # Step 3: Identify an actor, narrator, and producer with claim to fame in films or military conflicts
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> ;
                <http://dbpedia.org/ontology/narrator> [] ;
                <http://dbpedia.org/ontology/producer> [] .
  ?professional <http://dbpedia.org/ontology/claimToFame> ?fame .
  FILTER (
    (?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>) ||
    (?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>)
  )

  # Step 4: Find the child of the person with the same birth name
  ?person <http://dbpedia.org/ontology/child> ?child .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
182,20,test,Give me the war of the work of Gotabhaya Rajapaksa and war of Mahesh Senanayake and entity in Sri Lanka.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT DISTINCT ?war WHERE {
  # Find works by Gotabhaya Rajapaksa and Mahesh Senanayake related to wars
  { 
    ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> .
    ?work <http://dbpedia.org/ontology/topic> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  } UNION {
    ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Mahesh_Senanayake> .
    ?work <http://dbpedia.org/ontology/topic> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }

  # Ensure the war is related to an entity in Sri Lanka
  ?war <http://dbpedia.org/property/location> ?location .
  ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Sri_Lanka> .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
161,52,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?militaryForce WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  ?person1 <http://dbpedia.org/property/decedentAt> ?francoistSpain .
  ?francoistSpain <http://dbpedia.org/ontology/event> ?event .
  
  ?person2 <http://dbpedia.org/ontology/commander> ?biscayCampaign .
  ?biscayCampaign <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?biscayCampaign <http://dbpedia.org/ontology/event> ?event .

  ?militaryForce <http://dbpedia.org/property/militaryForceOf> ?event .

  ?person3 <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
  ?otherEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?otherEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?militaryForce <http://dbpedia.org/property/militaryForceOf> ?otherEvent .
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
391,20,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?person WHERE {
  # Find people native to Compton, California
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .
  
  # Identify works that are Michael Ballhaus's claim to fame
  ?work <http://dbpedia.org/property/claimToFame> <http://dbpedia.org/resource/Michael_Ballhaus> .

  # Find actors associated with those works
  ?work <http://dbpedia.org/ontology/starring> ?person .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
345,16,test,"Give me the figure known as the nickname of FC Vaduz and team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT ?person ?team ?nickname WHERE {
  # Find the person born on 1978-09-15 who is both a soccer player and manager
  ?person <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  FILTER (
    EXISTS { ?profession <http://www.w3.org/2000/01/rdf-schema#label> ""soccer player""@en }
    && EXISTS { ?profession2 <http://www.w3.org/2000/01/rdf-schema#label> ""soccer manager""@en }
  )
  
  # Find the team associated with this person
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/team> ?team .
  }

  # Get the nickname of FC Vaduz
  <http://dbpedia.org/resource/FK_Vaduz> <http://dbpedia.org/ontology/nickname> ?nickname .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
232,25,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of Dog Soldiers (film).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
SELECT ?nativePlace WHERE {
  # Step 1: Find Sylvie Bermann's British settlement residence
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> ;
             <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 2: Find the native place of this settlement
  ?residence <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
  
  # Step 3: Identify an actor from ""Dog Soldiers""
  ?actor <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .

  # Step 4: Check if the native place is associated with this actor
  OPTIONAL { ?nativePlace <http://dbpedia.org/ontology/nativePlace> ?actor . }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
404,50,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find the father of Ernest Augustus, Duke of Brunswick
  <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/father> ?father .
  
  # Step 2: Find children of this father who are royalty
  ?child <http://dbpedia.org/ontology/father> ?father ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  
  # Step 3: Find parents of these children who are royalty
  ?child <http://dbpedia.org/ontology/parent> ?royalParent ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  
  # Step 4: Find children of these royal parents who are royalty
  ?royalChild <http://dbpedia.org/ontology/parent> ?royalParent ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  
  # Step 5: Find the parent of these royal children
  ?royalChild <http://dbpedia.org/ontology/parent> ?parent .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
16,64,test,Give me the professional in Actress and person born as the birth name of the alumnus of Ohio State University and spouse of the person born as the birth name of Ted McGinley.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?actress WHERE {
  # Step 1: Find Ted McGinley's birth name
  ?ted <http://dbpedia.org/ontology/birthName> ?birthNameTed .
  
  # Step 2: Find Ted McGinley's spouse
  ?ted <http://dbpedia.org/property/spouse> ?spouse .

  # Step 3: Find the alumnus of Ohio State University who is also a spouse of Ted McGinley
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> .
  ?alumnus <http://dbpedia.org/property/spouse> ?spouse .

  # Step 4: Find the actress with the same birth name as this alumnus
  ?actress <http://dbpedia.org/ontology/birthName> ?birthNameAlumnus .
  ?actress <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actress> .

  # Ensure the birth names match
  FILTER (?birthNameAlumnus = ?birthNameTed)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
184,34,test,"Give me the parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . }","```sparql
# Query for the parent of Archduchess Ilona of Austria
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/father> ?parent .
}

UNION

# Query for the parent of the native of a landmark at elevation 96.0 that is a settlement
SELECT ?nativeParent WHERE {
  ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#elevation> ""96.0""^^xsd:float .
  ?landmark <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/Settlement108069627> .
  ?landmark <http://dbpedia.org/property/nativeOf> ?native .
  ?native <http://dbpedia.org/ontology/father> ?nativeParent .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
617,61,test,"Give me the parent of the child of the commander in Battle of Panium and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find the commander of the Battle of Panium
  <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?commander .

  # Step 2: Find a child of that commander
  ?commander <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Identify the successor of Antiochus (son of Antiochus III the Great)
  <http://dbpedia.org/resource/Antiochus_IV_Epiphanes> <http://dbpedia.org/ontology/successor> ?successor .

  # Find a child of that successor who is royalty
  ?successor <http://dbpedia.org/ontology/child> ?royalChild .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Find the spouse of that royal child
  ?royalChild <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 4: Find the parent of the spouse identified in step 3
  ?spouse <http://dbpedia.org/ontology/parent> ?parent .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
659,56,test,"Give me the commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
SELECT ?commander ?force WHERE {
  # Find the commander in the Battle of Leipzig
  <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?commander .

  # Find the military force commanded by Arthur Wellesley, 1st Duke of Wellington
  OPTIONAL {
    <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/militaryForce> ?force .
  }

  # Identify forces that are societal events and also military conflicts
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/MilitaryConflict>) )

  # Link to any reference involving Rutger Jan Schimmelpenninck
  OPTIONAL {
    ?reference <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
    ?commander <http://dbpedia.org/ontology/referencedBy> ?reference .
  }
}
```",6,9,7,3,3,3,3,71,0,0,6,0,0.0,0
747,34,test,"Give me the band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?band WHERE {
  # Step 1: Find the decedent who is an athlete and soccer player at Zolotonosha
  ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> .
  ?decedent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> ;
            <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .

  # Step 2: Retrieve their birth date
  ?decedent <http://dbpedia.org/ontology/birthDate> ?birthDate .

  # Step 3: Identify any person born on that date
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  
  # Step 4: Check if Shèna has a band associated with her
  OPTIONAL { 
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/property/memberOf> ?band .
  }

  # Return the band of Shèna and the identified person
  FILTER(?person != ?decedent)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
994,69,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of the associated musical artist of the reference to Watchtower and band member of the person born, that is a musical artist, as the persona of Don Dokken.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Step 1: Find Meshuggah band members that are bands, groups, and organizations
SELECT ?meshuggahMember WHERE {
  <http://dbpedia.org/resource/Meshuggah> <http://dbpedia.org/ontology/member> ?meshuggahMember .
  ?meshuggahMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?meshuggahMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
  ?meshuggahMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}

# Step 2: Find associated musical artists of these Meshuggah band members
SELECT DISTINCT ?associatedArtist WHERE {
  ?meshuggahMember <http://dbpedia.org/property/memberOf> ?associatedArtist .
  FILTER(?meshuggahMember IN {?meshuggahMember})
}

# Step 3: Find the associated musical artist of the reference to Watchtower
SELECT ?watchtowerAssociatedArtist WHERE {
  <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/reference> ?reference .
  ?reference <http://dbpedia.org/property/memberOf> ?watchtowerAssociatedArtist .
}

# Step 4: Find the band member of the person born as Don Dokken's persona
SELECT ?dokkenPersonaBandMember WHERE {
  ?persona <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?persona <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?persona rdfs:label ""Don Dokken""@en .
  ?persona <http://dbpedia.org/property/memberOf> ?dokkenPersonaBandMember .
}

# Combine results to find the final associated musical artist
SELECT DISTINCT ?finalAssociatedArtist WHERE {
  VALUES ?intermediateArtist { ?associatedArtist ?watchtowerAssociatedArtist }
  ?intermediateArtist <http://dbpedia.org/ontology/reference> ?finalAssociatedArtist .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
10,28,test,"Give me the professional in the birth name of Sharon Kao and associated musical artist of the person born, that is an artist, as Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v3 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Get Sharon Kao's birth name
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Get the associated musical artist of Matt Colton
SELECT ?artist WHERE {
  ?person <http://dbpedia.org/property/profession> ""Artist"" .
  ?person <http://dbpedia.org/resource/Matt_Colton> .
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

# Step 3: Get the band member of Luke Francis Vibert
SELECT ?bandMember WHERE {
  ?person <http://dbpedia.org/property/profession> ""Artist"" .
  ?person <http://dbpedia.org/resource/Luke_Francis_Vibert> .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?bandMember .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
16,48,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Step 1: Find Gigi Rice's birth name
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Find the spouse of Gigi Rice using her birth name
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
  FILTER(?birthName = ""Gigi Rice"") # Replace with actual birth name from Step 1
}

# Step 3: Find Ted McGinley's birth name
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 4: Find the person who is both spouse of Gigi Rice and born with Ted McGinley's birth name
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  FILTER(?spouse = ?spouseFromStep2) # Replace with actual spouse from Step 2
  FILTER(?birthName = ""Ted McGinley"") # Replace with actual birth name from Step 3
}
```

Note: The placeholders in the `FILTER` clauses need to be replaced with actual values obtained from executing Steps 1 and 3.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
328,52,test,Give me the commander in the force of Ferenc Szálasi and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person WHERE {
  # Condition 1: In the force of Ferenc Szálasi
  ?person <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi>.

  # Condition 2: Awardee for Volcano and Ryukyu Islands campaigns
  ?person <http://dbpedia.org/ontology/award> ?volcanoAward .
  ?volcanoAward <http://www.w3.org/2000/01/rdf-schema#label> ""Volcano Islands campaign"" .
  
  ?person <http://dbpedia.org/ontology/award> ?ryukyuAward .
  ?ryukyuAward <http://www.w3.org/2000/01/rdf-schema#label> ""Ryukyu Islands campaign"" .

  # Condition 3: Leader of People's Commissariat of Defense of the Soviet Union
  ?person <http://dbpedia.org/ontology/leaderOf> <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union>.
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
314,20,test,Give me the awardee of the award of Sergei Makovetsky and person deceased at Madrid and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT DISTINCT ?awardee WHERE {
  # Step 1: Find awards related to Sergei Makovetsky
  ?award <http://dbpedia.org/ontology/receiver> ?awardee .
  ?award <http://dbpedia.org/property/relatedTo> <http://dbpedia.org/resource/Sergei_Makovetsky> .

  # Step 2: Find commanders in the Spanish Civil War
  ?commander <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Spanish_Civil_War> .

  # Step 3: Filter by those who died in Madrid
  ?commander <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> .
  
  # Ensure the awardee is the same as the commander
  FILTER (?awardee = ?commander)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
712,16,test,Give me the capital of the country of Armed Forces of South Russia and resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . },"```sparql
# Query for the capital of the country associated with Armed Forces of South Russia
SELECT ?capital WHERE {
  ?forces <http://dbpedia.org/ontology/country> ?country .
  ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital .
  FILTER(STR(?forces) = ""Armed_Forces_of_South_Russia"")
}

# Query for the resting place of an awardee of Hero of the Soviet Union
SELECT DISTINCT ?restingPlace WHERE {
  ?person <http://dbpedia.org/ontology/honoraryTitle> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> .
  OPTIONAL { ?person <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
547,25,test,Give me the resting place of Simon Cadell and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  { 
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Simon_Cadell> AS ?person)
  }
  UNION
  {
    ?person <http://dbpedia.org/property/orderOfStMichaelAndStGeorge> ""Knight Grand Cross"" .
    ?person <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
  }
}
```",3,3,4,2,2,3,3,71,2,1,0,0.6666666666666666,1.0,0.8
659,31,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  ?officeHolder <http://dbpedia.org/ontology/nativePlace> ?person .
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .

  ?kingdomOfIrelandCommander <http://dbpedia.org/ontology/commanderInForce> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
  ?battleOfLeipzigCommander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Battle_of_Leipzig> .

  FILTER (?person = ?kingdomOfIrelandCommander && ?person = ?battleOfLeipzigCommander)
}
```",4,5,5,3,2,3,3,71,0,0,19,0,0.0,0
328,22,test,"Give me the awardee of Order of Suvorov and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
SELECT ?awardee WHERE {
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Order_of_Suvorov> .
  ?office <http://dbpedia.org/ontology/leader> ?awardee ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?stalin <http://dbpedia.org/ontology/officeHolder> ?office .
  FILTER(?stalin = <http://dbpedia.org/resource/Joseph_Stalin>)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
339,16,test,Give me the child of the child of Christian IX of Denmark and father of the child of Grand Duchess Elena Vladimirovna of Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
# Step 1: Get children of Christian IX of Denmark
SELECT ?grandchild WHERE {
  <http://dbpedia.org/resource/Christian_IX_of_Denmark> <http://dbpedia.org/ontology/child> ?child .
  
  # Step 2: Get grandchildren (children of the child)
  ?child <http://dbpedia.org/ontology/child> ?grandchild .

  # Step 3: Get child of Grand Duchess Elena Vladimirovna of Russia
  <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?elenaChild .
  
  # Step 4: Find the father of this child
  ?elenaChild <http://dbpedia.org/property/father> ?father .

  # Step 5: Check if any grandchild is also a child of the identified father
  FILTER (?grandchild = ?elenaChild)
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
177,9,test,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik and entity in the residence of Alexander Gamelin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://dbpedia.org/ontology/location> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?headquarters WHERE {
  ?office <http://dbpedia.org/ontology/headquarter> ?headquarters .
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?office <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Joo_Don-sik> .

  ?residence <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Alexander_Gamelin> .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .

  FILTER(?office = ?residence)
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
617,47,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Find the child of Seleucus II Callinicus who is royalty
  ?child1 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
  ?child1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the successor of Antiochus (son of Antiochus III the Great) who is royalty
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the child of this successor who is royalty
  ?child2 <http://dbpedia.org/ontology/birthParent> ?successor .
  ?child2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the spouse of this child
  ?spouse <http://dbpedia.org/ontology/spouse> ?child2 .

  # Step 5: Check if there's a connection to the child of the child from step 1
  ?grandChild <http://dbpedia.org/ontology/birthParent> ?child1 .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  FILTER (?spouse = ?result)
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
492,60,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
# Part 1: Person decedent at the capital of Khemis Miliana District
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/administrativeCapital> ?capital .
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?person <http://dbpedia.org/ontology/deathPlace> ?capital .
}

UNION

# Part 2: Person decedent at the work of the author of French Algeria
SELECT ?person WHERE {
  ?author <http://purl.org/dc/terms/about> <http://dbpedia.org/resource/French_Algeria> .
  ?work <http://purl.org/dc/terms/creator> ?author .
  ?person <http://dbpedia.org/ontology/deathPlace> ?work .
}
```",6,7,7,3,2,3,3,71,0,0,16,0,0.0,0
391,57,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Determine the claim to fame of the spouse that is a work involving acting
SELECT DISTINCT ?work WHERE {
  ?spouse <http://purl.org/dc/terms/subject> ?work .
  ?work <http://dbpedia.org/ontology/actor> ?actor .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
}

# Step 3: Identify the native of Compton, California who acted in this work
SELECT DISTINCT ?native WHERE {
  ?actor <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .
  ?work <http://dbpedia.org/ontology/actor> ?actor .
}

# Step 4: Find movies or TV shows featuring both Roz Ryan and the actor from step 3
SELECT DISTINCT ?movie WHERE {
  ?movie <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Roz_Ryan> .
  ?movie <http://dbpedia.org/ontology/actor> ?native .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
767,45,test,"Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
# Part 1: Alma Mater of Carl L. Nippert
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

UNION

# Part 2: Entity in Baden-Württemberg
SELECT ?entity WHERE {
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> .
}

UNION

# Part 3: Alter Ego of Matthew Burland's Persona
SELECT ?alterEgo WHERE {
  ?persona <http://dbpedia.org/ontology/fictionalAlterEgo> ?alterEgo .
  ?alterEgo <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?persona <http://dbpedia.org/property/personaOf> <http://dbpedia.org/resource/Matthew_Burland> .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
92,26,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?associatedArtist WHERE {
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Return_to_Nuke_%27Em_High_Volume_1> .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?actor <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?actor <http://dbpedia.org/ontology/musicArtist> ?associatedArtist .
}
```",3,4,4,3,1,3,3,71,0,0,126,0,0.0,0
281,46,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Part 1: Entity in the birthplace (country) of Bob Heffron
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?birthPlace ?property ?entity .
}

UNION

# Part 2: War of the awardee of the award of Jonathon Band
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/ontology/award> ?award .
  ?award <http://dbpedia.org/property/awardee> ?awardee .
  ?awardee <http://dbpedia.org/ontology/battle> ?war .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,55,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT DISTINCT ?force1 ?force2 ?force3 WHERE {
  # Step 1: Find the force involving Francisco Largo Caballero
  ?force1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
  ?force1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?force1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 2: Find the military force of an event involving Emilio Mola
  ?event <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?force2 .

  # Step 3: Find the military force involving Francisco Franco
  ?force3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> .
  ?force3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?force3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?force3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Retrieve the military forces
  ?force1 <http://dbpedia.org/ontology/militaryForce> ?militaryForce1 .
  ?force3 <http://dbpedia.org/ontology/militaryForce> ?militaryForce2 .
}
```",6,12,7,2,3,3,3,71,0,0,32,0,0.0,0
378,45,test,"Give me the war of Joaquín Blake and war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT DISTINCT ?joaquinWar ?carlWar ?commander ?claimToFame WHERE {
  # Find wars associated with Joaquín Blake
  <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?joaquinWar .

  # Find wars associated with Carl Pontus Gahn
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?carlWar .

  # Find the war involving Thomas Trigge that is a military conflict and societal event
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?societalEvent .
  ?societalEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Get the claim to fame of the commander
  ?commander <http://dbpedia.org/property/claimToFame> ?claimToFame .
}
```",5,8,6,3,3,3,3,71,0,0,2,0,0.0,0
161,32,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Query for Francisco Franco's military force
SELECT ?francoForce WHERE {
  <http://dbpedia.org/resource/Francisco_Franco> <http://dbpedia.org/ontology/militaryForce> ?francoForce .
  ?francoForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1 .
  FILTER (?type1 IN (<http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/MilitaryConflict>)).
}

UNION

# Query for Francisco Largo Caballero's military force
SELECT ?caballeroForce WHERE {
  <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/ontology/militaryForce> ?caballeroForce .
  ?caballeroForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type2 .
  FILTER (?type2 IN (<http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/MilitaryConflict>)).
}
```",4,9,5,2,2,3,3,71,0,0,514,0,0.0,0
617,54,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . },"```sparql
# Step 1: Find Nysa's parent
SELECT ?nysasParent WHERE {
  <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> <http://dbpedia.org/ontology/birth> ?nysasBirth .
  ?nysasBirth <http://dbpedia.org/ontology/father> ?nysasFather ;
              <http://dbpedia.org/ontology/mother> ?nysasMother .
  BIND(UNION(?nysasFather, ?nysasMother) AS ?nysasParent)
}

# Step 2: Find Antiochus' successor and their royal child
SELECT ?antiochusSuccessorChild WHERE {
  <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?successor .
  ?successor <http://dbpedia.org/ontology/child> ?antiochusSuccessorChild .
  ?antiochusSuccessorChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 3: Find spouse of Nysa's parent who is also the child from step 2
SELECT ?spouse WHERE {
  ?nysasParent <http://dbpedia.org/ontology/spouse> ?spouse .
  FILTER(?spouse = ?antiochusSuccessorChild)
}

# Step 4: Find Seleucus II Callinicus' royal child and their royal grandchild
SELECT ?seleucusGrandchild WHERE {
  <http://dbpedia.org/resource/Seleucus_II_Callinicus> <http://dbpedia.org/ontology/child> ?seleucusChild .
  ?seleucusChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> ;
                  <http://dbpedia.org/ontology/child> ?seleucusGrandchild .
  ?seleucusGrandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 5: Identify the individual who is both the spouse from step 3 and the grandchild from step 4
SELECT ?result WHERE {
  VALUES ?individual { ?spouse ?seleucusGrandchild }
  FILTER(?spouse = ?seleucusGrandchild)
  BIND(?individual AS ?result)
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
617,19,test,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . }","```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find children of Boleslaus I who are royalty
  <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find grandchildren who are royalty
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the parent of the father (i.e., grandparent)
  ?grandchild <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/parent> ?grandparent .

  # Step 4: Ensure connection to Richeza of Poland
  ?reference <http://dbpedia.org/resource/Richeza_of_Poland> .
  ?grandparent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
666,17,test,"Give me the player in Steve Bruce and figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
SELECT ?player WHERE {
  ?team <http://dbpedia.org/ontology/nickname> ""The Magpies"" .
  ?team <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub> .
  ?team <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Football_(soccer)> .
  ?team <http://www.w3.org/ns/org#location> ?location .
  ?location rdfs:label ""England""@en .
  ?player <http://dbpedia.org/property/team> ?team .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
492,37,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at Algiers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?commanderInWar WHERE {
  # Step 1: Find the commander in the Battle of Verdun
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?verdunCommander .
  
  # Step 2: Identify wars (military conflicts) this commander was part of
  ?verdunCommander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?warType .
  
  # Step 3: Find the decedent location of this commander
  ?verdunCommander <http://dbpedia.org/ontology/deathPlace> ?decedentLocation .

  # Step 4: Check if the decedent location is Algiers
  FILTER (?decedentLocation = <http://dbpedia.org/resource/Algiers>)

  # Step 5: Find another commander in these wars
  ?war <http://dbpedia.org/ontology/commander> ?commanderInWar .
  
  # Ensure the war is both a military conflict and an event
  FILTER (?warType = <http://dbpedia.org/ontology/MilitaryConflict>)
  FILTER EXISTS { ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> }
  
  # Ensure the commander is not the same as the original Verdun commander
  FILTER (?commanderInWar != ?verdunCommander)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
9,57,test,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?almaMater WHERE {
  # John Alderdice's alma mater
  <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Nickname of Queen's University Belfast
  OPTIONAL { 
    ?university <http://dbpedia.org/property/nickname> ""The QUB"" .
    FILTER(?university = ?almaMater)
  }

  # Awardee of an award related to Royal Medals
  OPTIONAL {
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ?awardLabel .
    ?award <http://dbpedia.org/ontology/awardee> ?almaMater .
    FILTER(?awardLabel = ""Royal Medal"")
  }
}
```",6,7,7,3,3,3,3,71,1,0,0,1.0,1.0,1.0
328,70,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/property/office> ?v3 . }","```sparql
# Step 1: Find Bruce Fraser's award
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/awardsReceived> ?award .
}

# Step 2: Identify the person associated with Budapest and as a commander in Bruce Fraser's force
SELECT ?person WHERE {
  ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
  ?person <http://dbpedia.org/ontology/decedentAt> <http://dbpedia.org/resource/Budapest> .
  ?force <http://dbpedia.org/ontology/member> ?person .
}

# Step 3: Determine the leader of a government agency office led by Gustav Jonson
SELECT ?leader WHERE {
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?office <http://dbpedia.org/ontology/leader> ?gustavJonson .
  ?gustavJonson <http://dbpedia.org/ontology/occupation> ?officeHolder .
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?gustavJonson <http://dbpedia.org/ontology/politicalPartyMember> ?politician .
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?office <http://dbpedia.org/ontology/leader> ?leader .
}

# Step 4: Find the awardee related to these connections
SELECT ?awardee WHERE {
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
534,20,test,"Give me the headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final and birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/headquarter> ?result . ?v4 <http://dbpedia.org/ontology/owner> ?v5 . },"```sparql
SELECT ?headquarter WHERE {
  # Step 1: Find politicians native to Essex
  ?politician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> .
  ?politician <http://dbpedia.org/ontology/birthPlace> ?essexLocation .
  ?essexLocation <http://www.w3.org/2000/01/rdf-schema#label> ""Essex""@en .

  # Step 2: Find their children who are politicians and office holders
  ?politician <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> .
  ?child <http://www.w3.org/2000/01/rdf-schema#label> ?childLabel .
  FILTER(CONTAINS(LCASE(?childLabel), ""politician"") && CONTAINS(LCASE(?childLabel), ""office holder"")) .

  # Step 3: Determine the birthplace of these children
  ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 4: Locate the venue that is an architectural structure for the 2012 Pro12 Grand Final
  <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ?venueLabel .
  FILTER(CONTAINS(LCASE(?venueLabel), ""venue"") && CONTAINS(LCASE(?venueLabel), ""architectural structure"")) .

  # Step 5: Identify the owner of this location
  ?location <http://dbpedia.org/ontology/owner> ?owner .

  # Step 6: Find the headquarters of this owner
  ?owner <http://dbpedia.org/ontology/headquarters> ?headquarter .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
528,64,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa and force of the person born as the birth name of Narciso Campero.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Part 1: War of the military force of an entity that is a societal event in Chile
SELECT ?war WHERE {
  ?event <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Chile> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://dbpedia.org/property/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/battle> ?war .
}

UNION

# Part 2: War involving Orozimbo Barbosa
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/battle> ?war .
}

UNION

# Part 3: Force of a person born as Narciso Campero
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ""Narciso Campero"" .
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryForce> ?force .
}

UNION

SELECT ?war WHERE {
  ?force <http://dbpedia.org/ontology/battle> ?war .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
421,27,test,Give me the band member of Senidah and person born as the birth name of Dino Merlin and native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
SELECT ?person WHERE {
  # Part 1: Band Member of Senidah
  ?bandMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Senidah> .
  
  # Part 2: Person with the same birth name as Dino Merlin
  <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?birthName .
  ?person <http://dbpedia.org/property/birthName> ?birthName .

  # Part 3: Native of the birthplace of Samir Bekrić
  <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?person <http://dbpedia.org/ontology/nativeOf> ?birthPlace .

  # Combine all conditions to find the common person
  FILTER (?bandMember = ?person)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
404,57,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
# Step 1: Find the father of Ernest Augustus, Duke of Brunswick
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/father> ?father .
}

# Step 2: Identify Prince George William of Hanover as the child with spouse Princess Victoria Louise of Prussia
SELECT ?prince WHERE {
  ?father <http://dbpedia.org/ontology/child> ?prince .
  ?prince <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> .
  ?prince <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 3: Find the children of Prince George William who are royalty
SELECT ?child WHERE {
  ?prince <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 4: Determine the parent of one such royal child
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```

Note: This is a conceptual breakdown. In practice, you would execute these queries sequentially or combine them into a single query using subqueries to navigate through the relationships.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
547,21,test,Give me the resting place of Alan Cunningham and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query to find the resting place of Alan Cunningham
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Alan_Cunningham_(British_Army_officer)> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

UNION

# Query to find the child of James Burton (property developer) and their resting place
SELECT ?childRestingPlace WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/James_Burton_(property_developer)> ;
         <http://dbpedia.org/ontology/burialPlace> ?childRestingPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,33,test,Give me the spouse of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
# Step 1: Find Ted McGinley's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 2: Identify the profession of actors from ""Unnatural""
SELECT DISTINCT ?actor ?profession WHERE {
  <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://purl.org/dc/terms/profession> ?profession .
}

# Step 3: Find professionals in the same field as those actors
SELECT DISTINCT ?professional WHERE {
  # Assuming we have identified a profession from step 2, replace `?identifiedProfession` with actual URIs obtained.
  ?professional <http://purl.org/dc/terms/profession> ?identifiedProfession .
}
```

Note: The final query in Step 3 requires manual substitution of the specific professions found in Step 2. This is because SPARQL does not support dynamic variable replacement directly within a single query execution.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
696,16,test,Give me the landmark at elevation of the award of Nie Rongzhen and birth place of the member of Dropkick Murphys.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v3 . <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT ?landmark WHERE {
  # Step 1: Find the elevation of an award associated with Nie Rongzhen
  ?award <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Nie_Rongzhen> .
  ?award <http://dbpedia.org/property/elevation> ?elevation .

  # Step 2: Identify a member of Dropkick Murphys and their birthplace
  ?member <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Dropkick_Murphys> .
  ?member <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 3: Find landmarks at the elevation identified in step 1
  ?landmark <http://dbpedia.org/property/elevation> ?elevation .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
767,39,test,"Give me the alma mater of Carl L. Nippert and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
# Query 1: Alma Mater of Carl L. Nippert
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

# Query 2: Alter Ego of Matthew Burland's Persona
SELECT ?fictionalCharacter WHERE {
  ?burland <http://dbpedia.org/property/fictionalAlterEgo> ?fictionalCharacter .
  ?burland <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Matthew_Burland> .
  ?fictionalCharacter <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
77,16,test,Give me the force of the mayor of Congress Poland and war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
# Query to find the force associated with the mayor of Congress Poland
SELECT ?force WHERE {
  ?person <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Congress_Poland> .
  ?person <http://dbpedia.org/property/affiliation> ?force .
}

# Query to find the war associated with the awardee of Golden Weapon for Bravery
SELECT ?war WHERE {
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> .
  ?awardee <http://dbpedia.org/property/war> ?war .
}
```",4,4,5,2,2,3,2,20,0,0,13,0,0.0,0
54,55,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Find child of Thihapate of Mohnyin who is an office holder and royalty
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find parent of Narapati I of Ava's child
  ?narapatiChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Narapati_I_of_Ava> .
  ?child <http://dbpedia.org/ontology/parent> ?narapatiChild .

  # Step 3: Find father of Soe Min Wimala Dewi and his child
  ?soeminParent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> .
  ?child <http://dbpedia.org/ontology/father> ?soeminParent .

  # Step 4: Ensure the child matches all criteria
  # (Already ensured by combining conditions above)

  # Step 5: Find predecessor of this matched individual
  ?child <http://dbpedia.org/ontology/predecessor> ?result .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
55,27,test,"Give me the band of the reference, that is a band, to Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony and band member of Guns N' Roses.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
SELECT ?band WHERE {
  # Step 1: Find the band members of Guns N' Roses
  ?gunsnroses <http://dbpedia.org/ontology/member> ?member .
  FILTER(?gunsnroses = <http://dbpedia.org/resource/Guns_N%27_Roses>) .

  # Step 2: Find bands that have members who are also part of the San Francisco Symphony
  ?symphonyMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/San_Francisco_Symphony> .
  ?band <http://dbpedia.org/ontology/member> ?symphonyMember .

  # Step 3: Find bands referenced by Newsted and are both a band and a group
  ?newstedReference <http://dbpedia.org/property/reference> ?band .
  FILTER(?newstedReference = <http://dbpedia.org/resource/Newsted>) .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .

  # Ensure the band is the same in all conditions
  FILTER(?member = ?symphonyMember)
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
492,47,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
SELECT ?commander WHERE {
  # Step 1: Find the commander in the Battle of Verdun
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?verdunCommander .

  # Step 2: Determine wars (military conflicts) this commander was involved in
  ?verdunCommander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 3: Find a person who is a decedent at the work of Joseph C. Satterthwaite
  ?satterthwaiteWork <http://dbpedia.org/property/work> <http://dbpedia.org/resource/Joseph_C._Satterthwaite> .
  ?decedent <http://dbpedia.org/ontology/decedentAt> ?satterthwaiteWork .

  # Step 4: Identify commanders from these wars linked to the decedent
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(?commander = ?decedent)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
404,67,test,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of the spouse of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
# Step 1: Find the spouse of Princess Victoria Louise of Prussia
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 2: Determine the parent(s) of this spouse who are royalty
SELECT DISTINCT ?parent WHERE {
  ?spouse <http://dbpedia.org/ontology/birthParent> ?parent .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 3: Find the child(ren) of these royal parents who are also royalty
SELECT DISTINCT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/birthChild> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 4: Identify Prince George William of Hanover and find his parent(s) who are royalty
SELECT DISTINCT ?parent WHERE {
  <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/birthParent> ?parent .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 5: Locate the father of the spouse identified in step 1
SELECT DISTINCT ?father WHERE {
  ?spouse <http://dbpedia.org/ontology/birthParent> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Male> .
}

# Step 6: Identify the child of the father found in step 5
SELECT DISTINCT ?child WHERE {
  ?father <http://dbpedia.org/ontology/birthChild> ?child .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
378,65,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v4 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
# Step 1: Find Carl Pontus Gahn's claim to fame
SELECT ?claimToFame WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
}

# Step 2 and 3: Identify the commander in the Great Siege of Gibraltar and their associated war
SELECT DISTINCT ?commander ?war WHERE {
  <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?war)
}

# Step 4: Find a reference related to the Peninsular War that is a military conflict
SELECT DISTINCT ?reference WHERE {
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/property/reference> ?reference .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
54,32,test,Give me the child of the father of Soe Min Wimala Dewi and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi <http://dbpedia.org/ontology/father> ?father .
  
  # Step 2: Find the child of that father (Soe Min Wimala Dewi)
  ?father <http://dbpedia.org/ontology/child> ?result1 .

  # Step 3: Identify Narapati I of Ava and find his child
  ?narapatiI <http://dbpedia.org/resource/Narapati_I_of_Ava> .
  ?narapatiI <http://dbpedia.org/ontology/child> ?narapatiChild .

  # Step 4: Determine the parent of Narapati I's child (should be Narapati I)
  ?narapatiChild <http://dbpedia.org/ontology/father> ?result2 .
  
  FILTER (?result1 = ?result2) # Ensure both results are the same entity
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
161,64,test,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?force ?commander ?elDirectorForce ?francoDecedentForce WHERE {
  # Step 1: Identify forces in the Spanish Civil War
  ?force <http://dbpedia.org/ontology/militaryConflict> <http://dbpedia.org/resource/Spanish_Civil_War> .
  
  # Step 2: Find commanders of these forces who are associated with an event
  ?force <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Step 3: Identify the figure known as ""El Director"" and their military force
  ?elDirector <http://xmlns.com/foaf/0.1/name> ""El Director""@en .
  ?elDirector <http://dbpedia.org/ontology/militaryForce> ?elDirectorForce .

  # Step 4: Find the decedent at Francoist Spain and their associated military force
  ?francoDecedent <http://dbpedia.org/property/decedentAt> <http://dbpedia.org/resource/Francoist_Spain> .
  ?francoDecedent <http://dbpedia.org/ontology/militaryForce> ?francoDecedentForce .
  
  # Ensure the force is a societal event, an event, and a military conflict
  ?francoDecedentForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
                       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> ;
                       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",7,11,8,3,3,3,3,71,0,0,32,0,0.0,0
92,49,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
# Part 1: Find band members of Nevermore who are artists
SELECT ?bandMember WHERE {
  <http://dbpedia.org/resource/Nevermore> <http://dbpedia.org/ontology/member> ?bandMember .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

UNION

# Part 2: Find bands of the person born as Joseph Michael
SELECT ?band WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Joseph Michael"" .
  ?person <http://dbpedia.org/ontology/member> ?band .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,59,test,Give me the parent of the child of the child of Seti I and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT DISTINCT ?parent WHERE {
  # Step 1: Find Seti I's grandchildren
  ?childSetiI <http://dbpedia.org/ontology/child> ?grandChild .
  <http://dbpedia.org/resource/Seti_I> <http://dbpedia.org/ontology/child> ?childSetiI .

  # Step 2: Find the parent of Seti I's grandchildren
  ?grandChild <http://dbpedia.org/ontology/parent> ?parent .

  # Step 3: Identify Amun-her-khepeshef's spouse and their child
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
  ?spouse <http://dbpedia.org/ontology/child> ?childSpouse .

  # Step 4: Find the parent of this child
  ?childSpouse <http://dbpedia.org/ontology/parent> ?parentSpouse .

  # Step 5: Combine results to find matching parents
  FILTER(?parent = ?parentSpouse)
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
378,47,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . }","```sparql
SELECT ?war WHERE {
  # Find military conflicts referenced in relation to Peninsular War
  ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Peninsular_War> .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?reference ?p ?war .

  # Find wars commanded by Carl Pontus Gahn
  OPTIONAL {
    <http://dbpedia.org/resource/C._P._Gahn> <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
    <http://dbpedia.org/resource/C._P._Gahn> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?war .
  }

  # Ensure the war is a military conflict
  FILTER EXISTS { ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
701,71,test,"Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of the child of Seti I and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Find spouse of Amun-her-khepeshef and their child
  ?amun_spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
  ?child_amun <http://dbpedia.org/ontology/parent> ?amun_spouse .
  
  # Step 2: Find parent of the child of Amun-her-khepeshef's spouse
  ?parent_child_amun <http://dbpedia.org/ontology/parent> ?child_amun .

  # Step 3: Find Seti I's child and their child (grandchild)
  ?seti_child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Seti_I> .
  ?seti_grandchild <http://dbpedia.org/ontology/parent> ?seti_child .

  # Step 4: Find parent of Seti I's grandchild
  ?parent_seti_grandchild <http://dbpedia.org/ontology/parent> ?seti_grandchild .
  
  # Step 5: Find spouse of the parent of Seti I's grandchild
  ?spouse_parent_seti_grandchild <http://dbpedia.org/ontology/spouse> ?parent_seti_grandchild .

  # Step 6: Identify commander in Battle of Perire and their father
  ?battle_commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Battle_of_Perire> .
  ?father_commander <http://dbpedia.org/ontology/father> ?battle_commander .

  # Step 7: Find spouse of the commander's father who is royalty
  ?result <http://dbpedia.org/ontology/spouse> ?father_commander .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Final condition: Ensure the parent of the child of Amun-her-khepeshef's spouse is the same as the spouse found
  FILTER (?parent_child_amun = ?spouse_parent_seti_grandchild)
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
92,61,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Step 1: Find the person born as ""Joseph Michael""
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 2: Find the band of that person
SELECT ?band WHERE {
  ?person <http://dbpedia.org/property/memberOf> ?band .
  FILTER(?person = [INSERT_PERSON_URI_FROM_STEP_1])
}

# Step 3: Identify the actor of ""Return to Nuke 'Em High Volume 1"" who is also an artist
SELECT ?actor WHERE {
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  FILTER(?movie = <http://dbpedia.org/resource/Return_to_Nuke_%27Em_High_Volume_1>)
}

# Step 4: Ensure this artist matches the person identified in step 1
SELECT ?band WHERE {
  ?person <http://dbpedia.org/property/memberOf> ?band .
  FILTER(?person = [INSERT_PERSON_URI_FROM_STEP_3])
}
```

Note: Replace `[INSERT_PERSON_URI_FROM_STEP_1]` and `[INSERT_PERSON_URI_FROM_STEP_3]` with the actual URIs obtained from executing the first two queries.",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
701,58,test,"Give me the parent of the child of Ramesses II and parent of Meritamen and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify the child of Ramesses II who is a parent of Meritamen
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ramesses_II> .
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Meritamen> .

  # Step 2: Identify the commander in the Battle of Perire and their father
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  ?father <http://dbpedia.org/ontology/birthChild> ?commander .
  
  # Step 3: Find the spouse of this father
  ?spouse <http://dbpedia.org/property/spouse> ?father .

  # Ensure that the resulting entity is royalty
  FILTER (?parent = ?child && ?parent = ?spouse)
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .
  
  # Linking the parent from step 1 to the spouse from step 3
  BIND(?child AS ?parent)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
251,24,test,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?administration WHERE {
  { 
    ?party <http://dbpedia.org/ontology/administration> ?administration .
    ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .
    ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?administration <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Sicily> .
  }
  
  UNION
  
  {
    ?author <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> .
    ?author <http://dbpedia.org/ontology/deathPlace> ?administration .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
994,45,test,"Give me the associated musical artist of Red Tide (band) and associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Part 1: Associated musical artist of Red Tide (band)
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

UNION

# Part 2: Associated musical artist of S.A. Slayer
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

UNION

# Part 3: Band member of the person born as a musical artist and persona of Don Dokken
SELECT ?bandMember WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?persona <http://dbpedia.org/ontology/persona> ?person .
  FILTER(CONTAINS(LCASE(?persona), ""don dokken""))
  ?band <http://dbpedia.org/ontology/member> ?bandMember .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
16,54,test,Give me the spouse of the person born as Ted Martin McGinley and professional in the profession of the actor of Unnatural (TV series) and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
# Step 1: Identify Ted Martin McGinley's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 2: Determine the profession of the actor from ""Unnatural (TV series)"" and Georgeanne Marie Rice
SELECT DISTINCT ?profession WHERE {
  # Actor in Unnatural (TV series)
  ?actor <http://dbpedia.org/ontology/character> <http://dbpedia.org/resource/Unnatural_(TV_series)> .
  ?actor <http://purl.org/dc/terms/profession> ?profession .

  # Georgeanne Marie Rice
  <http://dbpedia.org/resource/Georgeanne_Marie_Rice> <http://purl.org/dc/terms/profession> ?profession2 .
  
  FILTER(?profession = ?profession2)
}

# Step 3: Find Ted Martin McGinley professional in that profession
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ted Martin McGinley"" .
  ?person <http://purl.org/dc/terms/profession> ?commonProfession .
}

# Step 4: Retrieve the spouse of this person
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
994,64,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of Red Tide (band).","SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find an associated musical artist related to Watchtower
SELECT ?watchtowerArtist WHERE {
  <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
}

# Step 2: Identify a person born as Don Dokken's persona who is also a band member, and find their associated musical artist
SELECT ?dokkenPersonaArtist WHERE {
  ?persona <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?persona <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?persona rdfs:label ""Don Dokken""@en .
  ?persona <http://dbpedia.org/ontology/memberOfBand> ?band .
  ?band <http://dbpedia.org/ontology/associatedMusicalArtist> ?dokkenPersonaArtist .
}

# Step 3: Find the associated musical artist of Red Tide
SELECT ?redTideArtist WHERE {
  <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?redTideArtist .
}

# Final step: Determine the common associated musical artist from steps 1 and 2
SELECT DISTINCT ?commonArtist WHERE {
  VALUES (?artist) { ?watchtowerArtist ?dokkenPersonaArtist }
  ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?commonArtist .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
161,63,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
SELECT DISTINCT ?militaryForce WHERE {
  # Step 1: Identify the decedent at Francoist Spain and their command roles
  ?person <http://dbpedia.org/ontology/decedent> <http://dbpedia.org/resource/Francoist_Spain> .
  ?person <http://dbpedia.org/ontology/commander> ?force1 .
  
  # Step 2: Ensure the force is a societal event, an event, and a military conflict
  ?force1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  
  # Step 3: Identify the force commanded by Emilio Mola
  ?force2 <http://dbpedia.org/resource/Emilio_Mola> <http://dbpedia.org/ontology/commander> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  
  # Step 4: Identify the military force related to Francisco Largo Caballero
  ?force3 <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/ontology/militaryForce> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  
  # Step 5: Find the military force common to these relationships
  ?force1 <http://dbpedia.org/ontology/militaryForce> ?militaryForce ;
          OPTIONAL { ?force2 <http://dbpedia.org/ontology/militaryForce> ?militaryForce } .
  OPTIONAL { ?force3 <http://dbpedia.org/ontology/militaryForce> ?militaryForce }
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
54,69,test,"Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v4 <http://dbpedia.org/property/father> ?v3 . ?v7 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find the child of Narapati I of Ava
  ?narapatiChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Narapati_I_of_Ava> .
  
  # Step 2: Parent of this child is Narapati I himself
  ?parent = <http://dbpedia.org/resource/Narapati_I_of_Ava> .

  # Step 3: Find the father of the child of Thinkhaya of Pagan and his predecessor
  ?thinkhayasChild <http://dbpedia.org/ontology/birthParent> ?thinkhaya .
  ?thinkhaya = <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  ?thinkhayasFather <http://dbpedia.org/ontology/predecessor> ?thinkhaya .

  # Step 4: Reference to Thihapate of Mohnyin who is an office holder and royalty
  ?thihapate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?thihapate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?thihapate = <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .

  # Step 5: Find the parent of the entity from step 2 that matches criteria from steps 3 and 4
  ?result <http://dbpedia.org/ontology/birthParent> ?parent .
  FILTER (?thinkhayasFather = ?thihapate)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
801,65,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify the professional with alter ego The Shadow
  ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Rapper> .
  ?professional <http://dbpedia.org/ontology/alterEgo> <http://dbpedia.org/resource/The_Shadow> .

  # Step 2: Find the work they produced
  ?work <http://dbpedia.org/ontology/work> ?professional ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>, <http://dbpedia.org/ontology/Song> .

  # Step 3: Identify the writer of ""40 Dayz & 40 Nightz""
  ?writer <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>, <http://dbpedia.org/ontology/Artist> .

  # Step 4: Find the associated musical artist of this writer
  ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",7,13,8,3,3,3,3,71,0,0,8,0,0.0,0
44,8,test,"Give me the band member of Undertow (band) and band member of the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?member WHERE {
  # Find band members of Undertow
  <http://dbpedia.org/resource/Undertow_(band)> <http://dbpedia.org/ontology/member> ?member .
  
  # Check if the member is associated with Queensrÿche as a group and organization
  ?artist <http://dbpedia.org/ontology/member> ?member .
  ?artist <http://dbpedia.org/property/associatedBand> <http://dbpedia.org/resource/Queensrÿche> .
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  
  # Ensure the association is both a group and an organization
  ?association <http://dbpedia.org/property/associatedBand> <http://dbpedia.org/resource/Queensrÿche> .
  ?association <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
  ?association <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
92,47,test,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
# Step 1: Find band members of Nevermore who are artists
SELECT ?bandMember WHERE {
  <http://dbpedia.org/resource/Nevermore_(band)> <http://dbpedia.org/ontology/member> ?bandMember .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 2: Find associated musical artists of these band members
SELECT DISTINCT ?associatedArtist WHERE {
  ?bandMember <http://dbpedia.org/ontology/member> ?associatedArtist .
  ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 3: Find actors of ""Return to Nuke 'Em High Volume 1""
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
}

# Step 4: Find overlap between associated musical artists and actors
SELECT DISTINCT ?person WHERE {
  # From Step 2
  ?bandMember <http://dbpedia.org/ontology/member> ?person .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # From Step 3
  OPTIONAL { 
    ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> .
    FILTER(?person = ?actor)
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
378,57,test,"Give me the war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of the commander in Great Siege of Gibraltar.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . }","```sparql
SELECT DISTINCT ?war ?commander ?fame WHERE {
  # Part 1: War associated with Carl Pontus Gahn
  OPTIONAL { 
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
  }

  # Part 2: Commander's war in reference and ensure it is a military conflict
  {
    ?reference <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?war .
    FILTER EXISTS { ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> }
  }

  # Part 3: Ensure the war is related to Peninsular War
  OPTIONAL {
    ?war <http://dbpedia.org/ontology/partOf> <http://dbpedia.org/resource/Peninsular_War> .
  }

  # Part 4: Claim to fame of commander in Great Siege of Gibraltar
  OPTIONAL {
    ?gibraltarCommander <http://dbpedia.org/ontology/commander> ?commander .
    ?gibraltarCommander <http://dbpedia.org/property/claimToFame> ?fame .
    FILTER EXISTS { ?gibraltarCommander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> }
  }

  # Ensure all conditions are met
  FILTER (?war != UNDEF && ?commander != UNDEF)
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
801,51,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Find the writer of ""What U See Is What U Get"" who is a musical artist and an artist.
  <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://purl.org/dc/terms/creator> ?writer .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/2002/07/owl#sameAs> ?artist .

  # Step 2: Find the associated musical artist of that writer.
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .

  # Step 3: Identify a work (song) produced by 50 Cent.
  ?work <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/50_Cent> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?work <http://dbpedia.org/property/song> ?song .

  # Step 4: Find the producer of this song.
  ?song <http://dbpedia.org/property/producer> ?producer .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
404,58,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
# Step 1: Find Princess Victoria Louise of Prussia's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 2: Determine the father of that spouse
SELECT ?father WHERE {
  ?spouse <http://dbpedia.org/ontology/father> ?father .
}

# Step 3: Find children of Ernest Augustus, Duke of Brunswick who are royalty and also children of the identified father
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?child <http://dbpedia.org/ontology/father> ?father .
}

# Step 4: Find the parent of such a child
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```

Note: This is a conceptual breakdown. In practice, you would need to execute these queries sequentially and use intermediate results to feed into subsequent queries.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
767,29,test,Give me the reference to  and entity in Baden-Württemberg and alma mater of the administration of George K. Nash.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
# Part 1: Find entities related to or located in Baden-Württemberg
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> .
}

UNION

# Part 2: Find the alma mater of George K. Nash
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
232,57,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
# Step 1: Find Sylvie Bermann's British settlement residence
SELECT ?residence WHERE {
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_Kingdom> .
}

# Step 2: Find Jon Pertwee's child who is an actor, narrator, and producer
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Narrator> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Producer> .
}

# Step 3: Find the claim to fame of this child that is both a film and military conflict
SELECT ?claimToFame WHERE {
  ?child <http://dbpedia.org/property/claimToFame> ?claimToFame .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 4: Find the native of Sylvie Bermann's residence
SELECT ?native WHERE {
  ?residence <http://dbpedia.org/ontology/nativePlace> ?native .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
801,64,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in the alter ego of the true self of The Shadow and producer of Westside Story (song).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
SELECT ?associatedMusicalArtist WHERE {
  # Step 1: Find the producer of ""Westside Story (song)""
  <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?producer .

  # Step 2: Determine the alter ego of The Shadow's true self
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?trueSelf .
  ?trueSelf <http://dbpedia.org/ontology/professionalIn> ?alterEgo .

  # Step 3: Find the writer who is a musical artist and an artist for ""What U See Is What U Get""
  ?album <http://dbpedia.org/property/title> ""What U See Is What U Get"" .
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?album <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?writer <http://dbpedia.org/ontology/professionalIn> ?alterEgo .

  # Step 4: Find the associated musical artist of this writer
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedMusicalArtist .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
281,63,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v6 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?entity WHERE {
  # Part 1: Bob Heffron's birthplace country
  { 
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
    BIND(?birthPlace AS ?entity)
  }
  
  UNION
  
  # Part 2: Jonathon Band's awarded war
  { 
    <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/award> ?award .
    ?award <http://dbpedia.org/ontology/war> ?war .
    BIND(?war AS ?entity)
  }
  
  UNION
  
  # Part 3: Heather Roy's military unit war
  { 
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
    ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?profession <http://dbpedia.org/ontology/war> ?war .
    BIND(?war AS ?entity)
  }
}
```",7,9,8,3,3,3,3,71,0,1,1,0.0,0.0,0
767,56,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
SELECT ?entity WHERE {
  # Part 1: Administration of Green that is a settlement
  ?green <http://dbpedia.org/ontology/administration> ?admin .
  ?admin <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Part 2: Alter ego of Matthew Burland's persona that is a fictional character
  <http://dbpedia.org/resource/Matthew_Burland> <http://dbpedia.org/property/alterEgo> ?fictionalCharacter .
  ?fictionalCharacter <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .

  # Part 3: Alma mater of Carl L. Nippert
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Combine conditions to find the entity that satisfies all criteria
  FILTER (?admin = ?entity)
  FILTER (?fictionalCharacter = ?entity)
  FILTER (?almaMater = ?entity)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
9,61,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
# Step 1: Find organizations in Northern Ireland that are educational institutions with a nickname.
SELECT ?organisation WHERE {
  ?organisation <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Northern_Ireland> .
  ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
  ?organisation <http://dbpedia.org/ontology/nickname> ?nickname .
}

# Step 2: Find entities known by this nickname.
SELECT DISTINCT ?entity WHERE {
  VALUES ?nickname { ""known_nickname"" } # Replace with actual nickname found in step 1
  ?entity <http://dbpedia.org/ontology/nickname> ?nickname .
}

# Step 3: Identify awards related to Royal Medals associated with these entities.
SELECT DISTINCT ?award WHERE {
  ?entity <http://dbpedia.org/property/reference> ?reference .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award> .
  ?reference <http://dbpedia.org/ontology/name> ""Royal Medals"" .
}

# Step 4: Find awardees of these awards.
SELECT DISTINCT ?awardee WHERE {
  ?award <http://dbpedia.org/property/recipient> ?awardee .
}

# Step 5: Determine the alma mater of these awardees.
SELECT DISTINCT ?almaMater WHERE {
  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```

Note: The query assumes that you replace `""known_nickname""` with the actual nickname found in step 1. This multi-step process involves executing each part sequentially to gather the necessary information.",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
378,49,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . }","```sparql
# Step 1: Find the war associated with Carl Pontus Gahn
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
  ?war <http://dbpedia.org/ontology/personInvolved> <http://dbpedia.org/resource/Carl_Pontus_Gahn> .
}

# Step 2: Find the commander in that war
SELECT ?commander WHERE {
  ?war <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 3: Determine the claim to fame of that commander
SELECT ?claimToFame WHERE {
  ?commander <http://dbpedia.org/property/claimToFame> ?claimToFame .
}

# Step 4: Identify wars involving Thomas Trigge that are military conflicts and societal events
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
996,18,test,Give me the force of the awardee of the elevation of Lac d'Avoriaz and entity in the award of Ekrem Akurgal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT ?force WHERE {
  # Step 1: Find the awardee of the elevation of Lac d'Avoriaz
  <http://dbpedia.org/resource/Lac_d%27Avoriaz> <http://dbpedia.org/ontology/elevation> ?elevation .
  ?elevation <http://dbpedia.org/property/awardee> ?awardee1 .

  # Step 2: Find the entity associated with Ekrem Akurgal in terms of an award
  <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/ontology/award> ?entityAward .
  
  # Step 3: Find the force related to both the awardee and the entity
  ?awardee1 <http://dbpedia.org/property/memberOf> ?force .
  ?entityAward <http://dbpedia.org/property/memberOf> ?force .
}
```",5,5,6,3,2,3,2,20,0,0,4,0,0.0,0
328,55,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . }","```sparql
SELECT ?person WHERE {
  # Commander in the force of Ferenc Szálasi
  ?force <http://dbpedia.org/ontology/commander> ?person .
  ?force <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> .

  # Leader of a government agency under Joseph Stalin
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?office <http://dbpedia.org/property/leader> ?person .
  ?office <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Joseph_Stalin> .

  # Awardee of the same award as Bruce Fraser, 1st Baron Fraser of North Cape
  ?award <http://dbpedia.org/ontology/awardee> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
  ?award <http://dbpedia.org/ontology/awardee> ?person .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
959,32,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?member WHERE {
  # Step 1: Find Eiji Ōtsuka's alma mater that is a Japanese organization, university, and educational institution.
  <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1, ?type2, ?type3 .
  
  FILTER (?type1 = <http://dbpedia.org/ontology/JapaneseOrganization> &&
          ?type2 = <http://dbpedia.org/ontology/University> &&
          ?type3 = <http://dbpedia.org/ontology/EducationalInstitution>)
  
  # Step 2: Determine Yōichi Masuzoe's country of residence.
  <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 3: Find the member of Eiji Ōtsuka's alma mater who is native to Yōichi Masuzoe's country.
  ?member <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?member <http://dbpedia.org/ontology/nativeOf> ?nativeCountry .
  
  FILTER (?nativeCountry = ?residence)
}
```",4,9,5,2,2,3,3,71,0,0,84,0,0.0,0
232,60,test,"Give me the child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
SELECT ?child WHERE {
  # Step 1: Get Jon Pertwee's birth name
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 2: Find a person with the same birth name
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  
  # Step 3: Get this person's residence, ensuring it is a British settlement
  ?person <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 4: Find a French politician and office holder whose native place is this settlement
  ?politician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?politician <http://dbpedia.org/ontology/officeHolder> ?office .
  ?politician <http://dbpedia.org/ontology/nativePlace> ?residence .

  # Step 5: Find the child of the person identified in step 2
  ?person <http://dbpedia.org/ontology/child> ?child .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
959,41,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?native WHERE {
  # Step 1: Find Yōichi Masuzoe's residence that is a country
  <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 2: Identify Eiji Ōtsuka's alma mater
  <http://dbpedia.org/resource/Eiji_%C5%8Csuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1, ?type2, ?type3, ?type4 .
  FILTER (?type1 = <http://dbpedia.org/ontology/Organisation> &&
          ?type2 = <http://dbpedia.org/ontology/University> &&
          ?type3 = <http://dbpedia.org/ontology/EducationalOrganization> &&
          ?type4 = <http://dbpedia.org/resource/Japan>)

  # Step 3: Determine the manager of the 2013 Júbilo Iwata season
  <http://dbpedia.org/resource/2013_J%C5%ABbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?manager .

  # Step 4: Find the native of the residence identified in step 1
  ?native <http://dbpedia.org/ontology/nationality> ?residence .
  FILTER (?native = ?almaMater && ?native = ?manager)
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
492,31,test,Give me the commander in Franco-Hova Wars and person decedent at the work of the author of French Algeria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  # Find commanders in the Franco-Hova Wars
  ?war <http://dbpedia.org/ontology/conflict> <http://dbpedia.org/resource/Franco-Hova_Wars> .
  ?war <http://dbpedia.org/ontology/commander> ?commander .

  # Find works by authors related to French Algeria
  ?author <http://purl.org/dc/terms/about> <http://dbpedia.org/resource/French_Algeria> .
  ?work <http://purl.org/dc/terms/creator> ?author .
  
  # Find persons decedent at these works
  ?decedent <http://dbpedia.org/ontology/deathPlace> ?work .

  # Ensure the commander is also a decedent at one of these works
  FILTER (?commander = ?decedent)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
378,69,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
# Step 1: Find Carl Pontus Gahn's birth name
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Find wars associated with Carl Pontus Gahn
SELECT DISTINCT ?war WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  FILTER(?birthName = ""Carl Pontus Gahn"") # Replace with actual birth name from step 1
  OPTIONAL { ?person <http://dbpedia.org/ontology/commander> ?battle . }
  OPTIONAL { ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> . }
  BIND(?battle AS ?war)
}

# Step 3: Find Thomas Trigge's role in the Peninsular War
SELECT DISTINCT ?peninsularWarCommander WHERE {
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(?commander = <http://dbpedia.org/resource/Thomas_Trigge>) # Ensure Thomas Trigge is a commander
}

# Step 4: Find wars associated with Thomas Trigge that are military conflicts and societal events
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/commander> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER(?type = <http://dbpedia.org/ontology/MilitaryConflict> && 
         EXISTS { ?battle <http://dbpedia.org/ontology/societalEvent> ?event . } &&
         EXISTS { ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> . })
  BIND(?battle AS ?war)
}

# Step 5: Combine results
SELECT DISTINCT ?carlWar ?thomasWar WHERE {
  { 
    # Wars associated with Carl Pontus Gahn
    ?person <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
    OPTIONAL { ?person <http://dbpedia.org/ontology/commander> ?battle . }
    OPTIONAL { ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> . }
    BIND(?battle AS ?carlWar)
  }

  UNION

  {
    # Wars associated with Thomas Trigge
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Thomas_Trigge> .
    <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/commander> ?battle .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    FILTER(?type = <http://dbpedia.org/ontology/MilitaryConflict> && 
           EXISTS { ?battle <http://dbpedia.org/ontology/societalEvent> ?event . } &&
           EXISTS { ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> . })
    BIND(?battle AS ?thomasWar)
  }
}
```

[[",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
391,63,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/nickname> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Find the nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/nickName> ?nickname .
}

# Step 2: Identify Michael Ballhaus's claim to fame that is a work
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/property/claimToFame> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
}

# Step 3: Find actors of the work and a movie or TV show with Roz Ryan
SELECT DISTINCT ?actor WHERE {
  # Actor of Michael Ballhaus's claim to fame
  ?work <http://dbpedia.org/property/actor> ?actor .

  # Actor in a movie or TV show with Roz Ryan
  ?media (<http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan>) .
  ?media (<http://dbpedia.org/ontology/starring> ?actor) .
  ?media (<http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Movie> | <http://dbpedia.org/ontology/TVEpisode>) ) .

  # Native of the nickname found in Step 1
  ?actor <http://dbpedia.org/ontology/birthPlace> ?place .
  ?place rdfs:label ?nicknameLabel .
  FILTER (CONTAINS(LCASE(?nicknameLabel), LCASE(?nickname)))
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
701,56,test,"Give me the parent of Henuttawy (19th dynasty) and parent of the child of Nefertari and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Step 1: Find the parent of Henuttawy (19th dynasty)
SELECT ?henuttawyParent WHERE {
  <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/birth> ?birth .
  ?birth <http://dbpedia.org/property/father> ?henuttawyParent .
}

# Step 2: Find the child of Nefertari
SELECT ?nefertariChild WHERE {
  <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?nefertariChild .
}

# Step 3: Find the spouse of the father of the commander in Battle of Perire
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/father> ?father .
  ?father <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 4: Find the parent of the child from Step 2 and spouse from Step 3 if royalty
SELECT DISTINCT ?commonParent WHERE {
  # Parent of Nefertari's child
  ?nefertariChild <http://dbpedia.org/ontology/birth> ?birthN .
  ?birthN <http://dbpedia.org/property/father> ?parent1 .

  # Spouse from Step 3 must be royalty
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .
  
  # Parent of the spouse (if applicable)
  OPTIONAL {
    ?spouse <http://dbpedia.org/property/father> ?parent2 .
  }

  # Find common parent
  FILTER (?parent1 = ?parent2)
  BIND(?parent1 AS ?commonParent)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
959,67,test,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of University of Tsukuba.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . },"```sparql
# Part 1: Identify the politician leader of the 2010 Japanese House of Councillors election and their country of residence.
SELECT ?politicianLeader ?country WHERE {
  ?election <http://dbpedia.org/ontology/electedOfficial> ?politicianLeader .
  ?election <http://dbpedia.org/property/electionDate> ""2010""^^xsd:dateTime .
  ?politicianLeader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?politicianLeader <http://dbpedia.org/property/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?residence <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
}

# Part 2: Identify the manager of the 1998 Kashima Antlers season and their team.
SELECT ?sportsManager ?team WHERE {
  <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?sportsManager .
  ?sportsManager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
  ?sportsManager <http://dbpedia.org/property/teamManaged> ?team .
}

# Part 3: Find the manager of that team who is also a sports manager and member of University of Tsukuba.
SELECT ?finalManager WHERE {
  ?team <http://dbpedia.org/ontology/manager> ?finalManager .
  ?finalManager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
  ?finalManager <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> .
}

# Final step: Ensure both parts lead to the same native place.
SELECT DISTINCT ?nativePlace WHERE {
  { 
    # From Part 1
    ?election <http://dbpedia.org/ontology/electedOfficial> ?politicianLeader .
    ?election <http://dbpedia.org/property/electionDate> ""2010""^^xsd:dateTime .
    ?politicianLeader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?politicianLeader <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
    ?residence <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
  }
  
  {
    # From Part 2 and 3
    <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?sportsManager .
    ?sportsManager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
    ?sportsManager <http://dbpedia.org/property/teamManaged> ?team .
    ?team <http://dbpedia.org/ontology/manager> ?finalManager .
    ?finalManager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
    ?finalManager <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> .
  }",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
184,60,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?finalParent WHERE {
  # Step 1: Identify Archduchess Margaret of Austria (born 1925)
  ?margaret <http://dbpedia.org/ontology/birthDate> ?birth .
  FILTER(YEAR(?birth) = 1925 && STRSTARTS(STR(?margaret), ""http://dbpedia.org/resource/Archduchess_Margaret_of_Austria""))

  # Step 2: Find the parent of Archduchess Margaret
  ?parent1 <http://dbpedia.org/ontology/child> ?margaret .

  # Step 3: Find the child of this parent
  ?child <http://dbpedia.org/ontology/parent> ?parent1 .

  # Step 4: Identify the landmark at elevation 96.0 that is a settlement
  ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#elevation> ""96.0""^^xsd:float .
  ?landmark <http://dbpedia.org/ontology/type> ?type .
  FILTER(?type = <http://dbpedia.org/class/yago/Settlement108069068>)

  # Step 5: Find the native of this landmark
  ?native <http://dbpedia.org/ontology/birthPlace> ?landmark .

  # Step 6: Find the parent of this native
  ?parent2 <http://dbpedia.org/ontology/child> ?native .

  # Final step: Get the parent of the child from step 3 and the parent from step 6
  ?finalParent <http://dbpedia.org/ontology/child> ?child .
  ?finalParent <http://dbpedia.org/ontology/child> ?parent2 .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
747,23,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?person ?birthDate WHERE {
  ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> .
  ?decedent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> ;
            <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  ?decedent <http://dbpedia.org/ontology/birthDate> ?birthDate .

  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  FILTER(?person != ?decedent)
}
```",3,5,4,3,1,3,3,71,0,0,30,0,0.0,0
16,53,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley and professional in Actress.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?person WHERE {
  # Step 1: Find Gigi Rice's birth name
  <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?birthNameGigi .

  # Step 2: Find the person born as that birth name (Gigi Rice)
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthNameGigi .
  
  # Step 3: Find Ted McGinley's birth name
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?birthNameTed .

  # Step 4: Find the person born as that birth name and is a professional actress
  ?actress <http://www.w3.org/2000/01/rdf-schema#label> ?birthNameTed .
  ?actress <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""actress""))

  # Step 5: Determine the spouse of the actress
  ?actress <http://dbpedia.org/property/spouse> ?person .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
281,44,test,"Give me the war of the profession, that is a military unit, of Heather Roy and entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v4 . }","```sparql
SELECT DISTINCT ?war WHERE {
  # Step 1: Find Heather Roy's profession that is a military unit
  <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .

  # Step 2: Find entities in Bob Heffron's birthplace, which is a country
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 3: Find the war associated with Beauchamp Seymour, 1st Baron Alcester
  <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?war .
  
  # Combine conditions to find wars related to the above entities
  OPTIONAL { ?profession <http://dbpedia.org/ontology/battle> ?war . }
  OPTIONAL { ?birthPlace <http://dbpedia.org/ontology/entity> ?entity .
             ?entity <http://dbpedia.org/ontology/battle> ?war . }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
294,21,test,"Give me the resting place of Edwin A. Keeble and resting place of Luke Lea (American politician, born 1879) and entity in the birth place, that is a settlement, of Marion James.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query 1: Resting place of Edwin A. Keeble
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
}

UNION

# Query 2: Resting place of Luke Lea (American politician, born 1879)
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Luke_Lea_(politician)> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
}

UNION

# Query 3: Entity in the birth place of Marion James that is a settlement
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?entity <http://dbpedia.org/ontology/location> ?birthPlace .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
328,69,test,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?commander WHERE {
  # Step 1: Commander in Ferenc Szálasi's force
  ?szalasiForce <http://dbpedia.org/ontology/commander> ?commander .
  ?szalasiForce <http://dbpedia.org/resource/Ferenc_Szálasi> <http://dbpedia.org/property/memberOf> .

  # Step 2: Awardee of the Volcano and Ryukyu Islands campaign
  ?volcanoCampaign <http://dbpedia.org/ontology/commander> ?commander .
  ?volcanoCampaign <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .

  # Step 3: Leader of a government agency connected to Gustav Jonson
  ?governmentAgency <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?governmentAgency <http://dbpedia.org/ontology/leader> ?commander .
  ?gustavJonsonOffice <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/Gustav_Jonson> .
  ?gustavJonsonOffice <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Office> .
  ?governmentAgency <http://dbpedia.org/property/office> ?gustavJonsonOffice .

}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
617,32,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of Antiochus III the Great.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find children of Seleucus II Callinicus who are royalty
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find grandchildren of Seleucus II Callinicus who are royalty
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
  
  # Step 3: Identify children of Antiochus III the Great
  ?antiochusChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .

  # Step 4: Find which grandchild is married to any child of Antiochus III the Great
  ?grandchild <http://dbpedia.org/ontology/spouse> ?antiochusChild .
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
392,27,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
SELECT DISTINCT ?province ?region WHERE {
  # Part 1: Province of Sebastiano Bianchetti's Residence
  ?residence <http://dbpedia.org/ontology/inhabitant> <http://dbpedia.org/resource/Sebastiano_Bianchetti> .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
  ?residence <http://dbpedia.org/ontology/province> ?province .

  # Part 2: Region of Aguilar de Segarra's Time Zone
  ?event <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?timeZone <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent> .
  ?location <http://dbpedia.org/ontology/location> ?event .
  ?location <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Aguilar_de_Segarra> .
  ?location <http://dbpedia.org/ontology/region> ?region .

  # Part 3: Entity in Italy
  FILTER EXISTS { ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type . ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> }
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
427,60,test,"Give me the reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Query for Michele Pinto's Party
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/memberOf> ?party .
}

UNION

# Query for the party of an office holder and politician born as Romano Prodi
SELECT ?party WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Romano Prodi""@en ;
          <http://dbpedia.org/ontology/birthName> ""Romano Prodi"" ;
          <http://dbpedia.org/ontology/politicalParty> ?party ;
          <http://dbpedia.org/ontology/officeHolder> ?office .
  FILTER EXISTS { ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> }
}

# Get references to the names of these parties
SELECT DISTINCT ?party ?reference WHERE {
  {
    SELECT ?party WHERE {
      <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/memberOf> ?party .
    }
  } UNION {
    SELECT ?party WHERE {
      ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Romano Prodi""@en ;
              <http://dbpedia.org/ontology/birthName> ""Romano Prodi"" ;
              <http://dbpedia.org/ontology/politicalParty> ?party .
      FILTER EXISTS { ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> }
    }
  }
  ?party <http://xmlns.com/foaf/0.1/name> ?name .
  OPTIONAL { ?party <http://dbpedia.org/property/reference> ?reference . }
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
404,26,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?grandParent WHERE {
  # Step 1: Find the royal parent of Prince George William of Hanover
  <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?parent .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the royal children of that parent
  ?parent <http://dbpedia.org/ontology/child> ?royalChild .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the parent of these royal children
  ?royalChild <http://dbpedia.org/ontology/parent> ?grandParent .
}
```",3,5,4,3,1,3,3,71,2,1,0,0.6666666666666666,1.0,0.8
767,57,test,Give me the entity in Baden-Württemberg and reference to the alter ego of Black Hood and alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?entityInBadenWurttemberg WHERE {
  # Step 1: Identify George Kilbon Nash
  ?georgeKilbonNash <http://dbpedia.org/ontology/almaMater> ?almaMater .
  
  # Step 2: Find the administration of his alma mater
  ?almaMater <http://dbpedia.org/ontology/administration> ?administration .

  # Step 3: Identify alter ego of Black Hood
  ?blackHoodAlterEgo <http://dbpedia.org/ontology/alterEgo> <http://dbpedia.org/resource/Black_Hood> .
  
  # Step 4: Find an entity in Baden-Württemberg related to the administration
  ?administration <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Baden-Württemberg""@en .

  # Step 5: Ensure connection between administration and entity in Baden-Württemberg
  ?entityInBadenWurttemberg <http://dbpedia.org/ontology/administration> ?administration .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
994,68,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find bands associated with Fredrik Thordendal
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .

  # Step 2: Find musical artists associated with Donald Maynard Dokken
  ?dokkenArtist <http://dbpedia.org/ontology/birthName> ""Donald Maynard Dokken"" .
  ?dokkenArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Step 3: Find associated musical artist of Watchtower
  ?watchtowerArtist <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Watchtower_(band)> .
  ?associatedWithWatchtower <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .

  # Step 4: Find bands where the person from step 2 is a member and are organizations
  ?dokkenBand <http://dbpedia.org/ontology/member> ?dokkenArtist .
  ?dokkenBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .

  # Step 5: Find associated musical artist of the band member
  ?bandMember <http://dbpedia.org/ontology/member> ?dokkenBand .
  ?finalArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandMember .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
391,22,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .
  ?movie <http://dbpedia.org/ontology/starring> ?person ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie>, <http://dbpedia.org/ontology/Work>, <http://dbpedia.org/ontology/TelevisionShow> .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
232,46,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  # Step 1: Identify Jon Pertwee's birth name
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 2: Find the person born with that birth name (Jon Pertwee himself)
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  
  # Step 3: Determine Jon Pertwee's child
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> ?child .

  # Step 4: Identify Sean Pertwee and find his claim to fame that is both a film and a military conflict
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/film> ?claimToFame .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 5: Identify the actor associated with this claim to fame
  ?claimToFame <http://dbpedia.org/ontology/starring> ?actor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
701,67,test,"Give me the parent of Meritamen and spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the child of Seti I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?parentOfMeritamen ?spouseOfCommandersFather WHERE {
  # Step 1: Find Meritamen's parent
  <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/family> ?parentOfMeritamen .

  # Step 2: Identify the commander in the Battle of Perire
  ?battle <http://dbpedia.org/property/battleName> ""Battle of Perire"" .
  ?battle <http://dbpedia.org/ontology/commander> ?commander .

  # Step 3: Find the father of the commander and his spouse who is royalty
  ?father <http://dbpedia.org/ontology/spouse> ?spouseOfCommandersFather .
  ?father <http://dbpedia.org/ontology/offspring> ?commander .
  ?spouseOfCommandersFather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 4: Identify Seti I's child and their child
  <http://dbpedia.org/resource/Seti_I> <http://dbpedia.org/ontology/offspring> ?childOfSetiI .
  ?childOfSetiI <http://dbpedia.org/ontology/offspring> ?grandChildOfSetiI .

  # Step 5: Find the parent of this final child
  ?parentOfGrandChild <http://dbpedia.org/ontology/family> ?grandChildOfSetiI .
  
  FILTER(?parentOfMeritamen = ?parentOfGrandChild)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
659,42,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?force WHERE {
  ?event <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?eventType .
  FILTER (?eventType IN (<http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/MilitaryConflict>)).
  
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  VALUES ?battle {<http://dbpedia.org/resource/Battle_of_Leipzig>} .
  
  ?force1 <http://dbpedia.org/ontology/commander> ?commander .
  ?force2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
  FILTER (?force1 = ?force2)
  
  ?event <http://dbpedia.org/property/militaryForce> ?force .
}
```",5,8,6,2,3,3,3,71,0,0,6,0,0.0,0
547,23,test,Give me the resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
SELECT ?grandchildRestingPlace WHERE {
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  <http://dbpedia.org/resource/William_Haliburton> <http://dbpedia.org/ontology/child> ?child .
  
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?child <http://dbpedia.org/ontology/child> ?grandchild .

  ?grandchild <http://dbpedia.org/property/restingPlace> ?grandchildRestingPlace .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
314,28,test,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of the award of Sergei Makovetsky and person deceased at the headquarter of House of Sombrerete.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
SELECT ?commander WHERE {
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  
  ?commander <http://dbpedia.org/ontology/profession> ?profession .
  <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/ontology/profession> ?profession .

  ?award <http://dbpedia.org/property/awardee> ?commander .
  ?award <http://dbpedia.org/property/awardee> <http://dbpedia.org/resource/Sergei_Makovetsky> .

  ?deceasedPerson <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Deceased> .
  ?deceasedPerson <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/House_of_Sombrerete> .
  ?deceasedPerson <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?commander .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
184,35,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?commonParent WHERE {
  # Step 1: Find the child of Archduke Joseph Francis of Austria
  <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?child .

  # Step 2: Find the parent of that child
  ?child <http://dbpedia.org/ontology/parent> ?parent1 .

  # Step 3: Find the native of Budapest
  ?native <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Budapest> .

  # Step 4: Find the parent of the native of Budapest
  ?native <http://dbpedia.org/ontology/parent> ?parent2 .

  # Step 5: Determine the common parent
  FILTER(?parent1 = ?parent2)
  BIND(?parent1 AS ?commonParent)
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
801,55,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Find the writer of ""40 Dayz & 40 Nightz"" who is also a musical artist and an artist.
  ?writer <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Step 2: Find the producer associated with this writer's work.
  ?work <http://dbpedia.org/property/producer> ?writer .
  
  # Step 3: Identify the work that is a musical work and song involving 50 Cent.
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  ?work <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/50_Cent> .

  # Step 4: Identify the professional alter ego of ""The Shadow.""
  ?alterEgo <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/The_Shadow> .
  
  # Step 5: Find the associated musical artist linked to all these connections.
  ?associatedArtist <http://dbpedia.org/property/associatedMusicalArtist> ?writer .
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
488,42,test,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Query 1: Death place of Tokugawa Ieyasu
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}

# Query 2: Administration of the father of Emperor Go-Mizunoo
SELECT ?administration WHERE {
  ?father <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Father_of_Emperor_Go-Mizunoo> .
  ?father <http://dbpedia.org/ontology/familyName> ""Go-Mizunoo""^^<http://www.w3.org/2001/XMLSchema#string> .
  ?father <http://dbpedia.org/ontology/administration> ?administration .
}

# Query 3: Birth place of the commander in Boshin War
SELECT ?birthPlace WHERE {
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Boshin_War> .
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
528,46,test,"Give me the war of the commander in Battle of La Rinconada de Ate and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query 1: War of the commander in Battle of La Rinconada de Ate
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Query 2: War of the military force in a societal event in Chile
SELECT ?result WHERE {
  ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?militaryForce <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",5,6,6,3,2,3,3,71,0,0,14,0,0.0,0
701,52,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II and parent of the child of Ramesses II.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find spouse of Amun-her-khepeshef who is also a spouse of Ramesses II
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> .

  # Step 2: Find children of Ramesses II with this spouse
  ?child <http://dbpedia.org/ontology/birthParent> ?spouse .
  ?child <http://dbpedia.org/ontology/deathParent> <http://dbpedia.org/resource/Ramesses_II> .

  # Step 3: Identify the child of this spouse (who is also a child of Ramesses II)
  ?grandChild <http://dbpedia.org/ontology/birthParent> ?child .

  # Step 4: Find the parent of this grandChild
  ?parent <http://dbpedia.org/ontology/birthParent> ?grandChild .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
427,54,test,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of Italian People's Party (1994) and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
SELECT ?fatherParty WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?alumnus <http://www.w3.org/2000/01/rdf-schema#parent> ?father .
  ?father <http://dbpedia.org/property/party> ?fatherParty .

  FILTER EXISTS { 
    ?party <http://dbpedia.org/ontology/name> ""Italian People's Party (1994)""@en .
    ?prodi <http://dbpedia.org/ontology/memberOf> ?party .
    ?prodi <http://www.w3.org/2000/01/rdf-schema#label> ""Romano Prodi""@en .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
963,16,test,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?administration WHERE {
  # Find the ruling party in Sremski Karlovci
  <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/ontology/rulingParty> ?rulingParty .
  
  # Ensure the ruling party is a political party
  ?rulingParty <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .

  # Find the administration associated with this ruling party
  ?administration <http://dbpedia.org/ontology/rulingParty> ?rulingParty .
  
  # Ensure the administration is linked to a region under Central European Time
  ?region <http://dbpedia.org/ontology/administrativeUnit> ?administration .
  ?region <http://dbpedia.org/property/timeZone> ""Central European Time"" .

  # Confirm that this region is categorized as a country
  ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}
```",4,6,5,2,2,3,2,20,0,0,84,0,0.0,0
435,27,test,Give me the territory administered from Reykjavík and work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
# Query 1: Territory administered from Reykjavík
SELECT ?territory WHERE {
  <http://dbpedia.org/resource/Reykjavík> <http://dbpedia.org/ontology/administrativeUnit> ?territory .
}

# Query 2: Work of the author of Iceland
SELECT ?work WHERE {
  ?author <http://www.w3.org/2000/01/rdf-schema#label> ""Iceland""@en .
  ?author <http://dbpedia.org/ontology/author> ?work .
}

# Query 3: Region of the time zone in Bombali Shebora Chiefdom
SELECT ?region WHERE {
  <http://dbpedia.org/resource/Bombali_Shebora_Chenchiefdom> <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?timeZone <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
184,48,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?finalParent WHERE {
  # Step 1: Find child of Archduke Joseph Francis of Austria
  <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?child .

  # Step 2: Determine the parent of that child
  ?child <http://dbpedia.org/ontology/parent> ?intermediateParent .

  # Step 3: Identify native of a landmark at elevation 96.0
  ?landmark <http://dbpedia.org/ontology/elevation> ""96.0""^^xsd:float ;
            <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?settlement .
  ?settlement <http://dbpedia.org/ontology/notableNative> ?native .

  # Step 4: Find the parent of that native
  ?native <http://dbpedia.org/ontology/parent> ?finalParent .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
659,47,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commander WHERE {
  # Step 1: Identify the Polish Horse as a military unit and organization
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?polishHorse rdfs:label ""Polish Horse""@en .

  # Step 2: Find commanders in wars that are events and military conflicts
  ?commander <http://dbpedia.org/ontology/commander> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Step 3: Check if these commanders were also in forces commanded by Arthur Wellesley
  ?commander <http://dbpedia.org/ontology/commander> ?force .
  ?force <http://dbpedia.org/property/commandedBy> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .

  # Ensure the commander is associated with the Polish Horse
  ?commander <http://dbpedia.org/ontology/memberOf> ?polishHorse .
}
```",5,9,6,3,2,3,3,71,0,0,71,0,0.0,0
534,16,test,"Give me the headquarter of the owner of RDS Arena and birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
# Part 1: Headquarters of the Owner of RDS Arena
SELECT ?headquarters WHERE {
  <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?owner .
  ?owner <http://dbpedia.org/ontology/headquarter> ?headquarters .
}

# Part 2: Birthplace of a Politician and Office Holder Child of Desmond FitzGerald
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?child <http://dbpedia.org/ontology/officeHolder> ?office .
  ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
754,16,test,Give me the parent of the child of Ram Khamhaeng and parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?commonParent WHERE {
  # Step 1: Find the child of Ram Khamhaeng
  ?child <http://dbpedia.org/ontology/birth> ?ramKhamhaeng .
  
  # Step 2: Find the parent of that child
  ?parentOfChild <http://dbpedia.org/ontology/birth> ?child .

  # Step 3: Identify the parent of May Hnin Htapi
  ?mayHninHtapi <http://dbpedia.org/ontology/birth> ?parentOfMay .
  
  # Step 4: Determine the parent of that parent
  ?grandParentOfMay <http://dbpedia.org/ontology/birth> ?parentOfMay .

  # Step 5: Find any commonality or relationship between these two entities
  FILTER (?parentOfChild = ?commonParent || ?grandParentOfMay = ?commonParent)
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
92,64,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
  ?person <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Jim_Sheppard_(musician)> .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
  ?film <http://dbpedia.org/property/reference> ?band .
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?film <http://dbpedia.org/property/title> ""Nevermore (2006 film)""^^<http://www.w3.org/2001/XMLSchema#string> .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,30,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?person WHERE {
  # Step 1: Find natives of Compton, California
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .
  
  # Step 2: Identify movies that are both a movie and a television show with Roz Ryan
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> ;
         <http://dbpedia.org/ontology/work> ?work ;
         <http://dbpedia.org/ontology/tvEpisode> ?tvShow .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .

  # Step 3: Ensure the person acted in this movie
  ?person <http://dbpedia.org/ontology/starring> ?movie .

  # Step 4: Ensure the person also acted in ""The Departed""
  ?person <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/The_Departed> .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
92,59,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
SELECT ?person ?associatedArtist WHERE {
  # Step 1: Find person who is an actor in ""Return to Nuke 'Em High Volume 1""
  <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/ontology/starring> ?person .
  
  # Step 2: Ensure the same person is a band member of Nevermore (2006 film)
  ?person <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nevermore_(film)> .

  # Step 3: Confirm this person is recognized as an artist
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  
  # Step 4: Find associated musical artists of the identified person
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
801,63,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of the true self of The Shadow and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v6 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify the writer of ""40 Dayz & 40 Nightz"" who is also a musical artist and an artist
  ?work <http://dbpedia.org/ontology/writer> ?writer .
  ?work rdfs:label ""40 Dayz & 40 Nightz""@en .
  
  # Ensure the writer is both a musical artist and an artist
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Step 2: Determine the alter ego associated with this writer
  ?trueSelf rdfs:label ""The Shadow""@en .
  ?alterEgo <http://dbpedia.org/property/professionalAlterEgo> ?trueSelf .
  
  # Link the writer to the alter ego
  ?writer <http://dbpedia.org/ontology/alias> ?alterEgo .

  # Step 3: Find the producer of a work by 50 Cent that is both a musical work and a song
  ?centWork <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/50_Cent> .
  ?centWork <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  ?centWork <http://dbpedia.org/property/producer> ?producer .

  # Step 4: Identify any associated musical artists linked to the initial writer
  ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
783,17,test,"Give me the associated musical artist of Appietus and band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Step 1: Find the person born as a persona of Ebony Reigns who is both an artist and a musical artist.
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Ebony_Reigns> <http://dbpedia.org/ontology/persona> ?persona .
  ?persona <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
           <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://dbpedia.org/ontology/artist> ?artistRole .
}

# Step 2: Find the band members of that person.
SELECT ?bandMember WHERE {
  ?person <http://dbpedia.org/ontology/bandMember> ?bandMember .
}

# Step 3: Find the associated musical artists of Appietus.
SELECT ?associatedArtist WHERE {
  <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
9,46,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT DISTINCT ?almaMater WHERE {
  # Find organizations in Belfast with a mayor who is a politician
  ?organization <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Belfast"" .
  ?organization <http://dbpedia.org/ontology/politicalLeader> ?mayor .
  ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Get the alma mater of the mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater1 .

  # Find awardees of the Royal Medal
  ?awardee <http://dbpedia.org/property/award> ?award .
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medal"" .
  
  # Get the alma mater of the awardee
  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater2 .

  # Find common alma mater
  FILTER (?almaMater1 = ?almaMater2)
  BIND(?almaMater1 AS ?almaMater)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
9,50,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?figure WHERE {
  # Step 1: Find the nickname of Queen's University Belfast
  <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/ontology/nickname> ?nickname .

  # Step 2: Identify awardees of Royal Medals and their alma mater
  ?person <http://dbpedia.org/property/awards> ?award .
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medal""@en .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Step 3: Link the alma mater to the nickname
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?nicknameLabel .
  FILTER(?nickname = ?nicknameLabel)

  # Return the figure (person) who links these elements
  BIND(?person AS ?figure)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
547,18,test,Give me the resting place of Alan Cunningham and resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Alan_Cunningham_(British_Army_officer)>
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)>
    <http://dbpedia.org/resource/Simon_Cadell>
  }
  ?person <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
}
```",3,3,4,1,3,3,3,71,1,3,0,0.25,1.0,0.4
617,49,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find children of Seleucus II Callinicus who are royalty
  ?royalChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of these royal children
  ?royalChild <http://dbpedia.org/ontology/birthParent> ?grandchild .
  
  # Step 3: Identify the commander in the Battle of Panium
  ?battleCommander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Battle_of_Panium> .

  # Step 4: Determine the parent of the commander's child
  ?childOfCommander <http://dbpedia.org/ontology/birthParent> ?battleCommander .
  ?parentOfChild <http://dbpedia.org/ontology/birthParent> ?childOfCommander .

  # Final condition to match grandchild with the parent found in step 4
  FILTER (?grandchild = ?parentOfChild)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
801,58,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of 50 Cent and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
SELECT ?professional WHERE {
  # Step 1: Identify the album ""What U See Is What U Get""
  <http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)> <http://purl.org/dc/terms/creator> ?writer .
  
  # Step 2: Find writers who are both a musical artist and an artist
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  
  # Step 3: Determine associated musical artists of these writers
  ?writer <http://dbpedia.org/property/associatedMusicalArtists> ?associatedArtist .
  
  # Step 4: Locate the work that is a musical work, song, and work produced by 50 Cent and one of these associated musical artists
  ?work <http://purl.org/dc/terms/creator> (50 Cent|<http://dbpedia.org/resource/50_Cent>) ;
        <http://purl.org/dc/terms/creator> ?associatedArtist ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/MusicalWork> <http://dbpedia.org/ontology/Song>) .
  
  # Step 5: Identify the professional role involved in this work
  ?work <http://dbpedia.org/property/producers> ?professional ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
92,63,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v6 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
# Step 1: Find the reference related to ""Nevermore"" (2006 film)
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://dbpedia.org/ontology/reference> ?reference .
}

# Step 2: Find band members of this reference who are artists
SELECT DISTINCT ?bandMember WHERE {
  ?reference <http://dbpedia.org/ontology/bandMember> ?bandMember .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 3: Find the band associated with Joseph Michael Furney and any associated musical artists
SELECT DISTINCT ?associatedArtist WHERE {
  <http://dbpedia.org/resource/Joseph_Michael_Furney> <http://dbpedia.org/ontology/memberOf> ?band .
  ?band <http://dbpedia.org/ontology/associatedBandMember> ?associatedArtist .
}

# Step 4: Find the band associated with Jim Sheppard and any associated musical artists
SELECT DISTINCT ?associatedArtist WHERE {
  <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/memberOf> ?band .
  ?band <http://dbpedia.org/ontology/associatedBandMember> ?associatedArtist .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
492,52,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v2 <http://dbpedia.org/property/author> ?v3 . },"```sparql
# Step 1: Find the work of the author of ""French Algeria""
SELECT ?work WHERE {
  <http://dbpedia.org/resource/French_Algeria> <http://purl.org/dc/terms/creator> ?author .
  ?author <http://www.w3.org/2002/07/owl#sameAs> ?person .
  ?person <http://dbpedia.org/ontology/work> ?work .
}

# Step 2: Find the person decedent at Algiers and also a person decedent at the work from step 1
SELECT DISTINCT ?decedent WHERE {
  ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
  ?decedent <http://dbpedia.org/ontology/deathPlace> ?work . # Assuming work is a place of death, which might need adjustment
}

# Step 3: Find the war involving Frédéric-Georges Herr and the decedent from step 2
SELECT DISTINCT ?war WHERE {
  ?war <http://dbpedia.org/ontology/battleCommander> <http://dbpedia.org/resource/Fr%C3%A9d%C3%A9ric-Georges_Herr> .
  ?war <http://dbpedia.org/ontology/battleCommander> ?decedent .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://dbpedia.org/resource/Event> . # Assuming event type
}

# Step 4: Find the commander in this war
SELECT DISTINCT ?commander WHERE {
  ?war <http://dbpedia.org/ontology/battleCommander> ?commander .
}
```

Note: The query assumes certain relationships and types that may need adjustment based on actual DBpedia data structure. Adjustments might be necessary for specific properties like `deathPlace` if it doesn't directly relate to works.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
626,17,test,Give me the awardee of the award of the military force of Battle of Borodino and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . },"```sparql
SELECT DISTINCT ?awardee WHERE {
  # Find the military force involved in the Battle of Borodino
  ?borodinoBattle <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  FILTER(?borodinoBattle = <http://dbpedia.org/resource/Battle_of_Borodino>) .

  # Find commanders who were involved in the Battle of Leipzig
  ?leipzigBattle <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(?leipzigBattle = <http://dbpedia.org/resource/Battle_of_Leipzig>) .

  # Check if the military force from Borodino awarded this commander
  ?militaryForce <http://dbpedia.org/property/awardee> ?awardee .
  FILTER(?commander = ?awardee) .
}
```",4,4,5,3,2,3,2,20,0,0,9,0,0.0,0
701,49,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Nefertari.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify the commander in Battle of Perire
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Perire""))

  # Step 2: Find the father of the commander who is royalty
  ?commander <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 3: Determine the spouse of this royal father
  ?father <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 4: Identify the child of Nefertari
  <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?nefertariChild .

  # Step 5: Find the parent of this child
  ?nefertariChild <http://dbpedia.org/ontology/father> ?parent .
  UNION
  ?nefertariChild <http://dbpedia.org/ontology/mother> ?parent .

  # Step 6: Combine results to find if spouse is also a parent of the child
  FILTER(?spouse = ?parent)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
994,60,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
SELECT ?bandMember WHERE {
  # Step 1: Identify the persona of Don Dokken who is a musical artist
  ?persona <http://dbpedia.org/ontology/birthName> ""Don Dokken"" .
  ?persona <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Step 2: Find associated musical artists
  ?persona <http://dbpedia.org/property/memberOf> ?band .
  ?band <http://dbpedia.org/ontology/member> ?associatedArtist .

  # Step 3: Determine which of these associated artists have references to Watchtower
  ?associatedArtist <http://dbpedia.org/ontology/reference> ?watchtowerReference .
  FILTER EXISTS { ?watchtowerReference <http://www.w3.org/2000/01/rdf-schema#label> ""Watchtower"" }

  # Step 4: Identify any band members of the persona
  ?persona <http://dbpedia.org/property/memberOf> ?bandMemberBand .
  ?bandMemberBand <http://dbpedia.org/ontology/member> ?bandMember .

  FILTER (?bandMember != ?persona)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,28,test,Give me the spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice and professional in Actress.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ted Martin McGinley"" .
  ?person <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actress> .
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,52,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
# Step 1: Get the true self of The Shadow
SELECT ?trueSelf WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alternateName> ?trueSelf .
}

# Step 2: Find the musical artist associated with Chris Taylor (music producer)
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

# Step 3: Identify a song that is both a musical work and produced by 50 Cent
SELECT ?song WHERE {
  ?song <http://dbpedia.org/ontology/work> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?song <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/50_Cent> .
}

# Step 4: Find a professional link among these entities
SELECT DISTINCT ?professional WHERE {
  # Assuming the professional is linked through their role or association
  OPTIONAL { ?trueSelf <http://dbpedia.org/ontology/profession> ?professional . }
  OPTIONAL { ?artist <http://dbpedia.org/ontology/profession> ?professional . }
  OPTIONAL { ?song <http://dbpedia.org/ontology/producer> ?professional . }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
492,54,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at Algiers.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT DISTINCT ?person WHERE {
  # Step 1: Find the decedent at Joseph C. Satterthwaite's work
  ?work <http://dbpedia.org/ontology/employee> <http://dbpedia.org/resource/Joseph_C._Satterthwaite> .
  ?work <http://dbpedia.org/ontology/decedent> ?person .

  # Step 2: Find the commander in a war that is both a military conflict and an event, related to Battle of Verdun
  ?battle <http://dbpedia.org/resource/Battle_of_Verdun> .
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  ?war <http://dbpedia.org/ontology/battle> ?battle .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Step 3: Find the decedent at Algiers
  ?location <http://dbpedia.org/resource/Algiers> .
  ?location <http://dbpedia.org/ontology/decedent> ?person .

  # Combine conditions to find a single individual meeting all criteria
  FILTER (?person = ?decedent1 && ?person = ?decedent2)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
767,61,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
SELECT DISTINCT ?almaMater WHERE {
  # Step 1: Find administration related to George Kilbon Nash
  OPTIONAL { 
    <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/profession> ?administration .
  }
  
  # Step 2: Find alter ego of Matthew Burland that is a fictional character
  OPTIONAL {
    ?fictionalCharacter <http://dbpedia.org/property/alterEgo> <http://dbpedia.org/resource/Matthew_Burland> .
    ?fictionalCharacter <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  }
  
  # Step 3: Find alma mater for both entities
  {
    ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .
  } UNION {
    ?fictionalCharacter <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
365,8,test,Give me the band of Phil Alvin and reference to the real name of The Blasters.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?band ?reference WHERE {
  <http://dbpedia.org/resource/Phil_Alvin> <http://dbpedia.org/ontology/memberOf> ?band .
  OPTIONAL { 
    ?band <http://www.w3.org/2004/02/skos/core#altLabel> ?reference .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
10,24,test,"Give me the professional in the birth name of Sharon Kao and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Step 1: Find Sharon Kao's birth name
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Identify the artist born as Luke Francis Vibert
SELECT ?artist WHERE {
  ?artist <http://www.w3.org/2000/01/rdf-schema#label> ""Luke Francis Vibert""@en .
  ?artist <http://dbpedia.org/ontology/birthName> ""Luke Francis Vibert"" .
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}

# Step 3: Find band members of the artist identified in step 2
SELECT ?bandMember WHERE {
  ?artist <http://dbpedia.org/property/bandMember> ?bandMember .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
617,63,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find successor of Antiochus II Theos who is royalty
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_II_Theos> .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find child of this successor who is royalty
  ?child1 <http://dbpedia.org/ontology/parent> ?successor .
  ?child1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find spouse of the child of Antiochus III the Great
  ?antiochusIIIChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?spouse <http://dbpedia.org/property/spouse> ?antiochusIIIChild .

  # Step 4: Find parent of the child of Antiochus (son of Antiochus III the Great)
  ?antiochusSon <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?parent <http://dbpedia.org/ontology/child> ?antiochusSon .

  # Step 5: Find intersection
  FILTER (?result = ?child1 && ?result = ?spouse && ?result = ?parent)
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
963,18,test,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton and administration of the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v1 . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Step 1: Find the time zone of Herzegovina-Neretva Canton
  <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/ontology/timeZone> ?timeZone .

  # Step 2: Find the country associated with this time zone
  ?country <http://www.w3.org/2006/vcard/ns#adr;timezone> ?timeZone .
  ?country <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 3: Find the ruling party in Sremski Karlovci
  <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/ontology/administration> ?administration .
  ?administration <http://dbpedia.org/property/rulingParty> ?rulingParty .
  ?rulingParty <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .

  # Step 4: Find entities in the country related to the ruling party
  ?entity <http://dbpedia.org/property/country> ?country .
  ?entity <http://dbpedia.org/ontology/administration> ?administration .
}
```",5,7,6,3,2,3,2,20,0,0,84,0,0.0,0
528,61,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
# Step 1: Identify Narciso Campero's birth name and associated force
SELECT ?force WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Narciso Campero"" .
  ?person <http://dbpedia.org/ontology/militaryForce> ?force .
}

# Step 2: Identify the work of --01-09 and its commander
SELECT ?war WHERE {
  <http://dbpedia.org/resource/--01-09> <http://dbpedia.org/ontology/creator> ?work .
  ?work <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?battle <http://dbpedia.org/ontology/war> ?war .
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
404,59,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
SELECT ?finalParent WHERE {
  # Step 1: Find Princess Victoria Louise of Prussia's birth name
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 2: Find her spouse who was born as a royalty
  ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .
  ?spouse <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 3: Determine the parent of that spouse who is also a royalty
  ?parent <http://dbpedia.org/ontology/child> ?spouse .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 4: Identify the child of this royal parent
  ?royalChild <http://dbpedia.org/ontology/parent> ?parent .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 5: Find the parent of this child
  ?finalParent <http://dbpedia.org/ontology/child> ?royalChild .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
427,38,test,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
# Query 1: Party of Lamberto Andreotti's Father
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/memberOf> ?party .
}

# Query 2: Party of Romano Antonio Prodi
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Romano_Antonio_Prodi> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?person .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?person <http://dbpedia.org/ontology/memberOf> ?party .
  ?person <http://dbpedia.org/ontology/officeHolder> ?office .
  FILTER EXISTS { ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> }
}
```",4,6,5,2,2,3,3,71,0,0,3,0,0.0,0
645,16,test,"Give me the entity in the residence, that is a country, of James Wilkes Maurice and alma mater of the child of Richard Pankhurst.",SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Step 1: Get the residence of James Wilkes Maurice that is a country
  <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 2: Get the child of Richard Pankhurst and their alma mater
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Richard_Pankhurst> .
  ?child <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Step 3: Find an entity that is both in the residence country and alma mater
  FILTER (?residence = ?entity || ?almaMater = ?entity)
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
435,22,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?territory WHERE {
  <http://dbpedia.org/resource/Iceland> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?types .
  FILTER (?types IN (<http://dbpedia.org/ontology/Settlement>, <http://dbpedia.org/ontology/Town>, <http://dbpedia.org/ontology/Region>) && 
          EXISTS { ?types <http://www.w3.org/2000/01/rdf-schema#label> ""Icelandic""@en }).
  
  ?territory <http://dbpedia.org/property/administeredFrom> <http://dbpedia.org/resource/Iceland>.
  ?bombaliSheboraChiefdom <http://dbpedia.org/ontology/timeZone> ?timeZone .
  <http://dbpedia.org/resource/Bombali_Shebora_Cheifdom> <http://www.w3.org/2000/01/rdf-schema#label> ""Bombali Shebora Chiefdom""@en.
  
  ?territory <http://dbpedia.org/ontology/timeZone> ?timeZone .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
314,24,test,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of the award of Sergei Makovetsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?commander WHERE {
  # Step 1: Find Lisa Gavrić's profession
  <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/ontology/profession> ?profession .
  
  # Step 2: Filter by event types
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/SocietalEvent> .

  # Step 3: Find Sergei Makovetsky's award
  <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/award> ?award .
  
  # Step 4: Identify commanders in the profession who received the same award
  ?commander <http://dbpedia.org/ontology/profession> ?profession ;
             <http://dbpedia.org/property/award> ?award .
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
488,71,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Step 1: Tokugawa Masako's Spouse's Father Administration
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?father <http://dbpedia.org/ontology/administration> ?administration .
}

UNION

# Step 2: Matsudaira Tadamasa's Ancestral Death Place
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?father1 .
  ?father1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?father1 <http://dbpedia.org/ontology/politician> _:politician .
  ?father1 <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}

UNION

# Step 3: Saitō Hajime's War Commander Birthplace
SELECT ?birthPlace WHERE {
  ?war <http://dbpedia.org/ontology/personInvolved> <http://dbpedia.org/resource/Saitō_Hajime> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?event .
  ?event <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://dbpedia.org/ontology/SocialEvent> .
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
485,22,test,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
SELECT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Eric_Gregory_Award> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Western_European_Time> .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?birthPlace <http://dbpedia.org/ontology/location> ?region .
}
```",4,7,5,2,2,2,3,28,0,0,5,0,0.0,0
617,56,test,"Give me the parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of Seleucus II Callinicus and spouse of Laodice IV.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find the commander in the Battle of Panium
  <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?commander .

  # Step 2: Find children of this commander
  ?child <http://dbpedia.org/ontology/father> ?commander .
  
  # Step 3: Identify those who are royalty and also a child of Seleucus II Callinicus
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .

  # Step 4: Determine the spouse of Laodice IV
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Laodice_IV> .
  
  # Ensure the child is also the spouse
  FILTER (?child = ?spouse)

  # Step 5: Find the parent of this individual
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Parent> .
  ?parent <http://dbpedia.org/ontology/child> ?spouse .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,20,test,"Give me the birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils and landmark at elevation of the award of the commander in Battle of Chishui River.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
# Step 1: Identify the associated musical artist
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/member> ?member .
  ?member <http://dbpedia.org/ontology/memberOf> ?artist .
  FILTER (
    (?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>) ||
    (?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup>) ||
    (?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>)
  )
}

# Step 2: Find a member's birthplace
SELECT ?birthPlace WHERE {
  ?member <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER (?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)
}

# Step 3: Identify the commander in Battle of Chishui River
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 4: Determine awards received by the commander
SELECT ?award WHERE {
  ?commander <http://dbpedia.org/ontology/receivedAward> ?award .
}

# Step 5: Find landmarks at elevation of the award
SELECT ?landmark WHERE {
  ?award <http://dbpedia.org/property/elevation> ?elevation .
  ?landmark <http://dbpedia.org/property/elevation> ?elevation .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
959,69,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . }","```sparql
SELECT ?native WHERE {
  # Step 1: Find the manager of the 1998 Kashima Antlers season
  ?manager <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1998_Kashima_Antlers_season> .
  ?manager <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/ontology/SportsManager> .

  # Step 2: Find the person born in 1958 who managed the team associated with that manager
  ?person <http://dbpedia.org/property/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> .
  ?person <http://dbpedia.org/ontology/team> ?team .
  ?manager <http://dbpedia.org/ontology/team> ?team .

  # Step 3: Determine the alma mater of this person
  ?person <http://dbpedia.org/property/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
             <http://www.w3.org/2000/01/rdf-schema#label> ?labelAlmaMater .
  FILTER(CONTAINS(LCASE(?labelAlmaMater), ""japanese"") && 
         CONTAINS(LCASE(?labelAlmaMater), ""university"") &&
         CONTAINS(LCASE(?labelAlmaMater), ""educational institution""))

  # Step 4: Identify the residence of Yōichi Masuzoe, which must be a country
  <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 5: Find the native place of the person identified in step 2 who has the residence from step 4
  ?person <http://dbpedia.org/ontology/nationality> ?nationality .
  ?nationality <http://www.w3.org/2000/01/rdf-schema#label> ?residenceLabel .
  FILTER(?residenceLabel = ?residence)

  # Final result: Native place of the person
  ?person <http://dbpedia.org/ontology/birthPlace> ?native .
}
```",8,14,9,3,3,3,3,71,0,0,3,0,0.0,0
251,28,test,"Give me the death place of the author of The Twelve Abbots of Challant and administration of the ruling party, that is a political party and an organisation, in Sicily and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v5 . },"```sparql
SELECT DISTINCT ?deathPlace ?partyAdministration ?warLocation WHERE {
  # Step 1: Find the author of ""The Twelve Abbots of Challant""
  ?work <http://purl.org/dc/terms/creator> ?author .
  ?work <http://dbpedia.org/ontology/bookTitle> ""The Twelve Abbots of Challant"" .

  # Step 2: Get the death place of the author
  ?author <http://dbpedia.org/property/deathPlace> ?deathPlace .

  # Step 3: Find the ruling party in Sicily and its administration
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .
  ?party <http://dbpedia.org/property/administration> ?administration .
  ?administration <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Sicily> .

  # Step 4: Find the war involving Louis François Félix Musnier and its location
  ?musnier <http://dbpedia.org/ontology/battle> ?war .
  ?musnier <http://www.w3.org/2000/01/rdf-schema#label> ""Louis François Félix Musnier"" .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://dbpedia.org/property/location> ?warLocation .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
747,65,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on the birth date of Pavlo Khudzik and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v4 . }","```sparql
# Part 1: Band of Tracey Elizabeth McSween
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Tracey Elizabeth McSween"" .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}

UNION

# Part 2: Band of person born on the same date as Pavlo Khudzik
SELECT ?band WHERE {
  ?khudzik <http://dbpedia.org/ontology/birthDate> ?birthdate .
  ?person <http://dbpedia.org/ontology/birthDate> ?birthdate .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}

UNION

# Part 3: Band of the writer of a song by Amba Shepherd
SELECT ?band WHERE {
  ?work <http://purl.org/dc/terms/creator> ""Amba Shepherd"" ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  ?work <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
294,20,test,"Give me the entity in Nashville, Tennessee and resting place of the architect of P. D. Houston Jr. House and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT DISTINCT ?entity WHERE {
  # Find the architect of P.D. Houston Jr. House and their resting place
  OPTIONAL {
    <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?architect .
    ?architect <http://dbpedia.org/ontology/deathPlace> ?restingPlace1 .
    FILTER(STRSTARTS(STR(?restingPlace1), ""Nashville, Tennessee""))
  }
  
  # Find the resting place of Luke Lea
  OPTIONAL {
    <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/deathPlace> ?restingPlace2 .
    FILTER(STRSTARTS(STR(?restingPlace2), ""Nashville, Tennessee""))
  }
  
  # Ensure both entities are in Nashville
  VALUES ?entity { ?restingPlace1 ?restingPlace2 }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
339,20,test,Give me the father of the child of the parent of Princess Olga of Greece and Denmark and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Step 1: Identify Princess Olga's parent (father)
  <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> <http://dbpedia.org/ontology/father> ?olgaFather .

  # Step 2: Find a child of Olga's father
  ?childOfOlgaFather <http://dbpedia.org/ontology/father> ?olgaFather .
  
  # Step 3: Identify Frederick VIII and his predecessor
  <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> <http://dbpedia.org/ontology/predecessor> ?predecessor .

  # Step 4: Find a child of the predecessor's child
  ?childOfPredecessorChild <http://dbpedia.org/ontology/father> ?predecessorChild .
  ?predecessorChild <http://dbpedia.org/ontology/father> ?predecessor .

  # Step 5: Determine the father of the child found in step 2
  ?childOfOlgaFather <http://dbpedia.org/ontology/father> ?father .
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
142,8,test,Give me the entity in Japan and birthplace of the actor of Papa wa Newscaster.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?actor <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/Papa_wa_Newscaster> .
  ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place> .
  FILTER EXISTS { ?birthPlace <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> }
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
820,18,test,Give me the child of the parent of Jason Schwartzman and professional in the award of the author of Understanding Comics.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v1 . ?result <http://dbpedia.org/property/father> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?child WHERE {
  # Step 1: Find Jason Schwartzman's parent
  <http://dbpedia.org/resource/Jason_Schwartzman> <http://dbpedia.org/ontology/parent> ?parent .

  # Step 2: Find the child of that parent
  ?parent <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Identify the author of ""Understanding Comics""
  <http://dbpedia.org/resource/Understanding_Comics> <http://purl.org/dc/terms/creator> ?author .

  # Step 4: Determine the award related to this author
  ?author <http://dbpedia.org/ontology/award> ?award .

  # Step 5: Find professionals in that award
  ?award <http://dbpedia.org/ontology/nominee> ?child .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
10,23,test,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and professional in the birth name of Sharon Kao.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
# Step 1: Find the entity for Matt Colton who is an artist
SELECT ?mattColton WHERE {
  ?mattColton <http://dbpedia.org/ontology/birthName> ""Matt Colton"" .
  ?mattColton <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}

# Step 2: Find Sharon Kao's birth name
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 3: Find associated musical artist connection between Matt Colton and the professional identity of Sharon Kao's birth name
SELECT DISTINCT ?associatedArtist WHERE {
  # Assuming we have identified ?mattColton from step 1 and ?sharonKaoBirthName from step 2
  ?mattColton <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  
  # Check if this associated artist is linked to Sharon Kao's professional identity
  OPTIONAL {
    ?sharonKaoBirthName <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    FILTER(?associatedArtist = ?sharonKaoBirthName)
  }
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
391,48,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . }","```sparql
SELECT ?native WHERE {
  # Step 1: Identify the nickname of Jackson, Tennessee
  <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/nickName> ?figure .

  # Step 2 and 3: Find movies where this figure acted with Roz Ryan, which are also works and television shows
  ?movie <http://dbpedia.org/ontology/starring> ?figure ;
         <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/2002/07/owl#sameAs> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  OPTIONAL { ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> . }

  # Step 4: Find the native place of this figure
  ?figure <http://dbpedia.org/ontology/birthPlace> ?native .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
9,69,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?figure WHERE {
  ?org a <http://dbpedia.org/ontology/Organisation> ;
       <http://dbpedia.org/ontology/location> ?location .
  ?location rdfs:label ""Northern Ireland""@en .

  ?inst a <http://dbpedia.org/ontology/EducationalOrganization> ;
        <http://dbpedia.org/ontology/location> ?location .

  FILTER(?org = ?inst)

  ?mayor a <http://dbpedia.org/ontology/Politician> ;
         <http://dbpedia.org/property/mayorOf> ?belfastOrg .
  ?belfastOrg <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .

  ?mayor <http://dbpedia.org/ontology/almaMater> ?inst .

  ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Royal_Medal> .
  ?awardee <http://dbpedia.org/ontology/almaMater> ?inst .

  ?inst <http://dbpedia.org/ontology/nickname> ?figure .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
232,51,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . },"```sparql
SELECT ?native WHERE {
  # Step 1: Find Sean Pertwee's claim to fame that includes both a film and a military conflict.
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/claimToFame> ?fame .
  
  # Ensure the fame is both a film and a military conflict
  ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?fame2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  
  # Step 2: Find actors associated with these claims to fame who are also politicians and office holders from France.
  ?actor <http://dbpedia.org/ontology/actor> ?fame .
  ?actor <http://dbpedia.org/ontology/actor> ?fame2 .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
  ?actor <http://dbpedia.org/ontology/officeHolder> ?office .

  # Step 3: Determine the native place of these individuals.
  ?actor <http://dbpedia.org/ontology/nativePlace> ?native .

  # Step 4: Identify their residence, ensuring it is a settlement and British.
  ?actor <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
378,67,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
SELECT ?commander ?claimToFame WHERE {
  # Step 1: Find reference related to Peninsular War
  ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Peninsular_War> .
  
  # Step 2: Identify the commander of this reference
  ?reference <http://dbpedia.org/ontology/commander> ?commander .

  # Step 3: Find wars involving Carl Pontus Gahn and Thomas Trigge
  ?war1 <http://dbpedia.org/ontology/battleCommander> <http://dbpedia.org/resource/C._P._Gahn> .
  ?war2 <http://dbpedia.org/ontology/battleCommander> <http://dbpedia.org/resource/Thomas_Trigge> .

  # Step 4: Ensure these wars are military conflicts, societal events, and general events
  ?war1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/MilitaryConflict>, <http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/Event>)).
  
  ?war2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/MilitaryConflict>, <http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/Event>)).
  
  # Step 5: Retrieve the claim to fame of the identified commander
  ?commander <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
659,51,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?commander WHERE {
  # Step 1: Find the war involving the regiment
  ?war <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://dbpedia.org/property/militaryForce> <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> .
  ?war a <http://www.w3.org/2002/07/owl#Thing> ;
       a <http://dbpedia.org/ontology/MilitaryConflict>, <http://dbpedia.org/ontology/Event> .

  # Step 2: Find the military force associated with Rutger Jan Schimmelpenninck
  ?force <http://dbpedia.org/property/referenceTo> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  ?force a <http://www.w3.org/2002/07/owl#Thing> ;
         a <http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 3: Find the commander involved in both
  ?commander <http://dbpedia.org/ontology/commanderOfMilitaryUnit> ?unit .
  ?unit <http://dbpedia.org/property/militaryForce> ?force ;
        <http://dbpedia.org/property/battle> ?battle .
}
```",5,10,6,3,2,3,3,71,0,0,31,0,0.0,0
959,30,test,Give me the native of Japan and manager of the team of Takashi Sekizuka and member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> .
  ?team <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Takashi_Sekizuka> .
  ?team <http://dbpedia.org/ontology/teamManager> ?person .
  ?person <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/University_of_Tsukuba> .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
421,28,test,Give me the band member of the awardee of [[#Awards and nominations and native of the birthplace of Samir Bekrić and person born as the birth name of Dino Merlin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
# Step 1: Find Samir Bekrić's birthplace
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Step 2: Find a native of that birthplace
SELECT ?nativePerson WHERE {
  ?nativePerson <http://dbpedia.org/ontology/nativeOf> ?birthPlace .
}

# Step 3: Find an awardee associated with the native person
SELECT ?awardee WHERE {
  ?award <http://dbpedia.org/property/recipient> ?awardee ;
         <http://dbpedia.org/property/recipients> ?nativePerson .
}

# Step 4: Determine Dino Merlin's birth name
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 5: Find a person born as that birth name
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 6: Determine band membership of the awardee
SELECT ?bandMember WHERE {
  ?awardee <http://dbpedia.org/property/memberOfBand> ?band ;
           <http://dbpedia.org/ontology/member> ?bandMember .
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
378,18,test,"Give me the war of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Joaquín Blake.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query for wars associated with Carl Pontus Gahn and Joaquín Blake
SELECT ?person ?war WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> 
    <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake>
  }
  ?person <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?war)
}

UNION

# Query for claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?person ?claimToFame WHERE {
  ?person <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mah%C3%B3n> .
  ?person <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
}
```",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
767,50,test,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to the alter ego of Black Hood.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
# Step 1: Find the administration related to George Kilbon Nash
SELECT ?administration WHERE {
  ?entity <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/George_Kilbon_Nash> .
  ?entity <http://dbpedia.org/ontology/administration> ?administration .
}

# Step 2: Find the alter ego of Black Hood
SELECT ?alterEgo WHERE {
  ?character <http://dbpedia.org/ontology/alias> ""Black Hood"" .
  ?character <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
}

# Step 3: Find the alma mater for both entities found in steps 1 and 2
SELECT DISTINCT ?almaMater WHERE {
  VALUES (?entity) { 
    (<administration_from_step_1>) 
    (<alterEgo_from_step_2>)
  }
  ?entity <http://dbpedia.org/ontology/alumniOf> ?almaMater .
}
```

Note: Replace `<administration_from_step_1>` and `<alterEgo_from_step_2>` with the actual URIs obtained from executing steps 1 and 2.",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
328,68,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?person WHERE {
  # Person decedent at Budapest
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
  
  # Leader of a government agency office
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> ;
          <http://dbpedia.org/ontology/leader> ?person .
  
  # Association with Joseph Stalin
  ?stalinOffice <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Joseph_Stalin> ;
                <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?person <http://dbpedia.org/ontology/office> ?stalinOffice .

  # Awardee of the commander in Volcano and Ryukyu Islands campaigns
  ?volcanoCampaign <http://dbpedia.org/ontology/commander> ?person ;
                   <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  FILTER(STRSTARTS(STR(?volcanoCampaign), ""Volcano""))

  ?ryukyuCampaign <http://dbpedia.org/ontology/commander> ?person ;
                   <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  FILTER(STRSTARTS(STR(?ryukyuCampaign), ""Ryukyu Islands""))
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
92,51,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Jim Sheppard""@en .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
427,52,test,Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?person ?party WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Michele_Pinto> 
    <http://dbpedia.org/resource/Luigi_Andreotti#Father>
    <http://dbpedia.org/resource/Romano_Prodi>
  }
  ?person <http://dbpedia.org/ontology/politicalParty> ?party .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
184,65,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
# Step 1: Find the child of Archduke Joseph Francis of Austria
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Find the parent of the native of Budapest
SELECT ?parent WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
  ?person <http://dbpedia.org/ontology/familyName> ?parent .
}

# Step 3: Find the child of the child (grandchild) of Archduke Ladislaus Philipp of Austria that is royalty
SELECT ?grandchild WHERE {
  <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/familyName> ?parent .
  ?parent <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 4: Find the parent of the individual that fits all criteria
SELECT DISTINCT ?parent WHERE {
  # Assuming ?individual is the result from combining steps above
  ?individual <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  ?individual <http://dbpedia.org/ontology/familyName> ?parent .
}
```

Note: The query assumes that intermediate results are stored in variables like `?child`, `?grandchild`, and `?individual` for further processing. In practice, these steps would need to be combined or executed iteratively to find the final result.",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
9,64,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of Allen Hill (scientist).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
SELECT ?almaMater WHERE {
  # Step 1: Find the organization in Belfast that has a nickname as an educational institution in Northern Ireland and is linked to Allen Hill's alma mater
  ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
                <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Belfast> .
  
  ?organization <http://dbpedia.org/ontology/nickname> ?nickname .
  ?nickname <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> ;
             <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Northern_Ireland> .
  
  ?organisationAlmaMater <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Allen_Hill_(scientist)> .
  FILTER(?organization = ?organisationAlmaMater)

  # Step 2: Find the mayor who is a politician associated with this organization
  ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
         <http://dbpedia.org/property/politicalOffice> ?office .
  
  ?office <http://dbpedia.org/ontology/positionHeldBy> ?mayor ;
          <http://dbpedia.org/ontology/location> ?organization .

  # Step 3: Find the alma mater of this mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
487,20,test,"Give me the country of the administration of the person born on 1955-01-26 and administration of the person born, that is a soccer player, as the birth name of Phil Scott.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/country> ?result . }","```sparql
# Query for a person born on 1955-01-26 and their administration's country
SELECT ?person ?country WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://dbpedia.org/ontology/administration> ?admin .
  ?admin <http://dbpedia.org/ontology/country> ?country .
}

UNION

# Query for Phil Scott's birth name if he is a soccer player and their administration's country
SELECT ?person ?birthName ?country WHERE {
  ?person rdfs:label ""Phil Scott"" .
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/sportsTeam> ?team .
  ?team <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  ?person <http://dbpedia.org/ontology/administration> ?admin .
  ?admin <http://dbpedia.org/ontology/country> ?country .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
54,61,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
# Step 1: Find the parent of Thado Minsaw of Prome
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/father> ?parent .
}

# Step 2: Find the child of that parent
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/child> ?child .
}

# Step 3: Determine the reference for Thihapate of Mohnyin
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference .
}

# Step 4: Locate the child of this reference who is both an office holder and royalty
SELECT ?child WHERE {
  ?reference <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 5: Find the predecessor of this identified child
SELECT ?predecessor WHERE {
  ?child <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```

Note: This query assumes that each step can be executed independently and that the necessary data exists in DBpedia. The actual execution would require combining these steps into a single SPARQL query with appropriate variable bindings.",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
92,38,test,"Give me the band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
# Query for Joseph Michael Furney's band
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Joseph_Michael_Furney> <http://dbpedia.org/ontology/memberOf> ?band .
}

UNION

# Query for Jim Sheppard's associated musical artist
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedBand> ?artist .
  FILTER EXISTS { ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
827,18,test,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894) and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?grandchildFather WHERE {
  # Step 1: Find Charles Alexander's parent
  <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/father> ?parent .

  # Step 2: Find children of that parent who are royalty
  ?child <http://dbpedia.org/ontology/father> ?parent .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find grandchildren who are royalty
  ?grandchild <http://dbpedia.org/ontology/father> ?child .
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Identify grandchildren whose father is Charles Augustus
  ?grandchild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> .

  # Step 5: Determine the father of these grandchildren
  ?grandchildFather <http://dbpedia.org/ontology/father> ?grandchild .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
435,21,test,Give me the work of the author of Iceland and region of Greenwich Mean Time and territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
SELECT ?authorWork WHERE {
  # Find the author of ""Iceland""
  <http://dbpedia.org/resource/Iceland> <http://purl.org/dc/terms/creator> ?author .

  # Find works by this author
  ?author <http://purl.org/dc/terms/created> ?authorWork .

  OPTIONAL {
    # Find region associated with Greenwich Mean Time
    ?gmtRegion <http://dbpedia.org/ontology/timeZone> ""GMT"" .
  }

  OPTIONAL {
    # Find territory administered from Reykjavík
    ?territory <http://dbpedia.org/ontology/administrativeCapital> <http://dbpedia.org/resource/Reykjavík> .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
547,64,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of the award of Gerald Graham and resting place of Simon Cadell.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT DISTINCT ?restingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  {
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?parent .
    ?parent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton> .
    ?grandchild <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
  
  UNION
  
  # Resting place of the awardee of the award of Gerald Graham
  {
    ?award <http://dbpedia.org/property/recipient> ?awardee .
    ?gerald <http://dbpedia.org/ontology/receivesAward> ?award .
    FILTER(?gerald = <http://dbpedia.org/resource/Gerald_Graham>) .
    ?awardee <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
  
  UNION
  
  # Resting place of Simon Cadell
  {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
701,47,test,Give me the parent of the child of the child of Seti I and parent of the child of Nefertari.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT DISTINCT ?parent WHERE {
  # Part related to Seti I
  ?child1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Seti_I> .
  ?grandchild <http://dbpedia.org/ontology/child> ?child1 .
  ?parentSeti <http://dbpedia.org/ontology/child> ?grandchild .

  # Part related to Nefertari
  ?child2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nefertari> .
  ?parentNefertari <http://dbpedia.org/ontology/child> ?child2 .

  # Find common parent
  FILTER (?parentSeti = ?parentNefertari)
  BIND(?parentSeti AS ?parent)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
161,54,test,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
# Part 1: Commander in Biscay Campaign and their military force
SELECT ?commander ?force WHERE {
  <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Part 2: Francisco Franco's military force
SELECT ?francoForce WHERE {
  <http://dbpedia.org/resource/Francisco_Franco> <http://dbpedia.org/ontology/militaryForce> ?francoForce .
  ?francoForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?francoForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Part 3: Predecessor of Indalecio Prieto and their military force
SELECT ?predecessor ?prietoForce WHERE {
  ?indalecio <http://dbpedia.org/ontology/predecessor> ?predecessor .
  FILTER(STR(?indalecio) = ""Indalecio_Prieto"")
  
  ?predecessor <http://dbpedia.org/ontology/militaryForce> ?prietoForce .
  ?prietoForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?prietoForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
701,46,test,Give me the parent of the child of Ramesses II and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT DISTINCT ?parent WHERE {
  # Step 1: Children of Ramesses II
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ramesses_II> .
  
  # Step 2: Parents of these children (should be Ramesses II)
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .

  # Step 3: Spouse of Amun-her-khepeshef
  OPTIONAL { 
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
    
    # Step 4: Children of this spouse
    ?child2 <http://dbpedia.org/ontology/birthParent> ?spouse .

    # Step 5: Parents of these children (should include Amun-her-khepeshef)
    ?child2 <http://dbpedia.org/ontology/birthParent> ?parent2 .
    
    FILTER(?parent = ?parent2) 
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
232,52,test,"Give me the native of London and child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
# Step 1: Find Jon Pertwee's birth name
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Find the person born with that birth name
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  FILTER(?birthName = ""Jon Pertwee's Birth Name"") # Replace with actual birth name from step 1
}

# Step 3: Find the child of this person
SELECT ?child WHERE {
  ?person <http://dbpedia.org/ontology/child> ?child .
}

# Step 4: Identify Sean Pertwee's claim to fame (film and military conflict)
SELECT ?claimToFame WHERE {
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
  FILTER((?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>) &&
         (?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>))
}

# Step 5: Find the actor of that film/military conflict
SELECT ?actor WHERE {
  ?claimToFame <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 6: Determine if this person is native to London
SELECT ?nativeOfLondon WHERE {
  ?actor <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/London> .
}
```

Note: This query assumes that the SPARQL endpoint can handle multiple queries in sequence or that these steps are executed programmatically. The actual implementation may require adjustments based on available data and specific DBpedia schema details.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
801,37,test,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
SELECT ?artist WHERE {
  # Step 1: Find the associated musical artist of Chris Taylor (music producer)
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .

  # Step 2: Find a work that is both a musical work and a song produced by Chris Taylor
  ?work <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .

  # Step 3: Check if there's a professional in the role of ""Rapper"" associated with this work
  ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Rapper> .
  ?professional <http://dbpedia.org/ontology/work> ?work .

  # Return the artist found in Step 1 if all conditions are met
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
778,17,test,"Give me the entity in United States and author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
SELECT ?entity WHERE {
  # Step 1: Identify the author of Pushd and Popd
  ?author <http://dbpedia.org/ontology/authored> ?work .
  ?work <http://purl.org/dc/terms/title> ""Pushd"" ;
        <http://purl.org/dc/terms/title> ""Popd"" .

  # Step 2: Find software works by this author
  ?softwareWork <http://dbpedia.org/ontology/author> ?author .
  ?softwareWork <http://www.w3.org/2004/02/skos/core#prefLabel> ?title .
  FILTER (CONTAINS(LCASE(?title), ""software""))

  # Step 3: Find an entity in the United States associated with this software
  ?entity <http://dbpedia.org/ontology/associatedWith> ?softwareWork ;
          <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  FILTER (CONTAINS(LCASE(?name), ""united states""))
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
303,24,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
SELECT ?party WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/El_Valle_de_Antón> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://schema.org/name> ""Arnulfo Arias Madrid"" .
  ?person <http://dbpedia.org/property/politicalParty> ?party .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
378,59,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT DISTINCT ?war WHERE {
  # Step 1: Find the birth name of Carl Pontus Gahn
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 2: Find wars associated with the person born under that name
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/battle> ?war1 .
  ?war1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 3: Find wars referenced as related to both the Peninsular War and those found in step 2
  ?war2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war2 <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Peninsular_War> .
  ?war2 <http://dbpedia.org/ontology/reference> ?war1 .

  # Return the wars that meet all criteria
  BIND(?war2 AS ?war)
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
232,71,test,"Give me the child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/property/residence> ?v8 . ?result <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v4 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?child WHERE {
  # Step 1: Find the native politician and office holder of France
  ?politician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
              <http://dbpedia.org/ontology/officeHolder> ?office .

  # Step 2: Find their residence in a British settlement
  ?politician <http://dbpedia.org/ontology/nativePlace> ?settlement .
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> ;
              <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 3: Find the professional actor, narrator, and producer from this settlement
  ?professional <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> ;
                <http://dbpedia.org/ontology/profession> ?actorRole ;
                <http://dbpedia.org/ontology/residence> ?settlement .
  VALUES ?actorRole {<http://dbpedia.org/ontology/Actor> <http://dbpedia.org/ontology/Narrator> <http://dbpedia.org/ontology/Producer>} .

  # Step 4: Determine their claim to fame involving both a film and a military conflict
  ?professional <http://dbpedia.org/ontology/claimToFame> ?fame .
  ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1, ?type2 .
  VALUES (?type1 ?type2) {(<http://dbpedia.org/ontology/Film> <http://dbpedia.org/ontology/MilitaryConflict>)
                         (<http://dbpedia.org/ontology/MilitaryConflict> <http://dbpedia.org/ontology/Film>)} .

  # Step 5: Identify the actor of this claim to fame
  ?fame <http://dbpedia.org/ontology/actor> ?actor .

  # Step 6: Find Jon Pertwee's birth name
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 7: Locate the person born with that name
  ?person <http://dbpedia.org/ontology/birthName> ?birthName ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .

  # Step 8: Determine their child
  ?person <http://dbpedia.org/ontology/child> ?child .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
356,19,test,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960) and player in the successor of 2014 Sacramento Republic FC season.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/manager> ?v4 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT DISTINCT ?team WHERE {
  # Step 1: Identify Gary Williams' birthplace
  <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Step 2: Ensure the birthplace is English and a settlement
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""england"") && CONTAINS(LCASE(?label), ""settlement""))
  
  # Step 3: Find individuals native to this place who are both soccer players and managers
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  FILTER(CONTAINS(LCASE(?name), ""soccer player"") && CONTAINS(LCASE(?name), ""soccer manager""))
  
  # Step 4: Identify the team associated with these individuals
  ?person <http://dbpedia.org/ontology/team> ?team .

  # Step 5: Find the successor of the 2014 Sacramento Republic FC season and check if any player was part of it
  OPTIONAL {
    <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?successor .
    ?person <http://dbpedia.org/ontology/playerInTeam> ?successor .
  }
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
528,53,test,"Give me the force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Part 1: Force of Narciso Campero Leyes
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/birthName> ""Narciso Campero Leyes"" .
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/militaryForce> ?force .
}

# Part 2: Wars involving Orozimbo Barbosa
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?war .
}

# Part 3: War of the military force related to a societal event in Chile
SELECT ?event ?force ?war WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/battle> ?war .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
9,38,test,Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of Queen's University Belfast.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  ?person <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Royal_Medal> .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?nickname .
  FILTER(CONTAINS(LCASE(?nickname), ""queen's university belfast"")) .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
487,19,test,"Give me the administration of the person born, that is a soccer player, as the birth name of Phil Scott and country of the administration of Patricia McCoy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> ?result . <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?result <http://dbpedia.org/property/governor> ?v4 . },"```sparql
# Step 1: Get Phil Scott's birth name
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Find the soccer player with that birth name
SELECT DISTINCT ?player WHERE {
  ?player <http://dbpedia.org/ontology/birthName> ?birthName .
  ?player <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
}

# Step 3: Get the administration of that soccer player
SELECT DISTINCT ?administration WHERE {
  ?player <http://dbpedia.org/property/administration> ?administration .
}

# Step 4: Find Patricia McCoy's administration
SELECT DISTINCT ?patriciaAdministration WHERE {
  <http://dbpedia.org/resource/Patricia_McCoy> <http://dbpedia.org/property/administration> ?patriciaAdministration .
}

# Step 5: Get the country of Patricia McCoy's administration
SELECT DISTINCT ?country WHERE {
  ?patriciaAdministration <http://dbpedia.org/ontology/country> ?country .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
404,56,test,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Prince Ernest Augustus of Hanover (born 1914)
  <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914)> <http://dbpedia.org/ontology/birth> ?birth .
  
  # Step 2: Find his parent(s)
  OPTIONAL { ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914)> . }
  
  # Step 3: Identify Princess Victoria Louise of Prussia and find her spouse
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
  
  # Step 4: Ensure the spouse is categorized as royalty
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .
  
  # Step 5: Determine the father of this spouse
  ?father <http://dbpedia.org/ontology/spouse> ?spouse .
  ?father <http://dbpedia.org/ontology/child> ?child .
  
  # Step 6: Identify the child of that father (which should be Prince Ernest Augustus)
  FILTER(?child = <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914)>)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
251,20,test,"Give me the location of Battle of Marengo and administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
# Part 1: Location of Battle of Marengo
SELECT ?location WHERE {
  <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/location> ?location .
}

UNION

# Part 2: Administration of the ruling party in Sicily that is a political party and an organization
SELECT ?administration WHERE {
  ?party <http://dbpedia.org/property/rulingPartyIn> <http://dbpedia.org/resource/Sicily> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>, <http://dbpedia.org/ontology/Organisation> .
  ?party <http://dbpedia.org/property/administrationLocation> ?administration .
}

UNION

# Part 3: Death place of Laura Mancinelli
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
528,27,test,Give me the force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
  ?person <http://dbpedia.org/property/militaryForce> ?force .
}
```",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
328,58,test,"Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?awardee WHERE {
  ?awardee <http://dbpedia.org/ontology/honoraryTitle> <http://dbpedia.org/resource/Order_of_Suvorov> .
  
  ?commander <http://dbpedia.org/ontology/commander> ?force .
  ?force <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Ferenc_Szálasi> .
  FILTER (?awardee = ?commander)
  
  ?officeLeader <http://dbpedia.org/ontology/leader> ?office .
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  FILTER (?awardee = ?officeLeader)
  
  ?gustavJonson <http://dbpedia.org/ontology/leader> ?office .
  ?gustavJonson <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Politician> .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
404,30,test,"Give me the spouse of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Find the spouse of Princess Victoria Louise of Prussia
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Identify the father of Ernest Augustus, Duke of Brunswick
  OPTIONAL { 
    ?father <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
    
    # Step 3: Find the child of that father who is also the parent of Prince Ernest Augustus of Hanover (born 1914)
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
           <http://dbpedia.org/property/father> ?father .
    
    # Step 4: Ensure this child is the parent of Prince Ernest Augustus of Hanover (born 1914)
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> .
    
    # Match the spouse from Step 1 with this child
    FILTER(?spouse = ?child)
  }
}
```",4,4,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
54,48,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?finalChild WHERE {
  # Step 1: Find the child of Thinkhaya of Pagan
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?thinkhayasChild .

  # Step 2: The father of that child is Thinkhaya himself, so we move to step 3

  # Step 3: Find the predecessor of this child
  ?thinkhayasChild <http://dbpedia.org/ontology/predecessor> ?predecessor .

  # Step 4: Identify the child of Thihapate of Mohnyin who is an office holder and royalty
  <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?thihapatesChild .
  ?thihapatesChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
                   <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Find the child of the predecessor identified in step 3
  ?predecessor <http://dbpedia.org/ontology/child> ?finalChild .
}
```",5,7,6,3,2,3,3,71,0,1,1,0.0,0.0,0
392,24,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v2 . ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
SELECT ?province ?region WHERE {
  # Part 1: Province of Sebastiano Bianchetti's Residence
  {
    <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Italy> .
    ?residence <http://dbpedia.org/ontology/province> ?province .
  }
  
  UNION
  
  # Part 2: Region of Aguilar de Segarra's Time Zone (as a Sports Event)
  {
    <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?timeZone <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent> .
    ?timeZone <http://dbpedia.org/ontology/region> ?region .
  }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
314,23,test,"Give me the person deceased at the headquarter of House of Sombrerete and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?person WHERE {
  # Step 1: Identify Lisa Gavrić's profession as an event and societal event
  <http://dbpedia.org/resource/Lisa_Gavrić> <http://purl.org/dc/terms/subject> ?profession .
  
  FILTER(?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>)
  FILTER(?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>)
  
  # Step 2: Find the commander associated with that profession
  ?commander <http://dbpedia.org/ontology/profession> ?profession .
  
  # Step 3: Determine where this person died at the headquarters of House of Sombrerete
  ?commander <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  FILTER(?deathPlace = <http://dbpedia.org/resource/House_of_Sombrerete#Headquarters>)
  
  # Step 4: Assign the person variable to the commander who meets all criteria
  BIND(?commander AS ?person)
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
9,51,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
  ?entity <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Northern Ireland"" .

  OPTIONAL { ?entity <http://dbpedia.org/ontology/nickName> ?nickname . }
  
  ?person <http://purl.org/dc/terms/relation> ?entity .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?person <http://dbpedia.org/property/awards> ?award .
  FILTER(CONTAINS(LCASE(?award), ""royal medal"")) .

  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
617,58,test,Give me the child of Antiochus III the Great and spouse of the child of Antiochus III the Great and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?child ?spouse ?parent WHERE {
  # Step 1: Find children of Antiochus III the Great
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .

  # Step 2: Identify a child who is also a spouse
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 3: Find the commander in the Battle of Panium
  <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?commander .

  # Step 4: Identify the child of this commander
  ?commander <http://dbpedia.org/ontology/child> ?commandersChild .

  # Step 5: Determine the parent of this child
  ?parent <http://dbpedia.org/ontology/child> ?commandersChild .
}
```",6,6,7,3,3,3,3,71,2,6,0,0.25,1.0,0.4
767,65,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leaderParty> ""Green""@en . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> ?v4 . ?v6 <http://dbpedia.org/property/governor> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?entity WHERE {
  # Step 1: Identify George Kilbon Nash's Administration
  ?administration <http://dbpedia.org/ontology/administration> <http://dbpedia.org/resource/George_Kilbon_Nash> .
  
  # Step 2: Find Alma Mater of the Administration
  ?administration <http://dbpedia.org/property/almaMater> ?almaMater .

  # Step 3: Identify Alter Ego of Black Hood
  <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .

  # Step 4: Reference to the Alter Ego
  ?reference <http://dbpedia.org/property/refersTo> ?alterEgo .

  # Step 5: Find Entity in Administration's Green Settlement
  ?entity <http://dbpedia.org/ontology/entityInAdministration> ?administration .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?entity <http://dbpedia.org/property/color> ""Green""^^<http://www.w3.org/2001/XMLSchema#string> .
  FILTER(?reference = ?entity)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
182,22,test,Give me the war of the author of 2019 Sri Lanka Easter bombings and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  # Part 1: War of the author of 2019 Sri Lanka Easter bombings
  <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/ontology/author> ?author .
  ?author <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  UNION

  # Part 2: War of the work of Gotabhaya Rajapaksa
  ?work <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> .
  ?work <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
659,46,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
# Step 1: Find a war that is an event and a military conflict involving the regiment.
SELECT ?war WHERE {
  <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/partOf> ?force .
  ?force <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}

# Step 2: Find a commander in that war who was also an office holder of the Kingdom of Ireland.
SELECT DISTINCT ?commander WHERE {
  # Assuming ?war is obtained from step 1
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  
  # Check if this commander was an office holder in the Kingdom of Ireland
  ?commander <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland> ;
             <http://dbpedia.org/ontology/officeHolder> ?office .
}
```

Note: The above SPARQL script is split into two parts for clarity. In practice, you would need to execute the first query to get the specific war(s) and then use those results in the second query to find the commander who fits both criteria.",5,8,6,3,2,3,3,71,0,0,71,0,0.0,0
485,20,test,"Give me the entity in Nottinghamshire and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in United Kingdom.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Eric_Gregory_Award> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet> .
  ?entity <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ""Nottinghamshire""@en .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
  ?birthPlace <http://dbpedia.org/ontology/country> ?country .
  ?country <http://www.w3.org/2000/01/rdf-schema#label> ""United Kingdom""@en .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
528,68,test,"Give me the war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
# Part 1: War of the Commander in the Work of --01-09
SELECT ?war WHERE {
  <http://dbpedia.org/resource/--01-09> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Part 2: Force of the Person Born as Narciso Campero Leyes
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/property/militaryForce> ?force .
}

# Part 3: War of the Military Force of an Entity that is a Societal Event in Chile
SELECT ?war WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile> .
  ?event <http://dbpedia.org/property/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
547,34,test,Give me the resting place of Alan Cunningham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query for Alan Cunningham's resting place
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Alan_Cunningham_(British_Army_officer)> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
}

UNION

# Query for the child of the child of William Haliburton's resting place
SELECT ?grandchildRestingPlace WHERE {
  ?haliburtonChild <http://dbpedia.org/ontology/birth> ?grandchild .
  ?grandchild <http://dbpedia.org/ontology/birth> ?greatGrandchild .
  ?greatGrandchild <http://dbpedia.org/ontology/restingPlace> ?grandchildRestingPlace .
  ?haliburtonChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?greatGrandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?haliburtonChild <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_Haliburton> .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,58,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of George K. Nash and entity in Baden-Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
SELECT ?character WHERE {
  ?burland <http://dbpedia.org/ontology/fictionalAlterEgo> ?character .
  ?character <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .

  OPTIONAL { ?character <http://dbpedia.org/property/almaMater> ?almaMater . }
  OPTIONAL { ?nash <http://dbpedia.org/ontology/administration> ?administration .
             ?administration <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
             ?almaMater = ?administration }
  
  OPTIONAL { ?character <http://dbpedia.org/property/location> ?location .
             ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Baden-Württemberg> }

  FILTER EXISTS {
    ?burland <http://dbpedia.org/ontology/personName> ""Matthew Burland"" .
    ?nash <http://dbpedia.org/ontology/name> ""George K. Nash"" .
  }
}

SELECT ?character ?reference WHERE {
  ?character <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
392,20,test,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy and province of Schio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
SELECT ?region WHERE {
  ?event <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ?placeLabel .
  
  FILTER (
    (CONTAINS(LCASE(?placeLabel), ""aguilar de segarra"") && CONTAINS(LCASE(?placeLabel), ""italy"")) ||
    (CONTAINS(LCASE(?placeLabel), ""schio""))
  )
  
  ?event <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?timeZone <http://www.w3.org/2000/01/rdf-schema#label> ?timeZoneLabel .
  ?timeZone <http://dbpedia.org/ontology/location> ?region .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
547,55,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer) and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Part 1: Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT ?restingPlace WHERE {
  ?person <http://dbpedia.org/ontology/awarded> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
  ?person <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
}

UNION

# Part 2: Resting place of the child of James Burton (property developer)
SELECT ?childRestingPlace WHERE {
  <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/deathPlace> ?childRestingPlace .
}

UNION

# Part 3: Resting place of the actor of Enemy at the Door
SELECT ?actorRestingPlace WHERE {
  <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
232,48,test,"Give me the child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?child WHERE {
  # Step 1: Find Jon Pertwee's birth name
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 2: Identify any person born with that birth name
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  
  # Step 3: Find Sylvie Bermann's residence, ensuring it is a settlement and British
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 4: Identify native of that settlement
  ?native <http://dbpedia.org/ontology/birthPlace> ?residence .

  # Step 5: Find the child of the person identified in step 4
  ?native <http://dbpedia.org/ontology/child> ?child .
}
```",5,7,6,3,2,3,3,71,1,716,0,0.001394700139470014,1.0,0.0027855153203342614
488,39,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
# Part 1: Identify Tokugawa Masako's royal spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Part 2: Find the father of that royal spouse
SELECT ?father WHERE {
  ?spouse <http://dbpedia.org/ontology/father> ?father .
}

# Part 3: Determine the administration associated with that father
SELECT ?administration WHERE {
  ?father <http://dbpedia.org/ontology/administration> ?administration .
}

# Part 4: Find the death place of Tokugawa Ieyasu
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
9,71,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v7 <http://dbpedia.org/property/nickname> ?v8 . ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ?v8 . }","```sparql
SELECT ?figure WHERE {
  # Step 1: Find an organization in Northern Ireland that is also an educational institution
  ?org <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
        <http://dbpedia.org/ontology/location> ?location ;
        <http://dbpedia.org/ontology/type> ?type .
  FILTER (?location = <http://dbpedia.org/resource/Northern_Ireland> && 
          ?type = <http://dbpedia.org/ontology/EducationalInstitution>) .

  # Step 2: Find the mayor of Belfast who is an alumnus of this institution
  ?mayor <http://dbpedia.org/ontology/almaMater> ?org ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?belfastOrg <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> .

  # Step 3: Find the award associated with Royal Medals
  ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award> ;
         <http://dbpedia.org/property/reference> ""Royal Medals"" .

  # Step 4: Identify the awardee of this award who also attended the same institution
  ?awardee <http://dbpedia.org/ontology/almaMater> ?org ;
           <http://dbpedia.org/ontology/receivedAward> ?award .

  # Step 5: Find the nickname of this organization
  ?org <http://dbpedia.org/property/nickname> ?figure .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
427,49,test,"Give me the reference to the name of Italian People's Party (1994) and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Query for the reference of Italian People's Party (1994)
SELECT ?party WHERE {
  ?party <http://www.w3.org/2000/01/rdf-schema#label> ""Italian People's Party (1994)""@en .
}

# Query to find Romano Prodi's birth name and associated party
SELECT ?birthName, ?party WHERE {
  # Find Romano Prodi's birth name
  <http://dbpedia.org/resource/Romano_Prodi> <http://xmlns.com/foaf/0.1/name> ?birthName .
  
  # Ensure the person is an office holder and politician
  <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Politician>)).
  
  # Find the party associated with Romano Prodi
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/memberOf> ?party .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
747,63,test,"Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of Apollo (Hardwell song) and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . }","```sparql
SELECT ?band WHERE {
  # Part 1: Band of Tracey Elizabeth McSween
  { 
    <http://dbpedia.org/resource/Tracey_Elizabeth_McSween> <http://dbpedia.org/ontology/memberOf> ?band .
  }
  
  UNION
  
  # Part 2: Band of the writer of Apollo (Hardwell song)
  {
    <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/ontology/writer> ?writer .
    ?writer <http://dbpedia.org/ontology/memberOf> ?band .
  }
  
  UNION
  
  # Part 3: Person born on the birth date of an athlete and soccer player who died in Zolotonosha
  {
    ?athlete <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> ;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> ,
                             <http://dbpedia.org/ontology/SoccerPlayer> .
    ?athlete <http://dbpedia.org/ontology/birthDate> ?birthDate .
    
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?person <http://dbpedia.org/ontology/memberOf> ?band .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
328,62,test,Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  # Step 1: Find the person who is a decedent at Budapest
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
  
  # Step 2: Identify the commander of that person's force
  ?force <http://dbpedia.org/ontology/commander> ?commander .
  ?person <http://dbpedia.org/property/memberOf> ?force .

  # Step 3: Check if this commander was an awardee for the Volcano and Ryukyu Islands campaign
  ?campaign <http://dbpedia.org/ontology/campaign> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .
  ?commander <http://dbpedia.org/ontology/awardeeOf> ?award .
  ?award <http://dbpedia.org/property/reason> ?campaign .

  # Step 4: Verify if this commander led the People's Commissariat of Defense of the Soviet Union
  ?commander <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
528,37,test,Give me the war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
SELECT ?war WHERE {
  ?work <http://dbpedia.org/property/date> ""-01-09"" .
  ?work <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Narciso_Campero> .
  ?work <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> .
  ?work <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?battle <http://dbpedia.org/ontology/war> ?war .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
378,71,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/commander> ?v8 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v7 . ?v8 <http://dbpedia.org/ontology/knownFor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT DISTINCT ?war WHERE {
  # Step 1: Get Carl Pontus Gahn's birth name
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 2: Find commanders of wars that are military conflicts and societal events
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?war <http://dbpedia.org/ontology/commander> ?commander .

  # Step 3: Check if the commander has a claim to fame related to Thomas Trigge
  ?commander <http://dbpedia.org/ontology/claimToFame> ?fame .
  FILTER(CONTAINS(LCASE(STR(?fame)), ""thomas trigge""))

  # Step 4: Find wars involving this commander, particularly referencing the Peninsular War
  OPTIONAL { ?referenceWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
             ?referenceWar <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Peninsular_War> }
}
```",9,13,10,3,3,3,3,71,0,0,2,0,0.0,0
528,38,test,Give me the war of the commander in Battle of La Rinconada de Ate and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
# Query 1: War of the commander in Battle of La Rinconada de Ate
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Query 2: Force of Narciso Campero Leyes
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes"" .
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/militaryService> ?service .
  ?service <http://dbpedia.org/ontology/force> ?force .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
404,45,test,Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia's spouse
  ?princess <http://dbpedia.org/ontology/spouse> ?spouse .

  FILTER(?princess = <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia_(1892-1980)>)

  # Step 2: Determine the father of that spouse
  ?spouse <http://dbpedia.org/ontology/father> ?father .

  # Step 3: Find the child of this father (Prince Ernest Augustus of Hanover born in 1914)
  ?child <http://dbpedia.org/ontology/father> ?father .
  FILTER(?child = <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)>)

  # Step 4: Identify the parent of Prince Ernest Augustus of Hanover
  ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
659,36,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in German campaign of 1813.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
SELECT ?militaryForce WHERE {
  ?conflict <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  ?conflict <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?conflict <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/German_campaign_of_1813> .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?conflict <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
488,22,test,Give me the administration of the father of Emperor Go-Mizunoo and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?administration, ?birthPlace WHERE {
  # Find the father of Emperor Go-Mizunoo and his administration
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://www.w3.org/2002/07/owl#sameAs> ?father .
    ?father <http://dbpedia.org/ontology/administration> ?administration .
  }
  
  # Find the birthplace of Enomoto Takeaki
  OPTIONAL {
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,36,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?nickname WHERE {
  ?institution <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> .
  ?institution <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?institution <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
  ?institution <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Northern_Ireland> .
  ?institution <http://dbpedia.org/ontology/nickName> ?nickname .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,61,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT DISTINCT ?person WHERE {
  # Step 1: Find commander in Battle of Verdun
  ?verdunCommander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Battle_of_Verdun> .
  
  # Step 2: Find wars commanded by this person
  ?war <http://dbpedia.org/ontology/battle> ?verdunCommander .
  FILTER (?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>) .

  # Step 3: Identify Khemis Miliana District's capital
  <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/administrativeCapital> ?capital .
  FILTER (?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>) .

  # Step 4: Find decedents at this capital
  ?person <http://dbpedia.org/ontology/deathPlace> ?capital .
  
  # Step 5: Ensure these decedents were commanders in the wars from step 2
  ?person <http://dbpedia.org/ontology/commander> ?war .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
54,26,test,Give me the parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?finalParent WHERE {
  # Step 1: Identify the parent of Thado Minsaw of Prome
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/father> ?parent .

  # Step 2: Find the child of that parent
  ?parent <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Determine the parent of this child
  ?child <http://dbpedia.org/ontology/father> ?finalParent .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
959,71,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/manager> ?v7 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v8 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?member WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election who is a politician.
  ?leader <http://dbpedia.org/ontology/politician> _:a .
  ?election <http://dbpedia.org/property/electionLeader> ?leader .
  FILTER(?election = <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election>) .

  # Step 2: Determine their place of residence, which should be a country.
  ?leader <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 3: Find a person born in 1958 and native of that country.
  ?person <http://dbpedia.org/ontology/birthYear> ""1958""^^xsd:gyear .
  ?person <http://dbpedia.org/ontology/nationality> ?residence .
  
  # Step 4: Locate the alma mater of this person, ensuring it is a Japanese organization, university, and educational institution.
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1 .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type2 .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type3 .
  FILTER(?type1 = <http://dbpedia.org/ontology/Organisation> && 
         ?type2 = <http://dbpedia.org/ontology/University> &&
         ?type3 = <http://dbpedia.org/ontology/EducationalOrganization> &&
         EXISTS { ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label . FILTER(lang(?label) = ""ja"") } )

  # Step 5: Identify the manager of the 1998 Kashima Antlers season who is a sports manager.
  ?season <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kashima_Antlers> .
  FILTER(?season = <http://dbpedia.org/resource/1998_Kashima_Antlers_season>) .
  ?season <http://dbpedia.org/ontology/manager> ?manager1 .
  ?manager1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .

  # Step 6: Determine the team managed by this manager.
  ?team <http://dbpedia.org/ontology/manager> ?manager1 .
  
  # Step 7: Finally, find a member of the identified alma mater.
  ?member <http://dbpedia.org/ontology/member> ?almaMater .
}
```",9,16,10,3,3,3,3,71,0,0,3,0,0.0,0
959,68,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://dbpedia.org/property/residence> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?manager WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?election <http://dbpedia.org/ontology/politician> ?leader .
  FILTER(?election = <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election>) .

  # Step 2: Determine the native country of this leader
  ?leader <http://dbpedia.org/ontology/nationality> ?country .
  
  # Step 3: Find a person born in 1958 and native to this country
  ?person <http://dbpedia.org/ontology/birthYear> ""1958""^^xsd:gYear .
  ?person <http://dbpedia.org/ontology/nationality> ?country .

  # Step 4: Identify their alma mater
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  FILTER(?almaMater <http://dbpedia.org/resource/Japan>) .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
             <http://dbpedia.org/ontology/university> true ;
             <http://dbpedia.org/ontology/educationalInstitution> true .

  # Step 5: Find team members including Takashi Sekizuka
  ?team <http://dbpedia.org/ontology/member> ?member .
  ?almaMater <http://dbpedia.org/ontology/team> ?team .
  FILTER(?member = <http://dbpedia.org/resource/Takashi_Sekizuka>) .

  # Step 6: Determine the manager of this team
  ?team <http://dbpedia.org/ontology/manager> ?manager .
}
```",8,14,9,3,3,3,3,71,0,0,3,0,0.0,0
232,38,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?actor WHERE {
  # Step 1: Identify Sylvie Bermann's residence
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> ;
             <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 2: Identify Sean Pertwee's claim to fame
  OPTIONAL {
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/film> ?film .
    ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/militaryConflict> ?conflict .
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }

  # Step 3: Find an actor involved in the same film or military conflict
  ?actor <http://dbpedia.org/ontology/film> ?film ;
         <http://dbpedia.org/ontology/militaryConflict> ?conflict .

}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
378,21,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
# Query for the war associated with Carl Pontus Gahn
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Query for the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?claimToFame WHERE {
  <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/notableFor> ?claimToFame .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
54,65,test,"Give me the child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  # Step 1: Father of Soe Min Wimala Dewi
  ?father <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> .
  
  # Step 2: Child of the Father
  ?child <http://dbpedia.org/ontology/father> ?father .

  # Step 3: Parent of the Child of the Parent of Thado Minsaw of Prome
  ?thadoParent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
  ?thadoChild <http://dbpedia.org/ontology/father> ?thadoParent .
  ?parentOfThadoChild <http://dbpedia.org/ontology/father> ?thadoChild .

  # Step 4: Predecessor of the Child
  ?predecessor <http://dbpedia.org/ontology/successor> ?child .

  # Step 5: Office Holder and Royalty of Thihapate of Mohnyin
  ?thihapateChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?thihapateChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
                  <http://dbpedia.org/ontology/Royalty> .

  # Final Result: Intersection of all conditions
  ?result = ?child .
  FILTER (?parentOfThadoChild = ?predecessor)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
645,18,test,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock and alma mater of the child of Richard Pankhurst.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Step 1: Find the commander of the Battle of Diamond Rock
  <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?commander .

  # Step 2: Determine the residence country of that commander
  ?commander <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 3: Find the child of Richard Pankhurst and their alma mater
  <http://dbpedia.org/resource/Richard_Pankhurst_(politician)> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Step 4: Identify any entity related to both the residence (country) and alma mater
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?residence .
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?almaMater .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
767,64,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT DISTINCT ?settlement WHERE {
  # Writer of ""Where It's At"" (Dustin Lynch album)
  ?album <http://dbpedia.org/ontology/writer> ?writer .
  FILTER(STRSTARTS(STR(?album), ""http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)""))

  # Alma mater of Carl L. Nippert
  ?nippert <http://dbpedia.org/ontology/almaMater> ?almaMater .
  FILTER(STRSTARTS(STR(?nippert), ""http://dbpedia.org/resource/Carl_L._Nippert""))

  # Alter ego of Matthew Burland
  ?burland <http://dbpedia.org/ontology/fictionalAlterEgo> ?alterEgo .
  FILTER(STRSTARTS(STR(?burland), ""http://dbpedia.org/resource/Matthew_Burland""))
  ?alterEgo <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .

  # Entity in administration that is a settlement
  ?settlement <http://dbpedia.org/ontology/administrativeUnit> ?adminEntity .
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Combining conditions
  FILTER(?writer = ?almaMater || ?writer = ?alterEgo || ?almaMater = ?alterEgo)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
528,55,test,Give me the force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query 1: Force of Narciso Campero Leyes
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/militaryForce> ?force .
}

# Query 2: War of the Military Force in Battle of Pisagua
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/foughtBy> ?militaryForce .
  ?militaryForce <http://dbpedia.org/ontology/war> ?war .
}

# Query 3: War of the Commander in Battle of La Rinconada de Ate
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://dbpedia.org/ontology/war> ?war .
}
```",6,6,7,2,3,3,3,71,0,0,2,0,0.0,0
427,67,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Query for Romano Prodi's party
SELECT ?party WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Romano Prodi"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
          <http://dbpedia.org/ontology/politicianParty> ?party .
}

UNION

# Query for the father's party of an MIT alumnus related to Partito Popolare Italiano
SELECT ?fatherParty WHERE {
  ?alumnus <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?alumnus <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/politicianParty> ?fatherParty .
  ?fatherParty <http://www.w3.org/2000/01/rdf-schema#label> ?partyLabel .
  FILTER(CONTAINS(LCASE(?partyLabel), ""partito popolare italiano""))
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
177,8,test,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik and entity in South Korea.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/location> ?result . },"```sparql
SELECT ?result WHERE {
  ?organization <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/Joo_Don-sik> .
  ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?organization <http://dbpedia.org/property/location> <http://dbpedia.org/resource/South_Korea> .
  ?organization <http://dbpedia.org/ontology/headquarter> ?result .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
328,54,test,"Give me the commander in the force of the person decedent at Budapest and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . }","```sparql
# Step 1: Find the person who meets all criteria
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
  ?person <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> .
  ?person <http://dbpedia.org/ontology/honoraryTitle> ?award .
  ?award <http://dbpedia.org/property/givenBy> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
}

# Step 2: Find the commander of a force led by this person
SELECT ?commander WHERE {
  ?person :forceLeader ?force .
  ?force <http://dbpedia.org/ontology/commander> ?commander .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
547,56,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of Simon Cadell and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Resting place of the awardee of Gerald Graham's award
SELECT ?awardeeRestingPlace WHERE {
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  ?award <http://dbpedia.org/property/awardedBy> <http://dbpedia.org/resource/Gerald_Graham> .
  ?awardee <http://dbpedia.org/ontology/deathPlace> ?awardeeRestingPlace .
}

UNION

# Resting place of Simon Cadell
SELECT ?cadellRestingPlace WHERE {
  <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/deathPlace> ?cadellRestingPlace .
}

UNION

# Resting place of the child of James Burton (property developer)
SELECT ?childRestingPlace WHERE {
  <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/deathPlace> ?childRestingPlace .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
783,16,test,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng and associated musical artist of the band member of Ofori Amponsah.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify Priscilla Opoku-Kwarteng as an artist and a musical artist
  ?priscilla <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?priscilla <http://www.w3.org/2000/01/rdf-schema#label> ""Priscilla Opoku-Kwarteng""@en .

  # Step 2: Find band members associated with Priscilla
  ?bandMember <http://dbpedia.org/ontology/bandMember> ?priscilla .
  
  # Step 3: Determine the associated musical artists of these band members
  ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .

  # Step 4: Find those who are also band members of Ofori Amponsah
  ?associatedArtist <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Ofori_Amponsah> .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
827,19,test,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859) and father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?finalChild WHERE {
  # Step 1: Find the royal child of Grand Duchess Maria Pavlovna
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Maria_Pavlovna_of_Russia_(1786–1859)> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 2: Find the father of this royal child
  ?father <http://dbpedia.org/ontology/spouse> ?child .
  
  # Step 3: Find the spouse of Princess Pauline who is royalty
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Pauline_of_Saxe-Weimar-Eisenach> .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 4: Find the royal child of this spouse
  ?finalChild <http://dbpedia.org/ontology/birthParent> ?spouse .
  ?finalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Ensure the father from step 2 is linked to the final child
  ?father <http://dbpedia.org/ontology/birthParent> ?finalChild .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
747,46,test,"Give me the band of the writer of Apollo (Hardwell song) and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
# Step 1: Find the writer of Apollo (Hardwell song)
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://purl.org/dc/terms/creator> ?writer .
}

# Step 2: Find the band associated with this writer
SELECT ?band WHERE {
  ?writer <http://dbpedia.org/ontology/memberOf> ?band .
}

# Step 3: Identify an athlete who is a soccer player and decedent at Zolotonosha, and find their birth date
SELECT ?birthDate WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> .
  ?person <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

# Step 4: Find another person born on that same date
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  FILTER(?birthDate = ?foundBirthDate) # Use the birth date found in step 3
}

# Combine results to get the band associated with both conditions
SELECT DISTINCT ?band WHERE {
  {
    SELECT ?writer WHERE {
      <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://purl.org/dc/terms/creator> ?writer .
    }
    ?writer <http://dbpedia.org/ontology/memberOf> ?band .
  }
  UNION
  {
    SELECT ?person WHERE {
      ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
      FILTER(?birthDate = ?foundBirthDate) # Use the birth date found in step 3
    }
    ?person <http://dbpedia.org/ontology/memberOf> ?band .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
701,61,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the child of Seti I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find a child of Seti I
  ?childSetiI <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seti_I> .

  # Step 2: Find the grandchild (child of the child)
  ?grandChild <http://dbpedia.org/ontology/birthParent> ?childSetiI .

  # Step 3: Determine the parent of this grandchild
  ?parentGrandChild <http://dbpedia.org/ontology/birthChild> ?grandChild .

  # Step 4: Identify a commander in Battle of Perire who is royalty
  ?commanderPerire <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Battle_of_Perire> .
  ?commanderPerire <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Find the father of this commander
  ?fatherCommander <http://dbpedia.org/ontology/birthChild> ?commanderPerire .

  # Ensure the parent from step 3 is the same as the father from step 5
  FILTER(?parentGrandChild = ?fatherCommander)

  # Step 6: Determine the spouse of this father
  ?spouse <http://dbpedia.org/ontology/spouse> ?fatherCommander .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
44,9,test,"Give me the band member of the associated musical artist, that is a group and an organisation, of Queensrÿche and band member of the band of John Pettibone.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?bandMember WHERE {
  # Find Queensrÿche as an artist group and organization
  <http://dbpedia.org/resource/Queensrÿche> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1 .
  FILTER (?type1 IN (<http://dbpedia.org/ontology/MusicalArtist>, <http://dbpedia.org/ontology/Organisation>)).
  
  # Find band members of Queensrÿche
  <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/member> ?bandMember .
  
  # Find John Pettibone's band and its members
  OPTIONAL {
    ?pettiboneBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?pettiboneBand <http://dbpedia.org/ontology/member> ?bandMember .
  }
  
  # Ensure the band member is part of both Queensrÿche and John Pettibone's band
  FILTER EXISTS {
    ?pettiboneBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?pettiboneBand <http://dbpedia.org/ontology/member> ?bandMember .
  }
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
378,48,test,Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
# Task 1: Find the claim to fame of the commander in the Great Siege of Gibraltar
SELECT ?commander ?claimToFame WHERE {
  <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/claimToFame> ?claimToFame .
}

# Task 2: Find the war associated with Carl Pontus Gahn
SELECT ?war WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/C._P._Gahn> <http://www.w3.org/2000/01/rdf-schema#label> ""Carl Pontus Gahn""@en .
  }
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
          <http://xmlns.com/foaf/0.1/name> ""Carl Pontus Gahn"" .
  ?person <http://dbpedia.org/property/birthName> ?birthName .
  FILTER(?birthName = ""Carl Pontus Gahn"")
  ?person <http://dbpedia.org/ontology/war> ?war .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
996,17,test,Give me the force of Dagobert Sigmund von Wurmser and entity in the award of the native of Palestine (region).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . },"```sparql
# Part 1: Find the force of Dagobert Sigmund von Wurmser
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> <http://dbpedia.org/ontology/militaryForce> ?force .
}

# Part 2: Find an entity related to an award of a native from Palestine (region)
SELECT ?entity WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Palestine""@en .
  ?person <http://dbpedia.org/ontology/nationality> ?nationality .
  ?award <http://dbpedia.org/property/receiver> ?person .
  ?entity <http://dbpedia.org/ontology/recipient> ?award .
}

# Combine the results to find a common entity
SELECT DISTINCT ?force ?entity WHERE {
  { 
    <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> <http://dbpedia.org/ontology/militaryForce> ?force .
  }
  UNION
  {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Palestine""@en .
    ?person <http://dbpedia.org/ontology/nationality> ?nationality .
    ?award <http://dbpedia.org/property/receiver> ?person .
    ?entity <http://dbpedia.org/ontology/recipient> ?award .
  }
}
```",4,4,5,3,2,3,2,20,0,0,4,0,0.0,0
9,67,test,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . }","```sparql
# Step 1: Find the alma mater of John Alderdice
SELECT ?almaMaterAlderdice WHERE {
  <http://dbpedia.org/resource/John_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMaterAlderdice .
}

# Step 2: Find the nickname of an organisation and educational institution in Northern Ireland
SELECT ?organisation ?nickname WHERE {
  ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
                <http://dbpedia.org/ontology/educationalInstitution> true ;
                <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Northern Ireland"" .
  ?organisation <http://dbpedia.org/ontology/nickName> ?nickname .
}

# Step 3: Find awardees of the Royal Medals
SELECT ?awardee WHERE {
  ?awardee <http://dbpedia.org/property/award> ?award .
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medal"" .
}

# Step 4: Find the alma mater of the awardees
SELECT ?almaMaterAwardee WHERE {
  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMaterAwardee .
}

# Step 5: Find common alma mater
SELECT DISTINCT ?commonAlmaMater WHERE {
  VALUES ?almaMaterAlderdice { ?almaMaterAlderdice }
  VALUES ?almaMaterAwardee { ?almaMaterAwardee }
  FILTER(?almaMaterAlderdice = ?almaMaterAwardee)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
838,18,test,"Give me the band member of the band, that is a group, of YU Grupa and band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify YU Grupa and its members who are part of a group (band)
  <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/member> ?member .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .

  # Step 2: For each member, find their bands where they are an artist and a musical artist
  ?member <http://dbpedia.org/ontology/member> ?band .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?member <http://purl.org/dc/terms/subject> ?artistType .
  FILTER (?artistType IN (<http://dbpedia.org/ontology/Artist>, <http://dbpedia.org/ontology/MusicalArtist>)).
  
  # Step 3: From these bands, find any that include Žika Jelić as a band member
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/%C5%BDika_Jeli%C4%87> .
  
  # Return the band member from YU Grupa who meets all criteria
  BIND(?member AS ?bandMember)
}
```",5,10,6,3,2,3,2,20,0,0,5,0,0.0,0
427,18,test,Give me the party of Giulio Andreotti and party of Romano Prodi and reference to Partito Popolare Italiano.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?andreottiParty ?prodiParty WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?andreottiParty .
  }
  OPTIONAL { 
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?prodiParty .
  }
  FILTER (
    (?andreottiParty = <http://dbpedia.org/resource/Partito_Popolare_Italiano> || 
     ?prodiParty = <http://dbpedia.org/resource/Partito_Popolare_Italiano>)
  )
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
767,49,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . }","```sparql
SELECT ?alterEgo ?entityInGreen WHERE {
  # Step 1: Find Matthew Burland's fictional persona
  ?burland <http://dbpedia.org/ontology/fictionalAlterEgo> ?persona .
  
  # Step 2: Get the alter ego of that persona
  ?persona <http://dbpedia.org/ontology/fictionalAlterEgo> ?alterEgo .
  ?alterEgo a <http://dbpedia.org/ontology/FictionalCharacter> .

  # Step 3: Find an entity in the administration of Green
  ?green a <http://dbpedia.org/ontology/Settlement> ;
         rdfs:label ""Green""@en .
  
  ?entityInGreen <http://dbpedia.org/ontology/administers> ?green .
}
```",5,7,6,3,2,3,3,71,0,0,7,0,0.0,0
488,47,test,"Give me the birth place of the commander in Boshin War and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?birthPlace ?deathPlace WHERE {
  # Step 1: Identify commanders in the Boshin War
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Boshin_War> .
  
  # Step 2: Get birthplace of these commanders
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 3: Identify Matsudaira Tadamasa's father and grandfather
  <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://xmlns.com/foaf/0.1/familyName> ?father .
  
  ?father <http://dbpedia.org/ontology/father> ?grandfather .

  # Step 4: Ensure both father and grandfather are office holders or politicians
  OPTIONAL { ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> . }
  OPTIONAL { ?grandfather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> . }

  # Step 5: Get death place of Matsudaira Tadamasa's grandfather
  ?grandfather <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
492,71,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v4 . ?v7 <http://dbpedia.org/ontology/capital> ?v8 . ?result <http://dbpedia.org/ontology/deathPlace> ?v8 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v7 . },"```sparql
# Step 1: Find the capital of Khemis Miliana District
SELECT ?capital WHERE {
  <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/administrativeCapital> ?capital .
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}

# Step 2: Find person decedent at this capital
SELECT DISTINCT ?decedent WHERE {
  ?deathEvent <http://dbpedia.org/ontology/deathPlace> ?capital .
  ?deathEvent <http://dbpedia.org/ontology/personDecedent> ?decedent .
}

# Step 3: Identify author of French Algeria
SELECT ?author WHERE {
  <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/ontology/author> ?author .
}

# Step 4: Determine work of this author
SELECT ?work WHERE {
  ?author <http://purl.org/dc/terms/creator> ?work .
}

# Step 5: Find person decedent at this work's location
SELECT DISTINCT ?decedent WHERE {
  ?deathEvent <http://dbpedia.org/ontology/deathPlace> ?workLocation .
  ?deathEvent <http://dbpedia.org/ontology/personDecedent> ?decedent .
}

# Step 6: Identify commander in Battle of Verdun
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 7: Determine war involving this commander
SELECT DISTINCT ?war WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?battle <http://www.w3.org/2000/01/rdf-schema#isPartOf> ?war .
  ?war <http://www.w3.org/2000/01/rdf-schema#isPartOf> ?event .
}

# Step 8: Find person decedent at this war's location
SELECT DISTINCT ?decedent WHERE {
  ?deathEvent <http://dbpedia.org/ontology/deathPlace> ?warLocation .
  ?deathEvent <http://dbpedia.org/ontology/personDecedent> ?decedent .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
328,43,test,Give me the commander in the force of the person decedent at Budapest and awardee of Order of Suvorov and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?person ?commander WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
  ?person <http://dbpedia.org/property/orderOfSuvorovAwardee> ""true""^^<http://www.w3.org/2001/XMLSchema#boolean> .
  ?person <http://dbpedia.org/ontology/leaderPosition> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> .
  
  ?force <http://dbpedia.org/ontology/commander> ?commander .
  ?force <http://dbpedia.org/property/leader> ?person .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
378,43,test,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War and war of Carl Pontus Gahn.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
# Step 1: Claim to Fame of Louis des Balbes de Berton de Crillon
SELECT ?claimToFame WHERE {
  <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/notableFor> ?claimToFame .
}

# Step 2: War of the Commander in Reference to Peninsular War
SELECT DISTINCT ?war WHERE {
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Peninsular_War> .
  ?commander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 3: War of Carl Pontus Gahn
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
365,9,test,"Give me the reference to the real name of The Blasters and band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Part 1: Real Name of The Blasters
SELECT ?realName WHERE {
  <http://dbpedia.org/resource/The_Blasters> <http://dbpedia.org/ontology/member> ?member .
  ?member rdfs:label ?realName .
}

UNION

# Part 2: Band of the Professional (Artist and Musical Artist) in Vocalist, Musician, Songwriter
SELECT ?band WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/ontology/profession> ?role .
  FILTER(?role IN (<http://dbpedia.org/resource/Vocalist>, <http://dbpedia.org/resource/Musician>, <http://dbpedia.org/resource/Songwriter>)).
  ?band <http://dbpedia.org/ontology/member> ?person .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
617,20,test,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland and child of the child, that is a royalty, of the parent of Mlada (abbess).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?v4 <http://dbpedia.org/property/father> ?v5 . }","```sparql
SELECT ?finalParent WHERE {
  # Step 1: Find Mlada's parent
  ?mlada <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Mlada_(abbess)> .
  ?parent <http://dbpedia.org/ontology/offspring> ?mlada .

  # Step 2: Find children of Mlada's parent who are royalty
  ?child <http://dbpedia.org/ontology/birthPlace> ?parent .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find grandchildren who are royalty
  ?grandChild <http://dbpedia.org/ontology/birthPlace> ?child .
  ?grandChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find grandchildren with a reference to Richeza of Poland
  ?reference <http://dbpedia.org/ontology/reference> ?grandChild .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?reference <http://dbpedia.org/resource/> <http://dbpedia.org/resource/Richeza_of_Poland> .

  # Step 5: Find the father of this referenced person who is royalty
  ?father <http://dbpedia.org/ontology/birthPlace> ?reference .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 6: Find the parent of this royal father
  ?finalParent <http://dbpedia.org/ontology/birthPlace> ?father .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
392,23,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v2 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
SELECT ?province WHERE {
  # Step 1: Find Sebastiano Bianchetti's Italian residence that is a settlement
  ?residence <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Sebastiano_Bianchetti> .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .

  # Step 2: Get the province of this settlement
  ?residence <http://dbpedia.org/property/province> ?province .

  # Step 3: Find the region associated with Central European Time that is a country
  OPTIONAL {
    ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
    ?region <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> .
  }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
767,33,test,Give me the entity in Baden-Württemberg and alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> .
  ?entity <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/George_Kilbon_Nash> .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
838,19,test,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . }","```sparql
SELECT ?band WHERE {
  # Step 1: Find band members of YU Grupa who are both an artist and a musical artist.
  ?person <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/YU_Grupa> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Step 2: Find bands (groups) that these members belong to.
  ?person <http://dbpedia.org/ontology/member> ?band .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .

  # Step 3: Determine the reference group or organization related to YU Grupa.
  OPTIONAL {
    <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/property/reference> ?reference .
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Organisation> <http://dbpedia.org/ontology/MusicalGroup>) .
  }

  # Step 4: Find the band associated with any member of this reference group.
  ?referenceMember <http://dbpedia.org/ontology/member> ?band .
}
```",5,10,6,3,2,3,2,20,0,0,5,0,0.0,0
492,27,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/administrativeCapital> ?capital .
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?person <http://dbpedia.org/ontology/deathPlace> ?capital .
}
```",3,4,4,3,1,3,3,71,0,0,122,0,0.0,0
328,34,test,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?leader WHERE {
  ?entity <http://dbpedia.org/ontology/leader> ?leader .
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ""People's Commissariat of Defense of the Soviet Union""@en .
  
  OPTIONAL { 
    ?award <http://dbpedia.org/property/commander> ?leader .
    ?award <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .
  }
}
```",4,4,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
391,58,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
SELECT DISTINCT ?actor WHERE {
  # Step 1: Find Michael Ballhaus's claim to fame (work)
  <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/claimToFame> ?fameWork .
  
  # Step 2: Identify actors in this work
  ?actor <http://dbpedia.org/ontology/actedIn> ?fameWork .

  # Step 3: Filter actors who are natives of Compton, California
  ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER (STRSTARTS(STR(?birthPlace), ""Compton, California""))

  # Step 4: Find movies that are both a movie and a television show
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .

  # Step 5: Identify actors in these movies
  ?actor <http://dbpedia.org/ontology/actedIn> ?movie .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
617,22,test,Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?parent WHERE {
  ?commonChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> .
  ?commonChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?parent <http://dbpedia.org/ontology/child> ?commonChild .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
142,9,test,Give me the birthplace of the actor of Papa wa Newscaster and entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?birthPlace WHERE {
  ?actor <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/Papa_wa_Newscaster> .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
  ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  OPTIONAL {
    ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> .
    ?actor <http://dbpedia.org/ontology/nationality> ?nationality .
    ?nationality <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?region .
  }
}
```",4,4,5,2,2,2,2,9,0,0,2,0,0.0,0
915,20,test,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
SELECT ?resident WHERE {
  # Step 1: Director of ""Pipe Dreams (1976 film)""
  ?director <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> .
  
  # Step 2: Birthplace as a settlement
  ?director <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 3: Resident of the birthplace
  ?resident <http://dbpedia.org/ontology/resident> ?birthPlace .
  
  # Step 4: Lizzie Spaulding's parent
  ?parent <http://dbpedia.org/ontology/familyName> ""Spaulding"" ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>, <http://dbpedia.org/ontology/SoapCharacter> .
  ?parent <http://dbpedia.org/ontology/child> ?lizzieSpaulding .

  # Step 5: Child of the parent
  ?parent <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>, <http://dbpedia.org/ontology/SoapCharacter> .

  # Linking Lizzie Spaulding
  ?lizzieSpaulding <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>, <http://dbpedia.org/ontology/SoapCharacter> .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
328,67,test,"Give me the awardee of Order of Suvorov and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in the force of the person decedent at Budapest.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v3 . },"```sparql
SELECT DISTINCT ?awardee WHERE {
  # Step 1: Find awardees of the Order of Suvorov
  ?awardee <http://dbpedia.org/ontology/honoraryTitle> <http://dbpedia.org/resource/Order_of_Suvorov> .

  # Step 2: Check if they lead a government agency
  OPTIONAL {
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
    ?awardee <http://dbpedia.org/ontology/leader> ?office .
  }

  # Step 3: Identify leaders who are office holders and politicians of Gustav Jonson
  OPTIONAL {
    ?gustavJonson <http://dbpedia.org/resource/Gustav_Jonson> .
    ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Politician> .
    ?gustavJonson <http://dbpedia.org/ontology/leader> ?leader .
    FILTER(?awardee = ?leader)
  }

  # Step 4: Find commanders in forces where someone died at Budapest
  OPTIONAL {
    ?personDecedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
    ?force <http://dbpedia.org/ontology/commander> ?awardee .
    ?personDecedent <http://dbpedia.org/ontology/memberOfMilitaryForce> ?force .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
30,8,test,Give me the native of Paris and professional in the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . },"```sparql
SELECT ?person WHERE {
  # Find the profession of Édouard Alphonse James de Rothschild
  <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://purl.org/dc/terms/profession> ?profession .

  # Find a person native to Paris with the same profession
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?person <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Paris> .
  ?person <http://purl.org/dc/terms/profession> ?profession .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
547,57,test,Give me the resting place of James Burton (Egyptologist) and resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Resting place of James Burton (Egyptologist)
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

UNION

# Resting place of the actor from a show with Emily Richard
SELECT ?actorRestingPlace WHERE {
  ?show <http://dbpedia.org/property/starring> ?actor .
  ?show <http://dbpedia.org/property/castMember> <http://dbpedia.org/resource/E._Richard> .
  ?actor <http://dbpedia.org/ontology/burialPlace> ?actorRestingPlace .
}

UNION

# Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT ?restingPlace WHERE {
  ?person <http://dbpedia.org/property/honours> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
  ?person <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
617,71,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v8 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find the successor of Antiochus (son of Antiochus III) who is royalty
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of this successor
  ?child <http://dbpedia.org/ontology/parent> ?successor .
  
  # Step 3: Identify the spouse of this child
  ?spouse <http://dbpedia.org/ontology/spouse> ?child .

  # Step 4: Link to Battle of Panium
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Battle_of_Panium> .
  
  # Step 5: Find the child of this commander who is royalty
  ?royalChild <http://dbpedia.org/ontology/parent> ?commander .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 6: Find the parent of this royal child
  ?parent <http://dbpedia.org/ontology/child> ?royalChild .
  
  # Ensure this parent is also a child of the successor identified in step 1
  ?parent <http://dbpedia.org/ontology/parent> ?successor .
}
```",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
747,49,test,Give me the band of the person born as the persona of Shèna and person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
SELECT ?band1, ?band2 WHERE {
  # Find the band of the person born as Shèna
  ?person1 <http://dbpedia.org/ontology/birthName> ""Shèna"" .
  ?person1 <http://dbpedia.org/ontology/memberOfBand> ?band1 .

  # Find the person born on the same date as Pavlo Khudzik
  ?person2 <http://dbpedia.org/ontology/birthDate> ?birthDate .
  <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .

  # Find the band of this person
  ?person2 <http://dbpedia.org/ontology/memberOfBand> ?band2 .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
115,9,test,Give me the alma mater of the awardee of National Order of Scientific Merit and alma mater of the alumnus of National University of San Marcos.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
SELECT ?almaMater WHERE {
  # Subquery for alma mater of awardee of National Order of Scientific Merit
  ?person <http://dbpedia.org/ontology/nationality> ?nationality .
  ?person <http://purl.org/dc/terms/receivedAward> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Subquery for alma mater of alumnus of National University of San Marcos
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/National_University_of_San_Marcos> .
  ?alumnus <http://dbpedia.org/ontology/almaMater> ?sameAlmaMater .

  # Ensure the alma maters are the same
  FILTER (?almaMater = ?sameAlmaMater)
}
```",4,4,5,2,2,2,2,9,0,0,2,0,0.0,0
996,20,test,Give me the entity in the award of the native of Palestine (region) and force of the awardee of the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v1 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
SELECT ?entity WHERE {
  # Step 1: Find entities native to Palestine (region)
  ?native <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> .
  
  # Step 2: Identify awards received by these natives
  ?native <http://purl.org/dc/terms/receiver> ?award .
  
  # Step 3: Determine the force of the awardee
  ?awardee <http://dbpedia.org/ontology/recipient> ?award .
  ?awardee <http://dbpedia.org/property/force> ?force .
  
  # Step 4: Find elevation of Lac d'Avoriaz and associated awardees
  <http://dbpedia.org/resource/Lac_d%27Avoriaz> <http://dbpedia.org/ontology/elevation> ?elevation .
  ?awardee2 <http://purl.org/dc/terms/receiver> ?award .
  ?awardee2 <http://dbpedia.org/property/force> ?force .
  
  # Combine results to find the entity
  FILTER(?entity = ?native && ?entity = ?awardee && ?entity = ?awardee2)
}
```",6,6,7,3,2,3,2,20,0,0,4,0,0.0,0
820,16,test,Give me the professional in the award of Scott McCloud and child of the parent of Jason Schwartzman.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . },"```sparql
SELECT ?professional WHERE {
  # Step 1: Find the parent of Jason Schwartzman
  <http://dbpedia.org/resource/Jason_Schwartzman> <http://dbpedia.org/ontology/biologicalParent> ?parent .

  # Step 2: Find the child of that parent
  ?parent <http://dbpedia.org/ontology/biologicalChild> ?child .

  # Step 3: Determine the award received by Scott McCloud
  <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/award> ?award .

  # Step 4: Identify professionals related to that award
  ?professional <http://dbpedia.org/ontology/receivesAward> ?award .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
701,35,test,Give me the parent of the child of Nefertari and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find child of Nefertari
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Nefertari> .
  
  # Step 2: Identify father of Merneptah
  ?merneptahFather <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Merneptah> .

  # Step 3: Determine spouse of the father of Merneptah
  ?merneptahFather <http://dbpedia.org/ontology/spouse> ?spouse .
  
  # Step 4: Find parent of Nefertari's child and match with spouse
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
  FILTER (?parent = ?spouse)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
767,46,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of the administration of George K. Nash.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Step 1: Find the writer of ""Where It's At"" (Dustin Lynch album)
  ?album <http://dbpedia.org/ontology/writer> ?writer .
  FILTER(STRSTARTS(STR(?album), ""http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)""))

  # Step 2: Find the alma mater of George K. Nash's administration
  ?nash <http://dbpedia.org/ontology/administration> ?admin .
  FILTER(STRSTARTS(STR(?nash), ""http://dbpedia.org/resource/George_K._Nash""))
  
  ?admin <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Step 3: Find an entity in the administration with a settlement as birthplace
  ?entity <http://dbpedia.org/ontology/administration> ?admin .
  ?entity <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER(STRSTARTS(STR(?birthPlace), ""http://dbpedia.org/resource/"") && 
         EXISTS { ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> })

  # Step 4: Ensure this entity is associated with the writer
  ?entity <http://dbpedia.org/ontology/writer> ?writer .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
547,61,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . },"```sparql
# Part 1: Resting place of the actor from a show with Emily Richard
SELECT DISTINCT ?actorRestingPlace WHERE {
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/E._Richard>.
  ?show <http://dbpedia.org/ontology/castMember> ?actor.
  ?actor <http://dbpedia.org/ontology/deathPlace> ?restingPlace.
  
  # Part 2: Resting place of the awardee of the award received by Gerald Graham
  OPTIONAL {
    <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/ontology/award> ?award.
    ?otherAwardee <http://dbpedia.org/ontology/award> ?award.
    ?otherAwardee <http://dbpedia.org/ontology/deathPlace> ?awardeeRestingPlace.
  }
  
  # Return results
  BIND(?restingPlace AS ?actorRestingPlace)
  OPTIONAL { BIND(?awardeeRestingPlace AS ?actorRestingPlace) }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
54,67,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?predecessor WHERE {
  # Step 1: Identify the parent of Thado Minsaw of Prome
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .

  # Step 2: Find the child of this parent
  ?child <http://dbpedia.org/ontology/parent> ?parent .

  # Step 3: Determine the parent of this child, which should be Thinkhaya of Pagan
  ?thinkhaya <http://dbpedia.org/ontology/child> ?child .
  FILTER(?thinkhaya = <http://dbpedia.org/resource/Thinkhaya_of_Pagan>) .

  # Step 4: Identify the children of Thinkhaya of Pagan
  ?royalChild <http://dbpedia.org/ontology/parent> ?thinkhaya .

  # Step 5: Filter those who are office holders and royalty
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 6: Identify their own children (grandchildren)
  ?grandchild <http://dbpedia.org/ontology/parent> ?royalChild .

  # Step 7: Find the predecessor of these grandchildren
  ?predecessor <http://dbpedia.org/ontology/successor> ?grandchild .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
994,24,test,"Give me the band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?bandMember ?associatedArtist WHERE {
  # Step 1: Find band members of Don Dokken
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/member> ?bandMember .

  # Step 2: For each band member, find associated musical artists they are part of
  ?bandMember <http://dbpedia.org/ontology/member> ?associatedArtist .

  # Step 3: Filter these associated artists to include only those that are a Band, Group, and Organization
  ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
  ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .

  # Step 4: Specifically focus on the band Meshuggah
  FILTER(?associatedArtist = <http://dbpedia.org/resource/Meshuggah>)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
232,56,test,"Give me the actor of Dog Soldiers (film) and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find John Pertwee's native residence
SELECT ?residence WHERE {
  <http://dbpedia.org/resource/John_Pertwee> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?birthPlace <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> .
}

# Step 2: Find a French politician associated with this place
SELECT ?politician WHERE {
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/France> .
  ?politician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> ;
              <http://dbpedia.org/ontology/birthPlace> ?residence ;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Politician> <http://dbpedia.org/ontology/OfficeHolder>) .
}

# Step 3: Find the child of this politician
SELECT ?child WHERE {
  ?politician <http://dbpedia.org/ontology/child> ?child .
}

# Step 4: Match this child with an actor in ""Dog Soldiers""
SELECT ?actor WHERE {
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> ;
         <http://dbpedia.org/property/filmography> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
547,47,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v0 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
# Part 1: Resting place of the actor from a show with Emily Richard
SELECT ?actorRestingPlace WHERE {
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/E._Richard>.
  ?show <http://dbpedia.org/ontology/starring> ?actor.
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor>.
  ?actor <http://dbpedia.org/ontology/deathPlace> ?restingPlace.
}

UNION

# Part 2: Resting place of the child of James Burton (property developer)
SELECT ?childRestingPlace WHERE {
  <http://dbpedia.org/resource/J._Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child.
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
  ?child <http://dbpedia.org/ontology/deathPlace> ?restingPlace.
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
427,66,test,"Give me the reference to the name of Italian People's Party (1994) and party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?italianPeopleParty ?fatherParty ?prodiParty WHERE {
  # Part 1: Reference to the name of Italian People's Party (1994)
  <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> ?italianPeopleParty .

  # Part 2: Party of the father of Lamberto Andreotti
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/memberOf> ?fatherParty .

  # Part 3: Party of Romano Prodi, who is an office holder and a politician
  <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/2000/01/rdf-schema#label> ""Romano Prodi""@en .
  ?prodi <http://dbpedia.org/ontology/birthName> ""Romano Prodi"" .
  ?prodi <http://dbpedia.org/ontology/memberOf> ?prodiParty .
  ?prodi a <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Politician> .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
184,51,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Step 1: Get the parent of Archduchess Margaret of Austria (born 1925)
SELECT ?parentMargaret WHERE {
  <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> <http://dbpedia.org/ontology/birthParent> ?parentMargaret .
}

# Step 2: Get the child of this parent
SELECT ?childOfParent WHERE {
  ?parentMargaret <http://dbpedia.org/ontology/child> ?childOfParent .
}

# Step 3: Get the parent of this child
SELECT ?grandChildParent WHERE {
  ?childOfParent <http://dbpedia.org/ontology/birthParent> ?grandChildParent .
}

# Step 4: Get the child of Archduke Joseph Karl of Austria
SELECT ?childJosephKarl WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?childJosephKarl .
}

# Step 5: Get the child of this child
SELECT ?grandChildJosephKarl WHERE {
  ?childJosephKarl <http://dbpedia.org/ontology/child> ?grandChildJosephKarl .
}

# Step 6: Get the parent of this last child
SELECT ?finalParent WHERE {
  ?grandChildJosephKarl <http://dbpedia.org/ontology/birthParent> ?finalParent .
}
```

Note: This query is broken down into steps for clarity. In practice, you would combine these queries to get the final result in a single SPARQL query.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
547,50,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
# Task 1: Resting place of Knight Grand Cross awardee
SELECT ?person ?restingPlace WHERE {
  ?person <http://dbpedia.org/ontology/honoraryTitle> ""Knight Grand Cross of the Order of St Michael and St George"" .
  OPTIONAL { ?person <http://dbpedia.org/ontology/restingPlace> ?restingPlace . }
}

# Task 2: Resting place of actor in a show with Emily Richard
SELECT ?actor ?show ?restingPlace WHERE {
  ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/E._Richard> .
  ?show <http://dbpedia.org/ontology/starredIn> ?actor .
  OPTIONAL { ?actor <http://dbpedia.org/ontology/restingPlace> ?restingPlace . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
528,71,test,"Give me the war of the commander in the work of --01-09 and war of the military force of the entity, that is a societal event, in Chile and force of the person born as the birth name of Narciso Campero.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v8 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Part 1: War of the commander in the work of --01-09
SELECT ?war WHERE {
  ?work <http://dbpedia.org/property/title> ""--01-09"" .
  ?work <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?war)
}

UNION

# Part 2: War of the military force of an entity in Chile that is a societal event
SELECT ?war WHERE {
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""chile""))
  ?entity <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/SocietalEvent108069627> .
  ?entity <http://dbpedia.org/property/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?war)
}

UNION

# Part 3: Force of the person born as Narciso Campero
SELECT ?force WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Narciso Campero"" .
  ?person <http://dbpedia.org/ontology/militaryForce> ?force .
}
```",9,10,10,3,3,3,3,71,0,0,2,0,0.0,0
528,67,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in the work of --01-09 and war of Irene Morales.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?v6 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Step 1: Find Narciso Campero's birth name
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Find the force of the person with that birth name
SELECT ?force WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/militaryForce> ?force .
}

# Step 3: Find the war of the commander in the work associated with --01-09
SELECT ?war WHERE {
  ?work <http://purl.org/dc/terms/date> ""2000-01-09""^^xsd:date .
  ?work <http://dbpedia.org/ontology/creator> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war .
}

# Step 4: Find the war of Irene Morales
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
994,20,test,"Give me the associated musical artist of S.A. Slayer and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT DISTINCT ?artist WHERE {
  # Part 1: Associated musical artist of S.A. Slayer
  <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .

  UNION

  # Part 2: Band members of Meshuggah who are also bands, groups, and organizations
  {
    ?member <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Meshuggah> .
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1 .
    FILTER (?type1 = <http://dbpedia.org/ontology/Band> || ?type1 = <http://dbpedia.org/ontology/MusicalGroup>)
    ?member <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?org .
    ?org <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type2 .
    FILTER (?type2 = <http://dbpedia.org/ontology/Organisation>)
    ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  }
}
```",3,6,4,2,2,3,3,71,0,0,2,0,0.0,0
626,19,test,"Give me the commander in the force, that is a military conflict, of Alexander I of Russia and awardee of the award of the military force of Battle of Borodino.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
SELECT ?commander WHERE {
  # Step 1: Find military conflicts commanded by Alexander I of Russia
  ?conflict <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> .
  
  # Step 2: Identify commanders in these conflicts
  ?conflict <http://dbpedia.org/ontology/commander> ?commander .

  # Step 3: Check if the commander was an awardee related to Battle of Borodino's military force
  ?award <http://dbpedia.org/property/awardee> ?commander .
  ?award <http://dbpedia.org/property/forMilitaryForce> <http://dbpedia.org/resource/Battle_of_Borodino> .

  # Ensure the conflict is a military conflict
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",5,6,6,3,2,3,2,20,0,0,44,0,0.0,0
485,28,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT DISTINCT ?commonEntity WHERE {
  # Joseph Whitaker's birthplace that is a region
  { 
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace1 .
    ?birthPlace1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
  }
  
  # Eric Gregory Award awardee who is a writer and poet, and their birthplace
  {
    ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Eric_Gregory_Award> ;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> , <http://dbpedia.org/ontology/Poet> .
    ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthPlace2 .
  }
  
  # Country associated with Western European Time
  {
    <http://dbpedia.org/resource/Western_European_Time> <http://dbpedia.org/property/country> ?country .
    ?country <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  }
  
  # Find common entity among the three results
  FILTER (?birthPlace1 = ?birthPlace2 || ?birthPlace1 = ?country || ?birthPlace2 = ?country)
  BIND(?birthPlace1 AS ?commonEntity) 
  UNION
  BIND(?birthPlace2 AS ?commonEntity)
  UNION
  BIND(?country AS ?commonEntity)
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
92,53,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of Jim Sheppard and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
# Part 1: Find artist reference related to Nevermore (2006 film)
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Nevermore_(2006_film)> ?p ?o .
  ?o <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  BIND(?o AS ?artist)
}

UNION

# Part 2: Find band associated with Jim Sheppard
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/memberOf> ?band .
}

UNION

# Part 3: Find band of Joseph Michael Furney
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Joseph_Michael_Furney> <http://dbpedia.org/ontology/bandMember> ?band .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
626,20,test,"Give me the commander in the force, that is a military conflict, of the commander in Battle of Paris (1814) and awardee of the award of the military force of Battle of Borodino.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commander WHERE {
  # Step 1: Find commander in Battle of Paris (1814)
  <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?battleCommander .

  # Step 2: Find military conflicts involving this commander
  ?battleCommander <http://dbpedia.org/ontology/battle> ?conflict .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 3: Find awardees from the military force of Battle of Borodino
  <http://dbpedia.org/resource/Battle_of_Borodino> <http://dbpedia.org/property/militaryForce> ?borodinoForce .
  ?borodinoForce <http://dbpedia.org/ontology/awardee> ?awardee .

  # Step 4: Find commanders in the force associated with these awardees
  ?conflict <http://dbpedia.org/property/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/commander> ?commander .
}
```",6,7,7,3,2,3,2,20,0,0,62,0,0.0,0
767,48,test,"Give me the reference to the alter ego of Black Hood and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?alterEgoReference WHERE {
  # Step 1: Identify the writer of ""Where It's At"" (Dustin Lynch album)
  <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://purl.org/dc/terms/creator> ?writer .

  # Step 2: Find an entity in the administration that is a settlement
  ?administration <http://dbpedia.org/ontology/administration> ?settlement .
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?writer <http://dbpedia.org/property/memberOf> ?administration .

  # Step 3: Identify the alter ego of Black Hood
  <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/ontology/alsoKnownAs> ?alterEgo .

  # Step 4: Get the reference to this alter ego
  ?alterEgoReference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?alterEgo .
}
```",5,6,6,3,2,3,3,71,0,0,8,0,0.0,0
54,56,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of Thado Minsaw of Prome and child of the father of Soe Min Wimala Dewi.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?predecessor WHERE {
  # Step 1: Find the father of Soe Min Wimala Dewi
  ?soeMinWimalaDewi <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Find children of this father who are office holders and royalty
  ?child <http://dbpedia.org/ontology/father> ?father .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Ensure the child has a parent referenced to Thihapate of Mohnyin
  ?child <http://dbpedia.org/ontology/father> ?thihapateOfMohnyin .
  ?thihapateOfMohnyin rdfs:label ""Thihapate of Mohnyin""@en .

  # Step 4: Ensure the child is a parent of Thado Minsaw of Prome
  ?child <http://dbpedia.org/ontology/father> ?thadoMinsawOfProme .
  ?thadoMinsawOfProme rdfs:label ""Thado Minsaw of Prome""@en .

  # Step 5: Find the predecessor of this child
  ?child <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,70,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of Pavlo Khudzik and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?result <http://dbpedia.org/ontology/birthDate> ?v4 . },"```sparql
# Part 1: Band of the person born as the persona of Shèna
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/personalName> ""Shèna"" .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}

UNION

# Part 2: Band of the person born on the birth date of Pavlo Khudzik
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}

UNION

# Part 3: Band of the writer of the work, that is a song, of Amba Shepherd
SELECT ?band WHERE {
  ?song <http://dbpedia.org/property/writer> ?writer .
  ?song <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  ?song <http://dbpedia.org/ontology/lyricist> <http://dbpedia.org/resource/Amba_Shepherd> .
  ?writer <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
801,57,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in .","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v5 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
SELECT ?producer WHERE {
  # Step 1: Identify the writer of ""40 Dayz & 40 Nightz""
  ?work <http://dbpedia.org/ontology/writer> ?writer .
  ?work rdfs:label ""40 Dayz & 40 Nightz""@en .

  # Ensure the writer is a musical artist and an artist
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Step 2: Find associated musical artists who are rappers
  ?writer <http://dbpedia.org/property/associatedMusicalArtists> ?rapper .
  ?rapper <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?rapper rdfs:label ?labelRapper .
  FILTER(CONTAINS(LCASE(?labelRapper), ""rapper"")) .

  # Step 3: Determine the professional works of these rappers that are songs
  ?rapper <http://dbpedia.org/property/professional> ?workSong .
  ?workSong <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?workSong <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .

  # Step 4: Identify the producers of these works
  ?workSong <http://dbpedia.org/property/producer> ?producer .
}
```",6,12,7,3,3,3,3,71,0,0,8,0,0.0,0
528,47,test,Give me the war of the commander in the work of --01-09 and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?result WHERE {
  # Part 1: War of the commander in the work of --01-09
  ?work <http://dbpedia.org/ontology/creator> ?commander .
  FILTER(STR(?work) = ""http://dbpedia.org/resource/--01-09"") 
  ?commander <http://dbpedia.org/ontology/battle> ?result1 .
  ?result1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  UNION

  # Part 2: War of the military force of Battle of Pisagua
  <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?militaryForce <http://dbpedia.org/ontology/battle> ?result2 .
  ?result2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Combine results
  BIND(IF(BOUND(?result1), ?result1, IF(BOUND(?result2), ?result2, NULL)) AS ?result)
}
```",5,5,6,3,2,3,3,71,0,0,8,0,0.0,0
617,59,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find Antiochus II Theos's successor who is a royalty
  ?successorAntiochus2 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_II_Theos> .
  ?successorAntiochus2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of that successor who is royalty
  ?childSuccessor1 <http://dbpedia.org/ontology/father> ?successorAntiochus2 .
  ?childSuccessor1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the successor of Antiochus (son of Antiochus III) who is royalty
  ?successorAntiochusIII <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> .
  ?successorAntiochusIII <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the child of this successor who is royalty
  ?childSuccessor2 <http://dbpedia.org/ontology/father> ?successorAntiochusIII .
  ?childSuccessor2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Find the spouse of the child from step 2
  ?spouse <http://dbpedia.org/property/spouse> ?childSuccessor1 .
}
```",6,9,7,3,2,3,3,71,0,0,4,0,0.0,0
659,54,test,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . }","```sparql
SELECT ?militaryForce ?war WHERE {
  # Step 1: Identify military forces in the Napoleonic Wars
  ?force <http://dbpedia.org/ontology/participatedIn> <http://dbpedia.org/resource/Napoleonic_Wars> .
  
  # Step 2: Find Arthur Wellesley's commander role within that force
  OPTIONAL { 
    ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
  }
  
  # Step 3: Determine the war associated with him as a commander
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
       <http://dbpedia.org/ontology/event> ?event .
  
  # Step 4: Identify 'Polish Horse' as a military unit and organization
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>, <http://dbpedia.org/ontology/Organisation> ;
               rdfs:label ""Polish Horse""@en .
  
  # Step 5: Find the military force of 'Polish Horse' within the Napoleonic Wars
  ?polishHorse <http://dbpedia.org/ontology/participatedIn> ?force .
}
```",6,10,7,3,3,3,3,71,0,0,13,0,0.0,0
767,53,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to the alter ego of Black Hood.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?result <http://dbpedia.org/ontology/state> ?v2 . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Writer of ""Where It's At"" (Dustin Lynch album)
  ?album <http://dbpedia.org/ontology/writer> ?writer .
  VALUES ?album { <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> }

  # Alma mater of Carl L. Nippert
  ?nippert <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Alter ego of Black Hood
  ?blackHood <http://dbpedia.org/ontology/alterEgo> ?alterEgo .

  # Entity in administration and settlement
  ?entity1 <http://dbpedia.org/ontology/administration> ?entity .
  ?entity2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  
  # Ensure the entity is related to all three
  FILTER (?writer = ?entity || ?almaMater = ?entity || ?alterEgo = ?entity)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
435,24,test,Give me the work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v2 . ?result <http://dbpedia.org/ontology/timeZone> ?v2 . },"```sparql
# Query 1: Work of the author of Iceland
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/ontology/author> ?author .
  ?author <http://purl.org/dc/terms/creator> ?work .
}

# Query 2: Region of the time zone in Bombali Shebora Chiefdom
SELECT ?region WHERE {
  <http://dbpedia.org/resource/Bombali_Shebora_Cheifdom> <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?timeZone <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?region .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
659,64,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in Battle of Leipzig.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?commander WHERE {
  ?officeHolder <http://dbpedia.org/ontology/native> ?native .
  ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  
  ?officeHolder <http://dbpedia.org/ontology/militaryForce> ?force .
  
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?eventType .
  FILTER (?eventType IN (<http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/MilitaryConflict>)).
  
  ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  ?reference <http://dbpedia.org/ontology/militaryForce> ?force .

  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Battle_of_Leipzig> .
}
```",7,11,8,3,3,3,3,71,0,0,6,0,0.0,0
959,64,test,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?native WHERE {
  # Step 1: Find the manager of the 1998 Kashima Antlers season
  <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?firstManager .
  
  # Ensure this person is a sports manager
  ?firstManager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .

  # Step 2: Find the team managed by this first manager and their manager
  ?team <http://dbpedia.org/ontology/team> ?firstManager .
  ?team <http://dbpedia.org/ontology/manager> ?secondManager .

  # Step 3: Ensure the second manager was born in 1958
  ?secondManager <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> .

  # Step 4: Find the alma mater of this second manager
  ?secondManager <http://dbpedia.org/property/almaMater> ?almaMater .
  
  # Ensure it is Japanese, an organization, a university, and an educational institution
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> ;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> ;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
  ?almaMater <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .

  # Step 5: Find someone native to Japan and a member of this alma mater
  ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
          <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> ;
          <http://dbpedia.org/property/memberOf> ?almaMater .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
184,66,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?finalParent WHERE {
  # Step 1: Find the parent of Archduchess Margaret of Austria (born 1925)
  ?margaret <http://dbpedia.org/ontology/birthDate> ?date .
  FILTER(STRSTARTS(STR(?date), ""1925""))
  ?margaret <http://dbpedia.org/ontology/name> ""Margaret of Austria"" .
  ?margaret <http://dbpedia.org/ontology/parent> ?parent1 .

  # Step 2: Find the child of this parent
  ?childOfParent1 <http://dbpedia.org/ontology/parent> ?parent1 .

  # Step 3: Identify the native of Budapest
  ?nativeBudapest <http://dbpedia.org/ontology/birthPlace> ?budapest .
  FILTER(STR(?budapest) = ""Budapest"") 

  # Step 4: Find the parent of the native of Budapest
  ?parentOfNativeBudapest <http://dbpedia.org/ontology/child> ?nativeBudapest .

  # Step 5: Identify Archduke Joseph Karl's child
  ?archduke <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
  ?archdukeChild <http://dbpedia.org/ontology/child> ?archduke .

  # Step 6: Find the child of this child
  ?grandchildOfArchduke <http://dbpedia.org/ontology/parent> ?archdukeChild .

  # Step 7: Determine the parent of both entities from steps 2 and 6
  ?commonParent <http://dbpedia.org/ontology/child> ?childOfParent1 .
  ?commonParent <http://dbpedia.org/ontology/child> ?grandchildOfArchduke .

  # Step 8: Find the parent of this common entity
  ?finalParent <http://dbpedia.org/ontology/parent> ?commonParent .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
92,40,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of Jim Sheppard and band of Joseph Michael.",SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find reference related to Nevermore (2006 film)
  ?film <http://dbpedia.org/ontology/reference> ?reference .
  FILTER(STRSTARTS(LCASE(?film), ""nevermore (2006 film)""))

  # Step 2: Check if the reference is associated with a musical artist
  OPTIONAL { ?reference <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist . }
  
  # Step 3: Find band members of Jim Sheppard and Joseph Michael
  {
    ?sheppardBandMember <http://dbpedia.org/ontology/member> ?band .
    ?band <http://dbpedia.org/property/musicians> ""Jim Sheppard"" .
    FILTER(STRSTARTS(LCASE(?sheppardBandMember), ""artist""))
  }
  
  UNION
  
  {
    ?michaelBandMember <http://dbpedia.org/ontology/member> ?band .
    ?band <http://dbpedia.org/property/musicians> ""Joseph Michael"" .
    FILTER(STRSTARTS(LCASE(?michaelBandMember), ""artist""))
  }

  # Step 4: Combine results to find common band members
  VALUES ?bandMember { ?sheppardBandMember ?michaelBandMember }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
959,66,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v6 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
SELECT ?finalManager WHERE {
  # Step 1: Find the manager of the 1998 Kashima Antlers season
  <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?initialManager .
  
  # Ensure the initial manager is a sports manager
  ?initialManager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .

  # Step 2: Find the team managed by this manager
  ?team <http://dbpedia.org/ontology/manager> ?initialManager .
  
  # Step 3: Identify Eiji Ōtsuka's alma mater
  <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/property/almaMater> ?almaMater .
  
  # Ensure the alma mater is Japanese, an organization, a university, and an educational institution
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> ;
             <http://dbpedia.org/ontology/University> ;
             <http://dbpedia.org/ontology/EducationalOrganization> .
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER (CONTAINS(LCASE(?label), ""japanese""))

  # Step 4: Check if the initial manager is a member of this alma mater
  ?initialManager <http://dbpedia.org/ontology/alumniOf> ?almaMater .

  # Step 5: Identify Yōichi Masuzoe's country of residence
  <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?residence .
  
  # Ensure the residence is a country
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 6: Find the manager of the team managed by the initial manager
  ?team2 <http://dbpedia.org/ontology/manager> ?finalManager .
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
427,27,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1 .
  <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type2 .
  FILTER (?type1 = <http://dbpedia.org/ontology/OfficeHolder> && ?type2 = <http://dbpedia.org/ontology/Politician>)
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/politicalParty> ?party .
}
```",3,5,4,3,1,3,3,71,0,0,7,0,0.0,0
492,57,test,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT DISTINCT ?person WHERE {
  # Step 1: Identify the capital of Algeria
  <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?capital .
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 2: Find persons decedent at the capital and French Algeria
  ?person <http://dbpedia.org/property/decedentAt> ?capital .
  ?person <http://dbpedia.org/property/decedentAt> <http://dbpedia.org/resource/French_Algeria> .

  # Step 3: Determine the commander in the Battle of Verdun
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?verdunCommander .

  # Step 4: Identify wars involving this commander
  ?verdunCommander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 5: Find a person who meets all criteria
  ?person <http://dbpedia.org/property/decedentAt> ?war .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
617,17,test,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland and child of Doubravka of Bohemia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find Richeza of Poland's father who is a royalty
  ?richeza <http://dbpedia.org/ontology/father> ?father .
  ?richeza rdfs:label ""Richeza of Poland""@en .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the reference that is a royalty and related to Richeza
  ?reference rdfs:label ?richezasLabel .
  FILTER(CONTAINS(LCASE(?richezasLabel), ""richeza of poland""))
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the child of Doubravka of Bohemia who matches this reference
  ?doubravka <http://dbpedia.org/ontology/child> ?child .
  ?doubravka rdfs:label ""Doubravka of Bohemia""@en .
  FILTER(?reference = ?child)

  # Step 4: Find the parent of this identified individual
  ?child <http://dbpedia.org/ontology/father> ?parent .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
54,63,test,"Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find the child of Narapati I of Ava
  ?narapatiChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> .

  # Step 2: Find the father of the child of Thinkhaya of Pagan and his predecessor
  ?thinkhayasChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  ?predecessor <http://dbpedia.org/ontology/predecessor> ?thinkhayasChild .

  # Step 3: Find the child of that predecessor who is an office holder and royalty of Thihapate of Mohnyin
  ?officeHolder <http://dbpedia.org/ontology/father> ?predecessor .
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
                <http://dbpedia.org/ontology/royalty> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .

  # Step 4: Find the parent of the child identified in step 1
  ?parent <http://dbpedia.org/ontology/fatherOrMother> ?narapatiChild .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,53,test,"Give me the band of Amba Shepherd and band of the person born as Tracey Elizabeth McSween and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Find the band of Amba Shepherd
SELECT ?band1 WHERE {
  <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/memberOf> ?band1 .
}

UNION

# Find the person born as Tracey Elizabeth McSween and their band
SELECT ?band2 WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween"" .
  ?person <http://dbpedia.org/ontology/memberOf> ?band2 .
}

UNION

# Find the decedent who is an athlete and soccer player, born on a specific date at Zolotonosha
SELECT ?band3 WHERE {
  ?decedent <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  ?decedent <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Zolotonosha> .
  ?decedent <http://dbpedia.org/ontology/deathDate> ?deathDate .
  ?decedent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> .
  ?decedent <http://dbpedia.org/ontology/soccerPlayer> true .
  ?person <http://dbpedia.org/property/birthDate> ?birthDate .
  FILTER (?birthDate = ?deathDate) # Assuming the birth and death dates are the same for this query
  ?decedent <http://dbpedia.org/ontology/memberOf> ?band3 .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
16,41,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
# Step 1: Find Satomi Ishihara's profession
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .
}

# Step 2: Identify the spouse of both Ted Martin McGinley and Georgeanne Marie Rice
SELECT DISTINCT ?spouse WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Georgeanne_Rice> .
}

# Step 3: Check if this spouse has the same profession as Satomi Ishihara
SELECT ?spouse WHERE {
  ?spouse <http://purl.org/dc/terms/subject> ?profession .
  { SELECT DISTINCT ?profession WHERE {
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .
  }}
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
404,40,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914) and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
  ?person <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914–1987)> .
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
92,55,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify Joseph Michael Furney and his band membership
  ?furney <http://dbpedia.org/ontology/birthName> ""Joseph Michael Furney"" .
  ?furney <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Nevermore_(band)> .

  # Step 2: Identify Jim Sheppard and his associated musical artist
  ?sheppard <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
  ?sheppard <http://dbpedia.org/ontology/memberOfBand> ?band .
  ?band <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .

  # Step 3: Find any common or related musical artist
  OPTIONAL {
    ?furney <http://dbpedia.org/ontology/memberOfBand> ?commonBand .
    ?commonBand <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
488,52,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?birthPlace ?deathPlace ?administration WHERE {
  # Step 1: Identify the war involving Saitō Hajime
  ?war <http://dbpedia.org/ontology/battleParticipant> <http://dbpedia.org/resource/Sait%C5%8D_Hajime> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .

  # Step 2: Find the commander's birthplace
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 3 and 4: Identify Yūki Hideyasu's father and his death place
  <http://dbpedia.org/resource/Y%C5%ABki_Hideyasu> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .

  # Step 5: Identify Emperor Go-Yōzei's administration
  <http://dbpedia.org/resource/Emperor_Go-Y%C5%8Dzei> <http://dbpedia.org/property/administration> ?administration .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
404,63,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
  
  # Step 2: Confirm she is royalty
  ?princess <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 3: Find her father, Ernest Augustus, Duke of Brunswick
  ?father <http://dbpedia.org/ontology/father> ?princess .
  ?father <http://www.w3.org/2000/01/rdf-schema#label> ""Ernest Augustus, Duke of Brunswick""@en .

  # Step 4: Determine the children of Ernest Augustus, Duke of Brunswick
  ?child <http://dbpedia.org/ontology/father> ?father .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 5: Find the spouse of Princess Victoria Louise of Prussia
  ?princess <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
404,34,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
959,51,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
SELECT ?native WHERE {
  # Step 1: Yōichi Masuzoe's residence that is a country
  <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 2: Native of that country
  ?native <http://dbpedia.org/ontology/nationality> ?residence .

  # Step 3: Manager of the 1998 Kashima Antlers season who is a sports manager
  <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?manager .
  ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .

  # Step 4: Team managed by this manager
  ?team <http://dbpedia.org/ontology/manager> ?manager .
}
```",5,7,6,3,2,3,3,71,0,1157,6,0.0,0.0,0
617,65,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find Antiochus (son of Antiochus III the Great) and his child
  ?antiochus <http://dbpedia.org/ontology/birthName> ""Antiochus"" .
  ?antiochus <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?child1 <http://dbpedia.org/ontology/birthParent> ?antiochus .

  # Step 2: Find the child of that child who is royalty
  ?grandChild <http://dbpedia.org/ontology/birthParent> ?child1 .
  ?grandChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find Seleucus II Callinicus and his child who is royalty
  ?seleucus <http://dbpedia.org/property/name> ""Seleucus II Callinicus"" .
  ?child2 <http://dbpedia.org/ontology/birthParent> ?seleucus .
  ?child2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the successor of Antiochus and their child who is royalty, then find the spouse
  ?successor <http://dbpedia.org/property/successorOf> ?antiochus .
  ?child3 <http://dbpedia.org/ontology/birthParent> ?successor .
  ?child3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?spouse <http://dbpedia.org/property/spouse> ?child3 .

  # Step 5: Find the parent of the grandChild identified in step 2
  ?parent <http://dbpedia.org/ontology/birthParent> ?grandChild .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
767,51,test,"Give me the alma mater of the administration of George K. Nash and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?almaMater ?fictionalCharacter WHERE {
  # Step 1: Find alma mater of George K. Nash's administration
  ?administration <http://dbpedia.org/ontology/administration> <http://dbpedia.org/resource/George_K._Nash> .
  ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Step 2: Find alter ego of Matthew Burland's persona
  ?burland <http://www.wikidata.org/entity/P735> ?fictionalCharacter .
  ?fictionalCharacter <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .

  # Step 3: Find reference linking both
  OPTIONAL {
    ?reference <http://dbpedia.org/property/almaMater> ?almaMater .
    ?reference <http://www.wikidata.org/entity/P735> ?fictionalCharacter .
  }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
617,16,test,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
# Step 1: Identify the child of Boleslaus I who is royalty
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 2: Find the child of that royalty who is also royalty
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 3: Identify Richeza of Poland's father and his parent who is royalty
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/parent> ?parent .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
16,35,test,Give me the spouse of the person born as Ted Martin McGinley and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Ted Martin McGinley's spouse
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Gigi Rice's birth name and her spouse
  OPTIONAL { 
    <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?birthName .
    ?birthNameResource <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    ?birthNameResource <http://dbpedia.org/ontology/spouse> ?spouse .
  }

  # Ensure the spouse is the same for both
  FILTER(?spouse = ?spouse)
}
```",4,4,5,2,2,3,3,71,1,0,0,1.0,1.0,1.0
959,65,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
SELECT ?manager WHERE {
  # Step 1: Find Takashi Sekizuka's team
  ?team <http://dbpedia.org/ontology/player> <http://dbpedia.org/resource/Takashi_Sekizuka> .
  
  # Step 2: Get the manager of that team
  ?team <http://dbpedia.org/ontology/manager> ?manager .

  # Step 3: Find Eiji Ōtsuka's alma mater
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
             <http://dbpedia.org/ontology/university> true ;
             <http://dbpedia.org/ontology/educationalInstitution> true ;
             <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .
  ?almaMater <http://dbpedia.org/ontology/alumnus> <http://dbpedia.org/resource/Eiji_Ōtsuka> .

  # Step 4: Find a common member
  ?commonMember <http://dbpedia.org/ontology/player> ?team ;
                <http://dbpedia.org/ontology/alumnus> ?almaMater .

  # Step 5: Identify the leader of the 2010 Japanese House of Councillors election
  ?election <http://dbpedia.org/property/electionYear> ""2010""^^xsd:gYear ;
            <http://dbpedia.org/ontology/politicalElection> ?leader .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 6: Determine the native country of this leader
  ?country <http://dbpedia.org/ontology/nationality> ?leader .
  
  FILTER EXISTS { ?commonMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?x . }
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
378,50,test,"Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?commander ?fame WHERE {
  # Step 1: Find commanders of the Great Siege of Gibraltar
  <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .

  # Step 2: Identify wars these commanders were part of that are related to Peninsular War
  ?commander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Peninsular_War> .

  # Step 3: Get the claim to fame of these commanders
  ?commander <http://dbpedia.org/ontology/claimToFame> ?fame .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
659,57,test,"Give me the commander in German campaign of 1813 and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
# Step 1: Find commanders in the German campaign of 1813
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 2: Identify wars these commanders were part of, classified as both an event and a military conflict
WITH ?commander
SELECT DISTINCT ?war WHERE {
  ?commander <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?battle <http://www.w3.org/2000/01/rdf-schema#label> ?warLabel .
  FILTER(CONTAINS(LCASE(?warLabel), ""war""))
}

# Step 3: Find the figure known as 'Polish Horse', ensuring it is a military unit and an organization
SELECT ?polishHorse WHERE {
  ?polishHorse <http://www.w3.org/2000/01/rdf-schema#label> ""Polish Horse""@en .
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}

# Step 4: Identify the military force associated with Rutger Jan Schimmelpenninck
SELECT ?militaryForce WHERE {
  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/property/militaryForce> ?militaryForce .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Final query to combine results
SELECT DISTINCT ?commander WHERE {
  # Commanders from the German campaign of 1813 involved in wars as events and military conflicts
  { 
    SELECT ?commander WHERE {
      <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?commander .
      ?commander <http://dbpedia.org/ontology/battle> ?battle .
      ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
      ?battle <http://www.w3.org/2000/01/rdf-schema#label> ?warLabel .
      FILTER(CONTAINS(LCASE(?warLabel), ""war""))
    }
  }

  # Ensure the commander is linked to 'Polish Horse' and Rutger Jan Schimmelpenninck's military force
  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/member> ?polishHorse .
    ?militaryForce <http://dbpedia.org/property/militaryForce> ?commander .
  }
}
```",6,13,7,3,3,3,3,71,0,0,7,0,0.0,0
767,23,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?settlement WHERE {
  <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://purl.org/dc/terms/creator> ?writer .
  ?writer <http://dbpedia.org/ontology/administration> ?entity .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  BIND(?entity AS ?settlement)
}
```",3,4,4,3,1,3,3,71,0,0,66,0,0.0,0
492,25,test,"Give me the person decedent at the capital, that is a settlement, of Algeria and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT ?person WHERE {
  # Step 1: Identify the capital of Algeria that is a settlement
  ?capital <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Algeria> .
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 2: Find persons who are commanders in the Franco-Hova Wars
  ?person <http://dbpedia.org/ontology/commander> ?francoHovaWar .
  ?francoHovaWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 3: Filter these persons to those whose place of death matches the identified capital
  ?person <http://dbpedia.org/ontology/deathPlace> ?capital .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
294,23,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Step 1: Find awardees who are politicians and get their resting place
SELECT DISTINCT ?restingPlace WHERE {
  ?person <http://dbpedia.org/ontology/recipient> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  OPTIONAL { ?person <http://dbpedia.org/ontology/placeOfBurial> ?restingPlace . }
}

UNION

# Step 2: Find entities with the same birthplace as Marion James, where it is a settlement
SELECT DISTINCT ?entity WHERE {
  <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?entity <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
77,19,test,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw and war of the awardee of Golden Weapon for Bravery.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
# Part 1: Force of the Mayor
SELECT ?force WHERE {
  ?territory <http://dbpedia.org/ontology/administeredBy> ?organization .
  ?organization <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Warsaw> .
  ?territory <http://dbpedia.org/ontology/mayor> ?mayor .
  ?mayor <http://dbpedia.org/ontology/memberOf> ?force .
}

UNION

# Part 2: War of the Awardee
SELECT ?result WHERE {
  ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> .
  ?awardee <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",5,6,6,3,2,3,2,20,0,0,14,0,0.0,0
184,22,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT DISTINCT ?commonParent WHERE {
  # Find children of Archduke Joseph Francis of Austria and their parents
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent1 .

  # Find parent of Géza von Habsburg
  <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/birthParent> ?parent2 .

  # Find common ancestor (parent) between the two sets of parents
  ?commonParent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?commonParent <http://dbpedia.org/ontology/birthChild> ?child .
  ?commonParent <http://dbpedia.org/ontology/birthChild> ?parent2 .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
303,23,test,"Give me the party of the commander, that is a politician, in United States invasion of Panama and party of the person born, that is a politician, as Arnulfo Arias Madrid.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?party WHERE {
  # Part 1: Commander of the United States invasion of Panama who is a politician
  {
    <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?commander <http://dbpedia.org/property/politicalParty> ?party .
  }
  
  UNION
  
  # Part 2: Arnulfo Arias Madrid who is a politician
  {
    <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://dbpedia.org/property/politicalParty> ?party .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
9,58,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Step 1: Find the organization/educational institution in Northern Ireland
SELECT ?institution WHERE {
  ?institution <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?institution <http://dbpedia.org/ontology/EducationalInstitution> .
  ?institution <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Northern Ireland""@en .
}

# Step 2: Find the nickname of this institution
SELECT ?nickname WHERE {
  ?institution <http://dbpedia.org/property/nickname> ?nickname .
}

# Step 3: Identify a figure associated with this nickname who received the Royal Medal
SELECT DISTINCT ?awardee WHERE {
  ?figure <http://dbpedia.org/ontology/nickName> ?nickname .
  ?figure <http://dbpedia.org/ontology/award> ?award .
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medal""@en .
}

# Step 4: Find the alma mater of this awardee and John Alderdice
SELECT DISTINCT ?almaMater WHERE {
  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
  <http://dbpedia.org/resource/John_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,48,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
# Query for Heather Roy's profession as a military unit and associated wars
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?profession <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
UNION
{
  # Query for Jonathon Band's award and associated wars
  <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/ontology/award> ?award .
  ?award <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",5,6,6,3,2,3,3,71,0,0,9,0,0.0,0
54,71,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v8 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . }","```sparql
SELECT ?predecessor WHERE {
  # Step 1: Find the child of Thihapate of Mohnyin who is an office holder and royalty.
  ?child <http://dbpedia.org/ontology/birth> ?birth .
  ?birth <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the predecessor of this child.
  ?predecessor <http://dbpedia.org/ontology/predecessor> ?child .

  # Step 3: Determine the parent of the child of the parent of Thado Minsaw of Prome.
  ?parentOfThadoMinsaw <http://dbpedia.org/ontology/birth> ?birth2 .
  ?birth2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
  ?childOfParent <http://dbpedia.org/ontology/birth> ?birth3 .
  ?birth3 <http://dbpedia.org/ontology/birthPlace> ?parentOfThadoMinsaw .

  # Step 4: Identify the child of the father of the child of Thinkhaya of Pagan.
  ?childOfThinkhaya <http://dbpedia.org/ontology/birth> ?birth4 .
  ?birth4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  ?fatherOfChild <http://dbpedia.org/ontology/father> ?childOfThinkhaya .
  ?finalChild <http://dbpedia.org/ontology/birth> ?birth5 .
  ?birth5 <http://dbpedia.org/ontology/birthPlace> ?fatherOfChild .

  # Combine the results to find the predecessor.
  FILTER(?predecessor = ?parentOfThadoMinsaw || ?predecessor = ?finalChild)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
959,53,test,"Give me the manager of the team of Takashi Sekizuka and native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?manager WHERE {
  # Step 1: Find the person born in 1958 with a specific alma mater
  ?person <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  
  # Step 2: Ensure the alma mater is a Japanese university and educational institution
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
             <http://dbpedia.org/ontology/university> true ;
             <http://dbpedia.org/ontology/educationalInstitution> true ;
             <http://dbpedia.org/ontology/country> ?country .
  ?country rdfs:label ""Japan""@en .

  # Step 3: Find the team associated with Takashi Sekizuka
  ?team <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Takashi_Sekizuka> .

  # Step 4: Get the manager of that team
  ?team <http://dbpedia.org/ontology/manager> ?manager .
}
```",6,10,7,3,3,3,3,71,0,0,3,0,0.0,0
778,18,test,"Give me the author of the work, that is a software, of Bill Joy and entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . },"```sparql
SELECT DISTINCT ?author WHERE {
  # Step 1: Find software authored by Bill Joy
  ?software <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Bill_Joy> .
  ?software <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software> .

  # Step 2: Find awards associated with the software
  ?award <http://dbpedia.org/property/entity> ?software .
  
  # Step 3: Identify awardees of these awards who are American and have received the Wolf Prize in Medicine
  ?award <http://dbpedia.org/ontology/awardee> ?awardee .
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?awardee <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> .
  
  # Step 4: Check if the awardee has received the Wolf Prize in Medicine
  ?awardee <http://dbpedia.org/ontology/receivedAward> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> .

  # Return the author of the software
  ?software <http://dbpedia.org/ontology/creator> ?author .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
161,51,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Find the force that is both a societal event and a military conflict involving Francisco Largo Caballero.
  ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .

  # Step 2: Find the commander of another force (an event) associated with ""El Director.""
  ?otherForce <http://dbpedia.org/ontology/commander> ?elDirector .
  ?elDirector rdfs:label ""El Director""@en ; # Assuming El Director is a label in English
               owl:sameAs ?figureKnownAsElDirector .
  ?otherForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Step 3: Find the military force related to both these forces.
  ?force <http://dbpedia.org/property/militaryForce> ?militaryForce .
  ?otherForce <http://dbpedia.org/property/militaryForce> ?militaryForce .
}
```",5,8,6,3,2,3,3,71,0,0,32,0,0.0,0
92,65,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v6 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
# Step 1: Identify the person born as Joseph Michael Furney
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael Furney"" .
}

# Step 2: Determine the band associated with him (Nevermore)
SELECT ?band WHERE {
  ?person <http://dbpedia.org/property/memberOf> ?band .
  FILTER(?band = <http://dbpedia.org/resource/Nevermore_(band)>)
}

# Step 3: Find the reference or artist related to Nevermore
SELECT ?artist WHERE {
  ?band <http://dbpedia.org/ontology/reference> ?artist .
}

# Step 4: Identify the actor of ""Return to Nuke 'Em High Volume 1""
SELECT ?actor WHERE {
  ?movie <http://dbpedia.org/property/starring> ?actor .
  FILTER(?movie = <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1>)
}

# Step 5: Determine any musical artists associated with this actor
SELECT ?associatedArtist WHERE {
  ?actor <http://dbpedia.org/ontology/associatedBand> ?associatedArtist .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,59,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . },"```sparql
SELECT ?person WHERE {
  # Step 1: Find the writer of the song ""Amba Shepherd""
  ?song <http://dbpedia.org/ontology/writer> ?writer .
  ?song <http://purl.org/dc/terms/title> ""Amba Shepherd"" .

  # Step 2: Determine the band associated with that writer
  ?band <http://dbpedia.org/property/member> ?writer .

  # Step 3: Find an athlete and soccer player who was decedent at Zolotonosha and had a connection to that band
  ?athlete <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> ;
           <http://dbpedia.org/ontology/birthDate> ?birthDate ;
           <http://dbpedia.org/ontology/sport> ?sport .
  FILTER(?sport = <http://dbpedia.org/resource/Soccer> || ?sport = <http://dbpedia.org/resource/Athletics>)
  ?athlete <http://dbpedia.org/property/member> ?band .

  # Step 4: Retrieve the birth date of this person
  # (Already captured in ?birthDate)

  # Step 5: Find another person born on that same birth date
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
838,12,val,"Give me the band member of the band, that is a group, of YU Grupa and band of Raša Đelmaš.",SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/member> ?member .
  <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/band> ?band .
  ?band <http://dbpedia.org/ontology/member> ?member .
}
```",3,4,4,2,2,3,2,20,0,0,4,0,0.0,0
10,14,val,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert and associated musical artist of Matt Colton.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
SELECT ?bandMember WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Luke Francis Vibert"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?bandMember .
  ?bandMember <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Matt_Colton> .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
963,11,val,"Give me the administration of Serbian Progressive Party and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
# Query 1: Find the administration of Serbian Progressive Party
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Serbian_Progressive_Party> <http://dbpedia.org/ontology/administration> ?administration .
}

UNION

# Query 2: Find a country in the region where Central European Time is observed
SELECT ?country WHERE {
  ?region <http://www.w3.org/2006/timezone#timezoneOffset> ""01:00""^^<http://www.w3.org/2001/XMLSchema#duration> .
  ?region <http://dbpedia.org/ontology/country> ?country .
  ?country a <http://dbpedia.org/ontology/Country> .
}
```",3,4,4,2,2,3,2,20,0,0,84,0,0.0,0
528,22,val,Give me the force of the person born as Narciso Campero Leyes and war of Irene Morales.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?person ?property ?result WHERE {
  { 
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> ?property ?result .
    FILTER(?property = <http://dbpedia.org/ontology/force>)
    BIND(<http://dbpedia.org/resource/Narciso_Campero_Leyes> AS ?person)
  }
  
  UNION
  
  {
    <http://dbpedia.org/resource/Irene_Morales> ?property ?result .
    FILTER(?property = <http://dbpedia.org/ontology/battle>)
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    BIND(<http://dbpedia.org/resource/Irene_Morales> AS ?person)
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
294,18,val,"Give me the resting place of Edwin A. Keeble and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
# Query to find the resting place of Edwin A. Keeble
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
}

UNION

# Query to find an entity in the birthplace of Marion James that is a settlement
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2004/02/skos/core#hasTopConcept> ?settlement .
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Settlement_100000001> .
  ?entity <http://dbpedia.org/ontology/location> ?birthPlace .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
48,11,val,Give me the band of the writer of Emotion (Carly Rae Jepsen album) and band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
# Query for the band of the writer of Emotion (Carly Rae Jepsen album)
SELECT DISTINCT ?writerBand WHERE {
  <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://purl.org/dc/terms/creator> ?writer .
  OPTIONAL { ?writer <http://dbpedia.org/ontology/memberOf> ?writerBand . }
}

UNION

# Query for the band of Murda Mook
SELECT DISTINCT ?band WHERE {
  <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/memberOf> ?band .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
404,32,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?spouse WHERE {
  ?princess <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
  ?princess <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .
  
  ?child <http://dbpedia.org/ontology/birthParent> ?princess .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .
  ?child <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .

  ?princess <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
54,35,val,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and child of the father of Soe Min Wimala Dewi.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . },"```sparql
SELECT ?predecessor WHERE {
  # Step 1: Identify Soe Min Wimala Dewi's father
  <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Find children of Thihapate of Mohnyin who are office holders and royalty
  <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Determine which child is also a child of Soe Min Wimala Dewi's father
  ?father <http://dbpedia.org/ontology/child> ?sameChild .
  FILTER (?child = ?sameChild)

  # Step 4: Retrieve the predecessor of this identified individual
  ?sameChild <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
626,12,val,Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?awardee WHERE {
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  ?award <http://dbpedia.org/property/relatedTo> <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> .
  
  ?awardee <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Battle_of_Leipzig> .
}
```",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
392,14,val,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?region WHERE {
  ?event <http://dbpedia.org/ontology/location> ?location .
  FILTER(?location IN (<http://dbpedia.org/resource/Aguilar_de_Segarra>, ?italianEntity))
  ?event <http://www.w3.org/2002/07/owl#sameAs> ?sportsEvent .
  ?sportsEvent <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?timeZone <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TimeZone> .
  ?timeZone <http://dbpedia.org/ontology/location> ?region .
}
```

Note: The query assumes the existence of a direct or indirect link between Aguilar de Segarra, an Italian entity, and a sports event. Adjustments may be needed based on actual DBpedia data structure.",3,4,4,2,2,2,3,28,0,0,513,0,0.0,0
392,19,val,"Give me the entity in the region, that is a country, of Central European Time and region of Central European Time and province of Schio.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?entity WHERE {
  ?country <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> .
  ?region <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
  ?region <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Schio> .
  ?entity <http://dbpedia.org/ontology/location> ?region .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
9,39,val,"Give me the alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
# Find the alma mater of Allen Hill (scientist)
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

UNION

# Find the nickname of an organization and educational institution in Northern Ireland
SELECT ?nickname WHERE {
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  ?entity <http://dbpedia.org/ontology/nickname> ?nickname .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
  ?entity <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Northern Ireland"" .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,30,val,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at French Algeria and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . },"```sparql
SELECT ?person WHERE {
  # Decedent at the capital of Algeria, which is a settlement
  ?person <http://dbpedia.org/ontology/decedentAt> <http://dbpedia.org/resource/Algiers> .
  <http://dbpedia.org/resource/Algiers> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Decedent at French Algeria
  ?person <http://dbpedia.org/ontology/decedentAt> <http://dbpedia.org/resource/French_Algeria> .

  # Commander in Franco-Hova Wars
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Franco-Hova_Wars> .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
328,33,val,Give me the awardee of Order of Suvorov and commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
SELECT ?awardee WHERE {
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Order_of_Suvorov> .
  ?awardee <http://dbpedia.org/ontology/commander> ?force .
  ?decedent <http://dbpedia.org/ontology/deceasedAtLocation> <http://dbpedia.org/resource/Budapest> .
  ?force <http://dbpedia.org/ontology/member> ?decedent .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
64,7,val,"Give me the alma mater of the person decedent, that is a writer, at Sremska Kamenica and entity in Serbia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
SELECT ?almaMater WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Serbia> .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
427,28,val,Give me the party of Romano Prodi and reference to the name of Italian People's Party (1994) and party of Giulio Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?prodisParty ?italianPeoplesParty ?andreottisParty WHERE {
  # Find Romano Prodi's party and ensure it references Italian People's Party (1994)
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?prodisParty .
  OPTIONAL { 
    ?italianPeoplesParty <http://www.w3.org/2000/01/rdf-schema#label> ""Italian People's Party (1994)""@en .
    FILTER(?prodisParty = ?italianPeoplesParty)
  }
  
  # Find Giulio Andreotti's party
  <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/politicalParty> ?andreottisParty .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,27,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify the album ""What U See Is What U Get""
  <http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)> <http://purl.org/dc/terms/creator> ?writer .

  # Step 2: Filter writers who are both a musical artist and an artist
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Step 3: Find associated musical artists linked to these writers
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",3,7,4,3,1,3,3,71,0,0,50,0,0.0,0
328,28,val,"Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
  ?person <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> .
  ?person <http://dbpedia.org/ontology/awardee> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
488,35,val,Give me the administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?fatherAdministration ?commanderBirthPlace WHERE {
  # Find the father of Emperor Go-Mizunoo and his administration
  <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?father .
  OPTIONAL { ?father <http://dbpedia.org/ontology/office> ?administration . }
  
  # Find the commander in the Boshin War and their birthplace
  ?boshinWar <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(?boshinWar = <http://dbpedia.org/resource/Boshin_War>)
  OPTIONAL { ?commander <http://dbpedia.org/ontology/birthPlace> ?commanderBirthPlace . }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
345,12,val,"Give me the figure known as Stolz von Liechtenstein and team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . }","```sparql
SELECT ?person ?team ?alias WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://dbpedia.org/ontology/occupation> ?occupation .
  FILTER (
    EXISTS { ?occupation <http://www.w3.org/2000/01/rdf-schema#label> ""soccer player""@en }
    && EXISTS { ?occupation <http://www.w3.org/2000/01/rdf-schema#label> ""soccer manager""@en }
  )
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/team> ?team .
  }
  OPTIONAL {
    ?person <http://xmlns.com/foaf/0.1/knowsAs> ?alias .
    FILTER (CONTAINS(LCASE(?alias), ""stolz von liechtenstein""))
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
488,40,val,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT DISTINCT ?birthPlace ?deathPlace ?administration WHERE {
  # Find the military conflict involving both Saitō Hajime and Tokugawa Ieyasu
  ?war <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/Sait%C5%8D_Hajime> .
  ?war <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/Tokugawa_Ieyasu> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .

  # Find the commander of this war
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  
  # Get the birthplace of the commander
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Get the death place of Tokugawa Ieyasu
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .

  # Get the administration period of Emperor Go-Yōzei
  <http://dbpedia.org/resource/Emperor_Go-Y%C5%8Dzei> <http://dbpedia.org/property/administration> ?administration .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
360,15,val,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
SELECT ?writer WHERE {
  ?album <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Dave_Flett> .
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalAlbum> .
  ?album <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Manfred_Mann> .
  ?album <http://purl.org/dc/terms/creator> ?writer .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
314,12,val,Give me the commander in Spanish Civil War and awardee of 30 and person deceased at Madrid.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Spanish_Civil_War> .
  ?person <http://dbpedia.org/property/orderOfTheGoldenFleece> ""30""^^xsd:string .
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
232,22,val,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and child of Jon Pertwee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
SELECT ?native WHERE {
  # Step 1: Find Sylvie Bermann's British settlement residence
  ?residence <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Sylvie_Bermann> .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 2: Find Jon Pertwee's child
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Jon_Pertwee> .
  
  # Step 3: Determine the native of the residence found in step 1
  ?native <http://dbpedia.org/ontology/nativePlace> ?residence .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
838,13,val,"Give me the band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  # Step 1: Identify the band associated with Žika Jelić
  <http://dbpedia.org/resource/Žika_Jelić> <http://dbpedia.org/ontology/memberOf> ?memberBand .
  
  # Ensure it's a band and a group
  ?memberBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> ;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
  
  # Step 2: Find members of that band who are artists and musical artists
  ?memberBand <http://dbpedia.org/ontology/member> ?bandMember .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> ;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  
  # Step 3: Determine which bands these members belong to
  ?bandMember <http://dbpedia.org/ontology/memberOf> ?resultBand .
}
```",3,7,4,3,1,3,2,20,0,0,21,0,0.0,0
16,23,val,Give me the spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
  ?person <http://dbpedia.org/property/spouse> ?spouse .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
427,25,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and party of Giulio Andreotti.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?prodiParty ?andreottiParty WHERE {
  # Find the party of Romano Antonio Prodi who is an office holder and a politician
  <http://dbpedia.org/resource/Romano_Antonio_Prodi> 
    <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?prodiType1 .
  <http://dbpedia.org/resource/Romano_Antonio_Prodi> 
    <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?prodiType2 .
  FILTER (?prodiType1 = <http://dbpedia.org/ontology/OfficeHolder> && ?prodiType2 = <http://dbpedia.org/ontology/Politician>)
  <http://dbpedia.org/resource/Romano_Antonio_Prodi> <http://dbpedia.org/property/party> ?prodiParty .

  # Find the party of Giulio Andreotti
  <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/property/party> ?andreottiParty .
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
427,43,val,Give me the reference to Partito Popolare Italiano and party of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?party1 ?party2 ?party3 WHERE {
  # Partito Popolare Italiano reference
  <http://dbpedia.org/resource/Partito_Popolare_Italiano> ?ref1 ?party1 .

  # Romano Prodi's party affiliation
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/memberOf> ?party2 .
  
  # Alumnus of MIT and their father's political party
  ?alumnus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Alumnus> ;
           <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?alumnus <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/memberOf> ?party3 .

  # Find common references
  FILTER(?party1 = ?party2 || ?party1 = ?party3 || ?party2 = ?party3)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
30,7,val,"Give me the professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder and native of the birthplace of Silvia Cohen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
SELECT ?professional WHERE {
  # Step 1: Find the birthplace of Silvia Cohen
  <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 2 and 3: Find professionals native to this birthplace with specified professions
  ?professional <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER (?birthPlace = ?birthPlace) # Ensure the same birthplace

  # Check for each profession
  OPTIONAL { ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Financier> . }
  OPTIONAL { ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Businessman> . }
  OPTIONAL { ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Vineyard_owner> . }
  OPTIONAL { ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Art_collector> . }
  OPTIONAL { ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Racehorse_owner/breeder> . }

  # Ensure all professions are matched
  FILTER (
    EXISTS { ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Financier> }
    && EXISTS { ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Businessman> }
    && EXISTS { ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Vineyard_owner> }
    && EXISTS { ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Art_collector> }
    && EXISTS { ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Racehorse_owner/breeder> }
  )
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
314,16,val,"Give me the person deceased at Madrid and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> .
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/SocietalEvent> .
  ?person <http://dbpedia.org/ontology/commander> ?commanderRole .
  ?commanderRole <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Commander> .
  ?person <http://dbpedia.org/ontology/associatedWith> <http://dbpedia.org/resource/Lisa_Gavrić> .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
994,25,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Step 1: Find associated musical artist of Red Tide (band)
SELECT ?associatedArtist WHERE {
  <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

UNION

# Step 2: Find band member who is a musical artist and born as Donald Maynard Dokken
SELECT ?bandMember WHERE {
  # Find band members of Red Tide
  <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/member> ?bandMember .
  
  # Ensure the band member is categorized as a musical artist
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Find birth link to Donald Maynard Dokken
  ?bandMember <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  <http://dbpedia.org/resource/Dokken,_Donald_Maynard> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
801,24,val,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
# Step 1: Find the associated musical artist of Chris Taylor (music producer)
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

# Step 2: Find works produced by Chris Taylor that are songs and works of 50 Cent
SELECT DISTINCT ?work WHERE {
  ?work <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> , <http://dbpedia.org/ontology/Song> .
  ?work <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/50_Cent> .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
696,11,val,Give me the landmark at elevation of 50 and birth place of the member of Dropkick Murphys.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?landmark WHERE {
  ?landmark <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#float> .
  ?member <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Dropkick_Murphys> .
  ?member <http://dbpedia.org/ontology/birthPlace> ?landmark .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
617,31,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?finalChild WHERE {
  # Step 1: Find Antiochus II Theos's successor who is a royalty.
  <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?successor .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of that successor who is a royalty.
  ?successor <http://dbpedia.org/ontology/child> ?royalChild .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the spouse of Laodice IV.
  <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/property/spouse> ?spouse .

  # Step 4: Find the child of the royal child (from step 2) who is a royalty.
  ?royalChild <http://dbpedia.org/ontology/child> ?finalChild .
  ?finalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",4,6,5,3,2,3,3,71,2,3,1,0.4,0.6666666666666666,0.5
328,30,val,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of Order of Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?commander WHERE {
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> ;
          <http://dbpedia.org/ontology/leader> ?commander .
  ?commander <http://dbpedia.org/property/awardeeOf> <http://dbpedia.org/resource/Order_of_Suvorov> .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
427,23,val,Give me the reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?partyName ?reference WHERE {
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/memberOf> ?party .
  ?party rdfs:label ?partyName .
  OPTIONAL { ?party foaf:name ?partyName . }
  ?party foaf:name ?name .
  ?name dbo:wikiPageWikiLink ?reference .
}
```",3,3,4,3,1,3,3,71,0,0,8,0,0.0,0
328,39,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in Eastern Front (World War II).",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Step 1: Find Gustav Jonson's leader who is an office holder and politician
SELECT ?leader WHERE {
  <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/leader> ?leader .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}

# Step 2: Find the commander in Eastern Front (World War II)
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?commander .
}

# Assuming we have identified a common individual from steps 1 and 2, proceed to step 3

# Step 3: Find the government agency associated with this leader
SELECT ?agency WHERE {
  ?leader <http://dbpedia.org/ontology/officeHolderOf> ?agency .
  ?agency <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
}

# Step 4: Find the leader of this government agency
SELECT ?finalLeader WHERE {
  ?agency <http://dbpedia.org/ontology/leader> ?finalLeader .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
232,34,val,Give me the child of the person born as the birth name of Jon Pertwee and native of London.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?child WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Jon Pertwee"" .
  ?person <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/London> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?person <http://dbpedia.org/ontology/child> ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
281,31,val,Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?war WHERE {
  ?award <http://dbpedia.org/ontology/recipient> <http://dbpedia.org/resource/Jonathon_Band> .
  ?award <http://dbpedia.org/property/relatedTo> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
  ?award <http://dbpedia.org/ontology/reason> ?reason .
  ?reason <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?reason AS ?war)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
9,24,val,Give me the figure known as QUB and alma mater of the awardee of Royal Medal.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
SELECT ?figure ?almaMater WHERE {
  ?figure <http://dbpedia.org/ontology/alumniOf> ?almaMater .
  ?figure rdfs:label ""QUB""@en .
  
  OPTIONAL {
    ?almaMater <http://dbpedia.org/property/awards> ?award .
    ?award rdfs:label ""Royal Medal""@en .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,38,val,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?sibling WHERE {
  # Step 1: Identify the father of Ernest Augustus, Duke of Brunswick
  <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Find children (siblings) of this father
  ?father <http://dbpedia.org/ontology/child> ?sibling .
  
  # Ensure the sibling is not Ernest Augustus himself
  FILTER (?sibling != <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick>)
  
  # Step 3: Check if the sibling is royalty and a parent
  ?sibling <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?sibling <http://dbpedia.org/ontology/parent> ?child .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
232,33,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?actor WHERE {
  # Step 1: Identify the child of Jon Pertwee who is a professional in acting, narration, and production
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Jon_Pertwee> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
  ?child <http://dbpedia.org/ontology/profession> ?profession .
  
  FILTER (
    EXISTS { ?child <http://dbpedia.org/property/profession> ""actor"" . }
    && EXISTS { ?child <http://dbpedia.org/property/profession> ""narrator"" . }
    && EXISTS { ?child <http://dbpedia.org/property/profession> ""producer"" . }
  )
  
  # Step 2: Determine their claim to fame that is both a film and a military conflict
  ?child <http://dbpedia.org/ontology/fame> ?claimToFame .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1, ?type2 .
  
  FILTER (
    EXISTS { ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . }
    && EXISTS { ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> . }
  )
  
  # Step 3: Find an actor associated with this claim to fame
  ?claimToFame <http://dbpedia.org/ontology/starring> ?actor .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
281,40,val,Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand and war of New Zealand Army.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT DISTINCT ?war WHERE {
  # Find the award received by Jonathon Band
  <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/ontology/award> ?award .

  # Find wars associated with entities in Colony of New Zealand and New Zealand Army
  ?entity1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Colony> .
  ?entity1 rdfs:label ""Colony of New Zealand""@en .
  ?entity1 <http://dbpedia.org/ontology/battle> ?war .

  ?entity2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryOrganization> .
  ?entity2 rdfs:label ""New Zealand Army""@en .
  ?entity2 <http://dbpedia.org/ontology/battle> ?war .

  # Ensure the war is associated with the award
  OPTIONAL { ?award <http://dbpedia.org/property/war> ?war . }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
421,17,val,Give me the person born as Edin Dervišhalidović and native of the birthplace of Samir Bekrić.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
# Step 1: Find the birthplace of Samir Bekrić
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Step 2: Find a person born as Edin Dervišhalidović and native of the birthplace found in step 1
SELECT DISTINCT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović"" .
  ?person <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
  
  # Join with the result of Step 1 to match native place
  VALUES ?birthPlace { 
    # Placeholder for actual birthplace URI from step 1
  }
  
  FILTER(?nativePlace = ?birthPlace)
}
```

Note: In practice, you would need to execute the first query separately to get the specific URI for Samir Bekrić's birthplace and then use that URI in place of the placeholder in the second query. This two-step process is necessary because SPARQL does not support direct subquery results within a single query without additional processing or tools.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,14,val,"Give me the father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?father WHERE {
  # Step 1: Identify Princess Pauline's spouse who is royalty
  <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the children of that spouse who are royalty
  ?spouse <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Determine the father of those royal children
  ?child <http://dbpedia.org/ontology/father> ?father .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
485,14,val,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in United Kingdom.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> .
  ?person <http://purl.org/dc/terms/relation> <http://dbpedia.org/resource/Eric_Gregory_Award> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,5,4,2,2,2,3,28,0,0,5,0,0.0,0
404,18,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?child WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
  ?child <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> .
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914-1987)> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
767,26,val,Give me the alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://dbpedia.org/property/governor> ?v1 . }","```sparql
SELECT ?almaMater WHERE {
  ?administration <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/George_Kilbon_Nash> .
  ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",3,3,4,3,1,3,3,71,0,0,6,0,0.0,0
915,11,val,"Give me the father of Lizzie Spaulding and resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/residence> ?v2 . },"```sparql
SELECT ?father WHERE {
  # Step 1: Identify Lizzie Spaulding's father
  <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Determine Stephen Verona's birthplace that is a settlement
  ?veronaBirthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?veronaBirthPlace .

  # Step 3: Find residents of that settlement who match Lizzie Spaulding's father
  ?resident <http://dbpedia.org/ontology/resident> ?veronaBirthPlace .
  FILTER (?resident = ?father)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
617,40,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find successor of Antiochus II Theos who is royalty
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_II_Theos> .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find child of successor who is royalty
  ?child <http://dbpedia.org/ontology/fatherOrMother> ?successor .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find spouse of Laodice IV
  <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 4: Find child of the child from step 2 who is royalty
  ?grandchild <http://dbpedia.org/ontology/fatherOrMother> ?child .
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Find parent of Nysa (wife of Pharnaces I of Pontus)
  ?nysaParent <http://dbpedia.org/ontology/fatherOrMother> <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> .

  # Match the spouse from step 3 with the grandchild from step 4 and parent from step 5
  FILTER (?spouse = ?grandchild && ?spouse = ?nysaParent)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
492,32,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?person WHERE {
  # Step 1: Find the work of Joseph C. Satterthwaite
  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/work> ?work .
  
  # Step 2: Identify decedents at this work
  ?person <http://dbpedia.org/ontology/decedentAtWork> ?work .

  # Step 3: Find wars involving Frédéric-Georges Herr as a commander
  <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/commander> ?war .
  
  # Ensure the war is both a military conflict and an event
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?event .
  
  # Step 4: Find common person
  ?person <http://dbpedia.org/ontology/commander> ?war .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
838,11,val,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of Kerber.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . },"```sparql
SELECT DISTINCT ?band WHERE {
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/YU_Grupa> .
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Kerber> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/ontology/member> ?band .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
659,27,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?militaryForce WHERE {
  ?event <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",3,6,4,3,1,3,3,71,0,0,1127,0,0.0,0
767,37,val,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to .,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
SELECT ?result WHERE {
  ?administration <http://dbpedia.org/ontology/administration> <http://dbpedia.org/resource/George_Kilbon_Nash> .
  ?administration <http://dbpedia.org/ontology/almaMater> ?result .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
994,36,val,"Give me the associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify the persona of Don Dokken as a musical artist
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/persona> ?persona .
  
  # Step 2: Find the person born who is associated with this persona and is also a musical artist
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?persona <http://dbpedia.org/ontology/personaOf> ?person .

  # Step 3: Determine the band member relationship for this person
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .

  # Step 4: Find the associated musical artist of S.A. Slayer
  ?band <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/S.A._Slayer> .
  ?band <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
981,15,val,"Give me the birth place of Novia Indriani Mamuaja and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
# Find the birthplace of Novia Indriani Mamuaja
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

UNION

# Identify an entity in the region associated with the time zone of Salak, North Sumatra
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?region <http://www.w3.org/2006/time#hasTimezone> ?timeZone .
  ?entity <http://dbpedia.org/ontology/location> ?region .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
659,34,val,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?commander WHERE {
  ?officeHolder <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?militaryForce <http://dbpedia.org/property/militaryConflicts> <http://dbpedia.org/resource/Napoleonic_Wars> .
  ?officeHolder <http://dbpedia.org/ontology/memberOfMilitaryOrganization> ?militaryForce .
  ?militaryForce <http://dbpedia.org/ontology/commander> ?commander .
}
```",4,5,5,3,2,3,3,71,0,0,34,0,0.0,0
184,37,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Archduchess Ilona of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find the royal parent of Archduchess Ilona of Austria
  ?royalParent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .
  ?royalParent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of this royal parent
  ?royalParent <http://dbpedia.org/ontology/child> ?parentChild .
  
  # Step 3: Find the child of the entity found in step 2
  ?parentChild <http://dbpedia.org/ontology/child> ?grandchild .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
182,17,val,Give me the entity in Sri Lanka and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT DISTINCT ?entityInSriLanka ?war WHERE {
  <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://purl.org/dc/terms/creator> ?work .
  
  # Find entities in Sri Lanka related to his work
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> ;
              rdfs:label ""Sri Lanka""@en .
    BIND(?location AS ?entityInSriLanka)
  }
  
  # Find wars related to his work
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
  
  FILTER(?entityInSriLanka || ?war)
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
161,36,val,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of Rif War.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
SELECT ?commander WHERE {
  ?elDirector <http://dbpedia.org/ontology/knownAs> ""El Director"" .
  ?elDirector <http://dbpedia.org/ontology/militaryForce> <http://dbpedia.org/resource/Rif_War> .
  ?event <http://dbpedia.org/ontology/commander> ?commander .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  FILTER(?elDirector = ?commander)
}
```",4,5,5,3,2,3,3,71,0,0,12,0,0.0,0
547,33,val,Give me the resting place of the actor of the show with Emily Richard and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
# Query to find the resting place of the actor from a show with Emily Richard
SELECT ?restingPlace1 WHERE {
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/E._Richard>.
  ?actor <http://dbpedia.org/ontology/starring> ?show.
  ?actor <http://dbpedia.org/ontology/deathPlace> ?restingPlace1 .
}

# Query to find the resting place of James Burton (Egyptologist)
SELECT ?restingPlace2 WHERE {
  <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/deathPlace> ?restingPlace2 .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
701,40,val,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?henuttawyParent WHERE {
  # Step 1: Find Henuttawy (19th dynasty) and her parent
  <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/birth> ?birth .
  ?birth <http://dbpedia.org/ontology/fatherOrMother> ?henuttawyParent .

  # Step 2: Confirm Henuttawy is a spouse of Ramesses II
  <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> .

  # Step 3: Find the child of Amun-her-khepeshef's spouse
  ?amunHerKhepeshefSpouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
  ?child <http://dbpedia.org/ontology/birth> ?birth2 .
  ?birth2 <http://dbpedia.org/ontology/fatherOrMother> ?amunHerKhepeshefSpouse .

  # Step 4: Ensure the parent matches
  ?henuttawyParent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> .
  ?henuttawyParent <http://dbpedia.org/ontology/fatherOrMother> ?child .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,37,val,"Give me the band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Step 1: Find bands of Fredrik Thordendal that are organizations
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .

  # Step 2: Find band members of Don Dokken
  ?dokkenBandMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Don_Dokken> .
  
  # Step 3: Check if the Don Dokken member is also a member of Fredrik Thordendal's band
  ?band <http://dbpedia.org/ontology/member> ?dokkenBandMember .

  # Step 4: Find associated musical artist for this band member that is a band/group/organization
  ?dokkenBandMember <http://dbpedia.org/ontology/musicalArtist> ?associatedArtist .
  ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?artistType .

  FILTER (
    ?artistType IN (<http://dbpedia.org/ontology/Band>, 
                    <http://dbpedia.org/ontology/MusicalGroup>, 
                    <http://dbpedia.org/ontology/Organisation>)
  )
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
421,13,val,Give me the band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . }","```sparql
SELECT DISTINCT ?bandMember WHERE {
  ?person <http://dbpedia.org/ontology/nativeOf> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
  ?person <http://purl.org/dc/terms/receivedAward> ?award .
  OPTIONAL { ?person <http://dbpedia.org/property/bandMember> ?bandMember . }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
378,38,val,Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the commander in Peninsular War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?commander ?fame WHERE {
  # Find commanders in both battles
  { 
    <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
  }
  {
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/battleCommander> ?commander .
  }

  # Find the claim to fame of the identified commander
  ?commander <http://dbpedia.org/property/claimToFame> ?fame .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
626,13,val,"Give me the commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?commanderInForce WHERE {
  <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?initialCommander .
  ?force <http://dbpedia.org/ontology/battle> ?battle .
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Paris_(1814)>)
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?initialCommander <http://dbpedia.org/ontology/battle> ?force .
  ?force <http://dbpedia.org/ontology/commander> ?commanderInForce .
}
```",3,4,4,3,1,3,2,20,0,0,364,0,0.0,0
356,11,val,Give me the player in the successor of 2014 Sacramento Republic FC season and team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  # Step 1: Find the successor of the 2014 Sacramento Republic FC season
  <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?successorSeason .

  # Step 2: Identify Mark Briggs's team
  <http://dbpedia.org/resource/Mark_Briggs_(footballer)> <http://dbpedia.org/ontology/team> ?team .

  # Step 3: Find players in both the successor season and Mark Briggs's team
  ?successorSeason <http://dbpedia.org/ontology/player> ?player .
  ?team <http://dbpedia.org/ontology/player> ?player .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
9,41,val,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of Royal Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
SELECT ?university WHERE {
  # Step 1: Find QUB's alma mater
  ?qub <http://dbpedia.org/ontology/almaMater> ?university .
  ?qub rdfs:label ""QUB""@en .

  # Step 2: Find the mayor of Northern Ireland Forum who is a politician and their alma mater
  ?mayor <http://dbpedia.org/ontology/politicianForParty> ?party ;
         <http://dbpedia.org/property/mayorOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  ?mayor <http://dbpedia.org/ontology/almaMater> ?university .

  # Step 3: Find the awardee of Royal Medal and their alma mater
  ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Royal_Medal> .
  ?awardee <http://dbpedia.org/ontology/almaMater> ?university .

}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
54,33,val,Give me the parent of the child of the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
SELECT ?parentOfThinkhaya WHERE {
  # Step 1: Identify Thado Minsaw of Prome and his parent
  ?thadoMinsaw <http://dbpedia.org/ontology/birthName> ""Thado Minsaw"" .
  ?thadoMinsaw <http://dbpedia.org/ontology/father> ?parentOfThado .

  # Step 2: Find the child of Thado Minsaw's parent (Thinkhaya of Pagan)
  ?thinkhaya <http://dbpedia.org/ontology/birthName> ""Thinkhaya"" .
  ?thinkhaya <http://dbpedia.org/ontology/father> ?parentOfThado .

  # Step 3: Find the parent of Thinkhaya of Pagan
  ?parentOfThinkhaya <http://dbpedia.org/ontology/child> ?thinkhaya .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,34,val,Give me the person born as Georgeanne Marie Rice and spouse of the person born as the birth name of Ted McGinley.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
# Step 1: Identify the person born as Georgeanne Marie Rice
SELECT ?rice WHERE {
  ?rice <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
}

# Step 2: Find Ted McGinley's birth name and his spouse
SELECT ?ted, ?spouse WHERE {
  ?ted <http://dbpedia.org/ontology/birthName> ?birthName .
  ?ted <http://xmlns.com/foaf/0.1/name> ""Ted McGinley"" .
  ?ted <http://dbpedia.org/property/spouse> ?spouse .
}

# Step 3: Combine the results to find the spouse of Georgeanne Marie Rice who is also associated with Ted McGinley
SELECT ?riceSpouse WHERE {
  ?rice <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
  ?ted <http://xmlns.com/foaf/0.1/name> ""Ted McGinley"" .
  ?ted <http://dbpedia.org/property/spouse> ?riceSpouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
356,14,val,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
SELECT ?team WHERE {
  # Step 1: Identify Gary Williams' birthplace that is an English settlement
  <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Ensure the birthplace is categorized as a settlement and located in England
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> ;
              <http://dbpedia.org/property/country> <http://dbpedia.org/resource/England> .

  # Step 2: Find individuals native to this birthplace who are both soccer players and managers
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/SoccerPlayer> <http://dbpedia.org/ontology/SoccerManager>) .

  # Step 3: Retrieve the teams associated with these individuals
  ?person <http://dbpedia.org/property/team> ?team .
}
```",3,7,4,3,1,3,2,20,0,0,46,0,0.0,0
617,35,val,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?grandchildParent WHERE {
  # Step 1: Find the child of Antiochus (son of Antiochus III the Great)
  <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?child .

  # Step 2: Find the child of that child who is royalty
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the parent of this royal grandchild
  ?grandchild <http://dbpedia.org/ontology/parent> ?grandchildParent .
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
232,39,val,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of Dog Soldiers (film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?native WHERE {
  # Step 1: Identify actor of ""Dog Soldiers"" who is also a native of France and a politician/office holder.
  ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
  ?actor <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Politician> <http://dbpedia.org/ontology/OfficeHolder>) .

  # Step 2: Find their residence that is a settlement in Britain.
  ?actor <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 3: Identify the native of this British settlement.
  ?residence <http://dbpedia.org/ontology/native> ?native .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
626,11,val,"Give me the awardee of Order of St. Andrew and commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . },"```sparql
SELECT DISTINCT ?awardee WHERE {
  ?awardee <http://dbpedia.org/ontology/recipient> <http://dbpedia.org/resource/Order_of_St._Andrew>.
  
  OPTIONAL {
    ?conflict <http://dbpedia.org/ontology/commander> ?awardee .
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?conflict <http://dbpedia.org/property/participant> <http://dbpedia.org/resource/Alexander_I_of_Russia> .
  }
}
```",3,4,4,2,2,3,2,20,0,0,9,0,0.0,0
547,22,val,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
# Query for James Burton (Egyptologist)
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
}

UNION

# Query for awardees of Knight Grand Cross of the Order of St Michael and St George
SELECT ?person ?restingPlace WHERE {
  ?person <http://dbpedia.org/property/orderOfStMichaelAndStGeorge> ""Knight Grand Cross"" .
  ?person <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
701,42,val,Give me the parent of Henuttawy (19th dynasty) and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?entity WHERE {
  # Parent of Henuttawy (19th dynasty)
  <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/parent> ?entity .

  # Spouse of the father of Merneptah
  OPTIONAL { 
    ?father <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Merneptah> .
    ?father <http://dbpedia.org/ontology/spouse> ?entity .
  }

  # Parent of the child of Nefertari
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Nefertari> .
    ?child <http://dbpedia.org/ontology/parent> ?entity .
  }
}
```",5,5,6,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
959,18,val,Give me the member of University of Tsukuba and native of Japan and manager of 2013 Júbilo Iwata season.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Tsukuba> .
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> .
  ?person <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
404,20,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Get spouse of Princess Victoria Louise of Prussia
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2 and 3: Find children of Ernest Augustus, Duke of Brunswick who are royalty and their parent (spouse)
  OPTIONAL {
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
    ?spouse <http://dbpedia.org/ontology/spouse> ?child .
  }
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
232,26,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . }","```sparql
SELECT ?actor WHERE {
  ?professional <http://dbpedia.org/ontology/profession> ?role .
  FILTER(?role IN (<http://dbpedia.org/resource/Actor>, <http://dbpedia.org/resource/Narrator>, <http://dbpedia.org/resource/Producer>)).
  
  ?professional <http://dbpedia.org/property/claimToFame> ?fame .
  ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1 .
  ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type2 .
  
  FILTER(?type1 = <http://dbpedia.org/ontology/Film> && ?type2 = <http://dbpedia.org/ontology/MilitaryConflict>).
  
  ?fame <http://dbpedia.org/property/starring> ?actor .
}
```",3,5,4,3,1,3,3,71,0,0,3,0,0.0,0
281,21,val,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?war WHERE {
  # Find wars associated with awardees of Knight Grand Cross of the Order of the Bath
  ?person <http://dbpedia.org/ontology/honoraryTitle> ""Knight Grand Cross of the Order of the Bath"" .
  ?person <http://dbpedia.org/ontology/battle> ?war .

  # Find wars involving the New Zealand Army
  OPTIONAL {
    <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?war .
  }

  # Ensure that the war is a military conflict
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",3,3,4,2,2,3,3,71,0,0,9,0,0.0,0
488,41,val,"Give me the administration of Emperor Go-Yōzei and birth place of the commander in Boshin War and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . },"```sparql
# Part 1: Administration of Emperor Go-Yōzei
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/administration> ?administration .
}

UNION

# Part 2: Birth Place of Commander in Boshin War
SELECT ?birthPlace WHERE {
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Boshin_War> .
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

UNION

# Part 3: Death Place of Father (Politician) of Yūki Hideyasu
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
767,31,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert.",SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
SELECT DISTINCT ?settlement WHERE {
  # Step 1: Identify the writer of ""Where It's At"" by Dustin Lynch
  ?album <http://dbpedia.org/ontology/writer> ?writer .
  FILTER(STR(?album) = ""Dustin_Lynch_album_Where_It's_At"")

  # Step 2: Determine Carl L. Nippert's alma mater
  ?nippert <http://dbpedia.org/property/almaMater> ?almaMater .

  # Step 3: Find settlements in the administration of both entities
  ?settlement <http://dbpedia.org/ontology/administrativeUnit> ?writer ;
              <http://dbpedia.org/ontology/administrativeUnit> ?almaMater .
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
994,34,val,Give me the band member of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find band members of Don Dokken
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/member> ?bandMember .

  # Step 2: For each band member, find associated musical artists
  ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .

  # Step 3: Check if the associated artist has a reference to Watchtower
  ?associatedArtist <http://dbpedia.org/ontology/reference> ?reference .
  FILTER(CONTAINS(LCASE(STR(?reference)), ""watchtower""))
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
251,12,val,Give me the death place of Laura Mancinelli and location of Battle of Marengo and administration of Forza Italia (2013).,SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . },"```sparql
SELECT ?deathPlace ?battleLocation ?administration WHERE {
  # Retrieve death place of Laura Mancinelli
  <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .

  # Retrieve location of the Battle of Marengo
  <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/location> ?battleLocation .

  # Retrieve administration associated with Forza Italia (2013)
  OPTIONAL {
    <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/property/administration> ?administration .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
659,33,val,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in German campaign of 1813.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
SELECT ?commander WHERE {
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?polishHorse rdfs:label ""Polish Horse""@en .
  
  ?campaign <http://dbpedia.org/property/commander> ?commander .
  ?campaign rdfs:label ""German campaign of 1813""@en .

  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?war <http://dbpedia.org/property/commander> ?commander .

  FILTER (?polishHorse = ?commander)
}
```",4,8,5,3,2,3,3,71,0,0,30,0,0.0,0
547,42,val,Give me the resting place of the child of James Burton (property developer) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of Simon Cadell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Resting place of a child of James Burton (property developer)
SELECT ?child ?restingPlace WHERE {
  <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
  OPTIONAL { ?child <http://dbpedia.org/ontology/restingPlace> ?restingPlace . }
}

# Resting place of an awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT ?person ?restingPlace WHERE {
  ?person <http://dbpedia.org/property/honours> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
  OPTIONAL { ?person <http://dbpedia.org/ontology/restingPlace> ?restingPlace . }
}

# Resting place of Simon Cadell
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
9,29,val,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of Royal Medal and figure known as QUB.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?almaMater WHERE {
  # Alma mater for John Alderdice, Baron Alderdice
  <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMater1 .

  # Awardee of Royal Medal with alma mater as QUB
  ?awardee <http://dbpedia.org/property:award> <http://dbpedia.org/resource/Royal_Medal> .
  ?awardee <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Queen's_University_Belfast> .

  # Ensure the alma mater is consistent
  FILTER(?almaMater1 = ?almaMater)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
9,30,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast.","SELECT ?result WHERE { <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?person ?almaMater WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> 
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> 
  }
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  
} UNION

SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?nickname .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,20,val,"Give me the person decedent at French Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
SELECT ?person WHERE {
  # Find wars commanded by Frédéric-Georges Herr that are military conflicts and events
  ?war <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Frédéric-Georges_Herr> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?event .
  
  # Find persons who are commanders in those wars
  ?person <http://dbpedia.org/ontology/commander> ?war .

  # Ensure the person is a decedent at French Algeria
  ?decedent <http://dbpedia.org/property/deceasedPlace> <http://dbpedia.org/resource/French_Algeria> .
  FILTER (?person = ?decedent)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
9,18,val,"Give me the figure known as QUB and alma mater of John Alderdice, Baron Alderdice and alma mater of Allen Hill (scientist).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?qub WHERE {
  <http://dbpedia.org/resource/Queen%27s_University_Belfast> ?p1 ?qub .
  ?qub <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .

  OPTIONAL { 
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/property/almaMater> ?qub .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/property/almaMater> ?qub .
  }

  FILTER (BOUND(?qub))
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
378,29,val,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in Peninsular War and war of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
# Query 1: Claim to Fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?fame WHERE {
  <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/claimToFame> ?fame .
}

# Query 2: Wars of Commanders in Peninsular War
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?war)
}

# Query 3: Wars of Carl Pontus Gahn
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?war)
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
10,15,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(?profession = <http://dbpedia.org/ontology/Musician>)
  OPTIONAL { 
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
  }
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
378,39,val,"Give me the war of Joaquín Blake and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?war ?claimToFame WHERE {
  # Step 1: Find wars associated with Joaquín Blake
  <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?battle .
  
  # Step 2: Identify commanders in those battles
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  
  # Step 3: Check if the commander is Thomas Trigge
  FILTER(?commander = <http://dbpedia.org/resource/Thomas_Trigge>)
  
  # Step 4: Find claim to fame for Thomas Trigge as a commander in this battle
  ?commander <http://dbpedia.org/ontology/battle> ?war .
  ?commander <http://dbpedia.org/property/claimToFame> ?claimToFame .
  
  # Step 5: Ensure the war is also a military conflict, societal event, and an event
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
994,18,val,Give me the associated musical artist of Red Tide (band) and band member of Don Dokken and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
# Query for associated musical artist of Red Tide (band)
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

UNION

# Query for band member of Don Dokken and associated musical artist of S.A. Slayer
SELECT ?member WHERE {
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Don_Dokken> .
  ?member <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/S._A._Slayer> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
783,12,val,"Give me the associated musical artist of Appietus and band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Confirm Priscilla Opoku-Kwarteng as an artist and a musical artist
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Priscilla_Opoku-Kwarteng> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (
    (?type = <http://dbpedia.org/ontology/Artist> || 
     ?type = <http://dbpedia.org/ontology/MusicalArtist>)
  )
}

# Step 2: Find band memberships of Priscilla Opoku-Kwarteng
SELECT ?band WHERE {
  ?person <http://dbpedia.org/property/birthPlace> ?birth .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}

# Step 3: Find associated musical artists of Appietus
SELECT ?associatedArtist WHERE {
  <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
485,19,val,"Give me the birth place of Thomas Warner (poet) and entity in the region, that is a country, of Western European Time and entity in Nottinghamshire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?birthPlace ?regionCountry ?nottinghamshireEntity WHERE {
  # Step 1: Find the birthplace of Thomas Warner (poet)
  <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Ensure the birthplace is a country
  OPTIONAL { 
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  }
  
  # Step 2: Find regions related to Western European Time
  ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Western_European_Time> .
  ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
  
  # Ensure the region is a country
  OPTIONAL {
    ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
    BIND(?region AS ?regionCountry)
  }
  
  # Step 3: Find entities in Nottinghamshire
  ?nottinghamshireEntity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nottinghamshire> .
}
```",4,5,5,2,3,2,3,28,1,102,0,0.009708737864077669,1.0,0.01923076923076923
427,37,val,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of Romano Prodi.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
# Query to find the political party of the father of an alumnus from MIT
SELECT DISTINCT ?fatherParty WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?alumnus <http://dbpedia.org/property/father> ?father .
  ?father <http://dbpedia.org/ontology/memberOf> ?party .
  ?party <http://www.w3.org/2000/01/rdf-schema#label> ?fatherParty .
}

UNION

# Query to find the political party of Romano Prodi
SELECT DISTINCT ?prodiParty WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/memberOf> ?party .
  ?party <http://www.w3.org/2000/01/rdf-schema#label> ?prodiParty .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
378,24,val,"Give me the war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
# Query for the war of the commander in the Peninsular War
SELECT DISTINCT ?commander ?war WHERE {
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?war)
}

UNION

# Query for the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?claimToFame WHERE {
  <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,11,val,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of Mieszko II Lambert.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . }","```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find Boleslaus I's child who is also Mieszko II Lambert's parent
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> .
  ?parent <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Mieszko_II_Lambert> .

  # Step 2: Find the grandchildren of Boleslaus I who are royalty
  ?parent <http://dbpedia.org/ontology/child> ?grandchild .
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
659,22,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in German campaign of 1813.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?militaryForce WHERE {
  ?event <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?event rdfs:label ""German campaign of 1813""@en .
  ?event <http://dbpedia.org/property/militaryForce> ?militaryForce .
}
```",3,6,4,2,2,3,3,71,0,0,7,0,0.0,0
281,37,val,"Give me the war of New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?war WHERE {
  # Step 1: Find the leader of the 1962 NSW state election who is a politician
  <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/ontology/leader> ?leader .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 2: Determine the birthplace of this leader, ensuring it's a country
  ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 3: Find any entity from this birthplace involved in military conflicts with the New Zealand Army
  ?entity <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?conflict <http://dbpedia.org/ontology/participant> ?entity ;
            <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/New_Zealand_Army> .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  BIND(?conflict AS ?war)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
378,37,val,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/claimToFame> ?fame .
  ?commander <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?commander <http://dbpedia.org/ontology/name> ""Louis des Balbes de Berton de Crillon"" .
  FILTER EXISTS { ?result <http://dbpedia.org/property/partOf> <http://dbpedia.org/resource/Peninsular_War> }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
92,20,val,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of Nevermore.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . }","```sparql
SELECT ?associatedArtist WHERE {
  ?sheppard <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
  ?sheppard <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?sheppard <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Nevermore_(band)> .
  ?sheppard <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
54,41,val,Give me the parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find child of Narapati I of Ava
  ?narapatiChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> .
  
  # Step 2: Find father of Soe Min Wimala Dewi and his child
  ?soeMinFather <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> .
  ?soeMinChild <http://dbpedia.org/ontology/father> ?soeMinFather .

  # Step 3: Find predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?ameittaPredecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .

  # Step 4: Ensure the child from step 1 is also a child of the person in step 2 and matches the predecessor
  ?narapatiChild = ?soeMinChild .
  ?narapatiChild = ?ameittaPredecessor .

  # Step 5: Find the parent of this individual
  ?parent <http://dbpedia.org/ontology/father> ?narapatiChild ;
          <http://dbpedia.org/ontology/mother> ?narapatiChild .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
251,14,val,"Give me the location of Battle of Marengo and administration of the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
# Query 1: Location of the Battle of Marengo
SELECT ?location WHERE {
  <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/location> ?location .
}

# Query 2: Administration of the ruling party in Sicily
SELECT DISTINCT ?party ?administration WHERE {
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> ;
         <http://dbpedia.org/ontology/organization> ?organization .
  ?organization <http://www.w3.org/2000/01/rdf-schema#label> ""Sicily""@en .
  ?party <http://dbpedia.org/property/administration> ?administration .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
712,13,val,"Give me the capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT ?capital WHERE {
  <http://dbpedia.org/resource/Vyoshenskaya_Uprising> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?types .
  FILTER (?types = <http://dbpedia.org/ontology/Organisation> || ?types = <http://dbpedia.org/ontology/MilitaryUnit>) .
  ?militaryForce <http://dbpedia.org/property/country> ?country .
  ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital .
}
```",3,5,4,3,1,3,2,20,0,0,3,0,0.0,0
9,31,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
# Find alma mater of Allen Hill (scientist)
SELECT ?almaMaterHill WHERE {
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMaterHill .
}

UNION

# Find the mayor who is a politician in an organization located in Belfast and their alma mater
SELECT ?almaMaterMayor WHERE {
  ?organization <http://www.w3.org/2000/01/rdf-schema#label> ?name ;
                 <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Belfast"" .
  
  ?mayor <http://dbpedia.org/ontology/jobTitle> ?job ;
         <http://dbpedia.org/ontology/worksFor> ?organization ;
         <http://dbpedia.org/ontology/almaMater> ?almaMaterMayor .
  ?job <http://www.w3.org/2000/01/rdf-schema#label> ""mayor"" .
  
  ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,33,val,"Give me the person decedent at French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT DISTINCT ?person WHERE {
  # Step 1: Find commanders in the Battle of Verdun
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  
  # Ensure the battle is the Battle of Verdun
  FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Verdun""))

  # Step 2: Find wars (military conflicts that are events) these commanders were part of
  ?commander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Step 3: Find persons who were decedents at French Algeria and commanders in these wars
  ?person <http://dbpedia.org/ontology/decedentAtLocation> <http://dbpedia.org/resource/French_Algeria> .
  ?person <http://dbpedia.org/ontology/commander> ?war .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
427,36,val,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Romano Prodi"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/property/party> <http://dbpedia.org/resource/Partito_Popolare_Italiano> .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
778,14,val,"Give me the author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v0 <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?author WHERE {
  # Step 1: Identify authors of Pushd and Popd
  ?pushd <http://dbpedia.org/ontology/creator> ?author .
  ?popd <http://dbpedia.org/ontology/creator> ?author .

  # Ensure these are the same author
  FILTER(?pushd = <http://dbpedia.org/resource/Pushd> && ?popd = <http://dbpedia.org/resource/Popd>)

  # Step 2: Find works by this author that are software
  ?software <http://dbpedia.org/ontology/creator> ?author .
  ?software <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software> .

  # Step 3: Find the author of this software
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
959,29,val,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of University of Tsukuba and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
SELECT ?native WHERE {
  # Step 1: Find Yōichi Masuzoe's residence that is a country
  <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 2: Find natives of that country
  ?native <http://dbpedia.org/ontology/birthPlace> ?residence .
  
  # Step 3: Check if they are a member of University of Tsukuba and manager of 2013 Júbilo Iwata season
  ?native <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> .
  ?native <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/2013_J%C3%BAbilo_Iwata_season> .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
820,12,val,Give me the professional in  and child of the parent of Jason Schwartzman.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?professional WHERE {
  ?parent <http://dbpedia.org/ontology/spouse> ?spouse .
  ?parent <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?child <http://dbpedia.org/ontology/profession> ?professional .
  FILTER(?child = <http://dbpedia.org/resource/Jason_Schwartzman>)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
801,18,val,Give me the professional in  and producer of Westside Story (song) and associated musical artist of Chris Taylor (music producer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?producer WHERE {
  # Step 1: Identify the producer of ""Westside Story (song)""
  <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?producer .
  
  # Step 2: Check if this producer is associated as a musical artist with Chris Taylor
  ?producer <http://dbpedia.org/ontology/musicArtist> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
184,20,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find children of Archduke Joseph Karl
  <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?child .
  
  # Step 2: Find grandchildren (children of the child)
  ?child <http://dbpedia.org/ontology/child> ?grandchild .

  # Step 3: Check if this grandchild is a parent of Géza von Habsburg
  ?grandchild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,28,val,Give me the child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  ?father <http://dbpedia.org/ontology/birthName> ""Soe Min Wimala Dewi"" .
  ?father <http://dbpedia.org/ontology/father> ?person .
  
  ?person <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
  ?person <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .

  ?person <http://dbpedia.org/ontology/child> ?child .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
161,21,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
SELECT ?militaryForce WHERE {
  ?campaign <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> .
  ?campaign <http://dbpedia.org/property/force> ?militaryForce .
  ?campaign <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?campaign <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?campaign <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  FILTER(STRSTARTS(STR(?campaign), ""http://dbpedia.org/resource/Biscay_Campaign""))
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
435,13,val,"Give me the region of Greenwich Mean Time and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
SELECT ?region WHERE {
  # Find the region associated with Greenwich Mean Time
  <http://dbpedia.org/resource/Greenwich_Mean_Time> <http://dbpedia.org/ontology/timeZone> ?gmtRegion .
  
  # Identify Iceland as a settlement and town, known in Icelandic as ""Land of fire and ice""
  <http://dbpedia.org/resource/Iceland> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?islandType .
  FILTER (?islandType IN (<http://dbpedia.org/ontology/Settlement>, <http://dbpedia.org/ontology/Town>))
  
  # Find the region associated with Iceland
  <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/ontology/partOf> ?icelandRegion .
  
  # Match regions of GMT and Iceland
  FILTER (?gmtRegion = ?icelandRegion)
}
```",3,6,4,2,2,2,3,28,0,0,1,0,0.0,0
54,40,val,Give me the child of the father of the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Step 1: Find Thinkhaya of Pagan's child
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Confirm Thinkhaya is the father (implicitly done by finding his child)

# Step 3: Find the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
  ?person <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
}

# Step 4: Find the child of this person
SELECT ?finalChild WHERE {
  ?person <http://dbpedia.org/ontology/child> ?finalChild .
}
```

Note: The above SPARQL queries are broken down into steps for clarity. In practice, you would combine these to form a single query that retrieves the final result directly.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,37,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in Biscay Campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Find predecessor of Indalecio Prieto
  ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto> .

  # Step 2: Identify the force that is both a societal event and a military conflict
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 3: Ensure this force is associated with the predecessor
  ?predecessor <http://dbpedia.org/ontology/commander> ?force .
  
  # Additional condition for Biscay Campaign involvement
  ?force <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Biscay_Campaign> .

  # Step 4: Find the military force associated with this societal event/military conflict
  ?force <http://dbpedia.org/property/militaryForce> ?militaryForce .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
421,14,val,Give me the native of the birthplace of Samir Bekrić and band member of Senidah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
SELECT ?native WHERE {
  # Step 1: Find Samir Bekrić's birthplace
  <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 2: Find natives of that birthplace
  ?native <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Step 3: Check if the native is a band member of Senidah
  ?native <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Senidah> .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
9,25,val,Give me the figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/ontology/nickname> ?nickname .
  OPTIONAL { 
    ?nickname <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Allen_Hill_(scientist)> .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,43,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
# Step 1: Find Prince George William of Hanover's royal parent
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/father> ?parent .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .
}

# Step 2: Find the child of this parent who is royalty
SELECT ?child WHERE {
  ?parent :<parent_id_from_step_1> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .
}

# Step 3: Find the spouse of Princess Victoria Louise of Prussia
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Final step: Connect these entities to find the required relationship
SELECT ?spouse WHERE {
  # Assuming we have identified the child from Step 2 as a variable :<child_id_from_step_2>
  ?parent :<parent_id_from_step_1> <http://dbpedia.org/ontology/child> :<child_id_from_step_2> .
  :<child_id_from_step_2> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```

Note: The above SPARQL query is a conceptual breakdown. In practice, you would need to execute each step sequentially and use the results from one step as input for the next.",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
959,26,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?native WHERE {
  # Step 1: Identify the leader of the election
  <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/ontology/leader> ?leader .
  
  # Ensure the leader is a politician
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 2: Find the residence of this leader that is a country
  ?leader <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 3: Find who is native to this country
  ?native <http://dbpedia.org/ontology/nativePlace> ?residence .
}
```",3,5,4,3,1,3,3,71,0,0,8419,0,0.0,0
391,42,val,"Give me the actor of The Departed and native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find actors of ""The Departed""
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 2: Filter these actors by native place known as ""Hub City""
SELECT DISTINCT ?actor WHERE {
  ?actor <http://dbpedia.org/ontology/nationality> ?nationality .
  ?nationality <http://dbpedia.org/ontology/country> ?country .
  ?country <http://dbpedia.org/property/commonName> ""Hub City"" .
}

# Step 3: Find the movie involving Roz Ryan that is a movie, work, and television show
SELECT ?movie WHERE {
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
}

# Step 4: Find the actor common to both ""The Departed"" and the movie from step 3
SELECT DISTINCT ?actor WHERE {
  # Actor of ""The Departed""
  <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?actor .
  
  # Native of ""Hub City""
  ?actor <http://dbpedia.org/ontology/nationality> ?nationality .
  ?nationality <http://dbpedia.org/ontology/country> ?country .
  ?country <http://dbpedia.org/property/commonName> ""Hub City"" .

  # Actor in the movie involving Roz Ryan
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
378,22,val,Give me the war of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query 1: Wars involving Carl Pontus Gahn
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Query 2: Claim to fame of commanders in the Great Siege of Gibraltar
SELECT DISTINCT ?commander ?claimToFame WHERE {
  <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
  OPTIONAL { ?commander <http://dbpedia.org/property/claimToFame> ?claimToFame . }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
232,37,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of London.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
SELECT ?actor WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/London> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> ;
          <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Narrator> ;
          <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Producer> .
  ?person <http://dbpedia.org/ontology/film> ?film .
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> ;
        <http://dbpedia.org/ontology/militaryConflict> ?conflict .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?film <http://dbpedia.org/ontology/starring> ?actor .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
959,28,val,"Give me the native of Japan and manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .
  ?person <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> .
  
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> ;
             <http://dbpedia.org/ontology/University> ;
             <http://dbpedia.org/ontology/EducationalOrganization> .
  ?almaMater <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .
  
  ?person <http://dbpedia.org/ontology/alumniOf> ?almaMater .
  
  ?eijiŌtsuka <http://dbpedia.org/ontology/alumniOf> ?almaMater ;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Eiji_Ōtsuka> .
}
```",4,8,5,2,3,3,3,71,0,0,1,0,0.0,0
232,40,val,Give me the actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee and native of London.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
# Step 1: Find Jon Pertwee's birth name
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Find a person born with that birth name and native of London
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/London> .
}

# Step 3: Find the child of this person
SELECT ?child WHERE {
  ?person <http://dbpedia.org/ontology/child> ?child .
}

# Step 4: Find actors of ""Dog Soldiers"" (film)
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?actor .
}

# Final step: Combine results to find the actor who is also a child
SELECT DISTINCT ?actor WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/London> .
  ?person <http://dbpedia.org/ontology/child> ?child .
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .
  FILTER(?child = ?actor)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
77,11,val,Give me the force of Alexander I of Russia and war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
SELECT ?force, ?war WHERE {
  # Query for Alexander I of Russia's military force
  OPTIONAL {
    <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/memberOf> ?force .
  }
  
  # Query for the war associated with an awardee of the Golden Weapon for Bravery
  OPTIONAL {
    ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> .
    ?awardee <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
}
```",3,3,4,2,2,3,2,20,0,0,11,0,0.0,0
959,33,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and member of University of Tsukuba.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?native WHERE {
  ?leader <http://dbpedia.org/ontology/election> <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> .
  ?leader a <http://dbpedia.org/ontology/Politician> .
  ?leader <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> .
  ?leader <http://dbpedia.org/ontology/residence> ?residence .
  ?residence a <http://dbpedia.org/ontology/Country> .
  ?native <http://dbpedia.org/ontology/nationality> ?residence .
}
```",4,6,5,3,2,3,3,71,0,0,84,0,0.0,0
16,29,val,Give me the professional in the profession of Satomi Ishihara and person born as Georgeanne Marie Rice and spouse of Ted McGinley.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
# Step 1: Find Satomi Ishihara's profession
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?profession .
}

# Step 2: Identify the person born as Georgeanne Marie Rice
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
}

# Step 3: Find Ted McGinley's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Final query to find the common individual
SELECT DISTINCT ?result WHERE {
  # Satomi Ishihara's profession
  ?person1 <http://dbpedia.org/ontology/profession> ?profession .
  
  # Person born as Georgeanne Marie Rice
  ?person2 <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
  
  # Spouse of Ted McGinley
  ?person3 <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Ensure all conditions are met by the same individual
  FILTER (?person1 = ?person2 && ?person2 = ?person3)
  
  BIND(?person1 AS ?result)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
427,44,val,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
# Query 1: Party of Lamberto Andreotti's Father
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/memberOf> ?party .
}

# Query 2: Party of Romano Antonio Prodi
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Romano_Antonio_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1, ?type2 .
  FILTER (?type1 = <http://dbpedia.org/ontology/OfficeHolder> && ?type2 = <http://dbpedia.org/ontology/Politician>)
  <http://dbpedia.org/resource/Romano_Antonio_Prodi> <http://dbpedia.org/ontology/memberOf> ?party .
  FILTER EXISTS { ?party <http://www.w3.org/2000/01/rdf-schema#label> ""Partito Popolare Italiano""@en }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
666,13,val,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
SELECT ?player WHERE {
  # Step 1: Identify the soccer club or sports team season managed by Leonid Slutsky
  ?team <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Lenid_Slutskiy> .
  
  # Ensure it's a soccer club and a sports team season
  ?team <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> ;
        <http://dbpedia.org/ontology/sportsTeamSeason> ?season .
  
  # Step 2: Find the manager of this team who is a sports manager
  ?team <http://dbpedia.org/ontology/manager> ?manager .
  ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .

  # Step 3: Identify players in this manager's team
  ?team <http://dbpedia.org/property/player> ?player .
}
```",3,6,4,3,1,3,2,20,0,0,28,0,0.0,0
801,43,val,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of Chris Taylor (music producer).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
SELECT DISTINCT ?work ?producer WHERE {
  # Step 1: Identify Chris Taylor (music producer)
  ?chris a <http://dbpedia.org/ontology/MusicalArtist> ;
         <http://dbpedia.org/property/associatedMusicalArtists> ?rapper .

  # Step 2: Ensure the associated artist is a rapper
  ?rapper a <http://dbpedia.org/ontology/Rapper> .

  # Step 3: Find works that are both musical works and songs
  ?rapper <http://dbpedia.org/property/professionalIn> ?work .
  ?work a <http://dbpedia.org/ontology/MusicalWork> ;
        a <http://dbpedia.org/ontology/Song> .

  # Step 4: Identify the producer of these works
  ?work <http://dbpedia.org/ontology/producer> ?producer .
}
```",5,9,6,3,3,3,3,71,0,0,2,0,0.0,0
767,19,val,"Give me the entity in the administration, that is a settlement, of Green and alma mater of Carl L. Nippert.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT DISTINCT ?entity WHERE {
  # Find entities in the administration of Green
  { 
    ?green <http://dbpedia.org/ontology/administrativeUnit> ?entity .
    ?green rdfs:label ""Green""@en .
  }
  
  UNION
  
  # Find alma maters of Carl L. Nippert
  {
    <http://dbpedia.org/resource/C._L._Nippert> <http://dbpedia.org/ontology/almaMater> ?entity .
  }

  # Ensure the entity is a settlement
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
427,35,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/2000/01/rdf-schema#label> ""Romano Antonio Prodi""@en .
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1, ?type2 .
  FILTER (?type1 = <http://dbpedia.org/ontology/OfficeHolder> && ?type2 = <http://dbpedia.org/ontology/Politician>) .
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?party .
  OPTIONAL { ?party <http://www.w3.org/2000/01/rdf-schema#label> ""Italian People's Party (1994)""@en }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
617,26,val,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find Antiochus and his successor
  <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?successor .
  
  # Step 2: Ensure the successor is royalty
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find children of this royal successor
  ?successor <http://dbpedia.org/ontology/child> ?child .
  
  # Step 4: Determine the spouses of these children
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,4,4,3,1,3,3,71,5,0,0,1.0,1.0,1.0
9,19,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMaterAllenHill ?almaMaterMayor WHERE {
  # Alma mater of Allen Hill (scientist)
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMaterAllenHill .

  # Mayor of Northern Ireland Forum who is a politician
  ?mayor <http://dbpedia.org/ontology/politicianForOrganization> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Alma mater of the mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMaterMayor .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
281,24,val,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Query for Bob Heffron's birthplace that is a country
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}

UNION

# Query for wars of the New Zealand Army
SELECT ?war WHERE {
  <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
994,43,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and associated musical artist of S.A. Slayer and band member of Don Dokken.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
# Step 1: Find Fredrik Thordendal's band that is an organization
SELECT ?fredrikBand WHERE {
  <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/memberOf> ?band .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}

# Step 2: Find a band member of Fredrik's band that is also a band, group, and organization
SELECT ?memberBand WHERE {
  ?fredrikBand <http://dbpedia.org/ontology/member> ?memberBand .
  ?memberBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>, 
               <http://dbpedia.org/ontology/MusicalGroup>, 
               <http://dbpedia.org/ontology/Organisation> .
}

# Step 3: Find the associated musical artist of this band member
SELECT ?associatedArtist WHERE {
  ?memberBand <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

UNION

# Step 4: Find the associated musical artist of S.A. Slayer
SELECT ?sASlaveArtist WHERE {
  <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?sASlaveArtist .
}

UNION

# Step 5: Find the band member of Don Dokken
SELECT ?donDokkenMember WHERE {
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/memberOf> ?band .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?band <http://dbpedia.org/ontology/member> ?donDokkenMember .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
701,32,val,Give me the parent of the child of Nefertari and parent of the child of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT DISTINCT ?commonParent WHERE {
  # Find children of Nefertari and their parents
  ?childNefertari <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nefertari> .
  ?childNefertari <http://dbpedia.org/ontology/parent> ?parentNefertari .

  # Find children of Ramesses II and their parents
  ?childRamessesII <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ramesses_II> .
  ?childRamessesII <http://dbpedia.org/ontology/parent> ?parentRamessesII .

  # Find a common parent between the two sets
  FILTER (?parentNefertari = ?commonParent)
  FILTER (?parentRamessesII = ?commonParent)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
55,18,val,"Give me the band of the reference, that is a band, to Newsted and band member of Metallica.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Jason_Newsted> <http://dbpedia.org/ontology/memberOf> ?band .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
}
```",3,4,4,2,2,2,3,28,0,0,3,0,0.0,0
92,25,val,Give me the band of the person born as Joseph Michael Furney and associated musical artist of Jim Sheppard.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
SELECT ?band WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/band> ?band .
  }
  UNION
  {
    <http://dbpedia.org/resource/Joseph_Michael_Furney> <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Jim_Sheppard_(musician)> ;
      <http://dbpedia.org/ontology/band> ?band .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,36,val,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT DISTINCT ?result WHERE {
  
  # First Part: War of a military unit profession in New Zealand Army
  {
    ?person <http://dbpedia.org/ontology/profession> ?unit .
    ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?person <http://dbpedia.org/ontology/politicalPartyMember> ?party .
    ?person <http://dbpedia.org/ontology/officeHolder> ?office .
    ?unit <http://dbpedia.org/property/army> <http://dbpedia.org/resource/New_Zealand_Army> .
    ?unit <http://dbpedia.org/ontology/battle> ?result .
  }
  
  # Second Part: War of Beauchamp Seymour, 1st Baron Alcester
  {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result .
  }

}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
391,39,val,"Give me the actor of The Departed and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Find actors of ""The Departed""
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?actor .
}

UNION

# Find a movie that is also a work and a television show, then its actors
SELECT ?actor WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
}
```",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
767,41,val,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of Green and reference to .","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
SELECT ?almaMater ?settlement WHERE {
  # Find the administration associated with George K. Nash
  ?administration <http://dbpedia.org/ontology/administration> <http://dbpedia.org/resource/G._W._Nash> .
  
  # Get the alma mater of this administration
  ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Find entities in the administration that are settlements
  ?entity <http://dbpedia.org/ontology/entityInAdministration> ?administration .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Ensure there is a reference to ""Green""
  OPTIONAL { ?entity <http://dbpedia.org/property/referenceTo> <http://dbpedia.org/resource/Green> . }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
659,44,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in German campaign of 1813.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Find the war associated with Rutger Jan Schimmelpenninck
  ?war <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  
  # Ensure it is an event and a military conflict
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
  
  # Step 2: Find the military force involved in that war
  ?war <http://dbpedia.org/property/militaryForce> ?militaryForce .

  # Step 3: Identify the German campaign of 1813 and its commander
  ?campaign <http://dbpedia.org/resource/German_campaign_of_1813> ;
            <http://dbpedia.org/ontology/commander> ?commander .
  
  # Ensure it is an event and a military conflict
  ?campaign <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
  
  # Find the military force of the 1st Light Cavalry Lancers Regiment
  ?campaign <http://dbpedia.org/property/commander> ?commander ;
            <http://dbpedia.org/property/militaryForce> ?militaryForce2 .

  FILTER(?militaryForce = ?militaryForce2)
}
```",5,10,6,2,3,3,3,71,0,0,7,0,0.0,0
528,32,val,Give me the war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query 1: Wars involving the military force in Battle of Pisagua
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?militaryForce <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Query 2: Wars commanded by the commander in Battle of La Rinconada de Ate
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",4,4,5,2,2,3,3,71,0,0,8,0,0.0,0
294,12,val,"Give me the entity in Nashville, Tennessee and resting place of Luke Lea (American politician, born 1879) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> .
  ?entity <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> .
  ?entity <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Edwin_A._Keeble> .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
48,15,val,"Give me the band of Murda Mook and band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Find the band of Murda Mook
SELECT ?bandMook WHERE {
  <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/band> ?bandMook .
}

UNION

# Find the writer of a work by Shellback and then find the band associated with that writer
SELECT ?bandWriter WHERE {
  ?work <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Shellback_(record_producer)> .
  ?work <http://purl.org/dc/terms/creator> ?writer .
  ?writer <http://dbpedia.org/ontology/band> ?bandWriter .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
547,40,val,Give me the resting place of Simon Cadell and resting place of Alan Cunningham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query 1: Resting place of Simon Cadell
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
}

UNION

# Query 2: Resting place of Alan Cunningham
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Alan_Cunningham_(general)> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
}

UNION

# Query 3: Resting place of the child's child of William Haliburton
SELECT ?greatGrandchildRestingPlace WHERE {
  # Find the child of William Haliburton
  <http://dbpedia.org/resource/William_Haliburton> <http://dbpedia.org/ontology/child> ?child .
  
  # Find the child of that child (i.e., great-grandchild)
  ?child <http://dbpedia.org/ontology/child> ?greatGrandchild .

  # Get the resting place of the great-grandchild
  ?greatGrandchild <http://dbpedia.org/ontology/restingPlace> ?greatGrandchildRestingPlace .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,40,val,Give me the band member of Don Dokken and associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find band members of Don Dokken
SELECT ?bandMember WHERE {
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/member> ?bandMember .
}

# Step 2: Find associated musical artists of Red Tide (band)
SELECT ?associatedArtist WHERE {
  <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

# Step 3: Determine the associated musical artist of the result from step 2
SELECT ?finalAssociatedArtist WHERE {
  ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalAssociatedArtist .
  FILTER(?artist IN {?associatedArtist})
}

# Step 4: Find reference to Watchtower related to the result from step 3
SELECT ?watchtowerReference WHERE {
  ?finalArtist <http://dbpedia.org/ontology/reference> ?watchtowerReference .
  FILTER(?finalArtist IN {?finalAssociatedArtist})
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,15,val,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb and team of Alessandro Mangiarratti.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?team ?nickname WHERE {
  ?team <http://dbpedia.org/ontology/player> <http://dbpedia.org/resource/Armando_Heeb> .
  ?team <http://dbpedia.org/ontology/teamMember> <http://dbpedia.org/resource/Alessandro_Mangiarratti> .
  ?team <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?team <http://dbpedia.org/ontology/sportsTeam> ?sportsTeam .
  ?sportsTeam <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://dbpedia.org/ontology/SoccerClub> .
  ?team <http://dbpedia.org/ontology/nickname> ?nickname .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
492,21,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at Algiers.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
SELECT ?person WHERE {
  { 
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/decedent> ?person .
  }
  UNION
  {
    <http://dbpedia.org/resource/Algiers> <http://dbpedia.org/ontology/decedent> ?person .
  }
}
```",3,3,4,2,2,3,3,71,0,0,16,0,0.0,0
994,21,val,Give me the band member of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find band members of Don Dokken
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/member> ?bandMember .

  # Step 2 and 3: For each member, find associated artists and check if they are linked to Watchtower
  ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  ?artist <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Watchtower_(band)> .

}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
44,7,val,Give me the band member of the band of John Pettibone and band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . },"```sparql
SELECT DISTINCT ?commonMember WHERE {
  # Find bands associated with John Pettibone and their members
  ?band1 <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/John_Pettibone> .
  ?band1 <http://dbpedia.org/ontology/member> ?member1 .

  # Find bands associated with Sledgeback and their members
  ?band2 <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Sledgeback> .
  ?band2 <http://dbpedia.org/ontology/member> ?member2 .

  # Look for common band members between the two sets
  FILTER (?member1 = ?commonMember)
  FILTER (?member2 = ?commonMember)
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
645,11,val,"Give me the alma mater of Sylvia Pankhurst and entity in the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?almaMater ?country WHERE {
  # Query for alma mater of Sylvia Pankhurst
  <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Query for residence that is a country of James Wilkes Maurice
  <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  BIND(?residence AS ?country)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
712,12,val,Give me the capital of South Russia (1919–1920) and resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query to find the capital of South Russia (1919–1920)
SELECT ?capital WHERE {
  <http://dbpedia.org/resource/South_Russia_(1919%E2%80%931920)> <http://dbpedia.org/ontology/administrativeCapital> ?capital .
}

UNION

# Query to find the resting place of awardees of Hero of the Soviet Union
SELECT DISTINCT ?restingPlace WHERE {
  ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> .
  OPTIONAL { ?person <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
485,17,val,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in Nottinghamshire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
SELECT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> .
  ?person <http://purl.org/dc/terms/relation> <http://dbpedia.org/resource/Eric_Gregory_Award> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet> .
  ?person <http://dbpedia.org/property/placeOfBirth> ?birthPlace .
  ?place <http://www.w3.org/2000/01/rdf-schema#label> ""Nottinghamshire""@en .
  ?person <http://dbpedia.org/ontology/placeOfBirth> ?place .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
488,44,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of Enomoto Takeaki and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Death place of the father (politician) of Yūki Hideyasu
  {
    <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?father <http://dbpedia.org/ontology/deathPlace> ?result .
  }
  
  UNION
  
  # Birth place of Enomoto Takeaki
  {
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result .
  }

  UNION

  # Administration of the father of Emperor Go-Mizunoo
  {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/administration> ?result .
  }
}
```",5,6,6,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
303,18,val,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in Panama.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . }","```sparql
SELECT ?party WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Panama> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person rdfs:label ""Arnulfo Arias Madrid""@en .
  ?person <http://dbpedia.org/ontology/politicalParty> ?party .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
10,17,val,"Give me the professional in  and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?professional, ?bandMember WHERE {
  <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://dbpedia.org/ontology/birthName> ""Luke Francis Vibert"" .
  OPTIONAL { <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://dbpedia.org/ontology/profession> ?professional . }
  OPTIONAL { <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://dbpedia.org/ontology/memberOfBand> ?bandMember . }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
92,22,val,Give me the band member of Nevermore and band of the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
# Query 1: Find a band member of Nevermore
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Nevermore_(band)> <http://dbpedia.org/ontology/member> ?member .
}

UNION

# Query 2: Find the band associated with Joseph Michael Furney
SELECT ?band WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael Furney""@en .
  ?person <http://dbpedia.org/ontology/band> ?band .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
251,18,val,Give me the administration of Forza Italia (2013) and death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
# Query 1: Administration of Forza Italia (2013)
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/member> ?member .
  ?member <http://dbpedia.org/property/administration> ?administration .
}

# Query 2: Death place of the author of The Twelve Abbots of Challant
SELECT ?deathPlace WHERE {
  ?author <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> .
  ?author <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,11,val,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . }","```sparql
# Step 1: Find the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach
SELECT ?father WHERE {
  <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/father> ?father .
}

# Step 2: Find the children of Grand Duchess Maria Pavlovna of Russia (1786–1859)
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Maria_Pavlovna_of_Russia_(1786-1859)> <http://dbpedia.org/ontology/child> ?child .
}

# Step 3: Filter these children to find those who are royalty
SELECT ?royalChild WHERE {
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .
  FILTER(?child IN (?child))
}

# Step 4: Find the child of these royal children and check if it matches William Ernest's father
SELECT ?result WHERE {
  ?royalChild <http://dbpedia.org/ontology/child> ?result .
  FILTER(?result = ?father)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
184,43,val,"Give me the parent of Géza von Habsburg and parent of Archduchess Ilona of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
# Step 1: Find the parent of Géza von Habsburg
SELECT ?parentGéza WHERE {
  <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/birthParent> ?parentGéza .
}

UNION

# Step 2: Find the parent of Archduchess Ilona of Austria
SELECT ?parentIlona WHERE {
  <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/birthParent> ?parentIlona .
}

UNION

# Step 3: Find the child of the child of the parent of Archduke Ladislaus Philipp of Austria that is royalty
SELECT ?grandchild WHERE {
  # Parent of Archduke Ladislaus Philipp of Austria
  <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/birthParent> ?parentLadislaus .
  
  # Child of the parent (i.e., sibling or child)
  ?siblingOrChild <http://dbpedia.org/ontology/birthParent> ?parentLadislaus .

  # Grandchild of the parent
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?siblingOrChild .
  
  # Ensure grandchild is royalty
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
488,23,val,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?birthPlace WHERE {
  ?war <http://dbpedia.org/ontology/battleParticipant> <http://dbpedia.org/resource/Saitō_Hajime> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,6,4,3,1,3,3,71,0,0,17,0,0.0,0
492,39,val,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT ?commander WHERE {
  # Find commanders in Franco-Hova Wars
  ?war <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(STRSTARTS(LCASE(?war), ""franco-hova wars""))

  # Find the capital of Khemis Miliana District
  <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/capital> ?capital .

  # Ensure the capital is a settlement
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Find decedents at this capital
  ?decedent <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  FILTER(?deathPlace = ?capital)

  # Ensure the commander is also a decedent at the capital
  FILTER(?commander = ?decedent)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
528,24,val,Give me the war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT DISTINCT ?war WHERE {
  # Find the war associated with the commander of Battle of La Rinconada de Ate
  <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war .

  # Find the war associated with Narciso Campero
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/battle> ?camperoWar .

  # Filter for common wars
  FILTER (?war = ?camperoWar)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
712,11,val,Give me the capital of the country of Armed Forces of South Russia and resting place of Nina Onilova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query to find the capital of the country related to Armed Forces of South Russia
SELECT ?capital WHERE {
  <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?country .
  ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital .
}

# Query to find the resting place of Nina Onilova
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
281,43,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of Beauchamp Seymour, 1st Baron Alcester and war of New Zealand Army.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Step 1: Find the leader of the 1962 New South Wales state election who is a politician.
SELECT ?politician WHERE {
  <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/ontology/leader> ?politician .
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}

# Step 2: Find the birthplace of this politician that is a country.
SELECT DISTINCT ?country WHERE {
  ?politician <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  FILTER(?politician = ?politicianFromStep1) # Replace with actual politician URI from Step 1
}

# Step 3: Find the wars associated with Beauchamp Seymour, 1st Baron Alcester and New Zealand Army.
SELECT DISTINCT ?war WHERE {
  {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?war .
  }
  UNION
  {
    <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?war .
  }
}

# Step 4: Find the entity in the birthplace (country) that is related to any of these wars.
SELECT DISTINCT ?entity WHERE {
  ?country <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?entity .
  FILTER(?country = ?countryFromStep2) # Replace with actual country URI from Step 2
  ?entity <http://dbpedia.org/ontology/battle> ?war .
  FILTER(?war = ?warFromStep3) # Replace with war URIs from Step 3
}
```

Note: The placeholders `?politicianFromStep1`, `?countryFromStep2`, and `?warFromStep3` need to be replaced with actual URIs obtained from executing the respective subqueries.",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
318,7,val,Give me the person born in the founding year of Eel Pie Publishing and professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v2 . },"```sparql
SELECT ?person WHERE {
  # Find the founding year of Eel Pie Publishing
  <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?foundingYear .

  # Find persons born in that year who are composers
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Composer> .

  # Extract the year from birthDate and compare
  BIND(YEAR(?birthDate) AS ?birthYear)
  FILTER (?birthYear = ?foundingYear)
}
```",3,3,4,2,2,2,2,9,0,0,7,0,0.0,0
404,39,val,Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . },"```sparql
# Step 1: Get the parent(s) of Prince Ernest Augustus of Hanover (born 1914)
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914)> <http://dbpedia.org/ontology/parent> ?parent .
}

# Step 2: Get the spouse of Princess Victoria Louise of Prussia
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 3: Get the father of that spouse
SELECT ?father WHERE {
  ?spouse <http://dbpedia.org/ontology/father> ?father .
}

# Step 4: Find the child of that father
SELECT ?child WHERE {
  ?father <http://dbpedia.org/ontology/child> ?child .
}

# Final step: Find common entity between parent(s) of Prince Ernest Augustus and child of the father of Princess Victoria Louise's spouse
SELECT DISTINCT ?commonEntity WHERE {
  { 
    <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914)> <http://dbpedia.org/ontology/parent> ?commonEntity .
  }
  UNION
  {
    ?spouse <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/child> ?commonEntity .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
339,12,val,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia and child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?father WHERE {
  ?child <http://dbpedia.org/ontology/father> ?father .
  <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?child .
  <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?child .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
328,32,val,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commander WHERE {
  # Find commanders in Ferenc Szálasi's force
  ?force <http://dbpedia.org/ontology/commander> ?commander .
  ?force <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> .

  # Find awardees of Bruce Fraser, 1st Baron Fraser of North Cape
  ?awardee <http://dbpedia.org/ontology/receiverAward> ?award .
  ?award <http://dbpedia.org/property/giver> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .

  # Find the intersection
  FILTER (?commander = ?awardee)
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
981,13,val,"Give me the entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?timeZone <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?region .
  ?region <http://dbpedia.org/ontology/entity> ?entity .
}
```",3,3,4,3,1,3,2,20,0,0,2949,0,0.0,0
754,14,val,Give me the parent of the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/father> ?parent .
  ?child <http://dbpedia.org/ontology/mother> ?parent .
  <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> <http://dbpedia.org/ontology/child> ?child .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
16,27,val,Give me the person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/OHIO_State_University> .
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",3,3,4,3,1,3,3,71,0,0,90,0,0.0,0
303,19,val,"Give me the entity in Panama and party of Arnulfo Arias and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Panama> .
  ?entity <http://dbpedia.org/ontology/party> ?party .
  ?party <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Arnulfo_Arias> .
  
  ?entity <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/United_States_invasion_of_Panama> .

  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
617,21,val,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find children of Seleucus II Callinicus who are royalty
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find grandchildren of Seleucus II Callinicus who are children of the royal child
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .

  # Step 3: Ensure this grandchild is a parent of Nysa (wife of Pharnaces I of Pontus)
  ?grandchild <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
996,15,val,Give me the force of the awardee of the elevation of Lac d'Avoriaz and entity in France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
SELECT ?force WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/France> .
  ?entity <http://dbpedia.org/property/elevation> ""Lac d'Avoriaz"" .
  ?awardee <http://purl.org/dc/terms/relation> ?entity .
  ?awardee <http://dbpedia.org/ontology/memberOf> ?force .
}
```",4,4,5,3,2,3,2,20,0,0,4,0,0.0,0
92,36,val,Give me the band of the person born as the birth name of Joseph Michael and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
  ?person <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Nevermore_(band)> .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
492,28,val,"Give me the commander in Franco-Hova Wars and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at Algiers.","SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . }","```sparql
SELECT ?commander WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Battle> .
  FILTER(CONTAINS(LCASE(STR(?battle)), ""franco-hova wars""))

  ?decedentAtWork <http://dbpedia.org/ontology/decedentAtLocation> ?commander .
  ?work <http://dbpedia.org/ontology/work> ?decedentAtWork .
  ?work <http://www.w3.org/2000/01/rdf-schema#label> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en .

  ?decedentAtAlgiers <http://dbpedia.org/ontology/decedentAtLocation> ?commander .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Algiers""@en .
  ?decedentAtAlgiers <http://dbpedia.org/ontology/location> ?location .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
232,21,val,Give me the native of London and child of the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?child WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .
  ?person <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/London> .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
645,15,val,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock and alma mater of Sylvia Pankhurst.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Step 1: Find the commander in the Battle of Diamond Rock
  <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?commander .

  # Step 2: Determine the residence of that commander, ensuring it is a country
  ?commander <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 3: Find the alma mater of Sylvia Pankhurst
  <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/property/almaMater> ?almaMater .

  # Step 4: Identify any entity associated with both the commander's country and Sylvia Pankhurst's alma mater
  OPTIONAL { ?entity <http://dbpedia.org/ontology/country> ?residence . }
  OPTIONAL { ?entity <http://dbpedia.org/property/almaMater> ?almaMater . }

  FILTER(?entity != ?residence && ?entity != ?almaMater)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
488,24,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?deathPlace WHERE {
  # Step 1: Get father of Yūki Hideyasu
  ?yukiFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Yūki_Hideyasu> .
  
  # Step 2: Get administrators of Emperor Go-Yōzei who are politicians
  ?admin <http://dbpedia.org/ontology/administrator> <http://dbpedia.org/resource/Emperor_Go-Yōzei> .
  ?admin <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 3: Find common individual
  FILTER (?yukiFather = ?admin)

  # Step 4: Get death place of the identified father/administrator
  ?yukiFather <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
435,15,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
SELECT ?work WHERE {
  # Step 1: Identify territories related to Iceland that are settlements and towns
  ?territory <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland> .
  ?territory <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?territory <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town> .

  # Step 2: Find works associated with Article 62, Section IV of the Constitution of Iceland
  OPTIONAL {
    ?constitution <http://dbpedia.org/property/article> ""Article 62"" .
    ?constitution <http://dbpedia.org/property/section> ""Section IV"" .
    ?constitution <http://dbpedia.org/ontology/work> ?work .
  }
}
```",3,6,4,2,2,2,3,28,0,0,1,0,0.0,0
838,15,val,"Give me the band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić and band member of Kerber.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find bands of Žika Jelić
  ?band1 <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/%C5%BDika_Jeli%C4%87> .
  
  # Step 2: Find bands Kerber is a member of
  ?band2 <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Kerber> .

  # Step 3: Identify band members who are both artists and musical artists
  ?artist <http://dbpedia.org/ontology/bandMember> ?band .
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> ;
          <http://dbpedia.org/ontology/MusicalArtist> .

  # Step 4: Find the band of such an artist
  ?band <http://dbpedia.org/ontology/member> ?artist .
  
  # Ensure the bands are related to Žika Jelić and Kerber's bands
  FILTER(?band = ?band1 || ?band = ?band2)
  
  # Result: The band of such an artist
  BIND(?band AS ?result)
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
161,35,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?force WHERE {
  ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  ?force <http://dbpedia.org/ontology/militaryForce> ?francoMilitaryRole .
  ?francoMilitaryRole <http://dbpedia.org/resource/Francisco_Franco> .

  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",4,8,5,2,2,3,3,71,0,0,34,0,0.0,0
421,12,val,Give me the native of Socialist Federal Republic of Yugoslavia and person born as Edin Dervišhalidović and band member of Senidah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
  ?person <http://dbpedia.org/ontology/originalName> ""Edin Dervišhalidović""@en .
  ?person <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Senidah> .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
391,41,val,"Give me the actor of All About the Andersons and native of the figure known as Hub City and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
# Step 1: Find the actor of ""All About the Andersons""
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 2: Identify who is native to ""Hub City"" (Columbia, South Carolina)
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Columbia,_South_Carolina> .
}

# Step 3: Find Michael Ballhaus's claim to fame as a work
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/famousFor> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CreativeWork> .
}

# Step 4: Find the actor who satisfies both conditions
SELECT DISTINCT ?actor WHERE {
  # Actor of ""All About the Andersons""
  <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/starring> ?actor .

  # Native to Columbia, South Carolina
  ?actor <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Columbia,_South_Carolina> .

  # Actor of Michael Ballhaus's claim to fame
  ?work <http://dbpedia.org/ontology/starring> ?actor .
  <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/famousFor> ?work .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
115,7,val,Give me the alma mater of the alumnus of National University of San Marcos and alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . },"```sparql
SELECT ?almaMater WHERE {
  ?person <http://dbpedia.org/ontology/alumnusOf> <http://dbpedia.org/resource/National_University_of_San_Marcos> .
  ?person <http://dbpedia.org/ontology/alumnusOf> <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
303,12,val,Give me the party of Guillermo Endara and party of Arnulfo Arias and entity in Panama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?endaraParty ?ariasParty ?entity WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/politicalParty> ?endaraParty .
  }
  OPTIONAL { 
    <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/politicalParty> ?ariasParty .
  }
  OPTIONAL {
    ?party <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Panama> .
    ?party ?relation ?entity .
  }
}
```",3,3,4,1,3,2,3,28,1,2345,0,0.00042625745950554135,1.0,0.0008521516829995739
294,14,val,"Give me the resting place of Luke Lea (American politician, born 1879) and resting place of the architect of P. D. Houston Jr. House.","SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query for Luke Lea's resting place
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/finalRestingPlace> ?restingPlace .
}

UNION

# Query to find the architect of P. D. Houston Jr. House and their resting place
SELECT ?architectRestingPlace WHERE {
  ?house <http://dbpedia.org/property/architect> ?architect .
  FILTER(STRSTARTS(STR(?house), ""http://dbpedia.org/resource/P._D._Houston_Jr._House""))
  
  ?architect <http://dbpedia.org/ontology/finalRestingPlace> ?architectRestingPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
328,27,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?officeLeader WHERE {
  # Step 1: Identify Gustav Jonson's leader who is an office holder and politician
  ?leader <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Gustav_Jonson> .
  ?leader a <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Politician> .

  # Step 2: Find the office associated with this leader and ensure it's a government agency
  ?office <http://dbpedia.org/ontology/leader> ?leader .
  ?office a <http://dbpedia.org/ontology/GovernmentAgency> .

  # Step 3: Determine who leads this office
  ?office <http://dbpedia.org/ontology/leader> ?officeLeader .
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
778,12,val,"Give me the entity in United States and author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v0 <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?entity WHERE {
  ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Bill_Joy> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software> .
  ?entity <http://dbpedia.org/ontology/software> ?work .
  ?entity <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
161,30,val,"Give me the military force of Rif War and military force of Spanish Civil War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT DISTINCT ?force WHERE {
  # Find military forces in the Rif War
  { 
    <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?rifForce .
    ?rifForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
  
  # Find military forces in the Spanish Civil War
  UNION 
  { 
    <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/militaryForce> ?civilWarForce .
    ?civilWarForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
  
  # Find forces commanded by Emilio Mola
  FILTER EXISTS {
    ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> .
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
  
  # Ensure the force is an event
  FILTER EXISTS {
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  }

  BIND(?rifForce AS ?force)
  UNION
  BIND(?civilWarForce AS ?force)
}
```",4,5,5,2,3,3,3,71,0,0,11,0,0.0,0
994,30,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Part 1: Associated Musical Artists of Red Tide (band)
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

UNION

# Part 2: Band Member of Donald Maynard Dokken
SELECT ?bandMember WHERE {
  <http://dbpedia.org/resource/Dokken> <http://dbpedia.org/ontology/bandMember> ?bandMember .
}

UNION

# Part 3: Associated Musical Artists of S.A. Slayer
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
161,22,val,"Give me the military force of Rif War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?force ?commander WHERE {
  <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/event> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  FILTER(CONTAINS(LCASE(STR(?event)), ""emilio mola""))
}
```",3,4,4,2,2,3,3,71,0,0,12,0,0.0,0
9,20,val,"Give me the alma mater of the awardee of Royal Medal and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Find alma mater of awardees of the Royal Medal
SELECT DISTINCT ?almaMater WHERE {
  ?person <http://dbpedia.org/ontology/nobelPrize> ?award .
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medal""@en .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

UNION

# Find alma mater of John Alderdice, Baron Alderdice
SELECT DISTINCT ?almaMater WHERE {
  <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

# Find common alma mater between the two sets
SELECT ?commonAlmaMater WHERE {
  VALUES ?almaMater { ?almaMater1 ?almaMater2 }
  ?person1 <http://dbpedia.org/ontology/nobelPrize> ?award .
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medal""@en .
  ?person1 <http://dbpedia.org/ontology/almaMater> ?almaMater1 .
  
  <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMater2 .

  FILTER (?almaMater1 = ?almaMater2)
  BIND(?almaMater1 AS ?commonAlmaMater)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
360,17,val,"Give me the native of the death place, that is a settlement, of Winnie Madikizela-Mandela and reference to Manfred Mann.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
SELECT ?native WHERE {
  # Step 1: Find the death place of Winnie Madikizela-Mandela that is a settlement
  <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 2: Find the native (birthplace) of this death place
  ?deathPlace <http://dbpedia.org/ontology/native> ?native .

  # Step 3: Ensure there's a reference to Manfred Mann
  OPTIONAL {
    ?native <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Manfred_Mann> .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
378,33,val,"Give me the war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query 1: Wars associated with Carl Pontus Gahn
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Query 2: Other military conflicts commanded by commanders of the Peninsular War
SELECT DISTINCT ?result WHERE {
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Peninsular_War> .
  ?commander <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
996,13,val,Give me the force of the awardee of the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?elevation .
  ?elevation <http://dbpedia.org/property/awardee> ?awardee .
  ?awardee <http://dbpedia.org/ontology/memberOf> ?result .
}
```",3,3,4,3,1,3,2,20,0,0,11,0,0.0,0
281,34,val,Give me the war of the awardee of the award of Jonathon Band and war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT DISTINCT ?war WHERE {
  # Wars associated with Jonathon Band as an awardee
  { 
    <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/ontology/award> ?award .
    ?award <http://dbpedia.org/property/awardedFor> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
  
  UNION
  
  # Wars involving the New Zealand Army
  {
    <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
}
```",4,4,5,3,2,3,3,71,9,3,0,0.75,1.0,0.8571428571428571
55,15,val,"Give me the band member of the producer, that is a band, of Used to Love Her and band of Newsted.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
# Step 1: Find the producer of ""Used to Love Her"" who is a band.
SELECT ?producer WHERE {
  <http://dbpedia.org/resource/Used_to_Love_Her> <http://purl.org/dc/terms/creator> ?producer .
  ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
}

# Step 2: Find the band associated with Newsted.
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/memberOf> ?band .
}

# Step 3: Find common band members between these two bands.
SELECT DISTINCT ?member WHERE {
  # Assuming ?producerBand and ?newstedBand are results from the above queries
  ?producerBand <http://dbpedia.org/ontology/member> ?member .
  ?newstedBand <http://dbpedia.org/ontology/member> ?member .
}
```

Note: The actual SPARQL query execution would require replacing `?producerBand` and `?newstedBand` with the specific URIs obtained from steps 1 and 2.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
981,12,val,"Give me the birth place of the person born, that is a beauty queen, as  and entity in Indonesia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/birthName> """"@en . }","```sparql
SELECT ?birthPlace WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?person <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> .
}
```",3,4,4,2,2,3,2,20,0,0,19,0,0.0,0
534,11,val,"Give me the headquarter of Royal Dublin Society and birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?headquarters ?child ?birthPlace WHERE {
  # Task 1: Find headquarters of Royal Dublin Society
  <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarters> ?headquarters .

  # Task 2: Find child of Desmond FitzGerald who is a politician and an office holder, then get their birthplace
  OPTIONAL {
    <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?child <http://dbpedia.org/ontology/officeHolder> ?office .
    ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
161,42,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?commonCommander WHERE {
  # Emilio Mola's military force in the Spanish Civil War
  ?force1 <http://dbpedia.org/ontology/militaryForce> <http://dbpedia.org/resource/Spanish_Civil_War> .
  ?force1 <http://dbpedia.org/ontology/commander> ?commander1 .
  ?commander1 rdfs:label ""Emilio Mola""@en .

  # Francisco Franco's military forces
  ?force2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?force2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?force2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?force2 <http://dbpedia.org/ontology/militaryForce> ?commander2 .
  ?commander2 rdfs:label ""Francisco Franco""@en .

  # Find common commander
  FILTER (?commander1 = ?commonCommander && ?commander2 = ?commonCommander)
}
```",5,9,6,2,3,3,3,71,0,0,32,0,0.0,0
801,35,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Find the writer of ""40 Dayz & 40 Nightz""
  <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> <http://purl.org/dc/terms/creator> ?writer .

  # Step 2: Ensure the writer is both a musical artist and an artist
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Step 3: Find the professional alter ego, The Shadow
  ?writer <http://dbpedia.org/property/professionalAlterEgo> <http://dbpedia.org/resource/The_Shadow_(alter_ego)> .

  # Step 4: Identify the associated musical artist of this writer
  ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",4,6,5,2,2,3,3,71,0,0,22,0,0.0,0
801,32,val,"Give me the professional in the alter ego of The Shadow and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?professional WHERE {
  ?shadow <http://dbpedia.org/ontology/alterEgo> ""The Shadow"" .
  ?shadow <http://dbpedia.org/property/profession> ?professional .
  
  ?work <http://dbpedia.org/ontology/producer> ?professional ;
        <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/50_Cent> ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>, <http://dbpedia.org/ontology/MusicalWork> .
}
```",4,7,5,2,2,3,3,71,0,0,27,0,0.0,0
534,12,val,Give me the birth place of Garret FitzGerald and headquarter of the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v0 . },"```sparql
SELECT ?birthPlace ?owner ?headquarters WHERE {
  # Query for Garret FitzGerald's birth place
  <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Query for the owner of RDS Arena and their headquarters
  <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?owner .
  ?owner <http://dbpedia.org/ontology/headquarterLocation> ?headquarters .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
392,16,val,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and entity in Italy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
SELECT ?province WHERE {
  <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
  ?residence <http://dbpedia.org/property/province> ?province .
}
```",3,5,4,2,2,2,3,28,1,0,0,1.0,1.0,1.0
421,18,val,Give me the person born as the birth name of Dino Merlin and native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
SELECT ?person WHERE {
  # Retrieve Dino Merlin's birth name
  <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/ontology/birthName> ?birthName .
  
  # Find a person with the same birth name and native place as Socialist Federal Republic of Yugoslavia
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
488,25,val,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query 1: Death place of Tokugawa Ieyasu
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}

# Query 2: Administration of the father of Emperor Go-Mizunoo
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://www.w3.org/2000/01/rdf-schema#parent> ?father .
  ?father <http://dbpedia.org/ontology/administration> ?administration .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
232,23,val,Give me the child of the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
  ?person <http://dbpedia.org/ontology/child> ?child .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
488,18,val,Give me the birth place of Enomoto Takeaki and death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
SELECT ?entity ?property ?result WHERE {
  { 
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result .
    BIND(""birthPlace"" AS ?property)
    BIND(<http://dbpedia.org/resource/Enomoto_Takeaki> AS ?entity)
  }
  UNION
  {
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result .
    BIND(""deathPlace"" AS ?property)
    BIND(<http://dbpedia.org/resource/Tokugawa_Ieyasu> AS ?entity)
  }
  UNION
  {
    <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/administration> ?result .
    BIND(""administration"" AS ?property)
    BIND(<http://dbpedia.org/resource/Emperor_Go-Yōzei> AS ?entity)
  }
}
```",3,3,4,1,3,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
820,13,val,Give me the professional in the award of the author of Understanding Comics.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . },"```sparql
SELECT ?professional WHERE {
  <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?author .
  ?author <http://dbpedia.org/ontology/award> ?award .
  ?award <http://dbpedia.org/property/professional> ?professional .
}
```",3,3,4,3,1,3,2,20,0,0,39650,0,0.0,0
378,25,val,Give me the war of Joaquín Blake and claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
# Query for the war associated with Joaquín Blake
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Query for the claim to fame of the commander in the Great Siege of Gibraltar
SELECT ?commander ?claimToFame WHERE {
  <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/claimToFame> ?claimToFame .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
281,32,val,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Task 1: Find Bob Heffron's birthplace that is a country.
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}

UNION

# Task 2: Find the war associated with an awardee of Knight Grand Cross of the Order of the Bath.
SELECT ?war WHERE {
  ?person <http://dbpedia.org/property/orderOfTheBath> ""Knight Grand Cross"" .
  ?person <http://dbpedia.org/ontology/battle> ?war .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
492,41,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
SELECT ?war WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  ?war <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Frédéric-Georges_Herr> .
  
  OPTIONAL { 
    <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Algiers> .
  }

  ?satterthwaite <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
                 <http://dbpedia.org/property/deathPlaceOrEvent> ?deathLocation .

  FILTER(?deathLocation = <http://dbpedia.org/resource/Algiers> || ?deathLocation = ?war)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
232,43,val,"Give me the native of London and child of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
# Step 1: Identify the professional who is an actor, narrator, and producer.
SELECT ?professional WHERE {
  ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
  ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Narrator> .
  ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Producer> .
}

# Step 2: Find their claim to fame that includes both a film and a military conflict.
SELECT ?film ?conflict WHERE {
  ?professional <http://dbpedia.org/property/claimToFame> ?fame .
  ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Film> , <http://dbpedia.org/ontology/MilitaryConflict>) .
}

# Step 3: Determine the native of London who is also a child of Jon Pertwee.
SELECT ?child WHERE {
  ?child <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> .
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Jon_Pertwee> .
}

# Step 4: Verify if this person acted in the identified film.
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/performedIn> ?film .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
747,19,val,Give me the person born on the birth date of Pavlo Khudzik and band of Amba Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?person WHERE {
  # Get the birth date of Pavlo Khudzik
  <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .

  # Get the band associated with Amba Shepherd
  <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/property/memberOf> ?band .

  # Find a person who shares the same birth date and is in the same band
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?person <http://dbpedia.org/property/memberOf> ?band .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
285,11,val,Give me the spouse of Aristotle Onassis and parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?tina <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?tina <http://dbpedia.org/property/familyName> ""Onassis Niarchos"" .
  ?tina <http://dbpedia.org/ontology/birthName> ""Tina Onassis Niarchos"" .

  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> .
  ?parent <http://dbpedia.org/ontology/child> ?tina .
  
  BIND(?parent AS ?spouse)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
547,43,val,Give me the resting place of James Burton (Egyptologist) and resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query 1: Resting place of James Burton (Egyptologist)
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
}

UNION

# Query 2: Resting place of Alan Cunningham
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
}

UNION

# Query 3: Resting place of the actor who played Emily Richard
SELECT ?actorRestingPlace WHERE {
  ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Emily_Richard> .
  ?show <http://dbpedia.org/ontology/starredBy> ?actor .
  ?actor <http://dbpedia.org/ontology/restingPlace> ?actorRestingPlace .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
801,21,val,Give me the associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://www.w3.org/2000/01/rdf-schema#alias> <http://dbpedia.org/resource/The_Shadow> .
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
435,18,val,Give me the region of Greenwich Mean Time and work of the author of Iceland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?result <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v0 . },"```sparql
SELECT ?region WHERE {
  <http://dbpedia.org/resource/Greenwich_Mean_Time> <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
  BIND(?location AS ?region)
}
UNION
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Iceland_(book)> <http://purl.org/dc/terms/creator> ?author .
  ?author <http://www.w3.org/2002/07/owl#sameAs> ?person .
  ?person <http://dbpedia.org/ontology/publication> ?work .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
328,20,val,Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?awardee WHERE {
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Order_of_Suvorov> .
  ?awardee <http://dbpedia.org/ontology/commander> ?force .
  ?force <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Ferenc_Szálasi> .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
754,12,val,Give me the parent of the child of Ram Khamhaeng and parent of Loe Thai.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT DISTINCT ?commonParent WHERE {
  # Find a child of Ram Khamhaeng
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ram_Khamhaeng> .
  
  # Find a parent of Loe Thai
  <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/birthParent> ?parentOfLoeThai .

  # Check if there is a common parent for both the child of Ram Khamhaeng and the parent of Loe Thai
  ?child <http://dbpedia.org/ontology/birthParent> ?commonParent .
  ?parentOfLoeThai <http://dbpedia.org/ontology/birthParent> ?commonParent .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
994,32,val,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find associated musical artist of Watchtower
SELECT ?watchtowerArtist WHERE {
  <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
}

# Step 2: Find band members of Meshuggah who are also bands/groups/organizations
SELECT DISTINCT ?meshuggahMember WHERE {
  <http://dbpedia.org/resource/Meshuggah> <http://dbpedia.org/ontology/member> ?meshuggahMember .
  ?meshuggahMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/MusicalGroup>, <http://dbpedia.org/ontology/Organisation>)).
}

# Step 3: Find associated musical artist of these Meshuggah members
SELECT DISTINCT ?meshuggahArtist WHERE {
  ?meshuggahMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?meshuggahArtist .
  { SELECT DISTINCT ?meshuggahMember WHERE {
      <http://dbpedia.org/resource/Meshuggah> <http://dbpedia.org/ontology/member> ?meshuggahMember .
      ?meshuggahMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
      FILTER (?type IN (<http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/MusicalGroup>, <http://dbpedia.org/ontology/Organisation>)).
    }
  }
}

# Step 4: Find common associated musical artist
SELECT DISTINCT ?commonArtist WHERE {
  VALUES ?artist { ?watchtowerArtist ?meshuggahArtist }
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",4,7,5,2,2,3,3,71,0,0,5,0,0.0,0
391,19,val,Give me the native of the figure known as Hub City and actor of The Departed.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/nickname> ""Hub City""@en . }","```sparql
SELECT ?native WHERE {
  ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Boston,_Massachusetts> .
  ?actor <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/The_Departed> .
  ?actor <http://dbpedia.org/ontology/birthPlace> ?native .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
161,18,val,Give me the commander in Biscay Campaign and military force of Spanish Civil War and military force of Rif War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  { 
    <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/property/militaryForce> <http://dbpedia.org/resource/Spanish_Civil_War> .
  }
  UNION
  {
    ?commander <http://dbpedia.org/ontology/commander> ?rifCampaign .
    ?rifCampaign <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?rifCampaign <http://dbpedia.org/resource/Rif_War> .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
48,13,val,"Give me the band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT DISTINCT ?band WHERE {
  ?work <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Shellback_(record_producer)> .
  ?work <http://purl.org/dc/terms/creator> ?writer .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://dbpedia.org/property/memberOf> ?band .
}
```",3,4,4,3,1,3,2,20,0,0,922,0,0.0,0
54,23,val,Give me the child of the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandchild WHERE {
  # Find a child of Thinkhaya of Pagan
  <http://dbpedia.org/resource/Thihathu> <http://dbpedia.org/ontology/father> ?father .
  
  # Ensure the father is Thinkhaya of Pagan
  FILTER (?father = <http://dbpedia.org/resource/Anawrahta>) 

  # Find children (grandchildren of Thinkhaya) of this father
  ?father <http://dbpedia.org/ontology/child> ?grandchild .
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
435,19,val,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and region of Greenwich Mean Time and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
SELECT ?territory WHERE {
  ?territory <http://www.w3.org/2000/01/rdf-schema#label> ""Land of fire and ice""@en .
  ?territory <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland> .
  ?territory <http://dbpedia.org/ontology/type> ?type .
  FILTER (?type IN (<http://dbpedia.org/class/yago/Settlement108069068>, <http://dbpedia.org/class/yago/Town108069068>)).
  ?territory <http://www.w3.org/2006/time#during> ?timeZone .
  FILTER (STRSTARTS(STR(?timeZone), ""GMT"")).
  OPTIONAL { 
    ?constitution <http://dbpedia.org/ontology/article> ?article .
    ?article <http://dbpedia.org/property/section> ""IV"" .
    ?article <http://dbpedia.org/property/part> ""62"" .
    ?territory <http://dbpedia.org/ontology/relatedTo> ?constitution .
  }
}
```",4,7,5,2,3,2,3,28,0,0,1,0,0.0,0
314,14,val,Give me the awardee of the award of Sergei Makovetsky and person deceased at Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
SELECT ?awardee WHERE {
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  ?award <http://dbpedia.org/property/relatedTo> <http://dbpedia.org/resource/Sergei_Makovetsky> .
  OPTIONAL { ?awardee <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,15,val,"Give me the parent of Mieszko II Lambert and child of the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
# Step 1: Find the parent of Mieszko II Lambert
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Mieszko_II_Lambert> <http://dbpedia.org/ontology/father> ?parent .
} UNION {
  <http://dbpedia.org/resource/Mieszko_II_Lambert> <http://dbpedia.org/ontology/mother> ?parent .
}

# Step 2: Identify the child of that parent
SELECT ?child WHERE {
  ?parent :child ?child .
}

# Step 3: Filter for royalty among these children
FILTER EXISTS { ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> }

# Step 4: Find the parent of Mlada (abbess)
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Mlada_(abbess)> <http://dbpedia.org/ontology/father> ?parent .
} UNION {
  <http://dbpedia.org/resource/Mlada_(abbess)> <http://dbpedia.org/ontology/mother> ?parent .
}

# Step 5: Identify the child of this parent
SELECT ?child WHERE {
  ?parent :child ?child .
}

# Step 6: Filter for royalty among these children
FILTER EXISTS { ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> }

# Step 7: Find the child of the royal child
SELECT ?grandChild WHERE {
  ?royalChild :child ?grandChild .
}
```

Note: The above query is a conceptual breakdown and may need adjustments based on actual DBpedia schema details. Each step should be executed in sequence, using intermediate results to feed into subsequent queries.",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
303,17,val,"Give me the party of Arnulfo Arias and entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
# Query for the party of Arnulfo Arias
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?party .
}

UNION

# Query for an entity in El Valle de Antón that is a country
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/El_Valle_de_Antón> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
392,12,val,Give me the region of Central European Time and entity in Italy and province of Schio.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?region WHERE {
  ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> .
  ?region <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Italy> .
  ?region <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Schio> .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
285,12,val,Give me the spouse of the professional in  and parent of Alexander Onassis.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?spouse WHERE {
  ?parent <http://dbpedia.org/ontology/birth> <http://dbpedia.org/resource/Alexander_Onassis> .
  ?parent <http://dbpedia.org/property/spouse> ?spouse .
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
492,22,val,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT ?person WHERE {
  # Find the capital of Algeria that is a settlement
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?capital <http://dbpedia.org/property/capital> <http://dbpedia.org/resource/Algeria> .

  # Find persons who died in French Algeria
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
  
  # Ensure the same person also died in the capital of Algeria
  ?person <http://dbpedia.org/ontology/deathPlace> ?capital .
}
```",3,4,4,2,2,3,3,71,0,0,16,0,0.0,0
16,32,val,Give me the spouse of the person born as Ted Martin McGinley and professional in the profession of Satomi Ishihara.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ted Martin McGinley"" .
  OPTIONAL { ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Satomi_Ishihara> . }
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
378,35,val,Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
# Query 1: Find the war associated with Carl Pontus Gahn
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Query 2: Find the claim to fame of the commander in the Great Siege of Gibraltar
SELECT ?commander ?claimToFame WHERE {
  <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
747,40,val,"Give me the band of Amba Shepherd and band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT DISTINCT ?ambaBand ?shenaBand ?athlete WHERE {
  # Find Amba Shepherd's band
  <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/memberOf> ?ambaBand .

  # Find Shèna's band
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/memberOf> ?shenaBand .

  # Identify a decedent from Zolotonosha and their birthdate
  ?decedent <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> .
  ?decedent <http://dbpedia.org/ontology/birthDate> ?birthdate .

  # Find an athlete and soccer player born on the same date
  ?athlete <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> .
  ?athlete <http://dbpedia.org/ontology/SoccerPlayer> .
  ?athlete <http://dbpedia.org/ontology/birthDate> ?birthdate .

}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
783,14,val,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?bandMember WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ebony Reigns"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?bandMember .
}
```",3,5,4,3,1,3,2,20,0,0,7,0,0.0,0
161,27,val,"Give me the commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/El_Director> <http://dbpedia.org/ontology/memberOf> ?force .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?force <http://dbpedia.org/ontology/commander> ?commander .
}
```",3,4,4,3,1,3,3,71,0,0,85,0,0.0,0
427,31,val,Give me the party of Giulio Andreotti and reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?andreottiParty (STR(?pintoPartyName) AS ?michelePintoPartyName) WHERE {
  <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/politicalParty> ?andreottiParty .
  <http://dbpedia.org/resource/Michele_Pinto_(politician)> <http://dbpedia.org/ontology/politicalParty> ?pintoParty .
  ?pintoParty rdfs:label ?pintoPartyName .
  FILTER (lang(?pintoPartyName) = 'en')
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
54,25,val,"Give me the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?parent WHERE {
  # Find Thihapate of Mohnyin's children who are office holders and royals
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Find the predecessor of that child
  ?predecessor <http://dbpedia.org/ontology/successor> ?child .
  
  # Find Thado Minsaw of Prome's parent who is the predecessor
  ?parent <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
  FILTER (?predecessor = ?parent)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
820,11,val,Give me the child of Jack Schwartzman and professional in the award of Scott McCloud.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . },"```sparql
SELECT ?child WHERE {
  # Find the child of Jack Schwartzman
  <http://dbpedia.org/resource/Jack_Schwartzman> <http://dbpedia.org/ontology/child> ?child .
  
  # Find an award associated with Scott McCloud and its professional field
  ?award <http://dbpedia.org/property/receiver> <http://dbpedia.org/resource/Scott_McCloud> .
  ?award <http://purl.org/dc/terms/subject> ?professionalField .
  
  # Ensure the child is professionally linked to the award's field
  ?child <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?professionalField .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
617,25,val,Give me the parent of the child of Antiochus (son of Antiochus III the Great) and spouse of Laodice IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?parent WHERE {
  ?individual <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> .
  ?individual <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Laodice_IV> .
  ?individual <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
427,39,val,"Give me the party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Step 1: Get the party of Giulio Andreotti
SELECT ?andreottiParty WHERE {
  <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/politicalParty> ?andreottiParty .
}

# Step 2: Get Romano Prodi's birth name
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?birthName .
}

# Step 3 and 4: Find an office holder and politician with that birth name, and get their party
SELECT DISTINCT ?personParty WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/ontology/politicalParty> ?personParty .
  
  # Join with the result from Step 2
  FILTER(?birthName = ""Romano Prodi"")
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
54,43,val,Give me the parent of the child of the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of Thinkhaya of Pagan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Step 1: Find the parent of Thado Minsaw of Prome
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/father> ?parent .
}

# Step 2: Find the child of that parent (likely Thado Minsaw himself)
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/child> ?child .
}

# Step 3: Determine the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
SELECT ?predecessor WHERE {
  <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Step 4: Ensure this predecessor is a child of Thinkhaya of Pagan
SELECT ?child WHERE {
  ?predecessor <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
}

# Final step: Find the parent of this predecessor
SELECT ?finalParent WHERE {
  ?predecessor <http://dbpedia.org/ontology/father> ?finalParent .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
184,38,val,Give me the parent of the child of Archduke Joseph Francis of Austria and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Find the child of Archduke Joseph Francis of Austria
  <http://dbpedia.org/resource/Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?grandchild1 .
  
  # Step 2: Find the parent of this grandchild (i.e., their sibling or another child)
  ?grandchild1 <http://dbpedia.org/ontology/parent> ?commonParent .

  # Step 3: Find the child of Archduke Joseph Karl of Austria
  <http://dbpedia.org/resource/Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?grandchild2 .
  
  # Step 4: Find the parent of this grandchild (i.e., their sibling or another child)
  ?grandchild2 <http://dbpedia.org/ontology/parent> ?commonParent .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
528,19,val,Give me the war of the military force of Battle of Pisagua and war of Orozimbo Barbosa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?war WHERE {
  # Wars involving the military force from the Battle of Pisagua
  <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?militaryForce1 .
  ?militaryForce1 <http://dbpedia.org/ontology/battle> ?battle1 .
  ?battle1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?battle1 <http://dbpedia.org/ontology/war> ?war .

  # Wars involving Orozimbo Barbosa
  <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?battle2 .
  ?battle2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?battle2 <http://dbpedia.org/ontology/war> ?war .

}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
659,30,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in German campaign of 1813 and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryForce WHERE {
  ?militaryForce <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?militaryForce <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  
  FILTER CONTAINS(LCASE(?label), ""german campaign of 1813"")
  FILTER CONTAINS(LCASE(?label), ""battle of leipzig"")

  ?militaryForce <http://dbpedia.org/ontology/event> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .

  ?militaryForce <http://dbpedia.org/ontology/event> ?generalEvent .
  ?generalEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}
```",4,7,5,2,3,3,3,71,0,0,6,0,0.0,0
801,31,val,Give me the producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
SELECT ?producer ?professional WHERE {
  # Query for the producer of Westside Story (song)
  <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?producer .

  # Query for the professional associated with The Shadow's true self
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
    ?alterEgo <http://dbpedia.org/ontology/profession> ?professional .
  }
}
```",4,4,5,3,2,3,3,71,2,0,0,1.0,1.0,1.0
251,15,val,"Give me the death place of Laura Mancinelli and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/place> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
UNION
SELECT ?location WHERE {
  ?war <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Louis_François_Félix_Musnier> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://dbpedia.org/property/location> ?location .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
996,12,val,Give me the entity in the award of Ekrem Akurgal and force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Find the award given to Ekrem Akurgal
  ?award <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Ekrem_Akurgal> .
  
  # Find the force commanded by Dagobert Sigmund von Wurmser
  ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> .

  # Look for a common entity related to both the award and the force
  OPTIONAL { ?award ?p1 ?entity . }
  OPTIONAL { ?force ?p2 ?entity . }

  FILTER(?entity != <http://dbpedia.org/resource/Ekrem_Akurgal>)
  FILTER(?entity != <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser>)
}
```",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
404,35,val,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?child WHERE {
  # Step 1: Find the father of Ernest Augustus, Duke of Brunswick
  <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Identify the spouse of Princess Victoria Louise of Prussia who is royalty
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 3: Find the child of both the father from step 1 and spouse from step 2
  ?child <http://dbpedia.org/ontology/father> ?father .
  ?child <http://dbpedia.org/ontology/mother> ?spouse .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
92,33,val,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?associatedArtist WHERE {
  ?person <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> .
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Nevermore_(band)> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  OPTIONAL {
    ?person <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
232,29,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of London and child of Jon Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  # Identify Sean Pertwee
  ?sean a <http://dbpedia.org/ontology/Person> ;
        <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Jon_Pertwee> ;
        <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> .

  # Find claims to fame that are both films and military conflicts
  ?sean <http://dbpedia.org/ontology/claimToFame> ?fame .
  ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Film> , <http://dbpedia.org/ontology/MilitaryConflict>) .

  # Retrieve actors involved in these claims to fame
  ?fame <http://dbpedia.org/ontology/starring> ?actor .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
161,34,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in Biscay Campaign.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
SELECT ?militaryForce WHERE {
  ?person <http://dbpedia.org/ontology/decedent> <http://dbpedia.org/resource/Francoist_Spain> .
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Biscay_Campaign> .
  
  ?event <http://dbpedia.org/ontology/force> ?militaryForce .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  FILTER(?person = ?event)
}
```",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
281,39,val,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Step 1: Find entities related to Colony of New Zealand and a war
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
  ?entity <http://dbpedia.org/ontology/war> ?war .

  # Step 2: Find professions that are military units related to these entities
  ?entity <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .

  # Step 3: Find professionals who are office holders and politicians in the New Zealand Army
  ?professional <http://dbpedia.org/ontology/profession> ?profession .
  ?professional <http://dbpedia.org/ontology/politicalParty> ?party .
  ?professional <http://dbpedia.org/ontology/officeHolder> ?office .
  ?office <http://dbpedia.org/ontology/organization> <http://dbpedia.org/resource/New_Zealand_Army> .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
77,15,val,Give me the force of Alexander I of Russia and war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/militaryForce> ?force .
}
UNION
SELECT ?war WHERE {
  ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Award_of_Maxim_Grigorievich_Vlasov> .
  ?awardee <http://dbpedia.org/ontology/battle> ?war .
}
```",4,4,5,3,2,3,2,20,0,0,20,0,0.0,0
184,23,val,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
SELECT ?parent WHERE {
  ?landmark <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
  ?landmark <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?native <http://dbpedia.org/ontology/nativePlace> ?landmark .
  ?native <http://dbpedia.org/ontology/birthPlace> ?parent .
}
```",3,4,4,3,1,3,3,71,0,0,31,0,0.0,0
404,28,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?child WHERE {
  # Condition 1: Child of Ernest Augustus, Crown Prince of Hanover
  <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> <http://dbpedia.org/ontology/child> ?child .

  # Condition 2: Parent of Prince Ernest Augustus of Hanover (born 1914)
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> .

  # Condition 3: Spouse of Princess Victoria Louise of Prussia, who is royalty
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?spouse <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
487,12,val,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of 2022 Vermont House of Representatives election.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://dbpedia.org/property/governor> ?v0 . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . }","```sparql
SELECT ?administration ?country WHERE {
  # Find administration related to Philip Brian Scott who is a soccer player
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://xmlns.com/foaf/0.1/name> ""Philip Brian Scott"" .
  OPTIONAL { ?person <http://dbpedia.org/property/administration> ?administration . }

  # Find country associated with the 2022 Vermont House of Representatives election
  <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?country .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
666,12,val,Give me the player in Steve Bruce and figure known as the nickname of England national beach soccer team.,SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v0 . <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  # Step 1: Find players managed by Steve Bruce
  ?player <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Steve_Bruce> .
  
  # Step 2: Find nicknames of the England national beach soccer team
  OPTIONAL { 
    ?team <http://dbpedia.org/property/nickname> ?nickname .
    FILTER(?team = <http://dbpedia.org/resource/England_national_beach_soccer_team>)
  }
  
  # Step 3: Check if player is associated with any nickname of the England team
  OPTIONAL {
    ?player <http://dbpedia.org/ontology/kindOf> ?nickname .
  }

  FILTER(?nickname != """")
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
994,23,val,Give me the associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?finalArtist WHERE {
  ?watchtower <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalArtist .
}
```",3,3,4,3,1,3,3,71,16,34316,0,0.0004660375160200396,1.0,0.0009316408524513798
701,33,val,Give me the parent of Meritamen and parent of the child of the child of Seti I.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
# Query to find the parent of Meritamen
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?parent .
}

UNION

# Query to find the parent of the child of the child of Seti I
SELECT ?grandchildParent WHERE {
  # Find children of Seti I
  <http://dbpedia.org/resource/Seti_I> <http://dbpedia.org/ontology/child> ?child .
  
  # Find grandchildren (children of Seti I's children)
  ?child <http://dbpedia.org/ontology/child> ?grandchild .

  # Find the parent of those grandchildren
  ?grandchild <http://dbpedia.org/ontology/parent> ?grandchildParent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
285,13,val,Give me the parent of the child of the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT ?parent WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> .
  ?child <http://dbpedia.org/ontology/birthParent> ?spouse .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",3,3,4,3,1,3,2,20,0,0,5,0,0.0,0
994,35,val,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?bandMember WHERE {
  # Step 1: Identify Donald Maynard Dokken as a musical artist
  ?dokken <http://dbpedia.org/ontology/birthName> ""Donald Maynard Dokken"" .
  ?dokken <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Step 2: Find band members associated with Donald Maynard Dokken
  ?bandMember <http://dbpedia.org/ontology/memberOfBand> ?dokken .
  
  # Step 3: Identify associated musical artists of Watchtower (band)
  ?watchtower <http://dbpedia.org/resource/Watchtower_(band)> .
  ?associatedArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtower .

  # Step 4: Find associated musical artists of those identified in step 3
  ?finalResult <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  
  FILTER(?bandMember = ?finalResult)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
328,36,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and awardee of Order of Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?finalLeader WHERE {
  # Step 1: Identify Gustav Jonson's leader who is both an office holder and a politician.
  ?gustavLeader <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Gustav_Jonson> .
  ?gustavLeader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
                <http://dbpedia.org/ontology/politician> true .

  # Step 2: Determine which government agency this leader leads.
  ?gustavLeader <http://dbpedia.org/ontology/officesHeld> ?office .
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .

  # Step 3: Find the leader of that government agency.
  ?agencyLeader <http://dbpedia.org/ontology/leader> ?office .
  
  # Additional condition: The leader must be an awardee of the Order of Suvorov.
  ?agencyLeader <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Order_of_Suvorov> .

  BIND(?agencyLeader AS ?finalLeader)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
312,7,val,"Give me the entity in Italy and entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
SELECT ?settlement ?region WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Italy> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
  ?entity <http://dbpedia.org/ontology/administrativeUnit> <http://dbpedia.org/resource/Democratic_Party_(Italy)> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  FILTER(LANG(?label) = ""it"") # Ensures the label is in Italian
  BIND(?entity AS ?settlement)
  ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
  ?region <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Italy> .
}
```",3,7,4,2,2,2,2,9,0,0,587,0,0.0,0
747,27,val,Give me the band of the person born as the persona of Shèna.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Shèna"" .
  ?person <http://dbpedia.org/property/memberOf> ?band .
}
```",3,3,4,3,1,3,3,71,0,0,8,0,0.0,0
391,44,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus and native of Compton, California.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT DISTINCT ?actor WHERE {
  # Find a movie that is a Movie, Work, and TelevisionShow with Roz Ryan as an actor
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .

  # Find Michael Ballhaus's claim to fame
  <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/property/claimToFame> ?fame .
  ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .

  # Find an actor common to both the movie and Michael Ballhaus's claim to fame
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?fame <http://dbpedia.org/ontology/starring> ?actor .

  # Ensure the actor is native to Compton, California
  ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ""Compton, California""@en .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
232,18,val,Give me the native of London and child of Jon Pertwee and actor of Dog Soldiers (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> .
  ?person <http://dbpedia.org/ontology/familyName> ?familyName .
  ?child <http://dbpedia.org/ontology/familyName> ?familyName .
  ?child <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jon_Pertwee> .
  FILTER(?person = ?child) .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
  ?actor <http://dbpedia.org/property/filmography> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .
  FILTER(?person = ?actor)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
547,27,val,Give me the resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/ontology/award> ?award .
  ?recipient <http://dbpedia.org/ontology/award> ?award .
  ?recipient <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
}
```",3,3,4,3,1,3,3,71,704,195,0,0.7830923248053393,1.0,0.8783530879600748
16,19,val,Give me the spouse of the person born as Ted Martin McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""actress""))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
285,15,val,Give me the spouse of Aristotle Onassis and parent of the child of the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT DISTINCT ?parent WHERE {
  # Step 1: Find spouses of Aristotle Onassis
  <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?spouse .
  
  # Step 2: For each spouse, find their children
  ?spouse <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Determine the parent of these children
  ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",4,4,5,3,2,3,2,20,2,3,0,0.4,1.0,0.5714285714285715
696,12,val,Give me the birth place of Tim Brennan and landmark at elevation of the award of Nie Rongzhen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
# Query 1: Find the birthplace of Tim Brennan
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

UNION

# Query 2: Find landmarks at elevation related to an award of Nie Rongzhen
SELECT ?landmark WHERE {
  ?award <http://dbpedia.org/property/recipient> <http://dbpedia.org/resource/Nie_Rongzhen> .
  ?award <http://dbpedia.org/ontology/elevation> ?elevation .
  ?landmark <http://dbpedia.org/ontology/elevation> ?elevation .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
328,37,val,Give me the leader of People's Commissariat of Defense of the Soviet Union and commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> .
  ?person <http://dbpedia.org/ontology/commander> ?force .
  ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
  ?force <http://dbpedia.org/ontology/member> ?decedent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
356,12,val,"Give me the player in 2015 Sacramento Republic FC season and team of the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?result <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
SELECT ?player WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
  
  ?team <http://dbpedia.org/property/nationality> ?person .
  
  ?season <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> .
  ?season <http://dbpedia.org/ontology/player> ?player .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
492,18,val,Give me the commander in Franco-Hova Wars and person decedent at French Algeria and person decedent at Algiers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
SELECT ?commander WHERE {
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://www.w3.org/2000/01/rdf-schema#label> ""Franco-Hova Wars""@en .

  FILTER EXISTS { 
    ?commander <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
  }
  
  FILTER EXISTS {
    ?commander <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Algiers> .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
55,14,val,"Give me the band member of Guns N' Roses and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT DISTINCT ?member WHERE {
  # Step 1: Find band members of Guns N' Roses
  <http://dbpedia.org/resource/Guns_N%27_Roses> <http://dbpedia.org/ontology/member> ?gnrMember .

  # Step 2: For each member, find other bands they are part of
  ?gnrMember <http://dbpedia.org/ontology/member> ?secondaryBand .
  
  # Step 3: Ensure the secondary band is both a Band and a Group
  ?secondaryBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> ;
                 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .

  # Step 4: Check if the secondary band has a relationship with San Francisco Symphony
  ?secondaryBand <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/San_Francisco_Symphony> .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
16,30,val,Give me the person born as the birth name of Gigi Rice and professional in Actress and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Gigi Rice"" .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Category:Actresses> .
  ?person <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
92,44,val,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of the person born as Joseph Michael Furney and band member of Nevermore.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
# Find Jim Sheppard who is an artist
SELECT ?jim WHERE {
  ?jim <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
  ?jim <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}

# Find associated musical artist of Jim Sheppard
SELECT DISTINCT ?artist WHERE {
  VALUES ?jim { ?jim }
  ?band <http://dbpedia.org/property/member> ?jim .
  ?band <http://dbpedia.org/ontology/musicalArtist> ?artist .
}

# Find band member of Nevermore born as Joseph Michael Furney
SELECT DISTINCT ?jeff WHERE {
  ?jeff <http://dbpedia.org/ontology/birthName> ""Joseph Michael Furney"" .
  ?jeff <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?band <http://dbpedia.org/property/member> ?jeff .
  ?band <http://dbpedia.org/resource/Nevermore_(band)> .
}

# Find the band associated with both Jim Sheppard and Jeff Loomis
SELECT DISTINCT ?commonBand WHERE {
  VALUES ?jim { ?jim }
  VALUES ?jeff { ?jeff }
  
  # Band for Jim Sheppard
  ?band1 <http://dbpedia.org/property/member> ?jim .
  
  # Band for Jeff Loomis
  ?band2 <http://dbpedia.org/property/member> ?jeff .
  
  FILTER (?band1 = ?band2)
  BIND(?band1 AS ?commonBand)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
404,23,val,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?birthName .
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,4,4,3,1,3,3,71,1,0,0,1.0,1.0,1.0
161,40,val,"Give me the commander in Biscay Campaign and military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?commander ?militaryForce ?event WHERE {
  # Step 1: Find commanders of the Biscay Campaign
  <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?commander .

  # Step 2: Check if these commanders were part of military forces in the Spanish Civil War
  ?commander <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .

  # Step 3: Find if these military forces are associated with societal events that are also events and military conflicts
  ?militaryForce <http://dbpedia.org/ontology/event> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?eventType .
  
  FILTER (?eventType IN (<http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/MilitaryConflict>)).
  
  # Step 4: Ensure the event is related to Francoist Spain
  ?event <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Francoist_Spain> .

  # Find decedent at Francoist Spain
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> .
    ?commander <http://dbpedia.org/ontology/decedent> ?person .
  }
}
```",5,8,6,3,3,3,3,71,0,0,3,0,0.0,0
184,19,val,Give me the parent of the native of Budapest and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
SELECT ?person ?parent WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?person .
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
  ?person <http://dbpedia.org/ontology/parent> ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
303,14,val,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Guillermo Endara.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?entity WHERE {
  # Find the country of El Valle de Antón
  <http://dbpedia.org/resource/El_Valle_de_Antón> <http://www.w3.org/2000/01/rdf-schema#location> ?country .
  
  # Ensure the location is a country
  ?country <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Find entities in that country related to Guillermo Endara's party
  ?entity <http://www.w3.org/2000/01/rdf-schema#location> ?country .
  ?entity <http://dbpedia.org/property/politicalParty> ?party .
  
  # Ensure the party is associated with Guillermo Endara
  ?party <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Guillermo_Endara> .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
645,12,val,Give me the alma mater of the child of Richard Pankhurst and entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?child <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ""United Kingdom"" .
  <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?child .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
701,22,val,Give me the spouse of the father of Merneptah and parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Merneptah> .
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Meritamen> .
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
492,43,val,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at French Algeria and person decedent at Algiers.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
SELECT ?commanderInWar WHERE {
  # Step 1: Find the commander in the Battle of Verdun
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?verdunCommander .

  # Step 2: Determine wars involving this commander
  ?verdunCommander <http://dbpedia.org/ontology/battle> ?war .
  
  # Step 3: Find commanders who were decedents at French Algeria and Algiers
  ?decedentCommander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
                     <http://dbpedia.org/property/deathPlace> ?deathPlace .
  
  FILTER (?deathPlace IN (<http://dbpedia.org/resource/French_Algeria>, <http://dbpedia.org/resource/Algiers>)).
  
  # Ensure the decedent commander is also a commander in one of the wars
  ?decedentCommander <http://dbpedia.org/ontology/battle> ?war .
  
  # Step 4: Find the war that is both a military conflict and an event
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/MilitaryConflict>, <http://dbpedia.org/ontology/Event>)).
  
  # Return the commander involved in this war
  ?war <http://dbpedia.org/ontology/commander> ?commanderInWar .
}
```",5,7,6,3,3,3,3,71,0,42,1,0.0,0.0,0
77,13,val,Give me the war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/ontology/award> ?award .
  ?award <http://dbpedia.org/property/reason> ?reason .
  ?reason <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?reason AS ?result)
}
```",3,3,4,3,1,3,2,20,0,0,436,0,0.0,0
701,44,val,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah and parent of Meritamen.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ramesses_II> .
  ?child <http://dbpedia.org/property/spouse> ?merneptahFather .
  ?merneptahFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Merneptah> .
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Meritamen> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
801,42,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of The Shadow and producer of Westside Story (song).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?associatedArtist WHERE {
  ?person <http://dbpedia.org/ontology/wrote> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
  ?person <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Westside_Story_(song)> .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""The Shadow""@en .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
328,21,val,"Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . }","```sparql
SELECT ?leader WHERE {
  ?leader <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> .
  ?leader <http://dbpedia.org/property/awards> ?award .
  ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Award> ;
         <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,37,val,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Get the claim to fame of Sherry Hormann's spouse that is a work
SELECT ?work WHERE {
  ?spouse <http://purl.org/dc/terms/subject> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
}

# Step 3: Find the actor of ""All About the Andersons""
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 4: Combine results to find common actors
SELECT DISTINCT ?commonActor WHERE {
  # Assuming we have the spouse's work from step 2 and actor from step 3
  VALUES (?work) { (URI_of_the_work_from_step_2) }
  VALUES (?andersonsActor) { (URI_of_actor_from_All_About_the_Andersons) }

  ?work <http://dbpedia.org/ontology/starring> ?commonActor .
  FILTER(?commonActor = ?andersonsActor)
}
```

Note: Replace `URI_of_the_work_from_step_2` and `URI_of_actor_from_All_About_the_Andersons` with the actual URIs obtained from executing steps 1-3.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
365,7,val,"Give me the band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter and reference to The Blasters.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/profession> ?role .
  FILTER(?role IN (<http://dbpedia.org/ontology/Artist>, <http://dbpedia.org/ontology/MusicalArtist>)).
  ?person <http://dbpedia.org/property/vocals> ""vocalist"" .
  ?person <http://dbpedia.org/ontology/musicalArtist> ""musician"" .
  ?person <http://dbpedia.org/ontology/songwriter> ""songwriter"" .
  ?person <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/The_Blasters> .
  ?person <http://dbpedia.org/property/band> ?band .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
339,14,val,Give me the father of the child of the parent of Princess Olga of Greece and Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
SELECT ?father WHERE {
  # Step 1: Identify the parents of Princess Olga
  <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother> ?parent .

  # Step 2: Find children (siblings) of the parent(s)
  ?sibling <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother> ?parent .
  
  # Step 3: Identify the father of one of these siblings
  ?sibling <http://dbpedia.org/ontology/father> ?father .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
360,18,val,Give me the reference to the author of Blinded by the Light and native of Johannesburg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?author WHERE {
  ?author <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> .
  ?author <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Blinded_by_the_Light_(song)> .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
345,11,val,Give me the figure known as the nickname of FC Vaduz and team of Alessandro Mangiarratti.,SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . ?result <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
SELECT ?figure WHERE {
  # Find the nickname of FC Vaduz
  <http://dbpedia.org/resource/Football_Club_Vaduz> <http://dbpedia.org/ontology/nickname> ?nickname .
  
  # Find the team associated with Alessandro Mangiarratti
  <http://dbpedia.org/resource/Alessandro_Mangiarratti> <http://dbpedia.org/ontology/team> ?team .

  # Check if the nickname and the team are the same figure
  FILTER(?nickname = ?figure)
  OPTIONAL { ?team ?p ?figure }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
303,15,val,"Give me the party of the commander, that is a politician, in United States invasion of Panama and party of Arnulfo Arias.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Part 1: Find the party of a commander (who is also a politician) in the United States invasion of Panama
SELECT DISTINCT ?party WHERE {
  # Find commanders who are politicians involved in the United States invasion of Panama
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/United_States_invasion_of_Panama> .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  
  # Get the political party of these commanders
  ?commander <http://dbpedia.org/property/politicalParty> ?party .
}

UNION

# Part 2: Find the party of Arnulfo Arias
SELECT DISTINCT ?party WHERE {
  <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/property/politicalParty> ?party .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
391,18,val,"Give me the actor of The Departed and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
SELECT ?actor WHERE {
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/The_Departed> .
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/All_About_the_Andersons> .
  ?actor <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
465,7,val,Give me the administration of Czech Pirate Party and death place of the native of Prague.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
SELECT ?result WHERE {
  # Query for the administration of Czech Pirate Party
  {
    <http://dbpedia.org/resource/Czech_Pirate_Party> <http://dbpedia.org/ontology/administration> ?result .
  }
  
  UNION
  
  # Query for death place of a native of Prague
  {
    ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> .
    ?person <http://dbpedia.org/ontology/deathPlace> ?result .
  }
}
```",3,3,4,2,2,2,2,9,1,253,0,0.003937007874015748,1.0,0.00784313725490196
92,27,val,Give me the band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
  ?person <http://dbpedia.org/property/memberOfBand> ?band .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
392,18,val,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of Central European Time.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
SELECT DISTINCT ?province WHERE {
  # Find Sebastiano Bianchetti's residence that is a settlement in Italy
  <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .

  # Find the province of this residence
  ?residence <http://dbpedia.org/ontology/province> ?province .

  # Identify regions under Central European Time (CET)
  ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> .
  
  # Ensure the province is within a region that uses CET
  ?province <http://dbpedia.org/ontology/partOfRegion> ?region .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
626,14,val,Give me the awardee of the award of the military force of Battle of Borodino.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?awardee WHERE {
  ?award <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> .
  ?award <http://dbpedia.org/property/awardedByMilitaryForce> ?militaryForce .
  ?award <http://purl.org/dc/terms/creator> ?awardee .
}
```",3,3,4,3,1,3,2,20,0,0,7855,0,0.0,0
392,17,val,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and province of Schio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
SELECT ?region WHERE {
  ?aguilarTimeZone <http://dbpedia.org/ontology/timeZone> ?aguilar .
  ?schioTimeZone <http://dbpedia.org/ontology/timeZone> ?schio .
  
  ?aguilar rdfs:label ""Aguilar de Segarra""@en.
  ?schio rdfs:label ""Province of Schio""@en.

  ?event <http://dbpedia.org/ontology/timeZone> ?aguilarTimeZone ;
         <http://dbpedia.org/ontology/timeZone> ?schioTimeZone .
  
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent> .

  ?event <http://dbpedia.org/ontology/location> ?location .
  ?location <http://dbpedia.org/ontology/administrativeRegion> ?region .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
328,31,val,Give me the commander in Eastern Front (World War II) and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?commander WHERE {
  # Commanders in Eastern Front (World War II)
  <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?commander .

  # Commanders in Volcano and Ryukyu Islands campaign
  <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?commander .

  # Awardees of the specific award related to the Volcano and Ryukyu Islands campaign
  ?commander <http://dbpedia.org/property:award> ?award .
  ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Award_for_Volcano_and_Ryukyu_Islands_campaign> .
}
```",4,4,5,3,2,3,3,71,0,0,5,0,0.0,0
55,19,val,"Give me the band member of Metallica and band of Newsted and band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
# Step 1: Find a band member of Metallica
SELECT ?metallicaMember WHERE {
  <http://dbpedia.org/resource/Metallica> <http://dbpedia.org/ontology/member> ?metallicaMember .
}

# Step 2: Confirm Newsted's association with Metallica
SELECT ?newstedBand WHERE {
  <http://dbpedia.org/resource/Jeff_Newsted> <http://dbpedia.org/ontology/memberOfBand> ?newstedBand .
}

# Step 3: Find the producer of ""Used to Love Her""
SELECT ?producer WHERE {
  <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?producer .
}

# Step 4: Identify bands that this producer is a member of
SELECT ?band WHERE {
  ?producer <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
528,43,val,Give me the war of Irene Morales and war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT DISTINCT ?warIrene ?warCommander ?forceNarciso WHERE {
  # War of Irene Morales
  OPTIONAL {
    ?irene <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Irene_Morales> .
    ?irene <http://dbpedia.org/ontology/battle> ?battleIrene .
    ?battleIrene <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    BIND(?battleIrene AS ?warIrene)
  }

  # War of the Commander in the Work of --01-09
  OPTIONAL {
    ?work <http://purl.org/dc/terms/date> ""--01-09"" ;
          <http://dbpedia.org/ontology/battle> ?battleCommander .
    ?battleCommander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?battleCommander <http://dbpedia.org/ontology/commander> ?commander .
    BIND(?battleCommander AS ?warCommander)
  }

  # Force of Narciso Campero
  OPTIONAL {
    ?narciso <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Narciso_Campero> .
    ?narciso <http://dbpedia.org/ontology/militaryForce> ?forceNarciso .
  }
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
184,27,val,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?grandparent WHERE {
  # Step 1: Identify the parent of Archduchess Margaret of Austria (born 1925)
  <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> <http://dbpedia.org/ontology/father> ?parent .
  
  # Step 2: Find the child of that parent
  ?parent <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Determine the parent of this child
  ?child <http://dbpedia.org/ontology/father> ?grandparent .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
281,28,val,Give me the entity in Colony of New Zealand and war of New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Entity related to Colony of New Zealand
  ?entity <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
  
  # Wars involving the New Zealand Army
  ?nzWar <http://dbpedia.org/ontology/army> <http://dbpedia.org/resource/New_Zealand_Army> .
  
  # Entity involved in wars of the New Zealand Army
  ?entity <http://dbpedia.org/ontology/battle> ?nzWar .

  # Awardee of Knight Grand Cross of the Order of the Bath
  ?awardee <http://dbpedia.org/property/orderOfTheBath> ""Knight Grand Cross"" .
  
  # Entity is the awardee
  ?entity = ?awardee .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
767,43,val,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to  and entity in Baden-Württemberg.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?almaMater WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  OPTIONAL {
    ?administration <http://dbpedia.org/ontology/administrationOf> <http://dbpedia.org/resource/George_Kilbon_Nash> .
    ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  OPTIONAL {
    ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Baden-Württemberg> .
    ?entity <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
783,15,val,Give me the band member of Ebony Reigns and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . }","```sparql
SELECT ?bandMember ?associatedArtist WHERE {
  # Step 1: Identify the person born as Samuel Ofori Amponsah
  ?person <http://dbpedia.org/ontology/birthName> ""Samuel Ofori Amponsah"" .
  
  # Step 2: Find band members associated with this individual
  ?bandMember <http://dbpedia.org/ontology/memberOfBand> ?person .

  # Step 3 & 4: Check if these band members are associated with Ebony Reigns and find their musical artists
  OPTIONAL {
    ?bandMember <http://dbpedia.org/property/associatedMusicalArtist> ""Ebony Reigns"" .
  }
  
  OPTIONAL {
    ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
485,15,val,"Give me the entity in the region, that is a country, of Western European Time and entity in Nottinghamshire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
# Query for entities in regions classified as countries under Western European Time
SELECT ?entity WHERE {
  ?wet <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Western_European_Time> .
  ?wet <http://dbpedia.org/ontology/location> ?region .
  ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?entity <http://dbpedia.org/ontology/location> ?wet .
}

UNION

# Query for entities located in Nottinghamshire
SELECT ?entity WHERE {
  ?nottinghamshire <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/County> .
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nottinghamshire> .
}
```",3,4,4,2,2,2,3,28,0,0,357,0,0.0,0
659,32,val,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
SELECT ?commander WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  ?commander <http://dbpedia.org/ontology/commanderOfMilitaryUnit> <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> .
  ?commander <http://dbpedia.org/ontology/commanderOfMilitaryForce> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .

  ?war <http://dbpedia.org/ontology/participant> ?commander .
}
```",4,6,5,2,2,3,3,71,0,0,71,0,0.0,0
701,21,val,Give me the spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?spouse .
  
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/birthParent> ?spouse .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
    ?child <http://dbpedia.org/resource/Nefertari> .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,28,val,Give me the native of the figure known as Hub City and actor of All About the Andersons and actor of The Departed.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?native WHERE {
  ?person <http://dbpedia.org/ontology/nickName> ""Hub City"" .
  ?person <http://dbpedia.org/ontology/actedIn> <http://dbpedia.org/resource/All_About_the_Andersons> .
  ?person <http://dbpedia.org/ontology/actedIn> <http://dbpedia.org/resource/The_Departed> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?native .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,38,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commander WHERE {
  # Step 1: Identify the capital of Algeria
  <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/administrativeCapital> ?capital .
  
  # Step 2: Find the person who died in that capital city (decedent)
  ?person <http://dbpedia.org/ontology/deathPlace> ?capital ;
           <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  
  # Step 3 & 4: Determine the military conflict associated with Frédéric-Georges Herr and the decedent
  OPTIONAL { 
    <http://dbpedia.org/resource/Fr%C3%A9d%C3%A9ric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  }
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  }

  # Ensure the war is both a military conflict and an event
  FILTER (?type = <http://dbpedia.org/ontology/MilitaryConflict> && 
          EXISTS { ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> } )

  # Step 5: Find the commander involved in this specific war
  ?war <http://dbpedia.org/ontology/commander> ?commander .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
427,21,val,Give me the party of Romano Prodi and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?party ?reference WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?party .
  OPTIONAL { 
    ?party <http://www.w3.org/2004/02/skos/core#altLabel> ""Italian People's Party (1994)""@en .
    ?reference <http://www.w3.org/2002/07/owl#sameAs> ?party .
  }
}
```",3,3,4,2,2,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
659,20,val,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in German campaign of 1813.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?commander WHERE {
  # Find commanders associated with the regiment's battles/events that are classified as military conflicts
  { 
    <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
  }
  
  UNION
  
  # Find commanders involved in the German campaign of 1813
  {
    <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?commander .
  }

  # Ensure that the commander is part of both sets
  FILTER EXISTS { 
    <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
  }
  
  FILTER EXISTS {
    <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?commander .
  }
}
```",3,5,4,2,2,3,3,71,30,0,0,1.0,1.0,1.0
294,16,val,"Give me the resting place of Luke Lea (American politician, born 1879) and entity in the birth place, that is a settlement, of Marion James.","SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
# Query for the resting place of Luke Lea (American politician, born 1879)
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Luke_Lea_(politician)> <http://dbpedia.org/ontology/finalRestingPlace> ?restingPlace .
}

UNION

# Query for an entity in the birth place of Marion James that is a settlement
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?entity <http://dbpedia.org/property/location> ?birthPlace .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
54,29,val,Give me the parent of the child of Narapati I of Ava and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of Thinkhaya of Pagan.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify the child of Narapati I of Ava
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Narapati_I_of_Ava> .

  # Step 2: Find who is both a predecessor and a child
  ?individual ?predecessorProperty <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
  ?individual <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .

  # Ensure the individual is the same as the child from Step 1
  FILTER (?child = ?individual)

  # Step 3: Find the parent of this individual
  ?parent <http://dbpedia.org/ontology/birthParent> ?individual .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
528,25,val,Give me the force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
# Query for the force of Narciso Campero Leyes
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/militaryForce> ?force .
}

# Query for the war of Orozimbo Barbosa
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,42,val,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and manager of the team of Takashi Sekizuka and native of Japan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?member WHERE {
  # Step 1: Identify Eiji Ōtsuka's alma mater that is Japanese, an organization, a university, and an educational institution.
  <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  
  # Ensure the alma mater is Japanese, an organization, a university, and an educational institution
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> ;
             <http://dbpedia.org/ontology/EducationalOrganization> ;
             <http://dbpedia.org/ontology/University> .
  ?almaMater <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> .

  # Step 2: Find members of this alma mater
  ?member <http://dbpedia.org/ontology/alumniOf> ?almaMater .

  # Step 3: Ensure the member is a manager of a team associated with Takashi Sekizuka and native to Japan
  ?team <http://dbpedia.org/ontology/teamManager> ?member .
  ?team <http://dbpedia.org/property/teamMember> <http://dbpedia.org/resource/Takashi_Sekizuka> .

  ?member <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .
}
```",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
328,23,val,Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?awardee WHERE {
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .
  ?commander <http://dbpedia.org/property/receivedAward> ?award .
  ?award <http://dbpedia.org/ontology/awardee> ?awardee .
}
```",3,3,4,3,1,3,3,71,0,0,13262,0,0.0,0
701,41,val,Give me the parent of the child of Ramesses II and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?person WHERE {
  # Condition 1: The person is a child of Ramesses II.
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/child> ?person .

  # Condition 2: The person is a spouse of Ramesses II.
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/property/spouse> ?person .

  # Condition 3: The person is a parent of a child of Nefertari.
  ?child <http://dbpedia.org/ontology/parent> ?person .
  <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?child .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
488,26,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  # Step 1: Identify Matsudaira Tadamasa's father who holds an office
  <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .

  # Step 2: Identify the father's father who is a politician
  ?father <http://dbpedia.org/ontology/father> ?grandfather .
  ?grandfather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 3: Find the death place of this grandfather
  ?grandfather <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
161,26,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?result WHERE {
  ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?result .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  FILTER(?predecessor = ?event)
}
```",3,5,4,3,1,3,3,71,0,0,514,0,0.0,0
666,15,val,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach) and figure known as The Three Lions.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. }","```sparql
SELECT ?player WHERE {
  # Step 1: Find the team Leonid Slutsky managed
  ?teamSeason <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky> .
  
  # Step 2: Ensure it's a soccer club and sports team season
  ?teamSeason <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason> ;
              <http://dbpedia.org/ontology/team> ?soccerClub .
  ?soccerClub <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .

  # Step 3: Find the team known as ""The Three Lions""
  OPTIONAL {
    ?englandTeam <http://dbpedia.org/resource/The_Three_Lions> .
    ?englandTeam <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason> ;
                 <http://dbpedia.org/ontology/team> ?soccerClubEng .
  }

  # Step 4: Find players in the team managed by Leonid Slutsky
  ?teamSeason <http://dbpedia.org/ontology/player> ?player .
}
```",4,7,5,3,2,3,2,20,0,0,2,0,0.0,0
547,28,val,Give me the resting place of Alan Cunningham and resting place of Simon Cadell and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  { 
    <http://dbpedia.org/resource/Alan_Cunningham_(British_Army_officer)> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Alan_Cunningham_(British_Army_officer)> AS ?person)
  }
  UNION
  { 
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Simon_Cadell> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
    BIND(?child AS ?person)
  }
}
```",4,4,5,2,3,3,3,71,1,5,0,0.16666666666666666,1.0,0.2857142857142857
16,24,val,Give me the professional in the profession of Satomi Ishihara and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
SELECT ?professional WHERE {
  # Find Satomi Ishihara's profession
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?profession .

  # Find Georgeanne Marie Rice's birth name
  OPTIONAL { 
    ?rice <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice"" .
  }

  # Find a professional who matches both criteria
  ?professional <http://dbpedia.org/ontology/profession> ?profession .
  ?professional <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice"" .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
485,16,val,"Give me the entity in United Kingdom and entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?ukEntity ?birthPlaceRegion WHERE {
  # Find the birth place of Joseph Whitaker that is a region
  <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
  
  # Find an entity in the United Kingdom
  ?ukEntity <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/United_Kingdom> .
}
```",3,4,4,2,2,2,3,28,0,12,357,0.0,0.0,0
712,15,val,"Give me the resting place of Nina Onilova and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?restingPlace ?capital WHERE {
  # Step 1: Find resting place of Nina Onilova
  <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .

  # Step 2: Identify military force involved in Vyoshenskaya Uprising
  ?militaryForce <http://dbpedia.org/property/event> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .

  # Step 3: Find country of the military force
  ?militaryForce <http://dbpedia.org/property/country> ?country .

  # Step 4: Get capital of the country
  ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
378,19,val,Give me the war of the person born as Carl Pontus Gahn and war of Joaquín Blake.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
SELECT ?person ?war WHERE {
  { 
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
  }
  UNION
  {
    <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?war .
  }
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",3,3,4,2,2,3,3,71,2,9,0,0.18181818181818182,1.0,0.3076923076923077
617,39,val,Give me the spouse of Laodice IV and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?spouse .
}

WITH RESULT SETS ((?spouse AS ?Spouse))

SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
328,25,val,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?commander WHERE {
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
  ?office <http://dbpedia.org/property/leader> ?commander .
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?office <http://dbpedia.org/property/ministerOf> <http://dbpedia.org/resource/Joseph_Stalin> .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
827,12,val,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894) and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . }","```sparql
SELECT ?father WHERE {
  ?charlesAugustus <http://dbpedia.org/ontology/birthName> ""Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894)"" .
  ?child <http://dbpedia.org/ontology/father> ?charlesAugustus ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?child <http://dbpedia.org/ontology/father> ?father .
  ?charlesAlexander <http://dbpedia.org/ontology/birthName> ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach"" .
  ?child <http://dbpedia.org/ontology/father> ?charlesAlexander .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
492,24,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?war WHERE {
  ?herr <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
  ?herr <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?war <http://dbpedia.org/ontology/commander> ?herr ;
       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>, <http://dbpedia.org/ontology/Event> .
}
```",3,5,4,2,2,3,3,71,0,19,1,0.0,0.0,0
179,11,val,Give me the parent of Ubol Ratana and person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Find the parent of Ubol Ratana
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/familyName> ?parent .
}

UNION

# Find a person born with the birth name Sirikit
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Sirikit"" .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
427,40,val,Give me the party of Giulio Andreotti and reference to the name of the party of Michele Pinto and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?andreottiParty ?pintoParty ?prodiParty WHERE {
  <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/politicalParty> ?andreottiParty .
  
  OPTIONAL { 
    ?andreottiParty <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?pintoParty .
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/politicalParty> ?pintoParty .
  }
  
  OPTIONAL { 
    ?andreottiParty <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?prodiParty .
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?prodiParty .
  }
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
747,35,val,Give me the person born on the birth date of Pavlo Khudzik and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . }","```sparql
# Query for a person born on the same date as Pavlo Khudzik
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?person <http://dbpedia.org/ontology/birthDate> ?sameBirthDate .
  FILTER (?birthDate = ?sameBirthDate)
}

# Query for the band associated with Tracey Elizabeth McSween
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Tracey_Elizabeth_McSween> <http://dbpedia.org/ontology/band> ?band .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
92,43,val,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of Joseph Michael.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
SELECT ?person ?associatedArtist WHERE {
  # Step 1: Find the person who acted in ""Return to Nuke 'Em High Volume 1"" and is a band member of Nevermore
  <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/ontology/starring> ?person .
  ?person <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nevermore_(band)> .

  # Step 2: Ensure this person is a band member of Joseph Michael
  ?person <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> .

  # Step 3: Retrieve associated musical artists for this person
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
701,24,val,Give me the parent of the child of Ramesses II and spouse of Ramesses II.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ramesses_II> .
  ?child <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Female> .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,23,val,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. }","```sparql
SELECT ?almaMater WHERE {
  ?person <http://dbpedia.org/ontology/birthYear> ""1958"" .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
             <http://dbpedia.org/ontology/EducationalOrganization> ;
             <http://dbpedia.org/ontology/University> .
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER (CONTAINS(LCASE(?label), ""japan"") || CONTAINS(LCASE(?label), ""japanese""))
}
```",3,7,4,3,1,3,3,71,0,0,524,0,0.0,0
251,19,val,"Give me the administration of Forza Italia (2013) and death place of Laura Mancinelli and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v2 <http://dbpedia.org/ontology/place> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?administration ?deathPlace ?warLocation WHERE {
  # Administration of Forza Italia (2013)
  <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?administration .

  # Death place of Laura Mancinelli
  <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .

  # Location of the war involving Louis François Félix Musnier
  OPTIONAL {
    ?musnier <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?battle <http://dbpedia.org/ontology/location> ?warLocation .
  }
  
  # Ensure Musnier is linked to the correct entity
  FILTER(?musnier = <http://dbpedia.org/resource/Louis_François_Félix_Musnier>)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
547,26,val,Give me the resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace WHERE {
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/E._G._Richard> .
  ?actor <http://dbpedia.org/ontology/starring> ?show .
  ?actor <http://dbpedia.org/property/restingPlace> ?restingPlace .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
314,13,val,Give me the person deceased at the headquarter of House of Sombrerete and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/House_of_Sombrerete#Headquarters> .
  ?person <http://dbpedia.org/property/awardeeOf> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,19,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  # Step 1: Find the spouse of Laodice IV
  <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Find children of Seleucus II Callinicus who are royalty
  ?childOfSeleucus <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
  ?childOfSeleucus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find grandchildren of Seleucus II Callinicus who are royalty
  ?grandChild <http://dbpedia.org/ontology/birthParent> ?childOfSeleucus .
  ?grandChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the child of Laodice IV that matches one of these grandchildren
  ?childOfLaodiceIV <http://dbpedia.org/ontology/birthParent> ?spouse .
  ?childOfLaodiceIV = ?grandChild .
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
16,39,val,Give me the person born as the birth name of the alumnus of Ohio State University and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Ohio_State_University> .
  ?person <http://purl.org/dc/terms/profession> <http://dbpedia.org/resource/Category:American_actresses> .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  FILTER(CONTAINS(LCASE(?name), ""actress""))
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
528,31,val,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?war WHERE {
  # Part 1: Societal event in Chile involved in a military force
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Chile> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce1 .
  
  # Part 2: Orozimbo Barbosa's military force
  OPTIONAL {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/militaryForce> ?militaryForce2 .
  }
  
  # Find wars for both military forces
  ?militaryForce1 <http://dbpedia.org/property/war> ?war .
  OPTIONAL { ?militaryForce2 <http://dbpedia.org/property/war> ?war . }
}
```",4,5,5,3,2,3,3,71,0,0,9,0,0.0,0
659,28,val,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in Battle of Leipzig and military force of Napoleonic Wars.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
SELECT ?commander WHERE {
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Leipzig> .
  ?commander <http://dbpedia.org/ontology/militaryForce> <http://dbpedia.org/resource/Napoleonic_Wars> .
}
```",4,4,5,2,3,3,3,71,0,0,5,0,0.0,0
9,22,val,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result .
  OPTIONAL { ?result <http://www.w3.org/2000/01/rdf-schema#label> ?nickname . }
  FILTER(CONTAINS(LCASE(?nickname), ""queen's university belfast""))
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
281,27,val,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT DISTINCT ?war WHERE {
  ?person <http://dbpedia.org/ontology/profession> ?militaryUnit .
  ?militaryUnit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?militaryUnit <http://dbpedia.org/property/country> <http://dbpedia.org/resource/New_Zealand> .
  
  ?person <http://www.w3.org/ns/prov#hadRole> ?officeHolderRole .
  ?officeHolderRole <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/OfficeHolder108930069> .

  ?person <http://dbpedia.org/ontology/politicalPartyMember> ?party .
  
  ?person <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",3,6,4,3,1,3,3,71,0,0,14,0,0.0,0
392,13,val,"Give me the entity in the region, that is a country, of Central European Time and region of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/country> ?country .
  ?country <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}
```",3,4,4,2,2,2,3,28,0,0,28787,0,0.0,0
360,12,val,Give me the writer of The Roaring Silence and native of Johannesburg and reference to Manfred Mann.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . }","```sparql
SELECT ?writer WHERE {
  ?writer <http://dbpedia.org/ontology/writtenWork> <http://dbpedia.org/resource/The_Roaring_Silence> .
  ?writer <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> .
  ?writer <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Manfred_Mann> .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
161,24,val,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
SELECT ?commander ?force WHERE {
  # Step 1: Find the commander in the Biscay Campaign
  <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?commander .

  # Step 2: Determine the military force associated with that commander
  ?commander <http://dbpedia.org/property/militaryForce> ?force .

  # Step 3 and 4: Ensure the force is both a societal event and a military conflict related to Francisco Largo Caballero
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Link the force to Francisco Largo Caballero
  ?force <http://dbpedia.org/property/personInvolved> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
915,15,val,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . ?result <http://dbpedia.org/ontology/residence> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
# Step 1: Identify the director of ""Pipe Dreams"" (1976 film)
SELECT ?director WHERE {
  <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?director .
}

# Step 2: Determine who is the father of Lizzie Spaulding
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/father> ?father .
}

# Assuming steps 1 and 2 give us the same individual, proceed to step 3

# Step 4: Find the birthplace of this individual that is a settlement
SELECT ?birthPlace WHERE {
  ?director <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}

# Step 5: Identify any residents associated with this birthplace
SELECT ?resident WHERE {
  ?birthPlace <http://dbpedia.org/ontology/resident> ?resident .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
528,18,val,Give me the war of Orozimbo Barbosa and force of Narciso Campero and war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Wars involving Orozimbo Barbosa
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Force commanded by Narciso Campero and the war it was involved in
SELECT ?force ?war WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/commander> ?force .
  ?force <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Wars involving Irene Morales
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
547,38,val,Give me the resting place of the actor of Enemy at the Door and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
# Query to find the resting place of the actor from ""Enemy at the Door""
SELECT ?actorRestingPlace WHERE {
  ?movie <http://dbpedia.org/ontology/title> ""Enemy at the Door"" .
  ?movie <http://dbpedia.org/ontology/castMember> ?actor .
  ?actor <http://dbpedia.org/ontology/restingPlace> ?actorRestingPlace .
}

UNION

# Query to find the resting place of an awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT ?awardeeRestingPlace WHERE {
  ?person <http://dbpedia.org/property/orderOfStMichaelAndStGeorge> ""Knight Grand Cross"" .
  ?person <http://dbpedia.org/ontology/restingPlace> ?awardeeRestingPlace .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
77,12,val,Give me the force of the mayor of Congress Poland and war of Alexander Chechenskiy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/mayorFor> <http://dbpedia.org/resource/Congress_Poland> .
  <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/commander> ?force .
}
```",3,3,4,2,2,3,2,20,0,0,6,0,0.0,0
404,37,val,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?grandParent ?royalChild ?royalGrandChild ?result WHERE {
  # Step 1: Find the parent of Prince George William of Hanover who is royalty
  <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/father> ?parent .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of this royal parent who is also royalty
  ?parent <http://dbpedia.org/ontology/child> ?royalChild .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the parent of this royal child
  ?royalChild <http://dbpedia.org/ontology/father> ?grandParent .
  
  # Return the grandparent and their royal lineage
  ?royalChild <http://dbpedia.org/ontology/mother> ?royalGrandChild .
  ?royalGrandChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Return the parent of the royal grandchild
  ?royalGrandChild <http://dbpedia.org/ontology/father> ?result .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
285,14,val,Give me the spouse of the professional in the award of Stan Lee.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT DISTINCT ?spouse WHERE {
  # Step 1: Find awards received by Stan Lee
  <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/ontology/receivedAward> ?award .
  
  # Step 2: Identify professionals associated with these awards
  ?award <http://dbpedia.org/property/professional> ?professional .

  # Step 3: Find the spouse of each professional
  ?professional <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,3,4,3,1,3,2,20,0,0,4149,0,0.0,0
659,21,val,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
SELECT ?force WHERE {
  ?force <http://dbpedia.org/ontology/conflict> <http://dbpedia.org/resource/Napoleonic_Wars> .
  ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
}
```",3,3,4,2,2,3,3,71,0,0,32,0,0.0,0
92,29,val,"Give me the band of Joseph Michael and band member of Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . }","```sparql
# Step 1: Find Jim Sheppard who is an artist
SELECT ?sheppard WHERE {
  ?sheppard <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
  ?sheppard <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}

# Step 2: Find associated musical artists of Jim Sheppard
SELECT DISTINCT ?associatedArtist WHERE {
  ?sheppard <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

# Step 3: Find the band Joseph Michael was a member of
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Joseph_Michael_(musician)> <http://dbpedia.org/ontology/bandMember> ?band .
}

# Step 4: Check if any of these bands or artists are related to Nevermore
SELECT DISTINCT ?result WHERE {
  VALUES ?entity { ?sheppard ?associatedArtist ?band }
  ?entity <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Nevermore_(band)> .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
328,19,val,"Give me the commander in Eastern Front (World War II) and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commander WHERE {
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
  ?award <http://dbpedia.org/property/givenBy> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
  ?commander <http://dbpedia.org/ontology/receivedAward> ?award .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
184,31,val,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of Archduke Joseph August of Austria.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
SELECT ?parent WHERE {
  ?landmark <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
  ?landmark <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?person <http://dbpedia.org/ontology/nativeOf> ?landmark .
  ?person <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
  ?person <http://dbpedia.org/ontology/parent> ?parent .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
487,14,val,"Give me the administration of the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?administration WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Phil Scott"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://dbpedia.org/property/administration> ?administration .
}
```",3,4,4,3,1,3,2,20,0,0,14,0,0.0,0
294,17,val,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v1 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?architect ?restingPlace WHERE {
  <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?architect .
  OPTIONAL { ?architect <http://dbpedia.org/ontology/deathPlace> ?restingPlace . }
}
```",3,3,4,2,2,2,3,28,0,2,1,0.0,0.0,0
547,41,val,Give me the resting place of the child of James Burton (property developer) and resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?childRestingPlace ?alanCunninghamRestingPlace ?actorRestingPlace WHERE {
  # Resting place of a child of James Burton (property developer)
  OPTIONAL {
    <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/restingPlace> ?childRestingPlace .
  }

  # Resting place of Alan Cunningham
  OPTIONAL {
    <http://dbpedia.org/resource/Alan_Cunningham_(explorer)> <http://dbpedia.org/ontology/restingPlace> ?alanCunninghamRestingPlace .
  }
  
  # Resting place of the actor of ""Enemy at the Door""
  OPTIONAL {
    <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/restingPlace> ?actorRestingPlace .
  }
}
```",5,5,6,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
645,14,val,Give me the alma mater of the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?almaMater WHERE {
  # Step 1: Find Adela Pankhurst's parent
  <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?parent .

  # Step 2: Find the child of that parent
  ?parent <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Get the alma mater of that child
  ?child <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",3,3,4,3,1,3,2,20,2,0,0,1.0,1.0,1.0
281,33,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
# Step 1: Find the leader (politician) of the 1962 New South Wales state election.
SELECT ?politician WHERE {
  <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/ontology/leader> ?politician .
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}

# Step 2: Determine the birthplace of this politician that is a country.
SELECT ?country WHERE {
  ?politician <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  BIND(?birthPlace AS ?country)
}

# Step 3: Find the wars associated with Beauchamp Seymour, 1st Baron Alcester.
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?war .
}

# Step 4: Identify any entity in the birthplace country of the politician that is also related to one of the wars involving Beauchamp Seymour.
SELECT DISTINCT ?entity WHERE {
  ?country <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?entity .
  ?entity <http://dbpedia.org/ontology/battle> ?war .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
981,14,val,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?author <http://dbpedia.org/ontology/book> <http://dbpedia.org/resource/Kamikaze_Girls> .
  ?author <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen> .
  ?author <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,4,4,3,1,3,2,20,0,0,170,0,0.0,0
801,25,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of Westside Story (song).",SELECT ?result WHERE { <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?writer ?associatedArtist WHERE {
  ?writer <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
  ?writer <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Westside_Story_(song)> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
747,18,val,Give me the band of Shèna and person born on 1985-04-29 and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band1, ?person, ?band2 WHERE {
  # Find the band associated with Shèna
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/band> ?band1 .

  # Find Amba Shepherd's band
  <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/band> ?band2 .

  # Find a person born on 1985-04-29 who is in the same band as Amba Shepherd
  ?person <http://www.w3.org/2000/01/rdf-schema#birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://dbpedia.org/ontology/band> ?band2 .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
645,13,val,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v1 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?residence ?p ?entity .
}
```",3,4,4,3,1,3,2,20,0,0,42999,0,0.0,0
488,19,val,Give me the birth place of the commander in Boshin War and death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?commander ?birthPlace ?deathPlace WHERE {
  # Find commanders in the Boshin War and their birthplaces
  <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Find death place of Tokugawa Ieyasu
  OPTIONAL {
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",3,3,4,2,2,3,3,71,1,28,0,0.034482758620689655,1.0,0.06666666666666667
54,37,val,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?predecessor WHERE {
  # Step 1: Find predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://dbpedia.org/ontology/predecessor> ?predecessor .

  # Step 2: Find parent of Thado Minsaw of Prome
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/father> ?parent .
  
  # Step 3: Find child of that parent
  ?parent <http://dbpedia.org/ontology/child> ?child .

  # Step 4: Check if predecessor matches any child
  FILTER (?predecessor = ?child)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
801,38,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . },"```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Find the writer of ""40 Dayz & 40 Nightz"" who is a musical artist and an artist
  ?writer <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Step 2: Find the producer associated with this writer
  ?producer <http://dbpedia.org/property/producedBy> ?writer .
  
  # Step 3: Identify the work produced by this individual that is a musical work and a song related to 50 Cent
  ?work <http://dbpedia.org/ontology/work> ?producer ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  ?work <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/50_Cent> .

  # Return the associated musical artist
  ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  BIND(?producer AS ?associatedArtist)
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
421,16,val,Give me the band member of Senidah and person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
# Find a band member of Senidah
SELECT ?bandMember WHERE {
  <http://dbpedia.org/resource/Senidah> <http://dbpedia.org/ontology/member> ?bandMember .
}

UNION

# Find a person born with the birth name of Dino Merlin
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Dino Merlin""@en .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
767,30,val,Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg and reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Part 1: Alma Mater of Carl L. Nippert
  { 
    <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result .
  }
  
  UNION
  
  # Part 2: Entity in Baden-Württemberg
  {
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> .
    BIND(?entity AS ?result)
  }
  
  UNION
  
  # Part 3: Alter Ego of Black Hood
  {
    ?character <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
    ?character <http://www.w3.org/2000/01/rdf-schema#label> ""Black Hood""@en .
    BIND(?alterEgo AS ?result)
  }
}
```",4,4,5,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
754,13,val,Give me the parent of the parent of the parent of Min Linka.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?greatGreatGrandparent WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/father> ?grandparent .
    OPTIONAL { 
      ?grandparent <http://dbpedia.org/ontology/father> ?grandfather .
      OPTIONAL { 
        ?grandfather <http://dbpedia.org/ontology/father> ?greatGreatGrandparent .
      }
    }
  }
}
UNION
SELECT ?greatGreatGrandparent WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/mother> ?grandparent .
    OPTIONAL { 
      ?grandparent <http://dbpedia.org/ontology/mother> ?grandmother .
      OPTIONAL { 
        ?grandmother <http://dbpedia.org/ontology/mother> ?greatGreatGrandparent .
      }
    }
  }
}
UNION
SELECT ?greatGreatGrandparent WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/father> ?grandparent .
    OPTIONAL { 
      ?grandparent <http://dbpedia.org/ontology/mother> ?stepGrandmother .
      OPTIONAL { 
        ?stepGrandmother <http://dbpedia.org/ontology/father> ?greatGreatGrandparent .
      }
    }
  }
}
UNION
SELECT ?greatGreatGrandparent WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/mother> ?grandparent .
    OPTIONAL { 
      ?grandparent <http://dbpedia.org/ontology/father> ?stepGrandfather .
      OPTIONAL { 
        ?stepGrandfather <http://dbpedia.org/ontology/mother> ?greatGreatGrandparent .
      }
    }
  }
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
528,21,val,Give me the war of the military force of Battle of Pisagua and force of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT ?war WHERE {
  # Find the military force involved in the Battle of Pisagua
  <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?force1 .
  
  # Find the military force led by Narciso Campero
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/militaryForce> ?force2 .

  # Find wars that both forces participated in
  ?force1 <http://dbpedia.org/ontology/battle> ?war .
  ?force2 <http://dbpedia.org/ontology/battle> ?war .
  
  # Ensure the war is a military conflict
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
182,18,val,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v2 . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war ?entity WHERE {
  # Step 1: Find the nationality of Tamara Kunanayakam
  <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?nationality .

  # Step 2: Identify wars involving Jagath Dias
  ?war <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Jagath_Dias> .
  
  # Step 3: Ensure the war involves an entity from Tamara Kunanayakam's nationality
  ?entity <http://dbpedia.org/ontology/nationality> ?nationality .
  ?war <http://dbpedia.org/ontology/battleParticipant> ?entity .
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
184,41,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of Budapest and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find the child of Archduke Joseph Karl
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
  
  # Step 2: Find the grandchild (child of that child)
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .

  # Step 3: Ensure this grandchild is a parent of both:
  # - The native of Budapest
  ?native <http://www.w3.org/2000/01/rdf-schema#label> ""Budapest"" .
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?native .

  # - Archduchess Ilona of Austria
  ?ilona <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?ilona .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
161,43,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of Rif War and commander in Biscay Campaign.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
# Step 1: Find predecessor of Indalecio Prieto
SELECT ?predecessor WHERE {
  <http://dbpedia.org/resource/Indalecio_Prieto> <http://dbpedia.org/ontology/succeededBy> ?successor .
  ?successor <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Step 2: Find societal events and military conflicts involving the predecessor
SELECT DISTINCT ?event WHERE {
  ?predecessor <http://dbpedia.org/property/event> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/SocietalEvent> , <http://dbpedia.org/ontology/MilitaryConflict>) .
}

# Step 3: Identify military forces involved in these events
SELECT DISTINCT ?militaryForce WHERE {
  ?event <http://dbpedia.org/property/militaryForce> ?militaryForce .
}

# Step 4: Find military force of Rif War and commander in Biscay Campaign
SELECT DISTINCT ?rifWarForce, ?biscayCommanderForce WHERE {
  <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/property/militaryForce> ?rifWarForce .
  ?commander <http://dbpedia.org/ontology/commanderInBattle> <http://dbpedia.org/resource/Biscay_Campaign> .
  ?commander <http://dbpedia.org/property/militaryForce> ?biscayCommanderForce .
}

# Step 5: Combine results to find overlapping military forces
SELECT DISTINCT ?militaryForce WHERE {
  VALUES ?rifWarForce { ?rifWarForce }
  VALUES ?biscayCommanderForce { ?biscayCommanderForce }
  ?militaryForce IN (?rifWarForce, ?biscayCommanderForce) .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
360,16,val,Give me the writer of The Roaring Silence and reference to the author of Blinded by the Light.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v2 . },"```sparql
# Find the writer of ""The Roaring Silence""
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/The_Roaring_Silence> <http://purl.org/dc/terms/creator> ?writer .
}

# Find a reference to the author of ""Blinded by the Light""
SELECT ?reference WHERE {
  ?author <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Blinded_by_the_Light_(song)> .
  ?writer <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?author .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
9,40,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as QUB.","SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
# Part 1: Alma Mater of Allen Hill (scientist)
SELECT ?almaMaterAllenHill WHERE {
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/alumniOf> ?almaMaterAllenHill .
}

UNION

# Part 2: Alma Mater of the Mayor associated with QUB in Belfast
SELECT ?almaMaterMayor WHERE {
  ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?mayor <http://dbpedia.org/ontology/alumniOf> ?almaMaterMayor .
  ?organization <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> ;
                <http://www.w3.org/2000/01/rdf-schema#label> ""QUB""@en .
  ?mayor <http://dbpedia.org/ontology/memberOf> ?organization .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
184,30,val,Give me the parent of the child of Archduke Joseph Francis of Austria and child of Archduke Joseph August of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/offspring> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
281,18,val,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in Colony of New Zealand and war of New Zealand Army.","SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . }","```sparql
# Part 1: Wars involving Beauchamp Seymour, 1st Baron Alcester
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?war .
}

UNION

# Part 2: Wars involving entities linked to both the Colony of New Zealand and the New Zealand Army
SELECT DISTINCT ?entity ?war WHERE {
  ?entity <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
  ?entity <http://dbpedia.org/ontology/battle> ?war .
  ?entity <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/New_Zealand_Army> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
747,30,val,Give me the person born on 1985-04-29 and band of the person born as Tracey Elizabeth McSween and band of Amba Shepherd.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
# Query 1: Find person born on 1985-04-29 and their band
SELECT ?person ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
  OPTIONAL { ?person <http://dbpedia.org/property/band> ?band . }
}

UNION

# Query 2: Find band of Tracey Elizabeth McSween
SELECT ?person ?band WHERE {
  ?person rdfs:label ""Tracey Elizabeth McSween""@en .
  OPTIONAL { ?person <http://dbpedia.org/property/band> ?band . }
}

UNION

# Query 3: Find band of Amba Shepherd
SELECT ?person ?band WHERE {
  ?person rdfs:label ""Amba Shepherd""@en .
  OPTIONAL { ?person <http://dbpedia.org/property/band> ?band . }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
184,26,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find the royal parent
  <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/father> ?parent .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 2: Find the child of that royal parent
  ?parent <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Find the child of the individual found in step 2
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
838,14,val,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?bandMember WHERE {
  ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/YU_Grupa> .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .

  ?band <http://dbpedia.org/ontology/reference> ?reference .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .

  ?band <http://dbpedia.org/ontology/member> ?bandMember .
}
```",3,6,4,3,1,3,2,20,0,0,40,0,0.0,0
356,13,val,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . },"```sparql
SELECT ?player WHERE {
  # Step 1: Identify the predecessor of the 2015 Sacramento Republic FC season
  <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/predecessor> ?predecessor .

  # Step 2: Ensure the predecessor is a SportsTeamSeason and SoccerClubSeason
  ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason> .
  ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason> .

  # Step 3: Find the successor of this predecessor
  ?predecessor <http://dbpedia.org/ontology/successor> ?successor .

  # Step 4: Ensure the successor is also a SportsTeamSeason and SoccerClubSeason
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason> .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason> .

  # Step 5: Find players in this successor season
  ?successor <http://dbpedia.org/ontology/player> ?player .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
754,15,val,Give me the parent of the parent of the parent of Min Linka and parent of May Hnin Thwe-Da.,SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT DISTINCT ?greatGrandparent WHERE {
  # Min Linka's lineage
  OPTIONAL { 
    ?minLinka <http://dbpedia.org/ontology/birthName> ""Min Linka"" .
    ?minLinka <http://dbpedia.org/ontology/father> ?father1 .
    ?father1 <http://dbpedia.org/ontology/father> ?grandfather1 .
    ?grandfather1 <http://dbpedia.org/ontology/father> ?greatGrandparentMin .
  }
  
  # May Hnin Thwe-Da's lineage
  OPTIONAL { 
    ?mayHninThweDa <http://dbpedia.org/ontology/birthName> ""May Hnin Thwe-Da"" .
    ?mayHninThweDa <http://dbpedia.org/ontology/father> ?father2 .
    ?father2 <http://dbpedia.org/ontology/father> ?grandfather2 .
    ?grandfather2 <http://dbpedia.org/ontology/father> ?greatGrandparentMay .
  }
  
  # Find common great-grandparents
  FILTER (?greatGrandparentMin = ?greatGrandparentMay)
  BIND(?greatGrandparentMin AS ?greatGrandparent)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
232,27,val,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?native WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/ontology/officeHolder> ?office .
  
  ?person <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .

  ?native <http://dbpedia.org/ontology/nationality> ?residence .
}
```",3,7,4,3,1,3,3,71,0,0,9121,0,0.0,0
92,19,val,"Give me the associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  ?artist <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Nevermore> .
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,38,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Find the war involving Rutger Jan Schimmelpenninck as a commander
  ?war <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  
  # Ensure the war is both an event and a military conflict
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Step 2: Find the military force of the 1st Light Cavalry Lancers Regiment in this war
  <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/faction> ?militaryForce .
  
  # Ensure the military force is involved in the identified war
  ?militaryForce <http://dbpedia.org/ontology/battle> ?war .

  # Step 3: Ensure the military force is a societal event, an event, and a military conflict
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",4,9,5,2,2,3,3,71,0,0,31,0,0.0,0
617,27,val,Give me the parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?commander .
  ?child <http://dbpedia.org/ontology/birthParent> ?commander .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
754,11,val,Give me the parent of May Hnin Thwe-Da and parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Query for the parent of May Hnin Thwe-Da
SELECT ?parentThweDa WHERE {
  <http://dbpedia.org/resource/May_Hnin_Thwe-Da> <http://dbpedia.org/ontology/parent> ?parentThweDa .
}

UNION

# Query for the grandparent (parent of parent) of May Hnin Htapi
SELECT ?grandParentHtapi WHERE {
  OPTIONAL { 
    ?parentHtapi <http://dbpedia.org/ontology/parent> ?grandParentHtapi .
    <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?parentHtapi .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
182,14,val,Give me the war of the work of Gotabhaya Rajapaksa and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?war WHERE {
  # Wars associated with Gotabhaya Rajapaksa's work
  ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> .
  ?work <http://dbpedia.org/property/war> ?war .

  UNION

  # Wars associated with Mahesh Senanayake
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
  ?person <http://dbpedia.org/resource/Mahesh_Senanayake> .
  ?person <http://dbpedia.org/property/war> ?war .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
485,18,val,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of Thomas Warner (poet).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT DISTINCT ?region WHERE {
  { 
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?region .
    ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
  }
  UNION
  {
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?region .
    ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
  }
}
```",3,4,4,2,2,2,3,28,0,1,1,0.0,0.0,0
767,28,val,"Give me the reference to  and entity in the administration, that is a settlement, of Green and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Carl_L._Nippert> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
767,21,val,"Give me the entity in the administration, that is a settlement, of Green and reference to .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Green> <http://dbpedia.org/ontology/administrativeUnit> ?admin .
  ?admin <http://dbpedia.org/ontology/settlement> ?result .
}
```

Note: The placeholder `<http://dbpedia.org/resource/Green>` should be replaced with the specific DBpedia resource identifier for ""Green"" if it exists. If ""Green"" refers to a more general concept or multiple entities, additional context would be needed to refine this query.",3,4,4,2,2,3,3,71,0,0,7,0,0.0,0
427,30,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to Partito Popolare Italiano and party of Giulio Andreotti.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?party WHERE {
  ?prodi <http://dbpedia.org/ontology/birthName> ""Romano Antonio Prodi"" .
  ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?prodi <http://dbpedia.org/ontology/memberOf> ?party .
  ?prodi <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Partito_Popolare_Italiano> .

  ?andreotti <http://dbpedia.org/ontology/memberOf> ?andreottiParty .
  
  FILTER (?party = ?andreottiParty)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
712,14,val,Give me the resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace WHERE {
  ?show <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Soviet_Union> .
  ?award <http://dbpedia.org/property/show> ?show .
  ?person <http://dbpedia.org/ontology/receivedAward> ?award .
  ?person <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
}
```",3,3,4,3,1,3,2,20,0,0,63,0,0.0,0
528,44,val,Give me the war of the commander in Battle of La Rinconada de Ate and war of Irene Morales and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query 1: War of the Commander in Battle of La Rinconada de Ate
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Query 2: War of Irene Morales
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Query 3: Force of Narciso Campero Leyes
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?person <http://dbpedia.org/property:birthPlace> ?birthPlace .
  ?person <http://dbpedia.org/ontology/memberOf> ?force .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
963,15,val,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton and administration of Serbian Progressive Party.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . ?v1 <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
SELECT ?entity WHERE {
  # Step 1: Identify the time zone of Herzegovina-Neretva Canton
  <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/ontology/timeZone> ?timeZone .

  # Step 2: Determine the region (country) corresponding to this time zone
  ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?region <http://dbpedia.org/ontology/timeZone> ?timeZone .

  # Step 3: Find entities in this country with an administrative connection to the Serbian Progressive Party
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  ?entity <http://dbpedia.org/ontology/administrativeRegion> ?region .
  ?entity <http://dbpedia.org/property/administration> <http://dbpedia.org/resource/Serbian_Progressive_Party> .

}
```",4,5,5,3,2,3,2,20,0,0,84,0,0.0,0
339,11,val,Give me the child of the child of Christian IX of Denmark and father of Princess Elizabeth of Greece and Denmark.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Identify children of Christian IX
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Christian_IX_of_Denmark> .
  
  # Step 2: From each child, find their children (grandchildren of Christian IX)
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .

  # Step 3: Identify which grandchild is the father of Princess Elizabeth
  ?grandchild <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
391,31,val,"Give me the actor of The Departed and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . }","```sparql
# Step 1: Find actors in ""The Departed""
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 2: Identify the figure with a nickname related to Jackson, Tennessee
SELECT ?figure ?nativePlace WHERE {
  ?figure <http://dbpedia.org/property/nickName> ?nickname .
  FILTER(CONTAINS(LCASE(?nickname), ""jackson, tennessee""))
  ?figure <http://dbpedia.org/ontology/birthPlace> ?nativePlace .
}

# Step 3: Combine results to find actors who are natives of the identified place
SELECT DISTINCT ?actor WHERE {
  # Actors in ""The Departed""
  <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?actor .

  # Figure with nickname related to Jackson, Tennessee and their native place
  ?figure <http://dbpedia.org/property/nickName> ?nickname .
  FILTER(CONTAINS(LCASE(?nickname), ""jackson, tennessee""))
  ?figure <http://dbpedia.org/ontology/birthPlace> ?nativePlace .

  # Check if actor's birthplace matches the figure's native place
  ?actor <http://dbpedia.org/ontology/birthPlace> ?nativePlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
92,39,val,Give me the associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?associatedArtist ?band WHERE {
  # Query for the associated musical artist of Jim Sheppard
  <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .

  # Query for the band of the person born as Joseph Michael
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael""@en .
  ?person <http://dbpedia.org/ontology/band> ?band .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,25,val,Give me the alma mater of Carl L. Nippert and reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
# Query to find the alma mater of Carl L. Nippert
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

UNION

# Query to find the alter ego or reference for Black Hood
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/Black_Hood_(comics)> <http://www.w3.org/2004/02/skos/core#altLabel> ?reference .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
801,44,val,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in  and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?producer WHERE {
  # Step 1: Identify the work that is a musical work, song, and associated with 50 Cent.
  ?work <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/50_Cent> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .

  # Step 2: Find the producer of this work.
  ?work <http://dbpedia.org/ontology/producer> ?producer .

  # Step 3: Determine the writer of ""40 Dayz & 40 Nightz"" who is also a professional musician and artist.
  ?song <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  ?song <http://dbpedia.org/property/title> ""40 Dayz & 40 Nightz"" .
  ?song <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Step 4: Find the associated musical artist of this writer.
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?producer .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
701,43,val,Give me the parent of Meritamen and spouse of Ramesses II and parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find Meritamen's parent
  <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/father> ?father .
  UNION
  <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/mother> ?mother .

  # Step 2: Find Ramesses II's spouse who is also a parent of Meritamen
  ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ramesses_II> .
  FILTER (?father = ?spouse || ?mother = ?spouse)

  # Step 3: Find Seti I's child and that child's child (grandchild of Seti I)
  <http://dbpedia.org/resource/Seti_I> <http://dbpedia.org/ontology/father> ?setiChild .
  ?setiChild <http://dbpedia.org/ontology/father> ?setiGrandchild .

  # Step 4: Ensure the parent is also a parent of Seti I's grandchild
  ?parent <http://dbpedia.org/ontology/father> ?setiGrandchild .
  UNION
  ?parent <http://dbpedia.org/ontology/mother> ?setiGrandchild .

  # Combine conditions to find the common entity
  FILTER (?parent = ?father || ?parent = ?mother)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
701,25,val,Give me the parent of Henuttawy (19th dynasty) and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
SELECT ?parent WHERE {
  # Find the parent of Henuttawy (19th dynasty)
  <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/birthParent> ?parent .

  # Find the father of Merneptah and his spouse
  OPTIONAL { 
    ?father <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Merenptah> .
    ?father <http://dbpedia.org/ontology/spouse> ?spouse .
    
    FILTER(?parent = ?spouse)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
547,19,val,Give me the resting place of the child of James Burton (property developer) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query to find the child of James Burton (property developer) and their resting place
SELECT ?child ?restingPlaceChild WHERE {
  <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
  OPTIONAL { ?child <http://dbpedia.org/ontology/restingPlace> ?restingPlaceChild . }
}

# Query to find the resting place of Simon Cadell
SELECT ?restingPlaceSimon WHERE {
  <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?restingPlaceSimon .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,21,val,Give me the spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?commonSpouse WHERE {
  { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?commonSpouse . }
  UNION
  { <http://dbpedia.org/resource/Georgeanne_Rice> <http://dbpedia.org/ontology/spouse> ?commonSpouse . }
}
GROUP BY ?commonSpouse
HAVING (COUNT(DISTINCT ?person) = 2)
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,41,val,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
SELECT ?force ?war WHERE {
  # Step 1: Identify the military force of Napoleonic Wars
  ?napoleonicWar <http://dbpedia.org/ontology/militaryForce> ?force .
  
  # Ensure it's a military conflict and an event
  ?napoleonicWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
                 <http://www.w3.org/2000/01/rdf-schema#isPartOf> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Step 2: Find Arthur Wellesley's command within that force
  ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
  
  # Step 3: Identify the war he commanded with the specific regiment
  OPTIONAL {
    <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/commander> ?commandedWar .
    ?commandedWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
                  <http://dbpedia.org/property/regiment> <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> .
  }
  
  # Step 4: Ensure the war is both an event and a military conflict
  ?commandedWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
                <http://www.w3.org/2000/01/rdf-schema#isPartOf> ?event2 .
  ?event2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  FILTER(?commandedWar = ?war)
}
```",5,7,6,2,3,3,3,71,0,0,13,0,0.0,0
54,19,val,Give me the child of the father of Soe Min Wimala Dewi and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  # Step 1: Find Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi <http://dbpedia.org/ontology/father> ?father .
  
  # Step 2: Ensure this father is also the parent of Thado Minsaw of Prome
  ?thadoMinsawOfProme <http://dbpedia.org/ontology/father> ?father .
  UNION
  ?thadoMinsawOfProme <http://dbpedia.org/ontology/mother> ?father .

  # Step 3: Find the child of this father
  ?father <http://dbpedia.org/ontology/child> ?child .
  
  # Bind entities to their respective DBpedia resources
  VALUES (?soeMinWimalaDewi) { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> }
  VALUES (?thadoMinsawOfProme) { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,36,val,Give me the spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
# Query to find the spouse of Ted McGinley
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}

UNION

# Query to find a person born as the birth name of an alumnus of Ohio State University
SELECT ?person WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> ;
           <http://dbpedia.org/property/birthName> ?birthName .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
820,14,val,Give me the child of the parent of the professional in Actor.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?child WHERE {
  ?actor <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
  ?actor <http://dbpedia.org/ontology/parent> ?parent .
  ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",3,3,4,3,1,3,2,20,0,0,354,0,0.0,0
547,20,val,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?actorRestingPlace, ?burtonRestingPlace WHERE {
  # Find the actor of ""Enemy at the Door""
  <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/ontology/starring> ?actor .
  
  # Get the resting place of that actor
  ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .

  # Find the resting place of James Burton (Egyptologist)
  <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/deathPlace> ?burtonRestingPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
528,26,val,Give me the war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Entity_Represented_by__01-09> <http://dbpedia.org/ontology/work> ?work .
  ?work <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```

Replace `Entity_Represented_by__01-09` with the actual DBpedia resource identifier once known.",3,3,4,3,1,3,3,71,0,0,14,0,0.0,0
767,24,val,Give me the reference to  and alma mater of the administration of George K. Nash.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?reference ?almaMater WHERE {
  <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/administration> ?administration .
  
  OPTIONAL { 
    ?administration <http://xmlns.com/foaf/0.1/page> ?reference .
  }
  
  OPTIONAL {
    ?administration <http://dbpedia.org/property/almaMater> ?almaMater .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
801,34,val,Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
# Step 1: Find The Shadow's alter ego
SELECT ?alterEgo WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alternateName> ?alterEgo .
}

# Step 2: Identify associated musical artist of Chris Taylor (music producer)
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
}

# Step 3: Find a professional connection between the alter ego and the associated musical artist
SELECT DISTINCT ?professional WHERE {
  VALUES (?entity) { ?alterEgo ?artist }
  ?entity <http://dbpedia.org/ontology/profession> ?professional .
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
666,14,val,"Give me the figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v0 . ?v2 <http://dbpedia.org/property/nickname> ?v0 . }","```sparql
SELECT ?nickname WHERE {
  ?organisation <http://dbpedia.org/ontology/nickname> ?nickname .
  ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .
  ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub> .
  ?organisation <http://dbpedia.org/property/country> <http://dbpedia.org/resource/England> .
}
```",3,6,4,3,1,3,2,20,0,0,12,0,0.0,0
492,23,val,Give me the person decedent at the work of the author of French Algeria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
SELECT ?personDecedent WHERE {
  # Step 1: Find the author of ""French Algeria""
  <http://dbpedia.org/resource/French_Algeria> <http://purl.org/dc/terms/creator> ?author .

  # Step 2: Find works by this author
  ?work <http://purl.org/dc/terms/creator> ?author .
  
  # Step 3: Check if any of these works have a decedent associated with them
  ?work <http://dbpedia.org/ontology/decedent> ?personDecedent .
}
```",3,3,4,3,1,3,3,71,0,0,30,0,0.0,0
747,25,val,Give me the band of the person born as Tracey Elizabeth McSween and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
SELECT ?person ?band WHERE {
  { 
    <http://dbpedia.org/resource/Tracey_McSween> <http://dbpedia.org/ontology/birthName> ""Tracey Elizabeth McSween"" .
    <http://dbpedia.org/resource/Tracey_McSween> <http://dbpedia.org/property/memberOfBand> ?band .
    BIND(<http://dbpedia.org/resource/Tracey_McSween> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/property/memberOfBand> ?band .
    BIND(<http://dbpedia.org/resource/Amba_Shepherd> AS ?person)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,27,val,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
SELECT ?nickname WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Northern_Ireland> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1 .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type2 .
  FILTER (?type1 = <http://dbpedia.org/ontology/Organisation> && ?type2 = <http://dbpedia.org/ontology/EducationalInstitution>)
  OPTIONAL { ?entity <http://dbpedia.org/ontology/nickName> ?nickname }
}
```",3,5,4,3,1,3,3,71,0,0,13,0,0.0,0
378,44,val,Give me the war of the commander in Peninsular War and claim to fame of the commander in Great Siege of Gibraltar and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query 1: War of the Commander in Peninsular War
SELECT ?commander ?war WHERE {
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Query 2: Claim to Fame of the Commander in Great Siege of Gibraltar
SELECT ?commander ?claimToFame WHERE {
  <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
}

UNION

# Query 3: War of Carl Pontus Gahn
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
801,30,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of Westside Story (song) and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?associatedArtist WHERE {
  ?person <http://dbpedia.org/ontology/wrote> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
  ?person <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Westside_Story_(song)> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
378,20,val,Give me the war of the commander in Peninsular War and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  FILTER EXISTS {
    ?peninsularWar <http://dbpedia.org/ontology/participant> ?participant .
    ?participant <http://dbpedia.org/ontology/battle> ?battle .
    ?peninsularWar <http://www.w3.org/2000/01/rdf-schema#label> ""Peninsular War"" .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
9,44,val,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of Royal Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?figure WHERE {
  # Step 1: Find the nickname of Queen's University Belfast
  <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/ontology/nickname> ?figure .

  # Step 2: Confirm it is an alma mater for John Alderdice, Baron Alderdice
  ?almaMater <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> .
  
  # Step 3: Verify it is also an alma mater for the awardee of Royal Medal
  ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Royal_Medal> .
  ?almaMater <http://dbpedia.org/ontology/alumni> ?awardee .

  # Ensure all conditions are met by the same figure
  FILTER (?figure = ?almaMater)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
339,15,val,Give me the father of Princess Elizabeth of Greece and Denmark and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?father WHERE {
  # Step 1: Find the father of Princess Elizabeth of Greece and Denmark
  <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Determine Frederick VIII of Denmark's predecessor
  OPTIONAL {
    <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> <http://dbpedia.org/ontology/predecessor> ?predecessor .
    
    # Step 3: Find the child of that predecessor
    ?child <http://dbpedia.org/ontology/father> ?predecessor .

    # Step 4: Match the father from step 1 with the child from step 3
    FILTER (?father = ?child)
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
547,39,val,Give me the resting place of Simon Cadell and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query 1: Resting place of Simon Cadell
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/finalRestingPlace> ?restingPlace .
}

UNION

# Query 2: Resting place of the awardee of an award associated with Gerald Graham
SELECT ?awardeeRestingPlace WHERE {
  ?award <http://dbpedia.org/property/recipient> ?awardee .
  ?awardee <http://dbpedia.org/ontology/finalRestingPlace> ?awardeeRestingPlace .
  ?award <http://dbpedia.org/ontology/recipient> <http://dbpedia.org/resource/Gerald_Graham> .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
528,36,val,Give me the war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query 1: Find the war associated with Irene Morales
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Query 2: Find the force of the person born as Narciso Campero
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ""Narciso Campero"" .
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/militaryForce> ?force .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
617,24,val,Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find children of Antiochus III the Great
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  
  # Step 2: Identify which child is a parent of Nysa (wife of Pharnaces I of Pontus)
  ?child <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> .
  
  # Step 3: Find the spouse of that child
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
339,13,val,Give me the child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandchild WHERE {
  ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> .
  ?predecessorChild <http://dbpedia.org/ontology/child> ?predecessor .
  ?predecessorGrandchild <http://dbpedia.org/ontology/child> ?predecessorChild .
  BIND(?predecessorGrandchild AS ?grandchild)
}
```",3,3,4,3,1,3,2,20,0,2,32,0.0,0.0,0
16,20,val,Give me the professional in the profession of Satomi Ishihara and spouse of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?person WHERE {
  # Find the profession of Satomi Ishihara
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .

  # Find individuals who are spouses of Ted McGinley
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
  
  # Ensure the spouse is in the same profession as Satomi Ishihara
  ?spouse <http://purl.org/dc/terms/subject> ?profession .

  BIND(?spouse AS ?person)
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
617,18,val,Give me the spouse of Laodice IV and child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
SELECT ?individual WHERE {
  ?individual <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?individual <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Laodice_IV> .
  ?individual <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
996,14,val,Give me the entity in the award of the native of Palestine (region).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
SELECT ?award WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> .
  ?person <http://purl.org/dc/terms/receivedAward> ?award .
}
```",3,3,4,3,1,3,2,20,0,0,292,0,0.0,0
391,21,val,Give me the native of the figure known as Hub City and actor of All About the Andersons.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?native WHERE {
  ?person <http://dbpedia.org/ontology/nickName> ""Hub City"" .
  ?person <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/All_About_the_Andersons> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?native .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
345,14,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
SELECT ?person ?team WHERE {
  # Step 1: Get Eiður Guðjohnsen's birthdate
  <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://www.w3.org/2002/07/owl#sameAs> ?eiður .
  ?eiður <http://dbpedia.org/ontology/birthDate> ?birthDate .

  # Step 2: Find individuals with the same birthdate who are both SoccerPlayers and SoccerManagers
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .

  # Step 3: Get the team associated with these individuals
  OPTIONAL { ?person <http://dbpedia.org/property/team> ?team . }
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
9,37,val,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as QUB.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
SELECT ?almaMater WHERE {
  ?award <http://dbpedia.org/ontology/name> ""Royal Medals""@en .
  ?figure <http://dbpedia.org/ontology/awardsReceived> ?award ;
           <http://www.w3.org/2000/01/rdf-schema#label> ""QUB""@en .
  ?figure <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
492,42,val,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?commander WHERE {
  # Find commanders in the Franco-Hova Wars
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Franco-Hova_Wars> .

  # Ensure they died at the capital of Algeria (Alger)
  ?commander <http://dbpedia.org/ontology/deathPlace> ?deathPlace1 .
  ?deathPlace1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?deathPlace1 rdfs:label ""Alger""@en .

  # Ensure they also died at the location associated with Joseph C. Satterthwaite's work
  ?commander <http://dbpedia.org/ontology/deathPlace> ?deathPlace2 .
  ?work <http://dbpedia.org/property/work> <http://dbpedia.org/resource/Joseph_C._Satterthwaite> .
  ?work <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/US_Assistant_Secretary_of_State_for_African_Affairs> .
  ?deathPlace2 rdfs:label ?workLabel .

  FILTER (lang(?workLabel) = ""en"")
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
617,28,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of Seleucus II Callinicus and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
SELECT ?child WHERE {
  # Step 1: Find Laodice IV's spouse
  <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Find the children of Laodice IV's spouse
  ?spouse <http://dbpedia.org/ontology/child> ?royalChild .
  
  # Step 3: Filter these children to find those who are royalty
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 4: Determine which of these royal children have a parent that is Seleucus II Callinicus
  ?royalChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> ;
              <http://dbpedia.org/ontology/mother> ?mother .

  # Step 5: Identify any child whose parent is Nysa (wife of Pharnaces I of Pontus)
  ?child <http://dbpedia.org/ontology/father> ?royalChild ;
         <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
534,13,val,"Give me the birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?birthPlace WHERE {
  ?politician <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/East_of_England#Essex> .
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?child <http://dbpedia.org/ontology/parent> ?politician .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Politician> <http://dbpedia.org/ontology/OfficeHolder>) .

}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
701,23,val,Give me the parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
  ?child <http://dbpedia.org/ontology/birthParent> ?spouse .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
48,12,val,"Give me the band of Carl Falk and band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Find the band of Carl Falk
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/memberOf> ?band .
}

UNION

# Find the actor who is a musical artist in ""Honor Up"" and their band
SELECT ?actorBand WHERE {
  ?movie <http://dbpedia.org/property/starring> ?actor .
  ?movie <http://www.w3.org/2000/01/rdf-schema#label> ""Honor Up""@en .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?actor <http://dbpedia.org/ontology/memberOf> ?actorBand .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
182,15,val,Give me the entity in Sri Lanka and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT ?entityInSriLanka ?war WHERE {
  <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/ontology/author> ?author .
  ?author <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?entityInSriLanka <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""sri lanka""))
  OPTIONAL { ?war <http://dbpedia.org/property/location> ?location . }
  FILTER(CONTAINS(LCASE(STR(?location)), ""sri lanka""))
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
528,23,val,"Give me the war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?result WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Chile> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?militaryForce <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",3,4,4,3,1,3,3,71,0,0,235,0,0.0,0
429,7,val,Give me the administration of the father of Martha Johnson Patterson and country of 77th Ohio Infantry Regiment.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },"```sparql
# Query to get the administration of Martha Johnson Patterson's father
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/administration> ?administration .
}

# Query to get the country of the 77th Ohio Infantry Regiment
SELECT ?country WHERE {
  <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/property/country> ?country .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
54,34,val,Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
SELECT ?child WHERE {
  # Step 1: Find the child of Thinkhaya of Pagan
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?thinkhayasChild .

  # Step 2: The father of that child is Thinkhaya himself, so we move to step 3

  # Step 3: Find the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://dbpedia.org/ontology/predecessor> ?predecessor .

  # Step 4: Find the child of this predecessor
  ?predecessor <http://dbpedia.org/ontology/child> ?child .
}
```",4,4,5,3,2,3,3,71,0,6,1,0.0,0.0,0
959,20,val,"Give me the member of University of Tsukuba and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?member WHERE {
  # Find Yōichi Masuzoe's country of residence
  <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/ontology/birthPlace> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Find members of University of Tsukuba who are native to the same country
  ?member <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> .
  ?member <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER (?birthPlace = ?residence)
}
```",3,4,4,2,2,3,3,71,0,0,84,0,0.0,0
435,14,val,Give me the territory administered from Reykjavík and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
# Query for territory administered from Reykjavík
SELECT ?territory WHERE {
  ?territory <http://dbpedia.org/ontology/administrativeCapital> <http://dbpedia.org/resource/Reykjavík> .
}

UNION

# Query for region of the time zone in Bombali Shebora Chiefdom
SELECT ?region WHERE {
  <http://dbpedia.org/resource/Bombali_Shebora_Chalfdom> <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?timeZone <http://www.w3.org/2006/time#during> ?region .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
747,21,val,Give me the person born on the birth date of Pavlo Khudzik and band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
SELECT ?person ?band WHERE {
  # Find person born on the same date as Pavlo Khudzik
  <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?person <http://dbpedia.org/ontology/birthDate> ?sameBirthDate .
  FILTER (?birthDate = ?sameBirthDate && ?person != <http://dbpedia.org/resource/Pavlo_Khudzik>) .

  # Find band associated with Shèna
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
994,29,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of S.A. Slayer and band member of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
# Part 1: Find Meshuggah band members who are also a band, group, and organization
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Meshuggah> <http://dbpedia.org/ontology/member> ?member .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}

# Part 2: Find associated musical artists of these Meshuggah band members
SELECT DISTINCT ?artist WHERE {
  ?member <http://dbpedia.org/property/member> ?meshuggahMember .
  ?meshuggahMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

# Part 3: Find associated musical artist of S.A. Slayer
SELECT ?slayerArtist WHERE {
  <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?slayerArtist .
}

# Part 4: Find band members of Don Dokken
SELECT ?dokkenMember WHERE {
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/member> ?dokkenMember .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
528,29,val,Give me the war of Irene Morales and war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT DISTINCT ?war WHERE {
  # Wars involving Irene Morales
  OPTIONAL { 
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
  
  # Wars involving the commander in Battle of La Rinconada de Ate
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
  
  # Wars involving forces commanded by Narciso Campero
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/commander> ?force .
    ?force <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
}
```",4,4,5,2,3,3,3,71,2,4,0,0.3333333333333333,1.0,0.5
617,23,val,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find Antiochus II Theos' successor who is royalty
  <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?successor .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of that successor who is royalty
  ?successor <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the child of this second individual
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
}
```",3,5,4,3,1,3,3,71,4,2,1,0.6666666666666666,0.8,0.7272727272727272
54,20,val,Give me the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
# Step 1: Find the child of Thinkhaya of Pagan
SELECT ?childOfThinkhaya WHERE {
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?childOfThinkhaya .
}

# Step 2: Find the parent of any child of Narapati I of Ava
SELECT ?parentOfChildNarapati WHERE {
  ?childOfNarapati <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?childOfNarapati .
  ?childOfNarapati <http://dbpedia.org/ontology/birthParent> ?parentOfChildNarapati .
}

# Step 3: Find the intersection of results from step 1 and step 2
SELECT DISTINCT ?result WHERE {
  VALUES ?result { ?childOfThinkhaya ?parentOfChildNarapati }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,22,val,"Give me the war of the profession, that is a military unit, of Heather Roy and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
# Query for Heather Roy's war through her profession
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Heather_Roy> <http://purl.org/dc/terms/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?profession <http://dbpedia.org/property/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Query for Beauchamp Seymour's war
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/property/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,40,val,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?person WHERE {
  # Condition 1: Native to an office holder
  ?officeHolder <http://dbpedia.org/ontology/birthPlace> ?nativePlace .
  ?nativePlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  
  # Condition 2: Commander in Battle of Leipzig
  ?person <http://dbpedia.org/ontology/commander> ?battleLeipzig .
  ?battleLeipzig <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Battle_of_Leipzig> .

  # Condition 3: Involved in Napoleonic Wars
  ?person <http://dbpedia.org/ontology/militaryForce> ?napoleonicWars .
  ?napoleonicWars <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Napoleonic_Wars> .

  # Linking the person to the office holder's native place
  ?person <http://dbpedia.org/ontology/birthPlace> ?nativePlace .
}
```",5,6,6,3,3,3,3,71,0,0,5,0,0.0,0
184,40,val,"Give me the parent of Archduchess Ilona of Austria and child of Archduke Joseph August of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find Archduchess Ilona's parent
  <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/birthParent> ?parent .

  # Step 2: Ensure this person is a child of Archduke Joseph August
  ?parent <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .

  # Step 3: Find the native place that is a settlement at elevation 96.0
  ?parent <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
  ?nativePlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?nativePlace <http://dbpedia.org/property/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
378,26,val,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?battle <http://dbpedia.org/property/reference> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",3,4,4,3,1,3,3,71,0,0,118,0,0.0,0
767,35,val,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
SELECT ?settlement WHERE {
  ?green <http://dbpedia.org/ontology/administration> ?settlement .
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  
  OPTIONAL {
    ?blackHood <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
    ?reference <http://dbpedia.org/property/reference> ?alterEgo .
  }
}
```",4,5,5,2,2,3,3,71,0,0,7,0,0.0,0
747,38,val,Give me the band of the writer of Apollo (Hardwell song) and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query 1: Band of the writer of ""Apollo"" by Hardwell
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://dbpedia.org/ontology/memberOfBand> ?band .
}

UNION

# Query 2: Band of the person born as Tracey Elizabeth McSween
SELECT ?band WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Tracey Elizabeth McSween""@en .
  ?person <http://dbpedia.org/ontology/birthName> ""Tracey Elizabeth McSween"" .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
360,19,val,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann and native of Johannesburg.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
SELECT ?album WHERE {
  ?album <http://dbpedia.org/ontology/creator> ?writer .
  ?album <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Dave_Flett> .
  ?album <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Manfred_Mann> .
  OPTIONAL { 
    ?writer <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City> ;
               <http://dbpedia.org/property/name> ""Johannesburg"" .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
994,42,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
# Step 1: Find the associated musical artist of Red Tide (band)
SELECT ?redTideArtist WHERE {
  <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?redTideArtist .
}

# Step 2: Find a band member who is also a musical artist, specifically Donald Maynard Dokken
SELECT ?dokken WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Donald Maynard Dokken"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?bandMember .
}

# Step 3: Find the associated musical artist of Watchtower (band)
SELECT ?watchtowerArtist WHERE {
  <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
}

# Step 4: Find the associated musical artist of the result from step 3
SELECT ?finalArtist WHERE {
  ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalArtist .
  FILTER(?artist = ?watchtowerArtist)
}
```

Note: This query is structured to be executed in parts, as SPARQL does not support direct chaining of results across multiple queries. Each step should be run separately, and the results combined manually or programmatically.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
251,13,val,"Give me the administration of Forza Italia (2013) and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/place> ?result . },"```sparql
SELECT ?result WHERE {
  # Part 1: Administration of Forza Italia (2013)
  OPTIONAL {
    <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?result .
  }

  # Part 2: Location of the war involving Louis François Félix Musnier
  OPTIONAL {
    ?war <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Louis_François_Félix_Musnier> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://dbpedia.org/ontology/location> ?result .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
492,35,val,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
# First Query: Find the decedent at the capital of Algeria
SELECT ?decedent WHERE {
  <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/administrativeCapital> ?capital .
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?decedent <http://dbpedia.org/property/deathPlace> ?capital .
}

UNION

# Second Query: Find the decedent at the work of Joseph C. Satterthwaite
SELECT ?decedent WHERE {
  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/workLocation> ?work .
  ?decedent <http://dbpedia.org/property/deathPlace> ?work .
}
```",4,5,5,2,2,3,3,71,0,0,16,0,0.0,0
161,25,val,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?force WHERE {
  ?force <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Spanish_Civil_War> .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> .
}
```",3,4,4,2,2,3,3,71,0,0,32,0,0.0,0
801,28,val,Give me the producer of Westside Story (song) and associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?producer WHERE {
  # Part 1: Producer of Westside Story (song)
  <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?producer .

  # Part 2: Associated musical artist of Chris Taylor (music producer)
  OPTIONAL { 
    ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> .
    FILTER(?producer = ?artist) 
  }

  # Part 3: Professional in the alter ego of The Shadow
  OPTIONAL {
    ?professional <http://dbpedia.org/ontology/alias> ""The Shadow"" .
    FILTER(?producer = ?professional)
  }
}
```",4,4,5,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
981,11,val,Give me the entity in the region of Time in Indonesia and birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?entity WHERE {
  # Query for entities related to ""Time in Indonesia""
  ?timeEntity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
  ?timeEntity rdfs:label ""Time in Indonesia""@en .

  # Query for the birthplace of Novia Indriani Mamuaja
  OPTIONAL {
    <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    FILTER(?birthPlace = ?timeEntity)
  }

  # Return the entity if it matches both conditions
  BIND(IF(BOUND(?birthPlace), ?timeEntity, NULL) AS ?entity)
}
FILTER(?entity != NULL)
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
232,19,val,Give me the child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?child WHERE {
  # Find the child of John Devon Roland Pertwee
  <http://dbpedia.org/resource/John_Pertwee> <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .
  <http://dbpedia.org/resource/John_Pertwee> <http://dbpedia.org/ontology/child> ?child .

  # Ensure the child is an actor in Dog Soldiers
  ?child <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/Dog_Soldiers> .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
617,13,val,"Give me the child of the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find the parent of Mlada (abbess)
  <http://dbpedia.org/resource/Mlada_(abbess)> <http://dbpedia.org/ontology/parent> ?parent .

  # Step 2: Find children of that parent
  ?parent <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Filter those children to find royalty
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the children of these royal individuals
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
}
```",3,4,4,3,1,3,2,20,0,0,4,0,0.0,0
801,33,val,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT DISTINCT ?producer WHERE {
  ?rapper rdf:type dbo:MusicalArtist .
  ?rapper dbo:genre dbr:Rap_music .
  
  ?work rdf:type dbo:MusicalWork ;
        rdf:type dbo:Song ;
        dbo:performer ?rapper .

  ?work dbo:producer ?producer .
}
```",4,8,5,3,2,3,3,71,0,0,473,0,0.0,0
959,38,val,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of the team of Takashi Sekizuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
# Step 1: Identify Yōichi Masuzoe's residence that is a country.
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  BIND(?residence AS ?country)
}

# Step 2: Determine who is native to that country.
SELECT DISTINCT ?native WHERE {
  ?native <http://dbpedia.org/ontology/nationality> ?country .
  FILTER EXISTS { 
    SELECT ?country WHERE {
      <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
      ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
      BIND(?residence AS ?country)
    }
  }
}

# Step 3: Find the manager associated with Takashi Sekizuka's team.
SELECT DISTINCT ?manager WHERE {
  ?team <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Takashi_Sekizuka> .
  ?team <http://dbpedia.org/ontology/manager> ?manager .
}
```",4,5,5,2,2,3,3,71,0,0,6,0,0.0,0
959,34,val,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?manager WHERE {
  # Step 1: Find the manager of the 2013 Júbilo Iwata season
  <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?manager .

  # Step 2: Identify Japanese universities that are organizations, universities, and educational institutions
  ?university <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> ;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> ;
              <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> .

  # Step 3: Find individuals born in 1958 who attended one of these universities
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
          <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> ;
          <http://dbpedia.org/ontology/almaMater> ?university .

  # Step 4: Check if the manager is one of these individuals
  FILTER (?manager = ?person)
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
378,31,val,Give me the war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person ?war WHERE {
  # Query for Joaquín Blake's wars
  { 
    <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    BIND(<http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> AS ?person)
  }
  
  UNION
  
  # Query for the person born as Carl Pontus Gahn and their wars
  { 
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Carl Pontus Gahn""@en .
    ?person <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
    ?person <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
959,44,val,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of Yōichi Masuzoe and member of University of Tsukuba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager WHERE {
  # Step 1: Find Takashi Sekizuka's team
  ?team <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Takashi_Sekizuka> .
  
  # Step 2: Get the manager of that team
  ?team <http://dbpedia.org/ontology/manager> ?manager .

  # Step 3: Find Yōichi Masuzoe's residence and ensure it is a country
  <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 4: Verify Yōichi Masuzoe's membership at University of Tsukuba
  <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Tsukuba> .
}
```",5,6,6,2,3,3,3,71,0,0,2,0,0.0,0
182,12,val,Give me the war of Mahesh Senanayake and entity in Sri Lanka and war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT DISTINCT ?warMahesh ?warJagath ?sriLankaEntity WHERE {
  # Wars involving Mahesh Senanayake
  <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?warMahesh .
  
  # Wars involving Jagath Dias
  <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?warJagath .

  # Find an entity in Sri Lanka related to Mahesh Senanayake's wars
  OPTIONAL {
    ?sriLankaEntity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""sri lanka""))
    ?warMahesh <http://dbpedia.org/ontology/location> ?sriLankaEntity .
  }
}
```",3,3,4,1,3,2,3,28,1,5,0,0.16666666666666666,1.0,0.2857142857142857
488,27,val,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?spouse <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/administration> ?administration .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
232,20,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
# Step 1: Find Sean Pertwee's claims to fame that are films and military conflicts.
SELECT ?fame WHERE {
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/claimToFame> ?fame .
  ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 2: Find Jon Pertwee's children.
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .
}

# Step 3: Find the actor who is associated with both the fame and one of Jon Pertwee's children.
SELECT DISTINCT ?actor WHERE {
  # Fame from step 1
  ?fame <http://dbpedia.org/ontology/claimToFame> ?actor .
  
  # Child from step 2
  ?child <http://dbpedia.org/ontology/actor> ?actor .

  # Ensure the fame is the same as identified in step 1
  FILTER(?fame = <URI_OF_THE_IDENTIFIED_FAME>)
}
```

Note: Replace `<URI_OF_THE_IDENTIFIED_FAME>` with the actual URI obtained from Step 1 after executing it separately.",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
328,26,val,Give me the commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?commander WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
  ?person <http://dbpedia.org/ontology/memberOfMilitaryForce> ?force .
  ?force <http://dbpedia.org/ontology/commander> ?commander .
}
```",3,3,4,3,1,3,3,71,0,0,306,0,0.0,0
16,25,val,Give me the professional in Actress and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?actress WHERE {
  <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?birthName .
  ?actress <http://dbpedia.org/ontology/birthName> ?birthName .
  ?actress <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actress> .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
232,32,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Identify John Devon Roland Pertwee
  ?john a <http://dbpedia.org/ontology/Person> ;
        <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee"" .

  # Step 2: Find Sean Pertwee as the child of John Pertwee
  ?sean a <http://dbpedia.org/ontology/Person> ;
        <http://dbpedia.org/ontology/father> ?john ;
        rdfs:label ""Sean Pertwee""@en .

  # Step 3: Find Sean Pertwee's claim to fame that is both a film and a military conflict
  ?fame a <http://dbpedia.org/ontology/Film>, <http://dbpedia.org/ontology/MilitaryConflict> ;
        <http://dbpedia.org/property/claimToFame> ?sean .

  # Step 4: Identify the actor associated with this claim to fame
  ?fame <http://dbpedia.org/ontology/starring> ?actor .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
767,42,val,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/administrativeUnit> <http://dbpedia.org/resource/Green> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  OPTIONAL { 
    ?entity <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/C._L._Nippert> .
  }
  
  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/alterEgo> <http://dbpedia.org/resource/Black_Hood> .
  }

  FILTER EXISTS { ?entity <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/C._L._Nippert> }
  FILTER EXISTS { ?entity <http://dbpedia.org/ontology/alterEgo> <http://dbpedia.org/resource/Black_Hood> }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
747,22,val,Give me the band of the person born as Tracey Elizabeth McSween and person born on 1985-04-29.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Tracey Elizabeth McSween"" .
  ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?result .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,29,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child ?parent WHERE {
  # Step 1: Find the child of Ernest Augustus, Crown Prince of Hanover
  <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> <http://dbpedia.org/ontology/child> ?child .
  
  # Step 2: Check if this child is a royalty and find their parent who is also a royalty
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?child <http://dbpedia.org/ontology/parent> ?parent .
  
  # Step 3: Ensure the parent is a royalty and spouse of Princess Victoria Louise of Prussia
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> .

  # Additional condition: Parent should be related to Ernest Augustus, Duke of Brunswick
  OPTIONAL { 
    ?parent <http://dbpedia.org/ontology/birthName> ""Ernest Augustus, Duke of Brunswick""@en .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
659,26,val,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commander WHERE {
  ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?unit <http://dbpedia.org/ontology/commonName> ""Polish Horse"" .
  
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  
  ?unit <http://dbpedia.org/property/battle> ?war .
  ?war <http://dbpedia.org/ontology/commander> ?commander .
}
```",3,7,4,3,1,3,3,71,0,0,130,0,0.0,0
747,31,val,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of Amba Shepherd.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
# Step 1: Identify the person who is an athlete and soccer player, decedent at Zolotonosha, associated with Amba Shepherd
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> .
  ?person <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  ?band <http://purl.org/dc/terms/subject> ?person .
  ?band <http://www.w3.org/2000/01/rdf-schema#label> ""Amba Shepherd""@en .
}

# Step 2: Find the birth date of this person
SELECT ?birthDate WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

# Step 3: Find another person born on the same date
SELECT DISTINCT ?otherPerson WHERE {
  ?otherPerson <http://dbpedia.org/ontology/birthDate> ?birthDate .
  FILTER(?otherPerson != ?person)
}
```

Note: This query assumes that there is a direct relationship between the band and the person, which might need adjustment based on actual data structure in DBpedia. The queries are structured to be executed sequentially or combined as needed.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
701,39,val,"Give me the parent of Henuttawy (19th dynasty) and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?parent ?spouse WHERE {
  # Step 1: Find Henuttawy's parent
  <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/family> ?family .
  ?family <http://dbpedia.org/ontology/member> ?parent .

  # Step 2: Identify the commander in Battle of Perire
  ?battle <http://dbpedia.org/resource/Battle_of_Perire> .
  ?battle <http://dbpedia.org/ontology/commander> ?commander .

  # Step 3: Find the father of the commander
  ?father <http://dbpedia.org/ontology/spouse> ?commander .
  
  # Step 4 and 5: Identify the spouse of the father who is royalty
  ?spouse <http://dbpedia.org/ontology/spouse> ?father .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
696,15,val,"Give me the landmark at elevation of 50 and birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
# Step 1: Identify the associated musical artist
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (
    ?type = <http://dbpedia.org/class/yago/MusicalGroup108069068>
    || ?type = <http://dbpedia.org/class/yago/Organisation118067834>
    || ?type = <http://dbpedia.org/class/yago/Band106066786>
  )
}

# Step 2: Find a member's birthplace
SELECT DISTINCT ?birthPlace WHERE {
  ?artist <http://dbpedia.org/ontology/member> ?member .
  ?member <http://dbpedia.org/property/birthPlace> ?birthPlace .
}

# Step 3: Locate a landmark at elevation 50
SELECT ?landmark WHERE {
  ?landmark <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#float> .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
404,42,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?princess <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia"" .

  # Step 2: Determine her father
  ?father <http://dbpedia.org/ontology/father> ?princess .
  ?father <http://www.w3.org/2000/01/rdf-schema#label> ""Ernest Augustus, Duke of Brunswick""@en .

  # Step 3: Find the parent of Prince Ernest Augustus of Hanover (born 1914)
  ?child <http://dbpedia.org/ontology/father> ?princess .
  ?child <http://www.w3.org/2000/01/rdf-schema#label> ""Prince Ernest Augustus of Hanover (born 1914)""@en .

  # Step 4: Find the spouse of Princess Victoria Louise of Prussia
  ?princess <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
345,13,val,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
SELECT ?nickname WHERE {
  ?player <http://dbpedia.org/property/nickname> ?nickname .
  ?player <http://dbpedia.org/ontology/player> <http://dbpedia.org/resource/Armando_Heeb> .
  ?club <http://dbpedia.org/ontology/team> ?player .
  ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/class/yago/SportsClub108067>, 
                   <http://dbpedia.org/class/yago/Organisation118501>, 
                   <http://dbpedia.org/class/yago/SoccerClub1000000>))
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
492,29,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commander WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  
  FILTER (?commander = <http://dbpedia.org/resource/Frédéric-Georges_Herr>) .

  OPTIONAL { 
    ?commander <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Algiers> .
  }
  OPTIONAL {
    ?commander <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
  }
}
```",4,6,5,2,3,3,3,71,0,1,1,0.0,0.0,0
184,29,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of Géza von Habsburg and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
SELECT ?person WHERE {
  # Find the child of Archduke Joseph Karl of Austria
  <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?person .

  # Check if this person is a parent of both Géza von Habsburg and Archduchess Ilona of Austria
  ?person <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
  ?person <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
9,21,val,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of Northern Ireland Forum.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
SELECT ?figure WHERE {
  ?mayor <http://dbpedia.org/ontology/politician> true .
  ?mayor <http://dbpedia.org/property/mayorOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ""Queen's University Belfast""@en .
  ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""QUB""@en .
  FILTER(?figure = ?almaMater)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
778,11,val,Give me the author of Chroot and entity in the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
# Query to find the author of Chroot
SELECT ?author WHERE {
  <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?author .
}

UNION

# Query to find an entity in the award of Ralph L. Brinster
SELECT ?awardEntity WHERE {
  <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/ontology/award> ?award .
  ?award ?property ?awardEntity .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
16,40,val,Give me the professional in Actress and spouse of the person born as the birth name of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
SELECT ?actress WHERE {
  # Find the person born as Ted McGinley
  ?ted <http://dbpedia.org/ontology/birthName> ""Ted McGinley"" .
  
  # Find the person born as Georgeanne Marie Rice
  ?georgeanne <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .

  # Find a common spouse between Ted McGinley and Georgeanne Marie Rice
  ?ted <http://dbpedia.org/property/spouse> ?actress .
  ?georgeanne <http://dbpedia.org/property/spouse> ?actress .

  # Ensure the spouse is an actress
  ?actress <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actress> .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,22,val,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?bandMember WHERE {
  # Part 1: Find band members of Donald Maynard Dokken who is a MusicalArtist
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/memberOf> ?band .
  ?band <http://dbpedia.org/ontology/member> ?bandMember .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

} UNION {
  # Part 2: Find associated musical artists of S.A. Slayer
  <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandMember .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,39,val,"Give me the commander in Battle of Leipzig and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?commander ?force WHERE {
  # Find commanders in the Battle of Leipzig
  <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?commander .
  
  # Get military force associated with each commander
  ?commander <http://dbpedia.org/ontology/militaryForce> ?force .

  # Find events related to Rutger Jan Schimmelpenninck that are societal, general, and military conflicts
  ?event <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?eventType .

  # Filter events that are societal, general, and military conflicts
  FILTER (
    (?eventType = <http://dbpedia.org/ontology/SocietalEvent> ||
     ?eventType = <http://dbpedia.org/ontology/Event> ||
     ?eventType = <http://dbpedia.org/ontology/MilitaryConflict>)
  )

  # Ensure the force is involved in these events
  ?event <http://dbpedia.org/ontology/militaryForce> ?force .
}
```",4,7,5,3,2,3,3,71,0,0,6,0,0.0,0
959,36,val,"Give me the member of University of Tsukuba and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
SELECT ?member WHERE {
  # Step 1: Find the manager of the 1998 Kashima Antlers season who is a sports manager.
  <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?manager .
  ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .

  # Step 2: Determine the team managed by this manager.
  ?manager <http://dbpedia.org/ontology/teamManaged> ?team .

  # Step 3: Find members of University of Tsukuba who are managers of that team.
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
  ?member <http://dbpedia.org/ontology/teamManaged> ?team .
  ?member <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Tsukuba> .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
92,34,val,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of Joseph Michael.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?bandMember WHERE {
  # Find the reference (film) ""Nevermore"" from 2006
  <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  
  # Find the band associated with Joseph Michael
  ?band <http://dbpedia.org/property/member> ?member .
  ?member <http://dbpedia.org/ontology/birthName> ""Joseph Michael""^^<http://www.w3.org/2001/XMLSchema#string> .

  # Determine any artists that are both a member of this band and referenced in relation to the film
  ?bandMember <http://dbpedia.org/property/member> ?band .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Ensure the band member is referenced in relation to the film
  OPTIONAL { 
    ?filmReference <http://dbpedia.org/property/reference> ?bandMember .
    FILTER(?filmReference = <http://dbpedia.org/resource/Nevermore_(2006_film)>)
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
701,30,val,Give me the parent of Meritamen and spouse of the father of Merneptah and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?person WHERE {
  # Condition 1: Parent of Meritamen
  ?parent <http://dbpedia.org/ontology/spouse> ?person .
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Meritamen> .

  # Condition 2: Spouse of the father of Merneptah
  ?father <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Merenptah> .
  ?father <http://dbpedia.org/ontology/spouse> ?person .

  # Condition 3: Parent of Henuttawy (19th dynasty)
  ?parent2 <http://dbpedia.org/ontology/spouse> ?person .
  ?parent2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> .

  # Ensure all conditions refer to the same person
  FILTER (?parent = ?parent2)
}
```",4,4,5,2,3,3,3,71,0,1,1,0.0,0.0,0
488,37,val,"Give me the administration of Emperor Go-Yōzei and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?deathPlace WHERE {
  # Step 1: Identify Matsudaira Tadamasa's father
  <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Find the father's father (grandfather)
  ?father <http://dbpedia.org/ontology/father> ?grandfather .

  # Step 3: Check if grandfather is a politician and an office holder
  ?grandfather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?grandfather <http://dbpedia.org/ontology/officeHolder> ?office .

  # Step 4: Determine the death place of the grandfather
  ?grandfather <http://dbpedia.org/ontology/deathPlace> ?deathPlace .

  # Step 5: Find Emperor Go-Yōzei's administration (not directly needed for result, but part of query context)
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Yozei> <http://dbpedia.org/ontology/administration> ?administration .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
92,32,val,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
# Part 1: Band member of Nevermore who is also an artist
SELECT ?bandMember WHERE {
  <http://dbpedia.org/resource/Nevermore_(band)> <http://dbpedia.org/ontology/member> ?bandMember .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

UNION

# Part 2: Associated musical artists of Jim Sheppard
SELECT ?associatedArtist WHERE {
  <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedBand> ?associatedArtist .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
528,39,val,Give me the war of Orozimbo Barbosa and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query 1: War of Orozimbo Barbosa
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Query 2: Force of the person born as the birth name of Narciso Campero
SELECT ?force WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ?birthName .
  }
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
  ?person <http://dbpedia.org/ontology/militaryService> ?service .
  ?service <http://dbpedia.org/ontology/force> ?force .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
534,15,val,"Give me the headquarter of Royal Dublin Society and birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . },"```sparql
SELECT ?headquarters ?birthPlace WHERE {
  # Step 1: Find headquarters of Royal Dublin Society
  <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?headquarters .

  # Step 2: Identify politicians native to Essex
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?politician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> .
  ?politician <http://dbpedia.org/ontology/birthPlace> ?essex .

  # Step 3: Find children of these politicians who are also politicians and office holders
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?child <http://dbpedia.org/ontology/officHolder> ?office .
  ?politician <http://dbpedia.org/ontology/child> ?child .

  # Step 4: Determine birthplace of such a child
  ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Filter to ensure Essex is the native place
  ?essex <http://www.w3.org/2000/01/rdf-schema#label> ""Essex"" .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
701,34,val,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?person <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
  ?person <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> .
  ?child <http://dbpedia.org/ontology/birthParent> ?person .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
747,29,val,Give me the band of the writer of Apollo (Hardwell song) and person born on 1985-04-29 and band of Shèna.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . }","```sparql
# Part 1: Band of the writer of Apollo (Hardwell song)
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://purl.org/dc/terms/creator> ?writer .
  ?writer <http://dbpedia.org/ontology/memberOfBand> ?band .
}

UNION

# Part 2: Band of the person born on 1985-04-29
SELECT ?band WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Person born on 1985-04-29""@en .
  ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}

UNION

# Part 3: Band of Shèna
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
179,14,val,Give me the parent of the child of the parent of Vajiralongkorn.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find Vajiralongkorn's parent
  <http://dbpedia.org/resource/Vajiralongkorn> <http://dbpedia.org/ontology/child> ?parent .

  # Step 2: Find the child of that parent
  ?parent <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Determine the parent of this child
  ?child <http://dbpedia.org/ontology/parent> ?result .
}
```",3,3,4,3,1,3,2,20,0,0,3,0,0.0,0
9,32,val,"Give me the alma mater of the awardee of Royal Medal and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?almaMater WHERE {
  # Find the awardee of the Royal Medal and their alma mater
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Royal_Medal> .
  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Find the mayor of Northern Ireland Forum who is a politician and their alma mater
  ?mayor <http://dbpedia.org/ontology/politicalParty> ?party ;
         <http://dbpedia.org/property/mayorFor> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Ensure the alma mater is common to both
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
747,44,val,Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of Apollo (Hardwell song) and person born on 1985-04-29.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
# Find the band of Tracey Elizabeth McSween
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Tracey Elizabeth McSween"" .
  ?person <http://dbpedia.org/property/memberOf> ?band .
}

UNION

# Find the writer of Apollo (Hardwell song) and their band
SELECT ?writerBand WHERE {
  <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://purl.org/dc/terms/creator> ?writer .
  ?writer <http://dbpedia.org/property/memberOf> ?writerBand .
}

UNION

# Find the person born on 1985-04-29 and their band
SELECT ?band WHERE {
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?birthDateEntity .
  ?birthDateEntity <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^xsd:date .
  ?person <http://dbpedia.org/property/memberOf> ?band .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
528,33,val,Give me the war of Irene Morales and war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
# Query 1: Find the war associated with Irene Morales
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Query 2: Find the war of the commander in the work dated --01-09
SELECT ?result WHERE {
  ?work <http://purl.org/dc/terms/date> ""----01-09""^^xsd:date ;
        <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
915,13,val,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . },"```sparql
SELECT ?resident WHERE {
  # Step 1: Identify the director of ""Pipe Dreams"" (1976 film)
  <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?director .

  # Step 2: Determine the birthplace that is a settlement
  ?director <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 3: Find the resident of that settlement
  ?resident <http://dbpedia.org/ontology/residence> ?birthPlace .
}
```",3,4,4,3,1,3,2,20,15,0,0,1.0,1.0,1.0
498,7,val,"Give me the band of Will Rahmer and band of the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
# Find the band associated with Will Rahmer
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/memberOf> ?band .
}

UNION

# Find the band of ""Solace of Requiem"" that is both an organization and a band
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/band> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
392,15,val,"Give me the entity in the region, that is a country, of Central European Time and province of Schio.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> .
  ?entity <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Schio> .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
534,14,val,"Give me the headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://dbpedia.org/ontology/owner> ?v0 . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
SELECT ?headquarters WHERE {
  <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue> ;
            <http://dbpedia.org/ontology/architecturalStructure> ?archStruct .
  ?owner <http://dbpedia.org/property/owns> ?location .
  ?owner <http://dbpedia.org/ontology/headquarters> ?headquarters .
}
```",3,5,4,3,1,3,2,20,0,0,3,0,0.0,0
488,38,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT DISTINCT ?deathPlace WHERE {
  # Father of Yūki Hideyasu
  OPTIONAL {
    <http://dbpedia.org/resource/Yūki_Hideyasu> <http://www.w3.org/2002/07/owl#sameAs>* <http://dbpedia.org/resource/Father_of_Yūki_Hideyasu> .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  
  # Father of Emperor Go-Mizunoo
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://www.w3.org/2002/07/owl#sameAs>* <http://dbpedia.org/resource/Father_of_Emperor_Go-Mizunoo> .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
55,12,val,Give me the band member of Guns N' Roses and band member of Metallica and band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Guns_N%27_Roses> .
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Metallica> .
  OPTIONAL { ?person <http://dbpedia.org/ontology/band> <http://dbpedia.org/resource/Newsted> . }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
10,13,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of Luke Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Matt Colton"" .
  ?person <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Luke_Vibert> .
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
77,14,val,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?force WHERE {
  ?organisation <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Warsaw> .
  ?territory <http://dbpedia.org/ontology/administeredBy> ?organisation .
  ?mayor <http://dbpedia.org/ontology/mayorOf> ?territory .
  ?mayor <http://dbpedia.org/property/force> ?force .
  ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}
```",3,4,4,3,1,3,2,20,0,0,40,0,0.0,0
963,12,val,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci and entity in Serbia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
SELECT ?party WHERE {
  ?party <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Sremski_Karlovci> .
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .
  ?party <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Serbia> .
}
```",3,4,4,2,2,3,2,20,0,0,84,0,0.0,0
528,34,val,"Give me the war of the military force of the entity, that is a societal event, in Chile and force of Narciso Campero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . },"```sparql
# Part 1: Societal event in Chile involving a military force
SELECT ?event ?militaryForce WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}

# Part 2: Wars involving the military force from the societal event
SELECT ?war WHERE {
  ?militaryForce <http://dbpedia.org/property/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Part 3: Military force of Narciso Campero
SELECT ?narcisoForce WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryForce> ?narcisoForce .
}

# Part 4: Wars involving the military force of Narciso Campero
SELECT ?war WHERE {
  ?narcisoForce <http://dbpedia.org/property/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
404,33,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
# Step 1: Find the spouse of Princess Victoria Louise of Prussia
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 2: Find the child of this spouse who is royalty
SELECT ?child WHERE {
  ?spouse <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .
}

# Step 3: Find the parent of that royal child, ensuring they are royalty
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/parent> ?parent .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .
}

# Step 4: Identify the child of Prince George William of Hanover whose parent matches
SELECT ?finalChild WHERE {
  <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/child> ?finalChild .
  ?parent <http://dbpedia.org/ontology/child> ?finalChild .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
391,40,val,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of The Departed and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nickName> ""Jackson, Tennessee"" .
  ?person <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/The_Departed> .
  ?person <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/All_About_the_Andersons> .
}

SELECT ?native WHERE {
  ?person <http://dbpedia.org/property/native> ?native .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
328,41,val,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of Ferenc Szálasi and leader of People's Commissariat of Defense of the Soviet Union.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v2 . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/receivedAward> ?award .
  ?award <http://dbpedia.org/ontology/recipient> ?result .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
281,23,val,Give me the war of the awardee of the award of Jonathon Band.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT DISTINCT ?result WHERE {
  <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/ontology/receivesAward> ?award .
  ?award <http://dbpedia.org/ontology/awardee> ?awardee .
  ?awardee <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",3,3,4,3,1,3,3,71,0,0,450,0,0.0,0
963,13,val,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/ontology/timeZone> ?timezone .
  ?timezone <http://dbpedia.org/ontology/country> ?region .
  ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  BIND(?region AS ?country)
}
```",3,4,4,3,1,3,2,20,0,0,173261,0,0.0,0
701,18,val,Give me the spouse of Ramesses II and parent of Henuttawy (19th dynasty) and parent of Meritamen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> .
  ?spouse <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Meritamen> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
9,42,val,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT DISTINCT ?almaMater WHERE {
  # Find the mayor of Northern Ireland Forum who is also a politician
  ?mayor <http://dbpedia.org/ontology/politician> _:a .
  ?mayor <http://dbpedia.org/property/mayorOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .

  # Find the figure known as the nickname of Queen's University Belfast
  ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""Queen's University Belfast""@en .
  
  # Find Allen Hill (scientist) and his alma mater
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaHill .

  # Alma mater of the mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
  
  # Alma mater of the figure associated with Queen's University Belfast
  ?figure <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Ensure the alma mater is the same for all three entities
  FILTER(?almaMater = ?almaHill)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
547,32,val,Give me the resting place of the actor of Enemy at the Door and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?actorRestingPlace WHERE {
  # Resting place of the actor in ""Enemy at the Door""
  <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .

} UNION {

  # Resting place of the child of James Burton (property developer)
  <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .

}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
179,15,val,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of Ubol Ratana.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  # Step 1: Find the child of Nakkhatra Mangala who is a royalty
  ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nakkhatra_Mangala> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the parent of Ubol Ratana
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ubol_Ratana> .

  # Step 3: Match the person born with the birth name of the child from step 1
  ?person <http://dbpedia.org/ontology/birthName> ?child .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
184,32,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find the child of Archduke Joseph Karl
  <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?child .

  # Step 2: Find the grandchild (child of the child)
  ?child <http://dbpedia.org/ontology/child> ?grandchild .

  # Step 3: Ensure this grandchild is a parent of someone native to Budapest
  ?parent <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Budapest> .
  FILTER (?grandchild = ?parent)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
996,11,val,Give me the force of the awardee of 1778.0 and entity in France.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
SELECT ?force WHERE {
  ?entity <http://dbpedia.org/ontology/awardee> ?award .
  ?award <http://www.w3.org/2000/01/rdf-schema#seeAlso> ""1778"" .
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> .
  ?entity <http://dbpedia.org/ontology/militaryForce> ?force .
}
```",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
915,12,val,"Give me the resident of Springfield, Illinois and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. }","```sparql
SELECT ?father WHERE {
  ?resident <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> .
  ?resident <http://dbpedia.org/ontology/father> ?father .
  ?child <http://dbpedia.org/ontology/father> ?father .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?child <http://dbpedia.org/ontology/soapCharacter> true .
  ?child <http://dbpedia.org/resource/Patrick_Spaulding> .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
404,44,val,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  ?child <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
391,27,val,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?actor WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
}
```",3,6,4,3,1,3,3,71,0,0,7061,0,0.0,0
963,14,val,"Give me the administration of the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/ontology/postalCode> ""21205"" . ?result <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/21205> <http://dbpedia.org/ontology/location> ?location .
  ?location <http://dbpedia.org/ontology/rulingParty> ?rulingParty .
  ?rulingParty <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .
  ?rulingParty <http://dbpedia.org/property/administration> ?administration .
}
```",3,4,4,3,1,3,2,20,0,0,86,0,0.0,0
55,16,val,"Give me the band member of Guns N' Roses and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find a member of Guns N' Roses
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Guns_N%27_Roses> <http://dbpedia.org/ontology/member> ?member .
}

# Step 2: Find a band referenced in connection with Newsted that is categorized as a ""band""
SELECT DISTINCT ?band WHERE {
  ?reference <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Newsted> .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?band .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
10,16,val,Give me the professional in the birth name of Sharon Kao and associated musical artist of Matt Colton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query 1: Find the professional occupation of Sharon Kao using her birth name.
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
  ?person <http://purl.org/dc/terms/profession> ?profession .
}

UNION

# Query 2: Identify the musical artist associated with Matt Colton.
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
547,37,val,Give me the resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
# Query for Alan Cunningham's resting place
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Alan_Cunningham_(British_Army_officer)> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
}

UNION

# Query for the actor of a show with Emily Richard and their resting place
SELECT ?actorRestingPlace WHERE {
  ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Emily_Richard> .
  ?show <http://dbpedia.org/ontology/starredBy> ?actor .
  ?actor <http://dbpedia.org/ontology/restingPlace> ?actorRestingPlace .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
92,31,val,"Give me the associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?artist WHERE {
  # Find Jim Sheppard's associated musical artist
  <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/member> ?band .
  ?band <http://dbpedia.org/ontology/musicalArtist> ?artist .

  # Ensure the band member reference is an artist
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Find the name of the 2006 film ""Nevermore""
  OPTIONAL {
    <http://dbpedia.org/resource/Nevermore_(film)> <http://www.w3.org/2000/01/rdf-schema#label> ?filmName .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
356,15,val,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season and team of Mark Briggs.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  # Step 1: Find the predecessor of the 2015 Sacramento Republic FC season
  <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/predecessor> ?predecessor .

  # Step 2: Ensure the predecessor is a sports team season and specifically a soccer club season
  ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason> .
  ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason> .

  # Step 3: Find the successor of this predecessor
  ?predecessor <http://dbpedia.org/ontology/successor> ?successor .

  # Ensure the successor is also a sports team season and specifically a soccer club season
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason> .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason> .

  # Step 4: Identify the team of Mark Briggs during this period
  <http://dbpedia.org/resource/Mark_Briggs_(soccer)> <http://dbpedia.org/property/team> ?team .
  
  # Ensure the team is associated with the successor season
  ?successor <http://dbpedia.org/ontology/team> ?team .

  # Step 5: Find players in this team during the successor season
  ?successor <http://dbpedia.org/ontology/player> ?player .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
92,23,val,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?bandMember WHERE {
  <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://dbpedia.org/ontology/reference> ?artist .
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?artist <http://dbpedia.org/property/memberOf> ?bandMember .
}
```",3,4,4,3,1,3,3,71,0,0,12,0,0.0,0
251,17,val,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
# Query to find the ruling party in Sicily that is a political party and an organization
SELECT ?party WHERE {
  ?party <http://dbpedia.org/ontology/administration> <http://dbpedia.org/resource/Sicily> .
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}

UNION

# Query to find the death place of Laura Mancinelli
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/property/deathPlace> ?deathPlace .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
427,33,val,Give me the reference to Partito Popolare Italiano and party of the father of the alumnus of Massachusetts Institute of Technology.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
SELECT ?party ?reference WHERE {
  # Step 1: Find an alumnus of MIT
  ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  
  # Step 2: Determine the father of that alumnus
  ?father <http://dbpedia.org/property/father> ?alumnus .

  # Step 3: Find out which political party the father is associated with
  ?father <http://dbpedia.org/ontology/memberOf> ?party .
  
  # Step 4: Find any reference or connection between that political party and Partito Popolare Italiano
  ?reference <http://dbpedia.org/property/reference> ?party ;
              <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Partito_Popolare_Italiano> .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
404,36,val,Give me the spouse of Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
SELECT ?child WHERE {
  # Step 1: Find the spouse of Princess Victoria Louise of Prussia
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Determine the father of that spouse
  ?spouse <http://dbpedia.org/ontology/father> ?father .

  # Step 3: Find the children of that father
  ?father <http://dbpedia.org/ontology/child> ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
161,23,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?militaryForce WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?event <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Francoist_Spain> .

  ?person <http://dbpedia.org/ontology/decedentAt> ?event .
  
  ?person <http://dbpedia.org/ontology/memberOfMilitaryForce> ?militaryForce .
}
```",3,6,4,3,1,3,3,71,0,0,1073,0,0.0,0
617,36,val,Give me the parent of the child of the commander in Battle of Panium and child of Antiochus III the Great.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find the commander in the Battle of Panium
  <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?commander .

  # Step 2: Identify children who are also children of Antiochus III the Great
  ?child <http://dbpedia.org/ontology/father> ?commander .
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .

  # Step 3: Find the parent of these children
  ?child <http://www.w3.org/2000/01/rdf-schema#parent> ?parent .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
54,44,val,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
SELECT ?predecessor WHERE {
  # Step 1: Find the child of Narapati I of Ava who is also a child of Thinkhaya of Pagan
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Narapati_I_of_Ava> .
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .

  # Step 2: Find the parent of this child
  ?parent <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Ensure this parent is an office holder and royalty
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the predecessor of this parent
  ?office <http://dbpedia.org/ontology/officeHolder> ?parent .
  ?office <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
10,18,val,Give me the professional in the birth name of Sharon Kao and band member of Luke Vibert.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?professional WHERE {
  # Find the entity associated with Sharon Kao's birth name
  <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthNameEntity .
  
  # Find entities that are band members of Luke Vibert
  ?bandMember <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Luke_Vibert> .

  # Find the intersection where the birth name entity is also a band member
  FILTER(?birthNameEntity = ?professional)
  BIND(?bandMember AS ?professional)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
16,37,val,Give me the person born as Georgeanne Marie Rice and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
# Step 1: Get the profession of an actor from Unnatural (TV series)
SELECT ?actor ?profession WHERE {
  <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://purl.org/dc/terms/profession> ?profession .
}

# Step 2: Find a person born as Georgeanne Marie Rice with the same profession
SELECT DISTINCT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice"" .
  ?person <http://purl.org/dc/terms/profession> ?sharedProfession .
  
  # Ensure the professions match
  VALUES ?sharedProfession { ?profession }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
92,18,val,Give me the band of Joseph Michael and associated musical artist of Jim Sheppard and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
# Step 1: Find the band associated with Joseph Michael
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Joseph_Michael_(musician)> <http://dbpedia.org/ontology/band> ?band .
}

# Step 2 and 3: Identify Jim Sheppard's associated artists who are members of Nevermore
SELECT DISTINCT ?artist WHERE {
  # Find associated musical artists of Jim Sheppard
  ?sheppard <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
  
  # Ensure the artist is a member of Nevermore
  ?artist <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Nevermore_(band)> .

  # Bind Jim Sheppard to his DBpedia resource
  VALUES ?sheppard { <http://dbpedia.org/resource/Jim_Sheppard_(musician)> }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
915,14,val,"Give me the father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Step 1: Find Lizzie Spaulding's parent who is a fictional character and a soap character.
  <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/father> ?parent .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> ;
          <http://dbpedia.org/ontology/FictionalCharacter> ?soapParent .

  # Step 2: Find the child of that parent who is also a fictional character and a soap character.
  ?parent <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> ;
         <http://dbpedia.org/ontology/FictionalCharacter> ?soapChild .

  # Step 3: Determine the father of this child.
  ?child <http://dbpedia.org/ontology/father> ?father .
}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
303,13,val,"Give me the entity in Panama and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?commander <http://dbpedia.org/property/politicalParty> ?party .
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?party <http://dbpedia.org/property/member> ?entity .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
488,33,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of Enomoto Takeaki.",SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?deathPlace ?birthPlace WHERE {
  # Find Matsudaira Tadamasa's father who is an office holder
  <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .

  # Find the father's father who is a politician
  ?father <http://dbpedia.org/ontology/father> ?grandfather .
  ?grandfather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Get the death place of this grandfather
  ?grandfather <http://dbpedia.org/ontology/deathPlace> ?deathPlace .

  # Find Enomoto Takeaki's birthplace
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
281,26,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/ontology/leader> ?leader .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?birthPlace ?property ?entity .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
391,25,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify movies with Roz Ryan
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
  
  # Step 2: Ensure the movie is a Movie, Work, and Television Show
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
  
  # Step 3: Find actors of The Departed
  ?departedActor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/The_Departed> .
  
  # Step 4: Check if these actors are also in the identified movie
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  
  FILTER (?actor = ?departedActor)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
994,28,val,Give me the associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of Watchtower (band) and band member of Don Dokken.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find associated musical artists of Red Tide (band)
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

# Step 2: For each artist found in step 1, find their associated musical artists
SELECT DISTINCT ?secondLevelArtist WHERE {
  ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?secondLevelArtist .
  FILTER(?artist IN (SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  }))
}

# Step 3: Identify band members of Watchtower from the second-level associated artists
SELECT DISTINCT ?watchtowerMember WHERE {
  ?secondLevelArtist <http://dbpedia.org/ontology/bandMember> ?watchtowerMember .
  FILTER(?secondLevelArtist IN (SELECT ?secondLevelArtist WHERE {
    ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?secondLevelArtist .
    FILTER(?artist IN (SELECT ?artist WHERE {
      <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
    }))
  }))
  ?watchtowerMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BandMember> ;
                   <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Watchtower_(band)> .
}

# Step 4: Find who are also band members of Don Dokken
SELECT DISTINCT ?donDokkenMember WHERE {
  ?watchtowerMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BandMember> ;
                    <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Don_Dokken> .
  FILTER(?watchtowerMember IN (SELECT ?watchtowerMember WHERE {
    ?secondLevelArtist <http://dbpedia.org/ontology/bandMember> ?watchtowerMember .
    FILTER(?secondLevelArtist IN (SELECT ?secondLevelArtist WHERE {
      ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?secondLevelArtist .
      FILTER(?artist IN (SELECT ?artist WHERE {
        <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
      }))
    }))
    ?watchtowerMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BandMember> ;
                      <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Watchtower_(band)> .
  }))
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
378,27,val,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?commander ?claimToFame WHERE {
  ?war <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://dbpedia.org/property/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/claimToFame> ?claimToFame .

  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  ?battle <http://dbpedia.org/property/participant> <http://dbpedia.org/resource/Thomas_Trigge> .
}
```",3,6,4,3,1,3,3,71,0,0,6,0,0.0,0
182,16,val,Give me the entity in the nationality of Tamara Kunanayakam and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Get the nationality of Tamara Kunanayakam
  <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?nationality .
  
  # Get wars involving Mahesh Senanayake
  ?senanayake <http://dbpedia.org/ontology/battle> ?war .
  FILTER(?senanayake = <http://dbpedia.org/resource/Mahesh_Senanayake>)
  
  # Find entities that are both a country and a war
  OPTIONAL { ?nationality rdfs:label ?entity . }
  OPTIONAL { ?war rdfs:label ?entity . }
  
  FILTER(?nationality != ?war) # Ensure they are distinct but related through the entity
}
```",3,3,4,2,2,2,3,28,0,1,1,0.0,0.0,0
827,13,val,"Give me the child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find the parent of Charles Alexander
  <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/father> ?parent .

  # Step 2: Find children of that parent
  ?parent <http://dbpedia.org/ontology/child> ?royalChild .
  
  # Step 3: Ensure the child is royalty
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 4: Find children of the royal child
  ?royalChild <http://dbpedia.org/ontology/child> ?grandchild .
}
```",3,4,4,3,1,3,2,20,0,0,8,0,0.0,0
492,19,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in Franco-Hova Wars.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?person WHERE {
  # Find decedents at the work of Joseph C. Satterthwaite
  ?work <http://dbpedia.org/ontology/employee> ?decedent .
  ?decedent <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph C. Satterthwaite""@en .
  
  # Find commanders in the Franco-Hova Wars
  ?war <http://dbpedia.org/ontology/commander> ?person .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://dbpedia.org/property/name> ""Franco-Hova Wars""@en .

  # Ensure the person is both a decedent and a commander
  FILTER (?decedent = ?person)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
696,13,val,"Give me the birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
SELECT ?birthPlace WHERE {
  ?member <http://dbpedia.org/ontology/member> ?organisation .
  ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
  ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?member <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/The_Boils> .
  ?member <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
701,36,val,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of Meritamen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find the royal commander in the Battle of Perire
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Ensure the battle is Battle of Perire
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Perire>) .

  # Step 2: Find the father of this commander
  ?commander <http://dbpedia.org/ontology/father> ?father .

  # Step 3: Find the spouse of this father
  ?father <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 4: Ensure this spouse is a parent of Meritamen
  ?spouse <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Meritamen> .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
328,29,val,Give me the commander in the force of Ferenc Szálasi and awardee of Order of Suvorov and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person WHERE {
  # Commander in Ferenc Szálasi's force
  ?szalasi <http://dbpedia.org/ontology/commander> ?person .
  FILTER(?szalasi = <http://dbpedia.org/resource/Ferenc_Szálasi>) .

  # Awardee of the Order of Suvorov
  ?person <http://dbpedia.org/property/orderOfSuvorovAwardee> ?trueValue .

  # Leader of People's Commissariat of Defense of the Soviet Union
  ?person <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
404,21,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia""@en .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
666,11,val,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season and figure known as The Three Lions.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . }","```sparql
SELECT ?player WHERE {
  # Step 1: Identify the manager of the 2016-17 Hull City A.F.C. season
  <http://dbpedia.org/resource/2016%E2%80%9317_Hull_City_A.FC_season> <http://dbpedia.org/ontology/manager> ?manager .
  
  # Step 2: Ensure this manager is recognized as a sports manager and associated with ""The Three Lions""
  ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
  OPTIONAL { ?manager foaf:name ""The Three Lions"" . }
  
  # Step 3: Find players from the same season
  ?player <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Hull_City_A.FC> ;
          <http://dbpedia.org/ontology/sportTeamSeason> <http://dbpedia.org/resource/2016%E2%80%9317_Hull_City_A.FC_season> .
}
```",3,4,4,2,2,3,2,20,0,0,2,0,0.0,0
778,13,val,"Give me the entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?entity WHERE {
  ?award <http://dbpedia.org/ontology/awardee> ?person .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/American> .
  ?award <http://dbpedia.org/ontology/prize> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> .
  ?award ?property ?entity .
}
```",3,4,4,3,1,3,2,20,0,0,18629,0,0.0,0
161,44,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
SELECT DISTINCT ?force WHERE {
  # Forces involving Emilio Mola as a commander
  ?event <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?force .

  # Forces involving Francisco Largo Caballero in societal events and military conflicts
  ?societalEvent <http://dbpedia.org/ontology/militaryForce> ?force2 .
  ?militaryConflict <http://dbpedia.org/ontology/militaryForce> ?force3 .
  ?societalEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?militaryConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?societalEvent <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
  ?militaryConflict <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .

  # Forces involved in the Rif War
  ?rifWar <http://dbpedia.org/ontology/militaryForce> ?force4 .
  ?rifWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?rifWar rdfs:label ""Rif War""@en .

  # Intersection of forces
  FILTER (?force = ?force2 && ?force = ?force3 && ?force = ?force4)
}
```",5,8,6,2,3,3,3,71,0,0,11,0,0.0,0
48,14,val,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?band WHERE {
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> .
  ?actor <http://dbpedia.org/ontology/appearsIn> ?show ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?actor <http://dbpedia.org/property/band> ?band .
}
```",3,4,4,3,1,3,2,20,0,0,36,0,0.0,0
659,25,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
SELECT ?militaryForce WHERE {
  ?conflict <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Battle_of_Leipzig> .
  ?commander <http://dbpedia.org/ontology/battle> ?conflict .

  ?conflict <http://dbpedia.org/property/militaryForce> ?militaryForce .
}
```",3,6,4,2,2,3,3,71,0,0,6,0,0.0,0
92,42,val,"Give me the band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney and associated musical artist of Jim Sheppard.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Part 1: Band member of Nevermore who is an artist
  { 
    ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Nevermore_(band)> .
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  }
  
  # Part 2: Band of Joseph Michael Furney
  UNION 
  {
    ?person <http://xmlns.com/foaf/0.1/name> ""Joseph Michael Furney"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?person <http://dbpedia.org/ontology/member> ?band .
  }
  
  # Part 3: Associated musical artist of Jim Sheppard
  UNION 
  {
    ?artist <http://dbpedia.org/property/associatedBandMember> <http://dbpedia.org/resource/Jim_Sheppard_(musician)> .
  }

  # Combine results to find common band members
  FILTER(?member = ?band && ?member = ?artist)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
747,32,val,Give me the person born on the birth date of Pavlo Khudzik and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
# Query for person born on the same date as Pavlo Khudzik
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?person <http://dbpedia.org/ontology/birthDate> ?sameBirthDate .
  FILTER (?birthDate = ?sameBirthDate)
}

# Query for band of the writer of Apollo (Hardwell song)
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://dbpedia.org/ontology/band> ?band .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
232,35,val,"Give me the child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?child WHERE {
  # Step 1: Find John Devon Roland Pertwee's DBpedia resource
  ?pertwee <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .
  
  # Step 2: Identify Sylvie Bermann's residence that is a settlement and British
  ?bermann <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 3: Match this residence as the native place of John Pertwee
  ?pertwee <http://dbpedia.org/ontology/nativePlace> ?residence .
  
  # Step 4: Find any children related to John Pertwee
  ?pertwee <http://dbpedia.org/ontology/child> ?child .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
617,29,val,Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
427,26,val,Give me the party of the father of the alumnus of Massachusetts Institute of Technology.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT DISTINCT ?party WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?father <http://dbpedia.org/ontology/father> ?alumnus .
  ?father <http://dbpedia.org/ontology/politicalParty> ?party .
}
```",3,3,4,3,1,3,3,71,0,0,7,0,0.0,0
179,13,val,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
SELECT ?person WHERE {
  # Step 1: Find children of Nakkhatra Mangala who are royalty
  <http://dbpedia.org/resource/Nakkhatra_Mangala> <http://dbpedia.org/ontology/child> ?child .
  
  # Ensure the child is categorized as royalty
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the birth name of each child
  ?child <http://dbpedia.org/property/birthName> ?birthName .

  # Step 3: Identify persons born with that birth name
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?person <http://dbpedia.org/property/birthName> ?birthName .
}
```",3,4,4,3,1,3,2,20,1,0,0,1.0,1.0,1.0
378,28,val,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the person born as Carl Pontus Gahn and war of Joaquín Blake.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
# Query 1: Claim to Fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?claimToFame WHERE {
  <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/notableFor> ?claimToFame .
}

# Query 2: Wars involving Carl Pontus Gahn
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Query 3: Wars involving Joaquín Blake
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
783,11,val,Give me the associated musical artist of the band member of Ofori Amponsah and band member of Ebony Reigns.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Find band members of Ofori Amponsah
  ?bandMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Ofori_Amponsah> .
  
  # Ensure the same person is a member of Ebony Reigns' band
  ?bandMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Ebony_Reigns> .

  # Find associated musical artists for this band member
  ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
659,37,val,"Give me the military force of Napoleonic Wars and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
SELECT ?militaryForce ?commander WHERE {
  # Step 1: Identify military forces in the Napoleonic Wars
  ?force <http://dbpedia.org/ontology/participatedIn> <http://dbpedia.org/resource/Napoleonic_Wars> .
  
  # Step 2: Find commanders of these forces
  ?force <http://dbpedia.org/ontology/commander> ?commander .

  # Step 3: Ensure the event is both a war and a military conflict
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Step 4: Identify the figure known as 'Polish Horse'
  <http://dbpedia.org/resource/Polish_Horse> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?unitType .
  FILTER (?unitType IN (<http://dbpedia.org/ontology/MilitaryUnit>, <http://dbpedia.org/ontology/Organisation>)).
  
  # Step 5: Link the figure to the event
  ?event <http://dbpedia.org/ontology/participatedIn> <http://dbpedia.org/resource/Polish_Horse> .
}
```",4,8,5,3,2,3,3,71,0,0,29,0,0.0,0
421,15,val,Give me the band member of the awardee of [[#Awards and nominations and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?bandMember WHERE {
  # Step 1: Identify the person born as Edin Dervišhalidović
  ?person <http://dbpedia.org/ontology/birthName> ""Edin Dervišhalidović"" .
  
  # Step 2: Determine the awards or nominations received by this individual
  ?award <http://dbpedia.org/property/receiver> ?person .

  # Step 3: Find out which band is associated with these awards (the awardee)
  ?award <http://dbpedia.org/ontology/awardedTo> ?band .
  
  # Step 4: Identify the band members of that particular band
  ?bandMember <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
487,15,val,Give me the country of the administration of the person born on 1955-01-26 and administration of Phil Scott.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/country> ?result . }","```sparql
SELECT DISTINCT ?country WHERE {
  # Find person born on 1955-01-26
  ?person <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> .
  
  OPTIONAL {
    ?administration <http://dbpedia.org/ontology/administration> ?country .
    ?person <http://dbpedia.org/ontology/officeHolder> ?administration .
  }
  
  # Find Phil Scott's administrations
  OPTIONAL {
    <http://dbpedia.org/resource/Phil_Scott_(politician)> <http://dbpedia.org/ontology/officeHolder> ?philAdministration .
    ?philAdministration <http://dbpedia.org/ontology/administration> ?country .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
404,19,val,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . }","```sparql
# Query 1: Find the parent of Prince Ernest Augustus of Hanover (born 1914)
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914)> <http://dbpedia.org/ontology/parent> ?parent .
}

# Query 2: Find the spouse of Princess Victoria Louise of Prussia who is royalty
SELECT ?spouse WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Princess Victoria Louise of Prussia""@en ;
          <http://dbpedia.org/ontology/birthName> ""Victoria Louise Margaret Agnes"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
747,24,val,Give me the band of the writer of Apollo (Hardwell song) and band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?apolloBand ?shenaBand WHERE {
  # Find the band of the writer of Apollo (Hardwell song)
  <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://dbpedia.org/ontology/memberOf> ?apolloBand .

  # Find the band of Shèna
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/memberOf> ?shenaBand .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,18,val,Give me the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
SELECT ?parent WHERE {
  ?thadoMinsaw <http://dbpedia.org/ontology/birthParent> ?parent .
  FILTER(?thadoMinsaw = <http://dbpedia.org/resource/Thado_Minsaw_of_Prome>)
  
  ?thinkhayaChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  FILTER(?parent = ?thinkhayaChild)
  
  ?succession <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
  FILTER(?parent = ?succession)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
427,19,val,Give me the party of Giulio Andreotti and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?party ?reference WHERE {
  <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/politicalParty> ?party .
  ?party <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference .
  FILTER(CONTAINS(LCASE(STR(?reference)), ""italian people's party (1994)""))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
747,37,val,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and band of Shèna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v3 . },"```sparql
# Step 1: Find the song written by Amba Shepherd
SELECT ?song WHERE {
  ?song <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Amba_Shepherd> .
  ?song <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
}

# Step 2: Find the band associated with Shèna
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/memberOf> ?band .
}

# Step 3: Determine the band of Amba Shepherd for the identified song
SELECT ?result WHERE {
  ?song <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Amba_Shepherd> .
  ?song <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/memberOf> ?result .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
747,36,val,Give me the band of the person born as the persona of Shèna and person born on 1985-04-29.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?shenaBand ?bornOnApril29Band WHERE {
  # Find the person with persona ""Shèna"" and their band
  ?person <http://dbpedia.org/ontology/personalName> ""Shèna"" .
  ?person <http://dbpedia.org/ontology/band> ?shenaBand .

  # Find the person born on April 29, 1985, and their band
  ?person2 <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Birth_date:April_29,_1985> .
  ?person2 <http://dbpedia.org/ontology/band> ?bornOnApril29Band .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
10,12,val,Give me the professional in  and associated musical artist of Matt Colton and band member of Luke Vibert.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query to find Matt Colton's profession and associated musical artist
SELECT ?profession ?artist WHERE {
  <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/profession> ?profession .
  OPTIONAL { 
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
  }
}

# Query to find Luke Vibert's band membership
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Luke_Vibert> <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
528,28,val,Give me the war of the military force of Battle of Pisagua and war of Orozimbo Barbosa and force of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT DISTINCT ?war1 ?force2 WHERE {
  # Find the war of the military force in Battle of Pisagua
  <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?force1 .
  ?force1 <http://dbpedia.org/ontology/battle> ?war1 .

  # Find the war involving Orozimbo Barbosa
  OPTIONAL {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?barbosaWar .
    FILTER(?war1 = ?barbosaWar)
  }

  # Find the military force of Narciso Campero
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryForce> ?force2 .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
435,12,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and region of Greenwich Mean Time and territory administered from Reykjavík.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . }","```sparql
SELECT ?entity ?work WHERE {
  { 
    <http://dbpedia.org/resource/Article_62,_Section_IV_of_Constitution_of_Iceland> <http://dbpedia.org/ontology/wikiPageWikiLink> ?work .
    BIND(<http://dbpedia.org/resource/Article_62,_Section_IV_of_Constitution_of_Iceland> AS ?entity)
  }
  UNION
  {
    ?region <http://www.w3.org/2000/01/rdf-schema#label> ""Greenwich Mean Time"" .
    ?region <http://dbpedia.org/ontology/wikiPageWikiLink> ?work .
    BIND(?region AS ?entity)
  }
  UNION
  {
    ?territory <http://dbpedia.org/property/administrativeCentre> <http://dbpedia.org/resource/Reykjavík> .
    ?territory <http://dbpedia.org/ontology/wikiPageWikiLink> ?work .
    BIND(?territory AS ?entity)
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
485,13,val,"Give me the birth place of Thomas Warner (poet) and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?birthPlace ?country WHERE {
  # Find the birthplace of Thomas Warner (poet)
  <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Find a country in the region associated with Western European Time
  <http://dbpedia.org/resource/Western_European_Time> <http://dbpedia.org/ontology/timeZoneOfRegion> ?region .
  ?country <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> ;
           <http://dbpedia.org/ontology/location> ?location .
  ?location <http://dbpedia.org/ontology/partOfRegion> ?region .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
487,11,val,Give me the country of the administration of Patricia McCoy and administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . ?v2 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . },"```sparql
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Patricia_McCoy> <http://dbpedia.org/ontology/administration> ?admin1 .
  <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/ontology/administration> ?admin2 .
  ?admin1 <http://dbpedia.org/property/country> ?country .
  ?admin2 <http://dbpedia.org/property/country> ?country .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
959,37,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?native WHERE {
  ?person <http://dbpedia.org/ontology/politicalLeader> <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> .
  ?person <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> .
  
  ?person <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  ?residence <http://dbpedia.org/ontology/nativePlace> ?native .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
314,15,val,Give me the commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> .
  ?commander <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/House_of_Sombrerete_headquarters> .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
701,19,val,Give me the parent of the child of Nefertari and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nefertari> .
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> .
  ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,38,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
# Step 1: Find movies that are a ""Movie"", ""Work"", and ""TelevisionShow""
SELECT ?movie WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
}

# Step 2: Find actors in these movies who have worked with Roz Ryan
SELECT DISTINCT ?actor WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?otherMovie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
  ?actor <http://dbpedia.org/ontology/starring> ?otherMovie .
}

# Step 3: Find the claim to fame of Michael Ballhaus
SELECT ?claimToFame WHERE {
  <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/property/claimToFame> ?claimToFame .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
}

# Step 4: Find an actor associated with both the movie and the claim to fame
SELECT DISTINCT ?actor WHERE {
  # From step 2
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?otherMovie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
  ?actor <http://dbpedia.org/ontology/starring> ?otherMovie .

  # From step 3
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/property/claimToFame> ?claimToFame .
  ?claimToFame <http://dbpedia.org/ontology/starring> ?actor .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
142,7,val,Give me the birthplace of George Tokoro and entity in the region of Japan Standard Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?region <http://www.w3.org/2000/01/rdf-schema#label> ""Japan Standard Time"" .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
  ?region <http://dbpedia.org/property/timeZone> ?birthPlace .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
696,14,val,Give me the landmark at elevation of the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
SELECT ?landmark WHERE {
  <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/award> ?award .
  ?award <http://dbpedia.org/property/elevation> ?elevation .
  ?landmark <http://dbpedia.org/property/elevation> ?elevation .
}
```",3,3,4,3,1,3,2,20,0,0,1731,0,0.0,0
55,17,val,"Give me the band of Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT DISTINCT ?band WHERE {
  # Step 1: Find Newsted's band
  <http://dbpedia.org/resource/Matt_Newsted> <http://dbpedia.org/ontology/memberOf> ?newstedBand .

  # Step 2: Find members of Newsted's band
  ?newstedBand <http://dbpedia.org/ontology/member> ?bandMember .

  # Step 3 & 4: Check if these members are part of other bands or groups that are both Band and Group
  ?bandMember <http://dbpedia.org/ontology/memberOf> ?otherBand .
  ?otherBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?otherBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .

  # Step 5: Ensure one of these bands is the San Francisco Symphony
  FILTER(?otherBand = <http://dbpedia.org/resource/San_Francisco_Symphony>)
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
54,42,val,"Give me the parent of Thado Minsaw of Prome and child of the father of Soe Min Wimala Dewi and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Find Thado Minsaw of Prome and his children
  ?thadoMinsawOfProme <http://dbpedia.org/ontology/child> ?child .
  
  # Ensure the child is a predecessor to Soe Min Wimala Dewi's father's child
  ?father <http://dbpedia.org/ontology/child> ?predecessorChild .
  FILTER (?child = ?predecessorChild)

  # Step 3: Check if the child is an office holder and royalty
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find Thado Minsaw's parent
  ?thadoMinsawOfProme <http://dbpedia.org/ontology/parent> ?parent .
}
```",5,7,6,2,3,3,3,71,0,12,1,0.0,0.0,0
378,23,val,Give me the war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?war WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
  ?person <http://dbpedia.org/ontology/battle> ?war .
}
```",3,3,4,3,1,3,3,71,0,0,12,0,0.0,0
360,14,val,"Give me the writer of The Roaring Silence and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  # Step 1: Find the writer of ""The Roaring Silence""
  <http://dbpedia.org/resource/The_Roaring_Silence> <http://purl.org/dc/terms/creator> ?writer .

  # Step 2 and 3: Get the death place of Winnie Madikizela-Mandela that is a settlement
  OPTIONAL {
    <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  }

  # Step 4: Check if the writer is native to this death place
  OPTIONAL {
    ?writer <http://dbpedia.org/ontology/nativePlace> ?deathPlace .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
391,34,val,"Give me the actor of All About the Andersons and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
# Step 1: Find the actor(s) of ""All About the Andersons""
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 2: Identify the nickname for Jackson, Tennessee and its native place
SELECT ?nativePlace WHERE {
  ?jackson <http://dbpedia.org/ontology/nickName> ""The Volunteer State"" . # Assuming this is the known nickname
  ?jackson <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ?nativePlace .
}

# Step 3: Find actors who are natives of the identified place
SELECT DISTINCT ?actor WHERE {
  # Actors from ""All About the Andersons""
  <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/starring> ?actor .
  
  # Natives of the nickname's location for Jackson, Tennessee
  ?jackson <http://dbpedia.org/ontology/nickName> ""The Volunteer State"" .
  ?jackson <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ?nativePlace .
  
  # Actor's birthplace matches the native place
  ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER (?birthPlace = ?location)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,42,val,Give me the spouse of the person born as Ted Martin McGinley and professional in Actress and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
SELECT ?spouse WHERE {
  # Find spouse of Ted Martin McGinley (actor)
  OPTIONAL {
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
  }
  
  # Find spouse of Gigi Rice
  OPTIONAL {
    <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/spouse> ?spouse .
  }
}
```",5,5,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
314,17,val,Give me the awardee of the award of Sergei Makovetsky and commander in Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?awardee WHERE {
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
  ?awardee <http://dbpedia.org/property/commanderInWar> <http://dbpedia.org/resource/Spanish_Civil_War> .
  
  OPTIONAL {
    ?award <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Sergei_Makovetsky> .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
360,13,val,"Give me the writer of the work, that is an album, of Dave Flett and native of Johannesburg.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
SELECT ?album ?writer WHERE {
  ?album <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Dave_Flett> .
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album> .
  OPTIONAL { 
    ?writer <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> .
    ?album <http://dbpedia.org/ontology/writer> ?writer .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
184,33,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Géza von Habsburg.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find the royal parent of Archduke Ladislaus Philipp of Austria
  ?royalParent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ladislaus_Philipp_of_Austria> .
  ?royalParent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 2: Find the child of this royal parent
  ?royalParent <http://dbpedia.org/ontology/child> ?parentOfChild .
  
  # Step 3: Find the child of the individual from step 2
  ?parentOfChild <http://dbpedia.org/ontology/child> ?grandchild .

  # Step 4: Ensure this grandchild is also the parent of Géza von Habsburg
  ?grandchild <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
427,32,val,Give me the party of the father of Lamberto Andreotti and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?fatherParty ?reference WHERE {
  # Step 1: Find Lamberto Andreotti's father
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Determine the political party of his father
  ?father <http://dbpedia.org/ontology/partyMembership> ?party .
  ?party <http://www.w3.org/2000/01/rdf-schema#label> ?fatherParty .

  # Step 3: Find references to Italian People's Party (1994)
  OPTIONAL {
    ?reference <http://dbpedia.org/ontology/wikiPageRedirects> <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> .
    ?party ?relation ?reference .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
16,31,val,Give me the spouse of the person born as the birth name of Ted McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Ted McGinley"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actress> .
  ?person <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
232,28,val,Give me the native of London and child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?child WHERE {
  # Step 1: Identify John Devon Roland Pertwee
  ?john a <http://dbpedia.org/ontology/Person> ;
        <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee"" .
  
  # Step 2: Find children of John Pertwee
  ?john <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Filter for those native to London and actors in Dog Soldiers (film)
  ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace rdfs:label ""London""@en .
  
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/film> ?film .
    ?film rdfs:label ""Dog Soldiers (film)""@en .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
747,33,val,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . }","```sparql
SELECT ?band WHERE {
  # Step 1: Find the person born on 1985-04-29
  ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
  
  # Step 2: Identify songs written by this person
  ?song <http://dbpedia.org/ontology/writer> ?person ;
        a <http://dbpedia.org/ontology/Song> .

  # Step 3: Find the band associated with these songs
  ?band <http://dbpedia.org/ontology/song> ?song .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
959,40,val,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?manager WHERE {
  # Step 1: Find person born in 1958 and native of Japan
  ?person <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> .
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .

  # Step 2: Find alma mater that is Japanese, an organization, a university, and an educational institution
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1 .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type2 .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type3 .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type4 .

  FILTER (?type1 = <http://dbpedia.org/resource/Japan>)
  FILTER (?type2 = <http://dbpedia.org/ontology/Organization>)
  FILTER (?type3 = <http://dbpedia.org/ontology/University>)
  FILTER (?type4 = <http://dbpedia.org/ontology/EducationalOrganization>)

  # Step 3: Check if this person was the manager of the 2013 Júbilo Iwata season
  ?season <http://dbpedia.org/ontology/manager> ?person .
  ?season <http://www.w3.org/2000/01/rdf-schema#label> ""2013 Júbilo Iwata season"" .

  BIND(?person AS ?manager)
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
378,34,val,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
# Find Carl Pontus Gahn's birth name and associated wars
SELECT ?birthName ?war WHERE {
  ?gahn <http://dbpedia.org/ontology/birthName> ?birthName .
  FILTER(?gahn = <http://dbpedia.org/resource/Carl_Pontus_Gahn>)
  
  OPTIONAL { 
    ?gahn <http://dbpedia.org/ontology/war> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
}

UNION

# Find Louis des Balbes de Berton de Crillon's claim to fame and associated wars
SELECT ?claimToFame ?war WHERE {
  ?crillon <http://dbpedia.org/property/claimToFame> ?claimToFame .
  FILTER(?crillon = <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón>)
  
  OPTIONAL { 
    ?crillon <http://dbpedia.org/ontology/war> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
485,12,val,Give me the birth place of Thomas Warner (poet) and entity in Nottinghamshire and entity in United Kingdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?placeType .
  FILTER (?placeType IN (<http://dbpedia.org/class/yago/Places>, <http://dbpedia.org/ontology/PopulatedPlace>)).
  ?result <http://dbpedia.org/property/location> ?location .
  ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?locationType .
  FILTER (?locationType IN (<http://dbpedia.org/class/yago/CountiesOfEngland>, <http://dbpedia.org/class/yago/Countries>)).
  VALUES ?specificLocation { 
    <http://dbpedia.org/resource/Nottinghamshire>
    <http://dbpedia.org/resource/United_Kingdom>
  }
  ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?specificLocation .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
767,36,val,"Give me the entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
SELECT ?character ?entity WHERE {
  <http://dbpedia.org/resource/Matthew_Burland> <http://dbpedia.org/ontology/fictionalAlterEgo> ?character .
  ?character <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?character <http://dbpedia.org/property/reference> ?entity .
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Baden-Württemberg> .
}
```",4,5,5,3,2,3,3,71,0,0,7,0,0.0,0
959,19,val,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
SELECT ?native WHERE {
  # Step 1: Identify Eiji Ōtsuka's alma mater
  <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  
  # Step 2: Ensure the alma mater is Japanese, an organization, a university, and an educational institution
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
  ?almaMater <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> .

  # Step 3: Find natives of Japan who are members of this alma mater
  ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?native <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .
  ?native <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",3,7,4,2,2,3,3,71,0,0,84,0,0.0,0
487,13,val,Give me the country of the administration of the person born on 1955-01-26.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/country> ?result . ?v1 <http://dbpedia.org/property/leader> ?v0 . }","```sparql
SELECT ?country WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://dbpedia.org/ontology/administration> ?administration .
  ?administration <http://dbpedia.org/ontology/country> ?country .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
820,15,val,Give me the professional in the award of the author of Understanding Comics and child of Jack Schwartzman.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?professional WHERE {
  ?author <http://dbpedia.org/ontology/book> <http://dbpedia.org/resource/Understanding_Comics> .
  ?author <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?author <http://dbpedia.org/ontology/familyName> ""Schwartzman"" .
  ?parent <http://dbpedia.org/ontology/spouse> ?author .
  ?parent <http://www.w3.org/2000/01/rdf-schema#label> ""Jack Schwartzman""@en .
  
  ?award <http://purl.org/dc/terms/creator> ?author .
  ?award <http://dbpedia.org/property/profession> ?professional .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
827,15,val,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . }","```sparql
SELECT ?father WHERE {
  # Step 1: Find the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach
  <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/father> ?parent .

  # Step 2: Find the children of that parent who are royalty
  ?parent <http://dbpedia.org/ontology/child> ?royalChild .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 3: Find the child of one of those royal children
  ?royalChild <http://dbpedia.org/ontology/child> ?grandChild .

  # Step 4: Find the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach
  <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/father> ?father .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
391,26,val,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  # Step 1: Identify Sherry Hormann's spouse
  <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Determine the claim to fame of that spouse, which is a work
  ?spouse <http://dbpedia.org/property/claimToFame> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CreativeWork> .

  # Step 3: Find the actors associated with that work
  ?work <http://dbpedia.org/property/starring> ?actor .
}
```",3,4,4,3,1,3,3,71,0,0,20,0,0.0,0
659,19,val,"Give me the commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commander WHERE {
  # Find commanders in the Battle of Leipzig
  { 
    <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?commander .
  }
  
  # Find those who were part of forces commanded by Arthur Wellesley, 1st Duke of Wellington
  UNION {
    ?force <http://dbpedia.org/property/commandedBy> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
    ?force <http://dbpedia.org/ontology/commander> ?commander .
  }
}
```",3,3,4,2,2,3,3,71,19,2,0,0.9047619047619048,1.0,0.9500000000000001
617,33,val,"Give me the child of Antiochus III the Great and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find children of Antiochus III the Great
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .

  # Step 2: Determine successor of Antiochus (son of Antiochus III the Great)
  OPTIONAL { 
    ?antiochus <http://dbpedia.org/ontology/successor> ?successor .
  }

  # Step 3: Find children of that successor who are royalty
  ?successor <http://dbpedia.org/ontology/child> ?royalChild .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Identify the spouse of one of these royal children
  ?royalChild <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",4,5,5,3,2,3,3,71,4,2921,0,0.0013675213675213675,1.0,0.0027313076135199728
617,12,val,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary and child of Doubravka of Bohemia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Richeza's father who is a royalty
  <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/ontology/father> ?father .
  
  # Ensure the father is of type Royalty
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the parent (likely mother) of this royal figure
  ?father <http://dbpedia.org/ontology/mother> ?parent .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
281,29,val,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Step 1: Wars associated with Beauchamp Seymour, 1st Baron Alcester
SELECT ?war1 WHERE {
  <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?war1 .
}

# Step 2: Entity in the birthplace of Bob Heffron that is a country
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?entity <http://dbpedia.org/ontology/location> ?birthPlace .
}

# Step 3: Wars involving the New Zealand Army
SELECT ?war2 WHERE {
  <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?war2 .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
959,35,val,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
SELECT ?manager WHERE {
  # Step 1: Find Takashi Sekizuka's team
  ?team <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Takashi_Sekizuka> .
  
  # Step 2: Get the manager of that team
  ?team <http://dbpedia.org/ontology/manager> ?manager .

  # Step 3: Find Eiji Ōtsuka's alma mater, ensuring it is a Japanese organization and university (educational institution)
  <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/property/almaMater> ?almaMater .
  
  # Step 4: Ensure the alma mater is a Japanese organization, university, and educational institution
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
             <http://dbpedia.org/ontology/EducationalOrganization> ;
             <http://dbpedia.org/ontology/University> .
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""japan""))
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
55,13,val,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of Metallica.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Find the band that produced ""Used to Love Her""
  ?song <http://dbpedia.org/ontology/producer> ?producer .
  ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?song <http://purl.org/dc/terms/title> ""Used to Love Her"" .

  # Find a band member of the producer
  ?producer <http://dbpedia.org/ontology/member> ?bandMember .

  UNION

  # Find a band member of Metallica
  <http://dbpedia.org/resource/Metallica> <http://dbpedia.org/ontology/member> ?bandMember .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
182,13,val,Give me the war of Jagath Dias and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query to find wars involving Jagath Dias
SELECT ?war WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Jagath Dias"" .
  ?person <http://dbpedia.org/ontology/commander> ?battle .
  ?battle <http://dbpedia.org/ontology/war> ?war .
}

UNION

# Query to find wars involving the author of ""2019 Sri Lanka Easter bombings""
SELECT ?war WHERE {
  <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://purl.org/dc/terms/creator> ?author .
  ?author <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://dbpedia.org/ontology/war> ?war .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
435,17,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
# Query 1: Work of Article 62, Section IV of Constitution of Iceland
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Article_62,_Section_IV_of_Constitution_of_Iceland> <http://dbpedia.org/ontology/work> ?work .
}

UNION

# Query 2: Region of the time zone in Bombali Shebora Chiefdom
SELECT ?region WHERE {
  <http://dbpedia.org/resource/Bombali_Shebora_Chenchiefdom> <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?timeZone <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?region .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,34,val,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
SELECT ?parent ?child WHERE {
  # Step 1: Identify Nysa and her parent(s)
  <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> <http://dbpedia.org/ontology/birthParent> ?parent .

  # Step 2: Find the child(ren) of these parents who are royalty
  ?parent <http://dbpedia.org/ontology/child> ?intermediateChild .
  ?intermediateChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Identify Antiochus II Theos and his successor(s) who are royalty
  <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?successor .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the child(ren) of this successor who is royalty
  ?successor <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
54,39,val,"Give me the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v1 . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find the reference to Thihapate of Mohnyin
  <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?child .
  
  # Step 2: Filter children who are office holders and royalty
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  
  # Step 3: Find the predecessor of that child
  ?child <http://dbpedia.org/ontology/predecessor> ?predecessor .
  
  # Step 4: Identify Thado Minsaw of Prome and find his parent
  ?predecessor = <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> ;
                <http://dbpedia.org/ontology/parent> ?parent .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
294,19,val,"Give me the entity in Nashville, Tennessee and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> .
  ?entity <http://dbpedia.org/ontology/restingPlace> ?person1 .
  ?person1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> .
  ?person1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?entity <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Edwin_A._Keeble> .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
767,22,val,Give me the reference to the alter ego of Black Hood and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?alterEgo WHERE {
  <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/ontology/alternateName> ?alterEgo .
  ?alterEgo <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference .
  ?alterEgo <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Baden-Württemberg> .
}
```",3,3,4,2,2,3,3,71,0,0,7,0,0.0,0
547,24,val,Give me the resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?alanRestingPlace ?actor ?actorRestingPlace WHERE {
  # Resting place of Alan Cunningham
  <http://dbpedia.org/resource/Alan_Cunningham_(British_Army_officer)> <http://dbpedia.org/ontology/burialPlace> ?alanRestingPlace .

  # Actor of ""Enemy at the Door""
  OPTIONAL {
    <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/ontology/starring> ?actor .
    
    # Resting place of the actor
    ?actor <http://dbpedia.org/ontology/burialPlace> ?actorRestingPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
391,24,val,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and actor of All About the Andersons.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v2 . },"```sparql
# Step 1: Find the claim to fame of Michael Ballhaus that is a work.
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/claimToFame> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CreativeWork> .
}

# Step 2: Find the actor of ""All About the Andersons"" who also acted in Michael Ballhaus's claim to fame.
SELECT DISTINCT ?actor WHERE {
  # Get actors from ""All About the Andersons""
  <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/castMember> ?actor .
  
  # Find works that include both this actor and Michael Ballhaus's claim to fame
  ?work1 <http://dbpedia.org/ontology/castMember> ?actor .
  ?work2 <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/claimToFame> ?work2 .
  
  # Ensure the works are the same
  FILTER(?work1 = ?work2)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
547,35,val,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for the resting place of awardees of Knight Grand Cross of the Order of St Michael and St George
SELECT DISTINCT ?person ?restingPlace WHERE {
  ?person <http://dbpedia.org/ontology/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
  OPTIONAL { ?person <http://dbpedia.org/ontology/restingPlace> ?restingPlace . }
}

UNION

# Query for the resting place of children of James Burton (property developer)
SELECT DISTINCT ?child ?restingPlace WHERE {
  <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
  OPTIONAL { ?child <http://dbpedia.org/ontology/restingPlace> ?restingPlace . }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
801,40,val,Give me the associated musical artist of Chris Taylor (music producer) and producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
# Find associated musical artist of Chris Taylor (music producer)
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

UNION

# Find producer of Westside Story (song)
SELECT ?producer WHERE {
  <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?producer .
}

UNION

# Find professional in the alter ego of The Shadow
SELECT ?professional WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
  ?alterEgo <http://dbpedia.org/ontology/profession> ?professional .
}

# Filter results to find common musical artists
SELECT DISTINCT ?result WHERE {
  VALUES ?entity { ?artist ?producer ?professional }
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
778,15,val,"Give me the author of Chroot and entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . },"```sparql
# Step 1: Find the author of Chroot
SELECT ?author WHERE {
  <http://dbpedia.org/resource/Chroot> <http://purl.org/dc/terms/creator> ?author .
}

UNION

# Step 2 and 3: Find the entity in the award of an American awardee of the Wolf Prize in Medicine
SELECT DISTINCT ?entity WHERE {
  ?awardee <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Category:American_people> .
  ?awardee <http://dbpedia.org/ontology/principalAward> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> .
  ?award <http://purl.org/dc/terms/creator> ?awardee .
  ?award <http://www.w3.org/2004/02/skos/core#subject> ?entity .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
92,41,val,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Part 1: Band members of Nevermore
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Nevermore_(band)> .
  
  # Part 2: Associated musical artist of Jim Sheppard
  OPTIONAL { 
    ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Jim_Sheppard_(musician)> .
  }
  
  # Part 3: Person born as Joseph Michael who is an artist
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://dbpedia.org/property/birthName> ""Joseph Michael""@en .
  
  # Part 4: Band of Joseph Michael
  ?person <http://dbpedia.org/ontology/member> ?band .
  
  # Combine conditions to find common entities
  FILTER (?member = ?artist && ?member = ?person)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
959,43,val,"Give me the member of University of Tsukuba and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?member WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election who is a politician.
  ?leader <http://dbpedia.org/ontology/politician> true ;
           <http://dbpedia.org/ontology/election> <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> .

  # Step 2: Determine the country where this leader resides.
  ?leader <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 3: Find individuals who are native to that country and are members of the University of Tsukuba.
  ?person <http://dbpedia.org/ontology/nationality> ?residence ;
          <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> .
  
  # Step 4: Identify the manager of the 2013 Júbilo Iwata season.
  OPTIONAL {
    ?manager <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> .
    FILTER(?person = ?manager)
  }

  # Return members who satisfy all conditions
  BIND(?person AS ?member)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
994,31,val,Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of Red Tide (band).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
# Step 1: Get associated musical artists of Watchtower
WITH {
  SELECT ?watchtowerArtist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
  }
} AS %watchtowerArtists

# Step 2: Get associated musical artists of each artist found in step 1
WITH %watchtowerArtists, {
  SELECT ?artist ?commonArtist WHERE {
    VALUES ?watchtowerArtist { %watchtowerArtists }
    ?watchtowerArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
    ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?commonArtist .
  }
} AS %step2Artists

# Step 3: Get associated musical artists of Red Tide
WITH %step2Artists, {
  SELECT ?redTideArtist WHERE {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?redTideArtist .
  }
} AS %redTideArtists

# Step 4: Find common associated musical artists between step 2 and Red Tide
SELECT DISTINCT ?commonArtist WHERE {
  VALUES ?artist { %step2Artists }
  VALUES ?redTideArtist { %redTideArtists }
  
  ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?commonArtist .
  ?redTideArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?commonArtist .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
314,19,val,Give me the commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Spanish_Civil_War> .
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/House_of_Sombrerete_headquarters> .
  ?person <http://dbpedia.org/ontology/award> ?award .
  FILTER (str(?award) = ""30"")
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
294,15,val,"Give me the entity in Nashville, Tennessee and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?entity WHERE {
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> .
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?awardee <http://dbpedia.org/property/restingPlace> ?restingPlace .
  ?restingPlace <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER(?type IN (<http://dbpedia.org/ontology/Monument>, <http://dbpedia.org/ontology/Cemetery>, <http://dbpedia.org/ontology/Memorial>)) .
  ?entity <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Nashville,_Tennessee> .
  ?entity = ?restingPlace
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
294,13,val,"Give me the resting place of Edwin A. Keeble and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Query for Edwin A. Keeble's resting place
SELECT ?restingPlaceKeeble WHERE {
  <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?restingPlaceKeeble .
}

UNION

# Query for the resting place of a politician who received the Distinguished Service Medal (U.S. Army)
SELECT ?restingPlaceAwardee WHERE {
  ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(United_States_Army)> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/ontology/restingPlace> ?restingPlaceAwardee .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
184,28,val,Give me the child of Archduke Joseph August of Austria and parent of Archduchess Ilona of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?person WHERE {
  # Condition 1: Child of Archduke Joseph August of Austria
  <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?person .

  # Condition 2: Parent of Archduchess Ilona of Austria
  ?person <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .

  # Condition 3: Parent of someone native to Budapest
  ?person <http://dbpedia.org/ontology/parent> ?child .
  ?child <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Budapest> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
767,40,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v1 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
# Step 1: Find the writer of ""Where It's At"" album
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://purl.org/dc/terms/creator> ?writer .
}

# Step 2: Find the alma mater of Carl L. Nippert
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/C._L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

# Step 3: Find a common settlement in the administration for both entities
SELECT DISTINCT ?settlement WHERE {
  VALUES (?entity) { ?writer ?almaMater }
  
  ?entity <http://dbpedia.org/ontology/administrativeUnit> ?settlement .
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
179,12,val,Give me the parent of the child of Bhumibol Adulyadej and person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Bhumibol_Adulyadej> .
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Sirikit>.
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  OPTIONAL { ?child <http://dbpedia.org/ontology/birthParent> ?parent . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
488,34,val,"Give me the administration of Emperor Go-Yōzei and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?administration ?birthPlace WHERE {
  # Step 1: Find the war involving Saitō Hajime that is a military conflict, event, and societal event
  ?war <http://dbpedia.org/ontology/battleParticipant> <http://dbpedia.org/resource/Sait%C5%8D_Hajime> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?event .
  ?event <http://www.w3.org/2000/01/rdf-schema#isClassOf> <http://dbpedia.org/class/yago/Event108069> . # Societal event
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?historicalEvent .
  ?historicalEvent <http://www.w3.org/2000/01/rdf-schema#isClassOf> <http://dbpedia.org/class/yago/HistoricalEvents100000> . # Event

  # Step 2: Find the commander of this war
  ?war <http://dbpedia.org/ontology/commander> ?commander .

  # Step 3: Get the birthplace of the commander
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 4: Find the administration of Emperor Go-Yōzei
  <http://dbpedia.org/resource/Emperor_Go-Y%C5%8Dzei> <http://dbpedia.org/property/administration> ?administration .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
488,30,val,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?deathPlace, ?administration, ?birthPlace WHERE {
  # Death place of Tokugawa Ieyasu
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .

  # Administration of the father of Emperor Go-Mizunoo
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/administration> ?administration .
  }

  # Birth place of Enomoto Takeaki
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
184,39,val,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?finalParent WHERE {
  # Step 1: Find the parent of Archduchess Margaret of Austria (born 1925)
  <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> <http://dbpedia.org/ontology/parent> ?parentMargaret .

  # Step 2: Find the child of that parent
  ?parentMargaret <http://dbpedia.org/ontology/child> ?childOfParent .

  # Step 3: Determine the parent of this child
  ?childOfParent <http://dbpedia.org/ontology/parent> ?finalParent .

  # Step 4: Find the child of Archduke Joseph August of Austria and their parent
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?childJoseph .
    ?childJoseph <http://dbpedia.org/ontology/parent> ?finalParent .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,43,val,Give me the person born as Georgeanne Marie Rice and spouse of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
# Step 1: Identify Georgeanne Marie Rice, spouse of Ted McGinley
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
  ?person <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
}

# Step 2: Determine the profession of an actor from ""Unnatural""
SELECT DISTINCT ?profession WHERE {
  ?actor <http://dbpedia.org/property/role> <http://dbpedia.org/resource/Unnatural_(TV_series)> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
  ?actor <http://purl.org/dc/terms/profession> ?profession .
}

# Step 3: Find the person who matches both criteria
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
  ?person <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
  ?person <http://purl.org/dc/terms/profession> ?profession .
  {
    SELECT DISTINCT ?profession WHERE {
      ?actor <http://dbpedia.org/property/role> <http://dbpedia.org/resource/Unnatural_(TV_series)> ;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
      ?actor <http://purl.org/dc/terms/profession> ?profession .
    }
  }
  BIND(?person AS ?result)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
488,32,val,"Give me the birth place of the commander in Boshin War and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace ?deathPlace WHERE {
  # Part 1: Birth place of commander in Boshin War
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Boshin_War> .
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Part 2: Death place of father (politician) of Yūki Hideyasu
  <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
617,14,val,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find Richeza's father who is a royalty
  <http://dbpedia.org/resource/Richeza_of_Poland> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find references to Richeza that are also royalty
  OPTIONAL { 
    ?reference <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Richeza_of_Poland> .
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  }

  # Step 3: Find the parent of Richeza's father
  ?father <http://dbpedia.org/ontology/father> ?parent .
}
```",3,5,4,3,1,3,2,20,0,0,4,0,0.0,0
435,16,val,Give me the work of the author of Iceland and territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/property/author> ?v2 . },"```sparql
SELECT ?author ?work WHERE {
  # Find the author of ""Iceland""
  <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/ontology/author> ?author .
  
  # Find a territory administered from Reykjavík
  ?territory <http://dbpedia.org/property/administrativeCentre> <http://dbpedia.org/resource/Reykjavík> ;
             <http://dbpedia.org/ontology/author> ?author .

  # Get the works of this author
  ?author <http://purl.org/dc/terms/creator> ?work .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
182,19,val,Give me the war of Jagath Dias and entity in Sri Lanka and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT ?result WHERE {
  # Part 1: War of Jagath Dias
  <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result .
  
  UNION
  
  # Part 2: Entity in Sri Lanka and War of the Author of 2019 Sri Lanka Easter Bombings
  <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/ontology/author> ?author .
  ?author <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?result <http://dbpedia.org/property/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Sri Lanka"" .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
404,25,val,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/property/birthYear> ""1914"" .
  ?child <http://dbpedia.org/resource/Prince_Ernst_Augustus_of_Hanover_(born_1914)> .
  
  ?father <http://dbpedia.org/ontology/father> ?child .
  ?father <http://dbpedia.org/ontology/child> ?child .

  OPTIONAL { ?child <http://dbpedia.org/ontology/father> ?parent . }
  OPTIONAL { ?child <http://dbpedia.org/ontology/mother> ?parent . }

  FILTER(?parent != ?child)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
161,19,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?militaryForce WHERE {
  ?entity <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  OPTIONAL { <http://dbpedia.org/resource/Francisco_Franco> <http://dbpedia.org/ontology/militaryForce> ?militaryForce . }
  OPTIONAL { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/militaryForce> ?militaryForce . }
}
```",3,6,4,2,2,3,3,71,0,0,514,0,0.0,0
10,19,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of Luke Vibert and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
SELECT ?associatedArtist WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Matt Colton"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/property/memberOfBand> <http://dbpedia.org/resource/Luke_Vibert> .
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
767,20,val,Give me the alma mater of the administration of George K. Nash and entity in Baden-Württemberg.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
  ?almaMater <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Baden-Württemberg""@en .
  BIND(?almaMater AS ?result)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
783,13,val,Give me the associated musical artist of the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?artist WHERE {
  # Step 1: Identify the person by birth name
  ?person <http://dbpedia.org/ontology/birthName> ""Samuel Ofori Amponsah"" .
  
  # Step 2: Find band memberships of this person
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .

  # Step 3: Identify associated musical artists with the bands
  ?band <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
}
```",3,3,4,3,1,3,2,20,0,0,35,0,0.0,0
54,21,val,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
SELECT ?predecessor WHERE {
  # Step 1: Find Ameitta Thiri Maha Dhamma Dewi of Ava's predecessor
  <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://dbpedia.org/ontology/predecessor> ?predecessor .

  # Step 2: Find Soe Min Wimala Dewi's father
  ?soeminwimaladewi <http://dbpedia.org/ontology/father> ?father .
  
  FILTER(?soeminwimaladewi = <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi>) .

  # Step 3: Find the child of Soe Min Wimala Dewi's father
  ?child <http://dbpedia.org/ontology/father> ?father .
  
  # Ensure the predecessor is also a child of Soe Min Wimala Dewi's father
  FILTER(?predecessor = ?child)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
184,36,val,Give me the parent of Géza von Habsburg and parent of the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
# Task 1: Find the parent of Géza von Habsburg
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/father> ?parent .
} UNION
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/mother> ?parent .
}

UNION

# Task 2: Find the parent of the child of the parent of Archduchess Margaret of Austria (born 1925)
SELECT ?grandchildParent WHERE {
  # Step 1: Find the parent of Archduchess Margaret
  <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> <http://dbpedia.org/ontology/father> ?parent .
} UNION
SELECT ?grandchildParent WHERE {
  <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> <http://dbpedia.org/ontology/mother> ?parent .
  
  # Step 2: Find the child of this parent
  ?parent <http://dbpedia.org/ontology/father> ?child .
} UNION
SELECT ?grandchildParent WHERE {
  ?parent <http://dbpedia.org/ontology/mother> ?child .

  # Step 3: Find the parent of this child
  ?child <http://dbpedia.org/ontology/father> ?grandchildParent .
} UNION
SELECT ?grandchildParent WHERE {
  ?child <http://dbpedia.org/ontology/mother> ?grandchildParent .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
547,31,val,Give me the resting place of Simon Cadell and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
# Query for Simon Cadell's resting place
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
}

UNION

# Query for the child of the child of William Haliburton's resting place
SELECT ?grandchildRestingPlace WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/William_Haliburton> .
  ?grandchild <http://dbpedia.org/ontology/father> ?child .
  ?grandchild <http://dbpedia.org/ontology/restingPlace> ?grandchildRestingPlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,34,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/state> ?v1 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . }","```sparql
SELECT ?settlement WHERE {
  # Step 1: Find the songwriter of the album/song ""Where It's At"" by Dustin Lynch
  <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://purl.org/dc/terms/creator> ?writer .
  
  # Step 2: Identify settlements in the administration related to this writer
  ?admin <http://dbpedia.org/ontology/administrativeUnit> ?settlement .
  ?writer <http://dbpedia.org/ontology/placeOfBirth> ?admin .
  
  # Step 3: Ensure these entities are categorized as a ""Settlement""
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}
```",4,5,5,3,2,3,3,71,0,0,8,0,0.0,0
391,29,val,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
SELECT ?actor WHERE {
  ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?actor <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .

  ?actor <http://dbpedia.org/ontology/work> ?work1 .
  ?work1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/All_About_the_Andersons> .

  ?actor <http://dbpedia.org/ontology/fame> ?fameWork .
  ?fameWork <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Michael_Ballhaus> .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
801,41,val,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
SELECT ?producer WHERE {
  ?work <http://dbpedia.org/ontology/work> ?song .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?work <http://dbpedia.org/ontology/song> ?song .
  ?work <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/50_Cent> .

  ?producer <http://dbpedia.org/ontology/producer> ?work .
  
  ?producer <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> .
  
  ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?producer <http://dbpedia.org/property/profession> ?profession .
  ?profession <http://dbpedia.org/ontology/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
251,16,val,Give me the location of Battle of Marengo and death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query 1: Location of Battle of Marengo
SELECT ?location WHERE {
  <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/location> ?location .
}

# Query 2: Death place of the author of The Twelve Abbots of Challant
SELECT ?deathPlace WHERE {
  ?author <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> .
  ?author <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
994,26,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT DISTINCT ?artist WHERE {
  # Step 1: Find the band Fredrik Thordendal is associated with, which is an organization.
  <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/member> ?band .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .

  # Step 2: Find members of this band that are also bands, groups, and organizations.
  ?member <http://dbpedia.org/ontology/member> ?band .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?types .
  
  FILTER (
    (?types = <http://dbpedia.org/ontology/Band> || 
     ?types = <http://dbpedia.org/ontology/MusicalGroup> ||
     ?types = <http://dbpedia.org/ontology/Organisation>)
  )

  # Step 3: Find associated musical artists of these members.
  ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}
```",3,7,4,3,1,3,3,71,0,0,33,0,0.0,0
427,42,val,"Give me the party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
# Step 1: Get Giulio Andreotti's political party
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/politicalParty> ?party .
}

# Step 2: Find Romano Antonio Prodi's birth details and ensure he is an office holder and a politician, then get his party
SELECT ?birthPlace ?party WHERE {
  <http://dbpedia.org/resource/Romano_Antonio_Prodi> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  <http://dbpedia.org/resource/Romano_Antonio_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  <http://dbpedia.org/resource/Romano_Antonio_Prodi> <http://dbpedia.org/ontology/politicalParty> ?party .
}

# Step 3: Retrieve references to the ""Italian People's Party (1994)""
SELECT ?reference WHERE {
  ?entity rdfs:label ""Italian People's Party (1994)""@en .
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
303,16,val,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and party of Guillermo Endara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?person ?party WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> 
    <http://dbpedia.org/resource/Guillermo_Endara>
  }
  
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  OPTIONAL { ?person <http://dbpedia.org/property/politicalParty> ?party . }
}
```",3,4,4,2,2,2,3,28,0,1,1,0.0,0.0,0
328,18,val,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of Order of Suvorov and commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> .
  ?person <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Order_of_Suvorov> .
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
421,19,val,Give me the band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
  ?person <http://dbpedia.org/ontology/birthName> ""Edin Dervišhalidović"" .
  ?person <http://dbpedia.org/ontology/award> ?award .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
626,15,val,"Give me the awardee of Order of St. Andrew and commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT DISTINCT ?awardee WHERE {
  # Step 1: Find commanders of the Battle of Paris (1814)
  <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?commander .

  # Step 2: Identify military conflicts commanded by these commanders
  ?commander <http://dbpedia.org/ontology/battle> ?conflict .
  FILTER (?conflict != <http://dbpedia.org/resource/Battle_of_Paris_(1814)>)
  FILTER EXISTS { ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> }

  # Step 3: Check if these commanders were awarded the Order of St. Andrew
  ?commander <http://dbpedia.org/property/orderOfStAndrewAwardee> ?awardee .
}
```",4,5,5,3,2,3,2,20,0,0,9,0,0.0,0
617,44,val,Give me the spouse of the child of Antiochus III the Great and child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?child ?spouse WHERE {
  # Find all children of Antiochus III the Great
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
  
  # Ensure that the child has a parent relationship with Antiochus III the Great
  ?child <http://www.w3.org/2000/01/rdf-schema#label> ""Antiochus""@en .

  # Find the spouse of each child
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
959,31,val,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> .
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?types .
  FILTER (
    EXISTS { ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label . FILTER (lang(?label) = ""ja"") }
    && ?types = <http://dbpedia.org/ontology/Organisation>
    && ?types = <http://dbpedia.org/ontology/University>
    && ?types = <http://dbpedia.org/ontology/EducationalOrganization>
  )
}
```",4,8,5,3,2,3,3,71,0,0,167,0,0.0,0
314,18,val,"Give me the awardee of 30 and commander in the profession, that is an event and a societal event, of Lisa Gavrić.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/ontology/profession> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?event <http://dbpedia.org/property/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/award> ?result .
  ?result <http://dbpedia.org/property/number> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> .
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
488,43,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of Enomoto Takeaki and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT DISTINCT ?deathPlace ?birthPlace ?administration WHERE {
  # Step 1: Find Matsudaira Tadamasa's father who is an office holder
  ?mat_office_holder <http://dbpedia.org/ontology/father> ?grandfather .
  ?mat_office_holder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  
  # Step 2: Find the grandfather who is a politician
  ?grandfather <http://dbpedia.org/ontology/father> ?politicianGrandfather .
  ?politicianGrandfather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 3: Get the death place of this politician grandfather
  OPTIONAL { ?politicianGrandfather <http://dbpedia.org/ontology/deathPlace> ?deathPlace . }

  # Step 4: Find Enomoto Takeaki's birthplace
  OPTIONAL {
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
  
  # Step 5: Get the administration of Emperor Go-Yōzei
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Yozei> <http://dbpedia.org/ontology/administration> ?administration .
  }

  FILTER(?mat_office_holder = <http://dbpedia.org/resource/Matsudaira_Tadamasa>)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
197,7,val,Give me the birthplace of the member of FC Politehnica Timișoara and birthplace of George Lusztig.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?memberBirthPlace ?lusztigBirthPlace WHERE {
  ?member <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> .
  ?member <http://dbpedia.org/ontology/birthPlace> ?memberBirthPlace .

  <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?lusztigBirthPlace .
}
```",3,3,4,2,2,2,2,9,2,169,0,0.011695906432748537,1.0,0.023121387283236997
177,7,val,"Give me the headquarter of Ministry of Culture, Sports and Tourism and entity in the residence of Alexander Gamelin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
# Query for the headquarters of Ministry of Culture, Sports and Tourism
SELECT ?headquarter WHERE {
  <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/headquarters> ?headquarter .
}

UNION

# Query for an entity in the residence of Alexander Gamelin
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Alexander_Gamelin> .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
701,4,train,Give me the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
959,2,train,Give me the manager of 2013 Júbilo Iwata season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
485,5,train,"Give me the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
339,6,train,Give me the father of Princess Elizabeth of Greece and Denmark and child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/ontology/father> ?person .
  ?person <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Greek_monarchy_family_tree#George_I_of_Greece> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
528,13,train,Give me the war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/battles> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
994,0,train,Give me the associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
48,10,train,"Give me the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v0 <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT DISTINCT ?actor WHERE {
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> .
  ?show <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
44,3,train,"Give me the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedBand> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
}
```",1,3,2,1,1,2,2,9,0,0,3,0,0.0,0
492,0,train,Give me the person decedent at French Algeria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
}
```",1,1,2,1,1,3,3,71,30,0,0,1.0,1.0,1.0
747,1,train,Give me the band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/member> ?band .
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
645,10,train,Give me the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?grandchild WHERE {
  <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?parent .
  ?parent <http://dbpedia.org/ontology/child> ?grandchild .
}
```",2,2,3,2,1,3,2,20,3,0,0,1.0,1.0,1.0
617,14,train,Give me the parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
184,13,train,Give me the child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
177,3,train,"Give me the office, that is an organisation, of Joo Don-sik.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/ontology/officeHolder> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
838,0,train,Give me the band of Raša Đelmaš.,SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/member> ?band .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
161,16,train,"Give me the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto> .
  ?predecessor <http://dbpedia.org/property/force> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
487,9,train,Give me the administration of the person born on 1955-01-26.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person ?administration WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> .
  OPTIONAL { ?person <http://dbpedia.org/property/administration> ?administration . }
}
```",2,2,3,2,1,3,2,20,0,23,3,0.0,0.0,0
488,2,train,Give me the administration of Emperor Go-Yōzei.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/officeHolder> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
487,2,train,Give me the person born on 1955-01-26.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?person <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> .
}
```",1,1,2,1,1,3,2,20,23,0,0,1.0,1.0,1.0
820,4,train,Who is the professional in Actor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?actor WHERE {
  ?actor <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Category:Actors> .
}
```",1,1,2,1,1,3,2,20,0,0,21580,0,0.0,0
392,9,train,Give me the province of Schio and region of Central European Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?schioProvince ?cetRegion WHERE {
  # Find the province of Schio
  <http://dbpedia.org/resource/Schio> <http://www.w3.org/2004/02/skos/core#broader> ?schioProvince .
  
  # Find regions associated with Central European Time
  <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/timeZoneForRegion> ?cetRegion .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
981,6,train,Give me the entity in Indonesia and birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?result <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Indonesia> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
701,3,train,Give me the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
747,6,train,Who is the writer of Apollo (Hardwell song)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/ontology/writer> ?writer .
}
```",1,1,2,1,1,3,3,71,2,0,1,1.0,0.6666666666666666,0.8
378,17,train,"Who is the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?commander WHERE {
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?war <http://dbpedia.org/property/personInvolved> <http://dbpedia.org/resource/Thomas_Trigge> .
}
```",2,5,3,2,1,3,3,71,0,0,169,0,0.0,0
696,7,train,Give me the birth place of the member of Dropkick Murphys.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT DISTINCT ?member ?birthPlace WHERE {
  ?band <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Dropkick_Murphys> .
  ?band <http://dbpedia.org/ontology/member> ?member .
  ?member <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
55,8,train,"Give me the band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?producer .
  ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?producer <http://dbpedia.org/ontology/member> ?member .
}
```",2,3,3,2,1,2,3,28,0,0,55,0,0.0,0
318,2,train,Give me the founding year of Eel Pie Publishing.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?result . },"```sparql
SELECT ?foundingYear WHERE {
  <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?foundingYear .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
197,4,train,Give me the birthplace of Dumitru Nadu and birthplace of George Lusztig.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Dumitru_Nadu> 
    <http://dbpedia.org/resource/George_Lusztig>
  }
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,1,2,2,2,9,1,4,0,0.2,1.0,0.33333333333333337
429,6,train,"Give me the country of the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Camden_Expedition> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?militaryForce <http://dbpedia.org/property/country> ?country .
}
```",2,3,3,2,1,2,2,9,0,0,7,0,0.0,0
994,15,train,Give me the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
SELECT ?artist WHERE {
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ""Watchtower""@en .
  ?entity <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
404,14,train,"Give me the child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
328,2,train,Give me the leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
659,1,train,Give me the commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,21,0,0,1.0,1.0,1.0
778,9,train,"Give me the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> .
  ?person <http://dbpedia.org/ontology/award> ?result .
}
```",2,3,3,2,1,3,2,20,9,0,0,1.0,1.0,1.0
767,12,train,Give me the alma mater of Carl L. Nippert and reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?almaMater ?reference WHERE {
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  OPTIONAL { ?almaMater <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference }
}
```",2,2,3,1,2,3,3,71,2,1,0,0.6666666666666666,1.0,0.8
626,8,train,Give me the awardee of the award of Aleksey Petrovich Yermolov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/ontology/award> ?result .
}
```",2,2,3,2,1,3,2,20,0,6,230,0.0,0.0,0
378,13,train,Give me the war of the commander in Peninsular War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT DISTINCT ?commander ?otherWar WHERE {
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?otherWar <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(?otherWar != <http://dbpedia.org/resource/Peninsular_War>)
}
```",2,2,3,2,1,3,3,71,60,114,58,0.3448275862068966,0.5084745762711864,0.4109589041095891
547,5,train,Give me the show with Emily Richard.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
SELECT ?show WHERE {
  <http://dbpedia.org/resource/Emily_Richard> <http://dbpedia.org/ontology/starring> ?show .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
712,9,train,"Give me the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Vyoshenskaya_Uprising> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type = <http://dbpedia.org/ontology/Organisation> || ?type = <http://dbpedia.org/ontology/MilitaryUnit>)
  ?militaryForce <http://dbpedia.org/property/country> ?result .
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
534,1,train,Give me the headquarter of Royal Dublin Society.,SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarters> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
488,14,train,Give me the administration of the father of Emperor Go-Mizunoo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/administers> ?administration .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
356,7,train,Give me the player in the successor of 2014 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> .
  ?successor <http://dbpedia.org/ontology/player> ?player .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
356,9,train,"Give me the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . },"```sparql
SELECT ?successor WHERE {
  ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> .
  ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason> .
  ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason> .
  ?predecessor <http://dbpedia.org/ontology/successor> ?successor .
}
```",2,4,3,2,1,3,2,20,0,1,1,0.0,0.0,0
712,5,train,Who is the awardee of Hero of the Soviet Union?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . },"```sparql
SELECT ?awardee WHERE {
  ?awardee <http://dbpedia.org/ontology/honour> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> .
}
```",1,1,2,1,1,3,2,20,0,0,837,0,0.0,0
30,5,train,Give me the native of the birthplace of Silvia Cohen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?native WHERE {
  <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?native <http://dbpedia.org/ontology/nativeOf> ?birthPlace .
}
```",2,2,3,2,1,2,2,9,0,0,11488,0,0.0,0
251,1,train,Give me the administration of Forza Italia (2013).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
179,3,train,Give me the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
232,4,train,Give me the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
285,2,train,Who is the spouse of Aristotle Onassis?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
184,5,train,"Give me the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
778,10,train,"Give me the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
SELECT ?software WHERE {
  ?author <http://dbpedia.org/ontology/authored> <http://dbpedia.org/resource/Pushd> .
  ?author <http://dbpedia.org/ontology/authored> <http://dbpedia.org/resource/Popd> .
  ?author <http://dbpedia.org/ontology/work> ?software .
  ?software <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software> .
}
```",2,3,3,2,1,3,2,20,0,0,5,0,0.0,0
16,0,train,Give me the spouse of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
378,2,train,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/claimToFame> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
498,2,train,"Give me the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/member> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
391,9,train,"Give me the actor of The Departed and native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  ?film <http://dbpedia.org/ontology/starring> ?actor .
  ?film <http://www.w3.org/2000/01/rdf-schema#label> ""The Departed""@en .
  
  OPTIONAL { 
    ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ""Compton, California""@en .
  }
  
  FILTER EXISTS {
    ?film <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ""Compton, California""@en .
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
994,3,train,Give me the reference to Watchtower.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
SELECT ?reference WHERE {
  { <http://dbpedia.org/resource/Watchtower> <http://dbpedia.org/ontology/reference> ?reference . }
  UNION
  { ?entity <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Watchtower> .
    ?entity ?p ?reference .
  }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
712,3,train,Give me the country of Armed Forces of South Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
666,1,train,Give me the figure known as The Three Lions.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/nickName> ""The Three Lions""@en .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
64,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/country> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Countries> .
}
```",1,2,2,1,1,2,2,9,0,0,56,0,0.0,0
10,5,train,Give me the birth name of Sharon Kao.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
404,0,train,Give me the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
801,11,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alternateName> ?alterEgo .
  ?alterEgo <http://dbpedia.org/ontology/profession> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
485,10,train,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . },"```sparql
SELECT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Eric_Gregory_Award> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,4,3,2,1,2,3,28,7,1,0,0.875,1.0,0.9333333333333333
54,12,train,Give me the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
SELECT ?person WHERE {
  # Find parent of Thado Minsaw of Prome
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/father> ?person .
  
  UNION
  
  # Find predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?person <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
666,9,train,"Give me the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?manager WHERE {
  ?team <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Leonid_Slutsky> .
  ?team <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/SoccerClub> | <http://dbpedia.org/ontology/SportsTeamSeason>) .
  ?team <http://dbpedia.org/ontology/manager> ?manager .
  ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
}
```",2,5,3,2,1,3,2,20,0,0,5,0,0.0,0
435,5,train,Give me the author of Iceland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Iceland_(book)> <http://dbpedia.org/ontology/author> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
827,4,train,"Who is the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/spouse> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type = <http://dbpedia.org/class/yago/Royalty108069068> || 
          ?type = <http://dbpedia.org/class/yago/Monarch106254786> ||
          ?type = <http://dbpedia.org/class/yago/HeadOfStateOrGovernment106254785>)
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
54,16,train,Give me the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
SELECT ?grandchild WHERE {
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?parent .
  ?parent <http://dbpedia.org/ontology/child> ?grandchild .
}
```",2,2,3,2,1,3,3,71,3,3,0,0.5,1.0,0.6666666666666666
659,0,train,Give me the commander in German campaign of 1813.,SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,31,0,0,1.0,1.0,1.0
617,7,train,Who is the commander in Battle of Panium?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
801,15,train,Give me the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
SELECT ?alterEgo WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/trueSelf> ?trueSelf .
  ?trueSelf <http://dbpedia.org/ontology/alternateName> ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
915,1,train,Give me the father of Lizzie Spaulding.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/father> ?father .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
783,9,train,Give me the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?bandMember WHERE {
  <http://dbpedia.org/resource/Samuel_Ofori_Amponsah> <http://www.w3.org/2000/01/rdf-schema#label> ""Samuel Ofori Amponsah"" .
  <http://dbpedia.org/resource/Samuel_Ofori_Amponsah> <http://dbpedia.org/ontology/memberOf> ?bandMember .
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
701,1,train,Give me the parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
54,10,train,Give me the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
SELECT ?person WHERE {
  # Find children of Thinkhaya of Pagan
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?person .

  # Find predecessors of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?person <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
778,5,train,"Give me the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Bill_Joy> <http://dbpedia.org/ontology/work> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software> .
}
```",1,2,2,1,1,3,2,20,0,0,5,0,0.0,0
251,11,train,Give me the death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?deathPlace WHERE {
  ?author <http://dbpedia.org/ontology/book> <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> .
  ?author <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
314,3,train,Give me the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/headquarters> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
391,17,train,"Give me the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/occupation> """"@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/starring> ?v1 . }","```sparql
SELECT ?movie WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
}
```",2,5,3,2,1,3,3,71,0,0,1674,0,0.0,0
9,2,train,Give me the figure known as QUB.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/alias> ""QUB""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
392,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/country> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}
```",1,2,2,1,1,2,3,28,0,0,56,0,0.0,0
645,6,train,Give me the alma mater of Sylvia Pankhurst and entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
  ?result <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
645,4,train,Give me the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
959,15,train,"Give me the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
SELECT ?almaMater WHERE {
  ?person <http://dbpedia.org/ontology/birthYear> ""1958"" .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> ;
             <http://dbpedia.org/ontology/EducationalOrganization> ;
             <http://dbpedia.org/ontology/University> .
  ?almaMater <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> .
}
```",2,6,3,2,1,3,3,71,0,0,3,0,0.0,0
303,7,train,Give me the party of Arnulfo Arias and party of Guillermo Endara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?person ?party WHERE {
  VALUES ?person { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/resource/Guillermo_Endara> }
  ?person <http://dbpedia.org/ontology/politicalParty> ?party .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
16,10,train,Give me the person born as Georgeanne Marie Rice and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
  ?person <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,6,train,Give me the administration of Forza Italia (2013) and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
SELECT ?result WHERE {
  { 
    <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?result .
  }
  UNION
  {
    <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/location> ?result .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
838,1,train,Give me the band member of Kerber.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Kerber_(band)> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
747,5,train,"Give me the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Amba_Shepherd> <http://purl.org/dc/terms/creator> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
339,3,train,Who is the child of Christian IX of Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Christian_IX_of_Denmark> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,2,20,4,2,2,0.6666666666666666,0.6666666666666666,0.6666666666666666
303,8,train,"Give me the party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?commander <http://dbpedia.org/property/politicalParty> ?party .
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
312,0,train,Give me the entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Province_of_Bergamo> .
}
```",1,1,2,1,1,2,2,9,0,16,228,0.0,0.0,0
48,0,train,Give me the band of Carl Falk.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/member> ?band .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
487,6,train,Give me the country of 2022 Vermont House of Representatives election and administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?country WHERE {
  OPTIONAL { <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?country . }
  OPTIONAL { <http://dbpedia.org/resource/Administration_of_Phil_Scott> <http://dbpedia.org/ontology/country> ?country . }
}
```",2,2,3,1,2,3,2,20,1,0,0,1.0,1.0,1.0
547,13,train,Give me the resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
SELECT ?actor ?restingPlace WHERE {
  <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/ontology/starring> ?actor .
  OPTIONAL { 
    ?actor <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
}
```",2,2,3,2,1,3,3,71,1,12,1,0.07692307692307693,0.5,0.13333333333333336
184,2,train,Give me the parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/parent> ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
356,5,train,"Give me the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
}
```",1,3,2,1,1,3,2,20,17,0,0,1.0,1.0,1.0
959,4,train,"Give me the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> .
}
```",1,5,2,1,1,3,3,71,0,0,1,0,0.0,0
179,1,train,Give me the parent of Ubol Ratana.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
528,16,train,Give me the commander in the work of --01-09.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/--01-09> <http://dbpedia.org/ontology/commander> ?commander .
}
```

Note: The identifier ""--01-09"" should be replaced with the correct DBpedia resource URI if it is not directly available as such.",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
177,6,train,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/ontology/office> ?office .
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?office <http://dbpedia.org/property/headquarters> ?result .
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
528,7,train,Give me the birth name of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
16,6,train,Give me the profession of Satomi Ishihara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?profession .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
617,5,train,"Who is the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
161,1,train,Give me the military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/militaryForce> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,514,0,0.0,0
404,10,train,"Give me the spouse of Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
    FILTER(?spouse = ?child)
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
747,12,train,Give me the band of Shèna and band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?person, ?band WHERE {
  VALUES ?person { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/resource/Amba_Shepherd> }
  ?person <http://dbpedia.org/ontology/memberOf> ?band .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,2,train,Give me the person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Edin Dervišhalidović"" .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
767,4,train,"Give me the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Green> <http://dbpedia.org/ontology/administration> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
485,8,train,"Give me the entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Western_European_Time> <http://dbpedia.org/ontology/usedByCountry> ?region .
  ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  BIND(?region AS ?country)
}
```",2,3,3,2,1,2,3,28,0,0,46363,0,0.0,0
488,10,train,Give me the administration of Emperor Go-Yōzei and birth place of Enomoto Takeaki.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/administration> ?administration .
}

UNION

SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
16,15,train,Who is the person born as the birth name of Ted McGinley?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?result .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
197,3,train,Who is the awardee of Leroy P. Steele Prize?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
SELECT ?awardee WHERE {
  <http://dbpedia.org/resource/Leroy_P._Steele_Prize> <http://dbpedia.org/ontology/awardee> ?awardee .
}
```",1,1,2,1,1,2,2,9,0,0,21,0,0.0,0
488,13,train,"Give me the death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Y%C5%ABki_Hideyasu> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
701,9,train,Give me the parent of Meritamen and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
SELECT ?person ?parent WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Meritamen> 
    <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)>
  }
  ?person <http://dbpedia.org/ontology/parent> ?parent .
}
```",2,2,3,1,2,3,3,71,1,3,0,0.25,1.0,0.4
10,8,train,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Matt_Colton> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/birthName> ""Matt Colton"" .
  <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
528,8,train,Give me the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Narciso Campero Leyes"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,15,train,Give me the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT DISTINCT ?father WHERE {
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/father> ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
360,0,train,Give me the writer of The Roaring Silence.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/ontology/author> ?writer .
}
```",1,1,2,1,1,2,3,28,0,0,8,0,0.0,0
404,13,train,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
547,6,train,Give me the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,3,3,71,7,0,1,1.0,0.875,0.9333333333333333
318,4,train,Give me the person born in 1970 and professional in Composer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthYear> ""1970"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Composer> .
}
```",2,2,3,1,2,2,2,9,0,0,7,0,0.0,0
626,6,train,Give me the commander in Battle of Leipzig and awardee of Order of St. Andrew.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/orderOfStAndrewAwardee> ?award .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,13,train,Give me the alma mater of the administration of George K. Nash.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/administration> ?administration .
  ?administration <http://dbpedia.org/ontology/almaMater> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
9,13,train,Give me the alma mater of the awardee of Royal Medal.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  ?recipient <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Royal_Medal> .
  ?recipient <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",2,2,3,2,1,3,3,71,31,96,0,0.2440944881889764,1.0,0.3924050632911393
182,1,train,Give me the war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",1,1,2,1,1,2,3,28,5,0,0,1.0,1.0,1.0
801,13,train,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?work ?producer WHERE {
  <http://dbpedia.org/resource/50_Cent> <http://dbpedia.org/ontology/work> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/MusicalWork>, <http://dbpedia.org/ontology/Song>, <http://dbpedia.org/ontology/Work>)).
  ?work <http://dbpedia.org/property/producer> ?producer .
}
```",2,5,3,2,1,3,3,71,0,0,38,0,0.0,0
534,4,train,"Give me the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure> .
}
```",1,3,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
645,3,train,"Give me the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/ontology/residence> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
747,3,train,"Who is the person decedent, that is an athlete and a soccer player, at Zolotonosha?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/decedent> <http://dbpedia.org/resource/Zolotonosha> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
404,9,train,Give me the spouse of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
617,12,train,Give me the spouse of Laodice IV and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
712,10,train,Who is the awardee of the show of Soviet Union?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
SELECT ?awardee WHERE {
  ?show <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Soviet_Union> .
  ?show <http://dbpedia.org/property/showAwardee> ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,1209,0,0.0,0
528,12,train,Give me the war of Orozimbo Barbosa and force of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT DISTINCT ?war WHERE {
  # Find wars associated with Orozimbo Barbosa
  OPTIONAL { 
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?war .
  }
  
  # Find the force commanded by Narciso Campero and its associated war
  {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/commander> ?force .
    ?force <http://dbpedia.org/ontology/battle> ?war .
  }
  
  # Ensure the result is a military conflict
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
30,4,train,"Give me the native of Paris and professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> .
  FILTER (
    EXISTS { ?person <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Financiers> } ||
    EXISTS { ?person <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Businesspeople_from_France> } ||
    EXISTS { ?person <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Vineyard_owners> } ||
    EXISTS { ?person <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Art_collectors> } ||
    EXISTS { ?person <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Horse_breeders_and_owners> }
  )
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
303,0,train,Give me the party of Guillermo Endara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/politicalParty> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
754,5,train,Give me the child of Ram Khamhaeng.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
820,1,train,Give me the child of Jack Schwartzman.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Jack_Schwartzman> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,2,20,2,1,0,0.6666666666666666,1.0,0.8
10,1,train,Give me the band member of Luke Vibert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Luke_Vibert> <http://dbpedia.org/ontology/member> ?band .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
959,11,train,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?types .
  FILTER (?types = <http://dbpedia.org/ontology/Organisation> && 
          ?types = <http://dbpedia.org/ontology/University> &&
          ?types = <http://dbpedia.org/ontology/EducationalOrganization>)
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER (CONTAINS(LCASE(?label), ""japanese""))
  
  ?member <http://dbpedia.org/ontology/memberOf> ?almaMater .
}
```",2,6,3,2,1,3,3,71,0,0,267,0,0.0,0
365,4,train,Give me the reference to The Blasters and band of Phil Alvin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Phil_Alvin> <http://dbpedia.org/ontology/memberOf> ?band .
  ?band rdfs:label ""The Blasters""@en .
  BIND(<http://dbpedia.org/resource/The_Blasters> AS ?result)
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
963,0,train,Give me the entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Serbia> .
}
```",1,1,2,1,1,3,2,20,19,403,5409,0.045023696682464455,0.0035003684598378776,0.006495726495726496
994,4,train,Give me the associated musical artist of Watchtower (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
392,11,train,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
SELECT ?province WHERE {
  <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Italy> .
  ?residence <http://dbpedia.org/property/province> ?province .
}
```",2,4,3,2,1,2,3,28,0,0,1,0,0.0,0
427,2,train,Give me the party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
92,2,train,Give me the band of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/ontology/member> ?band .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
303,4,train,"Give me the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/location> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
64,4,train,Give me the alma mater of Jovan Hristić and entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result .
  ?result <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?location .
  FILTER(CONTAINS(STR(?location), ""Serbia""))
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
534,8,train,Give me the headquarter of the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v0 . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
SELECT ?headquarters WHERE {
  <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?owner .
  ?owner <http://dbpedia.org/ontology/headquarterLocation> ?headquarters .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
48,9,train,"Give me the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  ?work <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Shellback_(record_producer)> .
  ?work <http://purl.org/dc/terms/creator> ?writer .
}
```",2,3,3,2,1,3,2,20,0,0,1065,0,0.0,0
820,9,train,Give me the award of the author of Understanding Comics.,SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  ?comic <http://dbpedia.org/ontology/author> ?author .
  ?author <http://dbpedia.org/ontology/award> ?result .
  FILTER(STR(?comic) = ""Understanding Comics"")
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
281,3,train,Give me the award of Jonathon Band.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/ontology/award> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
77,6,train,Give me the war of Alexander Chechenskiy and force of Alexander I of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?war WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
}
```",2,2,3,1,2,3,2,20,6,3,0,0.6666666666666666,1.0,0.8
285,7,train,Give me the parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Tina_Onassis_Niarchos> .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
64,1,train,Give me the entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Serbia> .
}
```",1,1,2,1,1,2,2,9,19,403,5409,0.045023696682464455,0.0035003684598378776,0.006495726495726496
404,8,train,"Who is the father of Ernest Augustus, Duke of Brunswick?","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/father> ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
767,16,train,Give me the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/property/governor> ?v1 . }","```sparql
SELECT ?administration WHERE {
  ?entity <http://www.w3.org/2004/02/skos/core#altLabel> ""George Kilbon Nash""@en .
  ?entity <http://dbpedia.org/ontology/reference> ?reference .
  ?reference <http://dbpedia.org/property/administration> ?administration .
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
994,2,train,Give me the band member of Don Dokken.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,8,train,Give me the war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://purl.org/dc/terms/creator> ?author .
  ?author <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
294,5,train,"Give me the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PopulatedPlace> .
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
64,2,train,"Give me the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
}
```",1,2,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
778,4,train,Give me the author of Pushd and popd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  <http://dbpedia.org/resource/Pushd_and_popd> <http://purl.org/dc/terms/creator> ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
16,8,train,Give me the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
996,0,train,Give me the force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> <http://dbpedia.org/ontology/militaryForce> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
659,8,train,"Give me the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/ontology/force> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",1,4,2,1,1,3,3,71,0,0,2,0,0.0,0
488,1,train,Give me the death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
197,6,train,Give me the birthplace of the awardee of Leroy P. Steele Prize.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
SELECT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Leroy_P._Steele_Prize> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,2,1,2,2,9,20,71,1,0.21978021978021978,0.9523809523809523,0.35714285714285715
378,14,train,Give me the claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?commander ?claimToFame WHERE {
  <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
  OPTIONAL { 
    ?commander <http://dbpedia.org/property/claimToFame> ?claimToFame .
  }
}
```",2,2,3,2,1,3,3,71,0,7,2,0.0,0.0,0
959,17,train,"Give me the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> ?v0 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?team WHERE {
  <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?manager .
  ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
  ?manager <http://dbpedia.org/ontology/teamManaged> ?team .
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
48,3,train,Give me the writer of Emotion (Carly Rae Jepsen album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/ontology/writer> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,48,0,0.0,0
547,3,train,Give me the child of William Haliburton.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/William_Haliburton> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
959,3,train,Who is the person born in 1958?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  FILTER (YEAR(?birthDate) = 1958)
}
```",1,1,2,1,1,3,3,71,2044,7016,471,0.22560706401766004,0.8127236580516899,0.35317494600431965
778,3,train,Give me the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/ontology/award> ?result .
}
```",1,1,2,1,1,3,2,20,9,0,0,1.0,1.0,1.0
547,4,train,Give me the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
10,11,train,Give me the professional in the birth name of Sharon Kao.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?professional WHERE {
  <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthName .
  ?birthName <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?professionalType .
  FILTER(?professionalType = <http://dbpedia.org/ontology/Person>)
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
767,7,train,"Give me the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Matthew_Burland> <http://dbpedia.org/ontology/portrayed> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
285,10,train,Who is the professional in the award of Stan Lee?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/ontology/award> ?award .
  ?award <http://dbpedia.org/property/professional> ?result .
}
```",2,2,3,2,1,3,2,20,0,0,39640,0,0.0,0
701,8,train,Give me the father of Merneptah.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/ontology/father> ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
626,7,train,"Give me the commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  FILTER(?commander = ?result)
}
```",2,3,3,2,1,3,2,20,0,0,230,0,0.0,0
915,5,train,"Give me the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Phillip_Spaulding> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter> .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
838,6,train,Give me the band member of Kerber and band of Raša Đelmaš.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?member WHERE {
  { 
    <http://dbpedia.org/resource/Kerber> <http://dbpedia.org/ontology/member> ?member .
  }
  UNION
  {
    <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/member> ?member .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
356,8,train,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
SELECT ?team WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
  ?person <http://dbpedia.org/property/team> ?team .
}
```",2,4,3,2,1,3,2,20,0,0,46,0,0.0,0
838,7,train,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . },"```sparql
SELECT ?band WHERE {
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/YU_Grupa> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?member <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",2,4,3,2,1,3,2,20,0,0,21,0,0.0,0
827,9,train,"Who is the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
  # Find parents of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach
  OPTIONAL { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/father> ?parent . }
  OPTIONAL { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/mother> ?parent . }

  # Find children of these parents who are royalty
  ?parent <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
778,1,train,Give me the author of Chroot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
285,5,train,Who is the professional in ?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# The question is incomplete and lacks specific context.
```",1,1,2,1,1,3,2,20,0,0,39640,0,0.0,0
617,10,train,Give me the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
16,11,train,Give me the spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://www.w3.org/2000/01/rdf-schema#label> ""Ted Martin McGinley""@en .
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
747,9,train,Give me the person born on 1985-04-29 and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
# Query to find person born on 1985-04-29
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
}

# Query to find the band of Amba Shepherd
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/band> ?band .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
465,2,train,Give me the native of Prague.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> .
}
```",1,1,2,1,1,2,2,9,1654,0,0,1.0,1.0,1.0
365,0,train,Give me the band of Phil Alvin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Phil_Alvin> <http://dbpedia.org/ontology/member> ?band .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
328,7,train,"Who is the leader, that is an office holder and a politician, of Gustav Jonson?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?leader WHERE {
  <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/leader> ?leader .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
404,12,train,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
177,4,train,"Give me the headquarter of Ministry of Culture, Sports and Tourism and entity in South Korea.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
SELECT ?headquarters WHERE {
  <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism_(South_Korea)> <http://dbpedia.org/ontology/headquarter> ?headquarters .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
161,5,train,Who is the predecessor of Indalecio Prieto?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . },"```sparql
SELECT ?predecessor WHERE {
  <http://dbpedia.org/resource/Indalecio_Prieto> <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
915,7,train,"Give me the resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/residence> ?v1 . },"```sparql
SELECT ?resident WHERE {
  <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?birthPlace <http://dbpedia.org/property/resident> ?resident .
}
```",2,3,3,2,1,3,2,20,0,0,15,0,0.0,0
339,9,train,Who is the child of the predecessor of Frederick VIII of Denmark?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> <http://dbpedia.org/ontology/predecessor> ?predecessor .
  ?predecessor <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,2,20,4,2,2,0.6666666666666666,0.6666666666666666,0.6666666666666666
345,5,train,"Who is the person born, that is a soccer player and a soccer manager, on 1978-09-15?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
}
```",1,3,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
701,13,train,Give me the parent of the child of Ramesses II.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?parent WHERE {
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
485,1,train,Give me the birth place of Thomas Warner (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
184,17,train,Give me the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/name> ""Archduchess Margaret of Austria"" .
  ?parent <http://dbpedia.org/property/birthYear> ""1925""^^xsd:gYear .
  <http://dbpedia.org/resource/Margaret_of_Austria_(born_1925)> <http://dbpedia.org/ontology/parent> ?parent .

  ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
115,2,train,Who is the alumnus of National University of San Marcos?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . },"```sparql
SELECT ?alumnus WHERE {
  <http://dbpedia.org/resource/National_University_of_San_Marcos> <http://dbpedia.org/ontology/alumni> ?alumnus .
}
```",1,1,2,1,1,2,2,9,0,0,74,0,0.0,0
161,17,train,"Give me the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/El_Director> <http://dbpedia.org/ontology/force> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
303,2,train,Give me the party of Arnulfo Arias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/politicalParty> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
314,10,train,Give me the awardee of the award of Sergei Makovetsky.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/ontology/award> ?award .
}
```",2,2,3,2,1,2,3,28,0,0,951,0,0.0,0
9,6,train,Who is the awardee of Royal Medal?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . },"```sparql
SELECT ?awardee WHERE {
  <http://dbpedia.org/resource/Royal_Medal> <http://dbpedia.org/ontology/awardee> ?awardee .
}
```",1,1,2,1,1,3,3,71,0,0,45,0,0.0,0
161,13,train,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
SELECT ?militaryForce WHERE {
  ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?event <http://dbpedia.org/property/militaryForce> ?militaryForce .
}
```",2,4,3,2,1,3,3,71,0,0,514,0,0.0,0
281,12,train,Give me the war of New Zealand Army and entity in Colony of New Zealand.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
SELECT ?war WHERE {
  ?war <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/New_Zealand_Army> .
  ?war <http://dbpedia.org/ontology/participant> ?entity .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?entity <http://dbpedia.org/property/countryName> ""Colony of New Zealand"" .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
701,11,train,Give me the parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
  <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
161,4,train,"Give me the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Francisco_Franco> <http://dbpedia.org/ontology/force> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",1,4,2,1,1,3,3,71,0,0,12,0,0.0,0
488,5,train,"Who is the father, that is an office holder, of Matsudaira Tadamasa?",SELECT ?result WHERE { <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
16,2,train,Give me the person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
328,10,train,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of Order of Suvorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> .
  ?person <http://dbpedia.org/property/orderSuvorovAwardee> ?order .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,14,train,"Give me the person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Algiers> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
}
```",2,3,3,2,1,3,3,71,122,0,0,1.0,1.0,1.0
404,3,train,Give me the birth name of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
701,12,train,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/parent> ?parent .
  OPTIONAL { ?parent <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ramesses_II> . }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
421,11,train,Give me the person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
492,12,train,Give me the person decedent at Algiers and commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
  ?person <http://dbpedia.org/ontology/commander> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Battle> .
  ?battle <http://dbpedia.org/property/name> ""Franco-Hova Wars"" .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
783,5,train,"Give me the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Priscilla Opoku-Kwarteng"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
963,5,train,"Give me the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/ontology/rulingParty> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
285,1,train,Give me the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
487,0,train,Give me the country of 2022 Vermont House of Representatives election.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
177,5,train,Give me the entity in the residence of Alexander Gamelin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence ?property ?entity .
}
```",2,2,3,2,1,2,2,9,74,1794,2991,0.03961456102783726,0.024143556280587276,0.030002027163997566
465,0,train,Give me the death place of Jiřina Štěpničková.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
404,11,train,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/spouse> ?spouse .
}
```",2,3,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
328,12,train,Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
  ?person <http://dbpedia.org/property/leaderOf> <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,5,train,Who is the commander in Battle of Verdun?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,17,0,0,1.0,1.0,1.0
421,5,train,Give me the birth name of Dino Merlin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
996,3,train,Who is the awardee of 1778.0?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
SELECT ?result WHERE {
  ?award <http://dbpedia.org/ontology/year> ""1778"" .
  ?award <http://dbpedia.org/ontology/awardee> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
801,5,train,"Give me the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Rapper> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",1,2,2,1,1,3,3,71,0,0,1363,0,0.0,0
16,16,train,Give me the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
SELECT DISTINCT ?actor ?profession WHERE {
  <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://purl.org/dc/terms/profession> ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
391,12,train,Give me the actor of All About the Andersons and actor of The Departed.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/starring> ?actor . }
  UNION
  { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?actor . }
}
GROUP BY ?actor
HAVING (COUNT(DISTINCT ?movie) = 2)
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,9,train,Give me the person decedent at French Algeria and commander in Franco-Hova Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
  ?person <http://dbpedia.org/ontology/commander> ?francoHovaWar .
  ?francoHovaWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  FILTER(CONTAINS(LCASE(STR(?francoHovaWar)), ""franco-hova wars""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,7,train,Give me the band member of Senidah and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Senidah> .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Edin Dervišhalidović""@en .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
184,7,train,Give me the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
285,9,train,Who is the child of the spouse of Aristotle Onassis?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,2,20,5,0,0,1.0,1.0,1.0
547,0,train,Give me the resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/burialPlace> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
9,14,train,Give me the figure known as the nickname of Queen's University Belfast.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/ontology/nickname> ?nickname .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,15,train,"Give me the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?force WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://dbpedia.org/property/memberOf> ?force .
}
```",2,3,3,2,1,3,3,71,0,0,60,0,0.0,0
801,16,train,"Give me the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/writer> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
SELECT ?work WHERE {
  ?rapper a <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Rapper> .
  ?rapper <http://purl.org/dc/terms/creator> ?work .
  ?work a <http://dbpedia.org/ontology/MusicalWork> ;
        a <http://dbpedia.org/ontology/Song> .
}
```",2,6,3,2,1,3,3,71,0,0,2395,0,0.0,0
55,9,train,Give me the band member of Metallica and band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Metallica> .
  ?person <http://dbpedia.org/ontology/band> <http://dbpedia.org/resource/Newsted> .
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
429,0,train,Give me the administration of Andrew Johnson.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Andrew_Johnson> <http://dbpedia.org/ontology/administration> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
696,4,train,Who is the commander in Battle of Chishui River?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,2,20,24,0,0,1.0,1.0,1.0
182,7,train,Give me the entity in Sri Lanka and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT ?sriLankaEntity ?war WHERE {
  <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  OPTIONAL {
    ?sriLankaEntity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""sri lanka""))
    ?sriLankaEntity <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Mahesh_Senanayake> .
  }
}
```",2,2,3,1,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
197,0,train,Give me the birthplace of Dumitru Nadu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
92,11,train,"Give me the band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Nevermore_(band)> <http://dbpedia.org/ontology/member> ?member .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",2,3,3,2,1,3,3,71,0,0,12,0,0.0,0
391,2,train,Give me the actor of All About the Andersons.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,3,3,71,4,0,1,1.0,0.8,0.888888888888889
626,10,train,Give me the award of the military force of Battle of Borodino.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Battle_of_Borodino> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?militaryForce <http://dbpedia.org/property/awards> ?award .
}
```",2,2,3,2,1,3,2,20,0,0,53,0,0.0,0
701,5,train,Give me the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Seti_I> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
303,9,train,Give me the entity in Panama and party of Arnulfo Arias.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/memberOf> ?party .
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> ;
         <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Panama> .
  BIND(?party AS ?result)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
435,1,train,Give me the region of Greenwich Mean Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
SELECT ?region WHERE {
  <http://dbpedia.org/resource/Greenwich_Mean_Time> <http://dbpedia.org/ontology/region> ?region .
}
```",1,1,2,1,1,2,3,28,0,0,2484,0,0.0,0
54,11,train,Give me the child of the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
9,3,train,"Give me the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> .
}
```",1,2,2,1,1,3,3,71,0,0,57,0,0.0,0
492,1,train,Give me the commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
232,12,train,Give me the native of London and actor of Dog Soldiers (film).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?person WHERE {
  # Find people native to London
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> .
  
  # Find actors of the film ""Dog Soldiers""
  ?film <http://dbpedia.org/property/castMember> ?person .
  FILTER (str(?film) = ""http://dbpedia.org/resource/Dog_Soldiers_(2002_film)"")

  # Ensure the person is an actor
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_Kingdom> .
}
```",1,1,2,1,1,3,2,20,87,2691,42912,0.03131749460043196,0.0020233028675085466,0.003801035454485877
488,11,train,Give me the birth place of the commander in Boshin War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Boshin_War> .
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,2,1,3,3,71,0,0,15,0,0.0,0
404,7,train,Who is the spouse of Princess Victoria Louise of Prussia?,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
534,10,train,"Give me the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/owner> ?result . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. },"```sparql
SELECT ?owner WHERE {
  <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue> ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure> .
  ?location <http://dbpedia.org/property/owner> ?owner .
}
```",2,4,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
232,10,train,Give me the child of Jon Pertwee and native of London.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
184,15,train,"Give me the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
SELECT ?native WHERE {
  ?landmark <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
  ?landmark <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?landmark <http://dbpedia.org/property/nativeOf> ?native .
}
```",2,3,3,2,1,3,3,71,0,0,3320,0,0.0,0
747,2,train,Give me the band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/band> ?band .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
485,11,train,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
  ?entity <http://dbpedia.org/ontology/location> ?birthPlace .
}
```",2,3,3,2,1,2,3,28,0,101,369,0.0,0.0,0
754,9,train,Give me the parent of the parent of Min Linka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?grandparent WHERE {
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Linka> .
  ?parent <http://dbpedia.org/ontology/child> ?grandparent .
}
```",2,2,3,2,1,3,2,20,0,6,3,0.0,0.0,0
177,0,train,Give me the entity in South Korea.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/South_Korea> .
}
```",1,1,2,1,1,2,2,9,239,627,2826,0.2759815242494226,0.07797716150081566,0.12159755787331468
701,0,train,Give me the parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
365,3,train,Give me the real name of The Blasters.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?realName WHERE {
  <http://dbpedia.org/resource/The_Blasters> <http://dbpedia.org/ontology/alias> ?realName .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
996,2,train,Give me the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?result . },"```sparql
SELECT ?elevation WHERE {
  <http://dbpedia.org/resource/Lac_d%27Avoriaz> <http://dbpedia.org/ontology/elevation> ?elevation .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
9,8,train,Give me the nickname of Queen's University Belfast.,SELECT ?result WHERE { <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?result . },"```sparql
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/ontology/nickName> ?nickname .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
161,10,train,Give me the military force of Rif War and commander in Biscay Campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
# Query to find the military force of the Rif War
SELECT ?militaryForce WHERE {
  <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}

# Query to find the commander in the Biscay Campaign
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?commander .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,1,train,Give me the associated musical artist of Red Tide (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedBand> ?artist .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
251,0,train,Give me the location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . },"```sparql
SELECT ?location WHERE {
  <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/location> ?location .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
915,4,train,"Give me the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/familyName> ?parent .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter> .
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
16,13,train,Give me the professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?profession (GROUP_CONCAT(?otherProfessional; separator="", "") AS ?others) WHERE {
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .
  ?otherProfessional <http://purl.org/dc/terms/subject> ?profession .
  FILTER(?otherProfessional != <http://dbpedia.org/resource/Satomi_Ishihara>)
}
GROUP BY ?profession
```",2,2,3,2,1,3,3,71,0,0,19241,0,0.0,0
617,2,train,Give me the parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> <http://dbpedia.org/ontology/parent> ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
659,5,train,"Give me the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . }","```sparql
SELECT ?result WHERE {
  ?result rdfs:label ""Polish Horse""@en .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
391,7,train,Who is the professional in ?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid query can be constructed due to lack of specific context.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
659,10,train,Give me the military force of Napoleonic Wars and commander in German campaign of 1813.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT DISTINCT ?force ?commander WHERE {
  # Find forces involved in the Napoleonic Wars
  { 
    ?event <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Napoleonic_Wars> .
    ?event <http://dbpedia.org/ontology/militaryForce> ?force .
    OPTIONAL { ?force <http://dbpedia.org/ontology/commander> ?commander . }
  }

  # Find forces involved in the German campaign of 1813
  {
    ?campaign <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/German_campaign_of_1813> .
    ?campaign <http://dbpedia.org/ontology/militaryForce> ?force2 .
    OPTIONAL { ?force2 <http://dbpedia.org/ontology/commander> ?commander2 . }
  }

  # Ensure the forces are the same
  FILTER (?force = ?force2)
}
```",2,2,3,1,2,3,3,71,0,0,6,0,0.0,0
179,6,train,Give me the person born as Mom Rajawongse Sirikit Kitiyakara and parent of Ubol Ratana.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Mom Rajawongse Sirikit Kitiyakara"" .
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ubol_Ratana> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
696,9,train,"Who is the member of the associated musical artist, that is an organisation and a group and a band, of The Boils?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/Organisation>, <http://dbpedia.org/ontology/MusicalGroup>, <http://dbpedia.org/ontology/Band>)).
  ?artist <http://dbpedia.org/ontology/member> ?member .
}
```",2,5,3,2,1,3,2,20,0,0,6,0,0.0,0
696,10,train,Give me the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/awards> ?award .
}
```",2,2,3,2,1,3,2,20,9,0,0,1.0,1.0,1.0
492,4,train,"Give me the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://purl.org/dc/terms/creator> ?work .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
767,6,train,Give me the administration of George K. Nash.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/administration> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
747,10,train,Give me the band of Shèna and person born on 1985-04-29.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?band ?person WHERE {
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/band> ?band .
  
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?resource ;
          <http://dbpedia.org/property/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
356,2,train,"Give me the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/predecessor> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason> .
}
```",1,3,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
177,1,train,"Give me the headquarter of Ministry of Culture, Sports and Tourism.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/headquarter> ?result .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
666,5,train,Give me the nickname of England national beach soccer team.,SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/ontology/nickname> ?nickname .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
378,5,train,"Give me the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Peninsular_War> <http://www.w3.org/2004/02/skos/core#related> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
435,7,train,"Give me the territory administered from Reykjavík and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
# Query for territories administered from Reykjavík
SELECT ?territory WHERE {
  ?territory <http://dbpedia.org/ontology/administrativeUnit> <http://dbpedia.org/resource/Reykjavík> .
}

UNION

# Query for work related to Article 62, Section IV of Constitution of Iceland
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Article_62,_Section_IV_of_Constitution_of_Iceland> <http://purl.org/dc/terms/references> ?work .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
626,2,train,Who is the commander in Battle of Paris (1814)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,2,20,11,0,0,1.0,1.0,1.0
528,11,train,Give me the war of the military force of Battle of Pisagua.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?militaryForce <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  FILTER(?battle != <http://dbpedia.org/resource/Battle_of_Pisagua>)
  BIND(?battle AS ?result)
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
281,13,train,"Give me the entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?entity <http://dbpedia.org/ontology/country> ?birthPlace .
}
```",2,3,3,2,1,3,3,71,0,2,1,0.0,0.0,0
783,4,train,Give me the persona of Ebony Reigns.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ebony_Reigns> <http://dbpedia.org/ontology/stageName> ?result .
}
```

If ""stageName"" does not yield results, we might consider other properties like `nicknames` or related attributes that could describe her persona.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
492,15,train,Give me the work of the author of French Algeria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?work WHERE {
  <http://dbpedia.org/resource/French_Algeria_(book)> <http://purl.org/dc/terms/creator> ?author .
  ?author <http://dbpedia.org/ontology/work> ?work .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
378,3,train,Give me the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
435,2,train,"Give me the work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Article_62,_Section_IV_of_Constitution_of_Iceland> <http://dbpedia.org/ontology/source> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
281,14,train,"Give me the war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?profession <http://dbpedia.org/property/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",2,3,3,2,1,3,3,71,0,0,14,0,0.0,0
712,4,train,Give me the show of Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
SELECT ?show WHERE {
  ?show <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Soviet_Union> .
}
```",1,1,2,1,1,3,2,20,0,2289,8,0.0,0.0,0
48,7,train,Give me the band of the writer of Emotion (Carly Rae Jepsen album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",2,2,3,2,1,3,2,20,0,0,95,0,0.0,0
404,5,train,"Who is the parent, that is a royalty, of Prince George William of Hanover?",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
285,0,train,Give me the parent of Alexander Onassis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
281,0,train,"Give me the war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://dbpedia.org/ontology/conflict> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
281,6,train,"Give me the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
754,3,train,Give me the parent of May Hnin Htapi.,SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?parent .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
429,5,train,Give me the administration of the father of Martha Johnson Patterson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/property/administration> ?administration .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
48,6,train,Give me the band of Carl Falk and band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?person, ?band WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Carl_Falk>
    <http://dbpedia.org/resource/Murda_Mook>
  }
  ?person <http://dbpedia.org/ontology/memberOf> ?band .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
182,5,train,Give me the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?result .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
44,5,train,Give me the band member of the band of John Pettibone.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?bandMember WHERE {
  <http://dbpedia.org/resource/John_Pettibone> <http://dbpedia.org/ontology/memberOf> ?band .
  ?band <http://dbpedia.org/ontology/member> ?bandMember .
}
```",2,2,3,2,1,2,2,9,0,0,2,0,0.0,0
666,10,train,"Give me the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
SELECT ?nickname WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/England> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub> .
  ?entity <http://dbpedia.org/ontology/nickname> ?nickname .
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
232,6,train,"Give me the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/claimToFame> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
820,6,train,Give me the child of Jack Schwartzman and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Jack_Schwartzman> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  OPTIONAL { ?child <http://dbpedia.org/ontology/profession> ?profession . FILTER(?profession != '') }
}
```",2,2,3,1,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
54,0,train,Give me the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
488,16,train,"Who is the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?politician WHERE {
  # Step 1: Find Matsudaira Tadamasa's father who is an office holder.
  <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?officeHolder .
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .

  # Step 2: Find that office holder's father who is a politician.
  ?officeHolder <http://dbpedia.org/ontology/father> ?politician .
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
391,16,train,"Give me the claim to fame, that is a work, of the spouse of Sherry Hormann.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/property/claimToFame> ?fame .
  ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?fame ?workProperty ?work .
}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
666,8,train,Give me the figure known as the nickname of England national beach soccer team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v0 . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v0 . },"```sparql
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/ontology/nickname> ?nickname .
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
617,7,train,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?grandchild WHERE {
  # Find the child (first generation)
  <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> <http://dbpedia.org/ontology/child> ?child .
  
  # Find the grandchild (second generation) who is royalty
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,3,3,2,1,3,2,20,3,0,1,1.0,0.75,0.8571428571428571
328,14,train,"Give me the leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/ontology/officeHolder> ?office .
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?office <http://dbpedia.org/ontology/leader> ?result .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
9,15,train,"Who is the mayor, that is a politician, of the entity, that is an organisation, in Belfast?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?mayor WHERE {
  ?organisation <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> .
  ?organisation <http://dbpedia.org/ontology/mayor> ?mayor .
  ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",2,4,3,2,1,3,3,71,0,0,13,0,0.0,0
915,10,train,"Give me the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
SELECT ?grandChild WHERE {
  # Step 1: Find Lizzie Spaulding's parent who is a fictional character and soap character
  ?parent <http://dbpedia.org/ontology/fictionalCharacter> _:b0 .
  ?parent <http://dbpedia.org/property/isASoapCharacter> ""true""^^<http://www.w3.org/2001/XMLSchema#boolean> .
  <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/fatherOrMother> ?parent .

  # Step 2: Find the children of that parent who are fictional characters and soap characters
  ?grandChild <http://dbpedia.org/ontology/fictionalCharacter> _:b1 .
  ?grandChild <http://dbpedia.org/property/isASoapCharacter> ""true""^^<http://www.w3.org/2001/XMLSchema#boolean> .
  ?parent <http://dbpedia.org/ontology/child> ?grandChild .
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
820,2,train,Who is the author of Understanding Comics?,SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?author WHERE {
  <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?author .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
981,2,train,"Give me the time zone in Salak, North Sumatra.","SELECT ?result WHERE { <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://www.w3.org/2006/time#hasTimezone> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
182,9,train,Give me the war of Jagath Dias and entity in Sri Lanka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?battle <http://dbpedia.org/property/location> ?location .
  FILTER(CONTAINS(LCASE(?location), ""sri lanka""))
}
```",2,2,3,1,2,2,3,28,0,0,5,0,0.0,0
184,3,train,"Give me the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?landmark WHERE {
  ?landmark <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
  ?landmark <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Landmark> .
  ?landmark <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}
```",1,2,2,1,1,3,3,71,0,0,162,0,0.0,0
232,13,train,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/film> ?film .
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?film <http://dbpedia.org/ontology/militaryConflict> ?conflict .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?film <http://dbpedia.org/ontology/starring> ?actor .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
498,3,train,"Who is the member, that is an artist, of Mortician (band)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/member> ?member .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  BIND(?member AS ?artist)
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
626,5,train,Give me the award of Aleksey Petrovich Yermolov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/ontology/receivedAward> ?award .
  ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award> .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
392,0,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Italy> .
}
```",1,1,2,1,1,2,3,28,170,1702,12922,0.09081196581196581,0.012985029025358998,0.0227211975407645
328,0,train,Give me the awardee of Order of Suvorov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
SELECT ?awardee WHERE {
  ?awardee <http://dbpedia.org/ontology/awardedBy> <http://dbpedia.org/resource/Order_of_Suvorov> .
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
487,3,train,Give me the administration of Patricia McCoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Patricia_McCoy> <http://dbpedia.org/ontology/administration> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
9,7,train,"Give me the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
  ?entity <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Northern_Ireland> .
}
```",1,3,2,1,1,3,3,71,0,7,134,0.0,0.0,0
92,16,train,"Give me the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Return_to_Nuke_%27Em_High_Volume_1> <http://dbpedia.org/ontology/starring> ?person .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",2,3,3,2,1,3,3,71,0,0,205,0,0.0,0
30,0,train,Give me the native of Paris.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> .
}
```",1,1,2,1,1,2,2,9,4485,0,0,1.0,1.0,1.0
754,4,train,Give me the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> <http://dbpedia.org/ontology/reference> ?reference .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
981,9,train,"Give me the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . ?result <http://dbpedia.org/property/timeZone> ?v0 . }","```sparql
SELECT ?region WHERE {
  <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://www.w3.org/2006/time#during> ?timeZone .
  ?timeZone <http://dbpedia.org/ontology/location> ?location .
  ?location <http://dbpedia.org/ontology/administrativeRegion> ?region .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
820,3,train,Give me the award of Scott McCloud.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/ontology/award> ?result .
}
```",1,1,2,1,1,3,2,20,0,4,4,0.0,0.0,0
488,6,train,"Who is the father, that is a politician, of Yūki Hideyasu?",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Y%C5%ABki_Hideyasu> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
360,11,train,Give me the reference to the author of Blinded by the Light.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/Blinded_by_the_Light> <http://purl.org/dc/terms/creator> ?author .
  ?author <http://www.w3.org/2002/07/owl#sameAs> ?reference .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
994,14,train,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Don_Dokken> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken"" .
  ?result <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Don_Dokken> .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
421,3,train,Who is the awardee of [[#Awards and nominations?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
# This SPARQL query template assumes a specific award entity is known.
SELECT ?awardee WHERE {
  ?entity <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Award_Name> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  BIND(?entity AS ?awardee)
}
```

Note: Replace `<http://dbpedia.org/resource/Award_Name>` with the actual DBpedia resource URI of the award in question.",1,1,2,1,1,2,3,28,0,0,113,0,0.0,0
378,1,train,Give me the war of Joaquín Blake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?battle <http://dbpedia.org/property/partOfWar> ?war .
}
```",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
617,6,train,Who is the child of Antiochus III the Great?,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
696,6,train,Give me the landmark at elevation of 50 and birth place of Tim Brennan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?landmark WHERE {
  # Find landmarks at an elevation of 50
  ?landmark <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#float> .
  
  # Check if this landmark is also the birthplace of Tim Brennan
  OPTIONAL { 
    ?landmark <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Tim_Brennan_(footballer)> .
  }
}
```",2,2,3,1,2,3,2,20,1,598,0,0.001669449081803005,1.0,0.0033333333333333335
92,17,train,Give me the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
16,5,train,Who is the actor of Unnatural (TV series)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
312,6,train,Give me the entity in the birthplace of Giorgio Grigolli.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  ?entity <http://www.w3.org/ns/prov#wasDerivedFrom> ?birthplace .
}
```",2,2,3,2,1,2,2,9,0,0,13092,0,0.0,0
617,1,train,Give me the parent of Mieszko II Lambert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Mieszko_II_Lambert> <http://dbpedia.org/ontology/parent> ?parent .
}
```",1,1,2,1,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
427,11,train,Give me the reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> ?property ?reference .
  FILTER(?property = dbp:reference || ?property = dbo:citation)
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
92,7,train,Give me the birth name of Joseph Michael.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,2,train,Give me the military force of Napoleonic Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Napoleonic_Wars> <http://dbpedia.org/ontology/militaryForce> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1051,0,0.0,0
392,10,train,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
SELECT ?region WHERE {
  ?event <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?timeZone <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent> .
  ?event <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Aguilar_de_Segarra> .
  ?timeZone <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?region .
}
```",2,3,3,2,1,2,3,28,0,0,49990,0,0.0,0
92,12,train,Give me the associated musical artist of Jim Sheppard and band of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/ontology/band> ?artist .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
378,11,train,Give me the war of the person born as Carl Pontus Gahn.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/war> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
54,9,train,Give me the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?individual WHERE {
  ?individual <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  ?individual <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,11,train,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
  # Find children of Seleucus II Callinicus who are royalty
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Find grandchildren who are children of the royalty
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
747,0,train,Give me the person born on 1985-04-29.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
}
```",1,1,2,1,1,3,3,71,30,0,0,1.0,1.0,1.0
318,5,train,Give me the person born in the founding year of Eel Pie Publishing.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v1 . },"```sparql
SELECT ?person WHERE {
  # Step 1: Get the founding year of Eel Pie Publishing
  <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingDate> ?foundingYear .

  # Step 2: Find persons born in that year
  ?person <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?birthInfo .
  ?birthInfo <http://dbpedia.org/property/birthYear> ?year .
  FILTER (?year = ?foundingYear)
}
```",2,2,3,2,1,2,2,9,0,0,2810,0,0.0,0
232,11,train,Give me the child of the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/John_Pertwee> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  <http://dbpedia.org/resource/John_Pertwee> <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee"" .
  <http://dbpedia.org/resource/John_Pertwee> <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
547,1,train,Give me the resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/burialPlace> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
378,7,train,"Give me the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/event> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}
```",1,4,2,1,1,3,3,71,0,0,7,0,0.0,0
754,6,train,Give me the parent of Loe Thai and parent of May Hnin Thwe-Da.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?person ?parent WHERE {
  VALUES ?person { <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> }
  ?person <http://dbpedia.org/ontology/parent> ?parent .
}
```",2,2,3,1,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
767,14,train,Give me the reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/ontology/alterEgo> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,98447,0,0.0,0
626,3,train,"Give me the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",1,2,2,1,1,3,2,20,0,0,25,0,0.0,0
996,9,train,Who is the awardee of the elevation of Lac d'Avoriaz?,SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Lac_d%27Avoriaz> <http://dbpedia.org/ontology/awardee> ?result .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
827,5,train,"Who is the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894)?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
528,3,train,"Give me the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . },"```sparql
SELECT ?event WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Chile> .
}
```",1,2,2,1,1,3,3,71,0,53,34,0.0,0.0,0
392,5,train,"Give me the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/ontology/residence> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?result <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Italy> .
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
801,10,train,Give me the associated musical artist of Chris Taylor (music producer) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}
```",2,2,3,1,2,3,3,71,4,3,0,0.5714285714285714,1.0,0.7272727272727273
303,10,train,"Give me the entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/El_Valle_de_Ant%C3%B3n> <http://dbpedia.org/ontology/locationCountry> ?country .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?entity <http://dbpedia.org/ontology/country> ?country .
}
```",2,3,3,2,1,2,3,28,0,0,991,0,0.0,0
54,2,train,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
SELECT ?predecessor WHERE {
  <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
747,11,train,Give me the person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
SELECT ?person WHERE {
  # Retrieve Pavlo Khudzik's birth date
  <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .
  
  # Find other persons with the same birth date
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  FILTER(?person != <http://dbpedia.org/resource/Pavlo_Khudzik>)
}
```",2,2,3,2,1,3,3,71,29,0,1,1.0,0.9666666666666667,0.983050847457627
404,16,train,"Who is the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  # Step 1: Find the royal parent of Prince George William of Hanover
  <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/birthParent> ?parent .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .

  # Step 2: Find the children of that parent who are royalty
  ?parent <http://dbpedia.org/ontology/birthChild> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
421,1,train,Give me the native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
}
```",1,1,2,1,1,2,3,28,5399,0,0,1.0,1.0,1.0
498,5,train,"Give me the band of the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?result WHERE {
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?entity rdfs:label ""Solace of Requiem""@en .
  OPTIONAL { ?entity <http://dbpedia.org/ontology/band> ?result . }
}
```",2,4,3,2,1,2,2,9,0,0,11,0,0.0,0
427,17,train,"Who is the person born, that is an office holder and a politician, as the birth name of Romano Prodi?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Romano Prodi"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
360,4,train,"Give me the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}
```",1,2,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
547,11,train,Give me the resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?child ?restingPlace WHERE {
  <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
617,8,train,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?father <http://dbpedia.org/ontology/parent> ?parent .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
391,10,train,"Give me the actor of All About the Andersons and native of Compton, California.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
SELECT ?actor WHERE {
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?movie <http://www.w3.org/2000/01/rdf-schema#label> ""All About the Andersons""@en .
  
  ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ""Compton, California""@en .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
994,9,train,Give me the associated musical artist of Red Tide (band) and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band ?artist WHERE {
  { 
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedBand> ?artist .
    BIND(<http://dbpedia.org/resource/Red_Tide_(band)> AS ?band)
  }
  UNION
  {
    <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedBand> ?artist .
    BIND(<http://dbpedia.org/resource/S.A._Slayer> AS ?band)
  }
}
```",2,2,3,1,2,3,3,71,1,11,0,0.08333333333333333,1.0,0.15384615384615385
547,10,train,Give me the resting place of James Burton (Egyptologist) and resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  { 
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/James_Burton_(Egyptologist)> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Alan_Cunningham_(explorer)> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Alan_Cunningham_(explorer)> AS ?person)
  }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
251,4,train,"Give me the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/ontology/rulingParty> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
915,0,train,"Give me the resident of Springfield, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . }","```sparql
SELECT ?resident WHERE {
  ?resident <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> .
}
```",1,1,2,1,1,3,2,20,15,0,0,1.0,1.0,1.0
294,9,train,"Give me the resting place of Edwin A. Keeble and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/burialPlace> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place> .
  FILTER(CONTAINS(LCASE(STR(?result)), ""nashville, tennessee""))
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
9,5,train,"Give me the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Royal_Medals> <http://www.w3.org/2004/02/skos/core#related> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
754,1,train,Give me the parent of May Hnin Thwe-Da.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/May_Hnin_Thwe-Da> <http://dbpedia.org/ontology/parent> ?parent .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
77,7,train,Give me the war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
SELECT ?result WHERE {
  ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> .
  ?awardee <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",2,2,3,2,1,3,2,20,0,0,22,0,0.0,0
142,3,train,Give me the actor of Papa wa Newscaster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,2,2,9,4,0,0,1.0,1.0,1.0
115,3,train,Who is the awardee of National Order of Scientific Merit?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
SELECT ?awardee WHERE {
  <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> <http://dbpedia.org/ontology/awardee> ?awardee .
}
```",1,1,2,1,1,2,2,9,0,0,9,0,0.0,0
312,4,train,Give me the entity in Italy and entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
  ?entity <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> .
}
```",2,2,3,1,2,2,2,9,228,0,0,1.0,1.0,1.0
754,2,train,Give me the parent of Min Linka.,SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
365,5,train,"Give me the band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Vocalist,_musician,_songwriter> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/property/band> ?band .
}
```",2,4,3,2,1,2,2,9,0,0,2,0,0.0,0
44,4,train,Give me the band member of Undertow (band) and band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Undertow_(band)> <http://dbpedia.org/ontology/member> ?member .
  <http://dbpedia.org/resource/Sledgeback> <http://dbpedia.org/ontology/member> ?member .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
528,14,train,Give me the force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/militaryForce> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
994,8,train,"Who is the person born, that is a musical artist, as Donald Maynard Dokken?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Donald Maynard Dokken"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
435,10,train,Give me the region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
SELECT ?region WHERE {
  <http://dbpedia.org/resource/Bombali_Shebora_Chow.html> <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?timeZone <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
  ?location <http://dbpedia.org/property/region> ?region .
}
```",2,2,3,2,1,2,3,28,0,0,2484,0,0.0,0
996,4,train,Who is the native of Palestine (region)?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> .
}
```",1,1,2,1,1,3,2,20,47,0,0,1.0,1.0,1.0
365,2,train,"Give me the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/profession> ?profession .
  FILTER (?profession IN (<http://dbpedia.org/ontology/Artist>, <http://dbpedia.org/ontology/MusicalArtist>)).
  ?result <http://dbpedia.org/ontology/category> <http://dbpedia.org/resource/Category:Vocalists,_musicians_and_songwriters> .
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
314,7,train,Give me the person deceased at Madrid and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> .
  ?person <http://dbpedia.org/ontology/battleCommander> ?battle .
  ?battle <http://www.w3.org/2000/01/rdf-schema#label> ""Spanish Civil War""@en .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
232,7,train,"Give me the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
}
```",1,3,2,1,1,3,3,71,148,65,122,0.6948356807511737,0.5481481481481482,0.6128364389233956
547,9,train,Give me the resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  { 
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/James_Burton_(Egyptologist)> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Simon_Cadell> AS ?person)
  }
}
```",2,2,3,1,2,3,3,71,1,3,0,0.25,1.0,0.4
429,2,train,Who is the father of Martha Johnson Patterson?,SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/ontology/father> ?father .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
328,9,train,Give me the awardee of Order of Suvorov and commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/awardee> <http://dbpedia.org/resource/Order_of_Suvorov> .
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
747,15,train,"Give me the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?birthDate WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> .
  ?person <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
435,6,train,Give me the territory administered from Reykjavík and region of Greenwich Mean Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
SELECT ?territory WHERE {
  ?territory <http://dbpedia.org/ontology/administrativeCenter> <http://dbpedia.org/resource/Reykjavík> .
  ?territory <http://dbpedia.org/ontology/timeZone> ""GMT"" .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
339,2,train,Who is the predecessor of Frederick VIII of Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . },"```sparql
SELECT ?predecessor WHERE {
  <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
142,2,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
SELECT ?region WHERE {
  <http://dbpedia.org/resource/Japan_Standard_Time> <http://dbpedia.org/ontology/timeZoneOfRegion> ?region .
}
```",1,1,2,1,1,2,2,9,0,0,2255,0,0.0,0
747,16,train,"Who is the writer of the work, that is a song, of Amba Shepherd?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  ?work <http://dbpedia.org/ontology/author> ?writer .
  ?work <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Song>.
  ?work <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Amba_Shepherd> .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
30,6,train,Give me the professional in the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
SELECT ?professional WHERE {
  <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/ontology/profession> ?profession .
  ?otherPerson <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(?otherPerson != <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild>)
  BIND(?otherPerson AS ?professional)
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
55,0,train,Give me the band member of Guns N' Roses.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Guns_N%27_Roses> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,2,3,28,0,0,55,0,0.0,0
701,6,train,Give me the child of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
827,7,train,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
  <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,3,3,2,1,3,2,20,6,2,0,0.75,1.0,0.8571428571428571
528,1,train,Give me the war of Orozimbo Barbosa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",1,1,2,1,1,3,3,71,9,0,0,1.0,1.0,1.0
487,10,train,"Give me the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Phil_Scott_(politician)> <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
303,1,train,Give me the entity in Panama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Panama> .
}
```",1,1,2,1,1,2,3,28,3,79,988,0.036585365853658534,0.0030272452068617556,0.0055917986952469705
492,8,train,"Give me the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
179,7,train,Give me the person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/ontology/birthName> ?result .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
391,5,train,Who is the spouse of Sherry Hormann?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
963,2,train,Give me the time zone of Herzegovina-Neretva Canton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/ontology/timeZone> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
232,14,train,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?native WHERE {
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Britain> .
  ?residence <http://dbpedia.org/ontology/nativePlace> ?native .
}
```",2,4,3,2,1,3,3,71,0,0,9121,0,0.0,0
77,0,train,Give me the war of Alexander Chechenskiy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/militaryConflict> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
827,8,train,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . }","```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .
  ?child <http://dbpedia.org/ontology/father> ?father .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
115,0,train,Give me the alma mater of Vladimir Cerrón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
16,4,train,Who is the person born as Ted Martin McGinley?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ted Martin McGinley"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
44,2,train,Give me the band of John Pettibone.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/John_Pettibone> <http://dbpedia.org/ontology/member> ?band .
}
UNION
SELECT ?band WHERE {
  <http://dbpedia.org/resource/John_Pettibone> <http://dbpedia.org/property/band> ?band .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
427,7,train,Give me the birth name of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
488,7,train,"Who is the spouse, that is a royalty, of Tokugawa Masako?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
701,17,train,"Give me the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?commander <http://dbpedia.org/property/father> ?father .
}
```",2,3,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
959,12,train,Give me the manager of 2013 Júbilo Iwata season and native of Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?manager WHERE {
  <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?manager .
  OPTIONAL { ?manager <http://dbpedia.org/property/birthPlaceCountry> <http://dbpedia.org/resource/Japan> }
  FILTER EXISTS {
    ?manager <http://dbpedia.org/property/birthPlaceCountry> <http://dbpedia.org/resource/Japan>
  }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
232,9,train,Give me the actor of Dog Soldiers (film) and child of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?actor WHERE {
  # Find actors in Dog Soldiers (film)
  <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?actor .
  
  # Find children of Jon Pertwee
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?actor .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
617,4,train,"Who is the child, that is a royalty, of Seleucus II Callinicus?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Seleucus_II_Callinicus> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
294,3,train,"Who is the awardee, that is a politician, of Distinguished Service Medal (U.S. Army)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
SELECT ?awardee WHERE {
  <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> <http://dbpedia.org/ontology/recipient> ?awardee .
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,2,2,1,1,2,3,28,0,0,11,0,0.0,0
547,16,train,Give me the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT DISTINCT ?actor WHERE {
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/E._Richard>.
  ?show <http://dbpedia.org/ontology/starring> ?actor.
  FILTER(?actor != <http://dbpedia.org/resource/E._Richard>)
}
```",2,2,3,2,1,3,3,71,0,0,22,0,0.0,0
659,6,train,"Give me the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}
```",1,3,2,1,1,3,3,71,19,0,0,1.0,1.0,1.0
182,0,train,Give me the war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/militaryConflicts> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
54,14,train,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?predecessor WHERE {
  <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?child <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",2,4,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
339,8,train,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/father> ?father .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
77,10,train,"Who is the mayor of the territory administered, that is an organisation, from Warsaw?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . },"```sparql
SELECT ?mayor WHERE {
  ?organization <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Warsaw> .
  ?organization <http://dbpedia.org/ontology/administers> ?territory .
  ?territory <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?territory <http://dbpedia.org/ontology/mayor> ?mayor .
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
318,3,train,Give me the profession of Robert Xavier Rodriguez.,SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/ontology/profession> ?profession .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
963,7,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/usedByCountry> ?region .
  ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  BIND(?region AS ?country)
}
```",2,3,3,2,1,3,2,20,0,0,173261,0,0.0,0
435,4,train,Give me the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Bombali_Shebora_Chow.html> <http://dbpedia.org/ontology/timeZone> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
488,9,train,Give me the death place of Tokugawa Ieyasu and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?person ?place WHERE {
  { 
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?place .
    BIND(<http://dbpedia.org/resource/Tokugawa_Ieyasu> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?place .
    BIND(<http://dbpedia.org/resource/Enomoto_Takeaki> AS ?person)
  }
}
```",2,2,3,1,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
534,7,train,"Give me the birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?child <http://dbpedia.org/ontology/officeHolder> ?office .
  ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
285,4,train,Give me the award of Stan Lee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/ontology/award> ?result .
}
```",1,1,2,1,1,3,2,20,0,4,5,0.0,0.0,0
534,2,train,"Who is the native, that is a politician, of Essex?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/East_of_England_(region)#Essex> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,2,2,1,1,3,2,20,0,0,89,0,0.0,0
161,14,train,"Give me the commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Emilio_Mola> <http://dbpedia.org/ontology/commander> ?force .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> .
}
```",2,3,3,2,1,3,3,71,0,0,85,0,0.0,0
820,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid query can be constructed due to the lack of specific context in the question.
```",1,1,2,1,1,3,2,20,0,0,39640,0,0.0,0
314,4,train,Give me the award of Sergei Makovetsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/ontology/receivedAward> ?award .
  ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award> .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
404,17,train,Who is the father of the spouse of Princess Victoria Louise of Prussia?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/property/father> ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
485,6,train,Give me the entity in United Kingdom and birth place of Thomas Warner (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place> .
  OPTIONAL { ?result <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> . }
}
```",2,2,3,1,2,2,3,28,1,0,0,1.0,1.0,1.0
312,3,train,Give me the birthplace of Giorgio Grigolli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
232,8,train,"Give me the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/residence> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  OPTIONAL { ?result <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> . }
}
```",1,3,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
747,4,train,Give me the birth date of Pavlo Khudzik.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
SELECT ?birthDate WHERE {
  <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
197,1,train,Give me the birthplace of George Lusztig.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
312,1,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Italy> .
}
```",1,1,2,1,1,2,2,9,170,1702,12922,0.09081196581196581,0.012985029025358998,0.0227211975407645
9,17,train,"Give me the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://dbpedia.org/property/nickname> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
SELECT ?entity ?nickname WHERE {
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
  ?entity <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Northern Ireland""@en .
  OPTIONAL { ?entity <http://dbpedia.org/ontology/nickname> ?nickname . }
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
16,17,train,Give me the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?alumnus ?birthName WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Ohio_State_University> .
  ?alumnus <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",2,2,3,2,1,3,3,71,0,0,90,0,0.0,0
429,4,train,Give me the country of 77th Ohio Infantry Regiment and administration of Andrew Johnson.,SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . },"```sparql
SELECT ?country WHERE {
  { 
    <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?country .
  }
  UNION
  {
    <http://dbpedia.org/resource/Andrew_Johnson> <http://dbpedia.org/ontology/officesHeld> ?office .
    ?office <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/Andrew_Johnson> .
    ?office <http://dbpedia.org/ontology/country> ?country .
  }
}
```",2,2,3,1,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
360,2,train,Give me the reference to Manfred Mann.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/Manfred_Mann> <http://dbpedia.org/ontology/reference> ?reference .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
487,5,train,"Give me the person born, that is a soccer player, as Philip Brian Scott.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Philip Brian Scott"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
994,6,train,"Give me the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Meshuggah> <http://dbpedia.org/ontology/member> ?member .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}
```",1,4,2,1,1,3,3,71,0,0,6,0,0.0,0
427,8,train,"Who is the person born, that is an office holder and a politician, as Romano Antonio Prodi?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?person WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/birthDate> ?birthDate .
}
```",1,3,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
747,13,train,Give me the band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",2,2,3,2,1,3,3,71,0,0,13,0,0.0,0
626,9,train,"Give me the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",2,3,3,2,1,3,2,20,32,38,45,0.45714285714285713,0.4155844155844156,0.43537414965986393
754,7,train,Give me the parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?grandparent WHERE {
  <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/child> ?parent .
  ?parent <http://dbpedia.org/ontology/child> ?grandparent .
}
```",2,2,3,2,1,3,2,20,0,1,1,0.0,0.0,0
92,8,train,Give me the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael Furney"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
838,5,train,"Give me the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/member> ?member .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?result <http://dbpedia.org/ontology/member> ?member .
}
```",1,2,2,1,1,3,2,20,0,0,8,0,0.0,0
659,11,train,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/property/force> ?force .
  ?force <http://dbpedia.org/ontology/commander> ?commander .
}
```",2,2,3,2,1,3,3,71,0,0,175,0,0.0,0
963,8,train,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . },"```sparql
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/ontology/administration> ?administration .
  ?administration <http://dbpedia.org/ontology/rulingParty> ?party .
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .
}
```",2,3,3,2,1,3,2,20,0,0,86,0,0.0,0
77,5,train,Who is the mayor of Congress Poland?,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?mayor WHERE {
  <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/ontology/mayor> ?mayor .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
54,17,train,"Give me the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,4,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
345,8,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
SELECT ?team WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
  ?person <http://dbpedia.org/ontology/team> ?team .
}
```",2,4,3,2,1,3,2,20,1,34,1,0.02857142857142857,0.5,0.05405405405405405
251,9,train,Give me the administration of Forza Italia (2013) and death place of Laura Mancinelli.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?administration .
}
UNION
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
404,4,train,"Who is the person born, that is a royalty, as Princess Victoria Louise of Prussia?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
617,3,train,"Give me the child, that is a royalty, of Boleslaus I, Duke of Bohemia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
92,5,train,Give me the actor of Return to Nuke 'Em High Volume 1.,SELECT ?result WHERE { <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,3,3,71,0,1,19,0.0,0.0,0
345,7,train,Give me the figure known as the nickname of FC Vaduz.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/ontology/nickname> ?result .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
959,7,train,"Who is the manager, that is a sports manager, of 1998 Kashima Antlers season?",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
}
```",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
485,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_Kingdom> .
}
```",1,1,2,1,1,2,3,28,87,2691,42912,0.03131749460043196,0.0020233028675085466,0.003801035454485877
959,14,train,Give me the manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?team ?manager WHERE {
  <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/ontology/team> ?team .
  ?team <http://dbpedia.org/ontology/manager> ?manager .
}
```",2,2,3,2,1,3,3,71,0,2,10,0.0,0.0,0
701,15,train,Give me the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,6,0,0,1.0,1.0,1.0
963,6,train,Give me the entity in Serbia and administration of Serbian Progressive Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Serbian_Progressive_Party> <http://dbpedia.org/ontology/administration> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  FILTER(CONTAINS(LCASE(STR(?result)), ""serbia""))
}
```",2,2,3,1,2,3,2,20,0,0,84,0,0.0,0
528,17,train,Give me the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Narciso Campero"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,7,train,Give me the reference to Rutger Jan Schimmelpenninck.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
SELECT ?reference WHERE {
  ?reference <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
421,0,train,Give me the band member of Senidah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Senidah> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
281,10,train,"Give me the war of New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?war .
  <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?war .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
251,7,train,Give me the death place of Laura Mancinelli and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace, ?battleLocation WHERE {
  <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/location> ?battleLocation .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
498,4,train,Give me the band of Malevolent Creation and band of Will Rahmer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  { <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/member> ?band . }
  UNION
  { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/member> ?band . }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
492,16,train,"Give me the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}
```",2,4,3,2,1,3,3,71,11,0,0,1.0,1.0,1.0
465,1,train,Give me the administration of Czech Pirate Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Czech_Pirate_Party> <http://dbpedia.org/ontology/memberOf> ?administration .
  ?administration <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Administration> .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
528,0,train,Give me the war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/war> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
487,7,train,Give me the country of the administration of Patricia McCoy.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?v1 <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Patricia_McCoy> <http://dbpedia.org/ontology/administration> ?administration .
  ?administration <http://dbpedia.org/property/country> ?country .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
994,12,train,Give me the band member of Don Dokken and associated musical artist of Red Tide (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT ?member WHERE {
  # Find members of Don Dokken's band
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/member> ?member .
  
  # Check if the member is associated with Red Tide (band)
  OPTIONAL { 
    ?member <http://dbpedia.org/property/associatedBand> <http://dbpedia.org/resource/Red_Tide_(band)> .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
465,3,train,"Give me the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/ontology/leader> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}
```",1,3,2,1,1,2,2,9,0,0,5,0,0.0,0
659,4,train,"Give me the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/militaryForce> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,52,0,0.0,0
827,1,train,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/father> ?father .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
465,4,train,Give me the death place of Jiřina Štěpničková and administration of Czech Pirate Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace, ?administration WHERE {
  # Query for Jiřina Štěpničková's death place
  <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .

  # Query for Czech Pirate Party's administration
  OPTIONAL {
    <http://dbpedia.org/resource/Czech_Pirate_Party> <http://dbpedia.org/ontology/administration> ?administration .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
492,17,train,"Give me the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?capital WHERE {
  <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?country .
  ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital .
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
427,1,train,Give me the party of Giulio Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/politicalParty> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
161,12,train,Give me the commander in Biscay Campaign and military force of Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?commander WHERE {
  { 
    <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?commander .
  }
  UNION
  {
    <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    ?militaryForce <http://dbpedia.org/ontology/commander> ?commander .
  }
}
```",2,2,3,1,2,3,3,71,3,2,0,0.6,1.0,0.7499999999999999
994,13,train,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?artist WHERE {
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Meshuggah> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/Group>, <http://dbpedia.org/ontology/Organisation>)).
  ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}
```",2,5,3,2,1,3,3,71,0,0,33,0,0.0,0
30,1,train,"Give me the professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/occupation> ?occupation .
  FILTER (
    EXISTS { ?person <http://dbpedia.org/ontology/occupation> ""Financier"" . }
    && EXISTS { ?person <http://dbpedia.org/ontology/occupation> ""Businessman"" . }
    && EXISTS { ?person <http://dbpedia.org/ontology/occupation> ""Vineyard owner"" . }
    && EXISTS { ?person <http://dbpedia.org/ontology/occupation> ""Art collector"" . }
    && EXISTS { ?person <http://dbpedia.org/ontology/occupation> ""Racehorse owner/breeder"" . }
  )
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
427,0,train,Give me the reference to Partito Popolare Italiano.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
SELECT ?reference WHERE {
  ?entity <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Partito_Popolare_Italiano> .
  ?entity ?p ?reference .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
404,1,train,Give me the parent of Prince Ernest Augustus of Hanover (born 1914).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,3,71,1,1,1,0.5,0.5,0.5
659,13,train,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?war <http://dbpedia.org/ontology/commander> ?commander .
}
```",2,4,3,2,1,3,3,71,130,0,0,1.0,1.0,1.0
498,0,train,Give me the band of Malevolent Creation.,SELECT ?result WHERE { <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/member> ?member .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  BIND(?member AS ?result)
}
UNION
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/similarArtist> ?similarArtist .
  ?similarArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  BIND(?similarArtist AS ?result)
}
```",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
996,10,train,Give me the award of the native of Palestine (region).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?person ?award WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Palestine_(region)> .
  ?person <http://dbpedia.org/ontology/award> ?award .
}
```",2,2,3,2,1,3,2,20,0,0,14,0,0.0,0
959,10,train,Give me the manager of 2013 Júbilo Iwata season and member of University of Tsukuba.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
SELECT ?manager WHERE {
  <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?manager .
  ?manager <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/University_of_Tsukuba> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
92,13,train,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?associatedArtist WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
197,5,train,Give me the birthplace of the member of FC Politehnica Timișoara.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT DISTINCT ?birthPlace WHERE {
  ?member <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> .
  ?member <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,2,1,2,2,9,171,0,0,1.0,1.0,1.0
981,1,train,Give me the birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
534,6,train,Give me the headquarter of Royal Dublin Society and birth place of Garret FitzGerald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
SELECT ?headquarter, ?birthPlace WHERE {
  # Query for the headquarters of Royal Dublin Society
  <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarters> ?headquarter .

  # Query for the birthplace of Garret FitzGerald
  <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
783,0,train,Give me the associated musical artist of Appietus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}
```",1,1,2,1,1,3,2,20,15,0,0,1.0,1.0,1.0
963,10,train,"Give me the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/21205> <http://dbpedia.org/ontology/location> ?location .
  ?location <http://dbpedia.org/ontology/rulingParty> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
427,15,train,Give me the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Michele_Pinto_(politician)> <http://dbpedia.org/ontology/politicalParty> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
981,0,train,Give me the entity in Indonesia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Indonesia> .
}
```",1,1,2,1,1,3,2,20,71,787,2878,0.08275058275058275,0.024075957951848085,0.03729971105857631
360,6,train,Give me the writer of The Roaring Silence and native of Johannesburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  ?book <http://dbpedia.org/ontology/author> ?writer .
  ?book <http://dbpedia.org/property/title> ""The Roaring Silence"" .
  
  ?writer <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  ?birthplace <http://www.w3.org/2000/01/rdf-schema#label> ""Johannesburg""@en .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
492,6,train,"Give me the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/war> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
712,0,train,Give me the capital of South Russia (1919–1920).,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/South_Russia_(1919%E2%80%931920)> <http://dbpedia.org/ontology/capital> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
392,4,train,"Give me the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent> .
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
617,9,train,Give me the spouse of Laodice IV and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?individual WHERE {
  # Find spouse of Laodice IV
  <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?individual .
  
  # Check if this individual is a child of Antiochus III the Great
  ?individual <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
378,6,train,Who is the commander in Peninsular War?,SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,37,0,0,1.0,1.0,1.0
281,4,train,Who is the awardee of Knight Grand Cross of the Order of the Bath?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> <http://dbpedia.org/ontology/awardee> ?person .
}
```",1,1,2,1,1,3,3,71,0,0,558,0,0.0,0
959,8,train,Give me the team of Takashi Sekizuka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
SELECT ?team WHERE {
  <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/ontology/team> ?team .
}
```",1,1,2,1,1,3,3,71,0,3,10,0.0,0.0,0
547,7,train,Give me the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/ontology/award> ?result .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
838,2,train,"Give me the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Žika_Jelić> <http://dbpedia.org/ontology/member> ?band .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
378,0,train,Give me the war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",1,1,2,1,1,3,3,71,12,0,0,1.0,1.0,1.0
547,8,train,Give me the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
SELECT ?awardee WHERE {
  ?awardee <http://dbpedia.org/ontology/honour> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
}
```",1,1,2,1,1,3,3,71,0,0,61,0,0.0,0
485,3,train,"Give me the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Western_European_Time> <http://dbpedia.org/ontology/appliesToRegion> ?region .
  ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
778,6,train,Give me the entity in United States and author of Chroot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> .
  ?entity <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Chroot> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
617,5,train,"Give me the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/ontology/father> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
959,5,train,"Who is the leader, that is a politician, of 2010 Japanese House of Councillors election?",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/ontology/leader> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,2,2,1,1,3,3,71,0,0,9,0,0.0,0
30,2,train,Give me the birthplace of Silvia Cohen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
77,3,train,Who is the awardee of Golden Weapon for Bravery?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> <http://dbpedia.org/ontology/awardee> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,10,0,0.0,0
232,16,train,"Give me the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Narrator> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Producer> .
  ?person <http://dbpedia.org/property/film> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  
  OPTIONAL {
    ?person <http://dbpedia.org/property/militaryConflict> ?militaryResult .
    ?militaryResult <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
  
  FILTER EXISTS { ?person <http://dbpedia.org/property/militaryConflict> ?militaryResult . }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
281,7,train,"Who is the professional, that is an office holder and a politician, in New Zealand Army?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/New_Zealand_Army> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Professional> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
747,17,train,Who is the person born as the persona of Shèna?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?entity <http://dbpedia.org/ontology/personalName> ""Shèna""@en .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?entity <http://dbpedia.org/ontology/birthName> ?person .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
783,8,train,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?bandMember WHERE {
  <http://dbpedia.org/resource/Priscilla_Opoku-Kwarteng> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/Artist>, <http://dbpedia.org/ontology/MusicalArtist>)).
  <http://dbpedia.org/resource/Priscilla_Opoku-Kwarteng> <http://dbpedia.org/ontology/memberOfBand> ?bandMember .
}
```",2,4,3,2,1,3,2,20,0,0,7,0,0.0,0
378,9,train,Give me the war of Joaquín Blake and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?person ?war WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Joaquín_Blake> 
    <http://dbpedia.org/resource/Carl_Pontus_Gahn>
  }
  ?person <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?war)
}
```",2,2,3,1,2,3,3,71,2,21,0,0.08695652173913043,1.0,0.16
391,13,train,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v1 . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/""claim to fame""> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?work <http://dbpedia.org/property/starring> ?actor .
}
```",2,3,3,2,1,3,3,71,0,0,20,0,0.0,0
534,9,train,"Who is the child, that is a politician and an office holder, of the native, that is a politician, of Essex?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Essex> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?child <http://dbpedia.org/ontology/officeHolder> ?office .
}
```",2,5,3,2,1,3,2,20,0,0,7,0,0.0,0
392,8,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/usedByCountry> ?region .
  ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  BIND(?region AS ?country)
}
```",2,3,3,2,1,2,3,28,0,0,173261,0,0.0,0
378,16,train,"Who is the commander in the reference, that is a military conflict, to Peninsular War?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?commander WHERE {
  ?conflict <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Peninsular_War> .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?conflict <http://dbpedia.org/ontology/commander> ?commander .
}
```",2,3,3,2,1,3,3,71,0,0,37,0,0.0,0
435,0,train,Give me the territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
SELECT ?territory WHERE {
  <http://dbpedia.org/resource/Reykjavík> <http://dbpedia.org/ontology/administrativeCapital> ?territory .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
251,10,train,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
SELECT ?party ?administration WHERE {
  ?party <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Sicily> .
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/POLITICAL_PARTY> .
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?party <http://dbpedia.org/property/rulingParty> ?administration .
}
```",2,4,3,2,1,2,3,28,0,0,5,0,0.0,0
294,1,train,Give me the resting place of Edwin A. Keeble.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/burialPlace> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
392,2,train,Give me the province of Schio.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
994,10,train,Give me the band member of Don Dokken and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT ?member WHERE {
  ?member <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Don_Dokken> .
  ?member <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/S.A._Slayer> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
528,9,train,Give me the war of Orozimbo Barbosa and war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?war WHERE {
  { 
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
  UNION
  {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
}
```",2,2,3,1,2,3,3,71,2,11,0,0.15384615384615385,1.0,0.2666666666666667
994,17,train,"Who is the person born, that is a musical artist, as the persona of Don Dokken?",SELECT ?result WHERE { <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Don_Dokken> <http://www.w3.org/2004/02/skos/core#altLabel> ?alias .
  ?alias <http://dbpedia.org/ontology/birthName> ?person .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
488,0,train,Give me the birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
391,8,train,"Give me the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?result WHERE {
  ?entity <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
294,11,train,"Give me the entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?birthPlace ?property ?result .
}
```",2,3,3,2,1,2,3,28,32,959,308,0.03229061553985873,0.09411764705882353,0.04808414725770098
92,1,train,Give me the associated musical artist of Jim Sheppard.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/musicalArtist> ?artist .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
92,10,train,Give me the band of Joseph Michael and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Joseph_Michael_(musician)> <http://dbpedia.org/ontology/member> ?band .
  ?band <http://dbpedia.org/property/bandMember> <http://dbpedia.org/resource/Nevermore> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
392,1,train,Give me the region of Central European Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?region WHERE {
  <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/timeZone> ?region .
}
```",1,1,2,1,1,2,3,28,0,0,49990,0,0.0,0
281,11,train,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?war WHERE {
  ?person <http://dbpedia.org/ontology/honour> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
  ?person <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",2,2,3,2,1,3,3,71,0,0,450,0,0.0,0
427,16,train,Who is the father of the alumnus of Massachusetts Institute of Technology?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
SELECT ?person ?father WHERE {
  ?person <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?person <http://dbpedia.org/ontology/father> ?father .
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
617,0,train,Give me the child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,4,2,1,0.6666666666666666,0.8,0.7272727272727272
161,8,train,"Give me the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Emilio_Mola> <http://dbpedia.org/ontology/event> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
838,4,train,"Give me the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/YU_Grupa> <http://www.w3.org/2002/07/owl#sameAs> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
617,3,train,"Who is the successor, that is a royalty, of Antiochus II Theos?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
356,4,train,"Give me the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?result <http://dbpedia.org/property/country> <http://dbpedia.org/resource/England> .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
55,5,train,"Give me the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Newsted> <http://www.w3.org/2002/07/owl#sameAs> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
915,2,train,Give me the director of Pipe Dreams (1976 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
488,3,train,"Give me the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
}
```",1,4,2,1,1,3,3,71,4,0,0,1.0,1.0,1.0
9,0,train,"Give me the alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
435,11,train,Give me the work of the author of Iceland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Iceland_(book)> <http://purl.org/dc/terms/creator> ?author .
  ?author <http://dbpedia.org/ontology/work> ?work .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
294,8,train,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace WHERE {
  ?award <http://dbpedia.org/ontology/awardee> ?person .
  ?award <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  OPTIONAL { ?person <http://dbpedia.org/property/restingPlace> ?restingPlace . }
}
```",2,3,3,2,1,2,3,28,0,0,10,0,0.0,0
528,15,train,"Give me the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?event ?militaryForce WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Chile> .
  OPTIONAL { ?event <http://dbpedia.org/property/militaryForce> ?militaryForce . }
}
```",2,3,3,2,1,3,3,71,0,53,91,0.0,0.0,0
696,0,train,Give me the birth place of Tim Brennan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Tim_Brennan_(footballer)> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
996,1,train,Give me the entity in France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/France> .
}
```",1,1,2,1,1,3,2,20,0,2295,292,0.0,0.0,0
115,5,train,Give me the alma mater of the alumnus of National University of San Marcos.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  ?person <http://dbpedia.org/ontology/alumnusOf> <http://dbpedia.org/resource/National_University_of_San_Marcos> .
  ?person <http://dbpedia.org/ontology/alumni> ?almaMater .
}
```",2,2,3,2,1,2,2,9,0,0,49,0,0.0,0
487,8,train,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . }","```sparql
SELECT ?administration WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Philip Brian Scott"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://dbpedia.org/property/administration> ?administration .
}
```",2,3,3,2,1,3,2,20,0,0,14,0,0.0,0
179,9,train,"Give me the birth name of the child, that is a royalty, of Nakkhatra Mangala.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . ?v0 <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Nakkhatra_Mangala> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?child <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
767,3,train,Give me the writer of Where It's At (Dustin Lynch album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://dbpedia.org/ontology/writer> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,35,0,0.0,0
427,12,train,Give me the party of Giulio Andreotti and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?person ?party WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Giulio_Andreotti> 
    <http://dbpedia.org/resource/Romano_Prodi>
  }
  ?person <http://dbpedia.org/ontology/politicalParty> ?party .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
617,2,train,Give me the parent of Mlada (abbess).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Mlada_(abbess)> <http://dbpedia.org/ontology/parent> ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
360,5,train,Give me the author of Blinded by the Light.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Blinded_by_the_Light_(song)> <http://dbpedia.org/ontology/author> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
161,9,train,Give me the military force of Rif War and military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?war ?militaryForce WHERE {
  VALUES ?war { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/resource/Spanish_Civil_War> }
  ?war <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",2,2,3,1,2,3,3,71,0,0,34,0,0.0,0
767,2,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
# The query is incomplete due to lack of specified subject.
SELECT ?reference WHERE {
  # Placeholder for entity or subject
  ?subject <http://dbpedia.org/ontology/reference> ?reference .
}
```",1,1,2,1,1,3,3,71,0,132,98447,0.0,0.0,0
421,9,train,Give me the person born as Edin Dervišhalidović and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://xmlns.com/foaf/0.1/givenName> ""Edin"" .
  ?person <http://xmlns.com/foaf/0.1/surname> ""Dervišhalidović"" .
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
142,4,train,Give me the birthplace of George Tokoro and entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location> .
  ?result <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
617,1,train,Give me the spouse of Laodice IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
281,8,train,"Give me the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
360,7,train,Give me the reference to Manfred Mann and writer of The Roaring Silence.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/The_Roaring_Silence> <http://purl.org/dc/terms/creator> ?writer .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
487,1,train,Give me the administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/ontology/administration> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
184,10,train,Give me the parent of Géza von Habsburg and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
SELECT ?individual ?parent WHERE {
  VALUES ?individual { 
    <http://dbpedia.org/resource/Géza_von_Habsburg> 
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria>
  }
  ?individual <http://dbpedia.org/ontology/parent> ?parent .
}
```",2,2,3,1,2,3,3,71,2,2,0,0.5,1.0,0.6666666666666666
294,0,train,"Give me the resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/burialPlace> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
994,11,train,Give me the associated musical artist of the associated musical artist of Watchtower (band).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?secondLevelArtist WHERE {
  ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Watchtower_(band)> .
  ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?intermediateArtist .
  ?intermediateArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?secondLevelArtist .
}
```",2,2,3,2,1,3,3,71,13,19,3,0.40625,0.8125,0.5416666666666666
232,15,train,Give me the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Jon Pertwee"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
314,6,train,Give me the person deceased at Madrid and awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> .
  ?person <http://dbpedia.org/property/awardNumber> ""30""^^xsd:string .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
365,1,train,Give me the reference to The Blasters.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . }","```sparql
SELECT ?reference WHERE {
  ?entity <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/The_Blasters> .
  ?entity ?p ?reference .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
617,4,train,"Give me the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Richeza_of_Poland> ?property ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
10,4,train,"Give me the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Luke Francis Vibert"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
767,11,train,"Give me the entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ""Green""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Green> <http://dbpedia.org/ontology/administrativeUnit> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}
```",2,3,3,2,1,3,3,71,0,0,60,0,0.0,0
378,4,train,Who is the person born as Carl Pontus Gahn?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
996,7,train,Give me the force of the awardee of 1778.0.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
SELECT ?force WHERE {
  ?entity <http://dbpedia.org/property/year> ""1778"" .
  ?entity <http://dbpedia.org/ontology/awardee> ?awardee .
  ?awardee <http://dbpedia.org/ontology/militaryForce> ?force .
}
```",2,2,3,2,1,3,2,20,0,0,11,0,0.0,0
360,1,train,Give me the native of Johannesburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> .
}
```",1,1,2,1,1,2,3,28,1000,0,0,1.0,1.0,1.0
617,9,train,"Give me the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mlada_(abbess)> .
  ?parent <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
92,14,train,Give me the band of the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael Furney"" .
  ?person <http://dbpedia.org/property/memberOfBand> ?band .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,17,train,"Give me the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/ontology/reference> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (
    (?type = <http://dbpedia.org/ontology/SocietalEvent>) &&
    (?type = <http://dbpedia.org/ontology/Event>) &&
    (?type = <http://dbpedia.org/ontology/MilitaryConflict>)
  )
}
```",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
184,6,train,Give me the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
345,0,train,Give me the figure known as Stolz von Liechtenstein.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . }","```sparql
SELECT ?result WHERE {
  ?entity <http://dbpedia.org/ontology/alsoKnownAs> ""Stolz von Liechtenstein"" .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
55,11,train,"Give me the band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/reference> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
}
```",2,3,3,2,1,2,3,28,0,0,9,0,0.0,0
701,10,train,Give me the spouse of Ramesses II and parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Meritamen> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
767,10,train,Give me the entity in Baden-Württemberg and reference to .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?entity ?reference WHERE {
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference .
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place> .
}
```",2,2,3,1,2,3,3,71,0,0,7,0,0.0,0
44,0,train,Give me the band member of Undertow (band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Undertow_(band)> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
915,8,train,"Give me the father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . },"```sparql
SELECT ?father WHERE {
  ?child <http://dbpedia.org/ontology/father> ?father .
  <http://dbpedia.org/resource/Phillip_Spaulding> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?child <http://dbpedia.org/ontology/soapCharacter> [] .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
783,10,train,"Give me the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?ebonyReigns <http://dbpedia.org/property/persona> ?person .
  FILTER(?ebonyReigns = <http://dbpedia.org/resource/Ebony_Reigns>)
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
77,1,train,Give me the force of Alexander I of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/militaryUnit> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,25,0,0.0,0
115,1,train,Give me the alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
429,3,train,"Give me the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Camden_Expedition> <http://dbpedia.org/ontology/militaryForce> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}
```",1,2,2,1,1,2,2,9,0,0,22,0,0.0,0
285,6,train,Give me the parent of Alexander Onassis and spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> .
  ?person <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Alexander_Onassis> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
645,8,train,Give me the alma mater of the child of Richard Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?child ?almaMater WHERE {
  <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",2,2,3,2,1,3,2,20,2,1,0,0.6666666666666666,1.0,0.8
328,4,train,"Give me the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/award> ?result .
}
```",1,1,2,1,1,3,3,71,9,0,0,1.0,1.0,1.0
617,15,train,"Who is the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_II_Theos> .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?successor <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,4,3,2,1,3,3,71,0,2,2,0.0,0.0,0
754,10,train,Give me the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
356,3,train,Give me the successor of 2014 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?successor .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
996,8,train,Give me the entity in the award of Ekrem Akurgal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/ontology/award> ?result .
}
```",2,2,3,2,1,3,2,20,0,4,292,0.0,0.0,0
778,2,train,"Give me the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. },"```sparql
SELECT ?awardee WHERE {
  ?prize <http://dbpedia.org/ontology/recipient> ?awardee .
  ?prize <http://www.w3.org/2000/01/rdf-schema#label> ""Wolf Prize in Medicine""@en .
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?awardee <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
801,6,train,"Give me the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/50_Cent> <http://dbpedia.org/ontology/work> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
}
```",1,4,2,1,1,3,3,71,0,0,58,0,0.0,0
488,15,train,"Who is the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Sait%C5%8D_Hajime> <http://dbpedia.org/ontology/commander> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
}
```",2,5,3,2,1,3,3,71,0,0,29,0,0.0,0
981,8,train,"Give me the birth place of the person born, that is a beauty queen, as .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> """"@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
SELECT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen> .
}
```",2,3,3,2,1,3,2,20,170,1833,0,0.08487269096355467,1.0,0.15646571560055222
547,14,train,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace WHERE {
  ?person <http://dbpedia.org/ontology/honour> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
  ?person <http://dbpedia.org/property/restingPlace> ?restingPlace .
}
```",2,2,3,2,1,3,3,71,0,0,28,0,0.0,0
64,6,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/usedByCountry> ?region .
  ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  BIND(?region AS ?country)
}
```",2,3,3,2,1,2,2,9,0,0,173261,0,0.0,0
666,6,train,Give me the figure known as The Three Lions and player in Steve Bruce.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . }","```sparql
SELECT ?player WHERE {
  <http://dbpedia.org/resource/The_Three_Lions> <http://dbpedia.org/ontology/player> ?player .
  ?player <http://dbpedia.org/property/coachedBy> <http://dbpedia.org/resource/Steve_Bruce> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
55,7,train,Give me the band member of Guns N' Roses and band of Newsted.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?member WHERE {
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Guns_N%27_Roses> .
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Newsted> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
488,4,train,Who is the commander in Boshin War?,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,26,0,0,1.0,1.0,1.0
142,1,train,Give me the birthplace of George Tokoro.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
339,10,train,Who is the child of the parent of Princess Olga of Greece and Denmark?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
SELECT ?grandchild WHERE {
  <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> <http://dbpedia.org/ontology/parent> ?parent .
  ?parent <http://dbpedia.org/ontology/child> ?grandchild .
}
```",2,2,3,2,1,3,2,20,3,0,0,1.0,1.0,1.0
659,3,train,"Give me the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
}
```",1,2,2,1,1,3,3,71,23,0,0,1.0,1.0,1.0
161,2,train,Give me the commander in Biscay Campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
435,8,train,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""Land of fire and ice""@is .
  ?figure <http://dbpedia.org/ontology/settlement> ?settlement .
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/class/yago/Settlement108069068>, <http://dbpedia.org/class/yago/Town108069068>) && lang(?figure) = ""is"")
  ?figure <http://dbpedia.org/ontology/administers> ?result .
}
```",2,5,3,2,1,2,3,28,0,0,2,0,0.0,0
54,6,train,Give me the child of Narapati I of Ava.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
345,2,train,"Give me the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/player> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (
    (?type = <http://dbpedia.org/ontology/SportsClub> ||
     ?type = <http://dbpedia.org/ontology/Organisation> ||
     ?type = <http://dbpedia.org/ontology/SoccerClub>)
  )
}
```",1,4,2,1,1,3,2,20,0,0,8,0,0.0,0
314,5,train,"Give me the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/ontology/profession> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
}
```",1,3,2,1,1,2,3,28,0,0,2,0,0.0,0
801,2,train,Give me the associated musical artist of Chris Taylor (music producer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}
```",1,1,2,1,1,3,3,71,7,0,0,1.0,1.0,1.0
64,0,train,Give me the alma mater of Jovan Hristić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
339,0,train,Give me the child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,2,20,7,0,0,1.0,1.0,1.0
48,5,train,"Give me the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",1,2,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
54,8,train,"Give me the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,3,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
184,8,train,Give me the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
294,4,train,Who is the architect of P. D. Houston Jr. House?,SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?result . },"```sparql
SELECT ?architect WHERE {
  <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?architect .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
161,15,train,"Give me the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Francoist_Spain> <http://dbpedia.org/ontology/decedent> ?person .
  ?person <http://dbpedia.org/ontology/event> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1, ?type2, ?type3 .
  FILTER (?type1 = <http://dbpedia.org/ontology/SocietalEvent> && 
          ?type2 = <http://dbpedia.org/ontology/Event> &&
          ?type3 = <http://dbpedia.org/ontology/MilitaryConflict>)
}
```",2,5,3,2,1,3,3,71,0,0,29,0,0.0,0
356,1,train,Give me the team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . },"```sparql
SELECT ?team WHERE {
  <http://dbpedia.org/resource/Mark_Briggs> <http://dbpedia.org/ontology/team> ?team .
}
```",1,1,2,1,1,3,2,20,1,14,4,0.06666666666666667,0.2,0.1
378,15,train,Who is the person born as the birth name of Carl Pontus Gahn?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
963,4,train,Give me the location for 21205.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
SELECT ?result WHERE {
  ?entity <http://dbpedia.org/ontology/postalCode> ""21205"" .
  ?entity <http://dbpedia.org/ontology/location> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
666,0,train,Give me the player in Steve Bruce.,SELECT ?result WHERE { <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/coachedTeam> ?team .
  ?team <http://dbpedia.org/ontology/player> ?player .
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
30,3,train,Give me the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/%C3%89douard_Alphonse_James_de_Rothschild> <http://dbpedia.org/ontology/profession> ?profession .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
767,5,train,Give me the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/reference> ?reference .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
232,3,train,Give me the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
55,10,train,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?bandMember WHERE {
  ?entity <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/San_Francisco_Symphony> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
  ?entity <http://dbpedia.org/ontology/member> ?bandMember .
}
```",2,4,3,2,1,2,3,28,0,0,15,0,0.0,0
696,5,train,Give me the award of Nie Rongzhen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/ontology/recipient> ?award .
  ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award> .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
701,7,train,"Give me the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
314,11,train,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/ontology/profession> ?profession .
  ?event <http://dbpedia.org/ontology/relatedThroughProfession> ?profession .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://dbpedia.org/ontology/commander> ?commander .
}
```",2,4,3,2,1,2,3,28,0,0,28,0,0.0,0
281,17,train,"Give me the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?profession WHERE {
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?person <http://dbpedia.org/ontology/officeHolder> ?office .
  ?person <http://dbpedia.org/ontology/politician> ?politician .
  ?profession <http://dbpedia.org/property/army> <http://dbpedia.org/resource/New_Zealand_Army> .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
10,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid query can be constructed due to the lack of specific context in the question.
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
645,7,train,"Give me the entity in the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?residence ?p ?result .
}
```",2,3,3,2,1,3,2,20,0,0,42999,0,0.0,0
421,4,train,Give me the birthplace of Samir Bekrić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
421,8,train,Give me the band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
# Placeholder query due to lack of specific information.
SELECT ?bandMember WHERE {
  # Assuming <http://dbpedia.org/resource/AwardedEntity> is the awardee and <http://dbpedia.org/ontology/bandMember> is the property linking band members.
  <http://dbpedia.org/resource/AwardedEntity> <http://dbpedia.org/property/award> ?award .
  ?bandMember <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/AwardedEntity> .
}
```",2,2,3,2,1,2,3,28,0,0,582,0,0.0,0
232,2,train,Give me the native of London.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> .
}
```",1,1,2,1,1,3,3,71,8939,0,0,1.0,1.0,1.0
92,3,train,Give me the name of Nevermore (2006 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?name WHERE {
  <http://dbpedia.org/resource/Nevermore_(2006_film)> rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
528,5,train,Give me the work of --01-09.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
# Unable to generate a meaningful query due to lack of information about the identifier ""--01-09"".
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,16,train,"Give me the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?result WHERE {
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?unitType .
  FILTER (?unitType IN (<http://dbpedia.org/ontology/MilitaryUnit>, <http://dbpedia.org/ontology/Organisation>)).
  ?polishHorse rdfs:label ""Polish Horse""@en.
  
  ?polishHorse <http://dbpedia.org/property/participatedIn> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?eventType .
  FILTER (?eventType IN (<http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/MilitaryConflict>)).
}
```",2,6,3,2,1,3,3,71,0,0,19,0,0.0,0
328,8,train,"Give me the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/ontology/officeHeld> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
427,10,train,Give me the reference to Partito Popolare Italiano and party of Romano Prodi.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?party .
  FILTER(?party = <http://dbpedia.org/resource/Partito_Popolare_Italiano>)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
981,10,train,"Who is the person born, that is a beauty queen, as the author of Kamikaze Girls?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Kamikaze_Girls> <http://purl.org/dc/terms/creator> ?person .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen> .
}
```",2,3,3,2,1,3,2,20,0,0,120,0,0.0,0
328,1,train,Give me the commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,63,0,0,1.0,1.0,1.0
318,0,train,Give me the person born in 1970.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  FILTER (YEAR(?birthDate) = 1970)
}
```",1,1,2,1,1,2,2,9,2287,8277,523,0.21648996592199923,0.8138790035587189,0.34200687901899207
404,6,train,"Who is the child, that is a royalty, of Ernest Augustus, Duke of Brunswick?","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
339,7,train,Give me the child of the child of Christian IX of Denmark.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
SELECT DISTINCT ?grandchild WHERE {
  <http://dbpedia.org/resource/Christian_IX_of_Denmark> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
}
```",2,2,3,2,1,3,2,20,14,0,18,1.0,0.4375,0.6086956521739131
492,2,train,Give me the person decedent at Algiers.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
}
```",1,1,2,1,1,3,3,71,122,0,0,1.0,1.0,1.0
959,9,train,Give me the native of Japan and member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> ?place .
  ?place <http://www.w3.org/2000/01/rdf-schema#label> ""Japan""@en .
  FILTER(LANG(?place) = 'en') .

  ?person <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Tsukuba> .
}
```",2,2,3,1,2,3,3,71,0,0,84,0,0.0,0
48,1,train,Give me the band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/memberOf> ?band .
}
```",1,1,2,1,1,3,2,20,0,0,10,0,0.0,0
392,6,train,Give me the region of Central European Time and entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?region WHERE {
  <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?timeZone <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?region .
  ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
  ?region <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Italy> .
}
```",2,2,3,1,2,2,3,28,0,0,513,0,0.0,0
427,6,train,Who is the father of Lamberto Andreotti?,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
701,14,train,Give me the spouse of the father of Merneptah.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/property/spouse> ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
404,2,train,"Give me the child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
48,8,train,"Give me the band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
SELECT DISTINCT ?band WHERE {
  <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/ontology/musicalArtist> ?actor .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  OPTIONAL { ?actor <http://dbpedia.org/property/band> ?band . }
}
```",2,3,3,2,1,3,2,20,0,0,10,0,0.0,0
184,14,train,Give me the parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
SELECT DISTINCT ?parent WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/father> ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
318,6,train,Give me the professional in the profession of Robert Xavier Rodriguez.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://purl.org/dc/terms/profession> ?profession .
}

SELECT ?person WHERE {
  ?person <http://purl.org/dc/terms/profession> ?profession .
}
```",2,2,3,2,1,2,2,9,0,0,1942,0,0.0,0
996,5,train,Give me the award of Ekrem Akurgal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/ontology/receivesAward> ?award .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
617,10,train,"Give me the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Richeza_of_Poland> <http://www.w3.org/2002/07/owl#sameAs> ?reference .
  ?reference <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
281,9,train,"Give me the entity in Colony of New Zealand and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  OPTIONAL {
    ?war <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
339,5,train,Who is the child of Grand Duchess Elena Vladimirovna of Russia?,SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
801,3,train,Give me the true self of The Shadow.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
SELECT ?trueSelf WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alsoKnownAs> ?trueSelf .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
783,6,train,Give me the band member of Ebony Reigns and associated musical artist of Appietus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Ebony_Reigns> <http://dbpedia.org/ontology/member> ?member .
  ?member <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Appietus> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
696,1,train,Give me the landmark at elevation of 50.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?landmark WHERE {
  ?landmark <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#float> .
}
```

Note: The query assumes the elevation is specified in meters and uses a float data type. Adjustments may be needed if the unit or data type differs.",1,1,2,1,1,3,2,20,0,0,599,0,0.0,0
391,15,train,"Give me the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . }","```sparql
SELECT ?figure WHERE {
  ?figure <http://dbpedia.org/ontology/nickName> ""Jackson, Tennessee"" .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
184,9,train,Give me the child of Archduke Joseph August of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
44,6,train,"Give me the band member of the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?member WHERE {
  ?queensryche <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
  ?queensryche <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?queensryche <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Queensrÿche> .
  ?queensryche <http://dbpedia.org/ontology/member> ?member .
}
```",2,4,3,2,1,2,2,9,0,0,13,0,0.0,0
485,7,train,Give me the entity in United Kingdom and entity in Nottinghamshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_Kingdom> .
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nottinghamshire> .
}
```",2,2,3,1,2,2,3,28,0,4,357,0.0,0.0,0
747,14,train,Give me the band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
SELECT ?band WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Tracey Elizabeth McSween""@en .
  ?person <http://dbpedia.org/ontology/member> ?band .
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
314,8,train,Give me the person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/House_of_Sombrerete_headquarters> .
}
```",2,2,3,2,1,2,3,28,0,0,34,0,0.0,0
328,15,train,Give me the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?commander ?award WHERE {
  <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?commander .
  OPTIONAL { 
    ?commander <http://dbpedia.org/property/awards> ?award .
  }
}
```",2,2,3,2,1,3,3,71,30,20,0,0.6,1.0,0.7499999999999999
314,9,train,Give me the commander in Spanish Civil War and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?commander WHERE {
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> .
  ?commander <http://dbpedia.org/property/awardeeOf> <http://dbpedia.org/resource/Award_30> .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
328,6,train,Give me the force of Ferenc Szálasi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ferenc_Szálasi> <http://dbpedia.org/ontology/militaryForce> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
827,6,train,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result .
  ?result <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,0,train,Give me the entity in Baden-Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Baden-Württemberg> .
}
```",1,1,2,1,1,3,3,71,0,201,60,0.0,0.0,0
161,7,train,Who is the figure known as El Director?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nickName> ""El Director"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
10,3,train,"Give me the person born, that is an artist, as Matt Colton.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Matt Colton"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
345,10,train,"Who is the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
SELECT ?person WHERE {
  # Get the birth date of Eiður Guðjohnsen
  <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://www.w3.org/2002/07/owl#sameAs> ?eiður .
  ?eiður <http://dbpedia.org/ontology/birthDate> ?birthDate .

  # Find persons with the same birth date who are both soccer players and managers
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
184,1,train,Give me the child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
666,4,train,"Give me the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://xmlns.com/foaf/0.1/name> ""England""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/England> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub> .
}
```",1,4,2,1,1,3,2,20,0,0,4,0,0.0,0
712,6,train,Give me the resting place of Nina Onilova and capital of South Russia (1919–1920).,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace, ?capital WHERE {
  # Query for Nina Onilova's resting place
  <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .

  # Query for the capital of South Russia (1919–1920)
  <http://dbpedia.org/resource/South_Russia_(1919%E2%80%931920)> <http://dbpedia.org/ontology/administrativeCapital> ?capital .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
16,3,train,Give me the birth name of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
528,4,train,Give me the military force of Battle of Pisagua.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . },"```sparql
SELECT ?militaryForce WHERE {
  <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
838,9,train,"Give me the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . },"```sparql
SELECT DISTINCT ?bandMember WHERE {
  <http://dbpedia.org/resource/Žika_Jelić> <http://dbpedia.org/ontology/memberOf> ?band .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> ;
        <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://dbpedia.org/ontology/Group> .
  ?band <http://dbpedia.org/ontology/member> ?bandMember .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> ;
              <http://dbpedia.org/ontology/MusicalArtist> .
}
```",2,6,3,2,1,3,2,20,0,0,4,0,0.0,0
801,14,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?associatedArtist WHERE {
  <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://dbpedia.org/ontology/artist> ?artist .
  ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",2,4,3,2,1,3,3,71,0,0,50,0,0.0,0
232,1,train,Give me the actor of Dog Soldiers (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
92,15,train,"Give me the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Nevermore_(2006_film)> ?property ?reference .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  BIND(?reference AS ?artist)
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
312,5,train,"Give me the entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Democratic_Party_(Italy)> <http://dbpedia.org/ontology/administration> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (
    (?type = <http://dbpedia.org/ontology/Settlement> ||
     ?type = <http://dbpedia.org/ontology/Region> ||
     ?type = <http://dbpedia.org/ontology/State>)
  )
  OPTIONAL { ?result <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Italy> . }
}
```",2,6,3,2,1,2,2,9,0,0,587,0,0.0,0
177,2,train,Give me the residence of Alexander Gamelin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/ontology/residence> ?result .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
959,16,train,"Give me the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/ontology/leader> ?leader .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?leader <http://dbpedia.org/ontology/residence> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
182,3,train,Give me the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/ontology/author> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
10,7,train,Give me the professional in  and associated musical artist of Matt Colton.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?profession ?artist WHERE {
  <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/profession> ?profession .
  OPTIONAL { 
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
696,3,train,Who is the member of Dropkick Murphys?,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
285,3,train,Who is the child of Tina Onassis Niarchos?,SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
617,13,train,Give me the spouse of the child of Antiochus III the Great.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/property/spouse> ?spouse .
}
```",2,2,3,2,1,3,3,71,5,1,0,0.8333333333333334,1.0,0.9090909090909091
994,7,train,Give me the persona of Don Dokken.,SELECT ?result WHERE { <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/persona> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
754,0,train,Give me the parent of Loe Thai.,SELECT ?result WHERE { <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?parent .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
77,2,train,Give me the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/ontology/receivedAward> ?award .
  ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award> .
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
314,2,train,Give me the commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,2,3,28,0,0,28,0,0.0,0
959,1,train,Give me the native of Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> .
}
```",1,1,2,1,1,3,3,71,8419,0,0,1.0,1.0,1.0
534,3,train,"Who is the child, that is a politician and an office holder, of Desmond FitzGerald (politician)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
}
```",1,3,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
365,6,train,Give me the reference to the real name of The Blasters.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/The_Blasters> <http://dbpedia.org/ontology/realName> ?realName .
  ?realName <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
360,3,train,"Give me the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/property/author> ""Dave Flett""@en . }","```sparql
SELECT ?album WHERE {
  <http://dbpedia.org/resource/Dave_Flett> <http://dbpedia.org/ontology/work> ?album .
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalAlbum> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
54,7,train,Give me the reference to Thihapate of Mohnyin.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . }","```sparql
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/reference> ?reference .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
356,10,train,"Give me the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
SELECT ?native WHERE {
  # Step 1: Identify Gary Williams' birthplace
  <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Step 2: Ensure the birthplace is an English settlement
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> ;
              <http://dbpedia.org/property/country> <http://dbpedia.org/resource/England> .
  
  # Step 3: Find natives of that birthplace who are both soccer players and managers
  ?native <http://dbpedia.org/ontology/birthPlace> ?birthPlace ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?types .
  
  # Ensure the native is a soccer player and manager
  VALUES ?types { 
    (<http://dbpedia.org/ontology/SoccerPlayer> <http://dbpedia.org/ontology/SoccerManager>)
  }
}
```",2,6,3,2,1,3,2,20,0,0,17,0,0.0,0
429,1,train,Give me the country of 77th Ohio Infantry Regiment.,SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/nationality> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
48,2,train,"Give me the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Shellback_(record_producer)> <http://purl.org/dc/terms/creator> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
}
```",1,2,2,1,1,3,2,20,0,0,57,0,0.0,0
281,5,train,"Who is the leader, that is a politician, of 1962 New South Wales state election?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/ontology/leader> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
281,2,train,Give me the war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",1,1,2,1,1,3,3,71,12,0,2,1.0,0.8571428571428571,0.923076923076923
179,4,train,Who is the parent of Vajiralongkorn?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Vajiralongkorn> <http://dbpedia.org/ontology/parent> ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
328,16,train,Give me the force of the person decedent at Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?person ?force WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
  OPTIONAL { ?person <http://dbpedia.org/ontology/memberOf> ?force . }
}
```",2,2,3,2,1,3,3,71,0,1147,23,0.0,0.0,0
64,5,train,"Give me the alma mater of the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",2,3,3,2,1,2,2,9,1,0,0,1.0,1.0,1.0
767,15,train,"Give me the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://purl.org/dc/terms/creator> ?writer .
  ?writer <http://dbpedia.org/ontology/livingIn> ?settlement .
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?settlement <http://dbpedia.org/ontology/administrativeUnit> ?result .
}
```",2,3,3,2,1,3,3,71,0,0,31,0,0.0,0
251,5,train,Give me the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/ontology/author> ?result .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
314,1,train,Give me the awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?result WHERE {
  ?entity <http://dbpedia.org/property/awardee> ?result .
  FILTER (str(?entity) = ""http://dbpedia.org/resource/30"")
}
```",1,1,2,1,1,2,3,28,0,0,951,0,0.0,0
184,12,train,Give me the parent of Archduchess Ilona of Austria and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/birthParent> ?parent .
  ?parent <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
328,5,train,Who is the person decedent at Budapest?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
}
```",1,1,2,1,1,3,3,71,1147,0,0,1.0,1.0,1.0
184,11,train,Give me the parent of the native of Budapest.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?parent WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
  ?person <http://dbpedia.org/ontology/father> ?parent .
}
UNION
{
  ?person <http://dbpedia.org/ontology/mother> ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,19,0,0.0,0
617,8,train,Who is the child of Antiochus (son of Antiochus III the Great)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
492,11,train,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . }","```sparql
SELECT ?decedent WHERE {
  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/work> ?work .
  ?work <http://dbpedia.org/ontology/decedent> ?decedent .
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
645,2,train,Give me the commander in Battle of Diamond Rock.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
16,1,train,Give me the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actress> .
}
```",1,1,2,1,1,3,3,71,0,8,19241,0.0,0.0,0
498,1,train,Give me the band of Will Rahmer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/member> ?band .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
747,7,train,Give me the persona of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
SELECT ?persona WHERE {
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/persona> ?persona .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
915,6,train,"Give me the father of Lizzie Spaulding and resident of Springfield, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
161,0,train,Give me the military force of Rif War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,56,0,0.0,0
179,2,train,"Who is the child, that is a royalty, of Nakkhatra Mangala?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Nakkhatra_Mangala> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
356,0,train,Give me the player in 2015 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/player> ?player .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
54,3,train,Give me the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
9,4,train,"Who is the mayor, that is a politician, of Northern Ireland Forum?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?mayor WHERE {
  ?entity <http://dbpedia.org/ontology/mayor> ?mayor .
  ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?entity <http://dbpedia.org/property/forum> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
626,4,train,Who is the military force of Battle of Borodino?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . },"```sparql
SELECT ?militaryForce WHERE {
  <http://dbpedia.org/resource/Battle_of_Borodino> <http://dbpedia.org/ontology/foughtFor> ?militaryForce .
}
```",1,1,2,1,1,3,2,20,0,0,52,0,0.0,0
10,9,train,Give me the professional in  and band member of Luke Vibert.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . }","```sparql
SELECT ?profession, ?band WHERE {
  <http://dbpedia.org/resource/Luke_Vibert> <http://dbpedia.org/ontology/profession> ?profession .
  OPTIONAL { 
    <http://dbpedia.org/resource/Luke_Vibert> <http://dbpedia.org/property/memberOf> ?band .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
485,4,train,"Who is the awardee, that is a writer and a poet, of Eric Gregory Award?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
SELECT ?awardee WHERE {
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  FILTER(STRSTARTS(LCASE(?award), ""eric gregory award""))
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet> .
}
```",1,3,2,1,1,2,3,28,0,0,7,0,0.0,0
783,2,train,Give me the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Samuel Ofori Amponsah"" .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
182,11,train,Give me the entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?nationality .
  ?nationality <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?entity .
}
```",2,2,3,2,1,2,3,28,0,10,62,0.0,0.0,0
488,17,train,"Who is the father of the spouse, that is a royalty, of Tokugawa Masako?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?spouse <http://dbpedia.org/ontology/father> ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
827,0,train,"Give me the child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
92,0,train,Give me the band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Nevermore_(band)> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
115,6,train,Give me the alma mater of the awardee of National Order of Scientific Merit.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
SELECT DISTINCT ?almaMater WHERE {
  ?person <http://dbpedia.org/ontology/nationality> ?nationality .
  ?person <http://dbpedia.org/property/awards> ?award .
  FILTER(CONTAINS(LCASE(STR(?award)), ""national order of scientific merit""))
  
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",2,2,3,2,1,2,2,9,0,2,5,0.0,0.0,0
701,2,train,Give me the spouse of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,3,71,0,1,5,0.0,0.0,0
465,6,train,"Give me the administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/ontology/leader> ?leader .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type = <http://dbpedia.org/ontology/PoliticalParty> || ?type = <http://dbpedia.org/ontology/Organization>) .
  ?leader <http://dbpedia.org/property/administration> ?administration .
}
```",2,4,3,2,1,2,2,9,0,0,50,0,0.0,0
285,8,train,Give me the spouse of the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Professional_Name> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```
(Note: Replace `Professional_Name` with the actual DBpedia resource identifier of the professional in question.)",2,2,3,2,1,3,2,20,0,0,4149,0,0.0,0
820,8,train,Give me the child of the parent of Jason Schwartzman.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Jason_Schwartzman> .
  ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
778,0,train,Give me the entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> .
}
```",1,1,2,1,1,3,2,20,13008,0,0,1.0,1.0,1.0
161,3,train,Who is the person decedent at Francoist Spain?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
SELECT ?decedent WHERE {
  <http://dbpedia.org/resource/Francoist_Spain> <http://dbpedia.org/ontology/decedent> ?decedent .
}
```",1,1,2,1,1,3,3,71,0,0,125,0,0.0,0
303,6,train,Give me the entity in Panama and party of Guillermo Endara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/memberOf> ?party .
  ?party <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Panama> .
  ?party <http://dbpedia.org/ontology/member> ?entity .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
547,17,train,Give me the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/ontology/award> ?award .
}
```",2,2,3,2,1,3,3,71,0,5,2075,0.0,0.0,0
959,13,train,"Give me the native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?native WHERE {
  <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?residence <http://dbpedia.org/property/nativeOf> ?native .
}
```",2,3,3,2,1,3,3,71,0,0,8419,0,0.0,0
251,3,train,"Give me the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?result)
}
```",1,2,2,1,1,2,3,28,16,0,0,1.0,1.0,1.0
182,10,train,Give me the war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
SELECT ?work ?war WHERE {
  <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://dbpedia.org/ontology/work> ?work .
  ?work <http://dbpedia.org/property/relatedTo> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",2,2,3,2,1,2,3,28,0,0,5,0,0.0,0
55,3,train,"Give me the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
981,5,train,"Who is the person born, that is a beauty queen, as ?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/property/birthName> """"@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen> .
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
}
```",1,2,2,1,1,3,2,20,110,2027,10,0.05147402901263454,0.9166666666666666,0.09747452370403191
485,9,train,Give me the entity in Nottinghamshire and birth place of Thomas Warner (poet).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place> .
  ?result <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Nottinghamshire> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
783,7,train,Give me the associated musical artist of the band member of Ofori Amponsah.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
SELECT ?artist WHERE {
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Ofori_Amponsah> .
  ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}
```",2,2,3,2,1,3,2,20,0,0,35,0,0.0,0
251,8,train,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/place> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?location WHERE {
  <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://dbpedia.org/property/location> ?location .
}
```",2,3,3,2,1,2,3,28,0,0,25,0,0.0,0
345,3,train,Give me the nickname of FC Vaduz.,SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?result . },"```sparql
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/Football_Club_Vaduz> <http://dbpedia.org/ontology/nickName> ?nickname .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
92,9,train,Give me the band member of Nevermore and associated musical artist of Jim Sheppard.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
SELECT ?member WHERE {
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Nevermore_(band)> .
  ?association <http://dbpedia.org/property/musicalArtist> <http://dbpedia.org/resource/Jim_Sheppard> .
  ?association <http://dbpedia.org/property/associatedBandMember> ?member .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
820,10,train,Who is the parent of the professional in Actor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?parent WHERE {
  ?actor <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
  ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace . # Ensures we are dealing with a person, not the concept of an actor
  ?actor <http://dbpedia.org/ontology/father> ?parent .
}
```",2,2,3,2,1,3,2,20,0,0,921,0,0.0,0
626,1,train,Give me the awardee of Order of St. Andrew.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . },"```sparql
SELECT ?awardee WHERE {
  ?awardee <http://dbpedia.org/ontology/awardedBy> <http://dbpedia.org/resource/Order_of_St._Andrew> .
}
```",1,1,2,1,1,3,2,20,0,0,33,0,0.0,0
161,11,train,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . },"```sparql
SELECT ?militaryForce WHERE {
  ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Franco> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://dbpedia.org/property/militaryForce> ?militaryForce .
}
```",2,5,3,2,1,3,3,71,0,0,545,0,0.0,0
666,3,train,"Give me the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/2016%E2%80%9317_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
232,5,train,"Give me the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Narrator> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Producer> .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
179,0,train,Give me the person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Mom Rajawongse Sirikit Kitiyakara"" .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
318,1,train,Give me the professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . },"```sparql
SELECT ?professional WHERE {
  ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Category:Composers> .
}
```",1,1,2,1,1,2,2,9,0,0,1916,0,0.0,0
838,10,train,"Give me the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?band WHERE {
  ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/YU_Grupa> .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
  ?reference <http://dbpedia.org/ontology/member> ?band .
}
```",2,5,3,2,1,3,2,20,0,0,8,0,0.0,0
9,12,train,Give me the figure known as QUB and alma mater of Allen Hill (scientist).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater rdfs:label ""Queen's University Belfast""@en .
  BIND(?almaMater AS ?result)
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
9,16,train,"Who is the awardee of the reference, that is an award, to Royal Medals?","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . }","```sparql
SELECT ?awardee WHERE {
  <http://dbpedia.org/resource/Royal_Medals> <http://purl.org/dc/terms/references> ?reference .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award> .
  ?reference <http://dbpedia.org/property/awardee> ?awardee .
}
```",2,3,3,2,1,3,3,71,0,0,45,0,0.0,0
328,11,train,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
SELECT ?award ?awardee WHERE {
  <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/receivedAward> ?award .
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  FILTER(?awardee != <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape>)
}
```",2,2,3,2,1,3,3,71,0,0,1484,0,0.0,0
915,3,train,"Give me the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Stephen_Veronica> <http://dbpedia.org/ontology/birthPlace> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PopulatedPlace> .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
55,4,train,"Give me the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/San_Francisco_Symphony> <http://dbpedia.org/ontology/member> ?member .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
}
```",1,3,2,1,1,2,3,28,0,0,3,0,0.0,0
345,1,train,Give me the team of Alessandro Mangiarratti.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . },"```sparql
SELECT ?team WHERE {
  <http://dbpedia.org/resource/Alessandro_Mangiarratti> <http://dbpedia.org/ontology/team> ?team .
}
```",1,1,2,1,1,3,2,20,1,7,1,0.125,0.5,0.2
55,6,train,Give me the band member of Metallica and band member of Guns N' Roses.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Metallica> .
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Guns_N%27_Roses> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
827,2,train,"Who is the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . }","```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/parent> ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
547,12,train,Give me the resting place of Simon Cadell and resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  { 
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Simon_Cadell> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Alan_Cunningham_(general)> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Alan_Cunningham_(general)> AS ?person)
  }
}
```",2,2,3,1,2,3,3,71,2,1,0,0.6666666666666666,1.0,0.8
92,4,train,"Give me the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Nevermore_(band)> ?property ?artist .
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
378,12,train,"Give me the war of Joaquín Blake and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
# Query for wars associated with Joaquín Blake
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Query for claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?fame WHERE {
  <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mah%C3%B3n> <http://dbpedia.org/ontology/notableFor> ?fame .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
645,1,train,Give me the alma mater of Sylvia Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
427,3,train,Give me the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/politicalParty> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
498,6,train,"Give me the band of the member, that is an artist, of Mortician (band).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/member> ?member .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?member <http://dbpedia.org/ontology/band> ?band .
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
44,1,train,Give me the band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Sledgeback> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
281,15,train,Who is the awardee of the award of Jonathon Band?,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?award ?awardee WHERE {
  <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/ontology/awards> ?award .
  ?award <http://dbpedia.org/property/recipient> ?awardee .
}
```",2,2,3,2,1,3,3,71,0,0,558,0,0.0,0
435,3,train,"Give me the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/alias> ""Land of fire and ice""@en .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town> .
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland> .
}
```",1,4,2,1,1,2,3,28,0,0,1,0,0.0,0
421,10,train,Give me the native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?native WHERE {
  <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place> .
  ?native <http://dbpedia.org/ontology/nativeOf> ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,0,5492,0,0.0,0
659,12,train,Give me the military force of Napoleonic Wars and commander in Battle of Leipzig.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryForce WHERE {
  <http://dbpedia.org/resource/Napoleonic_Wars> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Battle_of_Leipzig> .
  ?militaryForce <http://dbpedia.org/property/commander> ?commander .
}
```",2,2,3,1,2,3,3,71,0,0,5,0,0.0,0
712,1,train,Give me the resting place of Nina Onilova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/burialPlace> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
959,6,train,"Give me the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
712,2,train,"Give me the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Vyoshenskaya_Uprising> <http://dbpedia.org/ontology/militaryForce> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
783,3,train,Give me the band member of Ofori Amponsah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
SELECT ?bandMember WHERE {
  <http://dbpedia.org/resource/Ofori_Amponsah> <http://dbpedia.org/ontology/member> ?bandMember .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
232,17,train,"Give me the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
SELECT ?residence WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/France> .
  ?person <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> .
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
179,10,train,Who is the child of the parent of Vajiralongkorn?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/name> ""Srirat"" ; # Assuming Srirat is Vajiralongkorn's mother, replace with actual name if different.
  <http://dbpedia.org/ontology/child> ?vajiralongkorn .
  ?vajiralongkorn <http://www.w3.org/2000/01/rdf-schema#label> ""Vajiralongkorn"" .
  
  ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
10,10,train,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?bandMember WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Luke Francis Vibert"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?bandMember .
}
```",2,3,3,2,1,2,3,28,0,0,3,0,0.0,0
783,1,train,Give me the band member of Ebony Reigns.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Ebony_Reigns> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
232,0,train,Give me the child of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
182,4,train,Give me the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://dbpedia.org/ontology/author> ?work .
} UNION {
  <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://dbpedia.org/property/creator> ?work .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
391,1,train,Give me the actor of The Departed.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,3,3,71,9,0,0,1.0,1.0,1.0
547,2,train,Give me the resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alan_Cunningham_(British_Army_officer)> <http://dbpedia.org/ontology/burialPlace> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
142,5,train,Give me the entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Japan_Standard_Time> <http://www.w3.org/2004/02/skos/core#hasTopConcept> ?region .
  ?region <http://dbpedia.org/ontology/entity> ?entity .
}
```",2,2,3,2,1,2,2,9,0,0,8922,0,0.0,0
981,7,train,Give me the entity in the region of Time in Indonesia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Time_in_Indonesia> <http://dbpedia.org/ontology/wikiPageWikiLink> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
}
```",2,2,3,2,1,3,2,20,2,2,2947,0.5,0.0006781959986436081,0.0013545546901456147
659,9,train,Give me the commander in German campaign of 1813 and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?commander .
  <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?commander .
}
```",2,2,3,1,2,3,3,71,16,0,0,1.0,1.0,1.0
465,5,train,Give me the death place of the native of Prague.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
SELECT ?deathPlace WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> .
  ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",2,2,3,2,1,2,2,9,254,0,0,1.0,1.0,1.0
963,9,train,"Give me the region, that is a country, of the time zone of Herzegovina-Neretva Canton.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?timeZone <http://dbpedia.org/ontology/region> ?region .
  ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  BIND(?region AS ?result)
}
```",2,3,3,2,1,3,2,20,0,0,56,0,0.0,0
801,1,train,Give me the producer of Westside Story (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
617,16,train,"Who is the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?successor <http://dbpedia.org/ontology/child> ?child .
}
```",2,3,3,2,1,3,3,71,0,0,6,0,0.0,0
820,7,train,Give me the professional in the award of Scott McCloud.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?professional WHERE {
  <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/ontology/award> ?award .
  ?award <http://dbpedia.org/property/recipient> ?professional .
}
```",2,2,3,2,1,3,2,20,0,0,39650,0,0.0,0
617,6,train,Give me the parent of Mieszko II Lambert and child of Doubravka of Bohemia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . },"```sparql
SELECT ?individual WHERE {
  # Mieszko II Lambert's parent
  <http://dbpedia.org/resource/Mieszko_II_Lambert> <http://dbpedia.org/ontology/father> ?individual .
  
  # Doubravka of Bohemia's child
  ?individual <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Doubravka_of_Bohemia> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
801,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# This query cannot be constructed due to the lack of specific context in the question.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
328,13,train,Give me the commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?force <http://dbpedia.org/ontology/commander> ?commander .
  ?force <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Ferenc_Szálasi> .
}
```",2,2,3,2,1,3,3,71,0,0,73,0,0.0,0
391,4,train,Give me the figure known as Hub City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Hub City""@en . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/nickName> ""Hub City"" .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
659,14,train,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?militaryForce WHERE {
  ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://dbpedia.org/property/militaryForce> ?militaryForce .
}
```",2,5,3,2,1,3,3,71,0,0,1127,0,0.0,0
617,17,train,Who is the child of the commander in Battle of Panium?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,7,0,0,1.0,1.0,1.0
360,8,train,"Give me the writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
SELECT ?album WHERE {
  <http://dbpedia.org/resource/Dave_Flett> <http://dbpedia.org/ontology/work> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalAlbum> .
  BIND(?work AS ?album)
}
```",2,3,3,2,1,2,3,28,0,0,8,0,0.0,0
294,6,train,"Give me the resting place of Luke Lea (American politician, born 1879) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?person ?restingPlace WHERE {
  { 
    <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Edwin_A._Keeble> AS ?person)
  }
}
```",2,2,3,1,2,2,3,28,1,4,0,0.2,1.0,0.33333333333333337
184,0,train,Give me the parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/parent> ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
328,3,train,Who is the commander in Volcano and Ryukyu Islands campaign?,SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,20,0,0,1.0,1.0,1.0
626,0,train,Give me the commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,2,20,21,0,0,1.0,1.0,1.0
838,3,train,"Give me the band member, that is an artist and a musical artist, of YU Grupa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/member> ?member .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",1,3,2,1,1,3,2,20,0,0,4,0,0.0,0
747,8,train,Who is the person born as Tracey Elizabeth McSween?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Tracey Elizabeth McSween"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
345,6,train,Give me the figure known as Stolz von Liechtenstein and team of Alessandro Mangiarratti.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . }","```sparql
# Query 1: Find the figure known as ""Stolz von Liechtenstein""
SELECT ?figure WHERE {
  ?figure <http://dbpedia.org/ontology/alsoKnownAs> ""Stolz von Liechtenstein"" .
}

# Query 2: Find the team associated with Alessandro Mangiarratti
SELECT ?team WHERE {
  <http://dbpedia.org/resource/Alessandro_Mangiarratti> <http://dbpedia.org/property/team> ?team .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
801,8,train,"Give me the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> <http://dbpedia.org/ontology/writer> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",1,3,2,1,1,3,3,71,0,0,12,0,0.0,0
666,7,train,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?player WHERE {
  <http://dbpedia.org/resource/2016%E2%80%9317_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?manager .
  ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
  ?team <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Hull_City_A.F.C.> ;
        <http://dbpedia.org/ontology/manager> ?manager .
  ?player <http://dbpedia.org/ontology/playerForTeam> ?team .
}
```",2,3,3,2,1,3,2,20,0,0,22,0,0.0,0
345,9,train,"Give me the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?result . },"```sparql
SELECT ?nickname WHERE {
  ?player <http://dbpedia.org/property/player> <http://dbpedia.org/resource/Armando_Heeb> .
  ?player <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1, ?type2, ?type3 .
  FILTER (?type1 = <http://dbpedia.org/ontology/SportsClub> && 
          ?type2 = <http://dbpedia.org/ontology/Organization> &&
          ?type3 = <http://dbpedia.org/ontology/SoccerClub>)
  OPTIONAL { ?player <http://dbpedia.org/property/nickname> ?nickname }
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
981,4,train,Give me the author of Kamikaze Girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/ontology/author> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,2,1.0,0.3333333333333333,0.5
391,6,train,"Give me the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/claimToFame> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
}
```",1,2,2,1,1,3,3,71,0,0,4,0,0.0,0
9,10,train,"Give me the figure known as QUB and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result .
  FILTER(CONTAINS(LCASE(STR(?result)), ""qub""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
197,2,train,Who is the member of FC Politehnica Timișoara?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/FC_Politehnica_Timișoara> <http://dbpedia.org/ontology/player> ?member .
}
```",1,1,2,1,1,2,2,9,0,0,572,0,0.0,0
54,5,train,Give me the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
182,6,train,Give me the war of Mahesh Senanayake and war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?war WHERE {
  { 
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
  UNION
  {
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
}
```",2,2,3,1,2,2,3,28,1,5,0,0.16666666666666666,1.0,0.2857142857142857
778,7,train,Give me the entity in the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/ontology/award> ?result .
}
```",2,2,3,2,1,3,2,20,0,9,18629,0.0,0.0,0
179,5,train,Who is the child of Bhumibol Adulyadej?,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
54,13,train,Give me the parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
  <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
303,5,train,"Who is the person born, that is a politician, as Arnulfo Arias Madrid?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birth> <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
534,5,train,Give me the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
767,1,train,Give me the alma mater of Carl L. Nippert.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
963,1,train,Give me the administration of Serbian Progressive Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . },"```sparql
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Serbian_Progressive_Party> <http://dbpedia.org/ontology/administration> ?administration .
}
```",1,1,2,1,1,3,2,20,0,0,86,0,0.0,0
345,4,train,Give me the birth date of Eiður Guðjohnsen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
SELECT ?birthDate WHERE {
  <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?birthDate .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
10,6,train,Give me the associated musical artist of Matt Colton and band member of Luke Vibert.,SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . },"```sparql
SELECT DISTINCT ?artist WHERE {
  # Find artists associated with Matt Colton
  <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  
  # Check if the same artist is a band member of Luke Vibert
  ?artist <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Luke_Vibert> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
391,3,train,"Give me the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/nickName> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
696,2,train,"Give me the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
  ?result <http://dbpedia.org/ontology/Band> .
}
```",1,4,2,1,1,3,2,20,0,0,2,0,0.0,0
994,16,train,"Give me the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?bandMember WHERE {
  # Step 1: Identify the band that is an organisation associated with Fredrik Thordendal
  <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/memberOf> ?band .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .

  # Step 2: Find members of this band who are also a band, group, and organisation
  ?band <http://dbpedia.org/property/member> ?bandMember .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1 .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type2 .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type3 .

  FILTER (?type1 = <http://dbpedia.org/ontology/Band> && 
          ?type2 = <http://dbpedia.org/ontology/MusicalGroup> &&
          ?type3 = <http://dbpedia.org/ontology/Organisation>)
}
```",2,6,3,2,1,3,3,71,0,0,6,0,0.0,0
492,3,train,Give me the author of French Algeria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/ontology/author> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
9,1,train,Give me the alma mater of Allen Hill (scientist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
54,4,train,Give me the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/ontology/father> ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
492,13,train,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?commander WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(?commander = <http://dbpedia.org/resource/Frédéric-Georges_Herr>)
}
```",2,4,3,2,1,3,3,71,0,1,2,0.0,0.0,0
485,2,train,Give me the entity in Nottinghamshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
  FILTER (STR(?location) = ""Nottinghamshire"")
}
```",1,1,2,1,1,2,3,28,0,0,369,0,0.0,0
827,10,train,"Who is the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?spouse <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,4,3,2,1,3,2,20,2,0,0,1.0,1.0,1.0
142,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Japan> .
}
```",1,1,2,1,1,2,2,9,401,2973,8515,0.11885002963841138,0.04497532525796321,0.06525630593978844
55,2,train,Give me the band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Jason_Newsted> <http://dbpedia.org/ontology/member> ?band .
}
```",1,1,2,1,1,2,3,28,0,0,9,0,0.0,0
392,7,train,Give me the province of Schio and entity in Italy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result .
  OPTIONAL { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ProvinceInItaly> . }
}
```",2,2,3,1,2,2,3,28,1,0,0,1.0,1.0,1.0
427,13,train,Give me the party of the father of Lamberto Andreotti.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/politicalParty> ?party .
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
294,2,train,"Give me the entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> .
}
```",1,1,2,1,1,2,3,28,340,0,0,1.0,1.0,1.0
303,11,train,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://dbpedia.org/property/politicalParty> ?party .
}
```",2,3,3,2,1,2,3,28,0,0,1,0,0.0,0
767,9,train,Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
  ?almaMater <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Baden-Württemberg""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
488,8,train,Who is the father of Emperor Go-Mizunoo?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
838,8,train,"Give me the band member of the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?member WHERE {
  ?band <http://dbpedia.org/ontology/member> ?member .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
  ?band <http://dbpedia.org/property/band> <http://dbpedia.org/resource/YU_Grupa> .
}
```",2,3,3,2,1,3,2,20,0,0,40,0,0.0,0
801,17,train,"Give me the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)> <http://purl.org/dc/terms/creator> ?writer .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",2,6,3,2,1,3,3,71,0,0,12,0,0.0,0
48,4,train,Give me the show with Stacey Dash.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . },"```sparql
SELECT ?show WHERE {
  <http://dbpedia.org/resource/Stacey_Dash> <http://dbpedia.org/ontology/starring> ?show .
}
```",1,1,2,1,1,3,2,20,0,0,18,0,0.0,0
378,10,train,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?claimToFame WHERE {
  <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/notableFor> ?claimToFame .
}

UNION

SELECT ?war WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
328,17,train,"Give me the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/leader> ?leader .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
           <http://dbpedia.org/ontology/politician> true .
  ?leader <http://dbpedia.org/ontology/officesHeld> ?office .
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
339,4,train,Who is the parent of Princess Olga of Greece and Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> <http://dbpedia.org/ontology/parent> ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
701,16,train,Give me the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seti_I> .
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
996,6,train,Give me the entity in France and force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://dbpedia.org/property/location> ?location .
  FILTER(CONTAINS(LCASE(?location), ""france""))
  ?battle <http://dbpedia.org/ontology/force> ?result .
}
```",2,2,3,1,2,3,2,20,0,0,4,0,0.0,0
492,10,train,Give me the person decedent at French Algeria and person decedent at Algiers.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
}
```",2,2,3,1,2,3,3,71,16,0,0,1.0,1.0,1.0
421,6,train,Give me the band member of Senidah and native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
SELECT ?member WHERE {
  ?senidah <http://dbpedia.org/ontology/member> ?member .
  FILTER(STRSTARTS(STR(?senidah), ""http://dbpedia.org/resource/Senidah""))
  
  ?member <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
487,4,train,Give me the birth name of Phil Scott.,SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Phil_Scott_(politician)> <http://dbpedia.org/ontology/birthName> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
827,3,train,"Who is the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,2,20,2,1,0,0.6666666666666666,1.0,0.8
435,9,train,"Give me the region of Greenwich Mean Time and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . }","```sparql
# Query to find the region associated with Greenwich Mean Time
SELECT ?region WHERE {
  <http://dbpedia.org/resource/Greenwich_Mean_Time> <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
  BIND(?location AS ?region)
}

UNION

# Query to find the work associated with Article 62, Section IV of Constitution of Iceland
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Article_62,_Section_IV_of_Constitution_of_Iceland> <http://purl.org/dc/terms/isPartOf> ?work .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
488,12,train,Give me the administration of Emperor Go-Yōzei and death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
SELECT ?administration ?deathPlace WHERE {
  # Query for Emperor Go-Yōzei's administration period
  <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/rule> ?administration .

  # Query for Tokugawa Ieyasu's death place
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
666,2,train,"Give me the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Leonid_Slutsky> <http://dbpedia.org/ontology/coachedTeam> ?team .
  ?team <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (
    (?type = <http://dbpedia.org/ontology/SoccerClub> || 
     ?type = <http://dbpedia.org/ontology/SportsTeamSeason>)
  )
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
767,8,train,Give me the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?alterEgo WHERE {
  <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/ontology/alternateName> ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
9,9,train,"Give me the alma mater of Allen Hill (scientist) and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?person ?almaMater WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> 
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> 
  }
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
281,1,train,Give me the entity in Colony of New Zealand.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Colony_of_New_Zealand> <http://dbpedia.org/ontology/member> ?entity .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
179,8,train,Give me the parent of the child of Bhumibol Adulyadej.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
142,6,train,Give me the birthplace of the actor of Papa wa Newscaster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?actor <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/Papa_wa_Newscaster> .
  ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,2,1,2,2,9,0,0,3,0,0.0,0
778,8,train,"Give me the author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v0 <http://dbpedia.org/ontology/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Bill_Joy> <http://dbpedia.org/ontology/author> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software> .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
378,8,train,Who is the commander in Great Siege of Gibraltar?,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,7,0,0,1.0,1.0,1.0
360,10,train,"Give me the native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?native WHERE {
  <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?native <http://dbpedia.org/ontology/nativeOf> ?deathPlace .
}
```",2,3,3,2,1,2,3,28,0,0,1099,0,0.0,0
391,0,train,"Give me the native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .
}
```",1,1,2,1,1,3,3,71,97,0,0,1.0,1.0,1.0
534,0,train,Give me the birth place of Garret FitzGerald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
528,10,train,Give me the force of Narciso Campero and war of Irene Morales.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query to find the force associated with Narciso Campero
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/commander> ?command .
  ?command <http://dbpedia.org/property/hasForce> ?force .
}

# Query to find the wars associated with Irene Morales
SELECT DISTINCT ?war WHERE {
  ?battle <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/Irene_Morales> .
  ?battle <http://dbpedia.org/ontology/battleOf> ?war .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
303,3,train,"Who is the commander, that is a politician, in United States invasion of Panama?",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,2,2,1,1,2,3,28,6,0,0,1.0,1.0,1.0
492,7,train,Give me the country of Khemis Miliana District.,SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
427,9,train,Give me the reference to Partito Popolare Italiano and party of Giulio Andreotti.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Partito_Popolare_Italiano> <http://dbpedia.org/ontology/member> ?member .
  ?member = <http://dbpedia.org/resource/Giulio_Andreotti> .
  ?party <http://dbpedia.org/property/party> <http://dbpedia.org/resource/Partito_Popolare_Italiano> .
  ?party <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Giulio_Andreotti> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
9,11,train,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  ?mayor <http://dbpedia.org/ontology/politician> _:b0 .
  ?mayor <http://dbpedia.org/property/mayorOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  ?mayor <http://dbpedia.org/ontology/almaMater> ?result .
}
```",2,3,3,2,1,3,3,71,0,0,6,0,0.0,0
427,4,train,Give me the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?name WHERE {
  <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,2,train,Give me the entity in Sri Lanka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Sri_Lanka> .
}
```",1,1,2,1,1,2,3,28,0,343,62,0.0,0.0,0
528,2,train,Give me the force of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryForce> ?force .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
645,9,train,"Give me the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  BIND(?residence AS ?result)
}
```",2,3,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
801,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alternateName> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
547,15,train,Give me the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton> .
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
10,0,train,Give me the associated musical artist of Matt Colton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}
```",1,1,2,1,1,2,3,28,4,0,0,1.0,1.0,1.0
528,6,train,Give me the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
294,7,train,"Give me the entity in Nashville, Tennessee and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/burialPlace> ?entity .
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Nashville,_Tennessee> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
754,8,train,Give me the parent of the child of Ram Khamhaeng.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/father> ?parent .
  <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
54,1,train,Give me the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
360,9,train,Give me the native of Johannesburg and reference to Manfred Mann.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> .
  ?person <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Manfred_Mann> ;
          <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Manfred_Mann> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
645,5,train,Give me the child of Richard Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
161,6,train,"Give me the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
251,2,train,Give me the death place of Laura Mancinelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
314,0,train,Give me the person deceased at Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> .
}
```",1,1,2,1,1,2,3,28,12,1334,8,0.008915304606240713,0.6,0.017569546120058566
391,14,train,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?actor WHERE {
  ?movie <http://dbpedia.org/ontology/castOrCrew> ?actor .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
  ?movie <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> .
}
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
712,7,train,Give me the capital of the country of Armed Forces of South Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?capital WHERE {
  <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?country .
  ?country <http://dbpedia.org/property/capital> ?capital .
}
```",2,2,3,2,1,3,2,20,0,3,3,0.0,0.0,0
312,2,train,"Give me the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Democratic_Party_(Italy)> <http://dbpedia.org/ontology/administration> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (
    (?type = <http://dbpedia.org/ontology/Settlement> ||
     ?type = <http://dbpedia.org/ontology/Region> ||
     ?type = <http://dbpedia.org/ontology/State>)
  )
  ?result <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Italy> .
}
```",1,5,2,1,1,2,2,9,0,0,14,0,0.0,0
801,9,train,Give me the producer of Westside Story (song) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
SELECT ?producer ?profession WHERE {
  <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?producer .
  OPTIONAL { ?producer <http://dbpedia.org/ontology/profession> ?profession . }
}
```",2,2,3,1,2,3,3,71,2,0,0,1.0,1.0,1.0
404,15,train,"Who is the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia?",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
294,10,train,Give me the resting place of the architect of P. D. Houston Jr. House.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v1 . },"```sparql
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?architect .
  ?architect <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  OPTIONAL { ?architect <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
339,1,train,Give me the father of Princess Elizabeth of Greece and Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/ontology/father> ?father .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
963,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/country> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}
```",1,2,2,1,1,3,2,20,0,0,56,0,0.0,0
820,5,train,Who is the parent of Jason Schwartzman?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Jason_Schwartzman> <http://dbpedia.org/ontology/parent> ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
994,5,train,"Give me the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/memberOf> ?band .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
617,0,train,Give me the child of Doubravka of Bohemia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
16,9,train,Give me the professional in Actress and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actress> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
915,9,train,"Give me the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?director .
  ?director <http://dbpedia.org/ontology/birthPlace> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}
```",2,3,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
115,4,train,Give me the alma mater of Vladimir Cerrón and alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?person, ?almaMater WHERE {
  { 
    <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    BIND(<http://dbpedia.org/resource/Vladimir_Cerrón> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    BIND(<http://dbpedia.org/resource/Jorge_Sotomayor_Tello> AS ?person)
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
184,4,train,Give me the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
}
```",1,1,2,1,1,3,3,71,2751,0,0,1.0,1.0,1.0
801,7,train,"Give me the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?result . },"```sparql
SELECT ?album WHERE {
  <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?album .
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
}
```",1,3,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
427,5,train,Who is the alumnus of Massachusetts Institute of Technology?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
SELECT ?alumnus WHERE {
  <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> <http://dbpedia.org/ontology/alumni> ?alumnus .
}
```",1,1,2,1,1,3,3,71,0,0,1559,0,0.0,0
16,12,train,Give me the professional in Actress and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actress> .
  ?person rdfs:label ?result .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
16,14,train,Give me the person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
959,0,train,Give me the member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/University_of_Tsukuba> <http://dbpedia.org/ontology/member> ?member .
}
UNION
SELECT ?alumnus WHERE {
  <http://dbpedia.org/resource/University_of_Tsukuba> <http://dbpedia.org/ontology/alumnus> ?alumnus .
}
```",1,1,2,1,1,3,3,71,0,0,267,0,0.0,0
712,8,train,Give me the resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace WHERE {
  ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> .
  ?person <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
}
```",2,2,3,2,1,3,2,20,6,42,43,0.125,0.12244897959183673,0.12371134020618557
767,17,train,"Give me the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?alterEgo WHERE {
  <http://dbpedia.org/resource/Matthew_Burland> <http://dbpedia.org/ontology/persona> ?persona .
  ?persona <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?persona <http://dbpedia.org/property/alterEgo> ?alterEgo .
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
356,6,train,Give me the player in 2015 Sacramento Republic FC season and team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/player> ?player .
  ?player <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Mark_Briggs> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
55,1,train,Give me the band member of Metallica.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Metallica> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
77,8,train,Give me the force of the mayor of Congress Poland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Constitutional_Kingdom_of_Poland> <http://dbpedia.org/ontology/mayor> ?mayor .
  ?mayor <http://dbpedia.org/property/member> ?result .
}
```",2,2,3,2,1,3,2,20,0,0,33,0,0.0,0
696,8,train,Give me the landmark at elevation of the award of Nie Rongzhen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v0 . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?landmark WHERE {
  ?award <http://dbpedia.org/property/receiver> <http://dbpedia.org/resource/Nie_Rongzhen> .
  ?award <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ?landmarkLabel .
  ?location <http://dbpedia.org/property/elevation> ?elevation .
  FILTER(?elevation > 0) # Assuming we are interested in non-zero elevations
}
```",2,2,3,2,1,3,2,20,0,0,599,0,0.0,0
427,14,train,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Romano Antonio Prodi"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?person <http://dbpedia.org/ontology/party> ?result .
}
```",2,4,3,2,1,3,3,71,0,0,7,0,0.0,0
77,4,train,"Give me the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?result WHERE {
  ?organization <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Warsaw> .
  ?organization <http://dbpedia.org/ontology/administers> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}
```",1,2,2,1,1,3,2,20,0,0,7,0,0.0,0
281,16,train,"Give me the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/ontology/leader> ?leader .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
801,12,train,Give me the associated musical artist of Chris Taylor (music producer) and producer of Westside Story (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  OPTIONAL { 
    <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> .
  }
}
```",2,2,3,1,2,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
184,16,train,"Give me the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?parent .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",2,3,3,2,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
391,11,train,Give me the native of the figure known as Hub City.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
SELECT ?native WHERE {
  <http://dbpedia.org/resource/Hub_City> <http://dbpedia.org/ontology/nativeOf> ?native .
}
```",2,2,3,2,1,3,3,71,0,0,176,0,0.0,0
77,9,train,Who is the awardee of the award of Maxim Grigorievich Vlasov?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?awardee WHERE {
  <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/ontology/award> ?award .
  ?otherPerson <http://dbpedia.org/ontology/award> ?award .
  FILTER(?otherPerson != <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov>)
  BIND(?otherPerson AS ?awardee)
}
```",2,2,3,2,1,3,2,20,402,268,14,0.6,0.9663461538461539,0.7403314917127071
16,7,train,Who is the alumnus of Ohio State University?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . },"```sparql
SELECT ?alumnus WHERE {
  <http://dbpedia.org/resource/Ohio_State_University> <http://dbpedia.org/ontology/alumni> ?alumnus .
}
```",1,1,2,1,1,3,3,71,0,0,467,0,0.0,0
92,6,train,"Give me the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ?name .
  FILTER(CONTAINS(LCASE(?name), LCASE(""Jim Sheppard"")))
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
981,3,train,Give me the region of Time in Indonesia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . },"```sparql
SELECT ?region WHERE {
  <http://dbpedia.org/resource/Time_in_Indonesia> <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
  BIND(?location AS ?region)
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
