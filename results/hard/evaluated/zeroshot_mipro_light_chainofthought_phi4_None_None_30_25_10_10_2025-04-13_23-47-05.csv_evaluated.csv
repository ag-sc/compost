id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
392,21,test,"Give me the region of Central European Time and entity in Italy and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region ?province ?settlement WHERE {
  # Find Sebastiano Bianchetti's entity
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@en .
  
  # Get the residence of Sebastiano Bianchetti
  ?person dbo:residence ?settlement .

  # Ensure it is a settlement and located in Italy
  ?settlement a dbo:Settlement ;
              dbo:country dbr:Italy .

  # Find the province of the settlement
  OPTIONAL { ?settlement dbo:province ?province . }

  # Get the region associated with Central European Time (CET)
  ?region dbo:timeZone dbr:Central_European_Time ;
          dbo:country dbr:Italy .
  
  # Ensure the settlement is in the CET region
  ?settlement dbo:locatedIn ?region .

}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
421,24,test,Give me the person born as the birth name of Dino Merlin and native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Get Dino Merlin's birth name
  dbr:Dino_Merlin dbo:birthName ?merlinBirthName .
  
  # Get Samir Bekrić's birthplace
  dbr:Samir_Bekrić dbo:birthPlace ?bekricBirthPlace .

  # Find a person with the same birth name and native of the same place
  ?person dbo:birthName ?merlinBirthName ;
          dbo:nativeOf ?bekricBirthPlace .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
427,55,test,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994) and party of the father of Lamberto Andreotti.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v5 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?prodiPartyLabel ?italianPeoplePartyLabel ?andreottiFatherPartyLabel 
WHERE {
  # Romano Prodi's party affiliation
  dbr:Romano_Prodi a dbo:Person ;
                  dbo:partyAffiliation ?prodiParty .
  SERVICE <http://dbpedia.org/sparql> { ?prodiParty rdfs:label ?prodiPartyLabel . FILTER (lang(?prodiPartyLabel) = 'en') }

  # Italian People's Party (1994)
  dbr:Italian_People%27s_Party_(1994) a dbo:PoliticalParty ;
                                      rdfs:label ?italianPeoplePartyLabel .
  FILTER (lang(?italianPeoplePartyLabel) = 'en')

  # Lamberto Andreotti's father and his party affiliation
  dbr:Lamberto_Andreotti dbo:father ?andreottiFather .
  ?andreottiFather dbo:partyAffiliation ?andreottiFatherParty .
  SERVICE <http://dbpedia.org/sparql> { ?andreottiFatherParty rdfs:label ?andreottiFatherPartyLabel . FILTER (lang(?andreottiFatherPartyLabel) = 'en') }
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
996,19,test,Give me the force of the awardee of 1778.0 and entity in the award of the native of Palestine (region).,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?result <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee1778 ?force ?awardEntity ?nativeOfPalestineAward
WHERE {
  # Find the awardee of 1778
  ?award dbo:date ""1778-01-01""^^xsd:date ;
         dbo:recipient ?awardee1778 .
  
  OPTIONAL { 
    ?awardee1778 dbo:force ?force .
  }
  
  # Find an entity in the award of a native of Palestine
  ?native dbr:Palestine dbo:nativePlace ;
          dbo:award ?awardEntity .
}

```",5,5,6,3,2,3,2,20,0,0,4,0,0.0,0
184,64,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of Archduke Joseph August of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Part 1: Archduchess Margaret of Austria's family tree
  ?margaret a dbo:Person ;
            dbo:birthDate ?dateMargaret .
  FILTER (YEAR(?dateMargaret) = 1925)
  
  ?parentMargaret dbo:child ?margaret .
  ?grandChild dbo:parent ?parentMargaret .

  # Part 2: Landmark at elevation 96.0
  ?landmark a dbo:PopulatedPlace ;
            dbo:elevationAboveSeaLevel ""96.0""^^xsd:float .
  
  ?native dbo:nativeOf ?landmark .
  ?parentNative dbo:child ?native .

  # Part 3: Archduke Joseph August of Austria's family tree
  ?josephAugust a dbo:Person ;
                dbr:Archduke_Joseph_August_of_Austria .
  
  ?childJosephAugust dbo:parent ?josephAugust .

  # Find common parent between the two parts
  VALUES (?commonParent) {
    (?grandChild)
    (?parentNative)
    (?childJosephAugust)
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
492,46,test,"Give me the person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent
WHERE {
  ?person rdfs:label ""Frédéric-Georges Herr""@en .
  ?work dbo:author ?person ;
        (dbo:subject|dbo:topic) dbr:French_Algeria .
  
  ?event rdf:type/rdf:type* dbo:MilitaryConflict , dbo:War ;
         dbo:commander ?person .

  ?work dbo:decedent ?decedent .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,20,test,Give me the reference to Partito Popolare Italiano and party of the father of Lamberto Andreotti.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?partyAffiliation ?referenceToPartitoPopolareItaliano
WHERE {
  # Find the father of Lamberto Andreotti
  dbr:Lamberto_Andreotti dbo:father ?father .
  
  # Get the party affiliation of Lamberto Andreotti's father
  ?father dbo:partyAffiliation ?partyAffiliation .

  # Check if this party is referenced as Partito Popolare Italiano or related to it
  OPTIONAL {
    ?partyAffiliation rdfs:label ""Partito Popolare Italiano""@it .
    BIND(?partyAffiliation AS ?referenceToPartitoPopolareItaliano)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
747,61,test,"Give me the band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?shenaBand ?songWriterBand WHERE {
  # Part 1: Find the band of the person born as ""Shèna""
  ?person dbo:birthName ""Shèna""@en .
  OPTIONAL { ?person dbo:band ?shenaBand . }

  # Part 2: Find the band of the writer of a song by Amba Shepherd
  ?work dbo:author ?songWriter ;
        dbo:title ?title ;
        dbo:genre dbr:Songs .
  FILTER CONTAINS(LCASE(?title), ""amba shepherd"") .
  OPTIONAL { ?songWriter dbo:band ?songWriterBand . }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
328,44,test,"Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Awardee of Order of Suvorov
  { 
    ?person dbo:award [ a dbo:OrderOfSuvorov ] .
  }
  
  UNION
  
  # Commander in the force of Ferenc Szálasi
  { 
    ?person dbo:militaryCommander dbr:Ferenc_Szálasi .
  }
  
  UNION
  
  # Leader of an office (government agency) under Joseph Stalin
  {
    ?office dbo:head ?person ;
            dbo:country dbr:Soviet_Union ;
            dbo:leader dbr:Joseph_Stalin .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
294,28,test,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in the birth place, that is a settlement, of Marion James and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v5 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?architectRestingPlace ?marionBirthplace ?awardeeRestingPlace WHERE {
  # Part 1: Resting place of the architect of P. D. Houston Jr. House
  ?house dbo:architect ?architect .
  FILTER(STRSTARTS(STR(?house), ""http://dbpedia.org/resource/P._D._Houston_Jr._House""))
  ?architect dbo:restingPlace ?architectRestingPlace .

  # Part 2: Birthplace entity in a settlement for Marion James
  ?marion dbo:birthPlace ?birthPlace .
  FILTER(STRSTARTS(STR(?marion), ""http://dbpedia.org/resource/Marion_James""))
  ?birthPlace rdf:type dbo:Settlement .

  # Part 3: Resting place of the awardee, politician, of Distinguished Service Medal (U.S. Army)
  ?awardee dbo:award dbr:Distinguished_Service_Medal_(United_States_Army) ;
           dbo:occupation dbo:Politician .
  ?awardee dbo:restingPlace ?awardeeRestingPlace .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
528,41,test,Give me the war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?pisaguaForce ?laRinconadaWar ?laRinconadaCommander ?camperoForce
WHERE {
  # Battle of Pisagua military force
  ?pisaguaBattle dbo:name ""Battle of Pisagua""@en .
  ?pisaguaBattle dbo:participatedIn ?pisaguaForce .

  # Battle of La Rinconada de Ate war and commander
  ?laRinconadaBattle dbo:name ""Battle of La Rinconada de Ate""@en .
  ?laRinconadaBattle dbo:partOfWar ?laRinconadaWar .
  ?laRinconadaBattle dbo:commander ?laRinconadaCommander .

  # Narciso Campero's military force
  dbr:Narciso_Campero dbo:participatedIn ?camperoForce .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
9,49,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?almaMater ?nickname WHERE {
  # Find the mayor of Northern Ireland Forum
  ?mayor dbo:position dbr:Northern_Ireland_Forum_Mayor .
  
  # Get the alma mater of this mayor
  ?mayor dbo:almaMater ?almaMater .

  # Find organisations in Northern Ireland with a nickname
  ?organisation rdfs:label ?label ;
               foaf:nick ?nickname ;
               dbo:location dbr:Northern_Ireland .
  
  # Ensure the alma mater matches the organisation by nickname
  FILTER(?almaMater = ?organisation)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
281,41,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceCountry ?war
WHERE {
  # Step 1: Find Bob Heffron's birth place that is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Step 2: Identify the awardee of Knight Grand Cross of the Order of the Bath
  ?awardee dbo:title dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath ;
          dbo:participatedIn ?war .

  # Step 3: Ensure the war involved the New Zealand Army
  ?war dbo:participatingMilitaryUnit dbr:New_Zealand_Army .

  # Step 4: Link birth place country to the war through the awardee
  BIND(?birthPlace AS ?birthPlaceCountry)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
485,21,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and entity in United Kingdom and birth place of Thomas Warner (poet).",SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceRegion ?ukEntity ?warnerBirthPlace
WHERE {
  # For Joseph Whitaker (naturalist)
  OPTIONAL {
    dbr:Joseph_Whitaker_(naturalist) dbo:birthPlace ?birthPlace .
    ?birthPlace a dbo:Region ;
               dbo:country dbr:United_Kingdom .
    ?ukEntity dbo:region ?birthPlace .
    BIND(?birthPlace AS ?birthPlaceRegion)
  }
  
  # For Thomas Warner (poet)
  OPTIONAL {
    dbr:Thomas_Warner_(poet) dbo:birthPlace ?warnerBirthPlace .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
528,52,test,"Give me the war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v5 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battle ?roleInBattle ?war ?chileForce WHERE {
  # Part 1: Narciso Campero's role in the Battle of La Rinconada de Ate
  OPTIONAL {
    ?campero dbo:name ""Narciso Campero""@en .
    ?campero dbo:commander ?battle .
    FILTER(STRSTARTS(LCASE(?battle), LCASE(""Battle of La Rinconada de Ate"")))
    BIND(""Commander"" AS ?roleInBattle)
  }

  # Part 2: Wars involving Chile's military force
  OPTIONAL {
    ?chileForce dbo:country dbr:Chile .
    ?chileForce dbo:participatedInWar ?war .
    FILTER(?war != ?battle) # Ensure it's a different event from the battle
  }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
534,19,test,"Give me the birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician) and headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/headquarter> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/owner> ?v4 . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?headquarters WHERE {
  # Step 1: Find Desmond FitzGerald's child who is a politician and office holder
  ?child dbo:parent dbr:Desmond_FitzGerald ;
         rdf:type dbo:Politician ;
         dbo:officeHolder ?_ .

  # Step 2: Get the birth place of this child
  ?child dbo:birthPlace ?birthPlace .

  # Step 3: Identify the venue for the 2012 Pro12 Grand Final
  ?venue dbo:event dbr:2012_Pro12_Grand_Final ;
         rdf:type dbo:ArchitecturalStructure, dbo:Venue .

  # Step 4: Find the owner of this venue
  ?venue dbo:owner ?owner .

  # Step 5: Get the headquarters of the owner
  ?owner dbo:headquarters ?headquarters .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
391,33,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?spouse dbo:spouse dbr:Sherry_Hormann .
  ?work dbo:claimToFame ?spouse .
  ?person dbo:birthPlace dbr:Compton,_California .
  ?work dbo:actor ?person .
  ?person dbo:actor ?actor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
54,54,test,Give me the child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v3 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commonEntity WHERE {
  # Step 1: Identify Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi a dbo:Person ;
                   dbo:child ?fatherOfSoeMinWimalaDewi .

  # Step 2: Find the child of Soe Min Wimala Dewi's father
  ?fatherOfSoeMinWimalaDewi dbo:child ?potentialCommonEntity .

  # Step 3: Ensure this person is predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?ameittaThiriMahaDhammaDewi a dbo:Person ;
                              dbo:predecessor ?potentialCommonEntity .
  
  # Step 4: Identify Thado Minsaw of Prome's parent
  ?thadoMinsawOfProme a dbo:Person ;
                      dbo:child ?parentOfThadoMinsaw .

  # Step 5: Find the child of Thado Minsaw of Prome's parent
  ?parentOfThadoMinsaw dbo:child ?anotherPotentialCommonEntity .

  # Step 6: Determine the common entity
  FILTER (?potentialCommonEntity = ?anotherPotentialCommonEntity)
  
  BIND(?potentialCommonEntity AS ?commonEntity)
}
```",6,6,7,3,3,3,3,71,1,2673,0,0.00037397157816005983,1.0,0.0007476635514018691
10,27,test,"Give me the professional in the birth name of Sharon Kao and associated musical artist of Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?sharonBirthName ?mattArtist ?lukeBandMember
WHERE {
  # Sharon Kao's birth name
  ?sharon a dbo:Person ;
          foaf:name ""Sharon Kao"" ;
          dbo:birthName ?sharonBirthName .

  # Matt Colton's associated musical artist
  ?matt a dbo:Person ;
        foaf:name ""Matt Colton"" ;
        dbo:musicalArtist ?mattArtist .

  # Luke Francis Vibert's band membership
  ?luke a dbo:Person ;
        foaf:name ""Luke Francis Vibert"" ;
        dbo:bandMember ?lukeBandMember .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
528,65,test,Give me the war of the military force of Battle of Pisagua and war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
# Military force in the Battle of Pisagua
SELECT ?militaryForce WHERE {
  dbp:Pisagua_Battle dbo:participatedIn ?battle .
  ?battle dbo:militaryUnit ?militaryForce .
}

# War commanded on January 9th (year unspecified)
SELECT DISTINCT ?war WHERE {
  ?commander dbo:commanded ?war .
  ?war dbo:date ?date .
  FILTER (STRSTARTS(STR(?date), ""01-09""))
}

# Military force of Narciso Campero Leyes
SELECT ?militaryForce WHERE {
  db:Narciso_Campero_Leyes dbo:militaryUnit ?militaryForce .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
492,59,test,"Give me the person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?decedent WHERE {
  # Step 1: Find the author of ""French Algeria""
  ?author dbo:title ""French Algeria""@en .
  
  # Step 2: Identify the military conflict or event related to this author
  ?conflict dbo:commander ?author .

  # Step 3: Find the commander of the Battle of Verdun
  ?verdunCommander dbo:commander dbr:Battle_of_Verdun .
  
  # Step 4: Identify a person who was decedent at the time of work related to both authors
  ?decedent dbo:deathDate ?deathDate .

  FILTER EXISTS {
    ?work dbo:author ?author ;
          dbo:commander ?verdunCommander .
  }
  
  # Ensure the death date is before or around the time of these events
  FILTER (?deathDate <= ?conflictStartDate || ?deathDate <= ?verdunStartDate)
}
```

Note: The query assumes that `?conflict` and `?work` have properties like `dbo:startDate` to compare with `?deathDate`. Adjustments may be needed based on actual DBpedia schema details.",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
488,58,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of Enomoto Takeaki and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?birthPlace ?deathPlace 
WHERE {
  # Tokugawa Masako's spouse and their father who is royalty
  dbr:Tokugawa_Masako dbo:spouse ?spouse .
  ?spouse dbo:father ?royalFather .
  ?royalFather a dbo:Monarch ; dbo:administration ?administration .

  # Enomoto Takeaki's birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .

  # Yūki Hideyasu's father who is a politician and his death place
  dbr:Yūki_Hideyasu dbo:father ?politicianFather .
  ?politicianFather a dbo:Politician ;
                   dbo:deathPlace ?deathPlace .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
801,56,test,"Give me the producer of Westside Story (song) and professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?shadowProfessional ?associatedArtist ?album WHERE {
  # Producer of Westside Story (song)
  dbr:Westside_Story_(song) dbo:producer ?producer .

  # Professional in the alter ego of The Shadow
  dbr:The_Shadow dbo:profession ?shadowProfessional .

  # Writer of What U See Is What U Get and associated musical artist
  dbr:What_U_See_Is_What_U_Get dbo:writer ?writer .
  ?writer dbo:associatedMusicalArtist ?associatedArtist .

  # Album details for What U See Is What U Get
  dbr:What_U_See_Is_What_U_Get a dbo:MusicalWork ;
                               a dbo:Work ;
                               dbo:album ?album .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
232,54,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee and native of London.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?film ?militaryConflict WHERE {
  # Identify Jon Pertwee
  ?person a dbo:Person ;
          foaf:name ""Jon Pertwee"" ;
          dbo:birthPlace dbr:London ;
          dbo:parent dbr:John_Devon_Roland_Pertwee .

  # Find films in his filmography
  ?film dbo:actor ?person .
  
  OPTIONAL {
    # Check if the film is related to a military conflict
    ?film dbo:militaryConflict ?militaryConflict .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
184,18,test,Give me the parent of Archduchess Ilona of Austria and parent of Géza von Habsburg and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

# Parent of Archduchess Ilona of Austria
SELECT ?parent WHERE {
  ?ilona a dbo:Person ;
         rdfs:label ""Archduchess Ilona of Austria""@en .
  ?ilona dbo:parent ?parent .
}

UNION

# Parent of Géza von Habsburg
SELECT ?parent WHERE {
  ?geza a dbo:Person ;
        rdfs:label ""Géza von Habsburg""@en .
  ?geza dbo:parent ?parent .
}

UNION

# Child of Archduke Joseph August of Austria
SELECT ?child WHERE {
  ?josephAugust a dbo:Person ;
                rdfs:label ""Archduke Joseph August of Austria""@en .
  ?josephAugust dbo:child ?child .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
994,33,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and associated musical artist of S.A. Slayer.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?meshuggahAssociatedArtist ?slayerAssociatedArtist WHERE {
  # Find Meshuggah associated with Fredrik Thordendal
  ?fredrik dbo:bandMember dbr:Meshuggah .
  FILTER (EXISTS { ?dbr:Meshuggah a dbo:Band . } && EXISTS { ?dbr:Meshuggah a dbo:Organization . })
  
  # Find associated artists for Meshuggah
  ?meshuggahAssociatedArtist dbo:associatedBand dbr:Meshuggah .

  # Find Slayer associated with S.A. Slayer
  ?saSlayer dbo:bandMember dbr:Slayer .
  FILTER (EXISTS { ?dbr:Slayer a dbo:Organization . })

  # Find associated artists for Slayer
  ?slayerAssociatedArtist dbo:associatedBand dbr:Slayer .
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
184,47,test,"Give me the parent of the native of Budapest and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfNativeBudapest
WHERE {
  # Step 1: Identify Archduke Ladislaus Philipp of Austria
  dbr:Archduke_Ladislaus_Philipp_of_Austria dbo:parent ?parent .

  # Step 2: Find a child of this parent (sibling)
  ?child dbo:parent ?parent .
  
  # Step 3: Identify the native of Budapest among these children
  ?nativeBudapest dbo:nativePlace dbr:Budapest ;
                 rdf:type dbo:Person ;
                 dbo:parent ?parent .

  # Step 4: Ensure this individual is royalty
  ?nativeBudapest rdf:type dbo:RoyalFamilyMember .

  # Step 5: Find the parent of this native of Budapest who is royalty
  ?nativeBudapest dbo:parent ?parentOfNativeBudapest .
  
  # Optional: Ensure the parent is also a member of royalty
  ?parentOfNativeBudapest rdf:type dbo:RoyalFamilyMember .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
617,60,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalChild WHERE {
  # Step 1: Find Antiochus II Theos' successor who is a royalty
  ?successor dbo:successorOf dbr:Antiochus_II_Theos ;
             rdf:type dbo:Monarch .

  # Step 2: Find the child of this successor who is also a royalty
  ?child dbo:child ?successor ;
         rdf:type dbo:Monarch .

  # Step 3: Identify the commander in Battle of Panium
  ?battle dbp:commander ?commander .
  FILTER (str(?battle) = ""Battle_of_Panium"")

  # Step 4: Determine the parent of this commander's child
  ?childOfCommander dbo:child ?commander ;
                   rdf:type dbo:Person .
  ?parent dbo:spouse|dbo:partner ?commander .

  # Step 5: Find the child of this parent who is a royalty
  ?finalChild dbo:child ?parent ;
              rdf:type dbo:Monarch .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
184,55,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find a child of Archduke Joseph Francis of Austria
SELECT ?childOfJosephFrancis WHERE {
    dbr:Archduke_Joseph_Francis_of_Austria dbo:child ?childOfJosephFrancis .
}

# Step 2: Find the parent (likely spouse) of that child
SELECT DISTINCT ?parentOfChild WHERE {
    VALUES (?child) { ?childOfJosephFrancis } # Replace with actual result from step 1
    ?child dbo:spouse ?parentOfChild .
}

# Step 3: Identify a native of Budapest
SELECT ?nativeOfBudapest WHERE {
    ?person dbo:nativePlace dbr:Budapest .
    BIND(?person AS ?nativeOfBudapest)
}

# Step 4: Find the child of this native
SELECT DISTINCT ?childOfNative WHERE {
    VALUES (?native) { ?nativeOfBudapest } # Replace with actual result from step 3
    ?native dbo:child ?childOfNative .
}

# Step 5: Identify a child of Archduke Joseph Karl of Austria
SELECT ?childOfJosephKarl WHERE {
    dbr:Archduke_Joseph_Karl_of_Austria dbo:child ?childOfJosephKarl .
}

# Step 6: Find the parent (likely spouse) of that child
SELECT DISTINCT ?parentOfChild2 WHERE {
    VALUES (?child2) { ?childOfJosephKarl } # Replace with actual result from step 5
    ?child2 dbo:spouse ?parentOfChild2 .
}

# Step 7: Determine the common parent (ancestor)
SELECT DISTINCT ?commonParent WHERE {
    VALUES (?parent1) { ?parentOfChild } # Replace with actual result from step 2
    VALUES (?parent2) { ?parentOfChild2 } # Replace with actual result from step 6
    OPTIONAL { ?parent1 dbo:spouse ?commonParent . }
    OPTIONAL { ?parent2 dbo:spouse ?commonParent . }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
92,37,test,"Give me the band of Joseph Michael and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?associatedArtist WHERE {
  # Step 1: Identify Joseph Michael's band
  ?person a dbo:Person ;
          foaf:name ""Joseph Michael"" .
  ?person dbo:bandMember ?band .

  # Step 2: Find associated musical artist linked to an actor in the film
  ?actor a dbo:Person ;
         dbo:film dbr:Return_to_Nuke_'Em_High_Volume_1 ;
         dbo:musicalArtist ?associatedArtist .
  
  # Ensure the person is born (i.e., has a birth date)
  ?actor dbo:birthDate ?birthDate .

  FILTER EXISTS { ?person = ?actor }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
528,69,test,"Give me the force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?narcisoForce ?battleWar ?chileEvent
WHERE {
  # Identify Narciso Campero and his military force
  ?narciso a dbo:Person ;
           foaf:name ""Narciso Campero"" ;
           dbo:birthName ?birthName .
  
  OPTIONAL { 
    ?narciso dbo:militaryForce ?narcisoForce .
  }

  # Identify the Battle of La Rinconada de Ate and its related war
  ?battle a dbo:MilitaryEngagement ;
          foaf:name ""Battle of La Rinconada de Ate"" ;
          dbo:commander ?commander .

  OPTIONAL {
    ?battle dbo:partOfWar ?battleWar .
  }

  # Identify a societal event in Chile involving a military force
  ?chileEvent a dbo:SocietalEvent ;
              dbo:location dbr:Chile ;
              dbo:militaryForce ?militaryForce .
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
48,20,test,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash and band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
# Step 1: Find shows with Stacey Dash as an actor
SELECT ?show WHERE {
    ?actor dbo:birthName ""Stacey Dash""@en .
    ?actor dbo:actor ?show .
}

# Step 2: Identify if any actors from the show are also musical artists and find their band
SELECT DISTINCT ?band WHERE {
    ?actor dbo:birthName ""Stacey Dash""@en .
    ?actor dbo:actor ?show .
    OPTIONAL { ?actor dbo:musicalArtist ?musician . }
    OPTIONAL { ?musician dbo:band ?band . }
}

# Step 3: Find works by Shellback as a record producer
SELECT DISTINCT ?work WHERE {
    ?producer foaf:name ""Shellback""@en .
    ?producer dbo:recordProducer ?work .
}

# Step 4: Identify the writer of each work
SELECT DISTINCT ?writer WHERE {
    ?producer foaf:name ""Shellback""@en .
    ?producer dbo:recordProducer ?work .
    OPTIONAL { ?work dbo:writer ?writer . }
}

# Step 5: Find if any writers are also musical artists and identify their band
SELECT DISTINCT ?band WHERE {
    ?producer foaf:name ""Shellback""@en .
    ?producer dbo:recordProducer ?work .
    OPTIONAL { ?work dbo:writer ?writer . }
    OPTIONAL { ?writer dbo:musicalArtist ?musician . }
    OPTIONAL { ?musician dbo:band ?band . }
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
314,21,test,"Give me the awardee of 30 and commander in the profession, that is an event and a societal event, of Lisa Gavrić and person deceased at Madrid.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:award ?award .
  FILTER regex(str(?award), ""30"", ""i"") .

  ?person dbo:militaryCommander ?commanderRole .
  
  ?event dbo:associatedWith dbr:Lisa_Gavrić .
  ?event a dbo:SocietalEvent .
  ?person dbo:relatedTo ?event .

  ?person dbo:deathPlace dbr:Madrid .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
161,50,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?mola dbo:commander ?force .
  ?force dbo:militaryConflict ?event .
  ?event a dbo:MilitaryConflict ;
         dbo:societalEvent true .

  ?negrin dbo:predecessorOf dbr:Indalecio_Prieto .
  ?negrin dbo:involvedInMilitaryConflict ?event .

  FILTER (str(?mola) = ""Emilio_Mola"" && str(?negrin) = ""Juan_Negrín"")
}
```",5,8,6,3,2,3,3,71,0,0,32,0,0.0,0
767,66,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of George K. Nash.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v6 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Find a settlement related to ""Green""
  ?green dbo:isPartOf ?administration .
  ?green a dbo:Settlement .

  # Link to an administration involving ""The Doctor"" (alter ego of Matthew Burland)
  ?administration dbo:member ?doctorEntity .
  ?doctorEntity rdfs:label ""The Doctor""@en .

  # Connect to Princeton University as the alma mater
  ?nash dbo:almaMater dbr:Princeton_University .
  ?nash dbo:memberOf ?administration .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
182,21,test,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Wars involving Jagath Dias
SELECT ?war WHERE {
  ?person rdfs:label ""Jagath Dias""@en .
  ?person dbo:participatedIn ?war .
}

UNION

# Wars related to Tamara Kunanayakam's nationality
SELECT DISTINCT ?entity WHERE {
  ?person rdfs:label ""Tamara Kunanayakam""@en .
  ?person dbo:nationality ?nationality .
  ?nationality dbo:country ?entity .
  ?entity dbo:participatedIn ?war .
}

UNION

# Wars involving Mahesh Senanayake
SELECT ?war WHERE {
  ?person rdfs:label ""Mahesh Senanayake""@en .
  ?person dbo:participatedIn ?war .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
92,71,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as the birth name of Joseph Michael.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v8 . },"```sparql
# Step 1: Find the actor of ""Return to Nuke 'Em High Volume 1"" who is also an artist
SELECT ?actor WHERE {
    ?film dbo:title ""Return to Nuke 'Em High Volume 1""@en .
    ?film dbo:starring ?actor .
    ?actor rdf:type dbo:Actor ;
           dbo:birthName ?birthName .
}

# Step 2: Find the associated band of this artist
SELECT ?band WHERE {
    ?artist dbo:associatedBand ?band .
    ?artist rdfs:label ?actorLabel FILTER(?actorLabel = ""Actor Name""@en) # Replace with actual actor name found in step 1
}

# Step 3: Identify the band named after the film ""Nevermore (2006)""
SELECT ?nevermoreBand WHERE {
    ?film dbo:title ""Nevermore (2006)""@en .
    ?band rdfs:label ""Nevermore""@en ;
          dbo:associatedFilm ?film .
}

# Step 4: Determine the birth name of Joseph Michael and his associated band
SELECT ?birthName, ?band WHERE {
    ?person dbo:birthName ""Joseph Michael""@en .
    ?person dbo:associatedBand ?band .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
92,30,test,Give me the band of the person born as Joseph Michael Furney and band member of Nevermore and associated musical artist of Jim Sheppard.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?band ?associatedArtist 
WHERE {
  ?person foaf:name ""Joseph Michael Furney"" .
  ?person dbo:member ?bandMemberRole .
  ?bandMemberRole dbo:band ?band .
  FILTER(?band = dbpedia:Nevermore) .

  ?sheppard foaf:name ""Jim Sheppard"" .
  ?sheppard dbo:associatedBandMember ?associatedArtist .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
55,21,test,"Give me the band member of Metallica and band member of Guns N' Roses and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  VALUES ?person { dbr:Jason_Newsted }
  
  ?person dbo:bandMember ?metallica .
  ?metallica rdfs:label ""Metallica""@en .

  ?person dbo:bandMember ?gunsNroses .
  ?gunsNroses rdfs:label ""Guns N' Roses""@en .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
801,22,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Identify the writer of ""40 Dayz & 40 Nightz""
  dbr:Snoop_Dogg dbo:author dbr:40_Dayz_&_40_Nightz .

  # Find associated musical artists
  dbr:Snoop_Dogg dbo:associatedBand ?band .
  
  # Ensure the artist is recognized as both a musician and an artist
  ?artist dbo:associatedBand ?band ;
          rdf:type dbo:MusicalArtist, dbo:Artist .
}
```",3,5,4,2,2,3,3,71,0,0,22,0,0.0,0
391,46,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Identify a notable work (claim to fame) by Michael Ballhaus
SELECT ?work WHERE {
    ?ballhaus dbo:birthName ""Michael Ballhaus""@en .
    ?ballhaus dbo:filmProduction ?work .
    FILTER NOT EXISTS { ?work dbo:director ?otherDirector . }
}

# Step 2: Find actors in that work
SELECT DISTINCT ?actor WHERE {
    ?work dbo:starring ?actor .
    # Assuming we have identified a specific work from the previous query, replace <WORK_URI> with its URI
    VALUES (?work) { <http://dbpedia.org/resource/<WORK_URI>> }
}

# Step 3: Identify the nickname of Jackson, Tennessee and associated person
SELECT DISTINCT ?person WHERE {
    ?jackson dbo:nickname ""The City That Works""@en .
    ?jackson rdfs:label ""Jackson, Tennessee""@en .
    ?person dbo:birthPlace ?jackson .
}

# Step 4: Match actor with the native figure
SELECT DISTINCT ?actor WHERE {
    # Replace <WORK_URI> and <PERSON_URI> with actual URIs obtained from previous queries
    VALUES (?work) { <http://dbpedia.org/resource/<WORK_URI>> }
    VALUES (?person) { <http://dbpedia.org/resource/<PERSON_URI>> }

    ?work dbo:starring ?actor .
    ?actor dbo:birthPlace ?jackson .
    ?jackson rdfs:label ""Jackson, Tennessee""@en .
    FILTER EXISTS {
        ?person dbo:birthPlace ?jackson .
    }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
378,55,test,Give me the war of the commander in Peninsular War and war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query for Arthur Wellesley's involvement in wars
SELECT ?war WHERE {
  wd:Q3596 dbo:commanderOf ?war .
}

# Query for Carl Pontus Gahn's notable war (if any)
SELECT ?event WHERE {
  wd:Q1234567 dbo:participatedIn ?event .
  FILTER(CONTAINS(LCASE(STR(?event)), ""napoleonic wars""))
}

# Query for George Augustus Eliott's claim to fame during the Great Siege of Gibraltar
SELECT ?fame WHERE {
  wd:Q12345 dbo:claimToFame ?fame .
  FILTER(CONTAINS(LCASE(STR(?fame)), ""great siege of gibraltar""))
}
```

Note: Replace `wd:Q3596` with Arthur Wellesley's DBpedia ID, `wd:Q1234567` with Carl Pontus Gahn's DBpedia ID, and `wd:Q12345` with George Augustus Eliott's DBpedia ID. These IDs need to be verified from the DBpedia resource.",6,6,7,2,3,3,3,71,0,0,2,0,0.0,0
55,26,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of Metallica and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . }","```sparql
# Step 1: Find the producer of ""Used to Love Her""
SELECT ?producer WHERE {
  ?song dbo:title ""Used to Love Her"" .
  ?song dbo:producer ?producer .
}

# Step 2: Find band members of the producer's band
SELECT DISTINCT ?bandMember WHERE {
  ?producer dbo:memberOfBand ?band .
  ?band dbo:bandMember ?bandMember .
}

# Step 3: Find Metallica band members
SELECT DISTINCT ?metallicaMember WHERE {
  <http://dbpedia.org/resource/Metallica> dbo:bandMember ?metallicaMember .
}

# Step 4: Find bands associated with Jason Newsted after Metallica
SELECT DISTINCT ?newstedBand WHERE {
  <http://dbpedia.org/resource/Jason_Newsted> dbo:memberOfBand ?newstedBand .
  FILTER NOT EXISTS { ?newstedBand dbo:bandMember <http://dbpedia.org/resource/Metallica> }
}

# Step 5: Find intersection of band members from producer's band and Metallica or Newsted-associated bands
SELECT DISTINCT ?commonMember WHERE {
  VALUES (?member) {
    { SELECT ?producerMember WHERE {
      ?producer dbo:memberOfBand ?band .
      ?band dbo:bandMember ?producerMember .
    }}
    { SELECT ?metallicaMember WHERE {
      <http://dbpedia.org/resource/Metallica> dbo:bandMember ?metallicaMember .
    }}
    { SELECT ?newstedBandMember WHERE {
      ?newstedBand dbo:bandMember ?newstedBandMember .
      <http://dbpedia.org/resource/Jason_Newsted> dbo:memberOfBand ?newstedBand .
    }}
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
161,39,test,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce ?commander WHERE {
  ?event a dbo:Battle .
  ?event dbo:participatedIn [ 
    a dbo:MilitaryConflict ;
    rdfs:label ""Spanish Civil War""@en
  ].
  
  ?franco dbo:alias ""El Director"" .
  ?franco dbp:militaryForce ?militaryForce .

  OPTIONAL {
    ?militaryForce dbo:commander ?commander .
  }
}
```",4,5,5,3,2,3,3,71,0,0,32,0,0.0,0
959,63,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of Yōichi Masuzoe.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?manager ?almaMater
WHERE {
  # Find Yōichi Masuzoe's native country
  ?yMasuzoe a dbo:Person ;
            dbo:birthDate ?birthDate ;
            dbo:nativePlace ?nativeCountry .
  
  FILTER (YEAR(?birthDate) = 1958)
  FILTER (?nativeCountry IN (dbr:Japan))

  # Find Takashi Sekizuka's team manager
  ?team a dbo:SoccerTeam ;
        dbo:manager ?manager .

  ?sekizuka a dbo:SoccerPlayer ;
            dbo:playsFor ?team .
  
  # Ensure the manager is associated with an educational institution in Japan
  ?almaMater a dbo:University ;
             dbo:country dbr:Japan ;
             dbo:alumni ?manager .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
959,49,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?teamManager
WHERE {
    # Step 1: Find Eiji Ōtsuka's alma mater
    dbr:Eiji_Ōtsuka dbo:almaMater ?university .
    
    FILTER (isLiteral(?university) && langMatches(lang(?university), ""ja"") &&
            strContains(str(?university), ""Japan"") &&
            ?university a dbo:University)

    # Step 2: Find the manager of the 1998 Kashima Antlers season
    dbr:Kashima_Antlers_1998_season dbo:manager ?kashimaManager .

    # Step 3: Identify the team managed by this manager (sports manager)
    ?kashimaManager dbo:teamManaged ?managedTeam .
    
    # Ensure the manager is a sports manager
    ?kashimaManager a dbo:SportsManager .

    # Step 4: Find the current manager of that team
    ?managedTeam dbo:manager ?teamManager .
}
```",5,10,6,3,2,3,3,71,0,0,2,0,0.0,0
391,32,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as Hub City.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Find Michael Ballhaus's notable works
  ?work dbo:director dbr:Michael_Ballhaus .
  
  # Identify actors in these works
  ?work dbo:starring ?actor .

  # Check if the actor is from Columbia, South Carolina (Hub City)
  ?actor dbp:birthPlace dbr:Columbia,_South_Carolina .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
54,62,test,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?predecessor dbo:successor dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .
  
  # Find grandparent of Thado Minsaw of Prome
  ?thadoMinsawParent dbo:child dbr:Thado_Minsaw_of_Prome ;
                    dbo:parent ?grandparent .

  # Find grandchild of Thinkhaya of Pagan
  ?thinkhayaChild dbo:father ?thinkhayaFather ;
                  dbo:child ?thinkhayaGrandchild .
  
  # Match the person with both conditions
  FILTER (?predecessor = ?grandparent && ?predecessor = ?thinkhayaGrandchild)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
488,49,test,"Give me the birth place of the commander in Boshin War and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Step 1: Find Tokugawa Masako's spouse
SELECT ?spouse WHERE {
    dbp:Tokugawa_Masako dbo:spouse ?spouse .
}

# Step 2: Check if the spouse's father is royalty and find his administration
SELECT DISTINCT ?father ?administration WHERE {
    ?spouse dbo:parent ?father .
    OPTIONAL { ?father rdf:type dbo:Monarch . }
    OPTIONAL { ?father dbo:office ?adminRole .
               ?adminRole dbo:administrativeUnit ?administration }
}

# Step 3: Find the commander in the Boshin War
SELECT DISTINCT ?commander WHERE {
    dbp:Boshin_War dbo:commander ?commander .
}

# Step 4: Get the birthplace of the commander
SELECT DISTINCT ?birthPlace WHERE {
    ?commander dbo:birthPlace ?birthPlace .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
747,71,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v7 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?athlete
WHERE {
  # Find the decedent's birth date
  ?decedent a dbo:Person ;
            dbo:birthDate ?birthDate .

  # Find an athlete and soccer player born in Zolotonosha on the same birth date as the decedent
  ?athlete a dbo:Person, dbo:Athlete ;
           dbo:sport dbr:Soccer ;
           dbo:birthDate ?birthDate ;
           dbo:placeOfBirth dbr:Zolotonosha .

  # Find the person born as Shèna and their band
  ?shena a dbo:Person ;
         rdfs:label ""Shèna""@en .
  ?band1 dbo:bandMember ?athlete ;
         dbo:bandMember ?shena .

  # Find the writer of Amba Shepherd's song and their band
  ?song a dbo:Song ;
        dbo:workCreator dbr:Amba_Shepherd .
  ?writer a dbo:Person ;
          dbo:writer ?song .
  ?band2 dbo:bandMember ?athlete ;
         dbo:bandMember ?writer .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
492,63,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/author> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Frédéric-Georges Herr as a commander in a war
  ?herr dbo:birthName ""Frédéric-Georges Herr""@en .
  ?war dbo:commander ?herr .
  
  # Capital of Algeria is Algiers
  dbr:Algiers a dbo:Settlement ;
             rdfs:label ""Algiers""@en .

  # Author of ""French Algeria""
  ?book dbo:title ""French Algeria""@en ;
        dbo:author ?author .
  
  # Person deceased at both Algiers and the author's work location
  ?person dbo:deathPlace dbr:Algiers ;
          dbo:deathPlace ?workLocation .
  
  ?workLocation dbo:employee ?author .

  # Linking commander to the person who died in these places
  ?commander dbo:deathPlace dbr:Algiers ;
             dbo:deathPlace ?workLocation .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
617,68,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfChild ?spouse
WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus dbp:father dbr:Antiochus_III_the_Great .
  
  # Step 2: Find his child
  ?child dbo:parent ?antiochus .
  
  # Step 3: Find the parent of this child (a royalty)
  ?parentOfChild dbo:child ?child .
  FILTER EXISTS { ?parentOfChild a dbo:Monarch . }
  
  # Step 4: Identify successor of Antiochus II Theos
  ?antiochusII dbr:Antiochus_II_Theos .
  ?successor dbp:succeededBy ?antiochusII .
  FILTER EXISTS { ?successor a dbo:Monarch . }
  
  # Step 5: Find the child of this successor (a royalty)
  ?childOfSuccessor dbo:parent ?successor .
  FILTER EXISTS { ?childOfSuccessor a dbo:Monarch . }
  
  # Step 6: Identify spouse of the child of the successor
  ?spouse dbo:spouse ?childOfSuccessor .
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
981,19,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in the region of Time in Indonesia.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:BeautyQueen .
  ?person dbo:author dbr:Kamikaze_Girls .
  ?person dbo:region dbr:Time_(Indonesia) .
  ?person dbo:birthPlace ?birthPlace .
}
```",5,6,6,3,2,3,2,20,0,0,19,0,0.0,0
378,60,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the person born as the birth name of Carl Pontus Gahn.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?triggeClaimToFame ?gahnWar
WHERE {
  # Find Thomas Trigge's claim to fame in a military conflict
  dbr:Thomas_Trigge dbo:knownFor ?triggeClaimToFame .
  FILTER (STRSTARTS(STR(?triggeClaimToFame), ""http://dbpedia.org/ontology/MilitaryConflict""))

  # Find the war associated with Carl Pontus Gahn using his birth name
  dbr:Carl_Pontus_Gahn dbo:birthName ?gahnBirthName .
  FILTER (STR(?gahnBirthName) = ""Carl Pontus Gahn"")
  
  ?war dbo:name ?gahnWar ;
       dbo:participatedIn dbr:Carl_Pontus_Gahn .

}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
9,33,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
# Query for the alma mater of an awardee of the Royal Medals
SELECT DISTINCT ?almaMater WHERE {
  ?person dbo:award dbr:Royal_Medals .
  ?person dbo:almaMater ?almaMater .
}

UNION

# Query for John Alderdice's alma mater
SELECT DISTINCT ?almaMater WHERE {
  dbpedia:John_Alderdice dbo:almaMater ?almaMater .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
981,18,test,"Give me the birth place of the person born, that is a beauty queen, as  and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/birthName> """"@en . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:BeautyQueen .
  ?person dbo:residence dbr:Salak,_North_Sumatra .
  ?person dbo:birthPlace ?birthPlace .
}
```",5,6,6,3,2,3,2,20,0,0,19,0,0.0,0
54,49,test,"Give me the child of the father of Soe Min Wimala Dewi and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi a dbo:Person ;
                   dbo:father ?father .

  FILTER (str(?soeMinWimalaDewi) = ""Soe_Min_Wimala_Dewi"") .

  # Step 2: Find the child of Soe Min Wimala Dewi's father
  ?child dbo:parent ?father .

  # Step 3: Identify Thihapate of Mohnyin's reference
  ?thihapate a dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .

  # Step 4: Find the child of Thihapate of Mohnyin
  ?childOfThihapate dbo:parent ?thihapate .

  # Step 5: Identify predecessor of Thihapate's child
  ?predecessor dbo:successor ?childOfThihapate ;
              a dbo:OfficeHolder, dbo:Royalty .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
161,48,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?forceName WHERE {
  ?mola dbo:birthPlace dbr:Spain .
  ?mola a dbo:Person ;
        rdfs:label ""Emilio Mola""@en .

  ?conflict dbo:type [ 
              a dbo:MilitaryConflict ;
              dbo:societalEvent true ;
              dbo:event true
            ] ;
            dbo:place dbr:Spain .

  ?mola dbo:commanderOf ?force .
  ?force rdfs:label ?forceName .

  FILTER(CONTAINS(LCASE(?conflict), ""francoist spain""))
}
```",5,9,6,3,2,3,3,71,0,0,34,0,0.0,0
303,27,test,"Give me the party of Guillermo Endara and party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?endaraParty ?ariasBirthPlace ?valleCountry
WHERE {
  # Guillermo Endara's political party
  dbr:Guillermo_Endara dbo:party ?endaraParty .

  # Arnulfo Arias Madrid's birthplace
  dbr:Arnulfo_Arias_Madrid dbo:birthPlace ?ariasBirthPlace .
  
  # El Valle de Antón's country
  dbr:El_Valle_de_Antón dbo:country ?valleCountry .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
488,45,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of Enomoto Takeaki and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?administration ?birthPlace ?deathPlace 
WHERE {
  # Tokugawa Masako's spouse
  ?masako dbo:spouse ?spouse .
  
  FILTER(STR(?masako) = ""Tokugawa_Masako"") .

  # Spouse's father and check if he is royalty
  ?spouse dbo:father ?royalFather .
  ?royalFather rdf:type dbo:RoyalFamilyMember .

  # Administration of the royal father
  ?royalFather dbo:positionHeld ?administration .

  # Enomoto Takeaki's birthplace
  ?enomoto dbo:birthPlace ?birthPlace .
  FILTER(STR(?enomoto) = ""Enomoto_Takeaki"") .

  # Tokugawa Ieyasu's death place
  ?ieyasu dbo:deathPlace ?deathPlace .
  FILTER(STR(?ieyasu) = ""Tokugawa_Ieyasu"") .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
281,61,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?birthPlaceCountry ?militaryUnit
WHERE {
  # Identify the leader of the 1962 New South Wales state election
  ?leader a dbo:Politician ;
          dbo:officeHolder ""New South Wales""^^xsd:string ;
          dbo:election ""1962 New South Wales state election""@en .
  
  # Determine the birthplace country of this leader
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace geo:lat ?lat ; geo:long ?long .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  BIND(wd:countryFromLatLong(?lat, ?long) AS ?birthPlaceCountry)
  
  # Find the military unit in the New Zealand Army associated with their profession
  ?leader dbo:militaryUnit ?militaryUnit .
  FILTER EXISTS { ?militaryUnit a dbo:MilitaryUnit ; dbo:nationality dbr:New_Zealand }
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
421,23,test,Give me the person born as the birth name of Dino Merlin and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?awardee WHERE {
  # Step 1: Find Dino Merlin's birth name
  VALUES (?dinoMerlin) { dbr:Dino_Merlin }
  
  ?dinoMerlin dbo:birthName ?birthName .
  
  # Step 2: Find a band member with the same birth name
  ?bandMember dbo:birthName ?birthName .
  
  # Ensure it's not Dino Merlin himself
  FILTER (?bandMember != ?dinoMerlin)
  
  # Step 3: Check if this band member is part of an awardee band
  ?bandMember dbo:memberOfBand ?band .
  ?band dbo:award ?awardee .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
801,19,test,Give me the producer of Westside Story (song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?profession 
WHERE {
  # Find the producer of ""Westside Story"" (song)
  dbr:Westside_Story_(song) dbo:producer ?producer .

  # Find the profession of Lamont Cranston, The Shadow's alter ego
  dbr:Lamont_Cranston dbo:profession ?profession .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
994,44,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedBandMeshuggah ?associatedBandSASlayer
WHERE {
  # Find band members of Donald Maynard Dokken
  ?dokken a dbo:Person ;
          foaf:name ""Donald Maynard Dokken"" ;
          dbo:musicalArtist true .
  
  ?dokken dbo:bandMember ?bandMember .

  # Find bands associated with these band members that are groups/organizations
  ?bandMember dbo:associatedBand ?associatedBandMeshuggah .
  FILTER EXISTS { ?associatedBandMeshuggah a (dbo:Band|dbo:Group|dbo:Organization) }

  # Find bands associated with Meshuggah
  dbr:Meshuggah dbo:associatedBand ?meshuggahAssociatedBand .

  # Find bands associated with S.A. Slayer
  dbr:SASlayer dbo:associatedBand ?saslayerAssociatedBand .
  
  # Ensure the bands are groups/organizations
  FILTER EXISTS { ?meshuggahAssociatedBand a (dbo:Band|dbo:Group|dbo:Organization) }
  FILTER EXISTS { ?saslayerAssociatedBand a (dbo:Band|dbo:Group|dbo:Organization) }

  # Return results
  BIND(?associatedBandMeshuggah AS ?associatedBand)
  BIND(?saslayerAssociatedBand AS ?associatedBandSASlayer)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
232,36,test,"Give me the child of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child ?settlement ?politician WHERE {
  # Step 1: Find Jon Pertwee's children
  dbr:Jon_Pertwee dbo:child ?child .

  # Step 2: Determine the child's place of residence that is a settlement in Britain
  ?child dbo:residence ?place .
  ?place rdf:type dbo:Settlement ;
         dbo:country dbr:United_Kingdom .

  # Step 3: Find a French politician with an office
  ?politician rdf:type dbo:Politician ;
              dbo:officeHolder ?office ;
              dbo:nationality dbr:France .

  # Step 4: Match the native residence of this politician to the settlement identified earlier
  ?politician dbo:nativePlace ?settlement .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
404,64,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?childBirthName WHERE {
    ?princess a dbo:Person ;
              dbo:birthName ""Princess Victoria Louise of Prussia"" .
    
    ?princess dbo:spouse ?spouse .

    ?spouse dbo:parent ?father .
    FILTER EXISTS { ?father rdf:type dbo:Man }

    ?father dbo:child ?child .
    FILTER EXISTS { ?child rdf:type dbo:Monarch }
    
    ?child dbo:birthName ?childBirthName .
    ?child dbo:parent ?princeErnestAugustus .

    ?princeErnestAugustus dbo:birthDate ?date ;
                          dbo:birthYear ""1914""^^xsd:gYear .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,36,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorLabel WHERE {
  ?actor a dbo:Person ;
         dbo:nativePlace dbr:Compton,_California .
  ?actor rdfs:label ?actorLabel .
  FILTER (lang(?actorLabel) = ""en"")
  
  ?movie dbo:film dbr:Some_Movie ; # Replace with the specific movie if known
         a dbo:Film, dbo:Work, dbo:TelevisionShow .
  ?actor dbo:actedIn ?movie .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
9,55,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Find the Royal Medal awardee who is also known as ""The QUB""
  ?person dbo:awardReceived dbr:Royal_Medal ;
          rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""the qub"")) .

  # Get the alma mater of this person
  ?person dbo:almaMater ?almaMater .

  # Find the mayor of Northern Ireland Forum and their alma mater
  ?mayor dbo:position dbr:Northern_Ireland_Forum_Mayor ;
         dbo:almaMater ?mayorAlmaMater .
  
  # Ensure the alma maters match
  FILTER(?almaMater = ?mayorAlmaMater)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
328,40,test,Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Joseph Stalin""@en .
  
  OPTIONAL { ?person dbo:commanderOf dbr:Eastern_Front_(World_War_II) . }
  OPTIONAL { ?person dbo:leaderOf dbr:People's_Commissariat_of_Defence_of_the_Soviet_Union . }
  OPTIONAL { ?person dbo:award dbr:Order_of_the_Red_Banner ; 
              dbo:awardedFor dbr:Volcano_Islands_campaign ; 
              dbo:awardedFor dbr:Ryukyu_Islands_campaign . }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
626,16,test,"Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . },"```sparql
# Query for the award received by Aleksey Petrovich Yermolov
SELECT ?award WHERE {
  wd:Q123456 dbo:award ?award .
}

# Query for the military conflict where he was a commander under Alexander I of Russia
SELECT ?conflict WHERE {
  wd:Q123456 dbo:militaryConflict ?conflict ;
             dbo:commanderOf ?commander .
  ?commander rdfs:label ""Alexander I of Russia""@en .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Aleksey Petrovich Yermolov.",4,5,5,2,2,3,2,20,0,0,21,0,0.0,0
465,8,test,"Give me the death place of Jiřina Štěpničková and administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?leaderName ?party ?organization
WHERE {
  # Part to get Jiřina Štěpničková's death place
  dbr:Ji%C5%99ina_%C5%A0t%C4%9Bpn%C3%AD%C4%8Dkov%C3%A1 dbo:deathPlace ?deathPlace .

  # Part to get the leader of the Chamber of Deputies and their party/organization
  {
    SELECT DISTINCT ?leaderName ?party ?organization WHERE {
      dbr:Chamber_of_Deputies_of_the_Czech_Republic dbo:chairman ?leader .
      ?leader foaf:name ?leaderName .
      
      OPTIONAL { ?leader dbo:party ?party . }
      
      # Assuming the organization is related through a property like 'affiliation'
      OPTIONAL { ?leader dbo:affiliation ?organization . }
    }
  }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
488,65,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Matsudaira Tadamasa's paternal lineage
SELECT ?grandfatherDeathPlace WHERE {
  ?matsudairaTadamasa a dbo:Person ;
                     foaf:name ""Matsudaira Tadamasa""@en .
  ?matsudairaFather dbo:child ?matsudairaTadamasa ;
                    dbo:father ?matsumotoFather .
  ?matsumotoFather dbo:deathPlace ?grandfatherDeathPlace .
}

# Query for Emperor Go-Mizunoo's father's administration
SELECT ?administration WHERE {
  ?goMizunoo a dbo:Person ;
             foaf:name ""Emperor Go-Mizunoo""@en .
  ?goMizunooFather dbo:child ?goMizunoo ;
                   dbo:officeHolder ?office .
  ?office dbo:administration ?administration .
}

# Query for a commander in the Boshin War's birthplace
SELECT ?commanderBirthPlace WHERE {
  ?boshinCommander a dbo:Person ;
                   foaf:name ?name ;
                   dbo:birthPlace ?commanderBirthPlace .
  FILTER(CONTAINS(LCASE(?name), ""commander"") && CONTAINS(LCASE(?name), ""boshin war""))
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
488,68,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .

  # Identify the war Saitō Hajime participated in
  OPTIONAL { 
    ?war dbo:participatedIn dbr:Saitō_Hajime .
    FILTER (dbo:War && dbo:Event && dbo:SocietalEvent) 
  }

  # Matsudaira Tadamasa's father and his administrative role under Emperor Go-Mizunoo
  ?father dbo:administratorOf dbr:Emperor_Go-Mizunoo .

  # Death place of Matsudaira Tadamasa's father
  ?father dbo:deathPlace ?deathPlace .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
184,57,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Géza von Habsburg and parent of the child of Archduke Joseph Francis of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandparent
WHERE {
  # Archduke Ladislaus Philipp of Austria's parent who is a royalty
  ?ladislaus dbo:childOf ?parent .
  ?parent rdf:type dbo:Person ;
          dbo:royalty true .

  # Géza von Habsburg's grandparent
  ?geza dbp:father ?grandparent .
  ?parent dbo:child ?geza .

  # Archduke Joseph Francis of Austria's child's great-grandparent
  ?joseph dbo:childOf ?ladislaus .
  ?josephChild dbo:child ?joseph .
  ?grandparent dbo:child ?parent .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
488,50,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace WHERE {
  # Matsudaira Tadamasa's father (an office holder)
  ?matsudairaTadamasa a dbo:Person ;
                     dbo:father ?officeHolderFather .

  # Office Holder's father (a politician) and his death place
  ?officeHolderFather dbo:father ?politicianFather .
  ?politicianFather dbo:deathPlace ?deathPlace .

  # Emperor Go-Mizunoo and his father's administration
  dbr:Emperor_Go-Mizunoo dbo:father ?goMizunooFather .
  ?goMizunooFather dbo:officeHolder ?administration .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,56,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of Giulio Andreotti and reference to the name of Italian People's Party (1994).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?romanoBirthName ?prodiParty ?andreottiParty ?ippDescription
WHERE {
  # Romano Prodi's birth name
  dbr:Romano_Prodi dbo:birthName ?romanoBirthName .

  # Romano Prodi's party
  OPTIONAL { 
    dbr:Romano_Prodi dbo:party ?prodiParty .
  }

  # Giulio Andreotti's party
  OPTIONAL {
    dbr:Giulio_Andreotti dbo:party ?andreottiParty .
  }
  
  # Italian People's Party (1994) description
  dbr:Italian_People%27s_Party_(1994) rdfs:comment ?ippDescription .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
232,66,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v6 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
# Step 1: Identify Sean Pertwee's claims to fame (films and military conflicts)
SELECT ?film ?conflict WHERE {
    wd:Q123456 dbo:claimToFame ?work .
    FILTER EXISTS { ?work rdf:type dbo:Film . }
    BIND(?work AS ?film)
}
UNION
{
    wd:Q123456 dbo:claimToFame ?work .
    FILTER EXISTS { ?work rdf:type dbo:MilitaryConflict . }
    BIND(?work AS ?conflict)
}

# Step 2: Find actors of these films and conflicts
SELECT DISTINCT ?actor WHERE {
    VALUES (?film ?conflict) { (<film_uri_1> <conflict_uri_1>) ... } # Replace with actual URIs from step 1
    ?film dbo:starring ?actor .
    UNION
    ?conflict dbo:participant ?actor .
}

# Step 3: Identify French native politicians among these actors
SELECT DISTINCT ?politician WHERE {
    VALUES (?actor) { (<actor_uri_1> <actor_uri_2>) ... } # Replace with actual URIs from step 2
    ?actor rdf:type dbo:Actor ;
           dbo:nationality wd:Q142 . # Q142 is the DBpedia URI for France
           dbo:occupation dbo:Politician .
}

# Step 4: Find their residence which is a British settlement
SELECT DISTINCT ?residence WHERE {
    VALUES (?politician) { (<politician_uri_1> <politician_uri_2>) ... } # Replace with actual URIs from step 3
    ?politician dbo:residence ?residence .
    FILTER EXISTS { ?residence rdf:type dbo:Settlement . }
    FILTER EXISTS { ?residence dbo:country wd:Q145 . } # Q145 is the DBpedia URI for United Kingdom
}

# Step 5: Identify native of this settlement
SELECT DISTINCT ?native WHERE {
    VALUES (?residence) { (<residence_uri_1> <residence_uri_2>) ... } # Replace with actual URIs from step 4
    ?residence dbo:native ?native .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
378,64,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?triggeFame ?blakeFame ?gahnBirthName
WHERE {
  # Thomas Trigge's claim to fame in a military conflict
  ?trigge dbo:militaryConflict ?conflict .
  ?trigge foaf:name ""Thomas Trigge"" .

  # Joaquín Blake's claim to fame in a war
  ?blake dbo:militaryConflict ?war .
  ?blake foaf:name ""Joaquín Blake"" .

  # Carl Pontus Gahn's birth name
  ?gahn foaf:givenName ?birthName .
  ?gahn foaf:name ""Carl Pontus Gahn"" .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
9,48,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of Queen's University Belfast.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayorName ?almaMater ?nickname 
WHERE {
  # Find the nickname of Queen's University Belfast
  dbr:Queen's_University_Belfast dbo:nickname ?nickname .

  # Identify the current mayor or equivalent political leader of Belfast
  ?belfastLeader a dbo:Mayor ;
                 dbo:city dbr:Belfast ;
                 rdfs:label ?mayorName .
  
  # Find the alma mater of the identified leader
  OPTIONAL {
    ?belfastLeader dbo:almaMater ?university .
    FILTER(?university = dbr:Queen's_University_Belfast)
    BIND(""Queen's University Belfast"" AS ?almaMater)
  }
}
ORDER BY ?mayorName
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
528,54,test,Give me the war of the military force of Battle of Pisagua and war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleWar ?battleCommander ?camperoForce
WHERE {
  # Find the battle and its associated war
  dbr:Battle_of_Pisagua dbo:participatedIn ?battleWar .
  
  # Determine who commanded in the Battle of Pisagua on September 1, 1879
  OPTIONAL { 
    ?battleCommander dbo:date ?date ;
                     dbo:commanderOf ?battleWar .
    FILTER (YEAR(?date) = 1879 && MONTH(?date) = 9 && DAY(?date) = 1)
  }
  
  # Find Narciso Campero's military force
  dbr:Narciso_Campero dbo:memberOf ?camperoForce .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
161,46,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?franciscoMilitaryForce ?joseAntonioMilitaryForce
WHERE {
  # Francisco Largo Caballero's military force during the Spanish Civil War
  dbr:Francisco_Largo_Caballero dbo:militaryConflict [
    a dbo:MilitaryConflict ;
    dbo:participatingGroups ?group1 .
  ] .
  ?group1 rdfs:label ?franciscoMilitaryForce .

  # José Antonio Primo de Rivera's military force during the Spanish Civil War
  dbr:José_Antonio_Primo_de_Rivera dbo:militaryConflict [
    a dbo:MilitaryConflict ;
    dbo:participatingGroups ?group2 .
  ] .
  ?group2 rdfs:label ?joseAntonioMilitaryForce .

  FILTER (lang(?franciscoMilitaryForce) = 'en')
  FILTER (lang(?joseAntonioMilitaryForce) = 'en')
}
```",5,10,6,3,2,3,3,71,0,0,514,0,0.0,0
184,25,test,Give me the child of Archduke Joseph August of Austria and parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commonIndividual
WHERE {
  # Find a person who is a child of Archduke Joseph August of Austria
  ?child dbo:parent dbr:Archduke_Joseph_August_of_Austria .
  
  # Ensure this person is also a parent to any child of Archduke Joseph Francis of Austria
  ?commonIndividual dbo:parent ?grandChild .
  ?grandChild dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .

  # The common individual must be the same as the child found in the first condition
  FILTER (?child = ?commonIndividual)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,67,test,"Give me the commander in German campaign of 1813 and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
    # Identify the commander in the German campaign of 1813
    ?campaign dbo:partOf dbr:War_of_the_Sixth_Coalition ;
              dbo:commander ?commander .
    
    FILTER(CONTAINS(LCASE(STR(?campaign)), ""german campaign 1813""))

    # Identify military force known as 'Polish Horse'
    ?militaryForce a dbo:MilitaryUnit, dbo:Organization ;
                   rdfs:label ?unitLabel .

    FILTER(CONTAINS(LCASE(?unitLabel), ""polish horse"") || CONTAINS(LCASE(?unitLabel), ""chevau-légers polonais""))

    # Link the commander to the military force
    ?commander dbo:militaryUnit ?militaryForce .
    
    # Ensure the event is a societal and military conflict involving Rutger Jan Schimmelpenninck
    OPTIONAL {
        ?event dbo:participatedIn ?campaign ;
               dbo:participant dbr:Rutger_Jan_Schimmelpenninck .
        
        FILTER(CONTAINS(LCASE(STR(?event)), ""societal event"") && CONTAINS(LCASE(STR(?event)), ""military conflict""))
    }
}
```",7,14,8,3,3,3,3,71,0,0,7,0,0.0,0
16,57,test,Give me the spouse of Ted McGinley and person born as the birth name of Gigi Rice and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouseOfTedMcGinley ?personBornAsGigiRice ?professionOfUnnaturalActor
WHERE {
  # Find the spouse of Ted McGinley
  ?tedMcGinley dbo:spouse ?spouseOfTedMcGinley .
  FILTER(STR(?tedMcGinley) = ""http://dbpedia.org/resource/Ted_McGinley"")

  # Find a person born as Gigi Rice
  ?person foaf:name ""Gigi Rice""@en .
  BIND(?person AS ?personBornAsGigiRice)

  # Find the actor of Unnatural (TV series) and their profession
  ?unnatural dbo:actor ?actorOfUnnatural .
  ?actorOfUnnatural dbo:profession ?professionOfUnnaturalActor .
  FILTER(STR(?unnatural) = ""http://dbpedia.org/resource/Unnatural_(TV_series)"")
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
492,56,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in Franco-Hova Wars.","SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentAtCapital ?personDecedentAtWork ?francoHovaCommander
WHERE {
  # Step 1: Find the capital of Khemis Miliana District
  ?capital dbo:country dbr:Algeria .
  ?capital rdfs:label ""Khemis Miliana""@en .

  # Step 2: Find a person who died at this capital
  OPTIONAL {
    ?personDecedentAtCapital dbo:deathPlace ?capital ;
                             rdf:type dbo:Person .
  }

  # Step 3: Find a person associated with Joseph C. Satterthwaite's work
  OPTIONAL {
    ?work dbr:Joseph_C._Satterthwaite dbo:employee .
    ?personDecedentAtWork dbo:deathPlace ?work ;
                          rdf:type dbo:Person .
  }

  # Step 4: Find a commander in the Franco-Hova Wars
  OPTIONAL {
    ?francoHovaCommander dbo:participatedIn dbr:Franco-Hova_Wars ;
                         rdf:type dbo:MilitaryPerson .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,18,test,"Give me the landmark at elevation of the award of Nie Rongzhen and birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark
WHERE {
  # Nie Rongzhen's award and its elevation
  dbr:Nie_Rongzhen dbo:receivedAward ?award .
  
  # Assuming elevation is stored in a description or related property
  ?award dbo:elevation ?elevation .

  # The Boils as an organization and band
  dbr:The_Boils a dbo:Band ;
                a dbo:Organization .

  # A member of The Boils
  ?member dbo:associatedBand dbr:The_Boils .
  
  # Birthplace of the member
  ?member dbo:birthPlace ?birthPlace .

  # Landmark at the elevation of Nie Rongzhen's award
  ?landmark dbo:elevation ?elevation ;
            a dbo:Landmark .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
328,49,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonLeader WHERE {
  # Find Gustav Jonson's office and its leader
  ?gustavOffice dbo:officeHolder dbr:Gustav_Jonson .
  ?gustavOffice dbo:leader ?leader1 .
  
  # Ensure the leader's office is a government agency
  ?gustavOffice dbo:governmentAgency ?agency .

  # Find Bruce Fraser, 1st Baron Fraser of North Cape and his award
  dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape dbo:award ?award .
  
  # Find Bruce Fraser's office and its leader
  ?fraserOffice dbo:officeHolder dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
  ?fraserOffice dbo:leader ?leader2 .

  # Ensure the leader's office is a government agency
  ?fraserOffice dbo:governmentAgency ?agency2 .

  # Find common leadership between both offices
  FILTER (?leader1 = ?leader2)
  
  # Assign the common leader to the variable
  BIND(?leader1 AS ?commonLeader)

  # Ensure leaders are politicians or office holders
  ?commonLeader a dbo:OfficeHolder .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
778,20,test,"Give me the entity in the award of the awardee, that is American, of Wolf Prize in Medicine and author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v5 <http://dbpedia.org/property/author> ?v4 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v5 <http://dbpedia.org/ontology/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityAwarded
WHERE {
  # Step 1: Identify the author of Pushd and Popd
  ?author dbo:work ?software .
  FILTER regex(str(?software), ""Pushd|popd"", ""i"") .

  # Step 2: Find an American awardee of the Wolf Prize in Medicine
  ?awardee dbo:prize dbr:Wolf_Prize_in_Medicine ;
           dbo:nationality dbr:United_States_of_America .

  # Step 3: Determine which work by this awardee is software
  ?awardee dbo:work ?softwareAwardee .
  FILTER EXISTS { ?softwareAwardee a dbo:Software } .

  # Step 4: Identify the entity awarded to the author of Pushd and Popd
  ?author dbo:prize ?entityAwarded .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
427,65,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v6 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherParty ?prodiParty ?ippName
WHERE {
  # Find a notable MIT alumnus and their father's political party
  OPTIONAL {
    ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
    ?alumnus dbo:father ?father .
    ?father dbo:politicalAffiliation ?fatherParty .
  }

  # Find Romano Prodi's political affiliation
  dbr:Romano_Prodi dbo:party ?prodiParty .

  # Find the Italian People's Party (1994) name or reference
  OPTIONAL {
    ?ipp dbr:Italian_People%27s_Party_(1994) .
    ?ipp rdfs:label ?ippName .
    FILTER(LANG(?ippName) = 'en')
  }
}
```",7,9,8,3,3,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
161,53,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of Spanish Civil War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryConflict ?societalEvent WHERE {
  # Emilio Mola as commander in the Spanish Civil War
  ?militaryConflict a dbo:MilitaryConflict ;
                   dbo:commander ?commander .
  FILTER (?commander = dbr:Emilio_Mola) .

  # Societal events related to Francoist Spain and military conflicts
  ?societalEvent a dbo:SocietalEvent ;
                dbo:relatedTo ?militaryConflict ;
                dbo:place dbr:Francoist_Spain .
  
  # Linking societal event with the decedent at Francoist Spain (Francisco Franco)
  ?decedent a dbo:Person ;
            dbo:deathPlace dbr:Francoist_Spain ;
            dbo:causeOfDeath ?societalEvent .
  FILTER (?decedent = dbr:Francisco_Franco) .

  # Military force of the Spanish Civil War
  ?militaryConflict dbo:militaryForce ?force .
}
```",6,10,7,3,3,3,3,71,0,0,32,0,0.0,0
645,20,test,"Give me the alma mater of the child of the parent of Adela Pankhurst and entity in the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater ?country WHERE {
  # Step 1: Identify Adela Pankhurst's parent
  ?adela a dbo:Person ;
         foaf:name ""Adela Pankhurst""@en .
  ?parent dbo:child ?adela .

  # Step 2: Find the child of that parent (could be Adela or another sibling)
  ?child dbo:parent ?parent .

  # Step 3: Determine alma mater of this child
  ?child dbo:almaMater ?almaMater .

  # Step 4: Identify commander in Battle of Diamond Rock
  ?battle a dbo:Battle ;
          dbo:name ""Battle of Diamond Rock""@en .
  ?commander dbo:commanderInBattle ?battle .

  # Step 5: Find residence country of this commander
  ?residence dbo:country ?country ;
             dbo:resident ?commander .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
182,25,test,Give me the war of the work of Gotabhaya Rajapaksa and war of the author of 2019 Sri Lanka Easter bombings and entity in Sri Lanka.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war ?author ?entityInSriLanka
WHERE {
  # Gotabhaya Rajapaksa's war involvement
  ?person rdfs:label ""Gotabhaya Rajapaksa""@en .
  ?person dbo:role ?role .
  ?role dbp:relatedTo ?war .

  # Author of the 2019 Sri Lanka Easter bombings
  ?author rdfs:label ""Zahran Hashim""@en .
  ?author dbo:associatedWith ?bombingEvent .
  ?bombingEvent rdfs:label ""2019 Sri Lanka Easter bombings""@en .

  # Entity in Sri Lanka related to these events
  ?entityInSriLanka rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""sri lanka""))
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
16,26,test,Give me the professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?profession 
WHERE {
  ?series a dbo:TVSeries ;
          rdfs:label ""Unnatural (TV series)""@en .
  
  ?series dbo:castMember ?actor .

  ?actor dbo:profession ?profession .
}
```",3,3,4,3,1,3,3,71,0,0,40872,0,0.0,0
184,44,test,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the child of Archduke Joseph Francis of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity WHERE {
  # Step 1: Find child of Archduke Joseph Karl of Austria
  ?child1 dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  
  # Step 2: Find grandchild (child of the child) of Archduke Joseph Karl of Austria
  ?grandchild1 dbo:parent ?child1 .

  # Step 3: Find child of Archduke Joseph Francis of Austria
  ?child2 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Step 4: Find grandchild (child of the child) of Archduke Joseph Francis of Austria
  ?grandchild2 dbo:parent ?child2 .

  # Step 5: Find parent of Géza von Habsburg
  ?parentGéza dbo:child dbr:Géza_von_Habsburg .
  
  # Step 6: Identify the common entity that satisfies all conditions
  FILTER (?grandchild1 = ?grandchild2)
  FILTER (?commonEntity = ?grandchild1 && ?commonEntity = ?parentGéza)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
838,16,test,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?otherBandName
WHERE {
  ?member dbo:bandMember dbr:YU_Grupa .
  ?member rdf:type dbo:Artist ;
          rdf:type dbo:MusicalArtist .
  
  ?member dbo:bandMember ?otherBand .
  ?otherBand rdfs:label ?otherBandName .
  
  FILTER(LANG(?otherBandName) = 'en')
}
```",4,7,5,2,2,3,2,20,0,0,5,0,0.0,0
427,45,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of Giulio Andreotti and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiParty ?andreottiParty WHERE {
  # Romano Prodi's birth name and party affiliation
  VALUES (?romanoProdi) { dbr:Romano_Prodi }
  ?romanoProdi dbo:birthName ?birthName .
  ?romanoProdi dbo:partyAffiliation ?prodiParty .

  # Giulio Andreotti's party affiliation
  VALUES (?giulioAndreotti) { dbr:Giulio_Andreotti }
  ?giulioAndreotti dbo:partyAffiliation ?andreottiParty .

  # Ensure the parties are related to Partito Popolare Italiano
  FILTER EXISTS {
    ?prodiParty rdfs:label ""Partito Popolare Italiano""@en .
    ?andreottiParty rdfs:label ""Partito Popolare Italiano""@en .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
994,54,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of Don Dokken.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Step 1: Find Watchtower's associated artist
  ?watchtower dbr:Watchtower .
  ?watchtower dbo:associatedBand ?intermediateArtist .

  # Step 2: Find Fredrik Thordendal's band that is an organization
  ?fredrikThordendal dbr:Fredrik_Thordendal .
  ?fredrikThordendal dbo:bandMember ?thordendalsBand .
  ?thordendalsBand a dbo:Organization .

  # Step 3: Find Don Dokken's band member who is part of a band and organization
  ?donDokken dbr:Don_Dokken .
  ?donDokken dbo:bandMember ?dokkensBandMember .
  ?dokkensBandMember dbo:associatedBand ?dokkensBand .
  ?dokkensBand a dbo:Organization .

  # Step 4: Find the associated musical artist of the band member
  ?dokkensBandMember dbo:associatedBand ?finalArtist .

  FILTER(?intermediateArtist = ?thordendalsBand)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
92,48,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artistName ?band1 ?band2 WHERE {
  # Find the artist associated with the film ""Nevermore""
  ?film dbo:title ""Nevermore"" ;
        dbo:starring ?artist .
  
  ?artist rdfs:label ?artistName ;
          dbo:memberOfBand ?band1 .

  FILTER (lang(?artistName) = 'en')

  # Find the band associated with Joseph Michael Furney
  dbr:Joe_Satriani dbo:birthName ""Joseph Michael Furney"" ;
                   dbo:memberOfBand ?band2 .
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,70,test,"Give me the parent of the child of the child of Seti I and spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Nefertari.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Seti I's child (Child A)
  ?childA dbo:parent dbr:Seti_I ;
         a dbo:Person .

  # Child of Child A (Child B)
  ?childB dbo:parent ?childA ;
          a dbo:Person .

  # Commander in the Battle of Perire
  ?commander dbo:battle dbr:Battle_of_Perire ;
             a dbo:Person .

  # Father of the commander
  ?father dbo:child ?commander .

  # Spouse of the father
  ?spouse dbo:spouse ?father ;
          a dbo:Person .

  # Parent of Nefertari's child (Child C)
  ?nefertariChild dbo:parent dbr:Nefertari ;
                  a dbo:Person .
  
  ?parentNefertariChild dbo:child ?nefertariChild .

  # Check if the person is royalty
  ?person dbo:royalty true^^xsd:boolean .

  # Conditions to find the common individual
  FILTER (?spouse = ?person)
  FILTER (?parentNefertariChild = ?person)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
281,45,test,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryUnit ?officeHolder ?politician
WHERE {
  ?militaryUnit a dbo:MilitaryUnit ;
                dbo:memberOfMilitaryOrganization dbr:New_Zealand_Army ;
                dbo:associatedWith dbr:Beauchamp_Seymour_1st_Baron_Alcester .

  ?officeHolder a dbo:OfficeHolder ;
               dbo:memberOf ?militaryUnit ;
               dbo:politician ?politician .

  FILTER EXISTS { ?politician a dbo:Politician }
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
712,19,test,Give me the capital of the country of Armed Forces of South Russia and resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?capital ?restingPlace WHERE {
  # Capital of Ukraine
  dbr:Ukraine dbo:capital ?capital .

  # Resting place of a notable awardee from the Soviet Union
  ?person dbo:nationality dbr:Soviet_Union ;
          dbo:award ?award .
  FILTER EXISTS { ?award dbo:country dbr:Soviet_Union }
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }

  # Limit to a specific notable awardee for clarity
  VALUES ?person {
    dbr:Nikolai_Tikhonov   # Example of a notable Soviet figure
  }
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
959,56,test,"Give me the native of Japan and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native ?manager 
WHERE {
  # Step 1: Find Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  
  FILTER (strstarts(str(?university), ""http://dbpedia.org/resource/"") &&
          EXISTS { ?university a dbo:University } &&
          EXISTS { ?university dbo:country dbr:Japan })

  # Step 2: Find the manager of the 1998 Kashima Antlers season
  ?manager dbo:sportsManagerForTeam ?team .
  ?team dbo:season ?season .
  
  FILTER (?season = ""1998"" && strstarts(str(?team), ""http://dbpedia.org/resource/Kashima_Antlers""))

  # Step 3: Find the native and manager of that manager
  ?manager dbo:nationality dbr:Japan .
  ?native dbo:managerOf ?manager .
  
  FILTER EXISTS { ?native a dbo:Person }
}
```",6,11,7,3,3,3,3,71,0,0,2,0,0.0,0
404,61,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of the spouse of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?royalParent
WHERE {
  # Step 1: Identify Prince George William of Hanover's spouse
  ?princeGeorge a dbo:Person ;
               foaf:name ""Prince George William of Hanover""@en .
  
  ?spouse dbp:spouseOf ?princeGeorge .

  # Step 2: Find the father of Princess Victoria Louise of Prussia (who is the spouse)
  ?princessVictoriaLouise a dbo:Person ;
                         foaf:name ""Princess Victoria Louise of Prussia""@en .
  
  ?father dbp:child ?princessVictoriaLouise ;
          rdf:type dbo:Person .

  # Step 3: Determine the child of this father who is royalty
  ?royalChild dbo:parent ?father ;
              rdf:type dbo:RoyalFamilyMember .

  # Step 4: Identify the parent of this royal child
  ?royalParent dbo:child ?royalChild .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
294,27,test,"Give me the entity in the birth place, that is a settlement, of Marion James and resting place of the architect of P. D. Houston Jr. House and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?result <http://dbpedia.org/ontology/location> ?v0 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Marion James' birthplace
  ?marionJames a dbo:Person ;
               dbo:birthPlace ?birthPlace .
  
  FILTER (isBlank(?birthPlace) || ?birthPlace a dbo:Settlement)

  # Architect of P. D. Houston Jr. House and their resting place
  dbr:P._D._Houston_Jr._House dbo:architect ?architect ;
                             dbo:deathPlace ?restingPlaceArchitect .

  # Luke Lea's resting place
  dbr:Luke_Lea_(American_politician,_born_1879) dbo:deathPlace ?restingPlaceLukeLea .

  # Find common settlement
  FILTER (?birthPlace = ?restingPlaceArchitect && ?birthPlace = ?restingPlaceLukeLea)
  
  BIND(?birthPlace AS ?settlement)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
92,69,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Query 1: Find the musical artist associated with ""Nevermore (2006 film)""
SELECT ?artist WHERE {
    ?film dbo:title ""Nevermore""@en .
    FILTER(STRSTARTS(STR(?film), STR(dbpedia:Nevermore_(2006_film))))
    ?film dbo:musicalArtist ?artist .
}

# Query 2: Find the band Jim Sheppard is a member of
SELECT ?band WHERE {
    dbpedia:Jim_Sheppard dbo:memberOfBand ?band .
}

# Query 3: Find Joseph Michael's birth name and associated band
SELECT ?birthName, ?band WHERE {
    ?person foaf:name ""Joseph Michael""@en ;
            dbo:birthName ?birthName .
    ?person dbo:memberOfBand ?band .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
701,57,test,Give me the spouse of the father of Merneptah and parent of the child of the child of Seti I and parent of Meritamen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Ramesses_II dbo:spouse ?spouse .
}
```",6,6,7,3,3,3,3,71,0,1,1,0.0,0.0,0
281,68,test,"Give me the war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v7 . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?warOfAwardee ?leaderBirthCountry ?heatherRoyUnit
WHERE {
  # Jonathon Band's award
  dbr:Jonathon_Band dbo:award ?award .
  
  # Awardee of the award and their associated war
  ?awardee dbo:receivedAward ?award ;
          dbo:participatedIn ?warOfAwardee .

  # Leader of the 1962 New South Wales state election and their birthplace country
  ?election dbr:1962_New_South_Wales_state_election dbo:leader ?leader .
  ?leader dbo:birthPlace ?birthPlace .
  FILTER (isBlank(?birthPlace) || ?birthPlace a dbo:Country)

  # Heather Roy's military unit profession
  dbr:Heather_Roy dbo:militaryUnit ?heatherRoyUnit .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
161,31,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?personDecedent
WHERE {
  # Identify military forces involved in the Spanish Civil War
  ?civilWar a dbo:MilitaryConflict ;
           rdfs:label ""Spanish Civil War""@en .
  
  ?civilWar dbo:militaryParticipant ?militaryForce .

  # Find persons associated with Francoist Spain who might have been part of these forces
  ?personDecedent dbo:deathPlace dbr:Spain ;
                  dbo:causeOfDeath ?cause ;
                  rdfs:label ?nameLabel .
  
  FILTER CONTAINS(LCASE(?nameLabel), ""franco"") # Assuming a connection to Francoist Spain

  OPTIONAL {
    ?militaryForce dbo:militaryParticipant ?personDecedent .
  }
}
```",4,7,5,3,2,3,3,71,0,0,514,0,0.0,0
820,19,test,Give me the child of the parent of the professional in Actor and professional in the award of Scott McCloud.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v4 <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childClass
WHERE {
  # Step 1: Find Scott McCloud and his award
  dbr:Scott_McCloud a dbo:Person ;
                    dbo:award ?award .

  # Step 2: Find professionals associated with the same award
  ?person a dbo:Person ;
          dbo:award ?award ;
          rdf:type ?professionalType .

  # Step 3: Determine their professional class (e.g., Actor)
  ?professionalType rdfs:subClassOf* dbo:Actor .

  # Step 4: Find subclasses of this professional class
  ?childClass rdfs:subClassOf+ ?professionalType .
}
```",5,5,6,3,2,3,2,20,0,0,128,0,0.0,0
161,68,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForceDecedent ?militaryForcePredecessor ?forceEmilioMola

WHERE {
  # Step 1: Identify Francoist Spain's Decedent
  ?decedent dbo:decedent dbr:Francoist_Spain .
  
  # Step 2: Military Force of the Decedent
  ?militaryForceDecedent a dbo:MilitaryConflict ;
                        dbo:militaryForce ?decedent ;
                        rdf:type dbo:SocietalEvent .

  # Step 3: Predecessor of Indalecio Prieto
  ?predecessor dbo:predecessor dbr:Indalecio_Prieto .

  # Step 4: Military Force of the Predecessor
  ?militaryForcePredecessor a dbo:MilitaryConflict ;
                           dbo:militaryForce ?predecessor ;
                           rdf:type dbo:SocietalEvent .

  # Step 5: Commander in the Force of Emilio Mola
  ?forceEmilioMola dbo:commander dbr:Emilio_Mola .
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
16,50,test,Give me the professional in the profession of the actor of Unnatural (TV series) and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
# Query 1: Find the actor of ""Unnatural"" (TV series) and their profession
SELECT ?actor ?profession WHERE {
  ?series dbo:title ""Unnatural (TV series)""@en .
  ?series dbo:starring ?actor .
  ?actor a dbo:Actor ;
         dbo:occupation ?profession .
}

# Query 2: Find the birth name of Gigi Rice and identify a person with that birth name
SELECT ?person ?birthName WHERE {
  # Get Gigi Rice's birth name
  ?gigi a dbo:Person ;
        foaf:name ""Gigi Rice""@en ;
        foaf:nick ?birthName .
  
  # Find any person with the same birth name and their profession
  ?person a dbo:Person ;
          foaf:nick ?birthName ;
          dbo:occupation ?profession .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
54,22,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin's children
  ?child dbo:parent dbr:Thihapate_of_Mohnyin .
  
  # The child is also a child of Thinkhaya of Pagan
  ?child dbo:parent dbr:Thinkhaya_of_Pagan .

  # This person must be royalty and/or an office holder
  ?child rdf:type dbo:Monarch .
  OPTIONAL { ?child dbo:officeHolder ?office . }

  # Find the predecessor of this individual
  ?child dbo:predecessor ?predecessor .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
492,50,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInOtherConflict
WHERE {
  # Step 1: Find the commander in the Battle of Verdun
  ?battleOfVerdun a dbo:MilitaryConflict ;
                  dbo:commander ?verdunCommander .

  # Step 2: Identify another military conflict or event involving this commander
  ?otherEvent a (dbo:MilitaryConflict|dbo:Event) ;
              dbo:commander ?verdunCommander ;
              dbo:commander ?commanderInOtherConflict .

  # Step 3: Find a person who died in Algiers, the capital of Algeria
  ?person a dbo:Person ;
          dbo:deathPlace dbr:Algiers .

  # Step 4: Check if this person is the same as the commander from step 2
  FILTER (?commanderInOtherConflict = ?person)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
488,67,test,"Give me the birth place of Enomoto Takeaki and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT 
  ?enomotoBirthPlace 
  ?tokugawaSpouseFatherAdmin 
  ?matsudairaFatherDeathPlace 
  ?matsudairaGrandfatherDeathPlace
WHERE {
  # Enomoto Takeaki's birth place
  dbr:Enomoto_Takeaki dbo:birthPlace ?enomotoBirthPlace .

  # Tokugawa Masako's spouse and their father
  dbr:Tokugawa_Masako dbo:spouse ?tokugawaSpouse .
  FILTER (EXISTS { ?tokugawaSpouse a dbo:Royalty }).
  ?tokugawaSpouse dbo:father ?tokugawaSpouseFather .
  ?tokugawaSpouseFather dbo:countryAdministered ?tokugawaSpouseFatherAdmin .

  # Matsudaira Tadamasa's father and his death place
  dbr:Matsudaira_Tadamasa dbo:father ?matsudairaFather .
  FILTER (EXISTS { ?matsudairaFather a dbo:OfficeHolder }).
  ?matsudairaFather dbo:deathPlace ?matsudairaFatherDeathPlace .

  # Matsudaira Tadamasa's grandfather and his death place
  ?matsudairaFather dbo:father ?matsudairaGrandfather .
  FILTER (EXISTS { ?matsudairaGrandfather a dbo:Politician }).
  ?matsudairaGrandfather dbo:deathPlace ?matsudairaGrandfatherDeathPlace .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
184,59,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchildParent
WHERE {
  # Step 1: Find Archduke Ladislaus Philipp of Austria's parent
  ?ladislaus a dbo:Person ;
             dbo:child dbr:Ladislaus_Philipp_of_Austria .
  
  ?parent dbo:child ?ladislaus .

  # Step 2: Find the royalty child of this parent (grandchild)
  ?royaltyChild dbo:parent ?parent ;
                a dbo:Royalty .

  # Step 3: Identify landmark at elevation 96.0 that is a settlement
  ?landmark a dbo:Settlement ;
            dbo:elevation ""96.0""^^xsd:float .

  # Step 4: Find native of this landmark
  ?nativePerson dbo:nativePlace ?landmark .

  # Step 5: Find the parent of this native person
  ?parentOfNative dbo:child ?nativePerson .
  
  # Final step: Match the royalty child's parent with the parent of the native person
  ?grandchildParent dbo:child ?royaltyChild ;
                   dbo:child ?parentOfNative .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
617,57,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse
WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus dbo:parent ?antiochusIII .
  ?antiochusIII rdfs:label ""Antiochus III""@en .

  # Step 2: Find his successor
  ?successor dbo:successorOf ?antiochus .

  # Step 3: Identify the child of the successor
  ?child dbo:parent ?successor .

  # Step 4: Ensure the child is royalty
  ?child rdf:type dbo:Monarch .

  # Step 5: Find the spouse of this royal child
  ?spouse dbo:spouse ?child .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
16,59,test,Give me the spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Get Ted McGinley's birth name
  dbr:Ted_McGinley dbo:birthName ?birthName .

  # Step 2: Find the actor of ""Unnatural"" (TV series)
  OPTIONAL { 
    dbr:Unnatural_(TV_series) dbo:actor ?actor .
  }

  # Step 3: Use birth name to find spouse
  ?person dbo:birthName ?birthName ;
          dbo:spouse ?spouse .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
994,53,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Step 1: Identify Donald Maynard Dokken and his associated band
  ?dokken a dbo:Person ;
          foaf:name ""Donald Maynard Dokken"" ;
          dbo:musicalArtist ?associatedBand .

  # Step 2: Find members of Red Tide
  ?redTideMember a dbo:MusicalArtist ;
                 dbo:bandMember dbr:Red_Tide_(band) .

  # Step 3: Identify the associated musical artist of Watchtower
  ?watchtowerAssociated a dbo:MusicalArtist ;
                        dbo:musicalArtist dbr:Watchtower .

  # Step 4: Link everything together
  ?associatedBand dbo:musicalArtist ?watchtowerAssociated .
  
  # Find the band member that connects all these elements
  ?dokken dbo:musicalArtist ?bandMember .
  FILTER(?bandMember = ?redTideMember)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
92,56,test,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
# Query for the band member of Nevermore who is an artist
SELECT ?artist WHERE {
  ?person dbo:band dbr:Nevermore .
  ?person a dbo:Artist .
}

UNION

# Query for the associated musical artist of Jim Sheppard
SELECT ?associatedArtist WHERE {
  ?collaboration dbo:associatedBandMember dbr:Jim_Sheppard ;
                 dbo:associatedBandMember ?associatedArtist .
}

UNION

# Query for the band of the person born as Joseph Michael
SELECT ?band WHERE {
  ?person dbo:birthName ""Joseph Michael""@en ;
          dbo:band ?band .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,19,test,Give me the birth place of the member of Dropkick Murphys and landmark at elevation of the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?birthPlace
WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""Dropkick Murphys""@en .
  ?band dbo:bandMember ?member .
  ?member dbo:birthPlace ?birthPlace .
}
```",5,5,6,3,2,3,2,20,1,11,0,0.08333333333333333,1.0,0.15384615384615385
345,17,test,"Give me the figure known as Stolz von Liechtenstein and team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?team 
WHERE {
  # Step 1: Get Eiður Guðjohnsen's birth date
  VALUES ?birthDate { dbr:Eiður_Guðjohnsen dbo:birthDate }

  # Step 2: Find a soccer player and manager born on that date
  ?player a dbo:SoccerPlayer ;
          dbo:birthDate ?birthDate ;
          dbo:sportManagerRole ?managerRole .
  
  FILTER EXISTS { ?managerRole a dbo:SoccerManager }
  
  # Step 3: Get Stolz von Liechtenstein's team
  dbr:Stolz_von_Liechtenstein dbo:team ?team .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
64,9,test,"Give me the entity in the region, that is a country, of Central European Time and alma mater of the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater WHERE {
  ?person a dbo:Writer ;
          dbo:deathPlace dbr:Sremska_Kamenica .
  ?person dbo:almaMater ?almaMater .

  ?institution dbo:name ?almaMater ;
               dbp:country ?country .

  VALUES ?cetCountries { 
    ""Czech Republic""^^xsd:string
    ""Germany""^^xsd:string
    ""Austria""^^xsd:string
    ""Poland""^^xsd:string
    ""Slovakia""^^xsd:string
    ""Hungary""^^xsd:string
    ""Romania""^^xsd:string
    ""Switzerland""^^xsd:string
  }

  FILTER (?country IN ?cetCountries)
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
9,34,test,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?organisation ?mayor ?almaMater WHERE {
  # Find an organisation in Belfast
  ?organisation a dbo:Organisation ;
                dbo:location dbr:Belfast .
  
  # Identify the mayor of this organisation
  ?mayor dbo:positionTitle ""Mayor""@en ;
         dbo:worksFor ?organisation .

  # Check if the mayor's alma mater is QUB
  OPTIONAL { 
    ?mayor dbo:almaMater dbr:Queen's_University_Belfast .
    BIND(""QUB"" AS ?almaMater)
  }
  
  FILTER EXISTS { ?mayor dbo:almaMater dbr:Queen's_University_Belfast . }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
701,37,test,Give me the parent of the child of the child of Seti I and spouse of Ramesses II.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parent WHERE {
  # Seti I's children
  ?child1 dbo:childOf dbp:Seti_I .
  
  # Child of one of Seti I's children (grandchildren)
  ?grandchild dbo:childOf ?child1 .

  # Ramesses II's spouse
  ?spouse dbo:spouse dbp:Ramesses_II .

  # Check if the grandchild is also a spouse of Ramesses II
  FILTER (?grandchild = ?spouse)

  # Find the parent of this entity (either Seti I or another parent)
  ?parent dbo:child ?grandchild .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
356,17,test,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960) and player in 2015 Sacramento Republic FC season.","SELECT ?result WHERE { <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?team WHERE {
    # Step 1: Identify Gary Williams and his birthplace
    dbr:Gary_Williams_(footballer,_born_1960) dbo:nationality dbr:England ;
        dbo:birthPlace ?birthPlace .

    FILTER (isBlank(?birthPlace)) .
    
    # Step 2: Ensure the birthplace is an English settlement
    ?birthPlace a dbo:Settlement ;
                dbp:country dbr:England .

    # Step 3: Find natives of this place who are both soccer players and managers
    ?person dbo:nationality dbr:England ;
            dbo:birthPlace ?birthPlace ;
            a dbo:SoccerPlayer, dbo:SoccerManager .
    
    # Step 4: Determine the team associated with this person during the 2015 Sacramento Republic FC season
    OPTIONAL {
        ?team dbp:manager ?person ;
              dbp:season ""2015""^^xsd:string .
    }
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
161,38,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?event
WHERE {
  # Emilio Mola's command in a military force
  ?event dbo:commander dbr:Emilio_Mola .
  
  # Francisco Largo Caballero's participation in the same event as both societal and military
  ?event dbo:participant dbr:Fran%C3%A7ois_Largo_Caballero ;
         rdf:type/(dbo:MilitaryConflict|dbo:SocietalEvent) .
}
```",4,7,5,2,2,3,3,71,0,0,32,0,0.0,0
994,70,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?bandMember
WHERE {
  # Don Dokken's band members who are musical artists
  ?dokkenBand dbo:bandMember ?bandMember .
  ?bandMember rdf:type dbo:MusicalArtist .
  
  FILTER (?dokkenBand = dbpedia:Don_Dokken) .

  # Watchtower's associated musical artist
  ?watchtower dbo:associatedBand ?associatedArtist .
  ?associatedArtist rdf:type dbo:MusicalArtist .

  FILTER (?watchtower = dbpedia:Watchtower_(band)) .

  # Fredrik Thordendal's band, which is an organization and group
  ?thordendalBand dbo:bandMember ?thordendal .
  ?thordendalBand rdf:type dbo:Organization ;
                  rdf:type dbo:Group .
  
  FILTER (?thordendal = dbpedia:Fredrik_Thordendal) .

  # Find common band member
  ?commonArtist dbo:associatedBand ?watchtower .
  ?commonArtist dbo:bandMember ?dokkenBand .
  ?commonArtist dbo:bandMember ?thordendalBand .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
54,38,test,"Give me the parent of the child of Narapati I of Ava and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonEntity WHERE {
  # Narapati I of Ava's child and their predecessor
  ?narapatiI dbo:child ?narapatisChild .
  ?narapatisPredecessor dbo:successor ?narapatisChild .
  
  # Thihapate of Mohnyin's child and their parent
  ?thihapate dbo:child ?thihapatessChild .
  ?thihapatessParent dbo:child ?thihapatessChild .

  # Common entity that is both an office holder and royalty
  ?commonEntity rdf:type dbo:OfficeHolder ;
                rdf:type dbo:Royalty ;
                owl:sameAs ?narapatisPredecessor ;
                owl:sameAs ?thihapatessParent .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
404,52,test,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent ?spouseBirthName WHERE {
  # Find the child of Ernest Augustus, Crown Prince of Hanover who is a royalty
  ?child dbo:father dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  ?child rdf:type dbo:Person .

  # The parent of this child (who is also a royalty)
  ?parent dbo:child ?child .
  ?parent rdf:type dbo:Monarch .

  # Find the spouse of Ernest Augustus, Duke of Brunswick with the birth name Princess Victoria Louise of Prussia
  ?spouseBirthName dbo:birthName ""Princess Victoria Louise of Prussia""^^xsd:string ;
                   dbo:spouse dbr:Ernest_Augustus,_Duke_of_Brunswick .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
232,55,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorFilm ?actorMilitaryConflict ?residence
WHERE {
  # Sean Pertwee's claim to fame in film and military conflict
  dbr:Sean_Pertwee dbo:claimToFame ?film .
  dbr:Sean_Pertwee dbo:claimToFame ?militaryConflict .

  # Ensure the film is a film and the military conflict is a military conflict
  ?film rdf:type dbo:Film .
  ?militaryConflict rdf:type dbo:MilitaryConflict .

  # Sean Pertwee's parent information
  dbr:Sean_Pertwee dbo:childOf dbr:John_Devon_Roland_Pertwee .

  # Sylvie Bermann's residence as a British settlement
  dbr:Sylvie_Bermann dbo:residence ?residence .
  ?residence rdf:type dbo:Settlement .
  ?residence dbo:nationality dbr:United_Kingdom .
  
  # Return the actor roles related to film and military conflict
  BIND(dbr:Sean_Pertwee AS ?actorFilm)
  BIND(dbr:Sean_Pertwee AS ?actorMilitaryConflict)
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
16,52,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
# Step 1: Find Satomi Ishihara's Profession
SELECT ?profession WHERE {
    wd:Q123456 dbo:occupation ?profession .
}

# Step 2: Find Ted McGinley's Birth Name
SELECT ?birthName WHERE {
    wd:Q789012 foaf:name ?birthName .
    FILTER(CONTAINS(LCASE(?birthName), ""ted mcginley""))
}

# Step 3: Find Georgeanne Marie Rice's DBpedia ID
SELECT ?person WHERE {
    ?person foaf:name ""Georgeanne Marie Rice""@en .
}

# Step 4: Find the Spouse of Ted McGinley (with birth name)
SELECT ?spouse WHERE {
    wd:Q789012 dbo:spouse ?spouse .
    ?spouse foaf:name ?name .
    FILTER(CONTAINS(LCASE(?name), ""ted mcginley""))
}

# Step 5: Ensure the spouse is Georgeanne Marie Rice
SELECT ?spouse WHERE {
    ?spouse foaf:name ""Georgeanne Marie Rice""@en .
    wd:Q789012 dbo:spouse ?spouse .
}

# Step 6: Find the Professional in Satomi Ishihara's Profession who matches the spouse
SELECT ?professional WHERE {
    ?professional dbo:occupation ?profession .
    FILTER(?profession = <http://dbpedia.org/resource/...>) # Replace with actual profession URI from step 1
    ?professional foaf:name ""Georgeanne Marie Rice""@en .
}
```

Note: The placeholders `wd:Q123456` and `wd:Q789012` should be replaced with the actual DBpedia IDs for Satomi Ishihara and Ted McGinley, respectively. Additionally, replace `<http://dbpedia.org/resource/...>` with the URI obtained from step 1.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
9,52,test,"Give me the figure known as QUB and alma mater of the awardee of Royal Medal and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?organisation ?mayor ?mayorAlmaMater ?awardee ?awardeeAlmaMater WHERE {
  # Find the organisation in Belfast
  ?organisation a dbo:Organisation ;
                dbo:location dbr:Belfast .

  # Find the mayor of this organisation who is a politician
  ?mayor dbo:position ?position .
  ?position dbo:officeHolder ?mayor ;
            dbo:officeLocation ?organisation .
  ?mayor a dbo:Politician .

  # Determine the alma mater of the mayor
  ?mayor dbo:almaMater ?mayorAlmaMater .

  # Find an awardee of the Royal Medal
  ?awardee dbo:award dbr:Royal_Medal .

  # Determine the alma mater of the Royal Medal awardee
  ?awardee dbo:almaMater ?awardeeAlmaMater .

  # Check if both alma maters are QUB
  FILTER (?mayorAlmaMater = dbr:Queen's_University_Belfast && ?awardeeAlmaMater = dbr:Queen's_University_Belfast)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
666,19,test,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season and figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?v4 . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . }","```sparql
# Query to find the player-manager of Hull City A.F.C. during 2016–17 season
SELECT ?playerManager WHERE {
    ?hullCity dcterms:isPartOf dbc:""Hull_City_A.FC_seasons"" .
    ?hullCity dbo:manager ?playerManager .
    ?playerManager rdf:type dbo:SportsManager ;
                   dbo:spouse ?person .
}

# Query to find the nickname of Hull City A.F.C.
SELECT ?nickname WHERE {
    ?hullCity rdfs:label ""Hull City A.F.C.""@en ;
              dbo:nickname ?nickname .
}
```",5,9,6,3,2,3,2,20,0,0,2,0,0.0,0
659,55,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commanderNapoleon ?commanderWellington
WHERE {
    ?war a dbo:MilitaryConflict ;
        rdfs:label ?warLabel .
    
    FILTER(CONTAINS(LCASE(?warLabel), ""napoleonic wars""))
    
    OPTIONAL { 
        ?narrative dbo:participatedInMilitaryConflicts ?war ;
                   dbo:commander ?commanderNapoleon .
        ?commanderNapoleon rdfs:label ?commanderNapoleonLabel .
        FILTER(CONTAINS(LCASE(?commanderNapoleonLabel), ""napoleon""))
    }
    
    OPTIONAL { 
        ?narrative2 dbo:participatedInMilitaryConflicts ?war ;
                    dbo:commander ?commanderWellington .
        ?commanderWellington rdfs:label ?commanderWellingtonLabel .
        FILTER(CONTAINS(LCASE(?commanderWellingtonLabel), ""arthur wellesley""))
    }
}
ORDER BY ?war
```",6,11,7,2,3,3,3,71,0,5,15,0.0,0.0,0
488,31,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace WHERE {
  {
    # Query for the birth place of Saitō Hajime
    dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .
  }
  UNION
  {
    # Query for the death place of Tokugawa Ieyasu
    dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
  }
}
```",4,7,5,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
391,56,test,"Give me the actor of The Departed and native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find actors of ""The Departed""
  ?film dbo:title ""The Departed""@en .
  ?film dbo:starring ?actor .

  # Identify Hub City and its notable actor
  VALUES ?hubCity { dbr:Boston } # Assuming Boston is known as ""Hub City""
  ?person dbo:nationality ?hubCity ;
          a dbo:Actor ;
          dbo:birthPlace ?hubCity .
  
  # Check if the same person is an actor in another movie or TV show
  ?otherWork dbo:starring ?actor .

}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
981,17,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in Indonesia.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:author ""Kamikaze Girls""@en .
  ?person dbo:title ""Beauty Queen""@en .
  ?person dbo:country dbr:Indonesia .
  ?person dbo:birthPlace ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,19,0,0.0,0
55,22,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberOfProducer ?bandMemberOfBand
WHERE {
  # Step 1: Find producer of ""Used to Love Her""
  ?song dbo:producer ?producer .
  FILTER(STRSTARTS(STR(?song), STR(dbr:)) && ?song = dbr:Used_to_Love_Her)

  # Step 2: Check if the producer is a band
  ?producer rdf:type dbo:Band .

  # Step 3: Find members of this band
  ?producer dbo:bandMember ?bandMemberOfProducer .

  # Step 4: Identify which member is also a band and group
  ?bandMemberOfProducer rdf:type dbo:Band .
  ?bandMemberOfProducer rdf:type dbo:MusicalGroup .

  # Step 5: Find members of this identified band
  ?bandMemberOfProducer dbo:bandMember ?bandMemberOfBand .

  # Step 6: Check if any member is associated with the San Francisco Symphony
  OPTIONAL {
    ?bandMemberOfBand dbo:performer dbr:San_Francisco_Symphony .
  }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
281,60,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
# Query to find the award of Jonathon Band and the related war
SELECT DISTINCT ?award ?war 
WHERE {
  ?person foaf:name ""Jonathon Band""@en .
  ?person dbo:award ?award .
  ?award dbo:relatedToWar ?war .
}

UNION

# Query to find a New Zealand Army office holder who is also a politician and the related war
SELECT DISTINCT ?profession ?militaryUnit ?war 
WHERE {
  ?individual dbo:officeHolder ?office ;
              dbo:politician ?politics ;
              dbo:militaryUnit ?militaryUnit .
  ?militaryUnit dbo:partOfMilitaryOrganization dbr:New_Zealand_Army .
  ?militaryUnit dbo:relatedToWar ?war .
}
```",6,9,7,3,2,3,3,71,0,0,9,0,0.0,0
184,67,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of Géza von Habsburg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?targetEntity WHERE {
  # Step 1: Archduke Ladislaus Philipp of Austria's parent and their royal child
  ?ladislaus dbo:parent ?parentLadislaus .
  ?royalChild dbo:parent ?parentLadislaus ;
              rdf:type dbo:RoyalFamilyMember .
  
  # Step 2: Child of the royal child (target entity)
  ?targetEntity dbo:parent ?royalChild .

  # Step 3: Archduchess Margaret's parent and their child
  ?margaret dbo:birthDate ?dateMargaret ;
           dbo:parent ?parentMargaret .
  FILTER (YEAR(?dateMargaret) = 1925)
  
  ?childOfParentMargaret dbo:parent ?parentMargaret .

  # Step 4: Parent of the child of Archduchess Margaret's parent
  ?grandParentChild dbo:parent ?childOfParentMargaret .

  # Step 5: Géza von Habsburg's parent and their child
  ?geza dbo:parent ?parentGeza .
  
  ?childOfParentGeza dbo:parent ?parentGeza .

  # Step 6: Find common entity that matches all conditions
  FILTER (?targetEntity = ?grandParentChild && ?targetEntity = ?childOfParentGeza)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
54,45,test,"Give me the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent ?child ?predecessor WHERE {
  # Find the parent of Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw""@en .
  ?thadoMinsaw dbo:parent ?parent .

  # Find Thinkhaya's child
  ?thinkhaya a dbo:Person ;
             rdfs:label ""Thinkhaya of Pagan""@en .
  ?thinkhaya dbo:child ?child .

  # Find the predecessor who is royalty and an office holder
  ?predecessor a dbo:Person ;
               dbo:predecessor ?child ;
               dbo:royalty true ;
               dbo:officeHolder true .

  # Ensure connection to Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .
  ?predecessor dbo:relatedTo ?thihapate .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
959,59,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater
WHERE {
  # Identify the politician leader in 2010 Japanese House of Councillors election
  ?politician a dbo:Politician ;
              dbo:electedAs [dbo:election dbr:Japanese_House_of_Councillors_election,_2010] .

  # Filter for birth year and nationality (native country)
  ?politician dbo:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) = 1958)

  ?politician dbo:nationality ?country .
  ?country a dbo:Country .

  # Find alma mater that is Japanese, an organization, university, and educational institution
  ?politician dbo:almaMater ?almaMater .
  ?almaMater a dbo:University ;
             dbo:location dbr:Japan ;
             a dbo:EducationalInstitution, dbo:Organization .

}
```",6,12,7,3,2,3,3,71,0,0,167,0,0.0,0
498,9,test,"Give me the band of the band, that is an organisation and a band, of Solace of Requiem and band of the member, that is an artist, of Mortician (band).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?bandOfSolace ?memberBand
WHERE {
  # Step 1: Find the band that is both an organization and a band for Solace of Requiem
  ?solace rdf:type dbo:Band .
  ?solace dbo:associatedBand ?bandOfSolace .
  ?bandOfSolace rdf:type dbo:Organization .

  # Step 2: Find members of this band who are artists
  ?member dbo:member ?bandOfSolace ;
          rdf:type dbo:Artist .

  # Step 3: Identify Mortician and its artist members
  ?mortician rdf:type dbo:Band .
  ?mortician rdfs:label ""Mortician (band)""@en .
  ?artistMember dbo:member ?mortician ;
                rdf:type dbo:Artist .

  # Step 4: Find the band of these artist members
  ?memberBand dbo:member ?artistMember .
}
```",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
547,62,test,Give me the resting place of the child of the child of William Haliburton and resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,"SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchildRestingPlace ?alanCunninghamRestingPlace ?actorRestingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  {
    ?grandchild dbo:parent ?child .
    ?child dbo:parent dbr:William_Haliburton .
    ?grandchild dbo:restingPlace ?grandchildRestingPlace .
  }

  UNION

  # Resting place of Alan Cunningham
  {
    dbr:Alan_Cunningham dbo:restingPlace ?alanCunninghamRestingPlace .
  }

  UNION

  # Resting place of the actor of the show with Emily Richard
  {
    ?show dbo:cast ?actor .
    ?show dbo:starring dbr:Emily_Richard .
    ?actor dbo:restingPlace ?actorRestingPlace .
  }
}
```",7,7,8,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
251,26,test,"Give me the administration of Forza Italia (2013) and location of the war, that is a military conflict, of Louis François Félix Musnier and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
# Query for administration of Forza Italia (2013)
SELECT ?leader WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Forza Italia""@en .
  ?party dbo:leader ?leader .
  FILTER(YEAR(?administrationStart) <= 2013 && YEAR(?administrationEnd) >= 2013)
}

UNION

# Query for location of the war involving Louis François Félix Musnier
SELECT DISTINCT ?location WHERE {
  ?person rdfs:label ""Louis François Félix Musnier""@en .
  ?conflict a dbo:MilitaryConflict ;
            dbo:participant ?person ;
            dbo:location ?location .
}

UNION

# Query for death place of the author of The Twelve Abbots of Challant
SELECT DISTINCT ?deathPlace WHERE {
  ?book rdfs:label ""The Twelve Abbots of Challant""@en ;
        dbo:author ?author .
  ?author dbo:deathPlace ?deathPlace .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
92,28,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of Joseph Michael and associated musical artist of Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?person WHERE {
  # Members of Nevermore who are also artists
  { 
    ?band dbr:Nevermore ;
          dbo:bandMember ?person .
    ?person a dbo:Artist .
  }
  
  UNION
  
  # Bands associated with Joseph Michael and their members
  { 
    ?person dbr:Joseph_Michael ;
            dbo:associatedBand ?band .
    ?band dbo:bandMember ?member .
    ?member a dbo:Artist .
  }
  
  UNION
  
  # Musical artists associated with Jim Sheppard
  {
    ?person dbr:Jim_Sheppard ;
            dbo:associatedMusicalArtist ?artist .
    ?artist a dbo:Artist .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
488,54,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
# Query 1: Find Matsudaira Tadamasa's father
SELECT ?father WHERE {
    dbpedia:Matsudaira_Tadamasa dbo:father ?father .
}

# Query 2: Find the grandfather (office holder related to Emperor Go-Yōzei) and his death place
SELECT ?grandfather ?deathPlace WHERE {
    ?father dbo:father ?grandfather .
    ?grandfather dbo:officeHolder ?office .
    ?office dbo:relatedTo dbpedia:Emperor_Go-Yōzei .
    ?grandfather dbo:deathPlace ?deathPlace .
}

# Query 3: Find a Boshin War commander and their birthplace
SELECT ?commander ?birthPlace WHERE {
    ?commander rdf:type dbo:MilitaryPerson .
    ?commander dbo:participatedIn dbpedia:Boshin_War .
    ?commander dbo:birthPlace ?birthPlace .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
391,50,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find Sherry Hormann's spouse
  ?sherry a dbo:Person ;
          foaf:name ""Sherry Hormann""@en .
  
  ?spouse dbo:spouse ?sherry .

  # Step 2: Get the claim to fame of Sherry Hormann's spouse
  ?claimToFame dbo:creator ?spouse ;
               a dbo:Work .

  # Step 3: Find Roz Ryan's movie that is also a television show
  ?movie dbo:starring ?actor ;
         a dbo:Film, dbo:TelevisionSeries .
  
  ?roz a dbo:Person ;
       foaf:name ""Roz Ryan""@en .
  
  ?movie dbo:starring ?roz .

  # Step 4: Find the actor common to both
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
54,50,test,"Give me the parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Identify Thado Minsaw of Prome's parent
  ?thadoMinsaw a dbo:Person ;
               dbp:name ""Thado Minsaw"" ;
               dbp:placeOfBirth ""Prome"" .
  
  ?thadoMinsaw dbo:parent ?parent .

  # Step 2: Find the child of Thado Minsaw's parent
  ?parent dbo:child ?child .

  # Step 3: Identify the predecessor of this child
  ?predecessor dbo:successor ?child ;
               a dbo:OfficeHolder, dbo:Royalty .

  # Ensure relation to Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
             dbp:name ""Thihapate"" ;
             dbp:placeOfBirth ""Mohnyin"" .
  
  OPTIONAL { ?predecessor dbo:relatedTo ?thihapate }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
251,22,test,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:location dbr:Sicily .
  OPTIONAL { ?party dbo:headquarters ?administration . }
}

UNION

SELECT DISTINCT ?location WHERE {
  ?person dbr:Louis_François_Félix_Musnier ;
          dbo:participatedIn ?conflict .
  ?conflict a dbo:MilitaryConflict ;
            dbo:location ?location .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
328,65,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of Joseph Stalin and commander in the force of the person decedent at Budapest.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?leader ?commander
WHERE {
  # Bruce Fraser's awards
  dbr:Bruce_Fraser_1st_Baron_Fraser_of_North_Cape dbo:award ?award .
  
  # Awardee of the award
  ?award dbo:recipient ?awardee .

  # Leader of a government agency under Joseph Stalin
  ?office dbo:headOfState dbr:Joseph_Stalin ;
          a dbo:GovernmentAgency .
  ?leader dbo:positionHeld ?office .

  # Commander in force at Budapest
  ?event dbo:location dbr:Budapest ;
         dbo:militaryCommander ?commander .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
251,23,test,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/place> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warLocation ?authorDeathPlace WHERE {
  # Part 1: Location of the war involving Louis François Félix Musnier
  OPTIONAL {
    dbr:Louis_François_Félix_Musnier dbo:participatedIn ?militaryConflict .
    ?militaryConflict dbo:location ?warLocation .
  }

  # Part 2: Death place of the author of ""The Twelve Abbots of Challant""
  OPTIONAL {
    ?author dbo:title ""The Twelve Abbots of Challant""@en ;
            dbo:deathPlace ?authorDeathPlace .
  }
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
528,66,test,Give me the war of the military force of Battle of Pisagua and force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Query 1: Military forces in the Battle of Pisagua
SELECT ?force WHERE {
    ?battle dbo:type dbr:Battle_of_Pisagua .
    ?battle dbo:militaryForce ?force .
}

UNION

# Query 2: Birth name and military force of Narciso Campero
SELECT ?birthName, ?militaryForce WHERE {
    ?person foaf:name ""Narciso Campero""@en ;
            dbo:birthName ?birthName .
    OPTIONAL { ?person dbo:militaryForce ?militaryForce . }
}

UNION

# Query 3: War commanded in the Battle of La Rinconada de Ate
SELECT ?war WHERE {
    ?battle dbo:type dbr:Battle_of_La_Rinconada_de_Ate ;
            dbo:commander ?commander .
    ?commander dbo:commanded ?war .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
547,66,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the child of James Burton (property developer) and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v6 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlaceAwardee ?restingPlaceChild ?restingPlaceActor
WHERE {
  # Resting place of the awardee of the award of Gerald Graham
  ?award dbo:recipient ?awardee .
  ?award dbo:name ""Gerald Graham"" .
  OPTIONAL { ?awardee dbo:deathPlace ?restingPlaceAwardee . }

  # Resting place of the child of James Burton (property developer)
  dbr:James_Burton_(property_developer) dbo:child ?child .
  OPTIONAL { ?child dbo:deathPlace ?restingPlaceChild . }

  # Resting place of the actor of Enemy at the Door
  dbr:Enemy_at_the_Door dbo:actor ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?restingPlaceActor . }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
184,68,test,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/father> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfNative ?childOfGrandchild WHERE {
  # Step 1: Identify the landmark
  ?landmark a dbo:Settlement ;
            dbo:elevation ""96.0""^^xsd:float .
  
  # Step 2: Find the native of this landmark and their parent
  ?native dbo:nativeOf ?landmark .
  ?parentOfNative dbo:child ?native .

  # Step 3: Archduke Joseph Francis of Austria's lineage
  dbr:Archduke_Joseph_Francis_of_Austria dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .
  ?parentOfGrandchild dbo:child ?grandchild ;
                      a dbo:Royalty .

  # Step 4: Archduke Ladislaus Philipp of Austria's parent
  dbr:Archduke_Ladislaus_Philipp_of_Austria dbo:child ?ladislausChild .
  ?royalParent dbo:child ?ladislausChild ;
               a dbo:Royalty .

  # Step 5: Combine results to find the commonality or relationship
  FILTER(?parentOfNative = ?parentOfGrandchild)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
767,47,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?almaMater ?settlementName WHERE {
  # Find George Kilbon Nash and his alma mater
  ?nash a dbo:Person ;
        rdfs:label ""George Kilbon Nash""@en .
  
  OPTIONAL { 
    ?nash dbo:almaMater ?university .
    BIND(?university AS ?almaMater)
  }
  
  # Find the administration or position held by George Kilbon Nash
  ?nash dbo:positionHeld ?administration .

  # Find settlements named Green related to this administration
  ?settlement a dbo:Settlement ;
              rdfs:label ""Green""@en .
              
  OPTIONAL {
    ?administration dbo:location ?settlement .
    BIND(""Green"" AS ?settlementName)
  }
  
  FILTER (lang(?nashLabel) = 'en' && lang(?universityLabel) = 'en')
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
92,58,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of Nevermore.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band1 ?band2 WHERE {
  # Find Joseph Michael's associated band
  ?person1 a dbo:Person ;
           foaf:name ""Joseph Michael""@en ;
           dbo:associatedBand ?band1 .
  
  # Find Jim Sheppard and confirm his association with Nevermore
  ?person2 a dbo:MusicalArtist ;
           foaf:name ""Jim Sheppard""@en ;
           dbo:member ?band2 .
  FILTER (str(?band2) = str(dbr:Nevermore))
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
959,22,test,Give me the member of University of Tsukuba and manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find members of University of Tsukuba
  ?person dbo:almaMater dbp:University_of_Tsukuba .

  # Find the team Takashi Sekizuka is a member of
  ?team dbo:teamMember <http://dbpedia.org/resource/Takashi_Sekizuka> .
  
  # Find the manager of that team
  ?team dbo:manager ?person .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,52,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Nysa's parent
  ?nysa a dbo:Person ;
        foaf:name ""Nysa""@en .
  
  OPTIONAL { ?nysa dbo:parent ?parent . }
  
  # Step 2: Find Antiochus III the Great's child
  ?antiochusIII a dbo:Person ;
                foaf:name ""Antiochus III the Great""@en .
  
  ?child1 dbo:father ?antiochusIII ;
          a dbo:Person .

  # Step 3: Find that child's royal offspring
  OPTIONAL { ?child1 dbo:spouse ?parentOfChild2 . }
  OPTIONAL { ?child2 dbo:parent ?child1 ;
                   a dbo:Person .
             FILTER EXISTS { ?child2 dbo:title ?title . FILTER regex(?title, ""King|Queen"", ""i"") } }

  # Step 4: Find successor of Antiochus II Theos and their royal child
  ?antiochusII a dbo:Person ;
               foaf:name ""Antiochus II Theos""@en .
  
  OPTIONAL { ?successor dbo:succeededBy ?antiochusII ;
                        a dbo:Person .
             FILTER EXISTS { ?successor dbo:title ?title . FILTER regex(?title, ""King|Queen"", ""i"") } }
  
  OPTIONAL { ?child3 dbo:parent ?successor ;
                     a dbo:Person .
             FILTER EXISTS { ?child3 dbo:title ?title . FILTER regex(?title, ""King|Queen"", ""i"") } }

  # Step 5: Find the spouse of the child from step 3 who matches criteria
  OPTIONAL { ?child2 dbo:spouse ?spouse . }
  
  FILTER (?parent = ?successor)
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
92,52,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberOfNevermore ?associatedArtistJimSheppard ?bandJosephMichael
WHERE {
  # Find the band member of ""Nevermore"" (2006 film) who is an artist
  ?film a dbo:Film ;
        rdfs:label ""Nevermore""@en .
  FILTER(CONTAINS(LANG(?film), ""2006"")) .
  
  ?film dbo:bandMember ?bandMemberOfNevermore .
  ?bandMemberOfNevermore rdf:type dbo:Artist .

  # Find the associated musical artist of Jim Sheppard
  ?jimSheppard a dbo:Person ;
               foaf:name ""Jim Sheppard""@en ;
               dbo:birthDate ?birthDate .
  
  ?jimSheppard dbo:associatedBand ?associatedArtistJimSheppard .
  ?associatedArtistJimSheppard rdf:type dbo:MusicalArtist .

  # Find the band of Joseph Michael
  ?josephMichael a dbo:Person ;
                 foaf:name ""Joseph Michael""@en ;
                 dbo:birthDate ?birthDate2 .
  
  ?josephMichael dbo:band ?bandJosephMichael .
  ?bandJosephMichael rdf:type dbo:Band .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,51,test,Give me the band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?shenaBand ?apolloWriterBand WHERE {
  # Find the band associated with Shèna
  ?person dbo:birthName ""Shèna""@en .
  OPTIONAL { ?person dbo:band ?shenaBand . }

  # Find the writer of Apollo (Hardwell song) and their band
  dbr:Apollo_(song_by_Hardwell) dbo:lyricsBy ?writer .
  OPTIONAL { ?writer dbo:band ?apolloWriterBand . }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
9,53,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nickname WHERE {
  # Find the nickname of Queen's University Belfast
  dbr:Queen's_University_Belfast dbo:nickname ?nickname .

  # Find Allen Hill's alma mater
  OPTIONAL { 
    dbr:Allen_Hill_(scientist) dbo:almaMater ?almaMaterHill .
    FILTER(?almaMaterHill = ?nickname)
  }

  # Find the mayor of an organization in Belfast and their alma mater
  OPTIONAL {
    ?mayor a dbo:Politician ;
           dbo:officeHolderOf ?organization ;
           dbo:almaMater ?almaMaterMayor .
    ?organization dbo:location dbr:Belfast .
    FILTER(?almaMaterMayor = ?nickname)
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,63,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of Ramesses II and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonEntity WHERE {
  # Amun-her-khepeshef's spouse and their child's parent
  ?amunHerKhepeshef dbo:spouse ?spouse1 .
  ?child1 dbo:parent ?spouse1 .
  
  # Ramesses II's child and their parent (Ramesses II's spouse)
  ?ramessesII dbo:spouse ?spouse2 .
  ?child2 dbo:parent ?spouse2 .
  ?merneptah dbo:father ?ramessesII .

  # Find the common entity
  FILTER(?spouse1 = ?spouse2)
  BIND(?spouse1 AS ?commonEntity)
}
```",7,7,8,3,3,3,3,71,0,95,1,0.0,0.0,0
378,58,test,"Give me the war of the commander in Peninsular War and war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
# Query 1: Find wars involving Thomas Trigge
SELECT ?war WHERE {
    ?trigge dbo:wikiPageID ""Thomas_Trigge"" .
    ?trigge dbo:commanderOf ?war .
}

# Query 2: Identify commanders of the Peninsular War and check if Thomas Trigge is one
SELECT DISTINCT ?commander WHERE {
    ?peninsularWar dbo:wikiPageID ""Peninsular_War"" .
    ?peninsularWar dbo:commander ?commander .
    OPTIONAL { ?trigge dbo:wikiPageID ""Thomas_Trigge"" . FILTER(?commander = ?trigge) }
}

# Query 3: Find the war involving Carl Pontus Gahn
SELECT ?war WHERE {
    ?gahn dbo:wikiPageID ""Carl_Pontus_Gahn"" .
    ?gahn dbo:commanderOf ?war .
}

# Query 4: Determine Thomas Trigge's claim to fame
SELECT ?fame WHERE {
    ?trigge dbo:wikiPageID ""Thomas_Trigge"" .
    ?trigge dbo:famousFor ?fame .
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
427,68,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v5 <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . }","```sparql
# Query for the father's party of an MIT alumnus
SELECT ?alumnusLabel ?fatherPartyLabel WHERE {
  ?alumnus dbo:alumnusOf dbr:Massachusetts_Institute_of_Technology .
  ?alumnus rdfs:label ?alumnusLabel .
  OPTIONAL { 
    ?alumnus dbo:father ?father .
    ?father dbo:party ?fatherParty .
    ?fatherParty rdfs:label ?fatherPartyLabel .
  }
} LIMIT 1

UNION

# Query for Michele Pinto's party
SELECT ?michelePintoLabel ?michelePartyLabel WHERE {
  dbr:Michele_Pinto dbo:party ?micheleParty .
  ?micheleParty rdfs:label ?michelePartyLabel .
  dbr:Michele_Pinto rdfs:label ?michelePintoLabel .
} LIMIT 1

UNION

# Query for Romano Prodi's party
SELECT ?romanoProdiLabel ?prodiPartyLabel WHERE {
  dbr:Romano_Prodi dbo:party ?prodiParty .
  ?prodiParty rdfs:label ?prodiPartyLabel .
  dbr:Romano_Prodi rdfs:label ?romanoProdiLabel .
} LIMIT 1
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
391,61,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  # Step 1: Identify Sherry Hormann's spouse
  dbr:Sherry_Hormann dbo:spouse ?spouse .

  # Step 2: Find the claim to fame of her spouse
  ?spouse dbo:claimToFame ?work .

  # Step 3: Ensure the work is both a movie and a television show
  ?work rdf:type dbo:Film .
  ?work rdf:type dbo:TelevisionShow .

  # Step 4: Find actors associated with this work
  ?work dbo:actor ?actor .
}
```",6,10,7,3,2,3,3,71,0,0,11,0,0.0,0
528,57,test,Give me the war of the commander in the work of --01-09 and war of Irene Morales and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query for the war associated with a commander from a specific work (assuming ""The Great War"" as an example)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?work dbo:hasCommander ?commander .
  ?commander dbo:participatedInWar ?war .
  FILTER(?work = dbr:The_Great_War) # Replace with the correct resource
}

# Query for Irene Morales' war involvement
SELECT ?war WHERE {
  dbr:Irene_Morales dbo:participatedInWar ?war .
}

# Query for Narciso Campero Leyes' military force
SELECT ?force WHERE {
  dbr:Narciso_Campero_Leyes dbo:militaryForce ?force .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
48,19,test,"Give me the band of the writer of Emotion (Carly Rae Jepsen album) and band of the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Part 1: Band of the writer of ""Emotion"" by Carly Rae Jepsen

SELECT DISTINCT ?writerBand WHERE {
  # Find the album ""Emotion""
  ?album dcterms:title ""Emotion""@en .
  ?album dbo:artist <http://dbpedia.org/resource/Carly_Rae_Jepsen> .

  # Identify writers associated with this album
  ?song dbo:album ?album ;
        dbo:writer ?writer .

  # Check if the writer is part of a band
  OPTIONAL { ?writer dbo:bandMember ?band . }
  BIND(IF(BOUND(?band), STR(?band), ""No Band Found"") AS ?writerBand)
}

UNION

# Part 2: Band of the actor who is also a musical artist in a show with Stacey Dash

SELECT DISTINCT ?actorBand WHERE {
  # Find shows featuring Stacey Dash
  ?show dbo:starring <http://dbpedia.org/resource/Stacey_Dash> .

  # Identify actors from these shows who are also musical artists
  ?actor dbo:roleInFilmOrTVSeries ?show ;
         a dbo:MusicalArtist .

  # Check if the actor is part of a band
  OPTIONAL { ?actor dbo:bandMember ?band . }
  BIND(IF(BOUND(?band), STR(?band), ""No Band Found"") AS ?actorBand)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
391,65,test,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of the figure known as Hub City.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find the movie that is a film, work, television show with Roz Ryan as an actor
  ?movie a dbo:Film ;
         a dbo:Work ;
         a dbo:TelevisionShow ;
         dbo:starring dbr:Roz_Ryan .

  # Step 2: Identify Sherry Hormann's spouse and their claim to fame (work)
  dbr:Sherry_Hormann dbo:spouse ?spouse .
  ?claimToFame dbo:creator ?spouse .
  
  # Step 3: Find the actor common to both the movie and the claim to fame
  ?movie dbo:starring ?actor .
  ?claimToFame dbo:starring ?actor .

  # Step 4: Identify Hub City's native figure (assuming it refers to Spartanburg, South Carolina)
  OPTIONAL {
    ?figure dbo:nativePlace dbr:Spartanburg,_South_Carolina ;
            rdfs:label ?figureLabel .
    FILTER(CONTAINS(LCASE(?figureLabel), ""hub city""))
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
617,66,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of the commander in Battle of Panium and spouse of the child of Antiochus III the Great.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandChild
WHERE {
  # Seleucus II Callinicus's child who is royalty
  ?child1 dbo:parent dbr:Seleucus_II_Callinicus .
  ?child1 a dbo:Monarch .

  # Child of that royal child
  ?grandChild dbo:parent ?child1 .

  # Commander in Battle of Panium and their child
  ?commander dbo:event dbr:Battle_of_Panium .
  ?commanderChild dbo:parent ?commander .

  # Antiochus III the Great's children and their spouses
  ?antiochusChild dbo:parent dbr:Antiochus_III_the_Great .
  ?spouse dbo:spouse ?antiochusChild .

  # Find the parent of the commander's child whose spouse is one of Antiochus III's children's spouses
  ?grandChildParent dbo:child ?commanderChild .
  ?grandChildParent dbo:spouse ?spouse .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
251,21,test,Give me the death place of the author of The Twelve Abbots of Challant and administration of Forza Italia (2013) and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlace ?administration ?battleLocation WHERE {
  # Death place of Giovanni Antonio Flaim
  ?author a dbo:Writer ;
          foaf:name ""Giovanni Antonio Flaim"" ;
          dbo:deathPlace ?deathPlace .
  
  # Administration of Forza Italia (2013)
  ?admin a dbo:Government ;
         dbo:head ?leader ;
         dbo:startDate ?startYear ;
         dbp:party ""Forza Italia"" .
  FILTER (?startYear >= ""2013-01-01""^^xsd:date && ?startYear <= ""2013-12-31""^^xsd:date)
  BIND(?admin AS ?administration)

  # Location of the Battle of Marengo
  ?battle a dbo:MilitaryEngagement ;
          dbp:name ""Battle of Marengo"" ;
          dbp:location ?battleLocation .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
747,54,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on the birth date of Pavlo Khudzik and band of Shèna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . },"```sparql
# Step 1: Find a song written by Amba Shepherd and its writer's band
SELECT ?song ?writer ?band WHERE {
  ?song dbo:creator dbr:Amba_Shepherd .
  ?song rdf:type dbo:Songs .
  OPTIONAL { ?writer dbo:associatedBand ?band . FILTER (?writer = ?song) }
}

# Step 2: Find Pavlo Khudzik's birth date
SELECT ?birthDate WHERE {
  dbr:Pavlo_Khudzik dbo:birthDate ?birthDate .
}

# Step 3: Find a person born on the same date as Pavlo Khudzik
SELECT DISTINCT ?person WHERE {
  ?person dbo:birthDate ?birthDate .
  FILTER EXISTS { 
    SELECT ?bd WHERE {
      dbr:Pavlo_Khudzik dbo:birthDate ?bd .
    }
    FILTER (?birthDate = ?bd)
  }
}

# Step 4: Find Shèna's band
SELECT ?band WHERE {
  dbr:Shèna dbo:associatedBand ?band .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,53,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
    ?ernestAugustus dbr:Ernest_Augustus,_Duke_of_Brunswick .
    ?father dbo:father ?ernestAugustus .
    ?grandFather dbo:father ?father .
    ?spouse dbo:spouse ?grandFather ;
            a dbo:Monarch .
    ?princessVictoriaLouise dbo:child ?spouse ;
                           rdfs:label ?birthName ;
                           dbo:child dbr:Prince_Ernest_Augustus_of_Hanover_(1914) .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,55,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandparent WHERE {
  # Step 1: Identify Ernest Augustus, Duke of Brunswick
  ?ernestAugustus a dbo:Person ;
                 rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .

  # Step 2: Find His Spouse
  ?spouse dbo:spouse ?ernestAugustus .
  
  # Step 3: Identify the Child Born as Princess Victoria Louise of Prussia
  ?child a dbo:Person ;
         rdfs:label ""Victoria Louise, Princess Royal""@en ;
         dbo:birthPlace ?prussianBirthPlace .

  # Ensure the child is royalty and born in Prussia
  FILTER EXISTS { ?prussianBirthPlace rdfs:label ""Prussia""@en }

  # Step 4: Determine the Parent of this Child (likely spouse)
  ?spouse dbo:child ?child .
  
  # Step 5: Find the Parent of that Parent (Grandparent)
  ?grandparent dbo:child ?spouse .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
994,61,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  # Step 1: Identify Fredrik Thordendal's band
  dbr:Fredrik_Thordendal dbo:bandMember ?meshuggahBand .
  
  # Ensure the band is an organization, group, and band
  ?meshuggahBand a dbo:MusicalGroup ;
                 a dbo:Organization ;
                 a dbo:Band .

  # Step 2: Identify Don Dokken's persona and associated band member
  dbr:Don_Dokken dbo:musicalArtist ?donDokkenPersona .
  
  ?donDokkenPersona dbo:bandMember ?dokkenBandMember .

  # Ensure the band is an organization, group, and band
  ?dokkenBandMember dbo:bandMember ?associatedBand ;
                    a dbo:MusicalGroup ;
                    a dbo:Organization ;
                    a dbo:Band .
  
  # Step 3: Link the band member from Don Dokken's context to Meshuggah
  ?dokkenBandMember dbo:bandMember ?meshuggahBand .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
182,26,test,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . },"```sparql
# Query for the war of Jagath Dias
SELECT ?war WHERE {
  ?person rdfs:label ""Jagath Dias""@en .
  ?person dbo:war ?war .
}

UNION

# Query for the nationality of Tamara Kunanayakam
SELECT ?nationality WHERE {
  ?person rdfs:label ""Tamara Kunanayakam""@en .
  ?person dbo:nationality ?nationality .
}

UNION

# Query for the war of the author(s) of 2019 Sri Lanka Easter bombings
SELECT DISTINCT ?war WHERE {
  ?event rdfs:label ""2019 Sri Lanka Easter bombings""@en .
  ?event dbo:author ?author .
  ?author dbo:war ?war .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
404,62,test,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  # Ernest Augustus, Crown Prince of Hanover's child who is a royalty
  ?er_child dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover ;
            rdf:type dbo:Royal .

  # This child must be the parent of someone whose parent is Prince George William of Hanover
  ?grandchild dbo:parent ?child .
  ?grandchild dbo:parent dbr:Prince_George_William_of_Hanover .

  # The spouse of this child was born as Princess Victoria Louise of Prussia
  ?spouse dbo:spouse ?child ;
          dbp:birthName ""Princess Victoria Louise of Prussia"" .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
421,25,test,Give me the person born as Edin Dervišhalidović and native of the birthplace of Samir Bekrić and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band ?award
WHERE {
  # Find Edin Dervišhalidović by birth name and native place of Samir Bekrić
  ?person dbo:birthName ""Edin Dervišhalidović""@en .
  ?samir dbo:birthPlace ?place .
  FILTER (?samir = dbr:Samir_Bekrić) .
  ?person dbo:birthPlace ?place .

  # Find the band Edin is a member of
  ?bandMember dbo:bandMember ?person .
  
  # Check if the band has any awards or nominations
  OPTIONAL {
    ?award dbo:recipient ?bandMember .
    FILTER EXISTS { ?award dbo:name ?awardName }
  }

  # Return results
  BIND(?person AS ?person)
  BIND(?bandMember AS ?band)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
378,56,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Joaquín Blake and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?fame WHERE {
  VALUES (?person ?name) {
    (dbr:Thomas_Trigge ""Thomas Trigge"")
    (dbr:Joaquín_Blake ""Joaquín Blake"")
    (dbr:C_P_Gahn ""Carl Pontus Gahn"")
  }
  
  OPTIONAL {
    ?person dbo:name ?name .
  }

  OPTIONAL {
    ?person dbo:claimToFame ?fame .
  }

  OPTIONAL {
    ?war dbo:participatedInWar ?person .
    FILTER EXISTS { ?war a dbo:MilitaryConflict . }
  }
}
```",6,9,7,3,3,3,3,71,0,6,2,0.0,0.0,0
994,52,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and band member of Don Dokken.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find an associated artist of Watchtower
  ?watchtower dbo:associatedBand ?artist1 .
  
  # Step 2: Find an associated artist of the artist found in step 1
  ?artist1 dbo:associatedBand ?artist2 .

  # Step 3: Find a Meshuggah band member who is also part of another band/group/organization
  ?meshuggahMember dbo:bandMember <http://dbpedia.org/resource/Meshuggah> .
  ?meshuggahMember dbo:member ?groupOrg .
  FILTER (EXISTS { ?groupOrg rdf:type dbo:Band } || EXISTS { ?groupOrg rdf:type dbo:MusicalGroup } || EXISTS { ?groupOrg rdf:type dbo:Organization })

  # Step 4: Find an associated artist of the group/organization found in step 3
  ?groupOrg dbo:associatedBand ?artist3 .

  # Step 5: Identify a band member of Don Dokken
  ?donDokkenMember dbo:bandMember <http://dbpedia.org/resource/Don_Dokken> .

  # Step 6: Find the common associated artist from steps 2 and 4
  FILTER (?artist2 = ?artist3)
  
  BIND(?artist2 AS ?finalArtist)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
747,42,test,Give me the person born on the birth date of Pavlo Khudzik and band of Amba Shepherd and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band1 ?band2 WHERE {
  # Get Pavlo Khudzik's birth date
  ?khudzik a dbo:Person ;
           foaf:name ""Pavlo Khudzik"" ;
           dbo:birthDate ?birthDateKhudzik .

  # Get Amba Shepherd's band
  ?shepherd a dbo:Person ;
            foaf:name ""Amba Shepherd"" ;
            dbp:band ?band1 .

  # Get Tracey Elizabeth McSween's birth date
  ?mcSween a dbo:Person ;
           foaf:name ""Tracey Elizabeth McSween"" ;
           dbo:birthDate ?birthDateMcSween .

  # Find another person with the same birth date as Tracey Elizabeth McSween
  ?person a dbo:Person ;
          dbo:birthDate ?birthDateMcSween .
  
  # Get this person's band
  OPTIONAL { ?person dbp:band ?band2 }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
281,20,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthCountry ?war 
WHERE {
  # Bob Heffron's birth place that is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
  BIND(?birthPlace AS ?birthCountry)

  # Beauchamp Seymour, 1st Baron Alcester's war
  dbr:Beauchamp_Seymour,_1st_Baron_Alcester dbo:participatedIn ?war .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
747,43,test,"Give me the person born on 1985-04-29 and band of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?bandShena ?bandSongWriter WHERE {
  # Find person born on 1985-04-29
  ?person a dbo:Person ;
          dbo:birthDate ""1985-04-29""^^xsd:date .

  OPTIONAL {
    # Find band associated with Shèna
    ?shena a dbo:Person ;
           foaf:name ""Shèna""@en .
    ?shena dbo:band ?bandShena .
  }

  OPTIONAL {
    # Find song by Amba Shepherd and its writer's band
    ?song a dbo:Songs ;
          dbo:lyricsBy ?writer ;
          dbo:musicalArtist dbr:Amba_Shepherd .
    ?writer dbo:band ?bandSongWriter .
  }
}
```",5,6,6,3,3,3,3,71,1,29,0,0.03333333333333333,1.0,0.06451612903225806
959,27,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?managerOfManager
WHERE {
  # Find the manager of the 1998 Kashima Antlers
  ?team dbr:Kashima_Antlers_season_1998 ;
        dbo:manager ?firstManager .

  # Check if this manager is a sports manager for another team
  OPTIONAL { 
    ?firstManager dbo:teamManager ?secondTeam .
    
    # Find the manager of that second team
    ?secondTeam dbo:manager ?managerOfManager .
  }
}
```",3,4,4,3,1,3,3,71,0,0,10,0,0.0,0
488,29,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei and birth place of Enomoto Takeaki.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceFather ?birthPlaceEnomoto
WHERE {
  # Find Yūki Hideyasu's father and his death place
  dbr:Yūki_Hideyasu dbo:father ?father .
  ?father a dbo:Politician ;
          dbo:deathPlace ?deathPlaceFather .

  # Ensure the father was active during Emperor Go-Yōzei's administration (1586–1611)
  OPTIONAL { 
    ?father dbo:memberOf ?administration .
    FILTER (?administration = dbr/Emperor_Go-Yōzei)
  }

  # Find Enomoto Takeaki's birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceEnomoto .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
92,68,test,"Give me the band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?associatedArtist ?actor ?filmBandMember
WHERE {
  # Find Joe Lynn Turner by birth name
  ?person dbo:birthName ""Joseph Michael Furney""@en .
  
  # Find the band associated with Joe Lynn Turner
  ?person dbo:bandMember ?band .

  # Find the actor for ""Return to Nuke 'Em High Volume 1""
  ?actor dbo:film dbr:Return_to_Nuke_'Em_High_Volume_1 ;
         a dbo:Artist .

  # Link this actor to Nevermore (2006 film)
  ?actor dbo:reference dbr:Nevermore_(2006_film) .

  # Find the band member associated with Nevermore
  ?filmBandMember dbo:bandMember ?nevermoreBand .
  
  FILTER(?nevermoreBand = ?band)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,42,test,Give me the parent of the native of Budapest and child of Archduke Joseph August of Austria and parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Find a person native to Budapest whose parent is Archduke Joseph August of Austria
  ?person dbo:birthPlace dbr:Budapest .
  ?person dbo:parent dbr:Archduke_Joseph_August_of_Austria .

  # Find the child of Archduke Joseph Francis of Austria
  ?child dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .

  # Determine if they share a common parent
  ?person dbo:parent ?commonParent .
  ?child dbo:parent ?commonParent .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
328,38,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?szalasiCommander ?stalinAgencyLeader
WHERE {
  # Find the commander of Ferenc Szálasi
  OPTIONAL {
    dbr:Ferenc_Szálasi dbo:commander ?szalasiCommander .
  }

  # Find a government agency led by Joseph Stalin and its leader
  OPTIONAL {
    ?agency dbo:leader dbr:Joseph_Stalin ;
            dbo:head ?stalinAgencyLeader .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
801,46,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Identify 50 Cent and his works
  ?artist a dbo:Artist ;
          foaf:name ""50 Cent"" .
  
  # Find musical works associated with 50 Cent
  ?work dbo:creator ?artist ;
        a (dbo:Songs|dbo:Album) .

  # Check if the work involves an alter ego named The Shadow
  OPTIONAL { 
    ?work dbo:alias dbr:The_Shadow .
  }

  # Retrieve the producer of the work
  ?work dbo:producer ?producer .
}
```",5,8,6,3,2,3,3,71,0,0,27,0,0.0,0
232,58,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Identify Sean Pertwee and his claim to fame (film or military conflict)
  dbr:Sean_Pertwee a dbo:Actor ;
                   dbo:spouse ?spouse .
  
  OPTIONAL { 
    ?fame dbo:actor ?actor .
    FILTER (?fame IN (
      SELECT DISTINCT ?work WHERE {
        ?work a dbo:Film ; dbo:starring dbr:Sean_Pertwee .
      }
      UNION
      SELECT DISTINCT ?conflict WHERE {
        ?conflict a dbo:MilitaryConflict ;
                  dbo:participant dbr:Sean_Pertwee .
      }
    ))
  }

  # Ensure Jon Pertwee is Sean's father
  ?spouse dbo:child dbr:Sean_Pertwee ;
          rdfs:label ""Jon Pertwee""@en .

  # Identify Sean Pertwee's residence
  OPTIONAL { 
    dbr:Sean_Pertwee dbo:residenceLocation ?settlement .
    FILTER (STRSTARTS(STR(?settlement), ""http://dbpedia.org/resource/"") && 
            EXISTS { ?settlement a dbo:Settlement } &&
            EXISTS { ?settlement dbo:country dbr:United_Kingdom })
  }

  # Identify the French politician and their residence
  OPTIONAL {
    ?politician a dbo:Politician ;
                dbo:officeHolderOf ?office .
    FILTER (EXISTS { ?office dbo:country dbr:France } &&
            EXISTS { ?politician dbo:nativePlace ?settlement })
  }

  # Ensure the residences match
  FILTER (?settlement = ?residence)
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
827,17,test,"Give me the child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach and father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child ?father ?spouse
WHERE {
  ?charlesAlexander rdf:type dbo:GrandDuke ;
                    foaf:name ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
  
  ?charlesAlexander dbo:child ?child .
  ?child rdf:type dbo:RoyalFamilyMember .

  ?child dbo:spouse ?spouse .
  ?spouse rdf:type dbo:RoyalFamilyMember .

  ?princessPauline foaf:name ""Princess Pauline of Saxe-Weimar-Eisenach""@en ;
                   dbo:spouse ?spouse .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
659,59,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderName WHERE {
  ?person a dbo:Person .
  
  # Person held an office in the Kingdom of Ireland
  ?officeHolderPosition dbo:positionHeldBy ?person ;
                       dbo:country dbr:Kingdom_of_Ireland .

  # Person was a commander in a military conflict involving 'Polish Horse'
  ?militaryConflict dbo:commander ?person ;
                    dbo:militaryUnit dbr:Polish_Horse .
  
  # Get the name of the person
  ?person foaf:name ?commanderName .
}
```",6,11,7,3,2,3,3,71,0,0,71,0,0.0,0
16,63,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional
WHERE {
  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person ;
          foaf:name ""Satomi Ishihara""@en .
  ?satomi dbo:profession ?profession .

  # Find Ted McGinley's spouse using his birth name
  ?ted a dbo:Person ;
       dbp:birthName ""Thomas Edward McGinley""@en .
  ?ted dbo:spouse ?spouse1 .

  # Find the person born as Gigi Rice and their spouse
  ?gigi a dbo:Person ;
        dbp:birthName ""Gigi Rice""@en .
  ?gigi dbo:spouse ?spouse2 .

  # Ensure the professional is in Satomi Ishihara's profession and is both spouses
  ?professional a dbo:Person ;
                dbo:profession ?profession ;
                owl:sameAs ?spouse1 ;
                owl:sameAs ?spouse2 .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,46,test,Give me the war of the person born as the birth name of Carl Pontus Gahn and war of the commander in Peninsular War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query for the war involving Carl Pontus Gahn
SELECT ?war WHERE {
  ?gahn dbo:birthName ""Carl Pontus Gahn""@en .
  ?gahn dbo:participatedIn ?war .
}

UNION

# Query for wars involving commanders of the Peninsular War
SELECT DISTINCT ?otherWar WHERE {
  ?commander dbo:commanderOf <http://dbpedia.org/resource/Peninsular_War> .
  ?commander dbo:participatedIn ?otherWar .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
356,20,test,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season and team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Identify the 2015 Sacramento Republic FC season
SELECT ?sacramentoSeason WHERE {
    ?sacramentoSeason a dbo:SoccerClubSeason ;
                      dbo:club dbr:Sacramento_Republic_FC ;
                      dbo:season ""2015""^^xsd:gYear .
}

# Step 2: Find its predecessor and successor
WITH <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> AS ?sacramentoSeason

SELECT ?predecessor ?successor WHERE {
    ?predecessor dbo:succeeds ?sacramentoSeason ;
                 a dbo:SoccerClubSeason .
    OPTIONAL { ?sacramentoSeason dbo:isSucceededBy ?successor . }
}

# Step 3: Determine the player in the successor season
WITH <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> AS ?predecessor, 
     <http://dbpedia.org/resource/2016_Sacramento_Republic_FC_season> AS ?successor

SELECT DISTINCT ?player WHERE {
    ?successor dbo:teamMember ?player .
    ?player a dbo:SoccerPlayer .
}

# Step 4: Identify Gary Williams' birthplace and associated soccer club
SELECT ?birthPlace ?club WHERE {
    dbr:Gary_Williams_(footballer,_born_1960) dbo:nationality dbr:England ;
                                              dbo:birthPlace ?birthPlace .
    ?birthPlace a dbo:Settlement .
    OPTIONAL { ?club dbo:location ?birthPlace ;
                  a dbo:SoccerClub . }
}

# Step 5: Combine information to find the player
WITH <http://dbpedia.org/resource/2016_Sacramento_Republic_FC_season> AS ?successor,
     ?club

SELECT DISTINCT ?player WHERE {
    ?successor dbo:teamMember ?player .
    ?player a dbo:SoccerPlayer .

    OPTIONAL { ?player dbo:playsFor ?club . }
}
```",6,12,7,3,2,3,2,20,0,0,1,0,0.0,0
645,17,test,Give me the entity in United Kingdom and alma mater of the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?adela a dbo:Person ;
         foaf:name ""Adela Pankhurst""@en .
  
  OPTIONAL { ?parent dbo:child ?adela . }
  OPTIONAL { ?parent dbo:child ?child . }

  ?child dbo:almaMater ?almaMater .

  FILTER EXISTS {
    ?almaMater dbp:country ""United Kingdom"" .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
696,17,test,Give me the landmark at elevation of the award of the commander in Battle of Chishui River and birth place of Tim Brennan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v3 . <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark ?birthPlace WHERE {
  # Part 1: Landmark at elevation of the award of the commander in Battle of Chishui River
  OPTIONAL {
    ?battle dbo:commander ?commander .
    FILTER (str(?battle) = ""Battle_of_Chishui_River"")
    
    ?award dbo:recipient ?commander .
    ?award dbo:elevation ?elevation .

    ?landmark dbo:elevation ?elevation .
  }

  # Part 2: Birth place of Tim Brennan
  dbr:Tim_Brennan dbo:birthPlace ?birthPlace .
}
```",4,4,5,3,2,3,2,20,1,0,0,1.0,1.0,1.0
184,54,test,"Give me the parent of Archduchess Ilona of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the native of Budapest.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild ?parentOfBudapestNative WHERE {
  # Step 1: Find the parent of Archduchess Ilona of Austria
  ?ilonaParent dbo:child dbr:Archduchess_Ilona_of_Austria .
  
  # Step 2: Find the child of the child (grandchild) of this parent
  ?ilonaGrandchild dbo:parent ?ilonaChild .
  ?ilonaChild dbo:parent ?ilonaParent .
  ?ilonaGrandchild a dbo:Monarch . # Ensure royalty

  # Step 3: Find the parent of Archduke Ladislaus Philipp of Austria
  ?ladislausParent dbo:child dbr:Archduke_Ladislaus_Philipp_of_Austria .

  # Step 4: Find the child of the child (grandchild) of this parent
  ?ladislausGrandchild dbo:parent ?ladislausChild .
  ?ladislausChild dbo:parent ?ladislausParent .
  ?ladislausGrandchild a dbo:Monarch . # Ensure royalty

  # Step 5: Match the grandchild from both lines of descent
  FILTER (?ilonaGrandchild = ?ladislausGrandchild)

  # Step 6: Find someone native to Budapest
  ?budapestNative dbo:birthPlace dbr:Budapest .

  # Step 7: Find the parent of this person
  ?parentOfBudapestNative dbo:child ?budapestNative .

  # Step 8: Match the grandchild with the parent of the native of Budapest
  FILTER (?ilonaGrandchild = ?parentOfBudapestNative)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
767,63,test,"Give me the reference to the alter ego of Black Hood and alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alterEgo ?almaMater ?entityInAdministration WHERE {
  # Step 1: Identify the alter ego of Black Hood
  ?blackHood dbo:alias ""Black Hood"" .
  ?blackHood dbo:alterEgo ?alterEgo .

  # Step 2: Find the alma mater of George K. Nash's administration
  dbr:George_K._Nash dbo:almaMater ?almaMater .

  # Step 3: Determine the writer of ""Where It's At"" from Dustin Lynch's album
  dbr:""Where_It's_At_(Dustin_Lynch_song)"" dbo:lyricsBy ?writer .

  # Step 4: Find an entity in the writer's administration that is a settlement
  ?administration dbo:member ?entityInAdministration .
  ?entityInAdministration rdf:type dbo:Settlement .
  ?writer dbo:memberOf ?administration .

  FILTER(?alterEgo != dbr:Black_Hood)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
54,53,test,"Give me the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v3 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Thado Minsaw of Prome's parent
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw""@en .
  ?parent dbo:child ?thadoMinsaw .

  # Thinkhaya of Pagan's grandchild
  ?thinkhaya a dbo:Person ;
             rdfs:label ""Thinkhaya of Pagan""@en .
  ?father dbo:child ?thinkhaya .
  ?grandChild dbo:parent ?father .

  # Predecessor in office and royalty related to Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .
  ?predecessor dbo:officeHolder true ;
               dbo:royalty true ;
               dbo:successor ?thihapate .

  # Linking the elements
  FILTER (?parent = ?grandChild)
  FILTER (?person = ?predecessor)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
161,58,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander
WHERE {
  # Commander for Francisco Largo Caballero in the Spanish Civil War
  OPTIONAL {
    ?person a dbo:Person ;
            foaf:name ""Francisco Largo Caballero"" .
    ?conflict a dbo:MilitaryConflict ;
              rdfs:label ""Spanish Civil War""@en .
    ?person dbo:participatedIn ?conflict .
    ?conflict dbo:commander ?commander1 .
  }

  # Commander for the Rif War
  OPTIONAL {
    ?rifWar a dbo:MilitaryConflict ;
            rdfs:label ""Rif War""@en .
    ?rifWar dbo:commander ?commander2 .
  }
}
```",6,9,7,3,3,3,3,71,0,0,11,0,0.0,0
9,43,test,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as QUB.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterJohnAlderdice ?almaMaterRoyalMedalsRecipient
WHERE {
  # Alma mater of John Alderdice, Baron Alderdice
  dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMaterJohnAlderdice .

  # Awardee of the Royal Medal related to QUB
  ?recipient dbo:awardReceived dbr:Royal_Medal .
  ?recipient dbo:almaMater ?almaMaterRoyalMedalsRecipient .
  
  FILTER EXISTS { 
    ?recipient dbo:affiliation dbr:Queen's_University_Belfast .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
645,19,test,"Give me the entity in the residence, that is a country, of James Wilkes Maurice and alma mater of the child of the parent of Adela Pankhurst.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInResidenceCountry
WHERE {
  # Step 1: Find James Wilkes Maurice's residence country
  dbr:James_Wilkes_Maurice dbo:residence ?residence .
  
  # Extract the country from the residence
  ?residence dbo:country ?country .

  # Step 2: Identify Adela Pankhurst's parent and child
  dbr:Adela_Pankhurst dbo:parent ?parent .
  ?parent dbo:child ?child .

  # Step 3: Find the alma mater of the child
  ?child dbo:almaMater ?almaMater .

  # Step 4: Ensure the alma mater is in the residence country
  ?almaMater dbo:country ?country .
  
  # The entity we are interested in is the alma mater itself, located in the residence country
  BIND(?almaMater AS ?entityInResidenceCountry)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
617,20,test,Give me the spouse of the child of Antiochus III the Great and child of Antiochus III the Great.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child ?spouse WHERE {
  ?antiochus a dbo:Monarch ;
             foaf:name ""Antiochus III the Great""@en .
  
  ?antiochus dbo:child ?child .
  
  ?child dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
547,29,test,Give me the resting place of Alan Cunningham and resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  # Alan Cunningham's resting place
  OPTIONAL { 
    dbr:Alan_Cunningham dbo:deathPlace ?cunninghamRestingPlace .
    BIND(dbr:Alan_Cunningham AS ?person)
    BIND(?cunninghamRestingPlace AS ?restingPlace)
  }
  
  # Actor of ""Enemy at the Door"" (assuming actor is identified as John Smith for this example)
  OPTIONAL { 
    dbr:John_Smith dbo:deathPlace ?actorRestingPlace .
    FILTER(STRSTARTS(STR(?actorRestingPlace), ""http://dbpedia.org/resource/""))
    BIND(dbr:John_Smith AS ?person)
    BIND(?actorRestingPlace AS ?restingPlace)
  }
  
  # James Burton (Egyptologist)'s resting place
  OPTIONAL { 
    dbr:James_Burton_(Egyptologist) dbo:deathPlace ?burtonRestingPlace .
    FILTER(STRSTARTS(STR(?burtonRestingPlace), ""http://dbpedia.org/resource/""))
    BIND(dbr:James_Burton_(Egyptologist) AS ?person)
    BIND(?burtonRestingPlace AS ?restingPlace)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
994,50,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Identify bands associated with Donald Maynard Dokken
  ?dokkenBand a dbo:MusicalGroup ;
              dbo:musicalArtist dbr:Donald_Maynard_Dokken .

  # Step 2: Find Fredrik Thordendal's band
  ?thordendalBand a dbo:MusicalGroup ;
                  dbo:bandMember dbr:Fredrik_Thordendal .

  # Step 3: Check if there is an overlap in bands
  FILTER (?dokkenBand = ?thordendalBand)

  # Step 4: Find associated musical artists of the common band
  ?commonBand a dbo:MusicalGroup ;
              dbo:musicalArtist ?associatedArtist .
  
  FILTER(?commonBand = ?dokkenBand)
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
488,20,test,"Give me the birth place of Enomoto Takeaki and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v2 . },"```sparql
# Query to get the birth place of Enomoto Takeaki
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Enomoto Takeaki""@en .
  ?person dbo:birthPlace ?birthPlace .
  FILTER(LANG(?birthPlace) = 'en')
}
```

```sparql
# Query to get the death place of Yūki Hideyasu's father, who is a politician
SELECT ?deathPlace WHERE {
  ?yuki rdfs:label ""Yūki Hideyasu""@en .
  ?yuki dbo:father ?father .
  ?father rdf:type dbo:Politician .
  ?father dbo:deathPlace ?deathPlace .
  FILTER(LANG(?deathPlace) = 'en')
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
392,26,test,"Give me the entity in the region, that is a country, of Central European Time and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of Central European Time.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@en .
  
  ?person dbo:residence ?settlement .
  ?settlement dbo:country dbr:Italy ;
              a dbo:Settlement .

  ?province dbo:country ?country ;
            dbo:settlement ?settlement .
  
  FILTER EXISTS { 
    ?region dbo:timeZone ""Central European Time"" .
    ?country dbo:timeZone ""Central European Time"" .
    ?settlement dbo:partOfRegion ?region .
  }
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
994,57,test,"Give me the associated musical artist of S.A. Slayer and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . }","```sparql
# Query to find the associated musical artist of S.A. Slayer
SELECT ?artist WHERE {
  ?sven dbo:associatedBandMember ?band .
  ?band rdfs:label ""S.A. Slayer""@en .
  ?sven rdfs:label ""Sven Atle Kopperud""@en .
  ?sven a dbo:MusicalArtist .
  ?sven dbo:associatedBandMember ?artist .
}

# Query to find the associated musical artist of band members that are bands, groups, or organizations
SELECT DISTINCT ?bandMember WHERE {
  ?artist dbo:associatedBandMember ?member .
  ?member a ?type .
  FILTER(?type IN (dbo:Band, dbo:MusicalGroup, dbo:Organization)) .
}

# Query to find the organization associated with Fredrik Thordendal
SELECT ?organization WHERE {
  ?fredrik dbo:associatedBandMember ?band .
  ?band a ?type .
  FILTER(?type IN (dbo:Band, dbo:MusicalGroup, dbo:Organization)) .
  ?fredrik rdfs:label ""Fredrik Thordendal""@en .
}

# Query to find band members of Donald Maynard Dokken
SELECT ?member WHERE {
  ?dokken a dbo:MusicalArtist .
  ?dokken rdfs:label ""Don Dokken""@en .
  ?dokken dbo:birthName ""Donald Maynard Dokken"" .
  ?dokken dbo:associatedBandMember ?member .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
838,17,test,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa and band of Raša Đelmaš.","SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?member
WHERE {
  # Find members of YU Grupa
  { 
    ?yugrupa a dbo:Band ;
             dbp:name ""YU Grupa""@en .
    ?yugrupaMember dbo:bandMember ?member .
  }
  
  UNION
  
  # Find bands Raša Đelmaš was part of and their members
  {
    ?rasa a dbo:Person ;
          foaf:name ""Raša Đelmaš""@sr .
    ?rasaband dbo:bandMember ?rasa ;
              a dbo:Band .
    ?rasabandMember dbo:bandMember ?member .
  }
}
```",4,7,5,3,2,3,2,20,0,20760,4,0.0,0.0,0
994,27,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMemberName
WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Don Dokken"" .
  
  ?person dbo:bandMember ?member .
  ?member foaf:name ?bandMemberName .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
281,54,test,"Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Step 1: Identify the leader of the 1962 New South Wales state election
  ?politician a dbo:Politician ;
              dbo:officeHolderOf dbr:1962_New_South_Wales_state_election .

  # Step 2: Determine the birthplace country of this politician
  ?politician dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country ;
              rdfs:label ?countryLabel .

  # Step 3: Find wars involving the awardee of Knight Grand Cross of the Order of the Bath
  ?awardee dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  ?awardee dbo:participatedInWar ?war1 .

  # Step 4: Identify wars involving the New Zealand Army
  ?newZealandArmy a dbo:MilitaryUnit ;
                  dbo:country dbr:New_Zealand ;
                  dbo:participatedInWar ?war2 .

  # Step 5: Combine information to find common country
  FILTER(?birthPlace = ?war1 || ?birthPlace = ?war2)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,26,test,Give me the parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?grandparent WHERE {
  ?setiI a dbo:Person ;
         foaf:name ""Seti I""@en .
  
  ?child dbo:childOf ?setiI .
  ?grandchild dbo:childOf ?child .
  ?parent dbo:parentOf ?grandchild .

  ?parentParent dbo:parentOf ?parent .
  
  BIND(?parentParent AS ?grandparent)
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
547,54,test,Give me the resting place of the child of James Burton (property developer) and resting place of the actor of the show with Emily Richard and resting place of Alan Cunningham.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityLabel ?restingPlaceLabel WHERE {
  # Resting place of the child of James Burton (property developer)
  {
    ?child dbo:parent dbr:James_Burton_(property_developer) .
    ?child dbo:deathPlace ?restingPlace1 .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  UNION

  # Resting place of the actor from a show with Emily Richard
  {
    ?show dbp:starring dbr:Emily_Richard .
    ?actor dbp:starring ?show .
    ?actor dbo:deathPlace ?restingPlace2 .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  UNION

  # Resting place of Alan Cunningham
  {
    ?alan dbr:Alan_Cunningham .
    ?alan dbo:deathPlace ?restingPlace3 .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  BIND (IF(BOUND(?restingPlace1), ?restingPlace1, IF(BOUND(?restingPlace2), ?restingPlace2, ?restingPlace3)) AS ?restingPlace)
  BIND (IF(BOUND(?child), ?child, IF(BOUND(?actor), ?actor, ?alan)) AS ?entity)

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
294,22,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of the architect of P. D. Houston Jr. House.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?politicianRestingPlace ?architectRestingPlace WHERE {
  # Find the resting place of a politician who received the Distinguished Service Medal (U.S. Army)
  ?person a dbo:Politician ;
          dbo:award dbr:Distinguished_Service_Medal_(U.S._Army) .
  ?person dbo:finalRestingPlace ?politicianRestingPlace .

  # Find the resting place of an architect associated with P. D. Houston Jr. House
  ?architect a dbo:Architect ;
            dbo:work dbr:P._D._Houston_Jr._House .
  ?architect dbo:finalRestingPlace ?architectRestingPlace .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
232,47,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify John Pertwee
  ?john a dbo:Person ;
        dbo:birthName ""John Devon Roland Pertwee""@en .
  
  # Step 2: Find his child who is an Actor, narrator, and producer
  ?child dbo:parent ?john ;
         (dbo:profession dbr:Actor ; 
          dbo:profession dbr:Narrator ; 
          dbo:profession dbr:Producer) .

  # Step 3: Identify the claim to fame of this child
  ?claimToFame a dbo:ClaimToFame ;
               dbo:subject ?child .
  
  # Assuming claim to fame includes a film and military conflict
  ?film a dbo:Film ;
        dbo:relatedClaimToFame ?claimToFame .
  ?conflict a dbo:MilitaryConflict ;
            dbo:relatedClaimToFame ?claimToFame .

  # Step 4: Find the actor involved in both the film and the military conflict
  ?actor dbo:actedIn ?film ;
         dbo:participatedIn ?conflict .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
161,29,test,"Give me the commander in Biscay Campaign and military force of Rif War and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInBiscayCampaign ?rifWarMilitaryForce WHERE {
  # Identify Francisco Largo Caballero's DBpedia resource
  VALUES ?franciscoLargoCaballero { dbr:Francisco_Largo_Caballero }

  # Find the commander in Biscay Campaign associated with him
  ?biscayCampaign dbo:commander ?commanderInBiscayCampaign .
  ?biscayCampaign dbo:participant ?franciscoLargoCaballero .

  # Determine the military force involved in Rif War under his association
  ?rifWar dbo:militaryForce ?rifWarMilitaryForce .
  ?rifWar dbo:participant ?franciscoLargoCaballero .

  # Ensure these are societal events and military conflicts
  ?biscayCampaign a dbo:MilitaryConflict .
  ?rifWar a (dbo:SocietalEvent | dbo:MilitaryConflict) .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
16,47,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional
WHERE {
  # Find the actor of ""Unnatural""
  ?actor dbo:actorIn dbr:Unnatural_(TV_series) .
  
  # Get the profession of this actor
  ?actor dbo:profession ?profession .

  # Find Ted Martin McGinley's spouse
  dbr:Ted_McGinley dbo:spouse ?spouse .

  # Find a professional in the same profession as the actor and who is also Ted McGinley's spouse
  ?professional dbo:profession ?profession .
  ?professional dbo:spouse dbr:Ted_McGinley .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
427,24,test,Give me the party of Romano Prodi and party of the father of Lamberto Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . },"```sparql
# Query for Romano Prodi's party affiliation
SELECT ?party WHERE {
  wd:Q12345 dbo:partyAffiliation ?party .
}
```

```sparql
# Query to find Lamberto Andreotti's father's name and his party affiliation
SELECT ?fatherParty WHERE {
  # Find Lamberto Andreotti's father
  wd:Q67890 foaf:parent ?father .

  # Get the father's party affiliation
  ?father dbo:partyAffiliation ?fatherParty .
}
```

Note: Replace `wd:Q12345` with Romano Prodi's actual DBpedia QID and `wd:Q67890` with Lamberto Andreotti's QID. The property `foaf:parent` is used to find the father, assuming it exists in the data.",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
801,45,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in  and producer of Westside Story (song).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find the writer or producer of the album ""What U See Is What U Get""
  ?album dbo:title ""What U See Is What U Get"" ;
         a dbo:Album .
  
  OPTIONAL { ?album dbo:writer ?writer . }
  OPTIONAL { ?album dbo:producer ?producer . }

  # Check if this writer/producer is also a musical artist
  FILTER (?writer = ?artist || ?producer = ?artist)
  ?artist a dbo:MusicalArtist .

  # Find the producer of ""Westside Story (song)""
  ?westsideSong dbo:title ""Westside Story"" ;
                a dbo:Songs .
  
  ?westsideSong dbo:producer ?producerOfWestsideStory .

  # Ensure it's the same person
  FILTER (?artist = ?producerOfWestsideStory)
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
747,62,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the writer of the work, that is a song, of Amba Shepherd and band of Shèna.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?athlete
WHERE {
  ?decedent a dbo:Person ;
            dbo:birthDate ?birthDate .

  ?athlete a dbo:Person, dbo:Athlete ;
           dbo:sport dbr:Soccer ;
           dbo:placeOfBirth dbr:Zolotonosha ;
           dbo:birthDate ?birthDate .

  ?writer a dbo:Writer ;
          dbo:work ?song .
  
  ?song a dbo:Song ;
        dbo:title ""Amba Shepherd""@en .

  ?band1 dbo:bandMember ?athlete ;
         dbo:bandMember ?writer .

  ?band2 dbo:bandMember ?athlete ;
         dbo:bandMember dbr:Shèna .

}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
328,45,test,"Give me the commander in Eastern Front (World War II) and awardee of Order of Suvorov and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Step 1: Identify Gustav Jonson's role
  ?gustavJonson a dbo:Politician ;
                dbo:leader ?office .

  # Step 2: Determine the government agency led by Gustav Jonson
  ?office a dbo:GovernmentAgency .

  # Step 3: Find the commander on the Eastern Front and awardee of Order of Suvorov
  ?commander a dbo:Person ;
             dbo:commander ""Eastern Front (World War II)""@en ;
             dbo:award dbr:Order_of_Suvorov .

  # Step 4: Link the commander to the government agency
  ?commander dbo:leader ?office .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
492,36,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find people who died in Khemis Miliana
  ?person a dbo:Person ;
          dbo:deathPlace dbr:Khemis_Miliana .
  
  # Ensure the same person also died in French Algeria
  OPTIONAL { 
    ?person dbo:deathPlace ?placeInFrenchAlgeria .
    FILTER EXISTS {
      ?placeInFrenchAlgeria dbo:country dbr:French_Algeria .
    }
  }

  # Filter to ensure both conditions are met
  FILTER EXISTS {
    ?person dbo:deathPlace ?placeInFrenchAlgeria .
    ?placeInFrenchAlgeria dbo:country dbr:French_Algeria .
  }
}
```",4,5,5,3,2,3,3,71,0,0,16,0,0.0,0
16,18,test,Give me the professional in Actress and spouse of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person WHERE {
  ?person rdf:type dbo:Actress .
  ?person dbo:birthName ""Georgeanne Marie Rice"" .
  ?person dbo:spouse dbpedia:Ted_McGinley .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
404,65,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  # Step 1: Find Ernest Augustus's father
  ?ernestAugustus dbo:father ?father .
  FILTER(STR(?ernestAugustus) = ""Ernest_Augustus,_Duke_of_Brunswick"")

  # Step 2: Find the spouse of that father who is Princess Victoria Louise of Prussia
  ?father dbo:spouse ?spouse .
  ?spouse dbp:birthName ""Princess Victoria Louise of Prussia"" .

  # Step 3: Identify their child who is a royalty
  ?spouse dbo:child ?royaltyChild .

  # Step 4: Find the parent of this child, who is also a royalty
  ?royaltyChild dbo:parent ?nextParent .
  
  # Step 5: Find the child of that parent, who is Prince George William of Hanover
  ?nextParent dbo:child ?georgeWilliam .
  FILTER(STR(?georgeWilliam) = ""Prince_George_William_of_Hanover"")

  # Return the child from step 3
  BIND(?royaltyChild AS ?child)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
959,47,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member WHERE {
  # Step 1: Identify Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  
  # Step 2: Ensure the university is Japanese and an educational institution
  ?university a dbo:University ;
             a dbo:EducationalOrganization ;
             dbo:location ?location .
  ?location rdfs:label ?cityLabel .
  FILTER (CONTAINS(LCASE(?cityLabel), ""japan"") || CONTAINS(LCASE(STR(?location)), ""japan""))

  # Step 3: Identify the leader of the 2010 Japanese House of Councillors election
  dbr:2010_Japanese_House_of_Councillors_election dbo:leader ?leader .
  
  # Step 4: Determine the residence country of this leader
  ?leader dbo:nativePlace ?country .

  # Step 5: Find members from the alma mater who are native to the leader's country
  ?member dbo:almaMater ?university ;
          dbo:nativePlace ?nativeCountry .
  FILTER (?nativeCountry = ?country)
}
```",5,11,6,3,2,3,3,71,0,0,84,0,0.0,0
427,63,test,"Give me the party of the father of Lamberto Andreotti and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v6 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherParty ?michelePintoParty ?prodiParty
WHERE {
  # Lamberto Andreotti's father and his party affiliation
  dbr:Lamberto_Andreotti dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .

  # Michele Pinto and his party affiliation
  dbr:Michele_Pinto dbo:partyAffiliation ?michelePintoParty .

  # Romano Antonio Prodi, ensuring he is a politician, and his party affiliation
  dbr:Romano_Antonio_Prodi a dbo:Politician ;
                          dbo:partyAffiliation ?prodiParty .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
778,16,test,"Give me the entity in the award of Ralph L. Brinster and author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardEntity ?softwareWork WHERE {
  # Part 1: Find the award entity associated with Ralph L. Brinster
  OPTIONAL {
    ?ralph a dbo:Person ;
           foaf:name ""Ralph L. Brinster"" .
    ?ralph dbo:award ?award .
    ?award rdfs:label ?awardEntity .
  }

  # Part 2: Find a software work authored by Bill Joy
  OPTIONAL {
    ?bill a dbo:Person ;
          foaf:name ""Bill Joy"" .
    ?softwareWork a dbo:Software ;
                  dbo:author ?bill .
    ?softwareWork rdfs:label ?softwareLabel .
  }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
9,66,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?almaMaterLabel WHERE {
  # Step 1: Identify the mayor of Northern Ireland Forum
  ?mayor a dbo:Politician ;
         dbo:officeHolder dbr:Northern_Ireland_Forum .

  # Step 2: Determine the alma mater of the mayor
  ?mayor dbo:almaMater ?almaMater .

  # Step 3: Find the awardee of the Royal Medal
  ?awardee a dbo:Person ;
           dbo:award dbr:Royal_Medal .

  # Ensure the alma maters match
  ?awardee dbo:almaMater ?almaMater .

  # Step 4: Identify the nicknamed entity (organization or educational institution)
  ?entity rdfs:label ?nicknameLabel ;
          a (dbo:EducationalInstitution|dbo:Organization) .
  
  FILTER(CONTAINS(LCASE(?nicknameLabel), ""northern ireland""))

  # Ensure the alma mater is related to this entity
  ?almaMater rdfs:label ?almaMaterLabel .

  FILTER(?almaMater = ?entity)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
281,66,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?result <http://dbpedia.org/ontology/place> ?v6 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Query 1: Find Bob Heffron's birth place that is a country
SELECT ?birthPlace WHERE {
    ?heffron dbo:birthPlace ?birthPlace .
    FILTER EXISTS { ?birthPlace rdf:type dbo:Country . }
    VALUES ?heffron { <http://dbpedia.org/resource/Bob_Heffron> }
}

# Query 2: Find the office holder and politician in New Zealand Army awarded Knight Grand Cross of the Order of the Bath
SELECT ?person WHERE {
    ?person dbo:officeHolderOf ?office .
    ?person rdf:type dbo:Politician .
    ?person dbo:militaryUnit ?nzArmy .
    ?nzArmy rdfs:label ""New Zealand Army""@en .
    ?person dbo:awardReceived <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
}

# Query 3: Find the war related to this military unit
SELECT ?war WHERE {
    ?person ?p ?nzArmy .
    ?nzArmy dbo:participatedInWar ?war .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
747,69,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v7 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?athlete WHERE {
  # Find the birth date of the decedent
  ?decedent a dbo:Person ;
            dbo:birthDate ?birthDate .

  # Find athletes who are soccer players born in Zolotonosha on that date
  ?athlete a dbo:SoccerPlayer, dbo:Athlete ;
           dbo:birthDate ?birthDate ;
           dbo:placeOfBirth dbr:Zolotonosha .

  # Ensure the athlete is associated with a band of someone born as ""Shèna""
  ?bandMember a dbo:Band ;
              dbo:member ?athlete .
  ?shena a dbo:Person ;
         rdfs:label ""Shèna""@en ;
         dbo:birthDate ?shenaBirthDate .
  ?bandMember dbo:member ?shena .

  # Ensure the athlete is associated with the writer of Apollo (Hardwell song)
  ?apolloSong dbr:Apollo_(song) ;
              dbo:lyricsBy ?writer .
  ?athlete dbo:bandMember ?writer .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
92,21,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of Joseph Michael.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?member WHERE {
  ?band rdf:type dbo:Band ;
        foaf:name ""Nevermore""@en .
  
  ?member dbo:bandMember ?band ;
          foaf:name ?name .

  OPTIONAL { 
    ?person foaf:name ""Joseph Michael""@en ;
            dbo:spouse ?member .
  }

  FILTER EXISTS {
    ?person foaf:name ""Joseph Michael""@en
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
161,70,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?conflict
WHERE {
  # Francisco Franco's involvement
  {
    ?franco a dbo:Person ;
            foaf:name ""Francisco Franco"" .
    ?franco dbo:spouse ?spouse . 
    ?spouse dbo:spouse ?franco .
    ?franco dbo:commanderOf ?conflict1 .
    FILTER(?conflict1 = dbr:Spanish_Civil_War)
  }
  
  # Francisco Largo Caballero's involvement
  {
    ?largo a dbo:Person ;
           foaf:name ""Francisco Largo Caballero"" .
    ?largo dbo:commanderOf ?conflict2 .
    FILTER(?conflict2 = dbr:Spanish_Civil_War)
  }
  
  # Linking both to the same conflict
  {
    BIND(IF(BOUND(?franco), ?franco, ?largo) AS ?commander)
    BIND(IF(BOUND(?conflict1), ?conflict1, ?conflict2) AS ?conflict)
  }
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
959,62,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of 2013 Júbilo Iwata season and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?leader a dbo:Politician ;
          dbo:electedAs dbr:2010_Japanese_House_of_Councillors_election .

  # Step 2: Determine the native country of this leader
  ?leader dbo:nationality ?country .

  # Step 3: Find the manager of the 2013 Júbilo Iwata season
  ?manager a dbo:Person ;
           dbo:birthDate ?birthDate ;
           dbo:manager dbr:Júbilo_Iwata_2013_season ;
           dbo:nationality dbr:Japan .

  # Step 4: Identify the person born in 1958
  FILTER (YEAR(?birthDate) = 1958)

  # Step 5: Determine their alma mater, ensuring it is a Japanese organization and falls under university/educational institution categories
  ?manager dbo:almaMater ?almaMater .
  ?almaMater a dbo:EducationalInstitution ;
             dbo:country dbr:Japan .

}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
285,18,test,Give me the parent of the child of the spouse of Aristotle Onassis and spouse of the professional in .,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentLabel WHERE {
  ?aristotleOnassis a dbo:Person ;
                    rdfs:label ""Aristotle Onassis""@en .
  
  ?aristotleOnassis dbo:spouse ?spouse .

  ?spouse dbo:child ?child .

  OPTIONAL { ?child dbo:parent ?parent . }
  FILTER(?parent != ?spouse && ?parent != ?aristotleOnassis)

  ?parent rdfs:label ?parentLabel .
}
```",5,5,6,3,2,3,2,20,0,2,3,0.0,0.0,0
827,16,test,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859) and father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?grandchild ?fatherOfCharlesChild
WHERE {
  # Step 1: Find Maria Pavlovna's child who is a royalty
  ?mariaChild dbo:parent dbr:Grand_Duchess_Maria_Pavlovna_of_Russia ;
              rdf:type dbo:Royal .

  # Step 2: Find the grandchild (child of that child) who is also a royalty
  ?grandchild dbo:parent ?mariaChild ;
              rdf:type dbo:Royal .

  # Step 3: Find Charles Augustus' child who is a royalty
  ?charlesChild dbo:parent dbr:Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach ;
                rdf:type dbo:Royal .

  # Step 4: Determine the father of this royal child
  ?fatherOfCharlesChild dbo:child ?charlesChild .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
747,39,test,Give me the band of Amba Shepherd and band of the person born as the persona of Shèna.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandAmbaShepherd ?bandShena WHERE {
  # Amba Shepherd's band
  OPTIONAL { 
    dbr:Amba_Shepherd dbo:band ?bandAmbaShepherd .
  }
  
  # Shèna (Sherrié Austin) and her band
  OPTIONAL {
    ?person dbo:birthName ""Sherrié Louise Austin""@en ;
            rdfs:label ?name .
    FILTER(CONTAINS(LCASE(?name), ""shena"") || CONTAINS(LCASE(?name), ""sherrie austin""))
    ?person dbo:band ?bandShena .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
281,51,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit ?birthPlaceCountry
WHERE {
  ?person rdfs:label ""Bob Heffron""@en .
  ?person a dbo:Person .

  # Find the military unit associated with Bob Heffron in the New Zealand Army
  ?person dbo:militaryService ?service .
  ?service dbo:militaryUnit ?militaryUnit .
  FILTER(CONTAINS(LCASE(STR(?militaryUnit)), ""new zealand army""))

  # Find the birthplace of Bob Heffron, ensuring it is a country
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country ;
              rdfs:label ?birthPlaceCountry .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
294,25,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?politicianRestingPlace ?architectRestingPlace WHERE {
  # Find the politician who received the Distinguished Service Medal (U.S. Army)
  ?person a dbo:Person ;
          dbo:award dbr:Distinguished_Service_Medal_(United_States_Army) ;
          dbo:occupation dbo:Politician .
  
  # Get their resting place
  OPTIONAL { ?person dbo:finalRestingPlace ?politicianRestingPlace . }
  
  # Find the architect of P. D. Houston Jr. House
  ?architect a dbo:Person ;
             dbo:architectOf dbr:P._D._Houston_Jr._House .
  
  # Get their resting place
  OPTIONAL { ?architect dbo:finalRestingPlace ?architectRestingPlace . }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
378,41,test,"Give me the war of the person born as Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query 1: War associated with Carl Pontus Gahn
SELECT ?war WHERE {
    ?person dbo:birthName ""Carl Pontus Gahn""@en .
    ?person dbo:participatedInMilitaryConflict ?war .
}

# Query 2: Commander in the Peninsular War
SELECT ?commander WHERE {
    ?conflict rdf:type dbo:MilitaryConflict ;
              rdfs:label ""Peninsular War""@en .
    ?commander dbo:commanderOfMilitaryConflict ?conflict .
}

# Query 3: Claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?fame WHERE {
    ?person rdfs:label ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en ;
            dbo:famousFor ?fame .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
303,21,test,"Give me the entity in Panama and party of the person born, that is a politician, as Arnulfo Arias Madrid and party of Guillermo Endara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party
WHERE {
  VALUES (?person ?name) { 
    (dbr:Arnulfo_Arias_Madrid ""Arnulfo Arias Madrid"")
    (dbr:Guillermo_Endara ""Guillermo Endara"")
  }
  
  ?person dbo:birthPlace dbr:Panama .
  ?person dbo:politicalParty ?party .

  FILTER EXISTS { ?person a dbo:Politician . }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
701,27,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?battle dbp:commander ?commander .
  FILTER (str(?battle) = ""Battle of Perire"") .

  ?commander dbp:father ?father .
  
  ?father rdf:type dbo:Monarch .

  ?father dbo:spouse ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
959,58,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of University of Tsukuba and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?teamManager
WHERE {
  # Step 1: Identify Yōichi Masuzoe's native country
  dbr:Yōichi_Masuzoe dbo:nationality ?nativeCountry .

  # Step 2: Find the manager of the 1998 Kashima Antlers season
  ?manager a dbo:SportsManager ;
          dbo:managedTeam dbr:Kashima_Antlers_1998_season .
  
  # Step 3: Confirm if this manager is a sports manager and attended University of Tsukuba
  ?manager dbo:sportManager true ;
          dbo:almaMater dbr:University_of_Tsukuba .

  # Step 4: Find the team managed by this manager
  ?teamManager a dbo:SportsManager ;
              dbo:managedTeam ?team .
  
  # Ensure that the team is managed by the sports manager identified in step 2
  ?manager dbo:managedTeam ?team .

  # Filter to ensure the native country matches Yōichi Masuzoe's native country
  ?teamManager dbo:nationality ?nativeCountry .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
421,20,test,Give me the band member of Senidah and native of the birthplace of Samir Bekrić and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
# Query 1: Find band members associated with Senidah
SELECT ?bandMember WHERE {
  ?senidah dbo:musicalArtist dbr:Senidah .
  ?senidah dbo:member ?bandMember .
}

UNION

# Query 2: Find natives of the birthplace of Samir Bekrić
SELECT ?native WHERE {
  ?samirBekric dbo:birthPlace ?birthPlace .
  ?person dbo:nativeOf ?birthPlace .
  FILTER(?person != ?samirBekric) # Exclude Samir Bekrić himself
}

UNION

# Query 3: Find the person born as Edin Dervišhalidović
SELECT ?person WHERE {
  ?person foaf:name ""Edin Dervišhalidović""@en .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
767,44,test,Give me the alma mater of the administration of George K. Nash and reference to the alter ego of Black Hood and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater ?alterEgo ?entityInBadenWuerttemberg WHERE {
  # Alma mater of George K. Nash
  ?nash a dbo:Person ;
        foaf:name ""George K. Nash"" .
  ?nash dbo:almaMater ?almaMater .

  # Alter ego of Black Hood
  ?blackHood a dbo:FictionalCharacter ;
             foaf:name ""Black Hood"" .
  OPTIONAL { ?blackHood dbo:alterEgo ?alterEgo . }

  # Entity in Baden-Württemberg
  ?entityInBadenWuerttemberg dbp:location dbc:Baden_W%C3%BCrttemberg ;
                             a ?type .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
994,56,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
# Step 1: Find an associated musical artist of Watchtower
SELECT ?watchtowerArtist WHERE {
    ?band dbr:Watchtower .
    ?band dbo:associatedBandOrMusicalArtist ?watchtowerArtist .
}

# Step 2: Find an associated musical artist of Red Tide
SELECT ?redTideArtist WHERE {
    ?band dbr:Red_Tide_(band) .
    ?band dbo:associatedBandOrMusicalArtist ?redTideArtist .
}

# Step 3: Find a common band member between the two artists found in steps 1 and 2
SELECT DISTINCT ?commonMember WHERE {
    VALUES (?artist1 ?artist2) { 
        (?watchtowerArtist ?redTideArtist)
    }
    ?artist1 dbo:bandMember ?member .
    ?artist2 dbo:bandMember ?member .
}

# Step 4: Identify Don Dokken's persona as a musical artist
SELECT DISTINCT ?dokkenPersona WHERE {
    dbr:Don_Dokken dbo:musicalArtist ?dokkenPersona .
}

# Step 5: Find the band of the person born who matches the criteria from steps 3 and 4
SELECT DISTINCT ?bandName WHERE {
    VALUES (?commonMember) { 
        # Replace with actual common member URI found in step 3
    }
    ?person dbo:birthDate ?date .
    ?person rdfs:label ?commonMemberLabel .
    FILTER (CONTAINS(LCASE(?commonMemberLabel), LCASE(""{{commonMember}}""))) .
    ?person dbo:musicalArtist ?dokkenPersona .
    VALUES (?dokkenPersona) { 
        # Replace with actual persona URI found in step 4
    }
    ?band dbo:bandMember ?person .
    ?band rdfs:label ?bandName .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
488,64,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceOfWar ?administrationLocation ?deathPlace
WHERE {
  # Saitō Hajime's military conflict and its birthplace
  ?saitoHajime dbo:militaryConflict ?war .
  ?war a dbo:MilitaryConflict ;
       dbo:birthPlace ?birthPlaceOfWar .

  # Tokugawa Masako's spouse and their father (royalty)
  dbr:Tokugawa_Masako dbo:spouse ?spouse .
  ?spouse dbo:father ?father .
  ?father a dbo:Monarch ; 
          dbo:administrativePost ?administration .
  ?administration dbo:location ?administrationLocation .

  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
528,51,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
# Query to find the military force of Narciso Campero
SELECT ?force WHERE {
  ?person dbo:birthName ""Narciso Campero""@en .
  OPTIONAL { ?person dbo:militaryForce ?force . }
}
```

```sparql
# Query to find the war associated with the commander in the Battle of La Rinconada de Ate
SELECT ?war WHERE {
  ?battle dbo:name ""Battle of La Rinconada de Ate""@en .
  ?battle dbo:commander ?commander .
  ?commander dbo:participatedIn ?war .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
92,24,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v2 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band WHERE {
  ?jim a dbo:Person ;
       rdfs:label ""Jim Sheppard"" ;
       dbo:bandMember ?band .
  
  ?joseph a dbo:Person ;
          rdfs:label ""Joseph Michael"" ;
          dbo:bandMember ?band .

  FILTER (lang(?jimLabel) = 'en')
  FILTER (lang(?josephLabel) = 'en')
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
617,42,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of Antiochus (son of Antiochus III the Great) and spouse of Laodice IV.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Seleucus II Callinicus and his child who is royalty
  dbr:Seleucus_II_Callinicus dbo:child ?royalChild .
  
  # Ensure the child is a royalty (assuming there's a property or class for royalty)
  ?royalChild rdf:type dbo:Monarch .

  # Find the grandchild of Seleucus II Callinicus
  ?royalChild dbo:child ?grandchild .

  # Antiochus, son of Antiochus III the Great
  dbr:Antiochus_III_the_Great dbo:child ?antiochus .
  
  # Find the child of this Antiochus
  ?antiochus dbo:child ?antiochusChild .

  # Ensure the grandchild is married to Laodice IV and parent of antiochusChild
  ?grandchild dbo:spouse dbr:Laodice_IV .
  ?grandchild dbo:child ?antiochusChild .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
92,57,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v5 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?nevermoreBandMember ?furneyBand ?commonArtist 
WHERE {
  # Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?movie dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?movie dbo:starring ?actor .

  # Confirm the actor is a member of Nevermore
  ?actor dbo:member ?nevermoreBandMember .
  ?nevermoreBandMember rdfs:label ""Nevermore""@en .

  # Find Joseph Michael Furney's band
  dbr:Joseph_Michael_Furney dbo:band ?furneyBand .

  # Find a common musical artist or entity between the bands
  ?commonArtist dbo:member ?nevermoreBandMember .
  ?commonArtist dbo:member ?furneyBand .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
92,35,test,"Give me the band of the person born as Joseph Michael Furney and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band
WHERE {
  ?person a dbo:Person ;
          foaf:name ?stageName ;
          dbo:birthName ""Joseph Michael Furney""^^xsd:string ;
          dbo:member ?membership .
  
  ?membership dbo:band ?band ;
              dbo:endDate ?endDate .

  FILTER NOT EXISTS { ?membership dbo:endDate ?endDate . }
  
  ?person a dbo:Artist .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
345,19,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen and figure known as the nickname of FC Vaduz.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player ?teamLabel WHERE {
  # Step 1: Get Eiður Guðjohnsen's birth date
  ?eiður a dbo:SoccerPlayer ;
         rdfs:label ""Eiður Guðjohnsen""@en .
  ?eiður dbo:birthDate ?birthDate .

  # Step 2: Find another soccer player and manager born on the same date
  ?player a dbo:SoccerPlayer, dbo:SoccerManager ;
          dbo:birthDate ?birthDate ;
          rdfs:label ?playerLabel .

  # Step 3: Get FC Vaduz's nickname
  ?vaduz a dbo:SportsTeam ;
         rdfs:label ""FC Vaduz""@en .
  ?vaduz rdfs:comment ?comment .
  FILTER(CONTAINS(LCASE(?comment), ""nickname""))

  # Step 4: Find the team of this player/manager
  ?player dbo:team ?team .
  ?team rdfs:label ?teamLabel .

  # Ensure we get a result for the nickname part
  BIND(SUBSTR(STR(?comment), STRSTARTS(STR(?comment), ""nickname""), 100) AS ?nickname)
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
801,29,test,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in .","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist ?work WHERE {
  # Chris Taylor's production works
  ?production a dbo:Production ;
              dbo:producer dbr:Chris_Taylor_(music_producer) .

  # Works involving 50 Cent
  ?production dbo:performer dbr:50_Cent .
  
  # Ensure the work is a song or musical work
  ?production a (dbo:Song|dbo:MusicalWork) ;
              rdfs:label ?workLabel .

  # Find associated artists with Chris Taylor in these works
  ?production dbo:performer ?artist .

  FILTER(LANG(?workLabel) = 'en')
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
184,69,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of the child of Archduke Joseph Karl of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v7 . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalEntity WHERE {
  # Step 1: Find Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            rdfs:label ""Margaret of Austria, Archduchess of Austria"" ;
            dbo:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) = 1925)

  # Step 2: Find her parent
  ?parentParent dbo:child ?margaret .

  # Step 3: Find the child of that parent (grandchild of Margaret)
  ?grandchild dbo:parent ?parentParent .

  # Step 4: Identify Archduke Joseph Karl of Austria and his child's child
  ?josephKarl a dbo:Person ;
              rdfs:label ""Joseph Karl of Austria, Archduke"" .
  
  ?childOfJosephKarl dbo:parent ?josephKarl .
  ?grandchildOfChild dbo:parent ?childOfJosephKarl .

  # Step 5: Find the landmark at elevation 96.0 meters
  ?landmark a dbo:Settlement ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER(?elevation = ""96.0""^^xsd:float)

  # Step 6: Identify native of that landmark
  ?native dbo:nativePlace ?landmark .

  # Combine to find the final entity
  ?finalEntity dbo:parent ?grandchild ;
               dbo:child ?grandchildOfChild .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
391,62,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/nickname> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nativePlace WHERE {
  ?sherryHormann a dbo:Person ;
                 foaf:surname ""Hormann"" ;
                 dbo:spouse ?spouse .
  
  ?spouse dbo:work ?claimToFame .

  ?actor rdfs:label ""Jackson, Tennessee""@en ;
         dbo:nativePlace ?nativePlace .

  ?film dbo:title ""All About the Andersons""@en ;
        dbo:actor ?actor .

  FILTER(?actor = ?actorInFilm)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,45,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of Compton, California and actor of The Departed.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find actor of ""The Departed""
  ?departed a dbo:Film ;
           dbo:title ""The Departed""@en .
  
  ?departed dbo:starring ?actor .

  # Check if the actor has professional ties to Compton, California
  OPTIONAL { ?actor dbo:birthPlace dbr:Compton,_California . }
  FILTER EXISTS { ?actor dbo:birthPlace dbr:Compton,_California }

  # Find a movie that is both a work and a television show
  ?movie a dbo:Film ;
         rdf:type dbo:Work, dbo:TelevisionShow .

  # Ensure the actor acted in this movie as well
  ?movie dbo:starring ?actor .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
427,59,test,Give me the reference to the name of the party of Michele Pinto and party of the father of the alumnus of Massachusetts Institute of Technology.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?micheleParty ?fatherName ?fatherParty WHERE {
  # Part 1: Michele Pinto's Party
  ?michele a dbo:Person ;
           foaf:name ""Michele Pinto""@en .
  OPTIONAL { ?michele dbo:partyAffiliation ?micheleParty . }

  # Part 2: Father of an Alumnus from MIT
  ?alumnus a dbo:Person ;
           dbo:almaMater <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?father dbp:child ?alumnus ;
          foaf:name ?fatherName .
  OPTIONAL { ?father dbo:partyAffiliation ?fatherParty . }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
754,18,test,Give me the parent of the parent of the parent of Min Linka and parent of the child of Ram Khamhaeng.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
# Query for Min Linka's great-grandparent
SELECT ?greatGrandparent WHERE {
  ?minLinka dbo:birthPlace dbr:Min_Linka .
  ?minLinka dbo:parent ?parent1 .
  ?parent1 dbo:parent ?grandparent .
  ?grandparent dbo:parent ?greatGrandparent .
}

# Query for the parent of Ram Khamhaeng's child
SELECT ?childParent WHERE {
  ?ramKhamhaeng dbo:birthPlace dbr:Ram_Khamhaeng .
  ?ramKhamhaeng dbo:child ?child .
  ?child dbo:parent ?childParent .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
378,54,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warGahn ?fameCrillon ?warCommanded
WHERE {
  # Find the war Carl Pontus Gahn participated in
  OPTIONAL {
    ?person dbo:birthName ""Carl Pontus Gahn""@en.
    ?person dbo:participatedIn ?warGahn.
  }

  # Find Louis des Balbes de Berton de Crillon's claim to fame and the war he commanded during the Peninsular War
  OPTIONAL {
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:famousFor ?fameCrillon.
    ?person dbo:commanded ?warCommanded.
    FILTER(CONTAINS(LCASE(STR(?warCommanded)), ""peninsular war""))
  }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
701,65,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfGrandchild
WHERE {
  # Seti I's child
  ?setiIChild dbo:child dbr:Seti_I .
  
  # Seti I's grandchild (child of Seti I's child)
  ?grandchild dbo:child ?setiIChild .

  # Merneptah's father
  ?merneptahFather dbo:child dbr:Ramesses_II .

  # Spouse of Merneptah's father (Ramesses II's spouse)
  ?spouseOfMerneptahsFather dbo:spouse ?merneptahFather .
  
  # Nefertari's child
  ?nefertarisChild dbo:child dbr:Nefertari .

  # Parent of Nefertari's child (should be Ramesses II)
  ?parentOfNefertarisChild dbo:child ?nefertarisChild .

  # Find the common entity among these relationships
  FILTER (?grandchild = ?spouseOfMerneptahsFather && ?spouseOfMerneptahsFather = ?parentOfNefertarisChild)
  
  # Parent of Seti I's grandchild (which is also Ramesses II)
  ?parentOfGrandchild dbo:parent ?grandchild .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
783,18,test,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMemberPriscilla ?bandMemberSamuel
WHERE {
  # Priscilla Opoku-Kwarteng (Ice Prince)
  ?icePrince a dbo:MusicalArtist ;
             foaf:name ""Ice Prince""@en .
  
  # Samuel Ofori Amponsah (Stonebwoy)
  ?stonebwoy a dbo:MusicalArtist ;
             foaf:name ""Stonebwoy""@en .

  # Find band members associated with Ice Prince
  ?icePrince dbo:bandMember ?bandMemberPriscilla .
  
  # Find band members associated with Stonebwoy
  ?stonebwoy dbo:bandMember ?bandMemberSamuel .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
959,57,test,"Give me the member of University of Tsukuba and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of Takashi Sekizuka.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v1 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member WHERE {
    # Step 1: Identify a politician associated with the 2010 Japanese House of Councillors election
    ?politician dbo:election dbr:2010_Japanese_House_of_Councillors_election .
    
    # Step 2: Determine the native country of this politician
    ?politician dbo:nationality ?country .

    # Step 3: Find members of University of Tsukuba from this country
    ?member dbo:almaMater dbr:University_of_Tsukuba ;
            dbo:nationality ?country .

    # Step 4: Identify managers of Takashi Sekizuka's team
    ?member dbo:manager dbr:Takashi_Sekizuka .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
328,46,test,Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeVolcanoRyukyu (GROUP_CONCAT(?awardVolcanoRyukyu; separator="", "") AS ?awardsVolcanoRyukyu) 
         ?awardeeSzálasi (GROUP_CONCAT(?awardSzálasi; separator="", "") AS ?awardsSzálasi)
WHERE {
  # Awardee for the Volcano and Ryukyu Islands campaign
  ?volcanoCampaign dbo:campaignName dbr:Battle_of_the_Ryukyu_Islands .
  ?volcanoAward dbo:recipient ?awardeeVolcanoRyukyu ;
                dbo:name ?awardVolcanoRyukyu .
  
  # Awardee for the force of Ferenc Szálasi
  ?szalasiForce dbo:leader dbr:Ferenc_Szálasi .
  ?szalasiAward dbo:recipient ?awardeeSzálasi ;
                dbo:name ?awardSzálasi .
}
```",5,5,6,3,2,3,3,71,0,0,5,0,0.0,0
404,66,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia and her spouse
  dbr:Princess_Victoria_Louise_of_Prussia a dbo:Person ;
    dbo:spouse ?spouse .

  # Step 2: Find the father of her spouse
  ?spouse dbo:parent ?father .

  # Step 3: Identify any child of this father who is royalty and connected to Ernest Augustus, Duke of Brunswick
  ?child dbo:parent ?father ;
         a dbo:Person ;
         dbo:child dbr:Ernest_Augustus,_Duke_of_Brunswick .

  # Ensure the child is royalty (optional check)
  ?child dbo:title ?title .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
161,66,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?eventFranco ?eventNameFranco ?eventLargoCaballero ?eventNameLargoCaballero
WHERE {
  # Francisco Franco's event
  ?francoEvent dbo:commander dbr:Francisco_Franco .
  ?francoEvent a dbo:MilitaryConflict ;
              a dbo:SocietalEvent .
  ?francoEvent rdfs:label ?eventNameFranco .

  # Francisco Largo Caballero's event
  ?largoCaballeroEvent dbo:commander dbr:Francisco_Largo_Caballero .
  ?largoCaballeroEvent a dbo:MilitaryConflict ;
                      a dbo:SocietalEvent .
  ?largoCaballeroEvent rdfs:label ?eventNameLargoCaballero .

  FILTER (lang(?eventNameFranco) = 'en')
  FILTER (lang(?eventNameLargoCaballero) = 'en')
}
```",7,13,8,3,3,3,3,71,0,12,32,0.0,0.0,0
184,21,test,Give me the parent of Archduchess Ilona of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the parent of Archduchess Ilona of Austria
SELECT ?parent WHERE {
  VALUES ?ilona { dbr:Archduchess_Ilona_of_Austria }
  ?ilona dbo:parent ?parent .
}

UNION

# Query for a notable native of Budapest and their parent(s)
SELECT ?native ?parent WHERE {
  # Assuming Sándor Petőfi as an example
  VALUES ?budaNative { dbr:Sándor_Petőfi }
  ?budaNative dbo:birthPlace dbr:Budapest .
  ?budaNative dbo:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,70,test,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry
WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?politician a dbo:Politician ;
             dbo:leaderOf dbr:Japanese_House_of_Councillors_election,_2010 .

  # Step 2: Find the manager of the team managed by the sports manager of the 1998 Kashima Antlers season
  ?sportsManager a dbo:SportsManager ;
                dbo:managerOfTeam dbr:Kashima_Antlers_season,_1998 .
  ?teamManager a dbo:SportsManager ;
               dbo:managerOfTeam ?team .
  ?team dbo:managedBy ?sportsManager .

  # Step 3: Determine the alma mater of Eiji Ōtsuka
  ?almaMater a dbo:EducationalInstitution, dbo:University ;
             dbo:alumni dbr:Eiji_Ōtsuka ;
             dbo:country dbr:Japan .
  
  # Linking all parts together
  ?politician dbo:managerOfTeam ?team .
  ?politician dbo:almaMater ?almaMater .

  # Step 4: Find the native country of the residence of the identified person
  ?residence dbo:nativePlace ?nativeCountry ;
             dbo:resident ?politician .
}
```",8,15,9,3,3,3,3,71,0,0,2,0,0.0,0
547,49,test,Give me the resting place of the child of James Burton (property developer) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childRestingPlace ?awardeeRestingPlace WHERE {
  # Resting place of the child of James Burton (property developer)
  {
    SELECT ?child ?restingPlace WHERE {
      ?person a dbo:Person ;
              foaf:name ""James Burton"" ;
              dbo:occupation dbr:Property_developer .
      ?person dbo:child ?child .
      OPTIONAL { ?child dbo:finalBurialPlace ?restingPlace . }
    } LIMIT 1
  }

  # Resting place of the awardee of the award of Gerald Graham
  {
    SELECT ?awardee ?awardeeRestingPlace WHERE {
      ?person a dbo:Person ;
              foaf:name ""Gerald Graham"" .
      ?person dbo:award ?award .
      ?award dbo:recipient ?awardee .
      OPTIONAL { ?awardee dbo:finalBurialPlace ?awardeeRestingPlace . }
    } LIMIT 1
  }

  BIND(?restingPlace AS ?childRestingPlace)
  BIND(?awardeeRestingPlace AS ?awardeeRestingPlace)
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
378,66,test,"Give me the war of the person born as Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
# Query for Carl Pontus Gahn's associated war based on birth date
SELECT ?war WHERE {
  ?gahn dbo:birthDate ?birthDate .
  FILTER (strstarts(str(?birthDate), ""18""))
  OPTIONAL { ?event dbo:date ?date . 
             ?event rdf:type dbo:MilitaryConflict .
             ?event rdfs:label ?war .
             FILTER (?date >= strbefore(str(?birthDate), ""-"") && ?date <= strafter(str(?birthDate), ""-01-01T00:00:00""))
           }
  VALUES ?gahn { <http://dbpedia.org/resource/Carl_Pontus_Gahn> }
}

# Query for the commander of the Peninsular War
SELECT ?commander WHERE {
  ?war dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict .
  ?event rdfs:label ""Peninsular War""@en .
  ?event dbo:commander ?commander .
}

# Query for Thomas Trigge's claim to fame
SELECT ?claimToFame WHERE {
  ?trigge dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(str(?occupation)), ""military""))
  ?trigge dbo:knownFor ?event .
  ?event rdf:type dbo:Event .
  ?event rdfs:label ?claimToFame .
  VALUES ?trigge { <http://dbpedia.org/resource/Thomas_Trigge> }
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
9,56,test,"Give me the alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
# Query for Allen Hill's alma mater and its nickname
SELECT DISTINCT ?almaMater ?nickname WHERE {
  ?allenHill a dbo:Scientist ;
             foaf:name ""Allen Hill"" .
  ?allenHill dbo:almaMater ?almaMater .
  ?almaMater a dbo:EducationalOrganization ;
             dbo:location dbr:Northern_Ireland .
  
  OPTIONAL {
    ?almaMater rdfs:label ?nickname .
  }
}

UNION

# Query for the mayor of Northern Ireland Forum's alma mater and its nickname
SELECT DISTINCT ?almaMater ?nickname WHERE {
  ?mayor a dbo:Politician ;
         dbo:position dbr:Northern_Ireland_Forum_Mayor .
  ?mayor dbo:almaMater ?almaMater .
  ?almaMater a dbo:EducationalOrganization ;
             dbo:location dbr:Northern_Ireland .

  OPTIONAL {
    ?almaMater rdfs:label ?nickname .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
312,9,test,"Give me the entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy) and entity in the birthplace of Giorgio Grigolli.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInAdministration ?birthplaceOfGiorgioGrigolli
WHERE {
  # Entity in the administration that is a settlement, region, Italian state, and linked to Democratic Party (Italy)
  ?administration dbo:member dbr:Democratic_Party_(Italy) .
  ?administration dbo:country dbr:Italy .
  ?entityInAdministration dbo:partOf ?administration ;
                         rdf:type/(dbo:Settlement|dbo:Region|dbo:State) .

  # Entity in the birthplace of Giorgio Grigolli
  dbr:Giorgio_Grigolli dbo:birthPlace ?birthplaceOfGiorgioGrigolli .
}
```",4,8,5,2,2,2,2,9,0,0,587,0,0.0,0
232,69,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorRole WHERE {
  # Step 1: Identify Sean Pertwee's claim to fame (film or military conflict)
  ?claimToFame a dbo:Film ; 
               dbo:actor dbr:Sean_Pertwee .
  
  UNION
  
  ?claimToFame a dbo:MilitaryConflict ;
               dbo:participant dbr:Sean_Pertwee .

  # Step 2: Determine Jon Pertwee's birth name and native residence
  dbr:Jon_Pertwee dbo:birthName ?birthName ;
                  dbo:birthPlace ?nativeResidence .
  
  FILTER (isLiteral(?nativeResidence) && regex(str(?nativeResidence), ""British""))

  # Step 3: Identify a French politician with the same native place
  ?politician a dbo:Politician, dbo:OfficeHolder ;
              dbo:nativePlace ?nativeResidence ;
              dbo:country dbr:France .

  # Step 4: Determine Sean Pertwee's actor role in his claim to fame
  ?claimToFame dbo:actor ?actorRole .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
391,70,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of the figure known as Hub City and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v1 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v1 <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
    ?sherryHormann dbo:spouse ?spouse .
    FILTER (str(?sherryHormann) = ""Sherry_Hormann"")
}

# Step 2: Find the claim to fame of Sherry Hormann's spouse
SELECT ?claimToFame WHERE {
    ?spouse dbo:claimToFame ?claimToFame .
    ?claimToFame a dbo:Work .
}

# Step 3: Identify Hub City and its native professional
SELECT ?hubCity ?nativeProfessional WHERE {
    ?city rdfs:label ""Hub City""@en .
    ?professional dbo:nativePlace ?city ;
                  dbo:profession ?profession .
    FILTER (str(?profession) = ""actor"" || str(?profession) = ""actress"")
}

# Step 4: Find the actor in common
SELECT DISTINCT ?actor WHERE {
    # Actor of the claim to fame of Sherry Hormann's spouse
    ?claimToFame dbo:starring ?actor .
    
    # Actor of a movie that is also a work and a television show
    ?movie dbo:starring ?actor ;
           a dbo:Film, dbo:Work, dbo:TelevisionShow .

    # Actor associated with the professional native of Hub City
    ?professional dbo:profession ""actor""@en ;
                  dbo:nativePlace ?hubCity .
    ?actor dbo:birthPlace ?hubCity .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
161,28,test,"Give me the military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?commander WHERE {
  # Find military forces involved in the Spanish Civil War
  ?event a dbo:MilitaryConflict ;
         dbo:participatingMilitaryUnit ?militaryForce .
  
  FILTER(?event = dbr:Spanish_Civil_War)

  OPTIONAL {
    # Find commanders of these forces, specifically Francisco Franco's role
    ?commander a dbo:Person ;
               foaf:name ""Francisco Franco""@en ;
               dbo:commanderOf ?militaryForce .

    # Check if the commander was involved in the Biscay Campaign
    ?campaign dbo:participatingMilitaryUnit ?militaryForce ;
              dbo:commander ?commander .
    
    FILTER(?campaign = dbr:Biscay_Campaign)
  }
}
```",4,7,5,2,3,3,3,71,0,0,3,0,0.0,0
783,20,test,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMemberEbony (GROUP_CONCAT(?associatedArtistSamuel; separator="", "") AS ?associatedArtists)
WHERE {
  # Find band members of Ebony Reigns
  ?ebony dbo:birthDate ?date .
  FILTER(CONTAINS(LCASE(STR(?ebony)), ""ebony reigns""))
  
  ?bandMemberEbony dbo:member ?ebony .

  # Find associated musical artists for Samuel Ofori Amponsah's band member
  ?samuel dbo:birthDate ?dateSamuel .
  FILTER(CONTAINS(LCASE(STR(?samuel)), ""samuel ofori amponsah""))
  
  ?bandMemberSamuel dbo:member ?samuel .

  # Find associated artists for the band members
  ?associatedArtistEbony dbo:associatedBandMember ?bandMemberEbony .
  ?associatedArtistSamuel dbo:associatedBandMember ?bandMemberSamuel .

  FILTER(?bandMemberEbony = ?bandMemberSamuel)

  VALUES ?associatedArtistSamuel {
    ?artist
  }
}
GROUP BY ?bandMemberEbony
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
281,64,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in Colony of New Zealand.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?war ?militaryUnit ?profession ?officeHolder ?politician
WHERE {
  # Find Jonathon Band's award
  ?person rdfs:label ""Jonathon Band""@en .
  ?person dbo:award ?award .

  # Determine the war related to the awardee of the award
  ?award dbo:awardedFor ?war .

  # Identify a military unit in New Zealand Army and its profession
  ?militaryUnit rdf:type dbo:MilitaryUnit ;
                dbo:militaryBranch dbr:New_Zealand_Army .
  ?militaryUnit dbo:profession ?profession .

  # Find an office holder and politician in Colony of New Zealand
  ?officeHolder rdf:type dbo:OfficeHolder ;
                dbo:country dbr:Colony_of_New_Zealand ;
                dbo:politician ?politician .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
801,50,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?rapper WHERE {
  # Identify the song ""40 Dayz & 40 Nightz""
  ?song a dbo:Songs ;
        rdfs:label ?title .
  
  FILTER (CONTAINS(LCASE(?title), ""40 dayz & 40 nightz"")) .

  # Find its writer who is also a musical artist
  ?writer dbo:writer ?song ;
          a dbo:MusicalArtist .

  # Identify this writer's role as a producer of another work
  ?work dbo:producer ?writer ;
        a dbo:Songs, dbo:Song .
  
  # Find the rapper associated with this production
  ?rapper dbo:musicalArtist ?work ;
          a dbo:Rapper .
}
```",5,11,6,3,2,3,3,71,0,0,9,0,0.0,0
435,20,test,"Give me the work of Article 62, Section IV of Constitution of Iceland and territory administered from Reykjavík and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . }","```sparql
# Query for Article 62, Section IV of Constitution of Iceland
SELECT ?articleText WHERE {
  ?constitution dbr:Icelandic_Constitution .
  ?constitution dbo:hasArticle ?article .
  ?article rdfs:label ""Article 62""@en ;
           dbo:hasSection ?section .
  ?section rdfs:label ""IV""@en ;
           dbo:textContent ?articleText .
}

UNION

# Query for territories administered from Reykjavík
SELECT DISTINCT ?territory WHERE {
  dbr:Reykjavík dbo:administers ?territory .
}

UNION

# Query for the time zone region of Bombali Shebora Chiefdom
SELECT DISTINCT ?timeZoneRegion WHERE {
  dbr:Bombali_Shebora_Chowchiefdom dbo:locatedIn ?location .
  ?location dbo:timeZone ?timeZone .
  ?timeZone rdfs:label ?timeZoneRegion .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
232,64,test,"Give me the actor of Dog Soldiers (film) and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Step 1: Find Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?jonBirthName .

  # Step 2: Identify a child of Jon Pertwee who is a politician in France
  ?child dbo:parent dbr:Jon_Pertwee ;
         dbo:country dbr:France ;
         dbo:occupation dbr:Politician ;
         dbo:nativePlace ?nativePlace .

  # Step 3: Ensure the native place is British and a settlement
  ?nativePlace dbo:country dbr:United_Kingdom ;
              rdf:type dbo:Settlement .

  # Step 4: Find the actor of ""Dog Soldiers"" who is a native of this place
  ?film dbo:title ""Dog Soldiers""@en .
  ?film dbo:actor ?actor .
  ?actor dbo:nativePlace ?nativePlace .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
232,49,test,"Give me the child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  # Identify John Pertwee
  dbr:John_Pertwee dbo:birthName ""John Devon Roland Pertwee""@en .
  
  # Find his children
  dbr:John_Pertwee dbo:child ?child .

  # Get the child's name
  ?child rdfs:label ?childName .

  # Check the residence of the child
  ?child dbo:residence ?settlement .

  # Ensure the settlement is British and linked to a French politician
  ?settlement dbo:country dbr:United_Kingdom .
  ?politician dbo:nativePlace ?settlement ;
              rdf:type dbo:Politician ;
              dbo:officeHolder true ;
              dbo:country dbr:France .

}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
701,50,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Seti I's children
  ?child1 dbo:father dbr:Seti_I .
  
  # One of Seti I's grandchildren through Ramesses II
  ?grandchild dbo:parent ?child1 .
  
  # Merneptah's father
  ?merneptahFather dbo:father dbr:Merneptah .

  # Spouse of Merneptah's father (Ramesses II)
  ?spouse dbo:spouse ?merneptahFather .
  
  FILTER (?child1 = ?merneptahFather) 
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
328,47,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of the person decedent at Budapest.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?commander WHERE {
  # Find Bruce Fraser and any awards he received
  VALUES (?fraser) { dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape }
  
  OPTIONAL {
    ?fraser dbo:award ?award .
    ?award dbo:recipient ?awardee .
  }

  # Find the commander in force at Budapest related to Bruce Fraser's lineage
  OPTIONAL {
    ?commander dbo:placeOfBirth dbr:Budapest ;
               dbo:deceasedPerson ?descendant .
    ?descendant dbo:parent ?fraser .
  }
}
```",5,5,6,3,2,3,3,71,0,0,5,0,0.0,0
747,66,test,Give me the band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song) and person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . },"```sparql
# Query for the band of the person born as the persona of Shèna
SELECT ?band WHERE {
  ?person rdfs:label ""Shèna""@en .
  ?person dbo:birthName ?realName .
  ?person dbo:associatedBand ?band .
}

UNION

# Query for the band of the writer of Apollo (Hardwell song)
SELECT ?band WHERE {
  ?song dbo:title ""Apollo""@en ;
        dbo:lyricsBy ?writer .
  ?writer dbo:associatedBand ?band .
}

UNION

# Query to find a person born on the same date as Pavlo Khudzik
SELECT ?person ?band WHERE {
  ?pavlo dbo:birthDate ?date .
  FILTER regex(str(?pavlo), ""Pavlo Khudzik"", ""i"") .

  ?otherPerson dbo:birthDate ?date ;
               dbo:associatedBand ?band .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
492,64,test,"Give me the person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?decedentOfAuthor ?decedentOfCapital ?francoHovaCommander
WHERE {
  # Find the author of ""French Algeria""
  ?book dbo:author ?author .
  FILTER(STR(?book) = ""French_Algeria"")

  # Get the decedent of the author
  ?author dbo:decedent ?decedentOfAuthor .

  # Find Khemis Miliana District's capital
  dbr:Khemis_Miliana_District dbo:capital ?capital .
  
  # Get the decedent of the capital's person
  ?capital dbo:decedent ?decedentOfCapital .

  # Identify a commander in the Franco-Hova Wars
  ?war dbo:commanderInWar ?francoHovaCommander .
  FILTER(STR(?war) = ""Franco_Hova_Wars"")
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
184,53,test,"Give me the child of Archduke Joseph August of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonEntity WHERE {
  # Find a child of Archduke Joseph August of Austria
  ?child1 dbo:parent dbr:Archduke_Joseph_August_of_Austria .
  
  # Find the native of a landmark at elevation 96.0 meters
  ?landmark dbp:elevation ""96.0""^^xsd:float ;
            dbo:native ?native .

  # Find the parent of this native
  ?parentOfNative dbo:child ?native .

  # Find a child of Archduke Joseph Francis of Austria
  ?child2 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  
  # The common entity must be all three:
  # - A child of Archduke Joseph August of Austria
  # - A parent of the native of the landmark at elevation 96.0 meters
  # - A parent of a child of Archduke Joseph Francis of Austria
  ?commonEntity rdf:type dbo:Person .
  
  FILTER (?child1 = ?commonEntity)
  FILTER (?parentOfNative = ?commonEntity)
  FILTER EXISTS { ?commonEntity dbo:child ?child2 }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
701,31,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfHenuttawy WHERE {
  # Step 1: Find Amun-her-khepeshef's spouse
  ?amunHerKhepeshef a dbo:Person ;
                   foaf:name ""Amun-her-khepeshef""@en .
  
  ?spouse dbo:spouse ?amunHerKhepeshef .

  # Step 2: Find the child of this spouse
  ?child dbo:parent ?spouse .

  # Step 3: The parent of this child is the spouse, so we continue to find Henuttawy
  ?henuttawy a dbo:Person ;
            foaf:name ""Henuttawy""@en ;
            dbo:era dbr:Era_of_the_19th_dynasty_of_Egypt .
  
  # Step 4: Find the parent of this specific Henuttawy
  ?parentOfHenuttawy dbo:child ?henuttawy .

}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
328,50,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Joseph Stalin as a resource
  dbr:Joseph_Stalin a dbo:Person .

  # Find a commander involved in the Siege of Budapest
  ?event dbo:location dbr:Budapest .
  ?event dbo:participatedIn dbr:Soviet_forces_in_WWII .
  
  # Commander who led an office (government agency)
  ?commander dbo:position ?office ;
             dbo:participatedIn ?event .

  # Ensure the commander is a person
  ?commander a dbo:Person .

  # Filter to ensure the commander also led a government agency
  ?office dbo:type dbr:Government_agency .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
179,19,test,Give me the parent of the child of the parent of Vajiralongkorn and person born as the birth name of Sirikit.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild
WHERE {
  # Step 1: Find Vajiralongkorn's parent (King Bhumibol Adulyadej)
  dbr:Vajiralongkorn dbo:father|dbo:mother ?parent .

  # Step 2: Find a child of King Bhumibol Adulyadej
  ?child dbo:father|dbo:mother ?parent .
  
  # Step 3: Get Sirikit's birth name
  dbr:Sirikit dbo:birthName ""Sirikit Kitiyakara""@en .

  # Step 4: Find any person born as Sirikit's birth name
  ?person dbo:birthName ""Sirikit Kitiyakara""@en .
  
  # Step 5: Get the parent of that person
  ?person dbo:father|dbo:mother ?parentOfChild .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
77,18,test,Give me the force of the mayor of Congress Poland and war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query 1: Force of the Mayor/Leader of Congress Poland
SELECT ?force WHERE {
  ?person a dbo:Mayor ;
          dbo:country dbr:Congress_Poland .
  OPTIONAL { ?person dbo:militaryForce ?force . }
}

# Query 2: War of the Awardee of Maxim Grigorievich Vlasov
SELECT DISTINCT ?war WHERE {
  ?awardee dbo:awardReceived ?award ;
           dbo:participatedInWar ?war .
  ?award dbo:recipient dbr:Maxim_Grigorievich_Vlasov .
}
```",5,5,6,3,2,3,2,20,0,0,24,0,0.0,0
303,20,test,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Guillermo Endara and party of Arnulfo Arias.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?party WHERE {
  # Find the country of El Valle de Antón
  dbr:El_Valle_de_Antón dbo:country dbr:Panama .

  # Find Guillermo Endara's party
  OPTIONAL { 
    dbr:Guillermo_Endara dbo:politicalParty ?endara_party .
  }

  # Find Arnulfo Arias's party
  OPTIONAL {
    dbr:Arnulfo_Arias_Madrid dbo:politicalParty ?arias_party .
  }

  # Ensure both are part of the same party and it is in Panama
  FILTER (?endara_party = ?arias_party)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
959,24,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?nativeOf
WHERE {
  ?person dbo:managerTeam <http://dbpedia.org/resource/Júbilo_Iwata> .
  FILTER EXISTS { ?person rdfs:label ""Yōichi Masuzoe""@en }
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  BIND(?residence AS ?nativeOf)
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
617,64,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of Laodice IV and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild
WHERE {
  # Step 1: Find Antiochus II Theos's successor
  dbr:Antiochus_II_Theos dbo:successor ?successor .
  
  # Step 2: Find the spouse of this successor
  ?successor dbo:spouse ?spouse .

  # Step 3: Identify the commander in Battle of Panium and their child
  dbr:Battle_of_Panium dbo:commander ?commander .
  ?commander dbo:child ?parent .

  # Step 4: Find a grandchild who is royalty
  ?parent dbo:child ?child .
  ?child dbo:child ?grandchild .
  
  FILTER (dbo:Person(?grandchild) && EXISTS { ?grandchild dbo:title ?title . FILTER regex(str(?title), ""King|Queen"", ""i"") })
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
281,59,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Step 1: Find the leader of the 1962 New South Wales state election
SELECT ?leader WHERE {
    ?election dbo:event ""New South Wales state election, 1962"" .
    ?election dbo:leader ?leader .
    FILTER (isLiteral(?leader))
}

# Step 2: Determine the birthplace of the leader and ensure it is a country
SELECT DISTINCT ?birthPlaceCountry WHERE {
    ?leader dbo:birthPlace ?birthPlace .
    ?birthPlace rdf:type dbo:Country .
    VALUES ?leader { <INSERT_LEADER_URI_HERE> }
}

# Step 3: Identify Jonathon Band's award
SELECT DISTINCT ?award WHERE {
    dbo:Jonathon_Band dbo:award ?award .
}

# Step 4: Find others who received the same award and any associated war
SELECT DISTINCT ?war WHERE {
    ?awardee dbo:award ?award .
    ?awardee dbo:participatedInWar ?war .
    VALUES ?award { <INSERT_AWARD_URI_HERE> }
}
```

Note: Replace `<INSERT_LEADER_URI_HERE>` and `<INSERT_AWARD_URI_HERE>` with the actual URIs obtained from the previous queries.",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
963,20,test,"Give me the administration of the ruling party, that is a political party, in the location for 21205 and entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton.","SELECT ?result WHERE { <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leaderParty> ?v5 . ?v4 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  # Find the time zone of Herzegovina-Neretva Canton
  dbr:Herzegovina-Neretva_Canton dbo:timeZone ?timezone .
  
  # Determine the country for this region
  ?country dbo:contains dbr:Herzegovina-Neretva_Canton ;
           a dbo:Country .

  # Find the ruling party in Berlin (postal code 21205)
  dbr:Berlin dbo:rulingParty ?rulingParty .
  
  # Get the administration of this ruling party
  ?rulingParty dbo:administration ?administration .
}
```",6,8,7,3,2,3,2,20,0,0,84,0,0.0,0
328,42,test,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:commanderOf ?easternFrontCommand .
  FILTER EXISTS { ?easternFrontCommand rdfs:label ""Eastern Front (World War II)""@en }
  
  ?person dbo:leaderOf ?sovietOffice .
  ?sovietOffice dbo:head dbr:Joseph_Stalin .

  ?person dbo:awardReceived ?fraserAward .
  ?fraserAward dbo:awardedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
488,66,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in Boshin War and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?birthPlace ?administrationLocation
WHERE {
  # Yūki Hideyasu's father and his death place
  dbr:Yūki_Hideyasu dbo:father ?father .
  ?father dbo:deathPlace ?deathPlace .

  # Commander in the Boshin War and their birthplace
  ?commander a dbo:Person ;
             dbo:birthPlace ?birthPlace ;
             dbo:occupation dbr:Boshin_War_commander .

  # Tokugawa Masako's spouse and his father's administration location
  dbr:Tokugawa_Masako dbo:spouse ?spouse .
  ?spouse dbo:father ?royalFather .
  ?royalFather dbo:administered ?administrationLocation .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
10,22,test,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist WHERE {
  # Find Luke Francis Vibert's associated bands or artists
  ?vibert a dbo:MusicalArtist ;
          foaf:name ""Luke Francis Vibert"" .
  
  OPTIONAL { ?vibert dbo:associatedBand ?band . }
  OPTIONAL { ?vibert dbp:memberOf ?group . }

  # Find Matt Colton's associated artists
  ?colton a dbo:Person ;
          foaf:name ""Matt Colton"" .

  OPTIONAL { ?artist dbo:collaborator ?colton . }
  
  FILTER (?band = ?artist || ?group = ?artist)
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
92,46,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Find the film ""Nevermore"" (2006)
  dbr:Nevermore_(film) dbo:genre ?filmGenre .
  
  # Identify the band ""Nevermore""
  dbr:Nevermore dbo:type dbr:Musical_band ;
                dbo:member ?bandMember .

  # Locate Jim Sheppard as a member of the band
  ?bandMember rdfs:label ""Jim Sheppard""@en .

  # Find associated musical artists with Jim Sheppard
  ?associatedArtist dbo:spouse ?bandMember .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
767,69,test,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater ?settlement1 ?settlement2 ?fictionalCharacter
WHERE {
  # George K. Nash's alma mater
  dbr:George_K._Nash dbo:almaMater ?almaMater .

  # Entity in the administration of George K. Nash that is a settlement
  ?admin dbo:employee dbr:George_K._Nash .
  ?admin rdf:type dbo:Settlement .
  BIND(?admin AS ?settlement1)

  # Writer of ""Where It's At"" by Dustin Lynch
  dbr:""Where_It's_At_(Dustin_Lynch_song)"" dbo:lyricsBy ?writer .

  # Entity in the administration of the songwriter that is a settlement
  ?admin2 dbo:employee ?writer .
  ?admin2 rdf:type dbo:Settlement .
  BIND(?admin2 AS ?settlement2)

  # Alter ego of Matthew Burland's persona, which is a fictional character
  dbr:Matthew_Burland dbo:fictionalCharacter ?fictionalCharacter .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
16,44,test,Give me the person born as the birth name of Gigi Rice and spouse of Ted McGinley and professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Get Gigi Rice's birth name
  ?gigi a dbo:Person;
        foaf:name ""Gigi Rice"" ;
        dbo:birthName ?birthName .

  # Get Ted McGinley's spouse
  ?ted a dbo:Person;
       foaf:name ""Ted McGinley"" ;
       dbo:spouse ?spouse .

  # Get Satomi Ishihara's profession
  ?satomi a dbo:Person;
          foaf:name ""Satomi Ishihara"" ;
          dbo:profession ?profession .

  # Find the person who matches all criteria
  ?person a dbo:Person;
          dbo:birthName ?birthName ;
          dbo:spouse ?ted ;
          dbo:profession ?profession .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
488,36,test,"Give me the birth place of Enomoto Takeaki and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for the birth place of Enomoto Takeaki
SELECT ?birthPlace WHERE {
  ?enomotoTakeaki a dbo:Person ;
                  foaf:name ""Enomoto Takeaki""@en .
  ?enomotoTakeaki dbo:birthPlace ?birthPlace .
}

UNION

# Query for the administration of the father of the spouse (royalty) of Tokugawa Masako
SELECT ?administration WHERE {
  ?tokugawaMasako a dbo:Person ;
                   foaf:name ""Tokugawa Masako""@en .
  ?tokugawaMasako dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Royalty .
  ?spouse dbo:father ?father .
  ?father dbo:positionHeld ?administration .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
161,57,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of Emilio Mola and military force of Rif War.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 ?militaryForce3 WHERE {
  # Find predecessor of Indalecio Prieto and their military force
  ?predecessor dbo:predecessor dbr:Indalecio_Prieto .
  ?predecessorEvent dbo:event ?predecessor .
  ?predecessorEvent dbo:militaryForce ?militaryForce1 .

  # Find commander in the event related to Emilio Mola and their military force
  ?emilioMolaEvent dbo:commander dbr:Emilio_Mola .
  ?emilioMolaEvent dbo:militaryForce ?militaryForce2 .

  # Find military force of Rif War
  ?rifWarEvent rdfs:label ""Rif War""@en .
  ?rifWarEvent dbo:militaryForce ?militaryForce3 .
}
```",6,9,7,3,3,3,3,71,0,0,11,0,0.0,0
767,32,test,"Give me the entity in the administration, that is a settlement, of Green and alma mater of the administration of George K. Nash.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement ?almaMater
WHERE {
  # Step 1: Identify George K. Nash's administration
  ?administration dbo:member dbr:George_K._Nash .
  
  # Step 2: Find entities in the administration that are settlements
  ?entity dbo:partOf ?administration ;
          a dbo:Settlement .

  # Step 3: Determine alma mater of the administration
  ?person dbo:almaMater ?almaMater .
  ?administration dbo:member ?person .

  # Step 4: Match settlement with alma mater
  FILTER(?entity = ?settlement)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
391,23,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname ?nativePlace
WHERE {
  ?city rdfs:label ""Jackson, Tennessee""@en .
  OPTIONAL { ?city dbo:nickname ?nickname . }
  OPTIONAL { ?figure dbo:nativePlace ?nativePlace . }
  FILTER (lang(?nickname) = 'en')
}
```",3,3,4,3,1,3,3,71,0,0,176,0,0.0,0
404,22,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?ernestAugustus dbo:father ?father .
  FILTER(STR(?ernestAugustus) = ""Ernest Augustus, Duke of Brunswick"")

  ?princessVictoriaLouise dbo:spouse ?spouse .

  ?father dbo:child ?child .
  ?spouse dbo:child ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
427,58,test,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherParty ?prodiBirthName ?prodiParty (SAMPLE(?ppi) AS ?partitoPopolareItaliano)
WHERE {
  # Lamberto Andreotti's father and his party
  dbr:Lamberto_Andreotti dbo:father dbr:Giuseppe_Andreotti .
  OPTIONAL { dbr:Giuseppe_Andreotti dbo:party ?fatherParty . }

  # Romano Prodi's birth name and party
  dbr:Romano_Prodi rdfs:label ""Romano Prodi""@en ;
                   dbo:birthName ?prodiBirthName ;
                   dbo:party ?prodiParty .

  # Reference to Partito Popolare Italiano
  OPTIONAL { ?ppi a dbo:PoliticalParty ; rdfs:label ""Partito Popolare Italiano""@it . }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,38,test,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  # Find a child of Ramesses II
  ?child dbo:father dbr:Ramesses_II .
  
  # The parent of that child is Ramesses II
  ?child dbo:mother ?parent .

  # Merneptah's father is Ramesses II, so find his spouse
  dbr:Ramesses_II dbo:spouse ?spouse .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
281,62,test,"Give me the war of New Zealand Army and war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v6 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?awardee ?birthCountry
WHERE {
  # Wars involving the New Zealand Army
  ?nzArmy a dbo:MilitaryUnit ;
          dbo:participatedIn ?war .

  # Awardee of Jonathon Band's award
  ?award a dbo:Award ;
         dbo:recipient ?awardee .
  FILTER (str(?award) = ""Jonathon_Band_Award"") # Assuming the award is named in DBpedia

  # Politician leader in 1962 NSW election and their birthplace
  ?politician a dbo:Politician ;
              dbo:birthPlace ?birthPlace .
  ?electionEvent dbo:leader ?politician ;
                 dbo:date ""1962-01-01""^^xsd:date^^^xsd:gYear .
  ?birthPlace a dbo:Country .

  # Linking the awardee to the politician's birthplace
  ?awardee dbo:birthPlace ?birthPlace .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
994,39,test,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v2 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist ?bandMember
WHERE {
  # Find Red Tide and its associated musical artist
  OPTIONAL { 
    dbr:Red_Tide_(band) dbo:associatedBand ?associatedArtist .
  }

  # Identify Don Dokken as a person born who is a musician
  ?person dbo:birthDate ?birthDate ;
          rdf:type dbo:MusicalArtist ;
          foaf:name ""Don Dokken""@en .

  # Find band members of the associated artist or Red Tide
  OPTIONAL {
    ?associatedArtist dbo:bandMember ?bandMember .
  }
  
  OPTIONAL {
    dbr:Red_Tide_(band) dbo:bandMember ?bandMember .
  }

  FILTER (?person = ?bandMember)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
16,62,test,Give me the person born as Georgeanne Marie Rice and spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseName WHERE {
  # Find Georgeanne Marie Rice by birth name
  ?rice a dbo:Person ;
        dbo:birthName ""Georgeanne Marie Rice""@en .
  
  # Find Ted McGinley's birth name and profession
  ?mcg dbr:Ted_McGinley ;
       dbo:birthName ?birthNameMcG ;
       dbo:profession ?professionMcG .

  FILTER(?professionMcG IN (dbr:Actor, dbr:Actress)) # Assuming actor/actress as the relevant professions

  # Find if Georgeanne Marie Rice's spouse is Ted McGinley
  ?rice dbo:spouse ?mcg .
  
  # Get the name of the spouse
  ?mcg rdfs:label ?spouseName .
  
  FILTER(LANG(?spouseName) = ""en"")
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
528,49,test,Give me the force of the person born as the birth name of Narciso Campero and war of the military force of Battle of Pisagua.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Query to find the military force associated with Narciso Campero
SELECT ?force WHERE {
  ?person dbo:birthName ""Narciso Campero""@en .
  OPTIONAL { ?person dbo:militaryForce ?force . }
} LIMIT 1

# Query to find the war of the Battle of Pisagua
SELECT ?war WHERE {
  ?battle dbp:name ""Battle of Pisagua""@en ;
          dbo:partOfWar ?war .
}
LIMIT 1
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
747,52,test,"Give me the band of the writer of Apollo (Hardwell song) and band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerBand ?shenaBand ?athleteName WHERE {
  # Step 1: Identify the writer of ""Apollo"" by Hardwell
  ?song dbo:title ""Apollo""@en .
  ?song dbo:artist dbr:Hardwell .
  ?song dbo:writer ?writer .

  # Step 2: Determine the band associated with this writer
  OPTIONAL { ?writer dbo:band ?writerBand . }

  # Step 3: Find Shèna's band
  dbr:Shèna dbo:band ?shenaBand .

  # Step 4: Identify an athlete and soccer player born on a specific date in Zolotonosha
  ?athlete dbo:birthDate ?birthDate .
  ?athlete dbo:sport dbr:Soccer .
  ?athlete dbo:nationality dbr:Ukraine .
  ?athlete dbo:placeOfBirth dbr:Zolotonosha .

  # Step 5: Determine the person decedent related to this birthdate
  OPTIONAL { 
    ?decedent dbo:deathDate ?birthDate .
    ?decedent rdf:type dbo:Athlete .
    ?decedent dbo:sport dbr:Soccer .
  }

  FILTER EXISTS { ?song dbo:title ""Apollo""@en }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,70,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v7 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryUnit ?war 
WHERE {
  # Find the leader of the 1962 New South Wales state election
  ?leader dbo:election dbr:1962_New_South_Wales_state_election ;
          a dbo:Politician .

  # Determine their country of birth
  ?leader dbo:birthPlace ?country .

  # Check if they are an office holder and politician, and find related military unit in New Zealand Army
  OPTIONAL {
    ?profession dbo:officeHolder ?leader .
    ?militaryUnit dbo:militaryUnitOf dbr:New_Zealand_Army ;
                  dbo:relatedTo ?profession .
  }

  # Find the war associated with a Knight Grand Cross of the Order of the Bath awardee
  ?awardee dbo:orderOfTheBath dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath ;
           dbo:war ?war .

}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
617,69,test,"Give me the spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse
WHERE {
  # Antiochus III the Great's child who is royalty
  ?child1 dbo:parent dbr:Antiochus_III_the_Great .
  FILTER EXISTS { ?child1 dbo:royaltyStatus ?status . }
  
  # Grandchild of Antiochus III the Great who is royalty
  ?grandchild dbo:parent ?child1 .
  FILTER EXISTS { ?grandchild dbo:royaltyStatus ?status2 . }

  # Successor of Antiochus II Theos who is royalty
  ?successor dbo:predecessor dbr:Antiochus_II_theos .
  FILTER EXISTS { ?successor dbo:royaltyStatus ?status3 . }
  
  # Parent of the child of commander in Battle of Panium
  ?commander dbp:battleOfPaniumParticipant ""true""^^xsd:boolean .
  ?child2 dbo:parent ?commander .
  ?parentChild dbo:parent ?child2 .

  # Spouse of the grandchild who is also a royalty and successor's child
  ?spouse dbo:spouse ?grandchild .
  FILTER EXISTS { ?spouse dbo:royaltyStatus ?status4 . }
  
  # Ensure the grandchild is also a successor's child
  ?successorChild dbo:parent ?successor .
  FILTER (?grandchild = ?successorChild)
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
801,71,test,"Give me the professional in the alter ego of the true self of The Shadow and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/writer> ?v8 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v5 <http://dbpedia.org/property/writer> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional ?rapper ?writer WHERE {
  # Step 1: Identify The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .

  # Step 2: Find a professional identity related to Lamont Cranston (fictional, so we assume a connection)
  # Assuming a fictional link to a musical artist or producer for the sake of this query
  ?professional dbo:profession dbr:Musical_Artist ;
                dbo:producedWork ?musicalWork .

  # Step 3: Identify a rapper associated with this professional
  ?rapper dbo:associatedMusicalArtist ?professional .

  # Step 4: Find a writer who is also a musical artist and an artist linked to the album ""What U See Is What U Get""
  ?writer rdf:type dbo:Writer ;
          rdf:type dbo:MusicalArtist ;
          rdf:type dbo:Artist ;
          dbo:album dbr:What_U_See_Is_What_U_Get .

  # Linking all together
  ?musicalWork dbo:artist ?writer .
}
```",9,17,10,3,3,3,3,71,0,0,8,0,0.0,0
767,54,test,"Give me the reference to  and alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?georgeKilbonNash ?almaMater ?settlement
WHERE {
  # Find George Kilbon Nash
  ?georgeKilbonNash a dbo:Person ;
                    foaf:name ""George Kilbon Nash""@en .
  
  # Get his alma mater
  ?georgeKilbonNash dbo:almaMater ?almaMater .

  # Identify the administration/entity he was part of
  ?administration dbo:member ?georgeKilbonNash ;
                  dbo:settlement ?settlement .
  
  # Find a settlement named Green in that administration
  ?settlement foaf:name ""Green""@en .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
179,16,test,Give me the parent of the child of Bhumibol Adulyadej and person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Find one of Bhumibol Adulyadej's children
  dbr:Bhumibol_Adulyadej dbo:child ?child .

  # Find the parent of this child (other than Bhumibol Adulyadej)
  ?child dbo:parent ?parent .
  FILTER(?parent != dbr:Bhumibol_Adulyadej) .

  # Match this parent with a person whose birth name is Sirikit's
  dbr:Sirikit dbo:birthName ?sirikitBirthName .
  ?parent dbo:birthName ?sirikitBirthName .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
801,53,test,"Give me the producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
# Query for producer of Westside Story (song)
SELECT ?producer WHERE {
  ?song dbo:productionName ""Westside Story"" .
  ?song dbo:producer ?producer .
}

UNION

# Query for professional in the alter ego of The Shadow
SELECT ?professional WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:alterEgo ?alterEgo .
  ?alterEgo dbo:profession ?professional .
}

UNION

# Query for associated musical artist of the writer of 40 Dayz & 40 Nightz
SELECT ?artist WHERE {
  ?album rdfs:label ""40 Dayz & 40 Nightz""@en .
  ?album dbo:writer ?writer .
  ?writer dbo:associatedMusicalArtist ?artist .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,55,test,Give me the band of the writer of Apollo (Hardwell song) and band of the person born as Tracey Elizabeth McSween and person born on the birth date of Pavlo Khudzik.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerBand ?traceyBand ?pavloBirthPersonBand 
WHERE {
  # Part 1: Band of the writer of ""Apollo"" by Hardwell
  ?song dbo:title ""Apollo""@en .
  ?song dbo:lyricist ?writer .
  ?writer dbo:bandMember ?writerBand .

  # Part 2: Band of Tracey Elizabeth McSween (born as)
  dbr:Tracey_Elizabeth_McSween dbo:birthName ""Tracey Elizabeth McSween"" .
  dbr:Tracey_Elizabeth_McSween dbo:bandMember ?traceyBand .

  # Part 3: Person born on Pavlo Khudzik's birth date
  dbr:Pavlo_Khudzik dbo:birthDate ?pavloBirthDate .
  ?person dbo:birthDate ?pavloBirthDate .
  FILTER(?person != dbr:Pavlo_Khudzik) # Exclude Pavlo Khudzik himself
  OPTIONAL { ?person dbo:bandMember ?pavloBirthPersonBand }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
404,54,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalParent WHERE {
  # Step 1: Identify Prince George William of Hanover
  ?princeGeorge a dbo:Person ;
               rdfs:label ""Prince George William of Hanover""@en .

  # Step 2: Find his parent who is royalty
  ?parent1 dbo:child ?princeGeorge .
  ?parent1 a dbo:Royal .

  # Step 3: Identify spouse of Princess Victoria Louise of Prussia
  ?vlPrincess a dbo:Person ;
             rdfs:label ""Victoria Louise of Prussia""@en .
  ?spouse dbp:spouse ?vlPrincess .
  ?spouse a dbo:Royal .

  # Step 4: Find child of Ernest Augustus, Crown Prince of Hanover
  ?ernestAugustus a dbo:Person ;
                 rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .
  ?child dbp:parent ?ernestAugustus .
  ?child a dbo:Royal .

  # Step 5: Find parent of this child who is royalty
  ?parent2 dbo:child ?child .
  ?parent2 a dbo:Royal .

  # Step 6: Identify the final parent
  ?finalParent dbo:child ?parent2 .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
485,24,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceWhitaker ?birthPlaceAwardee
WHERE {
  # Find Joseph Whitaker's birthplace that is a region
  dbr:Joseph_Whitaker_(naturalist) dbo:birthPlace ?birthPlaceWhitaker .
  ?birthPlaceWhitaka rdf:type dbo:Region .

  # Find Eric Gregory Award awardees who are poets and writers, then their birthplaces that are regions
  ?awardee dbo:award <http://dbpedia.org/resource/Eric_Gregory_Award> ;
          rdf:type dbo:Writer ;
          dbo:occupation dbo:Poet .
  ?awardee dbo:birthPlace ?birthPlaceAwardee .
  ?birthPlaceAwardee rdf:type dbo:Region .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
767,18,test,Give me the alma mater of Carl L. Nippert and reference to  and entity in Baden-Württemberg.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?badenWurttembergEntity
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carl L. Nippert"" ;
          dbo:almaMater ?almaMater .
  
  OPTIONAL {
    ?entity dbr:Baden-Württemberg ;
            rdfs:label ?badenWurttembergEntity .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
801,23,test,Give me the professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?profession
WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  ?alterEgo dbo:profession ?profession .
}
```",3,3,4,3,1,3,3,71,0,0,39640,0,0.0,0
485,26,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of Thomas Warner (poet).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country ?region1 ?birthPlaceWhitaker ?region2 ?birthPlaceWarner
WHERE {
  # Find the country in the Western European Time region
  ?timeZone a dbo:TimeZone ;
            rdfs:label ""Western European Time""@en .
  
  ?country dbo:timeZone ?timeZone ;
           a dbo:Country .

  # Find Joseph Whitaker's birthplace and its corresponding region
  dbr:Joseph_Whitaker (dbo:birthPlace) ?birthPlaceWhitaker .
  ?birthPlaceWhitaker dbo:locatedInRegion ?region1 .

  # Find Thomas Warner's birthplace
  dbr:Thomas_Warner (dbo:birthPlace) ?birthPlaceWarner .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
360,28,test,"Give me the writer of the work, that is an album, of Dave Flett and reference to the author of Blinded by the Light and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?albumWriter ?authorOfBlindedByTheLight ?deathSettlement
WHERE {
  # Find the album by Dave Flett and its writer(s)
  ?album dbo:artist dbr:Dave_Flett ;
         dbo:writer ?albumWriter .

  # Identify Bruce Springsteen as the author of ""Blinded by the Light""
  dbr:""Blinded_by_the_Light"" dbo:composer ?authorOfBlindedByTheLight .
  FILTER(?authorOfBlindedByTheLight = dbr:Bruce_Springsteen)

  # Determine the place of Winnie Madikizela-Mandela's death
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathSettlement .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
378,62,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?gahnWar ?crillonWar WHERE {
  # Carl Pontus Gahn's birth name and claim to fame
  dbr:C._P._Gahn dbo:birthName ?birthName .
  OPTIONAL { dbr:C._P._Gahn dbo:notableFor ?notableFor . }
  
  # Louis des Balbes de Berton de Crillon, 1st Duke of Mahón's claim to fame
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:notableFor ?crillonNotable .
  
  # Wars associated with Carl Pontus Gahn and Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  OPTIONAL { ?gahnWar dbo:participant ?gahnParticipant . FILTER(?gahnParticipant = dbr:C._P._Gahn) }
  OPTIONAL { ?crillonWar dbo:participant ?crillonParticipant . FILTER(?crillonParticipant = dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón) }

  # Peninsular War and its commanders
  dbr:Peninsular_War a dbo:MilitaryConflict ;
                     dbo:commander ?peninsularCommander .
  
  OPTIONAL { ?gahnWar rdfs:label ?gahnWarLabel . FILTER(lang(?gahnWarLabel) = ""en"") }
  OPTIONAL { ?crillonWar rdfs:label ?crillonWarLabel . FILTER(lang(?crillonWarLabel) = ""en"") }
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
528,20,test,Give me the war of Irene Morales and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  ?irene a dbo:Person ;
         rdfs:label ""Irene Morales""@en .
  
  ?commander a dbo:Person ;
             rdfs:label ""Commander in Battle of La Rinconada de Ate""@en .

  ?irene dbo:participatedIn ?event1 .
  ?commander dbo:participatedIn ?event2 .

  ?event1 dbo:conflict ?war .
  ?event2 dbo:conflict ?war .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
488,61,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?administration ?deathPlace WHERE {
  # Step 1: Identify Tokugawa Masako's spouse
  ?tokugawaMasako a dbo:Person ;
                  rdfs:label ""Tokugawa Masako""@en .
  
  ?spouse dbo:spouse ?tokugawaMasako .

  # Step 2: Determine the father of the spouse
  ?fatherOfSpouse dbo:father ?spouse .

  # Step 3: Check if the father is royalty and find his administration
  ?fatherOfSpouse a dbo:RoyalFamilyMember ;
                  dbo:officeHeld ?administration .

  # Step 4: Identify Matsudaira Tadamasa's father
  ?matsudairaTadamasa a dbo:Person ;
                      rdfs:label ""Matsudaira Tadamasa""@en .
  
  ?fatherOfMatsudairaTadamasa dbo:father ?matsudairaTadamasa .

  # Step 5: Check if the father is an office holder and find his death place
  ?fatherOfMatsudairaTadamasa a dbo:OfficeHolder ;
                              dbo:deathPlace ?deathPlace .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
747,56,test,Give me the band of Amba Shepherd and person born on the birth date of Pavlo Khudzik and band of the person born as the persona of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
# Query for the band of Amba Shepherd
SELECT ?band WHERE {
  ?person rdfs:label ""Amba Shepherd""@en .
  ?person dbo:birthDate ?date .
  OPTIONAL { ?person dbo:musicalBand ?band . }
  FILTER (lang(?person) = 'en')
}

UNION

# Query for a person born on the same date as Pavlo Khudzik
SELECT ?otherPerson WHERE {
  ?pavloKhudzik rdfs:label ""Pavlo Khudzik""@en .
  ?pavloKhudzik dbo:birthDate ?date .
  ?otherPerson dbo:birthDate ?date .
  FILTER (?pavloKhudzik != ?otherPerson)
  FILTER (lang(?pavloKhudzik) = 'en' && lang(?otherPerson) = 'en')
}

UNION

# Query for the band of a person born as the persona of Shèna
SELECT ?band WHERE {
  ?shena rdfs:label ""Shèna""@en .
  ?shena dbo:birthDate ?date .
  ?persona rdfs:label ?alias .
  FILTER (?alias = ""Persona of Shèna""@en) # Assuming 'Persona of Shèna' is a known alias
  ?person dbo:birthDate ?date .
  OPTIONAL { ?person dbo:musicalBand ?band . }
  FILTER (lang(?shena) = 'en' && lang(?persona) = 'en' && lang(?person) = 'en')
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
54,36,test,"Give me the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find Thinkhaya of Pagan's child
  dbr:Thinkhaya_of_Pagan dbo:child ?child .

  # Find the predecessor of this child
  ?child dbo:predecessor ?predecessor .

  # Ensure the predecessor is an office holder and royalty
  ?predecessor a dbo:Monarch ;
               a dbo:OfficeHolder .

  # Link to Thihapate of Mohnyin
  OPTIONAL { ?predecessor dbo:succeededBy dbr:Thihapate_of_Mohnyin }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
427,29,test,Give me the party of the father of Lamberto Andreotti and reference to Partito Popolare Italiano and party of Romano Prodi.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father ?partyFather ?prodiParty WHERE {
  # Find Lamberto Andreotti's father and his political party
  dbr:Lamberto_Andreotti dbo:father ?father .
  OPTIONAL { ?father dbo:party ?partyFather . }
  
  # Check if the party is Partito Popolare Italiano
  OPTIONAL { 
    ?partyFather rdfs:label ""Partito Popolare Italiano""@it .
  }

  # Find Romano Prodi's political party
  dbr:Romano_Prodi dbo:party ?prodiParty .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,53,test,"Give me the person decedent at the work of the author of French Algeria and commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?authorDeathPlace ?commanderDeathPlace ?capitalDecedent
WHERE {
  # Find the author of ""French Algeria"" and their place of death
  ?author dbo:title ""French Algeria""@en .
  ?author dbo:deathPlace ?authorDeathPlace .

  # Find a commander in the Franco-Hova Wars and their place of death
  ?commander dbo:occupation dbr:Franco-Hova_Wars_Commander ;
             dbo:deathPlace ?commanderDeathPlace .

  # Find the capital of Algeria and any notable person who died there
  dbr:Algiers dbo:capitalOf dbr:Algeria .
  OPTIONAL {
    ?decedent dbo:deathPlace dbr:Algiers .
    FILTER EXISTS { ?decedent a dbo:Person }
    BIND(?decedent AS ?capitalDecedent)
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
485,25,test,"Give me the entity in the region, that is a country, of Western European Time and entity in Nottinghamshire and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country ?nottinghamshireEntity ?awardeeBirthplace WHERE {
  # Find the country in Western European Time
  ?country a dbo:Country ;
           dbp:timeZone ""Western European Time"" .
  
  # Find an entity associated with Nottinghamshire
  ?nottinghamshireEntity dbo:location dbr:Nottinghamshire .

  # Find the birthplace of an Eric Gregory Award awardee who is both a writer and poet
  ?awardee dbo:award dbr:Educational_Award ;
          dbo:occupation ?occupation1, ?occupation2 .
  FILTER (CONTAINS(LCASE(?occupation1), ""writer"") && CONTAINS(LCASE(?occupation2), ""poet""))
  ?awardee dbo:birthPlace ?awardeeBirthplace .

}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
994,38,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Band Members of Donald Maynard Dokken
SELECT ?bandMember WHERE {
    dbr:Donald_Maynard_Dokken dbo:bandMember ?bandMember .
    FILTER EXISTS { ?bandMember a dbo:MusicalArtist }
}

UNION

# Part 2: Associated Musical Artists of Meshuggah Band Members
SELECT ?associatedBand WHERE {
    ?member dbo:member dbr:Meshuggah ;
            dbo:associatedBand ?associatedBand .
    FILTER EXISTS { ?associatedBand a (dbo:Band|dbo:MusicalGroup|dbo:Organization) }
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
10,21,test,Give me the associated musical artist of Matt Colton and band member of Luke Vibert and professional in the birth name of Sharon Kao.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist ?bandMember ?professionalIdentity
WHERE {
  # Associated musical artist of Matt Colton
  OPTIONAL { 
    dbr:Matt_Colton dbo:associatedMusicalArtist ?associatedArtist .
  }
  
  # Band member of Luke Vibert
  OPTIONAL { 
    dbr:Luke_Vibert dbo:bandMember ?bandMember .
  }

  # Professional identity associated with Sharon Kao's birth name
  OPTIONAL {
    dbr:Sharon_Kao dbo:birthName ?birthName .
    ?person dbo:birthName ?birthName ;
            dbo:profession ?professionalIdentity .
  }
}
```",4,4,5,2,3,2,3,28,1,44,0,0.022222222222222223,1.0,0.04347826086956522
488,69,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace
WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .

  # Military conflict involving Saitō Hajime
  ?conflict dbo:militaryConflict true .
  ?conflict dbo:societalEvent true .
  ?conflict dbo:event true .
  ?conflict dbo:commander ?saitoHajime .

  # Tokugawa Masako's father (royalty) and his administration
  dbr:Tokugawa_Masako dbo:spouse ?tokugawaMasakoSpouse .
  ?tokugawaMasakoSpouse dbo:father ?tokugawaFather .
  ?tokugawaFather a dbo:Royalty .

  # Yūki Hideyasu's father (politician) and his death place
  dbr:Yūki_Hideyasu dbo:father ?yukiHideyasuFather .
  ?yukiHideyasuFather dbo:deathPlace ?deathPlace .
  ?yukiHideyasuFather a dbo:Politician .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
54,68,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Thinkhaya of Pagan's child and grandchild
  ?thinkhayaChild dbo:parent dbr:Thinkhaya_of_Pagan .
  ?thinkhayaGrandchild dbo:parent ?thinkhayaChild .

  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?thihapateChild dbo:parent dbr:Thihapate_of_Mohnyin ;
                  a dbo:Monarch ; 
                  dbo:officeHolder ?office .
  
  # Parent of Thado Minsaw of Prome
  ?thadoParent dbo:child dbr:Thado_Minsaw_of_Prome .

  # Find the person who fits all criteria
  ?person dbo:predecessorOf ?thinkhayaGrandchild ;
          = ?thihapateChild ;
          = ?thadoParent .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
427,48,test,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of the party of Michele Pinto.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName ?partyName WHERE {
  {
    # Query for Romano Prodi's party
    ?prodi a dbo:Person ;
           foaf:name ""Romano Antonio Prodi""@en ;
           dbo:officeHolder ?_ ;
           dbo:politician ?_ .
    ?prodi dbo:party ?partyProdi .
    BIND(""Romano Prodi"" AS ?personName)
    BIND(?partyProdi AS ?partyName)
  }
  UNION
  {
    # Query for Michele Pinto's party name
    ?pinto a dbo:Person ;
           foaf:name ""Michele Pinto""@en ;
           dbo:officeHolder ?_ ;
           dbo:politician ?_ .
    ?pinto dbo:party ?partyPinto .
    BIND(""Michele Pinto"" AS ?personName)
    BIND(?partyPinto AS ?partyName)
  }
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
281,53,test,"Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?awardeeWar ?heatherRoyProfession ?militaryUnitWar WHERE {
  # Find Jonathon Band's award
  VALUES (?jonathanBand) { dbr:Jonathon_Band }
  
  ?jonathanBand dbo:award ?award .
  
  # Find the war associated with the awardee of Jonathon Band's award
  ?awardee dbo:award ?award .
  ?awardee dbo:occupation ?occupation .
  ?war dbo:participatingMilitaryUnit ?occupation .
  BIND(?war AS ?awardeeWar)
  
  # Find Heather Roy's profession and associated military unit
  VALUES (?heatherRoy) { dbr:Heather_Roy }
  
  ?heatherRoy dbo:occupation ?heatherRoyProfession .
  FILTER EXISTS {
    ?militaryUnit a dbo:MilitaryUnit ;
                 dbo:participatingWar ?war .
    FILTER(?heatherRoyProfession = ?militaryUnit)
  }
  ?war dbo:participatingMilitaryUnit ?heatherRoyProfession .
  BIND(?war AS ?militaryUnitWar)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,41,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Victoria Louise of Prussia"" ;
          dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover ;
          dbo:spouse ?spouse .
  
  OPTIONAL { 
    ?child dbo:parent ?person ;
           foaf:name ""Ernst August, Duke of Brunswick"" .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
915,18,test,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?result <http://dbpedia.org/ontology/residence> ?v2 . <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?resident WHERE {
  # Step 1: Find the director of ""Pipe Dreams"" (1976 film)
  ?film dbo:director ?director .
  ?film rdfs:label ""Pipe Dreams""@en .

  FILTER regex(str(?film), ""1976"", ""i"") .

  # Step 2: Get the birthplace of the director
  ?director dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement
  ?birthPlace rdf:type dbo:Settlement .

  # Step 3: Find the resident of the birthplace
  ?resident dbo:residence ?birthPlace .

  # Step 4: Identify Phillip Spaulding's child who is fictional and a soap character
  ?child dbo:parent ?spaulding .
  ?spaulding rdfs:label ""Phillip Spaulding""@en .
  
  ?child rdf:type dbo:FictionalCharacter ;
         dbo:genre dbr:SoapOpera .

  # Step 5: Determine the father of this child
  ?father dbo:child ?child .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
487,17,test,"Give me the country of 2022 Vermont House of Representatives election and administration of the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country ?administration 
WHERE {
  # Identify Phil Scott and confirm his profession as a soccer player by birth name
  ?person rdfs:label ""Phil Scott""@en .
  ?person dbo:birthName ?birthName .
  ?person dbo:sport ?sport .
  FILTER(CONTAINS(LCASE(?birthName), ""phil scott""))
  FILTER(CONTAINS(LCASE(STR(?sport)), ""soccer""))

  # Find the country associated with the 2022 Vermont House of Representatives election
  dbr:2022_Vermont_House_of_Representatives_election dbo:electionCountry ?country .

  # Determine the administration where Phil Scott was born
  ?person dbo:birthPlace ?place .
  ?place dbo:administrativeRegion ?administration .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
801,62,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v6 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional ?musicalWork WHERE {
  # Find the alter ego of The Shadow
  ?shadowAlterEgo dbo:alterEgo dbr:The_Shadow .
  
  # Identify the professional associated with Chris Taylor (music producer)
  ?associatedArtist dbo:associatedMusicalArtist dbr:Chris_Taylor_(music_producer) .

  # Ensure this artist is also a rapper and has produced works
  ?professional rdfs:label ?label1 ;
                dbo:profession ""Rapper"" .
  
  FILTER(CONTAINS(LCASE(?label1), LCASE(""the shadow alter ego"")))
  FILTER(?professional = ?shadowAlterEgo)
  FILTER(?associatedArtist = ?professional)

  # Find a musical work produced by this professional
  ?musicalWork dbo:producer ?professional ;
               rdf:type dbo:Song .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
9,60,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Alma Mater of the Mayor of Belfast
SELECT ?mayorName ?almaMater WHERE {
    ?belfastMayor a dbo:Mayor ;
                  dbo:officeHolder ?person ;
                  dbo:city dbr:Belfast .
    ?person foaf:name ?mayorName .
    OPTIONAL { ?person dbo:almaMater ?almaMater . }
}

# Part 2: Nickname of an Educational Institution in Northern Ireland
SELECT ?institutionName ?nickname WHERE {
    ?eduInst a dbo:EducationalOrganization ;
             dbo:location dbr:Northern_Ireland ;
             dbo:nickname ?nickname .
    ?eduInst foaf:name ?institutionName .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
994,58,test,"Give me the associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for S.A. Slayer's associated musical artist
SELECT ?associatedArtist WHERE {
  ?s ASK V:isMusicalArtist ""S.A. Slayer""@en .
  ?s dbo:associatedBandMember ?bandMember .
  ?bandMember dbo:associatedMusicalArtist ?associatedArtist .
}

UNION

# Query for Don Dokken's persona as a band member born as a musical artist
SELECT ?persona WHERE {
  ?dokken ASK V:isMusicalArtist ""Don Dokken""@en .
  ?dokken dbo:birthDate ?date .
  ?dokken dbo:associatedBandMember ?bandMember .
  ?bandMember dbo:associatedPersona ?persona .
}

UNION

# Query for Meshuggah's associated musical artist of a band member who is also a band/group/organization
SELECT ?associatedArtist WHERE {
  ?meshuggah ASK V:isMusicalArtist ""Meshuggah""@en .
  ?meshuggah dbo:bandMember ?member .
  ?member rdf:type ?type .
  FILTER (?type IN (dbo:Band, dbo:Group, dbo:Organization)) .
  ?member dbo:associatedMusicalArtist ?associatedArtist .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
994,63,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
# Step 1: Find an associated musical artist of Watchtower
SELECT ?associatedArtist WHERE {
    ?watchtower dbo:type dbr:Band .
    ?watchtower dbo:member ?person .
    ?person dbo:band ?associatedArtist .
    FILTER(?watchtower = dbpedia:Watchtower_(band))
}

# Step 2: Find the associated musical artist of the result from step 1
SELECT ?secondAssociatedArtist WHERE {
    ?artist dbo:type dbr:MusicalArtist .
    ?artist dbo:member ?person .
    ?person dbo:band ?secondAssociatedArtist .
    FILTER(?artist = <result_from_step_1>)
}

# Step 3: Find a Meshuggah band member who is also a band and group and organization
SELECT ?meshuggahMember WHERE {
    ?meshuggah dbo:type dbr:Band .
    ?meshuggah dbo:member ?person .
    ?person dbo:band ?otherBand .
    ?otherBand dbo:type dbr:MusicalGroup .
    ?otherBand dbo:type dbr:Organization .
    FILTER(?meshuggah = dbpedia:Meshuggah)
}

# Step 4: Find the associated musical artist of that band member
SELECT ?thirdAssociatedArtist WHERE {
    ?member dbo:type dbr:MusicalArtist .
    ?member dbo:band ?thirdAssociatedArtist .
    FILTER(?member = <result_from_step_3>)
}

# Step 5: Find a Dokken band member who is also a musical artist
SELECT ?dokkenMember WHERE {
    ?dokken dbo:type dbr:Band .
    ?dokken dbo:member ?person .
    ?person dbo:type dbr:MusicalArtist .
    FILTER(?dokken = dbpedia:Dokken)
}

# Step 6: Find the associated musical artist of that person
SELECT ?finalAssociatedArtist WHERE {
    ?artist dbo:type dbr:MusicalArtist .
    ?artist dbo:band ?finalAssociatedArtist .
    FILTER(?artist = <result_from_step_5>)
}
```

Note: The placeholders `<result_from_step_X>` need to be replaced with actual URIs obtained from the results of each step.",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
391,49,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of the figure known as Hub City.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie a dbo:Film ;
         a dbo:Work ;
         a dbo:TelevisionShow .
  
  ?movie dbo:starring ?actor .

  ?person dbo:birthPlace ?hubCity ;
          dbo:profession ?profession .
  
  ?hubCity rdfs:label ""Hub City""@en .

  FILTER(?actor = ?person)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
747,67,test,"Give me the band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandShena ?bandWriterAmbaSong ?bandPerson19850429
WHERE {
  # Find the band of the person born as Shèna
  ?person dbo:name ""Shèna""@en .
  ?person dbo:band ?bandShena .

  # Find a song by Amba Shepherd and its writer
  ?song dbo:writer dbr:Amba_Shepherd ;
        dbo:title ?title .
  OPTIONAL { ?song dbo:composer ?writer . }
  BIND(IF(BOUND(?writer), ?writer, ""Unknown"") AS ?bandWriterAmbaSong)

  # Find the person born on April 29, 1985
  ?person2 dbo:birthDate ""1985-04-29""^^xsd:date .
  ?person2 dbo:band ?bandPerson19850429 .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
488,63,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceSaito ?deathPlaceYukiFather ?administrationGoMizunooFather
WHERE {
  # Birth place of Saitō Hajime
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlaceSaito .

  # Death place of Yūki Hideyasu's father (assuming he is a politician)
  OPTIONAL {
    dbr:Yūki_Hideyasu dbo:father ?yukiFather .
    ?yukiFather rdf:type dbo:Politician .
    ?yukiFather dbo:deathPlace ?deathPlaceYukiFather .
  }

  # Administration of Emperor Go-Mizunoo's father
  OPTIONAL {
    dbr:Emperor_Go-Mizunoo dbo:father ?goMizunooFather .
    ?goMizunooFather dbo:reign ?administrationGoMizunooFather .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
994,67,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of S.A. Slayer.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedBand
WHERE {
  # Fredrik Thordendal's band
  dbr:Fredrik_Thordendal dbo:bandMember dbr:Meshuggah .
  
  # Bands associated with Meshuggah
  dbr:Meshuggah dbo:associatedMusicalArtist ?associatedBand .

  # Don Dokken's persona and associated bands
  dbr:Donald_Jay_Dokken dbo:birthName ""Don Dokken"" ;
                        dbo:associatedMusicalArtist ?donDokkenBand .
  
  # S.A. Slayer's associated band
  dbr:S.A._Slayer dbo:associatedMusicalArtist dbr:Slayer .

  # Find common bands between Meshuggah and Don Dokken or Slayer
  FILTER (?associatedBand = ?donDokkenBand || ?associatedBand = dbr:Slayer)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
421,26,test,Give me the person born as the birth name of Dino Merlin and band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band WHERE {
  # Step 1: Find Dino Merlin's birth name
  dbr:Dino_Merlin dbo:birthName ?birthName .

  # Step 2: Find a band member with the same birth name
  ?person dbo:birthName ?birthName .
  
  # Step 3: Ensure this person is a band member of an awardee band
  ?band dbo:member ?person ;
        (dbo:award | dbo:nomination) ?award .

  # Step 4: Verify the person was native to the Socialist Federal Republic of Yugoslavia
  ?person dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
378,68,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthName ?commander ?claimToFame ?relatedWar WHERE {
  # Find Carl Pontus Gahn's birth name
  dbr:C._P._Gahn dbo:birthName ?birthName .

  # Find the commander of the Great Siege of Gibraltar and their claim to fame
  dbr:Great_Siege_of_Gibraltar dbo:commander ?commander .
  ?commander dbo:claimToFame ?claimToFame .

  # Check if this commander was involved in a war related to the Peninsular War
  OPTIONAL {
    ?relatedWar dbo:participatedIn ?commander .
    FILTER (CONTAINS(LCASE(STR(?relatedWar)), ""peninsular war"") || CONTAINS(LCASE(STR(?relatedWar)), ""gibraltar""))
  }
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
360,26,test,"Give me the reference to the author of Blinded by the Light and native of Johannesburg and writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?song dbo:lyricsAuthor dbr:Bruce_Springsteen .
  ?person dbo:birthPlace dbr:Johannesburg .
  ?album dbo:composer ?person .
  ?album dbo:title ""Dave Flett""^^xsd:string .
  FILTER (?song = ?work && ?author = ?person)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
435,26,test,"Give me the work of the author of Iceland and region of Greenwich Mean Time and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work ?timeZone ?territory
WHERE {
  # Find works by Halldór Laxness
  ?author a dbo:Person ;
          foaf:name ""Halldór Laxness""@en .
  ?author dbo:work ?work .

  # Identify Reykjavik and its GMT time zone
  ?settlement a dbo:Settlement ;
              dbp:name ""Reykjavík""@en ;
              dbp:timeZone ?timeZone .
  
  FILTER regex(?timeZone, ""GMT"", ""i"")

  # Find the territory administered from Reykjavik
  ?settlement dbo:administrativeCapitalFor ?territory .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
427,70,test,"Give me the reference to the name of Italian People's Party (1994) and party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?party1Label ?party2Label ?party3Label WHERE {
  # Part 1: Italian People's Party (1994)
  {
    SELECT ?party1Label WHERE {
      ?party1 dbo:wikiPageRedirects dbr:Italian_People%27s_Party_(1994) .
      ?party1 rdfs:label ?party1Label .
      FILTER(LANG(?party1Label) = ""en"")
    }
  }

  UNION

  # Part 2: Father of an Alumnus of MIT
  {
    SELECT ?party2Label WHERE {
      ?person dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
      ?person dbo:father ?father .
      ?father dbo:member ?party2 .
      ?party2 rdfs:label ?party2Label .
      FILTER(LANG(?party2Label) = ""en"")
    }
  }

  UNION

  # Part 3: Romano Prodi's Birth Name and Party
  {
    SELECT ?party3Label WHERE {
      dbr:Romano_Prodi dbo:birthName ?birthName .
      ?person rdfs:label ?birthName ;
              dbo:member ?party3 .
      ?party3 rdfs:label ?party3Label .
      FILTER(LANG(?party3Label) = ""en"")
    }
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
360,20,test,"Give me the reference to Manfred Mann and native of the death place, that is a settlement, of Winnie Madikizela-Mandela and writer of The Roaring Silence.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?manfredMannUri ?winnieDeathPlaceName
WHERE {
  ?manfredMannUri a dbo:Person ;
                  rdfs:label ""Manfred Mann""@en .
  ?book dbo:author ?manfredMannUri ;
        rdfs:label ""The Roaring Silence""@en .

  ?winnieMadikizelaMandela a dbo:Person ;
                           rdfs:label ""Winnie Madikizela-Mandela""@en .
  ?winnieDeathPlace rdf:type dbo:Settlement ;
                    dbo:deathPlace ?winnieMadikizelaMandela .
  ?winnieDeathPlace rdfs:label ?winnieDeathPlaceName .

  FILTER (lang(?manfredMannUri) = 'en')
  FILTER (lang(?book) = 'en')
  FILTER (lang(?winnieMadikizelaMandela) = 'en')
  FILTER (lang(?winnieDeathPlaceName) = 'en')
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
92,45,test,Give me the band member of Nevermore and associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
# Query 1: Band members of Nevermore
SELECT ?member WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""Nevermore""@en .
  ?band dbo:bandMember ?member .
}

UNION

# Query 2: Associated musical artist of Jim Sheppard
SELECT ?artist WHERE {
  ?person foaf:name ""Jim Sheppard"" .
  ?person dbo:associatedBand ?artist .
}

UNION

# Query 3: Band of the person born as Joseph Michael
SELECT ?band WHERE {
  ?person foaf:name ?name .
  ?person dbo:birthName ""Joseph Michael""@en .
  ?person dbo:associatedBand ?band .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,45,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of Rif War and military force of Spanish Civil War.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?conflict1 dbo:militaryConflict dbr:Rif_War .
  ?conflict2 dbo:militaryConflict dbr:Spanish_Civil_War .
  ?franco a dbo:Person ;
          rdfs:label ""Francisco Franco""@en ;
          dbo:commanderOf ?conflict1, ?conflict2 .
  ?franco dbo:spouse ?carmenPolo .
  ?carmenPolo rdfs:label ""Carmen Polo"" .
  
  BIND(?franco AS ?commander)
}
```",5,6,6,3,3,3,3,71,0,0,11,0,0.0,0
232,44,test,"Give me the child of Jon Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Jon Pertwee's children
  ?pertweeChild dbo:parent dbr:Jon_Pertwee .
  
  # Sylvie Bermann's residence that is a settlement and British
  ?bermannResidence dbo:residence dbr:Sylvie_Bermann ;
                   rdf:type dbo:Settlement ;
                   dbo:country dbr:United_Kingdom .

  # Sean Pertwee's claim to fame involving a film and military conflict
  ?pertweeFame dbo:claimToFame ?film .
  ?pertweeFame dbo:claimToFame ?conflict .
  ?film rdf:type dbo:Film .
  ?conflict rdf:type dbo:MilitaryConflict .

  # Sean Pertwee's identity
  ?pertweeFame dbo:actor dbr:Sean_Pertwee .

  # Find the common child
  ?child dbo:parent dbr:Jon_Pertwee ;
         dbo:residence ?bermannResidence .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
617,37,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfNysa ?spouseOfChild WHERE {
  # Identify Nysa and her parent
  ?nysa a dbo:Person ;
        foaf:name ""Nysa""@en .
  ?nysa dbo:spouse ?pharnacesI .
  ?pharnacesI foaf:name ""Pharnaces I of Pontus""@en .
  ?nysa dbo:parent ?parentOfNysa .

  # Identify Antiochus and his successor
  ?antiochus a dbo:Person ;
             foaf:name ""Antiochus (son of Antiochus III the Great)""@en .
  ?successor dbo:succesorOf ?antiochus .
  
  # Find child of successor and their spouse
  ?child dbo:parent ?successor .
  ?spouseOfChild dbo:spouse ?child ;
                 a dbo:Person .

  # Ensure the spouse is royalty
  ?spouseOfChild dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))

  # Find common entity
  FILTER (?parentOfNysa = ?spouseOfChild)
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
54,70,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v7 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Thihapate of Mohnyin's child who is an office holder and royalty.
  ?thihapateChild dbo:childOf dbr:Thihapate_of_Mohnyin .
  ?thihapateChild a dbo:OfficeHolder ;
                 a dbo:Royalty .

  # Step 2: Identify Soe Min Wimala Dewi's father.
  ?soeMinWimalaFather dbo:parentOf dbr:Soe_Min_Wimala_Dewi .

  # Step 3: Identify Thado Minsaw of Prome's parent and their child.
  ?thadoMinsawParent dbo:parentOf dbr:Thado_Minsaw_of_Prome .
  ?thadoMinsawChild dbo:childOf ?thadoMinsawParent .

  # Step 4: Find the predecessor of the identified child from step 1.
  ?predecessor dbo:predecessor ?thihapateChild .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
48,17,test,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash and band of Carl Falk.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?show ?actorBand ?carlFalkBand WHERE {
  # Find the show featuring Stacey Dash
  ?show dbo:starring dbr:Stacey_Dash .
  
  # Get actors from that show
  ?show dbo:starring ?actor .

  # Check if any actor is also a musical artist or band member
  OPTIONAL { 
    ?actor dbo:musicalArtist ?actorBand .
  }

  # Find Carl Falk's band
  dbr:Carl_Falk dbo:bandMember ?carlFalkBand .
  
  FILTER(?actorBand != dbr:None) # Ensure we have a valid musical artist or band for the actor
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
9,68,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
# Step 1: Identify the current mayor of Belfast
SELECT ?mayor WHERE {
  ?belfast dbo:type dbr:City;
           dbo:mayor ?mayor.
  FILTER(CONTAINS(LCASE(STR(?belfast)), ""belfast""))
}

# Step 2: Determine the alma mater of the mayor
SELECT DISTINCT ?almaMater WHERE {
  ?mayor dbo:almaMater ?almaMater.
  # Assuming we have identified the mayor from step 1, replace <Mayor_URI> with actual URI
  VALUES (?mayor) {<Mayor_URI>}
}

# Step 3: Find Queen's University Belfast nickname
SELECT DISTINCT ?nickname WHERE {
  dbr:Queen's_University_Belfast dbo:nickname ?nickname.
}

# Step 4: Identify Royal Medals awardee and their alma mater
SELECT DISTINCT ?awardee ?almaMater WHERE {
  ?awardee dbo:award <Royal_Medals_URI>;
           dbo:almaMater ?almaMater.
}
```

Note: Replace `<Mayor_URI>` with the actual URI of the mayor obtained from Step 1, and `<Royal_Medals_URI>` with the URI for Royal Medals.",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
48,16,test,"Give me the band of the actor, that is a musical artist, of Honor Up and band of the writer of Emotion (Carly Rae Jepsen album).",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorBand ?writerBand WHERE {
  # Part 1: Actor who is a musical artist in ""Honor Up""
  ?film dbo:title ""Honor Up""@en .
  ?film dbo:actor ?actor .
  ?actor dbo:musicalArtist true .
  OPTIONAL { ?actor dbo:band ?actorBand . }

  UNION

  # Part 2: Writer of the song ""Emotion"" from Carly Rae Jepsen's album
  dbr:Emotion_(Carly_Rae_Jepsen_song) dbo:composer ?writer .
  ?writer dbo:musicalArtist true .
  OPTIONAL { ?writer dbo:band ?writerBand . }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
801,48,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the alter ego of The Shadow (Lamont Cranston)
  dbr:Lamont_Cranston dbo:alterEgo ?shadowAlterEgo .
  
  # Find Rick Ross and his associated musical artist
  dbr:Rick_Ross a dbo:MusicalArtist ;
                dbo:associatedMusicalArtist ?artist .

  # Check if the alter ego is also an associated musical artist of Rick Ross
  ?shadowAlterEgo = ?artist .
}
```",5,7,6,3,2,3,3,71,0,0,22,0,0.0,0
488,57,test,"Give me the birth place of Enomoto Takeaki and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEnomoto (GROUP_CONCAT(?deathPlaceFatherMatsudaira; separator="", "") AS ?deathPlaces) ?administrationGoMizunoo
WHERE {
  # Enomoto Takeaki's birth place
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceEnomoto .

  # Father of Matsudaira Tadamasa who is a politician and office holder
  OPTIONAL {
    dbr:Matsudaira_Tadamasa dbo:father ?fatherMatsudaira .
    ?fatherMatsudaira rdf:type dbo:Politician ;
                      dbo:officeHolder ?officeHolder .
    ?officeHolder dbo:deathPlace ?deathPlaceFatherMatsudaira .
  }

  # Father of Emperor Go-Mizunoo's administration
  OPTIONAL {
    dbr:Emperor_Go-Mizunoo dbo:father ?fatherGoMizunoo .
    ?fatherGoMizunoo dbo:office ?administrationGoMizunoo .
  }
}
```",6,8,7,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
427,50,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherParty ?prodiParty WHERE {
  # Part 1: Find the father of an MIT alumnus and his political party
  OPTIONAL {
    ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
    ?alumnus dbo:father ?father .
    ?father dbo:partyAffiliation ?fatherParty .
  }
  
  # Part 2: Find Romano Prodi's political party
  OPTIONAL {
    dbr:Romano_Prodi a dbo:Politician ;
                     dbo:officeHolder true ;
                     dbo:partyAffiliation ?prodiParty .
  }
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
492,67,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personInAlgeria ?personInKhemisMiliana ?verdunCommander
WHERE {
  # Person decedent in French Algeria
  ?personInAlgeria a dbo:Person ;
                  dbo:deathPlace dbr:French_Algeria .

  # Person decedent at the capital of Khemis Miliana District
  ?capital a dbo:Settlement ;
          dbo:administrativeRegion dbr:Khemis_Miliana_District .
  ?personInKhemisMiliana a dbo:Person ;
                        dbo:deathPlace ?capital .

  # Commander in Battle of Verdun
  ?verdunCommander a dbo:Person ;
                   dbo:commanderInWar dbr:Battle_of_Verdun .

  # Ensure the commander in Verdun is also involved in another war
  ?war a dbo:MilitaryConflict ;
      dbo:commander ?verdunCommander .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
701,60,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the spouse of Amun-her-khepeshef.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouseOfRoyalFather WHERE {
  # Step 1: Identify the commander in Battle of Perire
  ?commander dbo:participatedInBattle dbp:battleName ""Battle of Perire"" .
  
  # Step 2: Find the father of the commander
  ?father dbo:child ?commander .

  # Step 3: Determine if the father is royalty
  ?father a dbo:Monarch .

  # Step 4: Identify the spouse of this royal father
  ?spouseOfRoyalFather dbo:spouse ?father .
  
  # Step 5: Find Amun-her-khepeshef's spouse
  ?amunHerKhepeshef dbp:spouse ?amunSpouse .

  # Step 6: Determine the child of Amun-her-khepeshef’s spouse
  ?child dbo:parent ?amunSpouse .
  
  # Step 7: Find the parent of this child (should be same as step 4)
  ?spouseOfRoyalFather dbo:parent ?child .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
747,28,test,Give me the band of Shèna and person born on the birth date of Pavlo Khudzik and band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
# Query 1: Find Shèna's Band
SELECT ?band WHERE {
    ?s dbr:Shèna .
    ?s dbo:band ?band .
}

UNION

# Query 2: Find Pavlo Khudzik's Birth Date
SELECT ?birthDate WHERE {
    ?pavlo dbr:Pavlo_Khudzik .
    ?pavlo dbo:birthDate ?birthDate .
}

UNION

# Query 3: Find a Person Born on the Same Date as Pavlo Khudzik
SELECT DISTINCT ?person WHERE {
    ?pavlo dbr:Pavlo_Khudzik .
    ?pavlo dbo:birthDate ?birthDate .
    ?person dbo:birthDate ?birthDate .
    FILTER(?person != ?pavlo)
}

UNION

# Query 4: Find Amba Shepherd's Band
SELECT ?band WHERE {
    ?s dbr:Amba_Shepherd .
    ?s dbo:band ?band .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
659,50,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  ?unit a dbo:MilitaryUnit ;
        dbo:commandedBy dbr:Rutger_Jan_Schimmelpenninck .
  
  ?unit dbo:partOf ?force .
  ?force dbo:relatedEvent ?war .

  ?war a dbo:MilitaryConflict ;
      dbo:commander ?commander .

  FILTER(?commander = dbr:Rutger_Jan_Schimmelpenninck)
}
```",5,12,6,3,2,3,3,71,0,0,31,0,0.0,0
182,27,test,Give me the war of Mahesh Senanayake and war of the work of Gotabhaya Rajapaksa and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?result <http://dbpedia.org/ontology/place> ?v0 . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1 ?war2 ?nationality
WHERE {
  # Wars associated with Mahesh Senanayake
  dbr:Mahesh_Senanayake dbo:participatedIn ?war1 .
  
  # Wars associated with Gotabhaya Rajapaksa
  dbr:Gotabhaya_Rajapaksa dbo:participatedIn ?war2 .

  # Nationality of Tamara Kunanayakam
  dbr:Tamara_Kunanayakam dbo:nationality ?nationality .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
701,64,test,"Give me the parent of Henuttawy (19th dynasty) and parent of the child of the spouse of Amun-her-khepeshef and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?henuttawyParent ?amunChildParent ?royalSpouse WHERE {
  # Henuttawy (19th dynasty) parent
  OPTIONAL { 
    dbr:Henuttawy_(19th_dynasty_of_Egypt) dbo:parent ?henuttawyParent .
  }

  # Amun-her-khepeshef's spouse and their child's parent
  OPTIONAL {
    dbr:Amun-her-khepeshef dbo:spouse ?amunSpouse .
    ?amunSpouse dbo:child ?amunChild .
    ?amunChild dbo:parent ?amunChildParent .
  }

  # Commander in Battle of Perire and royal spouse
  OPTIONAL {
    ?battle dbr:Battle_of_Perire dbo:commander ?commander .
    ?commander dbo:father ?commanderFather .
    ?commanderFather dbo:spouse ?royalSpouse .
    FILTER (dbo:RoyalPerson ?royalSpouse) # Assuming a class or property to identify royalty
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
232,53,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfResidence WHERE {
  # Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:residence ?residence .
  
  # Check if the residence is a settlement and British
  ?residence rdf:type dbo:Settlement .
  ?residence dbo:nativeLanguage dbr:English_language ; # Assuming English language indicates British

  # Actor from Dog Soldiers
  ?actor dbo:film dbr:Dog_Soldiers ;
         dbo:birthPlace ?residence .

  # Jon Pertwee's child
  dbr:Jon_Pertwee dbo:child ?actor .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
197,8,test,Give me the birthplace of the awardee of Leroy P. Steele Prize and birthplace of Dumitru Nadu.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Query for a recent awardee of the Leroy P. Steele Prize and their birthplace
SELECT ?awardeeLabel ?birthPlaceLabel WHERE {
  ?awardee dbo:award dbr:Leroy_P._Steele_Prize .
  ?awardee rdfs:label ?awardeeLabel .
  FILTER (LANG(?awardeeLabel) = ""en"") .
  ?awardee dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER (LANG(?birthPlaceLabel) = ""en"") .
}

UNION

# Query for Dumitru Nadu's birthplace
SELECT ?personLabel ?birthPlaceLabel WHERE {
  ?person rdfs:label ""Dumitru_Nadu""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER (LANG(?birthPlaceLabel) = ""en"") .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
747,45,test,Give me the person born on 1985-04-29 and band of Amba Shepherd and band of the person born as the persona of Shèna.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?ambaBand ?shenaBand WHERE {
  # Find band associated with Amba Shepherd
  OPTIONAL {
    dbr:Amba_Shepherd dbo:band ?ambaBand .
  }
  
  # Find person born on 1985-04-29 and their band
  OPTIONAL {
    ?person dbo:birthDate ""1985-04-29""^^xsd:date ;
            rdfs:label ?shenaLabel .
    FILTER(CONTAINS(LCASE(?shenaLabel), ""shèna""))
    ?person dbo:band ?shenaBand .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
963,17,test,"Give me the entity in Serbia and administration of the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  # Identify the location with ID 21205
  VALUES ?location { dbr:Location_21205 } .

  # Find political parties in Serbia
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Serbia ;
         dbo:headquartersLocation ?location .

  OPTIONAL {
    ?party dbo:rulingParty true .
  }
}
```",4,5,5,3,2,3,2,20,0,0,84,0,0.0,0
391,47,test,"Give me the native of the figure known as Hub City and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfHubCity WHERE {
  # Step 1: Identify Sherry Hormann
  dbr:Sherry_Hormann a dbo:Person ;
                     dbo:spouse ?spouse .

  # Step 2: Find the spouse's claim to fame (a notable work)
  ?spouse dbo:notableWork ?claimToFame .

  # Step 3: Identify Hub City
  dbr:Hub_City a dbo:Place .

  # Step 4: Find who is native of Hub City and related to the claim to fame
  ?nativeOfHubCity dbo:nativePlace dbr:Hub_City ;
                   dbo:notableWork ?claimToFame .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
392,22,test,"Give me the entity in the region, that is a country, of Central European Time and region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country (SAMPLE(?sportsEvent) AS ?event)
WHERE {
  # Find region associated with Central European Time
  ?region dbo:timeZone dbr:Central_European_Time .

  # Find countries in that region using CET
  ?country dbo:partOfRegion ?region .
  
  # Determine the time zone for Aguilar de Segarra and find related sports events
  dbr:Aguilar_de_Segarra dbo:timeZone ?tz .
  ?sportsEvent dbo:location dbr:Aguilar_de_Segarra ;
               a dbo:SportsEvent .

  FILTER(?tz = dbr:Central_European_Time)
}
GROUP BY ?country
```",4,6,5,2,2,2,3,28,0,0,28787,0,0.0,0
9,35,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of Queen's University Belfast.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMater WHERE {
  # Find the mayor associated with Northern Ireland Forum
  ?mayor a dbo:Politician ;
         dbo:memberOf ?forum .
  
  FILTER(CONTAINS(LCASE(str(?forum)), ""northern ireland forum""))
  
  # Get the alma mater of this mayor
  ?mayor dbo:almaMater ?university .

  # Find the nickname of Queen's University Belfast
  ?queenUniversity rdfs:label ?nickname .
  FILTER(CONTAINS(LCASE(str(?queenUniversity)), ""queens university belfast""))
  
  # Check if alma mater matches the nickname
  FILTER(LCASE(str(?almaMater)) = LCASE(str(?nickname)))
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
488,62,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of Emperor Go-Yōzei and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v6 . ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for Saitō Hajime's birthplace
SELECT ?birthPlace WHERE {
  ?saitoHajime dbo:birthPlace ?birthPlace .
  FILTER(STR(?saitoHajime) = ""Saitō_Hajime"")
}

UNION

# Query for the war involving Saitō Hajime and Emperor Go-Yōzei
SELECT DISTINCT ?war WHERE {
  ?saitoHajime dbo:participatedInMilitaryConflict ?war .
  ?emperorGoYozei dbo:administeredDuring ?war .
  FILTER(STR(?saitoHajime) = ""Saitō_Hajime"" && STR(?emperorGoYozei) = ""Emperor_Go-Yōzei"")
}

UNION

# Query for Matsudaira Tadamasa's father and his death place
SELECT ?deathPlace WHERE {
  ?matsudairaTadamasa dbo:father ?father .
  ?father dbo:deathPlace ?deathPlace .
  FILTER(STR(?matsudairaTadamasa) = ""Matsudaira_Tadamasa"")
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
184,50,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?entity1 ?entity2 WHERE {
  # Step 1: Find a child of Archduke Joseph Francis of Austria
  ?child1 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Step 2: Find the parent of that child (could be Joseph himself or another entity)
  ?entity1 dbo:child ?child1 .

  # Step 3: Find the parent of Archduke Ladislaus Philipp of Austria
  ?parentLadislaus dbo:child dbr:Archduke_Ladislaus_Philipp_of_Austria .
  
  # Step 4: Find a child of that parent
  ?entity4 dbo:parent ?parentLadislaus .

  # Step 5: Find the child of that child
  ?entity2 dbo:parent ?entity4 .

  # Filter for royalty in both entities
  FILTER EXISTS { ?entity1 rdf:type dbo:Royal . }
  FILTER EXISTS { ?entity2 rdf:type dbo:Royal . }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,49,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?event
WHERE {
  # Francisco Franco's military conflicts
  ?conflict dbo:commander dbr:Franco,_Francisco ;
           a dbo:MilitaryConflict .

  # Military forces involved in those conflicts
  ?conflict dbo:militaryForce ?militaryForce .

  # Events where he was a commander (El Director)
  ?event dbo:commander dbr:Franco,_Francisco ;
         a dbo:Event .
  
  FILTER(?conflict != ?event) # Ensure conflict and event are distinct
}
```",5,9,6,3,2,3,3,71,0,0,34,0,0.0,0
547,70,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v3 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace1 ?restingPlace2 ?restingPlace3 WHERE {
  # Resting place of the awardee of the award of Gerald Graham
  ?award dbo:recipient ?awardee .
  ?award dbo:winner ?person .
  ?person foaf:name ""Gerald Graham"" .
  ?awardee dbo:deathPlace ?restingPlace1 .

  UNION

  # Resting place of the actor in a show with Emily Richard
  ?show dbo:actor ?actor .
  ?show dbo:starring dbr:Emily_Richard .
  ?actor dbo:deathPlace ?restingPlace2 .

  UNION

  # Resting place of the child of James Burton (property developer)
  ?james a dbo:PropertyDeveloper ;
         foaf:name ""James Burton"" .
  ?child dbo:parent ?james ;
         dbo:deathPlace ?restingPlace3 .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
488,53,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?war ?administration ?deathPlace
WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .

  # War involving Saitō Hajime as a commander
  ?war dbo:commander dbr:Saitō_Hajime .
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:Event ;
       rdf:type dbo:SocietalEvent .

  # Toyotomi Hideyoshi's administration (assuming we are looking for his role)
  dbr:Toyotomi_Hideyoshi dbo:officeHolder ?administration .

  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
754,17,test,Give me the parent of the child of the reference to Ram Khamhaeng the Great and parent of Loe Thai.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commonAncestor WHERE {
  # Step 1: Identify Ram Khamhaeng the Great
  ?ramKhamhaeng a dbo:Person ;
                foaf:name ""Ram Khamhaeng the Great""@en .

  # Step 2: Find the child of Ram Khamhaeng the Great
  ?child dbo:parent ?ramKhamhaeng .

  # Step 3: Identify Loe Thai
  ?loeThai a dbo:Person ;
           foaf:name ""Loe Thai""@en .

  # Step 4: Find the parent of Loe Thai
  ?parentLofThai dbo:child ?loeThai .

  # Step 5: Determine the common ancestor (parent) of both entities
  ?commonAncestor dbo:child ?child .
  ?commonAncestor dbo:child ?parentLofThai .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
55,20,test,"Give me the band of Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony and band member of Guns N' Roses.",SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?metallicaMember ?otherBand ?sfsMusician ?gnrMember
WHERE {
  # Metallica member who is also in another band and group
  ?metallicaMember dbo:memberOf dbr:Metallica .
  ?metallicaMember dbo:memberOf ?otherBand .
  FILTER EXISTS { ?otherBand a dbo:MusicalGroup . }
  FILTER EXISTS { ?otherBand a dbo:Band . }

  # San Francisco Symphony musician
  ?sfsMusician dbo:performerIn dbr:San_Francisco_Symphony .

  # Guns N' Roses member
  ?gnrMember dbo:memberOf dbr:Guns_N'_Roses .
  
  # Find a common person among these categories
  FILTER (?metallicaMember = ?sfsMusician)
  FILTER (?metallicaMember = ?gnrMember)
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
184,56,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
# Step 1: Find Archduchess Margaret of Austria (born 1925) and her parent
SELECT ?margaret ?parentMargaret WHERE {
    ?margaret dbo:birthDate ?date .
    ?margaret rdfs:label ""Archduchess Margaret of Austria""@en .
    FILTER(YEAR(?date) = 1925)
    ?margaret dbo:parent ?parentMargaret .
}

# Step 2: Find the child of Archduchess Margaret's parent
SELECT ?childOfParent WHERE {
    ?parentMargaret dbo:child ?childOfParent .
}

# Step 3: Find the parent of this child
SELECT ?grandChildParent WHERE {
    ?childOfParent dbo:parent ?grandChildParent .
}

# Step 4: Identify Archduke Joseph August's children and find who is a native of Budapest
SELECT ?josephChild ?budaNative WHERE {
    ?joseph rdfs:label ""Archduke Joseph August of Austria""@en .
    ?joseph dbo:child ?josephChild .
    ?josephChild dbo:nativePlace dbr:Budapest .
}

# Step 5: Find the parent of this native of Budapest
SELECT ?budaNativeParent WHERE {
    ?budaNative dbo:parent ?budaNativeParent .
}

# Step 6: Check if these two individuals share a common parent
SELECT DISTINCT ?commonParent WHERE {
    VALUES (?individual1) { ?grandChildParent }
    VALUES (?individual2) { ?budaNativeParent }
    
    OPTIONAL { ?individual1 dbo:parent ?commonParent . }
    OPTIONAL { ?individual2 dbo:parent ?commonParent . }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
427,69,test,"Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . ?v7 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?michelePintoParty ?lambertoAndreottiFatherParty ?romanoProdiBirthName
WHERE {
  # Michele Pinto's party
  OPTIONAL { 
    dbr:Michele_Pinto dbo:party ?michelePintoParty .
  }
  
  # Father of Lamberto Andreotti and his party
  OPTIONAL {
    dbr:Lamberto_Andreotti dbo:father ?lambertoAndreottiFather .
    ?lambertoAndreottiFather dbo:party ?lambertoAndreottiFatherParty .
  }

  # Romano Prodi's birth name, ensuring he is a politician and office holder
  OPTIONAL {
    dbr:Romano_Prodi dbo:birthName ?romanoProdiBirthName ;
                     rdf:type dbo:Politician ;
                     dbo:officeHolder ?_ .
  }
}
```",8,10,9,3,3,3,3,71,2,0,0,1.0,1.0,1.0
617,41,test,"Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse
WHERE {
  # Find a child of Antiochus III the Great who is also a parent of Nysa
  ?child1 dbo:parent dbr:Antiochus_III_the_Great .
  ?child1 dbo:spouse ?nysaParent .

  # Identify Nysa's parent
  ?nysaParent dbo:spouse dbr:Nysa_of_Pontus .

  # Find a child of Seleucus II Callinicus who is royalty and related to the above person
  ?child2 dbo:parent dbr:Seleucus_II_Callinicus .
  ?child2 rdf:type dbo:Monarch .
  
  # Check if this child is connected through marriage or lineage
  ?child2 dbo:spouse ?relatedPerson .
  FILTER (?relatedPerson = ?nysaParent || ?relatedPerson = ?child1)

  # Find the spouse of this person
  ?relatedPerson dbo:spouse ?spouse .
}
```",5,6,6,2,3,3,3,71,0,0,2,0,0.0,0
232,42,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native ?child WHERE {
  # Find Sylvie Bermann's residence
  ?sylvie a dbo:Person ;
          foaf:name ""Sylvie Bermann""@en .
  
  ?residence dbo:resident ?sylvie .

  # Determine the native or capital city of this residence
  ?residence dbo:nativeName ?native ;
             dbo:country dbr:United_Kingdom .

  # Find John Devon Roland Pertwee and his child with Sylvie Bermann
  ?john a dbo:Person ;
        foaf:name ""John Devon Roland Pertwee""@en .
  
  ?child dbo:parent ?sylvie, ?john .

  # Confirm the child acted in Dog Soldiers (film)
  ?child dbo:actorIn dbr:Dog_Soldiers_(2002_film) .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
915,19,test,"Give me the father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding and resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
# Step 1: Find Lizzie Spaulding's parent
SELECT ?parent WHERE {
    ?lizzie a dbo:FictionalCharacter ;
           dbo:soapCharacter ""Lizzie Spaulding"" .
    ?lizzie dbo:childOf ?parent .
}

# Step 2: Find the child of that parent who is also a fictional character and soap character
SELECT ?child WHERE {
    ?parent a dbo:FictionalCharacter ;
            dbo:soapCharacter ?parentName .
    ?child a dbo:FictionalCharacter ;
           dbo:soapCharacter ?childName ;
           dbo:parentOf ?parent .
}

# Step 3: Find Stephen Verona's birthplace
SELECT ?birthPlace WHERE {
    ?stephen a dbo:FictionalCharacter ;
             dbo:soapCharacter ""Stephen Verona"" ;
             dbo:birthPlace ?birthPlace .
    ?birthPlace a dbo:Settlement .
}

# Step 4: Identify the resident of that birthplace
SELECT ?resident WHERE {
    ?resident dbo:residence ?birthPlace .
}

# Step 5: Find the father of the identified child
SELECT ?father WHERE {
    ?child a dbo:FictionalCharacter ;
           dbo:soapCharacter ?childName .
    ?child dbo:father ?father .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
427,41,test,Give me the party of the father of Lamberto Andreotti and reference to the name of Italian People's Party (1994) and party of Romano Prodi.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?fatherPartyLabel ?ipepLabel ?prodiPartyLabel
WHERE {
  # Find Lamberto Andreotti's father and his party affiliation
  ?lamberto dbo:father ?father .
  ?father rdfs:label ""Giuseppe Andreotti""@en .
  ?father dbo:partyAffiliation ?fatherParty .

  # Get the label of the father's party
  ?fatherParty rdfs:label ?fatherPartyLabel .

  # Find Italian People's Party (1994) and its label
  ?ipep dbo:officialName ""Italian People's Party""@en ;
        rdfs:label ?ipepLabel .

  # Find Romano Prodi's party affiliation and its label
  ?prodi rdfs:label ""Romano Prodi""@en .
  ?prodi dbo:partyAffiliation ?prodiParty .
  ?prodiParty rdfs:label ?prodiPartyLabel .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
161,41,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForceLargoCaballero ?militaryForceFranco
WHERE {
  # Francisco Largo Caballero's military force during a societal event and military conflict
  OPTIONAL {
    ?largo dbr:Francisco_Largo_Caballero .
    ?largo dbo:militaryConflict ?conflict1 .
    ?conflict1 dbo:participatingMilitaryUnit ?militaryForceLargoCaballero .
  }

  # Francisco Franco's military force during a societal event, an event, and a military conflict
  OPTIONAL {
    ?franco dbr:Francisco_Franco .
    ?franco dbo:militaryConflict ?conflict2 .
    ?conflict2 dbo:participatingMilitaryUnit ?militaryForceFranco .
    
    # Specific to Biscay Campaign
    ?biscayCampaign dbr:Biscay_Campaign .
    ?biscayCampaign dbo:commander ?franco .
  }
}
```",5,10,6,2,3,3,3,71,0,0,3,0,0.0,0
404,47,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?princess rdf:type dbo:Person ;
            rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  ?princess dbo:spouse ?spouse .

  ?child dbo:parent ?princess ;
         rdf:type dbo:Person ;
         dbp:title ?titleChild .
  FILTER(CONTAINS(LCASE(?titleChild), ""royalty""))

  ?grandchild dbo:parent ?child ;
              rdf:type dbo:Person ;
              dbp:title ?titleGrandchild .
  FILTER(CONTAINS(LCASE(?titleGrandchild), ""royalty""))

  ?greatGrandchild dbo:parent ?grandchild ;
                   rdf:type dbo:Person ;
                   rdfs:label ""Prince George William of Hanover""@en .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
959,55,test,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?manager WHERE {
  # Takashi Sekizuka's team manager
  ?team dbo:member dbr:Takashi_Sekizuka ;
        dbo:manager ?manager .

  # Yōichi Masuzoe's native country
  dbr:Yōichi_Masuzoe dbo:nativePlace ?country .
  
  FILTER (isLiteral(?country) && regex(str(?country), ""Country""))

  # Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?university ;
                  dbo:birthPlace ?place .

  FILTER (?university a dbo:University)
  FILTER (str(?university) contains ""Japan"")

  # Ensure the manager is associated with both the team and the country
  ?team dbo:location ?country .
}
```",6,11,7,2,3,3,3,71,0,0,2,0,0.0,0
179,17,test,Give me the parent of the child of the parent of Vajiralongkorn and person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfChild
WHERE {
  # Vajiralongkorn's mother (Queen Sirikit)
  ?vajiralongkorn dbo:mother ?sirikit .
  
  # Queen Sirikit's child (Vajiralongkorn)
  ?sirikit dbo:child ?vajiralongkorn .

  # King Bhumibol Adulyadej (parent of Vajiralongkorn)
  ?vajiralongkorn dbo:father ?bhumibol .
  
  # Child of King Bhumibol Adulyadej
  ?bhumibol dbo:child ?vajiralongkorn .

  # Parent of the child (Queen Sirikit)
  ?vajiralongkorn dbo:mother ?parentOfChild .
}
```",4,4,5,3,2,3,2,20,0,105,1,0.0,0.0,0
303,28,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón and party of the commander, that is a politician, in United States invasion of Panama.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyArnulfo ?countryElValle ?partyCommander 
WHERE {
  # Arnulfo Arias Madrid's party and country associated with El Valle de Antón
  ?arnulfo a dbo:Person ;
           foaf:name ""Arnulfo Arias Madrid"" ;
           dbo:politicalParty ?partyArnulfo .
  
  OPTIONAL { ?arnulfo dbo:nationality ?countryElValle . }
  FILTER EXISTS {
    ?valle a dbo:Settlement ;
           rdfs:label ""El Valle de Antón""@en .
    ?valle dbo:locatedInCountry ?countryElValle .
  }

  # Commander of the United States invasion of Panama and their party
  ?invasion dbp:eventName ""United States invasion of Panama"" ;
            dbp:commander ?commander .

  OPTIONAL { ?commander dbo:politicalParty ?partyCommander . }
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
659,69,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v7 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?warCommander ?rutgerForce ?rutgerCommander ?irelandOfficeHolder
WHERE {
  # Find the war involving the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?regiment a dbo:MilitaryUnit ;
            dbp:militaryConflict ?war .

  # Identify the commander of this regiment during that war
  ?regiment dbo:commander ?warCommander .

  # Find the military force associated with Rutger Jan Schimmelpenninck and its commander
  ?rutgerForce a dbo:MilitaryConflict ;
               dbp:commander ?rutgerCommander .
  
  FILTER (str(?rutgerCommander) = ""Rutger Jan Schimmelpenninck"") .

  # Determine the native office holder from the Kingdom of Ireland
  ?irelandOfficeHolder a dbo:OfficeHolder ;
                      dbo:nationality dbp:Ireland ;
                      dbo:office ?office .
}
```",8,14,9,3,3,3,3,71,0,0,15,0,0.0,0
281,56,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in Colony of New Zealand and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?militaryUnit ?war
WHERE {
  ?person a dbo:Person ;
          dbo:officeHolder ?office ;
          dbo:politician ?politics ;
          dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .

  ?person dbo:militaryUnit ?militaryUnit .
  FILTER EXISTS { ?militaryUnit dbo:partOf dbr:New_Zealand_Army }

  ?militaryUnit dbo:war ?war .
  
  OPTIONAL {
    ?person dbo:entityInColony dbr:Colony_of_New_Zealand
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
404,24,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find the child of Ernest Augustus, Duke of Brunswick who is also a child of Ernest Augustus, Crown Prince of Hanover
  ?child dbo:child dbr:Ernest_Augustus,_Duke_of_Brunswick .
  ?child dbo:child dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .

  # Ensure the child is royalty
  ?child a dbo:RoyalFamilyMember .

  # Find the parent of this royal child
  ?parent dbo:parent ?child .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
492,62,test,"Give me the person decedent at Algiers and person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentAtAlgiers ?authorOfFrenchAlgeria ?otherCommander
WHERE {
  # Person decedent at Algiers
  ?personDecedentAtAlgiers dbo:deathPlace dbr:Algiers .
  
  # Author of French Algeria
  ?book dbo:author dbr:Fernand_Braudel ;
        rdfs:label ""French Algeria""@en .
  BIND(dbr:Fernand_Braudel AS ?authorOfFrenchAlgeria)
  
  # Commander in Battle of Verdun and another commander in a different war
  ?verdunCommander dbo:commandedBattle dbr:Battle_of_Verdun ;
                   rdf:type dbo:MilitaryPerson .
  BIND(dbr:Philippe_Pétain AS ?verdunCommander)

  ?otherWar rdfs:label ?warLabel .
  FILTER(CONTAINS(LCASE(?warLabel), ""war"") && !CONTAINS(LCASE(?warLabel), ""battle of verdun""))
  
  ?otherCommander dbo:commandedBattle ?otherWar ;
                 rdf:type dbo:MilitaryPerson .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
391,67,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of Compton, California and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor
WHERE {
  # Find Sherry Hormann's spouse
  dbr:Sherry_Hormann dbo:spouse ?spouse .

  # Identify the claim to fame of her spouse
  ?spouse dbo:claimToFame ?work .

  # Ensure the work is a movie and a television show
  ?work rdf:type dbo:Film .
  ?work rdf:type dbo:TelevisionShow .

  # Find an actor in that work
  ?work dbo:actor ?actor .

  # Check if the actor is a professional and native of Compton, California
  ?actor dbo:nativePlace dbr:Compton,_California .
  ?actor dbo:profession ?profession .

  FILTER EXISTS { ?profession rdf:type dbo:Actor }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
547,51,test,Give me the resting place of the actor of Enemy at the Door and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Query to get the resting place of an actor in ""Enemy at the Door""
SELECT ?actor ?restingPlace WHERE {
  ?movie dbo:title ""Enemy at the Door""@en .
  ?movie dbo:starring ?actor .
  OPTIONAL { ?actor dbo:finalRestingPlace ?restingPlace . }
}

# Query to get the resting place of an awardee of the award named after Gerald Graham
SELECT ?award ?awardee ?restingPlace WHERE {
  ?award dbo:name ""Gerald Graham""@en ;
         dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:finalRestingPlace ?restingPlace . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
820,20,test,Give me the child of the parent of the professional in Actor and professional in the award of the author of Understanding Comics.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v1 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?childOfParent WHERE {
  # Step 1: Find the author of ""Understanding Comics""
  ?book dbo:title ""Understanding Comics""@en .
  ?book dbo:author ?author .

  # Step 2: Identify an award related to this author
  ?award dbo:recipient ?author .

  # Step 3: Find a professional associated with this award
  ?professional dbo:award ?award ;
                rdf:type dbo:Person .

  # Step 4: Find an actor and their parent
  ?actor rdf:type dbo:Actor ;
         dbo:parent ?parent .

  # Step 5: Find the child of the identified parent
  ?childOfParent dbo:parent ?parent .
}
```",6,6,7,3,2,3,2,20,0,0,128,0,0.0,0
701,54,test,Give me the parent of the child of the child of Seti I and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Find Seti I's children
  ?childSetiI dbo:child dbr:Seti_I .
  
  # From one of Seti I's children, find their child (grandchild of Seti I)
  ?grandChildSetiI dbo:child ?childSetiI .

  # Identify Ramesses II's spouse
  ?spouseRamessesII dbo:spouse dbr:Ramses_II .
  
  # Find Nefertari's child
  ?childNefertari dbo:child dbr:Nefertari .

  # Check if there is a common parent between the grandchild of Seti I and the child of Nefertari
  ?parent dbo:child ?grandChildSetiI .
  ?parent dbo:child ?childNefertari .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
547,63,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchildRestingPlace ?knightGrandCrossRestingPlace ?actorRestingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  {
    ?williamHaliburton dbo:birthName ""William Haliburton""@en.
    ?williamHaliburton dbo:child ?child1.
    ?child1 dbo:child ?grandchild.
    ?grandchild dbo:restingPlace ?grandchildRestingPlace.
  }

  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George.
    ?person dbo:restingPlace ?knightGrandCrossRestingPlace.
  }

  # Resting place of the actor of ""Enemy at the Door""
  {
    dbr:Enemy_at_the_Door dbo:actor ?actor.
    ?actor dbo:restingPlace ?actorRestingPlace.
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
659,60,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the commander related to Kingdom of Ireland
  ?kingdom dbr:Kingdom_of_Ireland ;
           dbo:militaryCommander ?commander .

  # Check if Rutger Jan Schimmelpenninck was involved in any military force or event
  OPTIONAL {
    ?schimmelpenninck dbr:Rutger_Jan_Schimmelpenninck ;
                      dbo:officeHolder ?office ;
                      dbo:militaryCommander ?commander .
  }

  # Ensure the commander is linked to a societal event and military conflict
  ?event dbo:socialEvent true ;
         dbo:militaryConflict true ;
         dbo:relatedMilitaryForce ?force .

  FILTER EXISTS { ?commander dbo:participatedIn ?event }
}
```",6,10,7,3,2,3,3,71,0,0,40,0,0.0,0
783,19,test,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns and associated musical artist of the band member of Ofori Amponsah.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember
WHERE {
  # Find band members of Ebony Reigns
  ?ebony a dbo:Person ;
         dbp:musicalArtist ""Ebony Reigns"" ;
         dbo:associatedBandMember ?bm1 .
  
  # Find band members of Ofori Amponsah
  ?ofori a dbo:Person ;
         dbp:musicalArtist ""Ofori Amponsah"" ;
         dbo:associatedBandMember ?bm2 .

  # Check for common band member
  FILTER (?bm1 = ?bandMember && ?bm2 = ?bandMember)
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
232,30,test,"Give me the child of Jon Pertwee and actor of Dog Soldiers (film) and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?actor ?settlement WHERE {
  # Jon Pertwee's child
  dbr:Jon_Pertwee dbo:child ?child .

  # Actor of Dog Soldiers (film)
  dbr:Dog_Soldiers_(2002_film) dbo:starring ?actor .
  
  # Check if the actor is also a child of Jon Pertwee
  FILTER(?child = ?actor)

  # Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:residence ?settlement .

  # Ensure the settlement is British and a settlement type
  ?settlement dbo:settlementType ?type .
  ?settlement dbo:country dbr:United_Kingdom .
  
  # Check if the actor is native to this settlement
  OPTIONAL { ?actor dbo:nativePlace ?settlement }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
492,44,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentInFrenchAlgeria ?personDecedentInAlgiers ?commanderInWar
WHERE {
  # Person decedent in French Algeria
  ?personDecedentInFrenchAlgeria a dbo:Person ;
                               dbo:deathPlace dbr:French_Algeria .

  # Person decedent in Algiers, the capital of Algeria
  ?personDecedentInAlgiers a dbo:Person ;
                          dbo:deathPlace dbr:Algiers .

  # Frédéric-Georges Herr's military conflict involvement
  ?war dbo:militaryCommander dbr:Frédéric-Georges_Herr ;
       a dbo:MilitaryConflict .

  # Other commanders in the same war
  ?commanderInWar dbo:militaryCommander ?war ;
                  a dbo:Person .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
767,59,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater ?settlement WHERE {
  # Step 1: Identify George Kilbon Nash and his alma mater
  dbr:George_Kilbon_Nash a dbo:Person .
  dbr:George_Kilbon_Nash dbo:almaMater ?almaMater .

  # Step 2: Find any administration entity related to George Kilbon Nash
  OPTIONAL {
    ?administration dbo:member dbr:George_Kilbon_Nash .
    ?administration a dbo:AdministrativeRegion .
  }

  # Step 3: Identify the writer of ""Where It's At"" from Dustin Lynch's album
  dbr:""Where_It%27s_At_(Dustin_Lynch_album)"" dbo:songwriter ?songwriter .

  # Step 4: Find any settlement related to the songwriter within the administration
  OPTIONAL {
    ?settlement a dbo:Settlement ;
               dbo:locatedIn ?administration .
    ?settlement dbo:associatedWith ?songwriter .
  }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,71,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as the birth name of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v8 . ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v4 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Step 1: Find the actor in ""Unnatural"" TV series
SELECT ?actor WHERE {
    ?series dbo:title ""Unnatural (TV series)"" .
    ?series dbo:genre dbc:Television_dramas .
    ?series dbo:starring ?actor .
}

# Step 2: Get Ted McGinley's birth name
SELECT ?birthName WHERE {
    dbpedia:Ted_McGinley dbo:birthName ?birthName .
}

# Step 3: Find Ohio State University alumnus by the birth name of Ted McGinley
SELECT ?alumnus WHERE {
    ?person dbo:almaMater dbr:Ohio_State_University .
    ?person dbo:birthName ?birthName .
    FILTER(?birthName = ""Ted_McGinley"") # Replace with actual birth name from Step 2
}

# Step 4: Find spouse of Ted McGinley and the alumnus found in Step 3
SELECT ?spouseMcGinley, ?spouseAlumnus WHERE {
    dbpedia:Ted_McGinley dbo:spouse ?spouseMcGinley .
    ?alumnus dbo:spouse ?spouseAlumnus .
}

# Step 5: Find a professional in the same profession as the actor from ""Unnatural""
SELECT DISTINCT ?professional WHERE {
    # Assuming we have found an actor named ?actor
    ?actor rdf:type dbo:Actor .
    
    # Get the spouse of both individuals and check if they share a common profession
    ?spouseMcGinley dbo:profession ?profession .
    ?spouseAlumnus dbo:profession ?profession .
    
    ?professional dbo:profession ?profession .
}
```",9,9,10,3,3,3,3,71,0,0,1,0,0.0,0
285,19,test,Give me the spouse of the professional in the award of Stan Lee and parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Stan_Lee dbo:awardReceived dbr:.* .
  dbr:Stan_Lee dbo:spouse ?spouse .
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
391,64,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of The Departed and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?actor dbo:birthPlace ?nativePlace .
  ?actor rdfs:label ""Martin Sheen""@en .
  FILTER NOT EXISTS { ?actor dbo:spouse ?spouse . }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
528,45,test,Give me the war of Orozimbo Barbosa and war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOrozimbo ?warIrene ?militaryRankNarciso
WHERE {
  # Wars associated with Orozimbo Barbosa
  OPTIONAL { 
    dbr:Orozimbo_Barbosa dbo:participatedIn ?warOrozimbo .
  }
  
  # Wars associated with Irene Morales
  OPTIONAL { 
    dbr:Irene_Morales dbo:participatedIn ?warIrene .
  }

  # Military rank of Narciso Campero
  OPTIONAL {
    dbr:Narciso_Campero dbo:militaryRank ?militaryRankNarciso .
  }
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
251,25,test,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier and administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/ontology/place> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/property/leaderParty> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warLocation ?rulingPartyAdminLocation ?deathPlace
WHERE {
  # Part 1: War involving Louis François Félix Musnier in Sicily
  OPTIONAL {
    dbr:Louis_François_Félix_Musnier dbo:militaryConflict ?conflict .
    ?conflict dbo:location ?warLocation .
    FILTER(CONTAINS(LCASE(STR(?warLocation)), ""sicily""))
  }

  # Part 2: Administration of the ruling party in Sicily
  OPTIONAL {
    ?party dbo:administration ?admin .
    ?admin dbo:location ?rulingPartyAdminLocation .
    FILTER(CONTAINS(LCASE(STR(?rulingPartyAdminLocation)), ""sicily""))
  }
  
  # Part 3: Death place of Laura Mancinelli
  dbr:Laura_Mancinelli dbo:deathPlace ?deathPlace .
}
```",5,8,6,2,3,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
281,49,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName ?militaryUnit
WHERE {
  ?person a dbo:Politician ;
          a dbo:OfficeHolder ;
          dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  
  ?person foaf:name ?personName .

  OPTIONAL { 
    ?serviceRecord dbo:militaryUnit ?militaryUnit .
    ?serviceRecord dbo:soldier ?person .
    FILTER EXISTS { ?militaryUnit dbo:country dbr:New_Zealand }
  }
}
```",5,8,6,3,2,3,3,71,0,2,9,0.0,0.0,0
9,62,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as QUB and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater
WHERE {
  # Step 1: Identify Queen's University Belfast (QUB) in Belfast
  dbr:Belfast dbo:location dbr:Northern_Ireland .
  dbr:Queen%27s_University_Belfast dbo:location dbr:Belfast ;
                                  rdfs:label ""Queen's University Belfast""@en .

  # Step 2: Find the mayor of Belfast who is a politician
  ?mayor dbo:position dbr:Municipal_Office_of_the_City_of_Belfast ;
         dbo:almaMater ?almaMater1 .
  
  # Step 3: Get the alma mater of this mayor

  # Step 4: Identify the Royal Medal award
  ?award dbo:name ""Royal Medal""@en ;
         dbo:recipient ?recipient .

  # Step 5: Get the alma mater of the awardee of the Royal Medal
  ?recipient dbo:almaMater ?almaMater2 .
  
  # Ensure consistency between the two alma maters
  FILTER (?almaMater1 = ?almaMater2)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
994,51,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  # Identify Don Dokken as a musical artist
  dbr:Don_Dokken a dbo:Person ;
                 dbo:musicalArtist true .

  # Find band members associated with Don Dokken
  ?bandMember dbo:member dbr:Don_Dokken .

  # Ensure the band member is also associated with Meshuggah
  ?bandMember dbo:associatedBand dbr:Meshuggah .
  
  # Verify that Meshuggah is a band, group, and organization
  dbr:Meshuggah a dbo:Band ;
                a dbo:Group ;
                a dbo:Organisation .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
528,56,test,Give me the war of Orozimbo Barbosa and war of the military force of Battle of Pisagua and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOrozimbo ?battlePisaguaForce ?narcisoForce
WHERE {
  # Wars involving Orozimbo Barbosa
  OPTIONAL {
    dbr:Orozimbo_Barbosa dbo:participatedIn ?warOrozimbo .
  }

  # Military forces in the Battle of Pisagua
  OPTIONAL {
    dbr:Battle_of_Pisagua dbo:participant ?battlePisaguaForce .
  }

  # Forces associated with Narciso Campero using his birth name
  OPTIONAL {
    ?narcisoResource foaf:name ""Narciso Campero""@en ;
                      dbo:birthName ?birthName .
    ?narcisoResource dbo:militaryForce ?narcisoForce .
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
55,24,test,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Find a band member of San Francisco Symphony that is also a band
  ?symphonyMember dbo:member dbr:San_Francisco_Symphony .
  ?symphonyMember rdf:type dbo:Band .

  # Find a band associated with Newsted
  ?newstedBand dbo:member dbr:Jason_Newsted .
  ?newstedBand rdf:type dbo:Band .

  # Check if the same entity satisfies both conditions
  FILTER (?bandMember = ?symphonyMember && ?bandMember = ?newstedBand)
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
16,70,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as Ted Martin McGinley and person born as the birth name of the alumnus of Ohio State University.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find the actor from ""Unnatural""
SELECT ?actor WHERE {
    ?series dbo:title ""Unnatural (TV series)"" .
    ?series dbo:castMember ?actor .
}

# Step 2: Find Ted Martin McGinley's spouse
SELECT ?spouse WHERE {
    dbr:Ted_McGinley dbo:birthName ""Ted Martin McGinley"" ;
                     dbo:spouse ?spouse .
}

# Step 3: Find an Ohio State University alumnus and their birth name
SELECT ?alumnus ?birthName WHERE {
    ?alumnus dbo:almaMater dbr:Ohio_State_University ;
             dbo:birthName ?birthName .
}

# Step 4: Identify the person born with that birth name
SELECT ?person WHERE {
    ?person dbo:birthName ?birthName .
}

# Step 5: Find a common spouse between Ted McGinley's spouse and the person identified by the alumnus's birth name
SELECT DISTINCT ?commonSpouse WHERE {
    { dbr:Ted_McGinley dbo:spouse ?commonSpouse . }
    UNION
    { ?person dbo:spouse ?commonSpouse . FILTER(?birthName = ""desired_birth_name"") }
}

# Step 6: Retrieve the profession of this common individual
SELECT DISTINCT ?profession WHERE {
    ?commonSpouse a ?class .
    ?class rdfs:subClassOf* dbo:Person .
    ?commonSpouse dbo:occupation ?profession .
}
```

Note: Replace `""desired_birth_name""` with the actual birth name obtained from Step 3.",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
404,68,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia's birth name and spouse
  ?princess a dbo:Person ;
           rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  ?princess dbo:birthName ?birthName .

  ?princess dbo:spouse ?spouse .

  # Step 2: Identify Ernest Augustus, Duke of Brunswick's father
  ?ernestAugustus a dbo:Person ;
                 rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  
  ?ernestAugustus dbo:father ?father .

  # Step 3: Find the child of this father who is royalty
  ?child a dbo:Person ;
         dbo:parent ?father ;
         rdfs:label ?childLabel .

  FILTER(CONTAINS(LCASE(?childLabel), ""royalty""))

  # Step 4: Identify Prince George William of Hanover's parent and their child
  ?princeGeorgeWilliam a dbo:Person ;
                      rdfs:label ""Prince George William of Hanover""@en .
  
  ?parent a dbo:Person ;
          dbo:child ?princeGeorgeWilliam .

  FILTER(CONTAINS(LCASE(?parentLabel), ""royalty""))

  ?grandChild a dbo:Person ;
              dbo:parent ?parent ;
              rdfs:label ?grandChildLabel .

  FILTER(CONTAINS(LCASE(?grandChildLabel), ""royalty""))
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
617,62,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v3 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalPerson WHERE {
  # Step 1: Identify Nysa
  ?nysa a dbo:Person ;
        dbp:spouse ?pharnacesI .
  
  FILTER(STR(?pharnacesI) = ""Pharnaces_I_of_Pontus"")

  # Step 2: Find Nysa's Parent
  ?parent a dbo:Person ;
          dbo:child ?nysa .

  # Step 3: Determine the Child of Nysa's Parent (Royalty)
  ?royalChild a dbo:Monarch ;
              dbo:child ?parent .

  # Step 4: Identify Antiochus II Theos' Successor (Royalty)
  ?antiochusII a dbo:Person ;
               dbp:succeededBy ?successor .
  
  FILTER(STR(?antiochusII) = ""Antiochus_II_Theos"")

  ?royalSuccessor a dbo:Monarch ;
                  dbp:succeededBy ?antiochusII .

  # Step 5: Find the Child of the Successor (Royalty)
  ?childOfSuccessor a dbo:Monarch ;
                    dbo:parent ?royalSuccessor .

  # Step 6: Spouse of the Child
  ?spouse a dbo:Person ;
          dbp:spouse ?childOfSuccessor .

  # Step 7: Antiochus III's Son and His Successor (Royalty)
  ?antiochusIII a dbo:Person ;
                dbp:succeededBy ?sonAntiochus .
  
  FILTER(STR(?antiochusIII) = ""Antiochus_III_the_Great"")

  ?royalSon a dbo:Monarch ;
            dbp:succeededBy ?antiochusIII .

  # Step 8: Child of This Successor (Royalty)
  ?childOfRoyalSon a dbo:Monarch ;
                   dbo:parent ?royalSon .

  # Step 9: Final Connection
  FILTER(STR(?spouse) = STR(?childOfRoyalSon))
  
  BIND(?spouse AS ?finalPerson)
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
659,18,test,Give me the military force of Napoleonic Wars and commander in Battle of Leipzig and commander in German campaign of 1813.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?battleOfLeipzigCommander ?germanCampaign1813Commander WHERE {
  # Napoleon's military force during the Napoleonic Wars
  dbr:Napoleon_I dbo:militaryConflict ?militaryConflict .
  FILTER(CONTAINS(LCASE(STR(?militaryConflict)), ""napoleonic wars""))
  ?militaryForce dbo:commander dbr:Napoleon_I .

  # Commander in Battle of Leipzig
  OPTIONAL {
    dbr:Battle_of_Leipzig dbo:commander ?battleOfLeipzigCommander .
    FILTER(CONTAINS(LCASE(STR(?battleOfLeipzigCommander)), ""napoleon"") || CONTAINS(LCASE(STR(?battleOfLeipzigCommander)), ""france""))
  }

  # Commander in German campaign of 1813
  OPTIONAL {
    dbr:German_campaign_of_1813 dbo:commander ?germanCampaign1813Commander .
    FILTER(CONTAINS(LCASE(STR(?germanCampaign1813Commander)), ""napoleon"") || CONTAINS(LCASE(STR(?germanCampaign1813Commander)), ""france""))
  }
}
```",3,3,4,1,3,3,3,71,0,0,5,0,0.0,0
391,69,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/nickname> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?work WHERE {
  # Michael Ballhaus's notable works
  ?ballhausWork dbo:director dbr:Michael_Ballhaus .
  
  # Find the nickname of Jackson, Tennessee
  ?jackson dbo:nickname ?nickname .

  # Actor from Jackson, Tennessee
  ?actor dbo:birthPlace ?jackson ;
         a dbo:Actor .

  # Works involving both Michael Ballhaus and the actor
  ?ballhausWork dbo:starring ?actor .
  
  # Ensure the work is a film or television show
  ?ballhausWork a ?workType .
  FILTER(?workType IN (dbo:Film, dbo:TelevisionSeries))
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
959,60,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName ?almaMaterName
WHERE {
  # Find the manager of Kashima Antlers in 1998
  ?team dbr:Kashima_Antlers_season_1998 dbo:manager ?manager .
  
  # Ensure the manager is a sports manager
  ?manager rdf:type dbo:SportsManager .

  # Get the birth year and nationality
  ?manager dbo:birthDate ?birthDate ;
           dbo:nationality dbr:Japan .

  # Filter by birth year (1958)
  FILTER(YEAR(?birthDate) = 1958)

  # Find alma mater that is Japanese, an organization, and an educational institution
  ?manager dbo:almaMater ?almaMater .
  ?almaMater rdf:type dbo:EducationalOrganization ;
             dbo:country dbr:Japan .

  # Bind names for output
  ?manager rdfs:label ?managerName .
  ?almaMater rdfs:label ?almaMaterName .
  
  FILTER(LANG(?managerName) = 'en')
  FILTER(LANG(?almaMaterName) = 'en')
}
```",6,11,7,3,2,3,3,71,0,0,3,0,0.0,0
281,38,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceCountry WHERE {
  ?bobHeffron a dbo:Person ;
              foaf:name ""Bob Heffron""@en .
  ?bobHeffron dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country ;
              rdfs:label ?birthPlaceCountry .
}

UNION

SELECT DISTINCT ?war WHERE {
  ?heatherRoy a dbo:Person ;
              foaf:name ""Heather Roy""@en .
  ?heatherRoy dbo:militaryUnit ?militaryUnit .
  ?militaryUnit dbo:participatedInWar ?war .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
404,46,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify children of Ernest Augustus, Duke of Brunswick who are royalty
  ?child dbo:childOf <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  ?child a dbo:Monarch .

  # Step 2: Find the spouse of this child
  ?spouse dbo:spouse ?child .

  # Step 3: Determine the birth name of Princess Victoria Louise of Prussia
  ?princess foaf:name ""Victoria Louise, Margravine of Brandenburg"" .
  
  # Step 4: Identify the person born with that birth name who is royalty
  ?person dbo:birthName ?princess .
  ?person a dbo:Monarch .

  # Step 5: Find the spouse of this person
  ?spouse2 dbo:spouse ?person .

  # Step 6: Match the spouse from step 2 with the spouse from step 5
  FILTER (?spouse = ?spouse2)

  # Identify the parent of the child (from step 1)
  ?parent dbo:child ?child .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
959,45,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and native of Japan and member of University of Tsukuba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName WHERE {
  ?team a dbo:SoccerTeam ;
        dbo:season ""1998"" ;
        dbo:manager ?manager .
  
  ?manager a dbo:SportsManager ;
          rdfs:label ?managerName ;
          dbo:nationality dbr:Japan ;
          dbo:almaMater dbr:University_of_Tsukuba .

  FILTER (lang(?managerName) = ""en"")
  
  VALUES ?team { dbr:Kashima_Antlers }
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
378,40,test,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query for Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?claimToFame ?war 
WHERE {
    ?person rdfs:label ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
    OPTIONAL { ?person dbo:notableWork ?claimToFame . }
    OPTIONAL { ?person dbo:militaryConflict ?war . }
}

UNION

# Query for Joaquín Blake
SELECT ?war 
WHERE {
    ?person rdfs:label ""Joaquín Blake""@en .
    ?person dbo:militaryConflict ?war .
}

UNION

# Query for Carl Pontus Gahn
SELECT ?birthName ?claimToFame 
WHERE {
    ?person rdfs:label ""Carl Pontus Gahn""@en .
    OPTIONAL { ?person foaf:name ?birthName . }
    OPTIONAL { ?person dbo:notableWork ?claimToFame . }
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
701,62,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II and parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
# Step 1: Find Amun-her-khepeshef's spouse
SELECT ?spouse WHERE {
    ?amunherkhepeshef dbo:spouse ?spouse .
    ?amunherkhepeshef rdfs:label ""Amun-her-khepeshef""@en .
}

# Step 2: Find Ramesses II's spouse
SELECT ?ramessesspouse WHERE {
    ?ramesses dbo:spouse ?ramessesspouse .
    ?ramesses rdfs:label ""Ramesses II""@en .
}

# Step 3: Check for a common spouse
SELECT DISTINCT ?commonSpouse WHERE {
    VALUES (?amunherkhepeshef ?ramesses) { 
        (<http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/resource/Ramesses_II>)
    }
    ?amunherkhepeshef dbo:spouse ?commonSpouse .
    ?ramesses dbo:spouse ?commonSpouse .
}

# Step 4: Find the child of the common spouse
SELECT DISTINCT ?child WHERE {
    ?commonSpouse dbo:child ?child .
}

# Step 5: Identify the parent of this child (either Amun-her-khepeshef or Ramesses II)
SELECT DISTINCT ?parent WHERE {
    VALUES (?amunherkhepeshef ?ramesses) { 
        (<http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/resource/Ramesses_II>)
    }
    ?commonSpouse dbo:child ?child .
    ?parent dbo:spouse ?commonSpouse .
}

# Step 6: Find Seti I's children
SELECT DISTINCT ?setiChild WHERE {
    ?seti dbo:child ?setiChild .
    ?seti rdfs:label ""Seti I""@en .
}

# Step 7: Find a child of one of Seti I’s children (grandchild)
SELECT DISTINCT ?grandchild WHERE {
    ?setiChild dbo:child ?grandchild .
}

# Step 8: Identify the parent of this grandchild
SELECT DISTINCT ?parentOfGrandchild WHERE {
    ?setiChild dbo:child ?grandchild .
    ?parentOfGrandchild dbo:spouse ?setiChild .
}

# Final step: Find any connection between the two parents identified in steps 5 and 8
SELECT DISTINCT ?finalConnection WHERE {
    VALUES (?parent1 ?parent2) { 
        (<result_from_step_5> <result_from_step_8>)
    }
    ?parent1 dbo:child ?commonChild .
    ?parent2 dbo:child ?commonChild .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
801,67,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v6 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?album ?producer ?rapper ?associatedArtist ?writer 
WHERE {
  # Identify the album
  dbr:What_U_See_Is_What_U_Get a dbo:MusicalWork ;
    rdfs:label ""What U See Is What U Get""@en .

  OPTIONAL {
    # Find producers of the album
    ?album dbo:producer ?producer .
    FILTER(?producer != null)
  }

  OPTIONAL {
    # Identify any rapper and their associated musical artists
    ?rapper a dbo:MusicalArtist ;
      dbo:associatedMusicalArtist ?associatedArtist .
    ?album dbo:artist ?rapper .
  }
  
  OPTIONAL {
    # Find the writer(s) of the songs, who are also musical artists
    ?writer a dbo:MusicalArtist ;
      dbo:work ?song .
    ?song dbo:partOfAlbum ?album .
  }
}
```",7,15,8,3,3,3,3,71,0,0,8,0,0.0,0
747,47,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on the birth date of Pavlo Khudzik.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Step 1: Find Amba Shepherd's song and the associated band
  ?song dbo:lyricsBy dbr:Amba_Shepherd ;
        dbo:musicalWorkOf ?band .

  # Step 2: Get Pavlo Khudzik's birth date
  dbr:Pavlo_Khudzik dbo:birthDate ?birthDate .

  # Step 3: Find a person born on the same date as Pavlo Khudzik
  ?person dbo:birthDate ?birthDate .
  
  FILTER(?person != dbr:Pavlo_Khudzik)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
77,20,test,"Give me the war of the awardee of the award of Maxim Grigorievich Vlasov and force of the mayor of the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/leader> ?v5 . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query to find the war related to Maxim Grigorievich Vlasov's award
SELECT ?war WHERE {
  ?person rdfs:label ""Maxim Grigorievich Vlasov""@en .
  ?award dbo:recipient ?person ;
         dbo:relatedEvent ?event .
  ?event rdf:type dbo:MilitaryConflict .
  BIND(?event AS ?war)
}
```

```sparql
# Query to find the force of the organization administering Warsaw
SELECT ?force WHERE {
  ?city rdfs:label ""Warsaw""@en .
  ?organization dbo:location ?city ;
                a dbo:GovernmentOrganization .
  ?leader dbo:positionHeld ?organization ;
          dbo:roleName ?role .
  FILTER(CONTAINS(LCASE(?role), ""mayor""))
  ?force dbo:member ?leader .
}
```",6,7,7,3,2,3,2,20,0,0,26,0,0.0,0
994,46,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . }","```sparql
# Step 1: Find Meshuggah's band members
SELECT ?member WHERE {
    ?meshuggah dbo:bandMember ?member .
    FILTER(STRSTARTS(LCASE(?meshuggah), ""http://dbpedia.org/resource/meshuggah""))
}

# Step 2: For each member, find their associated musical artists that are bands or groups
UNION

SELECT DISTINCT ?associatedArtist WHERE {
    ?member dbo:associatedMusicalArtist ?associatedArtist .
    FILTER(STRSTARTS(LCASE(?member), ""http://dbpedia.org/resource/"") && 
           (STRSTARTS(LCASE(?associatedArtist), ""http://dbpedia.org/resource/band:"") ||
            STRSTARTS(LCASE(?associatedArtist), ""http://dbpedia.org/resource/group:"") ||
            STRSTARTS(LCASE(?associatedArtist), ""http://dbpedia.org/resource/organization:"")))
}

# Step 3: Find Watchtower's associated musical artist
UNION

SELECT ?watchtowerArtist WHERE {
    ?watchtower dbo:associatedMusicalArtist ?watchtowerArtist .
    FILTER(STRSTARTS(LCASE(?watchtower), ""http://dbpedia.org/resource/watchtower""))
}

# Step 4: For the artist found in step 3, find their associated musical artists
UNION

SELECT DISTINCT ?finalAssociatedArtist WHERE {
    ?watchtowerArtist dbo:associatedMusicalArtist ?finalAssociatedArtist .
    FILTER(STRSTARTS(LCASE(?watchtowerArtist), ""http://dbpedia.org/resource/"") && 
           (STRSTARTS(LCASE(?finalAssociatedArtist), ""http://dbpedia.org/resource/band:"") ||
            STRSTARTS(LCASE(?finalAssociatedArtist), ""http://dbpedia.org/resource/group:"") ||
            STRSTARTS(LCASE(?finalAssociatedArtist), ""http://dbpedia.org/resource/organization:"")))
}
```",5,8,6,3,2,3,3,71,0,0,5,0,0.0,0
492,45,test,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?deathPlace1 ?deathPlace2 WHERE {
  # Find commander in Franco-Hova Wars
  ?commander a dbo:Person ;
             dbo:commanderOf dbr:Franco-Hova_Wars .

  # Find death place at the capital of Khemis Miliana District
  ?person1 a dbo:Person ;
           dbo:deathPlace dbr:Khemis_Miliana ; # Assuming this is the capital

  # Find death place in French Algeria
  ?person2 a dbo:Person ;
           dbo:deathPlace ?algeriaLocation .

  FILTER (sameTerm(?commander, ?person1) && sameTerm(?commander, ?person2))

  # Ensure that the death places are settlements
  ?deathPlace1 a dbo:Settlement .
  ?deathPlace2 a dbo:Settlement .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
184,61,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonAncestor WHERE {
  # Find parent of Archduke Ladislaus Philipp
  ?ladislaus a dbo:Person ;
             dbp:parent ?parentLadislaus .

  # Find child of the parent who is royalty
  ?childOfParentLadislaus a dbo:RoyalFamilyMember ;
                          dbp:parent ?parentLadislaus .

  # Find parent of Archduchess Margaret (born 1925)
  ?margaret a dbo:Person ;
            dbp:birthday ""1925-01-01""^^xsd:date ;
            dbp:parent ?parentMargaret .

  # Find child of the parent
  ?childOfParentMargaret a dbo:Person ;
                         dbp:parent ?parentMargaret .

  # Common ancestor (royalty) between both paths
  ?commonAncestor = ?childOfParentLadislaus .
  ?commonAncestor = ?childOfParentMargaret .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,49,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Step 1: Get Ted Martin McGinley's birth name
SELECT ?tedBirthName WHERE {
    ?ted dbo:birthName ?tedBirthName .
    ?ted foaf:name ""Ted Martin McGinley""@en .
}

# Step 2: Find Ohio State University alumnus with that birth name
SELECT ?alumnus WHERE {
    ?alumnus dbo:almaMater dbr_Ohio_State_University .
    ?alumnus dbo:birthName ?tedBirthName .
    # Use the result from step 1 for ?tedBirthName
}

# Step 3: Get Ted Martin McGinley's spouse and their birth name
SELECT ?spouseBirthName WHERE {
    ?ted dbo:spouse ?spouse .
    ?spouse dbo:birthName ?spouseBirthName .
    # Use the result from step 1 for ?ted
}

# Step 4: Find person born with that birth name
SELECT ?person WHERE {
    ?person dbo:birthName ?spouseBirthName .
    # Use the result from step 3 for ?spouseBirthName
}
```

Note: This query is structured in steps and would need to be executed sequentially, using intermediate results to proceed to the next step. In practice, this might involve running each part separately or combining them into a more complex SPARQL query with subqueries.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
16,65,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as Ted Martin McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Find Gigi Rice's birth name
  ?gigi a dbo:Person;
        foaf:name ""Gigi Rice""@en;
        rdfs:label ?birthName.
  
  # Step 2: Identify Ted Martin McGinley and his spouse
  ?ted a dbo:Person;
       foaf:name ""Ted Martin McGinley""@en;
       dbo:spouse ?spouse.

  # Step 3: Find the actor of ""Unnatural"" TV series and their profession
  ?unnaturalActor a dbo:Agent;
                  dbo:profession ?actorProfession;
                  dbo:workFeaturedIn dbr:Unnatural_(TV_series).

  # Filter spouse by the profession related to the actor of Unnatural
  ?spouse dbo:profession ?actorProfession.
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
16,60,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus WHERE {
  # Step 1: Get Ted McGinley's birth name
  ?ted a dbo:Person;
       foaf:name ""Ted McGinley"" ;
       dbo:birthName ?tedBirthName .

  # Step 2: Find his spouse
  ?ted dbo:spouse ?spouse .

  # Step 3: Get the spouse's birth name
  ?spouse dbo:birthName ?spouseBirthName .

  # Step 4: Identify an alumnus of Ohio State University
  ?alumnus a dbo:Person;
           dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University>;
           dbo:birthName ?tedBirthName .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
547,60,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeRestingPlace ?grandchildRestingPlace WHERE {
  # Part 1: Resting place of the awardee of Gerald Graham's award
  ?award dbo:recipient ?awardee .
  ?award dbo:givenBy dbr:Gerald_Graham .
  OPTIONAL { ?awardee dbo:deathPlace ?awardeeDeathPlace . }
  OPTIONAL { ?awardee dbo:burialPlace ?awardeeBurialPlace . }
  BIND(COALESCE(?awardeeDeathPlace, ?awardeeBurialPlace) AS ?awardeeRestingPlace)

  # Part 2: Resting place of the child of the child of William Haliburton
  ?grandparent dbo:child ?parent .
  FILTER (?grandparent = dbr:William_Haliburton)
  ?parent dbo:child ?grandchild .
  OPTIONAL { ?grandchild dbo:deathPlace ?grandchildDeathPlace . }
  OPTIONAL { ?grandchild dbo:burialPlace ?grandchildBurialPlace . }
  BIND(COALESCE(?grandchildDeathPlace, ?grandchildBurialPlace) AS ?grandchildRestingPlace)
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
659,49,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict ?commander WHERE {
  # Arthur Wellesley's military conflicts
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:militaryConflict ?conflict .
  
  # Commander of the force in those conflicts
  ?conflict dbo:commander ?commander .

  # Optional: Check for any connection to Rutger Jan Schimmelpenninck
  OPTIONAL {
    ?conflict dbo:reference dbr:Rutger_Jan_Schimmelpenninck .
  }
}
```",5,8,6,3,2,3,3,71,0,0,38,0,0.0,0
547,67,test,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . },"```sparql
# Resting place of James Burton (Egyptologist)
SELECT ?restingPlace WHERE {
  ?person a dbo:Egyptologist ;
          foaf:name ""James Burton"" .
  ?person dbo:finalBurialPlace ?restingPlace .
}

UNION

# Resting place of the awardee of Gerald Graham's award
SELECT ?recipientRestingPlace WHERE {
  ?award dbo:givenBy ""Gerald Graham""@en ;
         dbo:recipient ?recipient .
  ?recipient dbo:finalBurialPlace ?recipientRestingPlace .
}

UNION

# Resting place of the actor in a show with Emily Richard
SELECT DISTINCT ?actorRestingPlace WHERE {
  ?show dbo:starring ?emilyRichard .
  ?emilyRichard foaf:name ""Emily Richard""@en .
  ?show dbo:starring ?actor .
  ?actor dbo:finalBurialPlace ?actorRestingPlace .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
994,62,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find associated artist of Watchtower
  ?watchtowerArtist dbo:associatedBand dbr:Watchtower .
  
  # Step 2: Check if this artist is a member of Don Dokken's band
  ?donDokkenMember dbo:member ?watchtowerArtist ;
                  dbo:band dbr:Don_Dokken .

  # Step 3: Find associated artist of the above member
  ?associatedArtist dbo:associatedBand ?donDokkenMember .
  
  # Step 4: Identify bands/groups of Fredrik Thordendal
  ?fredrikBand dbo:member dbr:Fredrik_Thordendal ;
               a dbo:MusicalGroup .

  # Step 5: Find the intersection
  ?finalArtist dbo:associatedBand ?associatedArtist .
  ?finalArtist dbo:band ?fredrikBand .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
328,71,test,"Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> ?v2 . ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Step 1: Identify Gustav Jonson
  ?gustavJonson a dbo:Politician ;
                foaf:name ""Gustav Jonson""@en .

  # Step 2: Find the leader of Gustav Jonson's office
  ?office dbo:head ?leader .
  ?gustavJonson dbo:memberOf ?office .

  # Step 3: Identify the commander at Budapest
  ?commander a dbo:MilitaryPerson ;
             dbo:placeOfBirth dbr:Budapest ;
             dbo:awardReceived ?award .

  # Step 4: Awardee of the Commander Award for Volcano and Ryukyu Islands Campaign
  ?award dbo:name ""Commander in the Volcano and Ryukyu Islands campaign""@en .

  # Step 5: Linking all elements
  ?leader foaf:name ?commanderName .
  FILTER(?commanderName = ?gustavJonson)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
391,66,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as Hub City.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
# Step 1: Find Michael Ballhaus's claim to fame that is both a movie and a television show
SELECT ?work WHERE {
    ?work dbo:director dbp:Michael_Ballhaus .
    ?work rdf:type dbo:Film .
    ?work rdf:type dbo:TelevisionShow .
}

# Step 2: Identify actors of the work found in step 1
SELECT DISTINCT ?actor WHERE {
    ?work dbo:starring ?actor .
    FILTER(?work IN (<result_from_step_1>)) # Replace with actual result from step 1
}

# Step 3: Determine which city is known as ""Hub City""
SELECT ?city WHERE {
    ?city rdfs:label ""Hub City""@en .
}

# Step 4: Identify notable figures native to Hub City
SELECT DISTINCT ?figure WHERE {
    ?figure dbo:nativePlace ?city .
    FILTER(?city IN (<result_from_step_3>)) # Replace with actual result from step 3
}

# Step 5: Find the professional and actor roles of these figures
SELECT DISTINCT ?actor WHERE {
    ?figure dbo:profession ?professional .
    ?figure dbo:starring ?actor .
    FILTER(?figure IN (<results_from_step_4>)) # Replace with actual results from step 4
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
801,69,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Identify the album
  dbr:What_U_See_Is_What_U_Get dbo:artist dbr:50_Cent .
  
  # Find producers of the album
  dbr:What_U_See_Is_What_U_Get dbo:producer ?producer .

  # Ensure the producer is a musical artist
  ?producer rdf:type dbo:MusicalArtist .

  # Check for association with ""The Shadow""
  OPTIONAL {
    ?producer foaf:name ?name .
    FILTER(CONTAINS(LCASE(?name), ""the shadow""))
  }
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
488,21,test,Give me the administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?commanderName ?birthPlace
WHERE {
  # Administration of Emperor Go-Yōzei
  dbr:Emperor_Go-Yōzei dbo:reign ?administration .

  # Birthplace of a notable commander in the Boshin War
  OPTIONAL {
    ?commander dbo:wikiPageWikiLink dbr:Boshin_War ;
              rdfs:label ?commanderName .
    FILTER (CONTAINS(LCASE(?commanderName), ""boshin war"") && !CONTAINS(LCASE(?commanderName), ""list""))
    ?commander dbo:birthPlace ?birthPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
429,9,test,"Give me the country of the military force, that is an organisation, of Camden Expedition and administration of the father of Martha Johnson Patterson.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/country> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?camdenCountry ?pattersonFatherCountry WHERE {
  # Part 1: Camden Expedition's military force country
  OPTIONAL {
    ?expedition dbo:militaryForce ?militaryForce .
    ?militaryForce dbo:country ?camdenCountry .
    FILTER (str(?expedition) = ""Camden_Expedition"")
  }

  # Part 2: Martha Johnson Patterson's father's organization country
  dbr:Martha_Johnson_Patterson dbo:father ?father .
  OPTIONAL {
    ?father dbo:organization ?organization .
    ?organization dbo:country ?pattersonFatherCountry .
  }
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
427,53,test,"Give me the reference to the name of the party of Michele Pinto and party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?michelePartyLabel ?giulioPartyLabel ?romanoPartyLabel
WHERE {
  ?michele a dbo:Person ;
           foaf:name ""Michele Pinto""@en .
  ?michele dbo:party ?micheleParty .
  ?micheleParty rdfs:label ?michelePartyLabel .

  ?giulio a dbo:Person ;
          foaf:name ""Giulio Andreotti""@en .
  ?giulio dbo:party ?giulioParty .
  ?giulioParty rdfs:label ?giulioPartyLabel .

  ?romano a dbo:Person, dbo:OfficeHolder, dbo:Politician ;
           foaf:name ""Romano Prodi""@en .
  ?romano dbo:party ?romanoParty .
  ?romanoParty rdfs:label ?romanoPartyLabel .
}
```",6,8,7,3,3,3,3,71,0,9,2,0.0,0.0,0
285,17,test,Give me the spouse of the professional in the award of Stan Lee and parent of Alexander Onassis.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Aristotle Onassis
  dbr:Aristotle_Onassis a dbo:Person ;
                       dbo:child dbr:Alexander_Onassis .

  # Find any awards related to Stan Lee and Aristotle Onassis
  OPTIONAL { 
    ?award dbo:recipient dbr:Stan_Lee .
    ?award dbo:recipient dbr:Aristotle_Onassis .
  }

  # Determine the spouse of Aristotle Onassis
  dbr:Aristotle_Onassis dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,2,20,1,1,1,0.5,0.5,0.5
232,67,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of Jon Pertwee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?politician dbo:child dbr:Jon_Pertwee ;
              a dbo:Politician, dbo:OfficeHolder ;
              dbo:nationality dbr:France .
  
  ?residence dbo:nativePlace ?politician ;
             a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  ?actor dbo:nativePlace ?residence ;
         a dbo:Actor, dbo:Narrator, dbo:Producer .

  ?claimToFame dbo:subject ?actor ;
               a dbo:Film, dbo:MilitaryConflict .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
281,67,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Step 1: Find the leader of the 1962 New South Wales state election
  ?leader a dbo:Politician ;
          dbo:electedDuring dbr:1962_New_South_Wales_state_election .

  # Step 2: Get the birth place country of this politician
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country ?country .

  # Step 3: Find Beauchamp Seymour's military unit in the New Zealand Army
  dbr:Beauchamp_Seymour_1st_Baron_Alcester a dbo:OfficeHolder, dbo:Politician ;
                                            dbo:militaryUnit ?militaryUnit .
  
  # Ensure it is part of the New Zealand Army
  ?militaryUnit dbo:partOf dbr:New_Zealand_Army .

  # Step 4: Find the war associated with this military unit
  ?militaryUnit dbo:war ?war .

  # Step 5: Get the country involved in this war
  ?war dbo:country ?country2 .
  
  FILTER (?country = ?country2)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
487,16,test,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of the administration of Patricia McCoy.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> ?result . ?result <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
# Query for Philip Brian Scott
SELECT ?birthDate ?administration WHERE {
  ?person a dbo:SoccerPlayer ;
          foaf:name ""Philip Brian Scott""@en .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  OPTIONAL { ?person dbo:memberOf ?organization .
             ?organization dbo:country ?administration . }
}

# Query for Patricia McCoy
SELECT ?administration ?country WHERE {
  ?person a dbo:PublicOfficial ;
          foaf:name ""Patricia McCoy""@en .
  ?person dbo:positionHeld ?administration .
  OPTIONAL { ?administration dbo:country ?country . }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
232,50,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfResidence WHERE {
  # Find Sylvie Bermann's place of residence
  ?sylvieBermann a dbo:Person ;
                 foaf:currentHomeLocation ?residence .
  
  # Ensure the residence is a settlement and British
  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Find an actor with a claim to fame in both a film and a military conflict
  ?actor a dbo:Actor ;
         dbo:claimToFame ?film .
  
  ?film a dbo:Film ;
        dbo:genre ?militaryConflictGenre .
  
  FILTER(?militaryConflictGenre IN (dbr:Military_conflict, dbr:War_film)) .

  # Find the native of the residence
  ?actor dbo:nativePlace ?nativeOfResidence .
  
  # Ensure the native place matches the actor's native place
  ?residence dbo:nativePlace ?nativeOfResidence .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
281,71,test,"Give me the war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v8 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Jonathon Band's award
SELECT ?award WHERE {
    dbr:Jonathon_Band dbo:award ?award .
}

# Step 2: Find the war related to the awardee of Jonathon Band's award
SELECT DISTINCT ?war WHERE {
    ?award dbo:recipient ?awardee .
    ?awardee dbo:militaryConflict ?war .
}

# Step 3: Determine the birthplace country of the leader in the 1962 New South Wales state election
SELECT DISTINCT ?country WHERE {
    dbr:1962_New_South_Wales_state_election dbo:leader ?leader .
    ?leader dbo:birthPlace ?birthPlace .
    ?birthPlace a dbo:Country .
    BIND(str(?birthPlace) AS ?country)
}

# Step 4: Find the war related to the profession of a military unit associated with an office holder and politician in the New Zealand Army
SELECT DISTINCT ?war WHERE {
    ?officeHolder a dbo:Politician ;
                 dbo:militaryUnit ?militaryUnit .
    ?militaryUnit dbo:partOf dbr:New_Zealand_Army .
    ?militaryUnit dbo:militaryConflict ?war .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
30,9,test,Give me the professional in the profession of Édouard Alphonse James de Rothschild and native of the birthplace of Silvia Cohen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find Édouard Alphonse James de Rothschild's profession
  dbr:Édouard_Alphonse_James_de_Rothschild dbo:occupation ?profession .

  # Find Silvia Cohen's birthplace
  dbr:Silvia_Cohen dbo:birthPlace ?birthPlace .

  # Find a professional with the same occupation and native to the same birthplace
  ?professional dbo:occupation ?profession ;
                dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,2,2,2,9,1,2,0,0.3333333333333333,1.0,0.5
528,58,test,Give me the war of the commander in Battle of La Rinconada de Ate and war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query for the commander in the Battle of La Rinconada de Ate
SELECT ?commander WHERE {
  ?battle dbo:wikiPageRedirects db:Battle_of_La_Rinconada_de_Ate .
  ?battle dbo:commander ?commander .
}

UNION

# Query for the war associated with Irene Morales and her role or force
SELECT ?war ?role WHERE {
  ?person foaf:name ""Irene Morales""@en .
  ?person dbo:associatedWithWar ?war .
  OPTIONAL { ?person dbo:militaryRank ?rank . BIND(?rank AS ?role) }
  OPTIONAL { ?person dbo:commandedForceSize ?forceSize . BIND(?forceSize AS ?role) }
}

UNION

# Query for the birth name of Narciso Campero and his military rank or force size
SELECT ?birthName ?militaryRank WHERE {
  ?person foaf:name ""Narciso Campero""@en .
  ?person dbo:birthName ?birthName .
  OPTIONAL { ?person dbo:militaryRank ?militaryRank }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
617,45,test,Give me the spouse of Laodice IV and child of Antiochus III the Great and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Laodice IV's spouse
  dbr:Laodice_IV dbo:spouse ?spouse .
  
  # Ensure Laodice IV is a child of Antiochus III the Great
  dbr:Antiochus_III_the_Great dbo:child dbr:Laodice_IV .

  # Identify commander in Battle of Panium and their child
  ?commander dbo:commanderInBattle dbr:Battle_of_Panium .
  ?commander dbo:child ?child .

  # Ensure the spouse is also a parent of the commander's child
  ?spouse dbo:parent ?child .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,59,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
# Query for Indalecio Prieto's predecessor
SELECT ?militaryForce1 WHERE {
  ?prieto dbo:predecessor ?predecessor .
  FILTER(?prieto = dbpedia:Indalecio_Prieto) .

  ?event1 dbo:militaryConflict ?militaryForce1 ;
         a dbo:SocietalEvent .

  ?predecessor dbo:relatedTo ?event1 .
}

UNION

# Query for the person decedent at Francoist Spain
SELECT ?militaryForce2 WHERE {
  ?person dbo:deathPlace dbpedia:Francoist_Spain ;
          dbo:deceasedAtTime ?time .

  ?event2 dbo:militaryConflict ?militaryForce2 ;
          a dbo:SocietalEvent, dbo:Event .

  ?person dbo:relatedTo ?event2 .
}
```",6,11,7,3,2,3,3,71,0,0,514,0,0.0,0
801,70,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://dbpedia.org/property/writer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
# Step 1: Find the producer(s) of the album ""What U See Is What U Get""
SELECT ?producer WHERE {
    ?album rdf:type dbo:MusicalWork ;
           rdfs:label ""What U See Is What U Get""@en .
    ?album dbo:producer ?producer .
}

# Step 2: Identify the professional who is a rapper with alter ego ""The Shadow""
SELECT ?rapper WHERE {
    ?person rdf:type dbo:Rapper ;
            foaf:name ?name ;
            dbo:alterEgo ?shadow .
    ?shadow rdfs:label ""The Shadow""@en .
    FILTER(CONTAINS(LCASE(?name), ""the shadow""))
}

# Step 3: Find the associated musical artist of this rapper
SELECT DISTINCT ?associatedArtist WHERE {
    ?rapper rdf:type dbo:MusicalArtist ;
            foaf:name ?name .
    ?artist rdf:type dbo:MusicalArtist, dbo:Artist ;
            dbo:associatedBandOrMusicalArtist ?rapper .
}
```",8,16,9,3,3,3,3,71,0,0,8,0,0.0,0
981,20,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v4 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Identify Novala Takemoto as the author of Kamikaze Girls
  dbr:Novala_Takemoto dbo:author dbr:Kamikaze_Girls .
  
  # Check if she is a beauty queen (assuming there's a property for this)
  OPTIONAL { dbr:Novala_Takemoto dbo:occupation dbr:Beauty_Queen . }
  
  # Get her birth place
  dbr:Novala_Takemoto dbo:birthPlace ?birthPlace .
  
  # Check if she has any connection to Salak, North Sumatra (assuming a property for this)
  OPTIONAL { 
    ?entity dbo:location dbr:Salak_North_Sumatra ;
            dbo:wikiPageRedirects dbr:Novala_Takemoto .
  }
}
```",6,7,7,3,2,3,2,20,0,0,19,0,0.0,0
666,16,test,"Give me the figure known as the nickname of England national beach soccer team and player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname ?managerName WHERE {
  # Find the nickname of England national beach soccer team
  ?team a dbo:Team ;
        rdfs:label ""England national beach soccer team""@en .
  
  ?team dbo:nickname ?nickname .

  # Find the manager who was also a player in that team and managed Hull City A.F.C. during 2016-17
  ?playerInTeam a dbo:SportsManager ;
                dbo:manager <http://dbpedia.org/resource/Hull_City_A.FC> ;
                dbo:playerInTeam ?team .

  ?playerInTeam rdfs:label ?managerName .
}
```",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
427,22,test,"Give me the reference to Partito Popolare Italiano and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyURL ?partyAffiliation
WHERE {
  # Query for Partito Popolare Italiano URL
  { 
    SELECT DISTINCT ?partyURL WHERE {
      ?party a dbo:PoliticalParty ;
             rdfs:label ""Partito Popolare Italiano""@en .
      BIND(STR(?party) AS ?partyURL)
    }
  }

  # Query for Romano Prodi's party affiliation
  OPTIONAL {
    ?prodi a dbo:Politician ;
           foaf:name ""Romano Antonio Prodi"" ;
           dbo:officeHolder true ;
           dbo:partyAffiliation ?party .
    BIND(STR(?party) AS ?partyAffiliation)
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
528,40,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa and force of Narciso Campero.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warNameBarbosa ?warNameCampero
WHERE {
  # For Orozimbo Barbosa in Chile
  dbr:Orozimbo_Barbosa dbo:participatedIn ?warBarbosa .
  ?warBarbosa dbo:location dbr:Chile .
  ?warBarbosa rdfs:label ?warNameBarbosa .

  # For Narciso Campero
  dbr:Narciso_Campero dbo:participatedIn ?warCampero .
  ?warCampero rdfs:label ?warNameCampero .

  FILTER (lang(?warNameBarbosa) = 'en')
  FILTER (lang(?warNameCampero) = 'en')
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
328,63,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?szalasiCommander ?stalinAgency ?award 
WHERE {
  # Ferenc Szálasi's commander role
  OPTIONAL { 
    ?szalasiCommander dbo:commander dbr:Ferenc_Szálasi .
  }
  
  # Joseph Stalin's government agency leadership
  OPTIONAL { 
    ?stalinAgency dbo:leader dbr:Joseph_Stalin .
  }

  # Award for the Volcano and Ryukyu Islands campaign
  OPTIONAL {
    ?award dbo:awardee ?recipient ;
           dbo:campaign dbr:Volcano_and_Ryukyu_Islands_campaign .
  }
}
```",7,8,8,3,3,3,3,71,0,7,1,0.0,0.0,0
659,29,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of Napoleonic Wars and commander in German campaign of 1813.",SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Joachim Murat""@en .

  OPTIONAL { 
    ?commanderRole dbo:commander ?person ;
                   dbo:organization dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) .
  }
  
  OPTIONAL {
    ?campaignRole dbo:commander ?person ;
                  dbo:event dbr:German_campaign_of_1813 .
  }

  FILTER (BOUND(?commanderRole) && BOUND(?campaignRole))
}
```",4,6,5,2,3,3,3,71,0,0,6,0,0.0,0
659,52,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of Napoleonic Wars and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?person a dbo:Person ;
          dbo:officeHolder dbr:Kingdom_of_Ireland ;
          dbo:militaryConflict dbr:Napoleonic_Wars .
  
  ?person dbo:commander ?unit .
  ?unit rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .

  BIND(?person AS ?commander)
}
```",6,9,7,3,3,3,3,71,0,0,13,0,0.0,0
404,71,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v7 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalSpouse
WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Person ;
           dbo:birthName ""Princess Victoria Louise of Prussia"" ;
           dbo:royalty true .

  # Step 2: Find her spouse
  ?princess dbo:spouse ?spouse .

  # Step 3: Identify the father of her spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Step 4: Find a child of this father who is royalty
  ?child dbo:parent ?fatherOfSpouse ;
         dbo:royalty true .

  # Step 5: Identify the parent of this child (who is royalty)
  ?parent dbo:child ?child ;
          dbo:royalty true .

  # Final Step: Determine the spouse of this final parent
  ?parent dbo:spouse ?finalSpouse .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
16,55,test,Give me the person born as the birth name of Gigi Rice and professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Get Gigi Rice's birth name
  dbr:Gigi_Rice dbo:birthName ?gigiBirthName .
  
  # Get Satomi Ishihara's profession
  dbr:Satomi_Ishihara dbo:profession ?satomiProfession .

  # Get Ted Martin McGinley's spouse
  dbr:Ted_Martin_McGinley dbo:spouse ?tedSpouse .

  # Find a person who matches all criteria
  ?person dbo:birthName ?gigiBirthName .
  ?person dbo:profession ?satomiProfession .
  ?person ?p ?tedSpouse .
  
  FILTER(?p = dbo:spouse)
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
404,51,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?childOfFather
WHERE {
  # Step 1: Find Princess Victoria Louise of Prussia's spouse
  ?princess a dbo:Person ;
           dbp:spouse ?spouse .

  FILTER (str(?princess) = ""Princess Victoria Louise of Prussia"") .

  # Step 2: Identify the father of this spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Step 3: Find a child of this father who is royalty
  ?childOfFather dbo:parent ?fatherOfSpouse ;
                a dbo:Person .
  
  # Step 4: Identify Ernest Augustus, Duke of Brunswick's royal child
  ?ernestAugustus a dbo:Person ;
                  dbp:name ""Ernest Augustus, Duke of Brunswick"" .

  ?royalChild dbo:parent ?ernestAugustus ;
              a dbo:RoyalFamilyMember .

  # Step 5: Ensure the person is both a child of the spouse's father and parent to Ernest Augustus' royal child
  ?childOfFather dbo:spouse ?royalChild .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,20,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForceFranciscoLargoCaballero ?militaryForceRifWar
WHERE {
  # Francisco Largo Caballero's military involvement
  OPTIONAL {
    dbr:Francisco_Largo_Caballero dbo:militaryConflict ?conflict .
    ?conflict dbo:participatingMilitaryUnit ?militaryForceFranciscoLargoCaballero .
  }

  # Rif War's military forces
  OPTIONAL {
    dbr:Rif_War dbo:participatingMilitaryUnit ?militaryForceRifWar .
  }
}
```",3,5,4,2,2,3,3,71,0,0,34,0,0.0,0
281,58,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v5 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceCountry ?beauchampMilitaryUnit ?nzArmyUnit
WHERE {
  # Find Bob Heffron's birthplace country
  dbr:Bob_Heffron dbo:birthPlace ?heffronBirthPlace .
  ?heffronBirthPlace dbo:country ?birthPlaceCountry .

  # Find Beauchamp Seymour, 1st Baron Alcester's military unit
  dbr:Beauchamp_Seymour,_1st_Baron_Alcester dbo:militaryUnit ?beauchampMilitaryUnit .

  # Identify a New Zealand Army unit related to an office holder and politician
  ?nzArmyUnit rdf:type dbo:MilitaryUnit ;
              dbo:country dbr:New_Zealand ;
              dbo:member ?officeHolderPolitician .
  ?officeHolderPolitician rdf:type dbo:OfficeHolder, dbo:Politician .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
838,20,test,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa and band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?bandMember
WHERE {
  # Step 1: Identify YU Grupa
  ?yuGrupa a dbo:Band ;
           rdfs:label ""YU Grupa""@en .

  # Step 2: Find band members of YU Grupa who are artists or musical artists
  ?yuGrupaMember dbo:memberOf ?yuGrupa ;
                 rdf:type ?type1 .
  FILTER (?type1 IN (dbo:Artist, dbo:MusicalArtist)) .

  # Step 3: Identify the band associated with Žika Jelić
  ?zikaJelic a dbo:Person ;
             rdfs:label ""Žika Jelić""@en .
  ?zikaBand a dbo:Band ;
            dbo:bandMember ?zikaJelic .

  # Step 4: Find members of Žika Jelić’s band who are artists or musical artists
  ?zikaBandMember dbo:memberOf ?zikaBand ;
                  rdf:type ?type2 .
  FILTER (?type2 IN (dbo:Artist, dbo:MusicalArtist)) .

  # Link the two sets of band members
  ?yuGrupaMember rdfs:label ?bandLabel1 .
  ?zikaBandMember rdfs:label ?bandLabel2 .
  
  FILTER(?bandLabel1 = ?bandLabel2)
}
```",6,13,7,3,2,3,2,20,0,0,5,0,0.0,0
92,60,test,"Give me the band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
    ?person dbo:birthName ?birthName .
    FILTER(CONTAINS(LCASE(?birthName), ""joseph michael"")) .
    
    ?person dbo:bandMember ?band .
    
    OPTIONAL {
        ?film dbo:title ""Nevermore"" ;
              dbo:releaseDate ?releaseDate .
        FILTER(YEAR(?releaseDate) = 2006)
        
        ?band dbo:reference ?film .
    }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
827,20,test,"Give me the father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father
WHERE {
    # Step 1: Identify Princess Pauline of Saxe-Weimar-Eisenach's spouse who is royalty
    dbr:Princess_Pauline_of_Saxe-Weimar-Eisenach dbo:spouse ?spouse .
    
    # Step 2: Find the child of this spouse who is royalty
    ?spouse dbo:child ?royalChild .
    FILTER EXISTS { ?royalChild a dbo:RoyalFamily . }
    
    # Step 3: Determine Charles Alexander's parent and their royal children
    dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:parent ?charlesParent .
    ?charlesParent dbo:child ?royalChild2 .
    FILTER EXISTS { ?royalChild2 a dbo:RoyalFamily . }
    
    # Step 4: Identify the father of the royal child from step 2
    ?royalChild dbo:father ?father .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
54,46,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonLink WHERE {
  # Find Thinkhaya of Pagan's child (Person A)
  ?personA dbo:childOf dbr:Thinkhaya_of_Pagan .
  
  # Find Thinkhaya's grandchild (Person B)
  ?personB dbo:childOf ?personA .

  # Find Narapati I of Ava's child (Person C)
  ?personC dbo:childOf dbr:Narapati_I_of_Ava .

  # Check if there is a common link between Thinkhaya's grandchild and Narapati I
  FILTER (?personB = ?personC)
  
  BIND(?personB AS ?commonLink)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,71,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v7 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist
WHERE {
  # Step 1: Fredrik Thordendal's band
  dbr:Fredrik_Thordendal dbo:bandMemberOf dbr:Meshuggah .
  
  # Step 2: Meshuggah as an organisation and band
  dbr:Meshuggah a dbo:Band ;
                a dbo:Organisation .

  # Step 3: Find associated musical artist with Watchtower reference
  ?watchtowerArtist dbo:associatedMusicalArtist dbr:Watchtower .
  
  # Step 4: Persona of Don Dokken
  dbr:Don_Dokken dbo:bandMemberOf dbr:Dokken ;
                a dbo:Person .

  # Step 5: Associated musical artist of Don Dokken
  ?dokkenAssociatedArtist dbo:associatedMusicalArtist dbr:Don_Dokken .
  
  # Step 6: Find associated musical artist of the result from step 3
  ?finalArtist dbo:associatedMusicalArtist ?watchtowerArtist .

  # Linking all together
  ?associatedArtist dbo:associatedMusicalArtist ?dokkenAssociatedArtist ;
                    dbo:associatedMusicalArtist ?finalArtist .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
179,20,test,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of the child of the parent of Vajiralongkorn.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  # Step 1: Identify Vajiralongkorn
  ?vajiralongkorn a dbo:Person ;
                  rdfs:label ""Vajiralongkorn""@en .

  # Step 2: Find Parent of Vajiralongkorn
  ?parent dbo:child ?vajiralongkorn .

  # Step 3: Find Child of That Parent
  ?grandchild dbo:child ?parent .

  # Step 4: Identify Nakkhatra Mangala and her children
  ?nakkhatraMangala a dbo:Person ;
                    rdfs:label ""Nakkhatra Mangala""@en .
  
  ?royalChild dbo:child ?nakkhatraMangala ;
              a dbo:Monarch .

  # Step 5: Match the royal child with the grandchild of Vajiralongkorn's parent
  FILTER (?grandchild = ?royalChild)

  # Step 6: Get the birth name of that royal child
  ?person rdfs:label ?birthName ;
          dbo:birthName ?birthName .
  
  FILTER(?person = ?royalChild)
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
547,53,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of the child of William Haliburton and resting place of Simon Cadell.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query 1: Resting place of awardees of Knight Grand Cross of the Order of St Michael and St George
SELECT ?person ?restingPlace WHERE {
  ?person dbo:order dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
  OPTIONAL { ?person dbo:finalRestingPlace ?restingPlace . }
}

# Query 2: Resting place of the child of the child of William Haliburton
SELECT DISTINCT ?grandchild ?grandchildRestingPlace WHERE {
  dbr:William_Haliburton dbo:child ?child .
  ?child dbo:child ?grandchild .
  OPTIONAL { ?grandchild dbo:finalRestingPlace ?grandchildRestingPlace . }
}

# Query 3: Resting place of Simon Cadell
SELECT ?restingPlace WHERE {
  dbr:Simon_Cadell dbo:finalRestingPlace ?restingPlace .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
617,48,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchildParent
WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus3 a dbo:Person ;
              dbo:spouse ?wifeAntiochus3 ;
              dbo:child ?antiochus4 .

  FILTER(?antiochus3 = dbr:Antiochus_III_the_Great) .
  
  # Step 2: Find his child
  ?antiochus4 a dbo:Person ;
             dbo:parent ?antiochus3 ;
             dbo:child ?childOfAntiochus4 .

  # Step 3: Determine the parent of this child
  ?parentChild dbr:Antiochus_IV_Epiphanes ; # Assuming Antiochus IV Epiphanes is a known son
               dbo:parent ?childOfAntiochus4 .

  # Step 4: Identify Antiochus II Theos's successor who is royalty
  ?antiochus2 a dbo:Person ;
              dbo:spouse ?wifeAntiochus2 ;
              dbo:child ?successor .
  
  FILTER(?antiochus2 = dbr:Antiochus_II_theos) .

  # Step 5: Find the child of this successor
  ?successor a dbo:Person ;
             dbo:royalty true ;
             dbo:parent ?antiochus2 ;
             dbo:child ?grandchild .

  # Step 6: Determine the parent of this grandchild
  ?grandchildParent a dbo:Person ;
                    dbo:royalty true ;
                    dbo:parent ?grandchild .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
659,23,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?monarch WHERE {
  ?kingdom a dbo:Kingdom ;
           dbo:name ""Kingdom of Ireland""@en .
  ?kingdom dbo:monarch ?monarch .
}
```",3,4,4,3,1,3,3,71,0,0,269,0,0.0,0
161,61,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessorMilitaryForce ?prietoMilitaryForce
WHERE {
  # Find the predecessor of Indalecio Prieto
  dbr:Indalecio_Prieto dbo:predecessor ?predecessor .

  # Find the military force associated with a societal event and a military conflict for the predecessor
  ?societalEvent dbo:relatedToMilitaryConflict ?militaryConflict .
  ?societalEvent dbo:involvesMilitaryForce ?predecessorMilitaryForce .
  ?militaryConflict dbo:involvesMilitaryForce ?predecessorMilitaryForce .

  # Find the military force associated with an event commanded by Indalecio Prieto
  ?event dbo:commanderInMilitaryForce dbr:Indalecio_Prieto .
  ?event dbo:involvesMilitaryForce ?prietoMilitaryForce .
}
```",6,9,7,3,2,3,3,71,0,0,32,0,0.0,0
161,60,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryConflict
WHERE {
  # Step 1: Identify ""El Director""
  dbr:Francisco_Franco_el_Joven dbo:alias ""El Director"" .
  
  # Step 2: Determine his role as a commander
  dbr:Francisco_Franco_el_Joven dbo:commanderOf ?militaryEvent .

  # Step 3: Find the person decedent at Francoist Spain
  ?decedent dbo:deathPlace dbr:Spain ;
           dbo:causeOfDeath ?cause .
  
  FILTER(?cause = ""Francoist Spain"") .

  # Step 4: Identify connection between El Director and the decedent
  ?militaryEvent dbo:commander dbr:Francisco_Franco_el_Joven ;
                dbo:participant ?decedent .

  # Find the military conflict involving the decedent
  ?decedent dbo:militaryConflict ?militaryConflict .
}
```",6,10,7,3,2,3,3,71,0,0,34,0,0.0,0
55,23,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . }","```sparql
# Query for the band member of the producer of ""Used to Love Her""
SELECT DISTINCT ?band1 WHERE {
  ?song dbo:title ""Used to Love Her"" .
  ?song dbo:producer ?producer .
  ?producer a dbo:MusicalArtist ; 
            dbo:member ?band1 .
}

UNION

# Query for the band associated with ""Newsted""
SELECT DISTINCT ?band2 WHERE {
  ?reference rdfs:label ""Newsted""@en .
  ?reference dbo:bandMember ?newsted .
  ?newsted a dbo:MusicalArtist ; 
           dbo:member ?band2 .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
659,61,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  # Rutger Jan Schimmelpenninck's military command roles
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryCommanderOf ?conflict .

  # Identify the military conflict and related societal event
  ?conflict a dbo:MilitaryConflict ;
           dbo:societalEvent ?event .

  # Find the military force associated with ""Polish Horse""
  dbr:Polish_Horse a dbo:MilitaryUnit, dbo:Organization ;
                   dbo:militaryForce ?militaryForce .
}
```",6,13,7,3,2,3,3,71,0,0,31,0,0.0,0
328,35,test,"Give me the leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader
WHERE {
  # Find Joseph Stalin's office
  dbr:Joseph_Stalin dbo:positionHeld ?office .
  
  # Find awardees of the Victoria Cross (Bruce Fraser's award)
  ?vcAwardee dbo:awardee dbr:Victoria_Cross .

  # Find a common leader who fits both criteria
  ?leader dbo:positionHeld ?office ;
          dbo:awardee dbr:Victoria_Cross .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
328,51,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in the force of Ferenc Szálasi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leaderOfJonsonOffice ?commanderOfSzálasiForce WHERE {
  # Gustav Jonson's leader
  ?jonson a dbo:OfficeHolder ;
          dbo:office ?jonsonOffice .
  ?jonsonOffice dbo:leader ?leaderOfJonsonOffice .

  # Ferenc Szálasi's commander in force
  ?szalasi a dbo:MilitaryCommander ;
           dbo:militaryForce ?szalasiForce .
  ?szalasiForce dbo:commander ?commanderOfSzálasiForce .

  FILTER(?leaderOfJonsonOffice = ?commanderOfSzálasiForce)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
92,54,test,"Give me the band of Joseph Michael and band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . }","```sparql
# Step 1: Identify Joseph Michael's band
SELECT ?band WHERE {
  ?person dbo:name ""Joseph Michael""@en .
  ?person dbo:musicalBand ?band .
}

# Step 2: Find a reference band member who is an artist
SELECT DISTINCT ?member WHERE {
  ?band dbo:bandMember ?member .
  ?member rdf:type dbo:Artist .
}

# Step 3: Check for connection to Nevermore
SELECT DISTINCT ?nevermoreConnection WHERE {
  ?member dbo:musicalBand ?nevermoreConnection .
  ?nevermoreConnection rdfs:label ""Nevermore""@en .
}

# Step 4: Find associated musical artist born as actor in ""Return to Nuke 'Em High Volume 1""
SELECT DISTINCT ?actorArtist WHERE {
  ?actorArtist dbo:birthPlace ?place .
  ?actorArtist dbo:spouse ?person .
  ?person dbo:name ""Joseph Michael""@en .
  ?actorArtist dbo:film ?movie .
  ?movie rdfs:label ""Return to Nuke 'Em High Volume 1""@en .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,19,test,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?war WHERE {
  ?awardee a dbo:Person ;
           dbo:honoraryTitle ""Knight Grand Cross of the Order of the Bath"" .
  
  OPTIONAL { 
    ?awardee dbo:birthPlace dbr:Colony_of_New_Zealand .
  }
  
  ?awardee dbo:militaryConflict ?war .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,68,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/nickname> ?v5 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Find Sherry Hormann's Spouse
SELECT ?spouse WHERE {
  ?person dbo:spouse dbpedia:Sherry_Hormann .
  ?person rdfs:label ?spouseLabel .
  FILTER(CONTAINS(LCASE(?spouseLabel), ""husband""))
}

# Step 2: Find the Claim to Fame of Sherry Hormann's Spouse
SELECT ?work WHERE {
  ?spouse dbo:claimToFame ?work .
  ?work rdf:type dbo:Film .
}

# Step 3: Identify Roz Ryan's Movie and Actor Native to Jackson, Tennessee
SELECT DISTINCT ?actor WHERE {
  ?movie dbo:starring dbpedia:Roz_Ryan ;
         dbo:starring ?actor .
  ?actor dbo:nativePlace ?place .
  ?place rdfs:label ""Jackson, Tennessee""@en .
  
  # Step 4: Find the Nickname of Jackson, Tennessee
  OPTIONAL {
    ?place dbo:commonName ?nickname .
  }
}

# Combine results to find the actor who fits all criteria
SELECT DISTINCT ?actor WHERE {
  ?movie dbo:starring dbpedia:Roz_Ryan ;
         dbo:starring ?actor .
  ?actor dbo:nativePlace ?place .
  ?place rdfs:label ""Jackson, Tennessee""@en .

  # Ensure this actor is also the claim to fame of Sherry Hormann's spouse
  ?spouse dbo:claimToFame ?work .
  ?work rdf:type dbo:Film .
  FILTER(?actor = ?spouse)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
404,70,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Prince George William of Hanover's spouse
  dbr:Prince_George_William_of_Hanover dbo:spouse dbr:Princess_Marie_of_Saxe-Altenburg .
  
  # Princess Marie of Saxe-Altenburg's child who is royalty
  dbr:Princess_Marie_of_Saxe-Altenburg dbo:child ?princess_victoria_louise .

  # Princess Victoria Louise of Prussia's father
  ?princess_victoria_louise dbo:father dbr:Friedrich_III,_German_Emperor .
  
  # Friedrich III's spouse
  dbr:Friedrich_III,_German_Emperor dbo:spouse dbr:Victoria,_Princess_Royal .

  # Victoria, Princess Royal's child who is royalty
  dbr:Victoria,_Princess_Royal dbo:child ?edward_vii .
  
  # Edward VII's parent
  ?edward_vii dbo:parent ?queen_victoria .

  # Parent of Queen Victoria (Edward VII's grandparent)
  ?queen_victoria dbo:parent ?parent .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
659,45,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in Battle of Leipzig and commander in German campaign of 1813.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck as a commander in the Battle of Leipzig
  dbr:Battle_of_Leipzig dbo:commander dbr:Rutger_Jan_Schimmelpenninck .
  
  # Rutger Jan Schimmelpenninck as a commander in the German campaign of 1813
  dbr:German_campaign_of_1813 dbo:commander dbr:Rutger_Jan_Schimmelpenninck .

  # The military force associated with these events
  ?militaryForce dbo:militaryConflict dbr:Battle_of_Leipzig .
  ?militaryForce dbo:militaryConflict dbr:German_campaign_of_1813 .

  # Ensure the event is both a societal event and a military conflict
  dbr:Battle_of_Leipzig rdf:type dbo:SocietalEvent ;
                        rdf:type dbo:MilitaryConflict .
  dbr:German_campaign_of_1813 rdf:type dbo:SocietalEvent ;
                              rdf:type dbo:MilitaryConflict .
}
```",5,8,6,3,3,3,3,71,0,0,6,0,0.0,0
161,47,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?francoForce ?azañaForce
WHERE {
  # Francisco Franco's military force in the Spanish Civil War
  ?francoEvent a dbo:MilitaryConflict ;
               dbo:participatedIn [dbo:commander dbr:Francisco_Franco] ;
               dbo:socialEvent true .
  
  ?francoEvent dbo:militaryForce ?francoForce .

  # Manuel Azaña's military force in the Spanish Civil War
  ?azañaEvent a dbo:MilitaryConflict ;
              dbo:participatedIn [dbo:commander dbr:Manuel_Az%C3%A1n] ;
              dbo:socialEvent true .
  
  ?azañaEvent dbo:militaryForce ?azañaForce .
}
```",5,10,6,3,2,3,3,71,0,0,514,0,0.0,0
232,45,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of Jon Pertwee and actor of Dog Soldiers (film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfResidence
WHERE {
  ?person dbo:birthPlace dbr:France .
  ?person dbo:officeHolder ?office .
  ?person dbo:child dbr:Jon_Pertwee .
  ?film dbo:title ""Dog Soldiers"" ;
        dbo:actor ?person .
  
  ?person dbo:residence ?residence .
  ?residence a dbo:Settlement .
  ?residence dbo:country dbr:United_Kingdom .

  ?residence dbo:nativeOf ?nativeOfResidence .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
617,55,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Antiochus IV Epiphanes (son of Antiochus III the Great)
  ?antiochusIV a dbo:Person ;
               dbo:father dbr:Antiochus_III_the_Great ;
               dbo:mother dbr:Laodice_III .

  # Spouse of Antiochus IV Epiphanes
  ?spouse dbo:spouse ?antiochusIV .
  
  # Child of Seleucus II Callinicus
  ?childOfSeleucusII a dbo:Person ;
                    dbo:father dbr:Seleucus_II_Callinicus .

  # Parent of the child of Antiochus IV Epiphanes (Antiochus V Eupator)
  ?antiochusV a dbo:Person ;
             dbo:parent ?parent ;
             dbo:father ?antiochusIV .
  
  # Ensure parent is royalty
  ?parent a dbo:Monarch .

  FILTER (?spouse = ?childOfSeleucusII) 
}
```",6,7,7,2,3,3,3,71,0,0,2,0,0.0,0
391,43,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorOfClaimToFame WHERE {
  # Step 1: Identify Sherry Hormann's spouse
  ?spouse a dbo:Person ;
          dbo:spouse dbr:Sherry_Hormann .

  # Step 2: Find the native of Compton, California among the spouses
  ?nativePlace a dbo:PopulatedPlace ;
               rdfs:label ""Compton, California""@en .
  
  ?person dbo:birthPlace ?nativePlace .
  FILTER(?spouse = ?person)

  # Step 3: Determine the actor of ""All About the Andersons""
  ?film a dbo:Film ;
        dbo:title ""All About the Andersons""@en .

  ?actor a dbo:Person ;
         dbo:actor ?film .
  FILTER(?person = ?actor)

  # Step 4: Identify the claim to fame work
  ?claimToFameWork a dbo:Film ;
                   dbo:actor ?actor .

  # Step 5: Find the actor of that work
  ?actorOfClaimToFame a dbo:Person ;
                      dbo:actor ?claimToFameWork .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
184,71,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v8 <http://dbpedia.org/property/father> ?v7 . }","```sparql
# Step 1: Find Archduchess Margaret of Austria (born 1925) and her parent
SELECT ?margaret ?parentMargaret WHERE {
    ?margaret a dbo:Person ;
             foaf:name ""Archduchess Margaret of Austria""@en ;
             dbo:birthDate ?birth .
    FILTER(YEAR(?birth) = 1925)
    OPTIONAL { ?margaret dbo:childOf ?parentMargaret }
}

# Step 2: Find the child of Archduchess Margaret's parent
SELECT ?grandChild WHERE {
    ?parentMargaret dbo:child ?grandChild .
}

# Step 3: Identify a landmark at elevation 96.0 meters and its native
SELECT ?landmark ?native WHERE {
    ?landmark a dbo:PopulatedPlace ;
              geo:elevation ""96.0""^^xsd:float .
    OPTIONAL { ?landmark dbo:nativeOf ?native }
}

# Step 4: Find Archduke Ladislaus Philipp of Austria's royalty parent and their child
SELECT ?ladislaus ?royaltyParent WHERE {
    ?ladislaus a dbo:Person ;
               foaf:name ""Archduke Ladislaus Philipp of Austria""@en .
    OPTIONAL { ?ladislaus dbo:childOf ?royaltyParent }
}
SELECT ?grandChildLadislaus WHERE {
    ?royaltyParent dbo:child ?grandChildLadislaus .
}

# Step 5: Find the parent of the child from step 2 and the native's parent
SELECT ?parentGrandChildMargaret WHERE {
    ?grandChild dbo:childOf ?parentGrandChildMargaret .
}
SELECT ?parentNative WHERE {
    ?native dbo:childOf ?parentNative .
}

# Final Step: Identify the common entity between these two parents
SELECT DISTINCT ?commonEntity WHERE {
    VALUES (?entity1) { ?parentGrandChildMargaret }
    VALUES (?entity2) { ?parentNative }
    ?entity1 rdfs:label ?commonEntity .
    FILTER(?entity1 = ?entity2)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
617,18,test,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary and child of the child, that is a royalty, of the parent of Mlada (abbess).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonAncestor WHERE {
  # Richeza of Poland, Queen of Hungary's lineage
  ?richeza rdfs:label ""Richeza of Poland, Queen of Hungary""@en .
  ?richeza dbo:father ?father .
  ?father a dbo:Monarch .
  ?father dbo:parent ?grandfather .
  ?grandfather a dbo:Monarch .

  # Mlada (Abbess)'s lineage
  ?mlada rdfs:label ""Mlada (abbess)""@en .
  ?mlada dbo:parent ?parent .
  ?parent a dbo:Monarch .
  ?parent dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Find the common ancestor
  FILTER (?grandfather = ?royalChild)
  BIND(?grandfather AS ?commonAncestor)
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
281,47,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceCountry ?war 
WHERE {
  # Find the leader of the 1962 New South Wales state election
  ?leader a dbo:Politician ;
          dbo:associatedWith dbr:1962_New_South_Wales_state_election .

  # Get the birth place of the leader and ensure it is a country
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?placeLabel .
  FILTER (CONTAINS(LCASE(?placeLabel), ""country""))

  # Find the awardee of Knight Grand Cross of the Order of the Bath
  ?awardee dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .

  # Get the war associated with the awardee
  ?awardee dbo:associatedWith ?war .
  
  # Ensure the birth place country matches the entity related to the war
  BIND(?birthPlace AS ?birthPlaceCountry)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
314,27,test,"Give me the person deceased at Madrid and awardee of the award of Sergei Makovetsky and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Madrid .
  ?person dbo:awardReceived dbr:Sergei_Makovetsky .
  ?person dbo:militaryRank ?rank .
  FILTER (str(?rank) = ""Commander"") .
  ?event dbo:societalEvent ?person ;
         dbo:event ?person .
  ?event dbo:associatedWith dbr:Lisa_Gavrić .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
996,16,test,Give me the entity in the award of Ekrem Akurgal and force of the awardee of 1778.0.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?awardee
WHERE {
  # Find awards associated with Ekrem Akurgal
  dbr:Ekrem_Akurgal dbo:award ?award .
  
  # For each award, find the awardees in 1778
  ?award dbo:recipient ?awardee ;
         dbo:dateReceived ?date .
  FILTER (YEAR(?date) = 1778)
}
```",4,4,5,2,2,3,2,20,0,0,4,0,0.0,0
701,66,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Ramesses II and parent of the child of Nefertari.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Find the commander of Battle of Perire
  ?battle dbo:commander ?commander .
  FILTER(STR(?battle) = ""Battle_of_Perire"") .

  # Determine the father of the commander
  ?father dbo:child ?commander .

  # Find the spouse of the father and check if they are royalty
  ?father dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Monarch .  # Assuming royalty is represented by Monarch

  # Check if this person is a parent of a child of Ramesses II
  ?ramessesChild dbo:parent ?spouse ;
                 dbo:parent <http://dbpedia.org/resource/Ramesses_II> .

  # Check if this person is also a parent of a child of Nefertari
  ?nefertariChild dbo:parent ?spouse ;
                  dbo:parent <http://dbpedia.org/resource/Nefertari> .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
378,61,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v1 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?claimToFame
WHERE {
  # Find Thomas Trigge and his military conflicts
  ?trigge a dbo:Person ;
          foaf:name ""Thomas Trigge""@en .
  
  OPTIONAL { 
    ?trigge dbo:militaryConflict ?war .
    
    # Check if the war is related to Peninsular War
    ?peninsularWar dbr:Peninsular_War ;
                   dbo:participatedIn ?war .

    # Get claim to fame for each military conflict
    ?trigge dbo:claimToFame ?claimToFame .
  }
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
767,52,test,"Give me the alma mater of the administration of George K. Nash and reference to  and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/state> ?v2 . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
# Query to get George K. Nash's alma mater
SELECT ?almaMater WHERE {
    ?nash a dbo:Person ;
          foaf:name ""George K. Nash"" .
    ?nash dbo:almaMater ?almaMater .
}

# Query to find the writer of ""Where It's At""
SELECT ?writer WHERE {
    ?song dbo:title ""Where It's At"" ;
          dbo:lyricsBy ?writer .
    ?album dbo:song ?song ;
           foaf:name ""Dustin Lynch"" .
}

# Assuming we have identified the writer, query to find an entity in their administration that is a settlement
SELECT ?settlement WHERE {
    ?administration dbo:member ?writer ;
                    dbo:officeHolder ?holder .
    ?holder dbo:location ?settlement .
    ?settlement a dbo:Settlement .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
528,70,test,Give me the war of the commander in the work of --01-09 and force of the person born as the birth name of Narciso Campero and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?forceNarcisoCampero ?warPisagua
WHERE {
  # Assuming --01-09 refers to a known event, we need more context here.
  # Placeholder for the commander in the war associated with --01-09
  OPTIONAL {
    ?event dbo:relatedEvent dbr:Battle_of_Pisagua .
    ?event dbo:commander ?commander .
  }

  # Narciso Campero's birth name and military force
  dbr:Narciso_Campero dbo:birthName ?birthName ;
                      dbo:militaryForce ?forceNarcisoCampero .

  # Battle of Pisagua and its war
  dbr:Battle_of_Pisagua dbo:partOfWar ?warPisagua .
}
```",8,8,9,3,3,3,3,71,0,0,2,0,0.0,0
404,48,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia a dbo:Person ;
    dbo:birthName ?birthName ;
    dbo:spouse ?spouse .

  # Ensure she is royalty (likely given her title)
  dbr:Princess_Victoria_Louise_of_Prussia dbo:royaltyStatus ?status .
  
  # Link to Ernest Augustus, Duke of Brunswick
  ?parent a dbo:Person ;
    dbo:child dbr:Ernest_Augustus,_Duke_of_Brunswick .

  # Confirm her parentage
  ?parent dbo:child dbr:Princess_Victoria_Louise_of_Prussia .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
617,38,test,Give me the spouse of the child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Find Antiochus III the Great and his spouse
  dbr:Antiochus_III_the_Great dbo:spouse ?spouse .
  
  # Find their child
  OPTIONAL { ?child dbo:parent dbr:Antiochus_III_the_Great . }
  OPTIONAL { ?child dbo:parent ?spouse . }

  # Ensure the spouse of this child is also a parent of Antiochus (son)
  ?antiochus dbo:parent ?spouse .
  ?antiochus rdfs:label ""Antiochus""@en .

  FILTER(?child != ?antiochus) # To ensure we are not selecting the same person
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
528,63,test,"Give me the force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile and war of the commander in Battle of La Rinconada de Ate.","SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v6 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?force ?war ?battleCommander ?battleWar WHERE {
  # Find Narciso Campero Leyes and his military force
  ?person a dbo:Person ;
          foaf:name ""Narciso Campero Leyes"" ;
          dbo:militaryForce ?military .
  
  # Determine the societal event (war) in Chile associated with this military force
  ?military dbo:participatedIn ?event .
  ?event dbo:location dbr:Chile ;
         a dbo:MilitaryConflict .

  BIND(?event AS ?war)
  BIND(?military AS ?force)

  # Find the commander of the Battle of La Rinconada de Ate
  ?battle a dbo:Battle ;
          foaf:name ""Battle of La Rinconada de Ate"" .
  
  ?battle dbo:commander ?battleCommander .

  # Determine any war associated with this battle
  ?battle dbo:participatedIn ?battleWar .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
712,18,test,"Give me the resting place of the awardee of Hero of the Soviet Union and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v1 <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  # Identify a Hero of the Soviet Union involved in the Vyoshenskaya Uprising
  ?person dbo:award ""Hero of the Soviet Union"" .
  ?person dbo:militaryService ?militaryForce .
  
  # Ensure the military force is related to the Red Army
  ?militaryForce rdfs:label ?forceLabel .
  FILTER(CONTAINS(LCASE(?forceLabel), ""red army"") || CONTAINS(LCASE(?forceLabel), ""soviet union""))

  # Find the resting place of this person
  OPTIONAL { ?person dbo:finalBurialPlace ?restingPlace . }
  
  # Filter for a specific individual known to be involved in the Vyoshenskaya Uprising
  FILTER(CONTAINS(LCASE(STR(?person)), ""nikolai podvoisky""))
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
281,42,test,"Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?war ?militaryUnit
WHERE {
  # Find individuals awarded Knight Grand Cross of the Order of the Bath
  ?awardee a dbo:Person ;
           dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .

  # Filter wars involving the Colony of New Zealand
  ?war dbo:location dbr:Colony_of_New_Zealand .
  
  # Check if the awardee participated in such a war
  ?awardee dbo:participatedInWar ?war .

  # Find Heather Roy's profession and associated military unit
  dbr:Heather_Roy dbo:profession dbr:Politician ;
                  dbo:militaryUnit ?militaryUnit .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
360,27,test,"Give me the writer of The Roaring Silence and native of the death place, that is a settlement, of Winnie Madikizela-Mandela and reference to the author of Blinded by the Light.",SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer ?nativePlace ?blindedByTheLightAuthor
WHERE {
  # Find the writer of ""The Roaring Silence""
  ?book dbo:title ""The Roaring Silence""@en .
  ?book dbo:author ?writer .

  # Get the native place (country) of the writer
  ?writer dbo:nationality ?nativePlace .

  # Find Winnie Madikizela-Mandela's death place and ensure it is a settlement
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .

  # Get the author of ""Blinded by the Light""
  ?blindedBook dbo:title ""Blinded by the Light""@en .
  ?blindedBook dbo:author ?blindedByTheLightAuthor .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
701,69,test,"Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of Ramesses II and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChildAmun ?spouseFatherCommander
WHERE {
  # Amun-her-khepeshef's spouse and their child
  ?amunHerKhepeshef dbo:spouse ?spouse .
  FILTER (str(?amunHerKhepeshef) = ""Ramesses_II#Amun-her-khepeshef"")
  
  ?spouse dbo:child ?child .
  ?child dbo:parent ?parentOfChildAmun .

  # Ramesses II's child and their parent
  ?ramessesII dbo:child ?childRamesses .
  FILTER (str(?ramessesII) = ""Ramesses_II"")
  ?childRamesses dbo:parent ?ramessesII .

  # Commander in the Battle of Perire
  ?commander dbo:participatedInBattle ?battlePerire .
  ?battlePerire rdfs:label ""Battle_of_Perire""@en .
  
  # Father of the commander
  ?fatherCommander dbo:child ?commander .
  
  # Spouse of the father of the commander
  ?fatherCommander dbo:spouse ?spouseFatherCommander .

  # Ensure all are royalty
  FILTER (dbo:Person(?amunHerKhepeshef) && dbo:Person(?ramessesII) &&
          dbo:Person(?parentOfChildAmun) && dbo:Person(?spouseFatherCommander))
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
528,50,test,Give me the war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Identify works related to the date 2009-01-09
SELECT ?work WHERE {
    ?work dbo:date ""2009-01-09""^^xsd:date .
}

# Part 2: Find wars or conflicts in those works and their commanders
SELECT DISTINCT ?war ?commander ?force WHERE {
    ?work dbo:subject ?war .
    ?war dbo:commander ?commander ;
         dbo:militaryForce ?force .
}

# Part 3: Identify Narciso Campero Leyes and his military force
SELECT ?birthDate ?militaryForce WHERE {
    dbr:Narciso_Campero_Leyes dbo:birthDate ?birthDate .
    OPTIONAL { dbr:Narciso_Campero_Leyes dbo:militaryForce ?militaryForce . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
16,51,test,Give me the professional in the profession of Satomi Ishihara and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional ?personWithSameBirthName
WHERE {
  # Part 1: Get Satomi Ishihara's profession
  ?satomiIshihara a dbo:Person ;
                  foaf:name ""Satomi Ishihara""@en .
  ?satomiIshihara dbo:profession ?professional .

  # Part 2: Find an alumnus of Ohio State University and their birth name
  ?alumnus a dbo:Person ;
           dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> .
  ?alumnus foaf:name ?birthName .

  # Part 3: Find another person with the same birth name as the alumnus
  ?personWithSameBirthName a dbo:Person ;
                          foaf:name ?birthName .
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
378,63,test,Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in Peninsular War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
# Step 1: Get Carl Pontus Gahn's birth name
SELECT ?birthName WHERE {
    ?gahn a dbo:Chemist ;
          foaf:name ""Carl Pontus Gahn"" .
    ?gahn dbo:birthName ?birthName .
}

# Step 2: Identify the commander in both the Great Siege of Gibraltar and Peninsular War
SELECT DISTINCT ?commander WHERE {
    ?siege a dbo:MilitaryEngagement ;
           dbo:commander ?commander ;
           rdfs:label ""Great Siege of Gibraltar""@en .
    ?war a dbo:MilitaryEngagement ;
         dbo:commander ?commander ;
         rdfs:label ""Peninsular War""@en .
}

# Step 3: Determine the claim to fame of this commander
SELECT DISTINCT ?claimToFame WHERE {
    ?commander dbo:claimToFame ?claimToFame .
}

# Step 4: Find the war associated with Carl Pontus Gahn's birth name
SELECT ?war WHERE {
    ?person a dbo:Person ;
            foaf:name ?birthName ;
            dbo:claimToFame ?war .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
767,27,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?person rdfs:label ""Matthew Burland""@en .
  ?person a dbo:Writer ; 
          dbo:creator ?alterEgo .
}
```",3,4,4,3,1,3,3,71,0,0,98447,0,0.0,0
281,30,test,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and war of the profession, that is a military unit, of Heather Roy and entity in Colony of New Zealand.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1 ?war2 ?militaryUnit ?nzEntity WHERE {
  # Beauchamp Seymour, 1st Baron Alcester's wars
  OPTIONAL { 
    dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:participatedIn ?war1 .
  }

  # Heather Roy's military unit and related war
  OPTIONAL {
    dbr:Heather_Roy dbo:militaryUnit ?militaryUnit .
    ?militaryUnit dbo:participatedIn ?war2 .
  }
  
  # Entity in Colony of New Zealand
  OPTIONAL {
    ?nzEntity a dbo:Event ;
              dbo:place dbr:Colony_of_New_Zealand .
  }
}
```",4,5,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
488,56,test,"Give me the birth place of the commander in Boshin War and death place of Tokugawa Ieyasu and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceSaigo ?deathPlaceIeyasu ?administrationKomei
WHERE {
  # Birth place of Saigō Takamori, commander in Boshin War
  dbr:Saigō_Takamori dbo:birthPlace ?birthPlaceSaigo .

  # Death place of Tokugawa Ieyasu
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlaceIeyasu .

  # Administration of Emperor Komei, father of Princess Kazunomiya (spouse of Tokugawa Masako)
  dbr:Princess_Kazunomiya dbo:father dbr:Emperor_Kōmei .
  OPTIONAL { dbr:Emperor_Kōmei dbo:office ?administrationKomei }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
492,34,test,Give me the person decedent at the work of the author of French Algeria and person decedent at Algiers.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?authorDecedent ?algiersDecedent WHERE {
  # Find the author of ""French Algeria""
  ?book dbo:title ""French Algeria""@en .
  ?book dbo:author ?author .

  # Get decedent of the author
  OPTIONAL { ?author dbo:decedent ?authorDecedent . }

  # Find persons who died in Algiers
  ?person dbo:deathPlace dbr:Algiers .
  
  # Get decedents of those who died in Algiers
  OPTIONAL { ?person dbo:decedent ?algiersDecedent . }
}
```",4,4,5,3,2,3,3,71,0,0,16,0,0.0,0
10,26,test,"Give me the band member of Luke Vibert and associated musical artist of the person born, that is an artist, as Matt Colton and professional in the birth name of Sharon Kao.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v4 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?relatedArtist
WHERE {
  # Step 1: Find band members of Luke Vibert
  ?bandMember dbo:memberOf dbr:Luke_Vibert .
  
  # Step 2: Find the associated musical artist of Matt Colton
  ?associatedArtist dbo:worksWith dbr:Matt_Colton .

  # Step 3: Find Sharon Kao's birth name and profession, then find related artists
  dbr:Sharon_Kao dbo:birthName ?birthName .
  dbr:Sharon_Kao dbo:profession ?profession .
  
  OPTIONAL {
    ?relatedArtist dbo:worksWith ?profession .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
9,59,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater
WHERE {
  # Find the mayor of Belfast
  ?mayor a dbo:Mayor ;
         dbo:officeLocation dbr:Belfast .
  
  # Get the alma mater of the mayor
  ?mayor dbo:almaMater ?mayorAlmaMater .

  # Find the awardee of Royal Medals
  ?awardee dbo:awardReceived dbr:Royal_Medal .

  # Get the alma mater of the awardee
  ?awardee dbo:almaMater ?awardeeAlmaMater .

  # Check if both alma maters are the same
  FILTER (?mayorAlmaMater = ?awardeeAlmaMater)
  
  BIND(?mayorAlmaMater AS ?almaMater)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
115,8,test,Give me the alma mater of Vladimir Cerrón and alma mater of the awardee of National Order of Scientific Merit.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
# Query for Vladimir Cerrón's alma mater
SELECT ?university WHERE {
  wd:Q123456 dbo:almaMater ?university .
}

UNION

# Query for an awardee of the National Order of Scientific Merit's alma mater
SELECT ?university WHERE {
  ?person dbo:awardReceived wd:Q789012 ;
          dbo:almaMater ?university .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Vladimir Cerrón and `wd:Q789012` with the DBpedia ID for the National Order of Scientific Merit.",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
232,65,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v4 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Identify John Pertwee's child who is an actor, narrator, and producer
  ?person dbo:parent dbr:John_Pertwee ;
          a dbo:Actor ;
          dbo:narrator true ;
          dbo:producer true .

  # Determine Sylvie Bermann's British residence
  ?residence dbo:country dbr:United_Kingdom ;
             dbo:resident ?person .

  # Find the claim to fame involving both a film and a military conflict
  ?film dbo:starring ?actor ;
        dbo:genre dbr:Military_conflict ;
        dbo:subject ?person .

  # Ensure the person is associated with Sylvie Bermann's residence
  ?person dbo:nativePlace ?residence .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
328,24,test,Give me the leader of People's Commissariat of Defense of the Soviet Union and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Query to find the leader of People's Commissariat of Defense of the Soviet Union
SELECT ?leader WHERE {
  ?org rdf:type dbo:GovernmentAgency .
  ?org rdfs:label ""People's Commissariat for Defence""@en .
  ?org dbo:head ?leader .
  ?leader a dbo:Person .
}

UNION

# Query to find the commander in the force of Ferenc Szálasi
SELECT ?commander WHERE {
  ?szalasi rdf:type dbo:Person ;
           rdfs:label ""Ferenc Szálasi""@en .
  OPTIONAL { ?szalasi dbo:militaryCommander ?commander . }
  OPTIONAL { ?relatedEvent dbo:agent ?szalasi ;
                        dbo:participant ?commander . }
  FILTER(?commander != ?szalasi)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,63,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nickname ?organisation WHERE {
  # Find Queen's University Belfast nickname
  VALUES (?university) { dbr:Queen's_University_Belfast }
  ?university dbo:nickname ?nickname .

  # Find the current mayor of Belfast who is a politician
  ?mayor dbo:mayorForCity dbr:Belfast ;
         dbo:almaMater ?almaMater ;
         (dbo:memberOfParliament|dbo:partyLeader) ?politicalRole .

  # Find an organisation in Belfast with the same alma mater as the mayor
  ?organisation dbo:location dbr:Belfast ;
                dbo:foundedBy ?founder .
  FILTER (?founder = ?almaMater)

  # Find a Royal Medal awardee with the same alma mater
  ?awardee dbo:award dbr:Royal_Medal ;
           dbo:almaMater ?almaMater .

  # Ensure all conditions are met
  FILTER (?mayor = ?awardee)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,57,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on 1985-04-29 and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query 1: Band of Tracey Elizabeth McSween (born 1985-04-29)
SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Tracey Elizabeth McSween""@en ;
          dbo:birthDate ?date .
  FILTER (?date = ""1985-04-29""^^xsd:date) .
  OPTIONAL { ?person dbo:band ?band . }
}

UNION

# Query 2: Band of the writer of a song by Amba Shepherd
SELECT DISTINCT ?writerBand WHERE {
  ?song dbo:lyricsBy ?ambashepherd ;
        dbo:workExample ?example .
  ?ambashepherd foaf:name ""Amba Shepherd""@en .

  OPTIONAL { 
    ?song dbo:lyricist ?writer .
    ?writer a dbo:Person ;
            dbo:band ?writerBand .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,61,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Step 1: Identify Gustav Jonson
  ?gustavJonson a dbo:Person ;
                foaf:name ""Gustav Jonson""@en .

  # Step 2: Find the leader of Gustav Jonson
  ?leader dbo:leaderOf ?gustavJonson .

  # Step 3: Identify the government agency led by this leader
  ?agency dbo:headOf ?leader ;
          a dbo:GovernmentAgency .

  # Step 4: Find the commander in Budapest related to this agency at the time of Gustav Jonson's death
  ?commander dbo:commanderOf ?force ;
             dbo:location dbr:Budapest ;
             dbo:relatedTo ?agency .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
994,48,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
# Step 1: Get band members of Donald Maynard Dokken
SELECT ?bandMember WHERE {
    ?dokken dbo:birthName ""Donald Maynard Dokken""@en .
    ?dokken a dbo:MusicalArtist .
    ?dokken dbo:member ?band .
    ?band dbo:bandMember ?bandMember .
}

# Step 2: Get associated musical artist of Watchtower
SELECT ?associatedArtist WHERE {
    ?watchtower a dbo:Band ;
                rdfs:label ""Watchtower""@en .
    ?watchtower dbo:associatedMusicalArtist ?associatedArtist .
}

# Step 3: Get associated musical artists of the artist found in step 2
SELECT ?finalAssociatedArtist WHERE {
    # Replace ?artist with the result from step 2
    ?artist a dbo:MusicalArtist ;
            rdfs:label ?associatedArtistLabel .
    ?artist dbo:associatedMusicalArtist ?finalAssociatedArtist .
}
```

Note: The above SPARQL queries are structured to be executed sequentially. You will need to manually replace `?artist` in the third query with the actual result from the second query.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
9,65,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of Northern Ireland Forum.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v4 . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater
WHERE {
  # Step 1: Identify the award related to Royal Medals
  ?award dbo:recipient ?awardee .
  
  FILTER regex(str(?award), ""Royal Medal"", ""i"") .

  # Step 2: Find the awardee's alma mater
  ?awardee dbo:almaMater ?almaMater1 .

  # Step 3: Identify the figure known as ""The Ivory Tower"" (nickname of Queen’s University Belfast)
  ?figure rdfs:label ""Ivory Tower""@en .
  
  # Find this figure's alma mater
  ?figure dbo:almaMater ?almaMater2 .

  # Step 4: Identify the mayor associated with the Northern Ireland Forum
  ?mayor dbo:office ?office .
  
  FILTER regex(str(?office), ""Northern Ireland Forum"", ""i"") .

  # Find this mayor's alma mater
  ?mayor dbo:almaMater ?almaMater3 .

  # Step 5: Link all elements by finding the common alma mater
  VALUES (?commonAlmaMater) { ?almaMater1 ?almaMater2 ?almaMater3 }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
959,46,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Yōichi Masuzoe"" ;
          dbo:birthDate ?birthDate .
  
  FILTER(YEAR(?birthDate) = 1958)

  ?person dbo:almaMater ?university .

  ?university a dbo:EducationalOrganization ;
              dbo:nativePlace ?nativePlace .
}
```",5,10,6,3,2,3,3,71,0,0,167,0,0.0,0
547,68,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v5 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Part 1: Resting place of the child of the child of William Haliburton
SELECT DISTINCT ?grandchildRestingPlace WHERE {
  ?williamHaliburton a dbo:Person ;
                    foaf:name ""William Haliburton""@en .
  ?williamHaliburton dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild dbo:finalBurialPlace ?grandchildRestingPlace .
}

UNION

# Part 2: Resting place of the actor of the show with Emily Richard
SELECT DISTINCT ?actorRestingPlace WHERE {
  ?show dbo:starring ?emilyRichard ;
        a dbo:TVSeries .
  ?emilyRichard foaf:name ""Emily Richard""@en .
  ?show dbo:starring ?actor .
  ?actor dbo:finalBurialPlace ?actorRestingPlace .
}

UNION

# Part 3: Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT DISTINCT ?recipientRestingPlace WHERE {
  ?person a dbo:Person ;
          dbo:award ?orderAward .
  ?orderAward foaf:name ""Knight Grand Cross of the Order of St Michael and St George""@en .
  ?person dbo:finalBurialPlace ?recipientRestingPlace .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
659,62,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of Napoleonic Wars and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?war WHERE {
  # Find the Polish Horse unit and its commander during the Napoleonic Wars
  ?unit a dbo:MilitaryUnit ;
        rdfs:label ""Polish Horse""@en ;
        dbo:partOf dbr:Napoleonic_Wars .
  
  ?unit dbo:commander ?commander .

  # Ensure the commander is also an office holder in the Kingdom of Ireland
  ?commander dbo:officeHolderIn dbr:Kingdom_of_Ireland .

  # Find wars or battles where this commander was involved
  ?war a dbo:MilitaryConflict ;
       dbo:participated ?commander .
}
```",7,12,8,3,3,3,3,71,0,0,13,0,0.0,0
54,60,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya of Pagan and his child
  dbr:Thinkhaya_of_Pagan a dbo:Person ;
    dbo:child ?thinkhayasChild .

  # Thinkhaya's grandchild
  ?thinkhayasChild dbo:child ?grandchild .

  # Predecessor of the grandchild (Thinkhaya's child)
  ?person rdfs:label ?thinkhayasChildLabel .
  
  FILTER(CONTAINS(LCASE(?thinkhayasChildLabel), ""thinkhaya of pagan""))

  # Ensure person is an office holder and royalty
  ?person a dbo:Monarch ;
          dbo:officeHolder true .

  # Connection to Thihapate of Mohnyin
  OPTIONAL { ?person dbo:relatedTo dbr:Thihapate_of_Mohnyin }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
427,64,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to the name of the party of Michele Pinto and party of Giulio Andreotti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?romanoProdiBirthName ?romanoProdiParty ?michelePintoParty ?giulioAndreottiParty
WHERE {
  # Romano Prodi's birth name and party affiliation
  dbr:Romano_Prodi dbo:birthName ?romanoProdiBirthName .
  OPTIONAL { dbr:Romano_Prodi dbo:partyAffiliation ?romanoProdiParty . }

  # Michele Pinto's party affiliation
  dbr:Michele_Pinto dbo:partyAffiliation ?michelePintoParty .

  # Giulio Andreotti's party affiliation
  dbr:Giulio_Andreotti dbo:partyAffiliation ?giulioAndreottiParty .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
9,47,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Find the alma mater of the mayor of Northern Ireland Forum
  ?mayor a dbo:Politician ;
         dbo:positionHeld dbr:Northern_Ireland_Forum ;
         dbo:almaMater ?almaMater1 .

  # Find the alma mater of an awardee of the Royal Medals
  ?recipient a dbo:Person ;
             dbo:award dbr:Royal_Medals ;
             dbo:almaMater ?almaMater2 .

  # Check if they share the same alma mater
  FILTER (?almaMater1 = ?almaMater2)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
184,63,test,"Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalEntity WHERE {
  # Step 1: Find a child of Archduke Joseph Karl of Austria
  ?child1 dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .

  # Step 2: Find the grandchild (child of that child)
  ?grandchild dbo:parent ?child1 .

  # Step 3: Identify the parent of this grandchild
  ?parentOfGrandchild dbo:child ?grandchild .

  # Step 4: Find a landmark at elevation 96.0 that is a settlement
  ?landmark dbo:elevation ""96.0""^^xsd:float ;
            rdf:type dbo:Settlement .

  # Step 5: Identify the native of this landmark
  ?native dbo:nativePlace ?landmark .

  # Step 6: Find the parent of this native
  ?parentOfNative dbo:child ?native .

  # Step 7: Ensure connection with Archduke Joseph Francis of Austria's child
  ?child2 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  ?finalEntity dbo:child ?child2 .

  # Final condition: The entity must satisfy all previous conditions
  FILTER (?parentOfGrandchild = ?parentOfNative)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
994,65,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Fredrik Thordendal's band
  dbr:Fredrik_Thordendal dbo:bandMemberOf dbr:Meshuggah .
  
  # Meshuggah's associated musical artist
  dbr:Meshuggah dbo:associatedMusicalArtist ?meshuggahArtist .

  # Don Dokken's birth information
  dbr:Don_Dokken dbo:birthDate ?donDokkenBirthDate .

  # Associated musical artist of Don Dokken
  dbr:Dokken dbo:associatedMusicalArtist ?dokkenArtist .

  # Watchtower's associated musical artist
  dbr:Watchtower dbo:associatedMusicalArtist ?watchtowerArtist .

  # Associated musical artist of the artist from Watchtower (e.g., Metallica)
  ?watchtowerArtist dbo:associatedMusicalArtist ?metallicaArtist .

  # Associated musical artist of Metallica (e.g., Megadeth)
  ?metallicaArtist dbo:associatedMusicalArtist ?finalAssociatedArtist .

  # Find a band member of Meshuggah with an associated artist that matches the criteria
  ?meshuggahArtist dbo:bandMemberOf dbr:Meshuggah .
  ?meshuggahArtist dbo:associatedMusicalArtist ?finalAssociatedArtist .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
492,48,test,"Give me the person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . },"```sparql
# Query 1: Person decedent at the work ""French Algeria""
SELECT ?personDecedent WHERE {
  ?work dbo:title ""French Algeria""@en .
  ?work dbo:author ?author .
  OPTIONAL { ?author dbo:deathPlace ?place . }
  FILTER EXISTS { ?author dbo:deathDate ?date } # Ensures the person has a recorded death
  BIND(?author AS ?personDecedent)
}

UNION

# Query 2: Person decedent at the capital of Algeria (Algiers)
SELECT ?personDecedent WHERE {
  ?city rdfs:label ""Algiers""@en .
  ?city dbo:country dbr:Algeria .
  OPTIONAL { ?person dbo:deathPlace ?place . }
  FILTER(?place = ?city)
  FILTER EXISTS { ?person dbo:deathDate ?date } # Ensures the person has a recorded death
  BIND(?person AS ?personDecedent)
}
```",5,6,6,3,2,3,3,71,0,0,16,0,0.0,0
617,51,test,Give me the parent of the child of the commander in Battle of Panium and spouse of the child of Antiochus III the Great.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild ?spouseOfAntiochusChild
WHERE {
  # Step 1: Identify the commander in Battle of Panium
  ?battle dbo:commander ?commander .
  FILTER(STRSTARTS(STR(?battle), ""Battle of Panium""))

  # Step 2: Find the child of the commander
  ?child dbo:parent ?commander .

  # Step 3: Determine the parent of this child (likely the same as the commander)
  BIND(?commander AS ?parentOfChild)

  # Step 4: Identify Antiochus III the Great's child
  dbr:Antiochus_III_the_Great dbo:child ?antiochusChild .

  # Step 5: Find the spouse of this child
  ?antiochusChild dbo:spouse ?spouseOfAntiochusChild .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
16,61,test,Give me the professional in the profession of the actor of Unnatural (TV series) and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional (SAMPLE(?birthName) AS ?matchingBirthName)
WHERE {
  # Find the actor of ""Unnatural""
  ?unnatural dbo:actor ?actor .
  FILTER(STRSTARTS(LCASE(STR(?unnatural)), ""http://dbpedia.org/resource/unnatural_(tv_series)""))

  # Get the profession of the actor
  ?actor rdf:type ?profession .

  # Find another professional in the same profession
  ?professional rdf:type ?profession .
  
  # Ensure it's not the same person as the actor from Unnatural
  FILTER(?professional != ?actor)

  # Find an alumnus of Ohio State University with a specific birth name
  ?alumnus dbo:alumniOf <http://dbpedia.org/resource/Ohio_State_University> .
  ?alumnus foaf:givenName ?birthName .

  # Match the birth name to the professional's given name
  ?professional foaf:givenName ?matchingBirthName .
  
  FILTER(?birthName = ?matchingBirthName)
}
```",6,6,7,3,2,3,3,71,0,0,3,0,0.0,0
378,36,test,"Give me the war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?claimToFame
WHERE {
  ?war a dbo:MilitaryConflict .
  
  ?war dbo:commander ?trigge .
  ?trigge rdfs:label ""Thomas Trigge""@en .

  ?trigge dbo:famousFor ?claimToFame .

  ?war dbo:participant ?gahn .
  ?gahn rdfs:label ""Carl Pontus Gahn""@en .

  FILTER (CONTAINS(LCASE(?war), ""war""))
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
801,68,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v5 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v7 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Identify The Shadow's true self
  dbr:Lil_Wayne a dbo:MusicalArtist ;
                dbo:alterEgo dbr:The_Shadow .

  # Find the associated musical artist of Lil Wayne
  ?artist dbo:associatedMusicalArtist dbr:Lil_Wayne .
  
  # Locate ""40 Dayz & 40 Nightz"" and its producer
  dbr:""40 Dayz & 40 Nightz"" a dbo:MusicalWork, dbo:Song ;
                             dbo:writer ?writer ;
                             dbo:producer ?producer .

  # Ensure the writer is a professional rapper
  ?writer a dbo:MusicalArtist ;
          dbo:profession dbr:Rapper .

  # Match the producer with the associated artist
  FILTER(?artist = ?producer)
}
```",8,14,9,3,3,3,3,71,0,0,8,0,0.0,0
547,52,test,Give me the resting place of the child of the child of William Haliburton and resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Resting place of the child of the child of William Haliburton
SELECT ?grandchildRestingPlace WHERE {
  ?williamHaliburton dbo:birthName ""William Haliburton""@en .
  ?williamHaliburton dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .
  ?grandchild dbo:deathPlace ?grandchildRestingPlace .
}

UNION

# Resting place of Alan Cunningham
SELECT ?alanCunninghamRestingPlace WHERE {
  ?alanCunningham foaf:name ""Alan Cunningham""@en .
  ?alanCunningham dbo:deathPlace ?alanCunninghamRestingPlace .
}

UNION

# Resting place of the actor of ""Enemy at the Door""
SELECT ?actorRestingPlace WHERE {
  ?film dbo:title ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:deathPlace ?actorRestingPlace .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
528,35,test,Give me the force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war 
WHERE {
  # Find Narciso Campero Leyes and his military force
  ?person a dbo:Person ;
          foaf:name ""Narciso Campero Leyes"" ;
          dbo:militaryForce ?force .
  
  # Find the Battle of Pisagua and its associated war
  dbr:Battle_of_Pisagua a dbo:Battle ;
                         dbo:partOfWar ?war .
}
```",4,4,5,2,2,3,3,71,0,0,3,0,0.0,0
92,70,test,"Give me the band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v7 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?associatedArtist ?actor ?actorMusician 
WHERE {
    # Step 1: Identify Joseph Michael's birth name and band membership
    ?person a dbo:Person ;
        foaf:name ""Joseph Michael"" ;
        dbo:birthName ?birthName .
    
    ?person dbo:memberOfBand ?band ;
        ?band dbr:Nevermore .

    # Step 2: Find associated musical artists
    OPTIONAL {
        ?person dbo:associatedMusicalArtist ?associatedArtist .
    }

    # Step 3: Identify the actor of ""Return to Nuke 'Em High Volume 1""
    ?film a dbo:Film ;
        foaf:name ""Return to Nuke 'Em High Volume 1"" .

    ?actor a dbo:Person ;
        dbo:actedIn ?film .
    
    # Step 4: Find associated musical artist of the actor
    OPTIONAL {
        ?actor dbo:associatedMusicalArtist ?actorMusician .
    }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,62,test,"Give me the parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
# Step 1: Find the parent of Archduchess Ilona of Austria
SELECT ?parent WHERE {
    wd:Q123456 dbo:parent ?parent .
}

UNION

# Step 2: Identify the settlement at elevation 96.0 and its native
SELECT ?native WHERE {
    ?settlement a dbo:Settlement ;
                dbo:elevation ""96.0""^^xsd:float ;
                dbo:nativePlace ?person .
    ?person dbo:nativePlace ?native .
}

UNION

# Step 3: Find the parent of the native identified in step 2
SELECT ?parent WHERE {
    ?native dbo:parent ?parent .
}

UNION

# Step 4: Identify the child of the child of the parent that is royalty of Archduke Ladislaus Philipp of Austria
SELECT ?grandchild WHERE {
    wd:Q654321 dbo:royalty ?parent .
    ?parent dbo:child ?child .
    ?child dbo:child ?grandchild .
}

# Step 5: Combine results to find common entity or relationship
SELECT DISTINCT ?entity WHERE {
    { 
        # Parent of Archduchess Ilona of Austria
        wd:Q123456 dbo:parent ?entity .
    }
    UNION
    {
        # Parent of the native of the settlement at elevation 96.0
        ?native dbo:parent ?entity .
        ?settlement a dbo:Settlement ;
                    dbo:elevation ""96.0""^^xsd:float ;
                    dbo:nativePlace ?person .
        ?person dbo:nativePlace ?native .
    }
    UNION
    {
        # Child of the child of the parent that is royalty of Archduke Ladislaus Philipp of Austria
        wd:Q654321 dbo:royalty ?parent .
        ?parent dbo:child ?child .
        ?child dbo:child ?entity .
    }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
303,22,test,"Give me the party of the commander, that is a politician, in United States invasion of Panama and entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?party ?country 
WHERE {
  # Part 1: Find the political party of General Noriega
  OPTIONAL {
    dbr:Manuel_Noriega dbo:politicalParty ?party .
  }
  
  # Part 2: Identify the country entity for El Valle de Antón
  dbr:El_Valle_de_Antón dbo:country ?country .
}
```",4,6,5,2,2,2,3,28,0,1,2,0.0,0.0,0
547,44,test,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorRestingPlace ?jamesBurtonRestingPlace ?knightGrandCrossRestingPlace WHERE {
  # Actor of ""Enemy at the Door""
  OPTIONAL { 
    ?actor dbo:title ""Enemy at the Door""@en.
    ?actor dbo:deathPlace ?actorDeathPlace.
    BIND(IF(BOUND(?actorDeathPlace), STR(?actorDeathPlace), ""Unknown"") AS ?actorRestingPlace)
  }
  
  # James Burton (Egyptologist)
  OPTIONAL {
    dbr:James_Burton_(Egyptologist) dbo:deathPlace ?jamesBurtonDeathPlace.
    BIND(IF(BOUND(?jamesBurtonDeathPlace), STR(?jamesBurtonDeathPlace), ""Unknown"") AS ?jamesBurtonRestingPlace)
  }
  
  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  OPTIONAL {
    ?knightGrandCross dbo:award ""Knight Grand Cross of the Order of St Michael and St George""@en.
    ?knightGrandCross dbo:deathPlace ?knightGrandCrossDeathPlace.
    BIND(IF(BOUND(?knightGrandCrossDeathPlace), STR(?knightGrandCrossDeathPlace), ""Unknown"") AS ?knightGrandCrossRestingPlace)
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
492,26,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Battle_of_Verdun dbo:commander ?commander .
}
```",3,5,4,3,1,3,3,71,17,0,75,1.0,0.18478260869565216,0.3119266055045872
339,17,test,Give me the father of the child of the parent of Princess Olga of Greece and Denmark and child of George I of Greece.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father
WHERE {
  # Princess Olga of Greece and Denmark
  ?olga a dbo:Person ;
        foaf:name ""Princess Olga of Greece and Denmark""@en .

  # Her parent
  ?parent dbo:child ?olga .

  # Child of her parent (could be siblings or other descendants)
  ?sibling dbo:child ?parent .

  # George I of Greece's children
  ?georgeI a dbo:Person ;
           foaf:name ""George I of Greece""@en .
  
  ?childOfGeorg dbp:father ?georgeI .

  # Find the common child
  FILTER (?sibling = ?childOfGeorg)

  # Determine the father of this child
  ?father dbo:spouse ?mother ;
          dbo:child ?sibling .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
959,21,test,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager ?university WHERE {
  ?person rdfs:label ""Eiji Ōtsuka""@en .
  ?person dbo:nationality dbr:Japan .
  
  # Find the manager role for Júbilo Iwata in 2013
  OPTIONAL { 
    ?jubiloIwata dbr:Júbilo_Iwata .
    ?jubiloIwata dbo:manager ?manager .
    ?manager rdfs:label ""Eiji Ōtsuka""@en .
  }
  
  # Find the alma mater, ensuring it is a Japanese university and educational institution
  OPTIONAL {
    ?person dbo:almaMater ?university .
    ?university dbo:nationality dbr:Japan .
    ?university rdf:type dbo:EducationalInstitution .
    ?university rdf:type dbo:University .
  }
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
427,71,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v4 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?fatherParty ?michelePintoParty ?romanoProdiParty WHERE {
  # Part 1: Father's party of an MIT alumnus
  ?alumnus dbo:alumnusOf dbpedia:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .
  ?father dbo:party ?fatherParty .

  # Part 2: Michele Pinto's party
  dbpedia:Michele_Pinto dbo:party ?michelePintoParty .

  # Part 3: Romano Prodi's party
  ?politician foaf:name ""Romano Prodi""@en .
  ?politician dbo:officeHolder true .
  ?politician dbo:party ?romanoProdiParty .
}
```",9,11,10,3,3,3,3,71,0,0,2,0,0.0,0
281,55,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of Knight Grand Cross of the Order of the Bath and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity WHERE {
  # Heather Roy's profession or military unit
  OPTIONAL { 
    dbr:Heather_Roy dbo:militaryUnit ?heatherRoyUnit .
  }
  
  # Bob Heffron's birthplace
  OPTIONAL { 
    dbr:Bob_Heffron dbo:birthPlace ?bobHeffronBirthPlace .
    ?bobHeffronBirthPlace a dbo:Country .
  }

  # Common entity that is an awardee of Knight Grand Cross of the Order of the Bath
  ?commonEntity dbo:militaryUnit ?heatherRoyUnit ;
               dbo:birthPlace ?bobHeffronBirthPlace ;
               dbo:awardReceived dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
16,46,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional (SAMPLE(?spouse) AS ?spouseName)
WHERE {
  # Step 1: Get Satomi Ishihara's profession
  ?satomi a dbo:Person;
          foaf:name ""Satomi Ishihara""@en.
  
  OPTIONAL { ?satomi dbo:profession ?profession. }
  
  # Step 2: Get Ted McGinley's birth name
  ?ted a dbo:Person;
       foaf:name ""Ted McGinley""@en.
  
  OPTIONAL { ?ted dbo:birthName ?birthName. }

  # Step 3: Find spouse of person with the same birth name as Ted McGinley
  ?person a dbo:Person;
          dbo:birthName ?birthName.

  ?person dbo:spouse ?spouse.

  # Step 4: Check if this spouse has the same profession as Satomi Ishihara
  OPTIONAL { ?spouse dbo:profession ?sameProfession. }
  
  FILTER(?sameProfession = ?profession)
}
GROUP BY ?professional
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
959,50,test,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?managerTeam ?nativeCountry
WHERE {
  # Step 1: Find Takashi Sekizuka's team
  ?sekizuka a dbo:Person ;
            foaf:name ""Takashi Sekizuka"" ;
            dbo:managerOf ?team .
  
  # Step 2: Identify the leader of the 2010 Japanese House of Councillors election
  ?politician a dbo:Politician ;
             dbo:electedAsLeaderDuring dbr:2010_Japanese_House_of_Councillors_election .

  # Step 3: Find the native country of this politician
  ?politician dbo:nativeCountry ?nativeCountry .
  
  FILTER(?nativeCountry != dbr:Japan) # Assuming we are looking for a non-Japanese country

  # Step 4: Check if there's any connection between the manager's team and the native country
  ?team dbo:location ?location .
  OPTIONAL { 
    ?location rdfs:label ?countryLabel .
    FILTER(lang(?countryLabel) = ""en"" && ?countryLabel = ?nativeCountry)
  }
  
  # Return the manager's team and the native country of the politician
  BIND(?team AS ?managerTeam)
}
```",5,7,6,3,2,3,3,71,0,0,6,0,0.0,0
161,65,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
# Query 1: Emilio Mola's Commander in a Military Force
SELECT ?commander WHERE {
    ?event dbo:participatedIn ?militaryForce .
    ?militaryForce dbp:militaryConflict ?conflict .
    ?militaryForce dbo:commander ?commander .
    ?commander rdfs:label ""Emilio Mola""@en .
}

# Query 2: Francisco Franco's Societal Event and Military Conflict
SELECT DISTINCT ?societalEvent ?militaryConflict WHERE {
    ?event1 dbo:participatedIn ?militaryForce1 .
    ?militaryForce1 dbp:militaryConflict ?militaryConflict .
    ?event1 rdf:type dbo:SocietalEvent .
    
    ?event2 dbo:participatedIn ?militaryForce2 .
    ?militaryForce2 dbp:militaryConflict ?conflict .
    ?event2 rdf:type dbo:MilitaryConflict .
    
    ?commander rdfs:label ""Francisco Franco""@en .
    ?militaryForce1 dbo:commander ?commander .
    ?militaryForce2 dbo:commander ?commander .
}

# Query 3: Predecessor of Indalecio Prieto and their Military Conflict
SELECT DISTINCT ?predecessor ?conflict WHERE {
    ?prieto rdfs:label ""Indalecio Prieto""@en .
    ?prieto dbo:predecessor ?predecessor .

    ?event dbo:participatedIn ?militaryForce .
    ?militaryForce dbp:militaryConflict ?conflict .
    ?militaryForce dbo:commander ?predecessor .
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
492,69,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/author> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Frédéric-Georges Herr's military conflict
  ?herr a dbo:Person ;
        foaf:name ""Frédéric-Georges Herr"" .
  
  ?conflict dbo:commander ?herr ;
            a dbo:MilitaryConflict .

  # Author of French Algeria
  ?author a dbo:Person ;
          dbo:deathPlace ?deceasedPlace ;
          dbo:work dbr:French_Algeria .

  # Capital of Khemis Miliana District and decedent
  ?capital a dbo:Settlement ;
           dbo:country dbr:Algeria ;
           rdfs:label ""Khemis Miliana""@en .
  
  ?decedent a dbo:Person ;
            dbo:deathPlace ?capital .

  # Common commander
  ?commander dbo:commander ?conflict ;
             dbo:deathPlace ?deceasedPlace ;
             dbo:deathPlace ?capital .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
54,57,test,"Give me the child of Thinkhaya of Pagan and parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Step 1: Find Thinkhaya of Pagan's child
  ?thinkhaya a dbo:Person ;
             foaf:name ""Thinkhaya of Pagan"" .
  ?child dbo:parent ?thinkhaya .

  # Step 2: Find Thado Minsaw of Prome's parent and then the grandparent (child)
  ?thadoMinsaw a dbo:Person ;
               foaf:name ""Thado Minsaw of Prome"" .
  ?parent dbo:child ?thadoMinsaw .
  ?grandChild dbo:parent ?parent .

  # Step 3: Find predecessor of the grandchild
  ?predecessor dbo:successor ?grandChild .

  # Step 4: Ensure entity is an office holder and royalty related to Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
             foaf:name ""Thihapate of Mohnyin"" .
  ?entity dbo:officeHolder ?thihapate ;
          dbo:royaltyMember ?thihapate .

  # Step 5: Match the predecessor with Thinkhaya's child
  FILTER (?predecessor = ?child)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
767,67,test,"Give me the entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInBadenWuerttemberg ?alterEgo ?almaMater
WHERE {
  # Step 1: Find Matthew Burland's alter ego
  OPTIONAL { 
    dbr:Matthew_Burland dbo:alterEgo ?alterEgo .
  }

  # Step 2: Find George Kilbon Nash's alma mater
  OPTIONAL {
    dbr:George_Kilbon_Nash dbo:almaMater ?almaMater .
  }
  
  # Step 3: Link to an entity in Baden-Württemberg
  ?entityInBadenWuerttemberg a dbo:Place ;
                             dbo:locationCountry dbr:Germany ;
                             dbo:administrativeRegion dbr:Baden-Württemberg .
  
  OPTIONAL {
    ?almaMater dbo:location ?entityInBadenWuerttemberg .
  }
  
  OPTIONAL {
    ?alterEgo dbo:associatedWith ?entityInBadenWuerttemberg .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
492,55,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at the capital, that is a settlement, of Algeria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Frédéric-Georges Herr's role in a war
  ?herr dbo:commanderOf ?war .
  
  # War is both a military conflict and an event
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:Event .

  # Joseph C. Satterthwaite's place of death
  dbr:Joseph_C._Satterthwaite dbo:placeOfDeath ?capital .

  # Capital city is the capital of Algeria
  ?capital dbo:country dbr:Algeria .
  ?capital rdf:type dbo:City ;
           rdfs:label ""Algiers"" ; # Assuming Algiers as the known capital
           FILTER (lang(?capital) = 'en')
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
360,24,test,"Give me the reference to the author of Blinded by the Light and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?authorReference WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""Blinded by the Light""@en .

  ?winnie dbo:deathPlace ?deathPlace .
  ?winnie rdfs:label ""Winnie Madikizela-Mandela""@en .
  
  ?deathPlace rdf:type <http://dbpedia.org/ontology/Settlement> .

  FILTER (strstarts(str(?author), str(?winnie)))
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
959,39,test,"Give me the native of Japan and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/manager> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName (SAMPLE(?nativeCountry) AS ?nativeCountry)
WHERE {
  ?team dbo:season ""1998"" .
  ?team dbo:manager ?manager .
  ?manager rdfs:label ?managerName .
  FILTER(CONTAINS(LCASE(?managerName), ""kashima antlers"") && CONTAINS(LCASE(?managerName), ""1998""))
  
  OPTIONAL { ?manager dbo:sportsManager true . }
  
  ?manager dbo:nationality ?nativeCountry .
  FILTER(CONTAINS(LCASE(?nativeCountry), ""japan""))
}
GROUP BY ?managerName
```",4,5,5,3,2,3,3,71,0,0,6,0,0.0,0
339,19,test,Give me the child of the child of Christian IX of Denmark and father of the child of the parent of Princess Olga of Greece and Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild ?fatherOfOlgaChild
WHERE {
  # Step 1: Identify a child of Christian IX
  ?child dbo:parent dbr:Christian_IX_of_Denmark .
  
  # Step 2: Find the grandchild (child of the child)
  ?grandchild dbo:parent ?child .

  # Step 3: Identify Princess Olga's parent
  ?olgaParent dbo:child dbr:Princess_Olga_of_Greece_and_Denmark .

  # Step 4: Find the child of that parent
  ?olgaChild dbo:parent ?olgaParent .

  # Step 5: Determine the father of this child
  ?olgaChild dbo:spouse ?fatherOfOlgaChild .
  
  FILTER(?grandchild = ?olgaChild)
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
55,25,test,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony and band of Newsted and band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Find band or group associated with San Francisco Symphony
  ?symphony a dbo:MusicalGroup ;
            dbo:performerIn ?performance .
  
  # Find Jason Newsted's band
  dbr:Jason_Newsted dbo:bandMember ?newstedBand .

  # Find producer of ""Used to Love Her""
  dbr:Used_to_Love_Her dbo:producer ?producer .

  # Find the band associated with the producer
  ?producer dbo:bandMember ?producerBand .

  # Find common band member
  ?performance dbo:performer ?commonBand ;
               dbo:performerIn ?newstedPerformance .
  
  ?newstedPerformance dbo:performer ?commonBand ;
                      dbo:performer ?newstedBand .

  ?producerBand dbo:bandMember ?commonBand .

  # Ensure the band is both a band and a group
  ?commonBand a dbo:Band, dbo:MusicalGroup .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
547,58,test,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?actorRestingPlace ?jamesBurtonRestingPlace ?awardee ?awardeeRestingPlace WHERE {
  # Resting place of the actor of ""Enemy at the Door""
  {
    ?film dbo:title ""Enemy at the Door""@en .
    ?film dbo:starring ?actor .
    OPTIONAL { ?actor dbo:restingPlace ?actorRestingPlace . }
  }

  # Resting place of James Burton (Egyptologist)
  {
    dbr:James_Burton_(Egyptologist) dbo:restingPlace ?jamesBurtonRestingPlace .
  }

  # Resting place of the awardee of the award of Gerald Graham
  {
    ?award dbo:recipient ?awardee ;
           dbo:givenBy dbr:Gerald_Graham .
    OPTIONAL { ?awardee dbo:restingPlace ?awardeeRestingPlace . }
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,59,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?deathPlace
WHERE {
  # Part 1: Birth Place of Saitō Hajime
  ?saito a dbo:Person ;
         foaf:name ""Saitō Hajime""@en ;
         dbo:commanderOf ?war .
  
  ?war a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .

  ?saito dbo:birthPlace ?birthPlace .

  # Part 2: Death Place of Matsudaira Tadamasa's Father
  ?matsudaira a dbo:Person ;
              foaf:name ""Matsudaira Tadamasa""@en ;
              dbo:father ?father .
  
  ?father a dbo:Politician, dbo:OfficeHolder .

  ?father dbo:deathPlace ?deathPlace .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
528,48,test,"Give me the force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?war WHERE {
  # Identify Narciso Campero Leyes
  dbr:Narciso_Campero_Leyes dbo:militaryService ?militaryForce .
  
  # Find the war associated with the military force
  ?militaryForce dbo:participatedIn ?war .

  # Ensure the event is a societal event (specifically a war) in Chile
  ?war a dbo:SocietalEvent ;
      dbo:location dbr:Chile ;
      rdf:type dbo:War .
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
488,51,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?administration 
WHERE {
  # Find Yūki Hideyasu's father and his death place
  ?yukiHideyasu a dbo:Person ;
                foaf:name ""Yūki Hideyasu""@en .
  ?yukiHideyasu dbo:father ?fatherYuki .

  ?fatherYuki dbo:deathPlace ?deathPlace .

  # Find Tokugawa Masako's spouse and his father
  ?tokugawaMasako a dbo:Person ;
                  foaf:name ""Tokugawa Masako""@en .
  ?tokugawaMasako dbo:spouse ?spouseTokugawa .

  ?spouseTokugawa dbo:royalHouse ?royalHouse .

  ?spouseTokugawa dbo:father ?fatherSpouse .

  # Find the administration of Tokugawa Masako's spouse's father
  ?fatherSpouse dbo:officeHolder ?administration .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,57,test,"Give me the reference to Partito Popolare Italiano and party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?prodiFatherParty ?alumnusFatherParty ?ppiReference
WHERE {
  # Romano Prodi details
  dbr:Romano_Prodi a dbo:Politician ;
                  dbo:officeHolder ?office .

  # Father's political party
  OPTIONAL { 
    ?prodiFamily dbo:father dbr:Romano_Prodi .
    ?prodiFamily dbo:party ?prodiFatherParty .
  }

  # Find an MIT alumnus with a father in the same party as Prodi's father
  OPTIONAL {
    ?alumnusFamily dbo:child ?mitAlumnus ;
                   dbo:father ?fatherPerson .
    ?fatherPerson dbo:party ?alumnusFatherParty .

    FILTER(?prodiFatherParty = ?alumnusFatherParty)
    
    # Ensure the alumnus is from MIT
    ?mitAlumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  }

  # Reference to Partito Popolare Italiano
  dbr:Partito_Popolare_Italiano ?ppiReference .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
498,8,test,"Give me the band of the member, that is an artist, of Mortician (band) and band of Malevolent Creation.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artistBand ?malevolentCreationBand WHERE {
  # Find members of Mortician who are artists and their bands
  ?member dbo:band dbr:Mortician .
  ?member a dbo:Artist .
  OPTIONAL { ?member dbo:band ?artistBand . }
  
  # Find the band associated with Malevolent Creation
  ?mcMember dbo:band dbr:Malevolent_Creation .
  ?mcMember a dbo:Artist .
  OPTIONAL { ?mcMember dbo:band ?malevolentCreationBand . }

  FILTER(?artistBand != dbr:Mortician) # Exclude Mortician itself from results
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
485,23,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
# Query for a country in the region of Western European Time
SELECT DISTINCT ?country WHERE {
  ?timeZone rdf:type dbo:TimeZone .
  ?timeZone rdfs:label ""Western European Time""@en .
  ?region dbo:hasTimezone ?timeZone .
  ?country rdf:type dbo:Country ;
           dbo:locatedIn ?region .
}

UNION

# Query for the birthplace region of Joseph Whitaker
SELECT DISTINCT ?birthPlace WHERE {
  ?person foaf:name ""Joseph Whitaker""@en ;
          rdf:type dbo:Naturalist ;
          dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Region .
}
```",4,6,5,2,2,2,3,28,0,0,357,0,0.0,0
547,30,test,Give me the resting place of James Burton (Egyptologist) and resting place of Simon Cadell and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  # James Burton (Egyptologist)
  { 
    VALUES ?person { dbr:James_Burton_(Egyptologist) }
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Simon Cadell
  { 
    VALUES ?person { dbr:Simon_Cadell }
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?person a dbo:Person ;
            dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,40,test,Give me the person decedent at the work of the author of French Algeria and person decedent at Algiers and commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?authorDecedentAtAlgiers ?commanderDecedentAtAlgiers WHERE {
  # Find the author of ""French Algeria""
  ?work dbo:title ""French Algeria""@en .
  ?work dbo:author ?author .

  # Check if this author died in Algiers
  ?author dbo:deathPlace dbr:Algiers .

  BIND(?author AS ?authorDecedentAtAlgiers)

  OPTIONAL {
    # Find a commander in the Franco-Hova Wars
    ?commander dbo:militaryCommanderOf ?francoHovaWars .
    FILTER EXISTS { ?francoHovaWars rdfs:label ""Franco-Hova Wars""@en }

    # Check if this commander died in Algiers
    ?commander dbo:deathPlace dbr:Algiers .

    BIND(?commander AS ?commanderDecedentAtAlgiers)
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
54,66,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin .
  ?child a dbo:Monarch ; # Assuming Monarch as a class for royalty
         dbo:officeHolder ?office .

  # Find the predecessor of this child in their role or title
  ?predecessor dbo:successor ?child .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
92,50,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
# Query for the musical artist associated with the actor of ""Return to Nuke 'Em High Volume 1""
SELECT ?actor ?musicalArtist WHERE {
  ?movie dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?movie dbo:starring ?actor .
  ?actor a dbo:Actor ;
         dbo:musicalArtist ?musicalArtist .
}

# Query for the band associated with Joseph Michael Furney
SELECT ?band WHERE {
  ?person foaf:name ""Joseph Michael Furney""@en ;
          dbo:associatedBand ?band .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
54,27,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor
WHERE {
  # Step 1: Identify Thihapate of Mohnyin
  dbr:Thihapate_of_Mohnyin a dbo:Person .

  # Step 2: Find children who are office holders and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin ;
         a dbo:Monarch ;  # Assuming Monarch as a class for royalty
         dbo:officeHolder ?office .

  # Step 3: Determine predecessor of the child in their office
  ?office dbo:predecessor ?predecessor .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
314,25,test,Give me the awardee of the award of Sergei Makovetsky and commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/restingPlace> ?v3 . ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v3 . },"```sparql
# Step 1: Find Sergei Makovetsky's award
SELECT ?award WHERE {
    dbr:Sergei_Makovetsky dbo:award ?award .
}

# Step 2: Find the awardee who was a commander in the Spanish Civil War and won the same award
SELECT DISTINCT ?person WHERE {
    # Replace <Award> with the actual URI of the award found from step 1
    ?person dbo:award <Award> .
    ?person dbo:commander dbr:Spanish_Civil_War .
}

# Step 3: Check if this person died at House of Sombrerete
SELECT DISTINCT ?person WHERE {
    # Replace <Person> with the URI found from step 2
    <Person> dbo:deathPlace dbr:House_of_Sombrerete .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
767,60,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInAdministration ?fictionalCharacter
WHERE {
  # Step 1: Find songwriter for Dustin Lynch's album ""Where It's At""
  ?album dbo:title ""Where It's At"" ;
         dbo:lyricsBy ?songwriter .
  
  # Identify the settlement related to the songwriter's administration
  ?songwriter dbo:birthPlace ?settlement .

  # Step 2: Find Matthew Burland's alter ego fictional character
  dbr:Matthew_Burland dbo:fictionalCharacter ?fictionalCharacter .

  # Combine information
  BIND(?settlement AS ?entityInAdministration)
}
```",6,8,7,3,2,3,3,71,0,0,8,0,0.0,0
547,59,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of the show with Emily Richard.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Resting place of the child of the child of William Haliburton
SELECT DISTINCT ?grandchildRestingPlace WHERE {
    # Find William Haliburton's children
    ?child dbo:parent dbr:William_Haliburton .
    
    # For each child, find their children (grandchildren)
    ?grandchild dbo:parent ?child .

    # Get the resting place of these grandchildren
    ?grandchild dbo:finalRestingPlace ?grandchildRestingPlace .
}

UNION

# Part 2: Resting place of the actor of the show with Emily Richard
SELECT DISTINCT ?actorRestingPlace WHERE {
    # Find shows featuring Emily Richard
    ?show dbo:starring dbr:Emily_Richard .

    # For each show, find other actors
    ?show dbo:starring ?actor .
    
    # Get the resting place of these actors
    ?actor dbo:finalRestingPlace ?actorRestingPlace .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
251,27,test,"Give me the death place of the author of The Twelve Abbots of Challant and administration of the ruling party, that is a political party and an organisation, in Sicily and location of Battle of Marengo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?partyAdministration ?battleLocation WHERE {
  # Death place of Bonvesin de la Riva
  OPTIONAL { 
    dbr:Bonvesin_de_la_Riva dbo:deathPlace ?deathPlace .
  }

  # Administration of the ruling party in Sicily
  OPTIONAL {
    ?rulingParty a dbo:PoliticalParty ;
                 dbo:country dbr:Sicily ;
                 dbo:headquarters ?partyAdministration .
  }
  
  # Location of the Battle of Marengo
  OPTIONAL {
    dbr:Battle_of_Marengo dbo:location ?battleLocation .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
747,20,test,Give me the person born on 1985-04-29 and band of the writer of Apollo (Hardwell song).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query to find the person born on 1985-04-29
SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (STR(?date) = ""1985-04-29""^^xsd:date)
}
```

```sparql
# Query to find the band of the writer of Apollo by Hardwell
SELECT ?band WHERE {
  ?song dbo:title ""Apollo""@en ;
        dbo:lyricsBy ?writer .
  ?writer a dbo:Person ;
          dbo:musicalBand ?band .
  FILTER EXISTS { ?song dbo:artist ""Hardwell""@en }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
712,17,test,Give me the capital of South Russia (1919–1920) and resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
# Query to get the capital of South Russia (1919–1920)
SELECT ?capital WHERE {
  ?city dbo:isCapitalOf ?country .
  ?country rdfs:label ""South Russia""@en ;
           dbo:timePeriod ?period .
  FILTER(CONTAINS(STR(?period), ""1919"") && CONTAINS(STR(?period), ""1920""))
  ?city rdfs:label ?capitalLabel .
  FILTER(LANGMATCHES(LANG(?capitalLabel), ""en""))
}
```

```sparql
# Query to get the resting place of Yuri Gagarin, an awardee from the Soviet Union
SELECT ?restingPlace WHERE {
  ?person dbo:award ?award ;
          rdfs:label ""Yuri Gagarin""@en .
  ?award dbo:awardingBody dbr:Soviet_Union .
  ?person dbo:finalRestingPlace ?restingPlace .
  ?restingPlace rdfs:label ?placeLabel .
  FILTER(LANGMATCHES(LANG(?placeLabel), ""en""))
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
16,56,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as Ted Martin McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Identify Ted Martin McGinley
  ?ted a dbo:Actor ;
      foaf:name ""Ted Martin McGinley""@en .
  
  # Step 2: Find his spouse
  ?ted dbo:spouse ?spouse .

  # Step 3: Find the person with birth name matching the spouse's birth name and is an alumnus of Ohio State University
  ?alumnus a dbo:Person ;
           dbo:birthName ?spouseBirthName ;
           dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> .
  
  # Ensure the person found in step 3 matches the spouse's birth name
  FILTER (?spouseBirthName = ?spouse.dbp:birthday)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
959,54,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?university WHERE {
  # Step 1: Find Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .

  # Step 2: Identify the leader of the 2010 Japanese House of Councillors election
  ?politician dbo:election ?election .
  ?election dbo:date ""2010""^^xsd:gYear .
  ?election dbo:country dbr:Japan .

  # Step 3: Find the residence country of this politician
  ?politician dbo:nativePlace ?residenceCountry .
  
  # Step 4: Identify the manager of the 2013 Júbilo Iwata season
  ?manager dbo:managedTeam dbr:Júbilo_Iwata ;
           dbo:managementPeriod ?period .
  FILTER (YEAR(?period) = 2013)

  # Step 5: Connect these elements
  ?university a dbo:EducationalOrganization ;
              dbo:country dbr:Japan .

  # Ensure the university is linked to both the politician's residence and the manager
  ?residenceCountry rdfs:label ""Japan""@en .
  FILTER (?manager = ?politician)
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
801,47,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerName
WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:alias ""The Shadow""@en .
  
  ?work dbo:artist ?person ;
        a dbo:Song, dbo:MusicalWork .

  ?work dbo:producer ?producer .
  ?producer foaf:name ?producerName .
}
```",5,9,6,3,2,3,3,71,0,0,473,0,0.0,0
488,70,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of the commander in Boshin War and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?birthPlace ?deathPlace 
WHERE {
  # Tokugawa Masako's spouse
  ?spouse dbo:spouse dbr:Tokugawa_Masako .
  
  # Father of the spouse (assuming royalty)
  ?father dbo:child ?spouse .
  FILTER EXISTS { ?father a dbo:RoyalFamilyMember } .

  # Administration of the father
  OPTIONAL {
    ?administration dbo:administratedBy ?father .
    BIND(?administration AS ?adminResult)
  }

  # Matsudaira Tadamasa's father (office holder)
  ?matsudairaFather dbo:child dbr:Matsudaira_Tadamasa .
  FILTER EXISTS { ?matsudairaFather a dbo:OfficeHolder } .

  # Commander in the Boshin War
  ?commander dbo:participatedInBattle dbr:Boshin_War .
  
  # Birth place of the commander
  OPTIONAL {
    ?birthPlace dbo:birthPlace ?commander .
    BIND(?birthPlace AS ?birthResult)
  }

  # Death place of Matsudaira Tadamasa's father's father (politician)
  ?grandfather dbo:child ?matsudairaFather .
  FILTER EXISTS { ?grandfather a dbo:Politician } .

  OPTIONAL {
    ?deathPlace dbo:deathPlace ?grandfather .
    BIND(?deathPlace AS ?deathResult)
  }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
285,16,test,Give me the parent of the child of Tina Onassis Niarchos and spouse of the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild WHERE {
  # Tina Onassis Niarchos resource
  dbr:Tina_Onassis_Niarchos a dbo:Person .
  
  # Find her child
  OPTIONAL { 
    dbr:Tina_Onassis_Niarchos dbo:child ?child .
    
    # Determine the parent of that child (likely one of Tina's spouses)
    OPTIONAL {
      ?parentOfChild dbo:spouse ?tina ;
                    dbo:child ?child .
    }
  }
}
```",4,4,5,2,2,3,2,20,2,0,0,1.0,1.0,1.0
659,70,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?event dbo:type dbr:Military_conflict .
  ?event dbo:commander dbr:Arthur_Wellesley,_1st_Duke_of_Wellington .
  ?event dbo:participant dbr:Polish_Uhlans .

  OPTIONAL { ?event dbo:relatedEvent dbr:Napoleonic_Wars . }
  
  ?militaryForce dbo:member ?unit .
  ?unit rdfs:label ""Polish Uhlans""@en .
}
```",8,15,9,3,3,3,3,71,0,0,15,0,0.0,0
328,59,test,Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?commanderRole ?award
WHERE {
  ?person a dbo:MilitaryPerson .
  
  # Commander in the force at Budapest
  ?budaCommanderRole dbo:location dbr:Budapest ;
                     dbo:agent ?person .
  
  # Awardee of the award for Volcano and Ryukyu Islands campaign
  ?awardEvent dbo:campaign dbr:Volcano_and_Ryukyu_Islands_campaigns ;
              dbo:recipient ?person ;
              dbo:name ?award .

  FILTER regex(?award, ""Commander"", ""i"")
}
```",6,6,7,3,2,3,3,71,0,0,15,0,0.0,0
54,64,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:parent dbr:Thinkhaya_of_Pagan .
  
  # Predecessor of the child (Thinkhaya himself)
  ?thinkhaya dbo:child ?thinkhayaChild .

  # Office holder and royalty related to Thihapate of Mohnyin
  ?person dbo:officeHolder true ;
          a dbo:Monarch ;
          dbo:relatedTo dbr:Thihapate_of_Mohnyin .
  
  # Parent of Thado Minsaw of Prome
  ?thadoMinsaw dbo:parent ?person .

  # Ensure the person is Thinkhaya's child (or equivalent in lineage)
  FILTER(?thinkhaya = ?person || ?thinkhayaChild = ?person)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
232,61,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/residence> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfSettlement WHERE {
  # Step 1: Identify the actor, narrator, and producer
  ?actor a dbo:Actor ;
         dbo:narrator true ;
         dbo:producer true .

  # Step 2: Find their claim to fame (film or military conflict)
  ?claimToFame dbo:actor ?actor .
  FILTER (?claimToFame IN (dbr:Film, dbr:MilitaryConflict))

  # Step 3: Connect to a French politician/office holder
  ?politician dbo:nationality dbr:France ;
             dbo:officeHolder true ;
             dbo:filmOrMilitaryConflict ?claimToFame .

  # Step 4: Find the native of a British settlement related to this politician
  ?settlement dbo:country dbr:United_Kingdom ;
              dbo:resident ?politician .
  
  ?nativeOfSettlement dbo:nativePlace ?settlement .
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
184,45,test,Give me the parent of Géza von Habsburg and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?gezaParent ?margaretParent ?josephChild WHERE {
  # Géza von Habsburg's parent
  ?geza dbo:parent ?gezaParent .

  # Archduchess Margaret of Austria (born 1925)
  ?margaret dbo:birthDate ?date .
  FILTER(YEAR(?date) = 1925 && STRSTARTS(STR(?margaret), ""http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(1925)""))
  
  # Margaret's parent
  ?margaret dbo:parent ?margaretParent .

  # Archduke Joseph August of Austria's child
  ?josephChild dbo:child ?joseph .
  FILTER(STRSTARTS(STR(?joseph), ""http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria""))
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
747,58,test,Give me the person born on 1985-04-29 and band of the writer of Apollo (Hardwell song) and band of the person born as the persona of Shèna.,"SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for person born on 1985-04-29
SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ""1985-04-29""^^xsd:date .
}

# Query to find the band of the writer of Apollo by Hardwell
SELECT ?band WHERE {
  ?song dbo:title ""Apollo""@en ;
        dbo:lyricsBy ?writer .
  ?writer a dbo:Person ;
          dbo:musicalBand ?band .
  FILTER(STR(?song) = ""http://dbpedia.org/resource/Apollo_(Hardwell_song)"")
}

# Query to find the band of the person born as Shèna
SELECT ?person ?band WHERE {
  ?person a dbo:Person ;
          rdfs:label ?name ;
          dbo:birthDate ?birthDate .
  ?person dbo:musicalBand ?band .
  FILTER(CONTAINS(LCASE(?name), ""shèna"") && 
         CONTAINS(LCASE(STR(?birthDate)), ""1985-04-29""))
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,60,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  # Step 1: Identify the military conflict involving Saitō Hajime
  ?conflict a dbo:MilitaryConflict ;
            dbo:eventType ?eventType .
  
  FILTER(?eventType IN (dbo:SocietalEvent, dbo:Event)) .

  ?hajime dbo:commander ?conflict ;
          rdfs:label ""Saitō Hajime""@en .

  # Step 2: Identify Tokugawa Masako's spouse
  ?masako dbo:spouse ?spouse .
  FILTER(CONTAINS(LCASE(?spouse), ""tokugawa masako"")) .

  # Ensure the spouse is of royalty
  ?spouse a dbo:Royalty .

  # Step 3: Find the father of the spouse
  ?father dbo:child ?spouse .

  # Step 4: Identify the administration of the father
  ?administration dbo:administrator ?father .

  # Step 5: Get Saitō Hajime's birth place
  ?hajime dbo:birthPlace ?birthPlace .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
54,24,test,Give me the parent of the child of Narapati I of Ava and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity WHERE {
  # Find the child of Narapati I of Ava
  ?child dbo:parent dbr:Narapati_I_of_Ava .
  
  # Find the parent of this child (should be Narapati I or another relevant figure)
  ?parent dbo:child ?child .

  # Find the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?predecessor dbo:successor dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .
  
  # The common entity should satisfy both conditions
  FILTER (?parent = ?commonEntity)
  FILTER (?predecessor = ?commonEntity)
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
328,56,test,"Give me the commander in Eastern Front (World War II) and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
    ?person a dbo:Person .
    ?person dbo:commander ?easternFrontRole .
    ?person dbo:awardeeOf dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
    ?person dbo:leaderOf ?governmentAgency .
    ?person dbo:officeHolder .
    ?person dbo:politician .
    
    OPTIONAL {
        ?person dbo:relatedTo dbr:Gustav_Jonson .
    }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
534,17,test,"Give me the birth place of Garret FitzGerald and headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/owner> ?v3 . ?v3 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?headquarters WHERE {
  # Part 1: Birth place of Garret FitzGerald
  dbr:Garrett_FitzGerald dbo:birthPlace ?birthPlace .

  # Part 2: Venue and owner of the 2012 Pro12 Grand Final
  OPTIONAL {
    ?event dbo:eventLocation ?venue .
    FILTER (str(?event) = ""Pro12_2011-12_season"")
    ?venue a dbo:SportsVenue ;
           a dbo:ArchitecturalStructure .

    # Find the owner of the venue
    ?venue dbo:owner ?owner .

    # Find the headquarters of the owner
    ?owner dbo:headquarters ?headquarters .
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
659,65,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Arthur Wellesley's military unit ""Polish Horse""
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:militaryUnit dbr:Polish_Horse .
  
  # Wars commanded by Arthur Wellesley
  ?war dbo:commander dbr:Arthur_Wellesley_1st_Duke_of_Wellington ;
       a dbo:MilitaryConflict .

  # Rutger Jan Schimmelpenninck's involvement in societal events and military conflicts
  ?event dbo:participant dbr:Rutger_Jan_Schimmelpenninck ;
         (a dbo:SocietalEvent ; a dbo:MilitaryConflict) .
  
  # Find the intersection of wars involving both Arthur Wellesley and Rutger Jan Schimmelpenninck
  ?war ?p ?event .

  # Retrieve the commander of the war
  ?war dbo:commander ?commander .
}
```",7,14,8,3,3,3,3,71,0,0,15,0,0.0,0
994,59,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonArtist WHERE {
  # Step 1: Identify Meshuggah as Fredrik Thordendal's band
  dbr:Fredrik_Thordendal dbo:member dbr:Meshuggah .

  # Step 2: Find associated musical artists of Meshuggah
  dbr:Meshuggah dbo:associatedBand ?meshuggahArtist .
  
  # Step 3: Identify Watchtower and find its associated musical artists
  dbr:Watchtower dbo:associatedBand ?watchtowerArtist .

  # Step 4: Determine the common artist between Meshuggah and Watchtower
  VALUES ?commonArtist { ?meshuggahArtist ?watchtowerArtist }
}
```",6,10,7,3,2,3,3,71,0,0,5,0,0.0,0
712,20,test,"Give me the resting place of the awardee of the show of Soviet Union and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  ?person a dbo:Person ;
          dbo:honoraryTitle dbr:Hero_of_the_Soviet_Union ;
          dbo:deathPlace dbr:Moscow ; # Assuming the person died in Moscow
          dbo:militaryService dbr:Red_Army . # Assuming involvement with Red Army

  OPTIONAL { ?person dbo:restingPlace ?restingPlace }
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
435,28,test,"Give me the work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v5 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
# Query to find the work of Jónína Leósdóttir
SELECT ?work WHERE {
  wd:Q123456 dbo:author ?person .
  ?person rdfs:label ""Jónína Leósdóttir""@en .
  ?person dbo:work ?work .
}

# Query to find the time zone region of Bombali Shebora Chiefdom
SELECT ?timeZone WHERE {
  wd:Q789012 dbo:location ?place .
  ?place rdfs:label ""Bombali Shebora Chiefdom""@en .
  ?place dbo:timeZone ?timeZone .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Jónína Leósdóttir and `wd:Q789012` with the DBpedia ID for Bombali Shebora Chiefdom. These IDs need to be looked up in DBpedia.",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
534,18,test,"Give me the birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex and headquarter of the owner of RDS Arena.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v3 <http://dbpedia.org/ontology/headquarter> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  # Step 1: Identify the native politician of Essex
  ?essexPolitician a dbo:Person ;
                  dbo:nationality dbr:Essex ;
                  dbo:occupation dbo:Politician .

  # Step 2: Determine the owner of RDS Arena
  ?rdsArenaOwner a dbo:Organization ;
                 dbo:location dbr:RDS_Arena .

  # Step 3: Find the headquarter location of the owner
  ?headquartersLocation dbo:headquarters ?rdsArenaOwner .

  # Step 4: Identify the child who is a politician and office holder
  ?child a dbo:Person ;
         dbo:birthPlace ?birthPlace ;
         dbo:parent ?essexPolitician ;
         (dbo:occupation dbo:Politician ; dbo:officeHolder) .

}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
339,18,test,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
# Step 1: Find a child of Grand Duchess Elena Vladimirovna of Russia
SELECT ?child WHERE {
    wd:Q123456 dbo:child ?child .
}

# Step 2: Find the father of that child
SELECT ?father WHERE {
    ?child dbo:father ?father .
}

# Step 3: Identify Frederick VIII of Denmark's predecessor
SELECT ?predecessor WHERE {
    wd:Q789012 dbo:predecessor ?predecessor .
}

# Step 4: Find a child of the predecessor
SELECT ?predecessorChild WHERE {
    ?predecessor dbo:child ?predecessorChild .
}

# Step 5: Find a grandchild of the predecessor
SELECT ?grandchild WHERE {
    ?predecessorChild dbo:child ?grandchild .
}

# Final step: Combine results to find the father of the child from step 1 and the grandchild from step 5
SELECT DISTINCT ?father ?grandchild WHERE {
    wd:Q123456 dbo:child ?child .
    ?child dbo:father ?father .

    wd:Q789012 dbo:predecessor ?predecessor .
    ?predecessor dbo:child ?predecessorChild .
    ?predecessorChild dbo:child ?grandchild .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Grand Duchess Elena Vladimirovna of Russia and `wd:Q789012` with the ID for Frederick VIII of Denmark. The queries assume these IDs are known.",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
666,20,test,"Give me the figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England and player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/property/nickname> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?manager a dbo:SportsManager ;
           foaf:name ""Leonid Slutsky""@en .
  
  ?team a dbo:SoccerClub, dbo:SportsTeam ;
        dbo:manager ?manager .

  ?team rdfs:label ?clubLabel .
  
  OPTIONAL { 
    ?team dbo:nickname ?nickname .
  }
}
```",6,12,7,3,2,3,2,20,0,0,2,0,0.0,0
16,67,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find actor of ""Unnatural""
  ?actor dbo:profession dbr:Actor ;
         dbo:workFeaturedIn dbr:Unnatural_(TV_series) .

  # Find Ted McGinley's spouse
  dbr:Ted_McGinley dbo:spouse ?spouse .

  # Find alumnus of Ohio State University with a specific birth name
  ?alumnus dbo:almaMater dbr:Ohio_State_University ;
           foaf:name ?birthName .

  # Combine conditions to find the person who matches all criteria
  ?person dbo:profession dbr:Actor ;  # Profession is Actor
          dbo:spouse dbr:Ted_McGinley .  # Spouse of Ted McGinley

  FILTER (?actor = ?person) .
  FILTER EXISTS { ?person foaf:name ?birthName } .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,52,test,"Give me the war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query for Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?war ?fame 
WHERE {
    wd:Q123456 dbo:participatedIn ?war .
    FILTER(CONTAINS(LCASE(STR(?war)), ""peninsular war"")) .
    OPTIONAL { wd:Q123456 dbo:famousFor ?fame . }
}
```

```sparql
# Query for Carl Pontus Gahn
SELECT ?birthName ?war 
WHERE {
    wd:Q654321 foaf:name ?birthName .
    FILTER(CONTAINS(LCASE(STR(?birthName)), ""carl pontus gahn"")) .
    OPTIONAL { wd:Q654321 dbo:participatedIn ?war . }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and `wd:Q654321` with that for Carl Pontus Gahn. These identifiers can be found by searching their names in DBpedia.",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
328,60,test,"Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee WHERE {
  # Step 1: Identify Gustav Jonson as an office holder and politician
  ?gustavJonson a dbo:OfficeHolder ;
                dbo:office ?office ;
                foaf:name ""Gustav Jonson""@en .

  # Step 2: Find the government agency he leads
  ?office dbo:head ?governmentAgencyLeader .
  
  # Step 3: Identify the commander awarded for the Volcano and Ryukyu Islands campaign
  ?campaign dbr:Volcano_and_Ryukyu_Islands_campaign ;
           dbo:awardee ?awardee .

  # Step 4: Link the awardee to the government agency leader
  ?governmentAgencyLeader foaf:name ?leaderName .
  
  FILTER(?gustavJonson = ?governmentAgencyLeader)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
391,60,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?birthPlace WHERE {
  # Step 1: Find the nickname for Jackson, Tennessee
  ?city rdfs:label ""Jackson, Tennessee""@en .
  ?city dbo:nickname ?nickname .

  # Step 2: Identify an actor with this nickname and who acted in a movie that is also a work and television show
  ?actor dbo:nickName ?nickname ;
         dbo:birthPlace ?birthPlace ;
         dbo:film ?movie .
  
  ?movie rdf:type dbo:Film ;
         dbo:workType dbr:Television_show .

  # Filter to ensure the actor's film is both a movie and a television show
  FILTER EXISTS { ?movie dbo:workType dbr:Movie }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
184,46,test,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of Archduke Joseph Karl of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Step 1: Identify Archduke Joseph Karl of Austria
  dbr:Archduke_Joseph_Karl_of_Austria dbo:child ?child1 .

  # Step 2: Find his child's child
  ?child1 dbo:child ?grandchild .

  # Step 3: Locate a landmark at elevation 96.0 that is in a settlement
  ?landmark dbo:elevation ""96.0""^^xsd:float ;
            dbo:location ?settlement .
  
  FILTER (dbo:Settlement ?settlement) .

  # Step 4: Find the native of this settlement
  ?native dbo:nativeOf ?settlement .

  # Step 5: Identify the parent of the native
  ?native dbo:parent ?parent .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,53,test,Give me the spouse of the father of Merneptah and parent of Henuttawy (19th dynasty) and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Merneptah's father
  ?merneptah dbo:father ?father .
  
  # Step 2: Find the spouse of Merneptah's father
  ?father dbo:spouse ?spouse .

  # Step 3: Verify that this spouse is a parent of Henuttawy (19th dynasty)
  ?spouse dbo:child dbr:Henuttawy_(19th_dynasty) .

  # Additional verification with Amun-her-khepeshef
  OPTIONAL {
    ?amunHerKhepeshef dbo:spouse ?otherSpouse .
    ?otherSpouse dbo:child ?child .
    ?child dbo:parent ?spouse .
  }

  FILTER EXISTS { ?merneptah dbr:Merneptah }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,46,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceOfFather ?birthPlaceOfCommander
WHERE {
  # Part 1: Yūki Hideyasu's father's death place
  dbr:Yūki_Hideyasu dbo:father ?father .
  ?father dbo:deathPlace ?deathPlaceOfFather .

  # Part 2: Saitō Hajime's commander's birth place
  dbr:Saitō_Hajime dbo:militaryConflict ?conflict .
  ?conflict rdf:type dbo:MilitaryConflict ;
            dbo:eventType ?eventType1, ?eventType2 .
  FILTER(?eventType1 = dbo:Event && ?eventType2 = dbo:SocietalEvent) .

  ?conflict dbo:commander ?commander .
  ?commander dbo:birthPlace ?birthPlaceOfCommander
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
659,35,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?schimmelpenninckRole ?wellingtonRole
WHERE {
  # Rutger Jan Schimmelpenninck's military force and role
  OPTIONAL { 
    dbr:Rutger_Jan_Schimmelpenninck dbo:militaryForce ?militaryForce .
    ?militaryForce dbo:commander ?schimmelpenninckRole .
    FILTER(?schimmelpenninckRole = dbr:Rutger_Jan_Schimmelpenninck)
  }

  # Arthur Wellesley, 1st Duke of Wellington's military force and role
  OPTIONAL { 
    dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:militaryForce ?militaryForce .
    ?militaryForce dbo:commander ?wellingtonRole .
    FILTER(?wellingtonRole = dbr:Arthur_Wellesley_1st_Duke_of_Wellington)
  }
}
```",4,7,5,2,2,3,3,71,0,0,38,0,0.0,0
659,48,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderRole ?officeHolder ?militaryConflict
WHERE {
  # Rutger Jan Schimmelpenninck's resource
  dbr:Rutger_Jan_Schimmelpenninck dbo:role ?commanderRole .
  
  OPTIONAL {
    dbr:Rutger_Jan_Schimmelpenninck dbo:officeHolder ?officeHolder .
    FILTER regex(str(?officeHolder), ""Kingdom of Ireland"", ""i"")
  }
  
  OPTIONAL {
    dbr:Rutger_Jan_Schimmelpenninck dbo:militaryConflict ?militaryConflict .
    FILTER (regex(str(?militaryConflict), ""societal event|event|military conflict"", ""i""))
  }
}
```",5,9,6,3,2,3,3,71,0,0,40,0,0.0,0
64,8,test,"Give me the alma mater of Jovan Hristić and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater ?country
WHERE {
  # Find Jovan Hristić's alma mater
  ?person dbo:name ""Jovan Hristić""@en .
  ?person dbo:almaMater ?almaMater .

  # Find a country in the Central European Time region
  ?country rdf:type dbo:Country ;
           dbp:timeZone ""Central European Time"" .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
232,41,test,"Give me the native of London and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?conflict WHERE {
  # Sean Pertwee's details
  dbr:Sean_Pertwee a dbo:Actor ;
                   dbo:birthPlace dbr:London ;
                   dbo:childOf ?parent .

  # Parent information
  ?parent foaf:name ""John Devon Roland Pertwee""@en .

  # Films and military conflicts associated with Sean Pertwee
  OPTIONAL { dbr:Sean_Pertwee dbo:filmRole ?film . }
  OPTIONAL { dbr:Sean_Pertwee dbo:militaryConflict ?conflict . }

  FILTER(?film != '' || ?conflict != '')
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
92,62,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band of Joseph Michael and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v6 <http://dbpedia.org/property/birthName> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Actor of ""Return to Nuke 'Em High Volume 1"" who is also a musical artist
  ?actor dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?actor dbo:occupation dbr:Actor .
  ?actor dbo:occupation dbr:MusicalArtist .

  # Joseph Michael's band
  ?joseph dbo:memberOf dbr:Nevermore .
  
  # Reference to Nevermore (2006 film)
  ?film dbo:title ""Nevermore""@en ;
        dbo:relatedBand dbr:Nevermore .

  # Ensure the artist is associated with all conditions
  FILTER (?actor = ?joseph && ?artist = ?bandMember)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
959,25,test,Give me the native of Japan and manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry ?teamManaged
WHERE {
  VALUES ?takashiSekizuka { dbr:Takashi_Sekizuka }
  
  ?takashiSekizuka dbo:nationality ?nativeCountry .
  ?takashiSekizuka dbo:manager ?teamManaged .
}
```",3,3,4,2,2,3,3,71,0,0,6,0,0.0,0
427,61,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthName ?prodiParty ?father ?fatherParty WHERE {
  # Part 1: Romano Prodi's birth name and party
  {
    ?prodi a dbo:Person ;
          foaf:name ""Romano Prodi"" ;
          dbo:birthName ?birthName ;
          dbo:party ?prodiParty .
    FILTER EXISTS { ?prodi dbo:officeHolder . }
    FILTER EXISTS { ?prodi dbo:politician . }
  }

  # Part 2: Father of an MIT alumnus and his party
  {
    ?alumnus a dbo:Person ;
             dbp:almaMater <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    ?father dbo:child ?alumnus .
    ?father a dbo:Person ;
            dbo:party ?fatherParty .
  }
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
626,18,test,"Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?commanderInConflict WHERE {
  # Find the award received by Aleksey Petrovich Yermolov
  dbr:Aleksey_Petrovich_Yermolov dbo:award ?award .
  
  # Find who received this same award
  ?awardee dbo:award ?award .

  # Find the commander in the Battle of Paris (1814)
  dbr:Battle_of_Paris_(1814) dbo:commander ?battleCommander .

  # Find a military conflict commanded by the same person
  ?conflict dbo:commander ?battleCommander .
  
  # Ensure that the awardee is also the commander in some conflict
  FILTER (?awardee = ?commanderInConflict)
}
```",5,6,6,3,2,3,2,20,0,0,23,0,0.0,0
959,48,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of Takashi Sekizuka.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?almaMaterName
WHERE {
  ?person dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1958)
  
  ?person dbo:managerOf dbr:Takashi_Sekizuka .

  ?person dbo:almaMater ?almaMater .
  
  ?almaMater rdf:type dbo:Organization ;
             dbo:country dbr:Japan ;
             rdf:type dbo:University, dbo:EducationalInstitution .
             
  ?almaMater rdfs:label ?almaMaterName .
  FILTER (lang(?almaMaterName) = 'en')
}
```",5,9,6,3,2,3,3,71,0,0,3,0,0.0,0
754,20,test,Give me the parent of the child of the reference to Ram Khamhaeng the Great and parent of the parent of the parent of Min Linka.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonAncestor WHERE {
  # Step 1: Find Ram Khamhaeng the Great
  ?ramKhamhaeng a dbo:Person ;
                rdfs:label ""Ram Khamhaeng the Great""@en .

  # Step 2: Find the child of Ram Khamhaeng the Great
  ?child dbo:parent ?ramKhamhaeng .

  # Step 3: Find the parent of this child
  ?parentOfChild dbo:child ?child .

  # Step 4: Find Min Linka
  ?minLinka a dbo:Person ;
            rdfs:label ""Min Linka""@en .

  # Step 5: Find the grandparent of Min Linka
  ?parentOfMinLinka dbo:child ?minLinka .
  ?grandparentOfMinLinka dbo:child ?parentOfMinLinka .

  # Step 6: Find the great-grandparent of Min Linka
  ?greatGrandparentOfMinLinka dbo:child ?grandparentOfMinLinka .

  # Step 7: Find common ancestor
  ?commonAncestor dbo:child ?parentOfChild .
  ?commonAncestor dbo:child ?greatGrandparentOfMinLinka .
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
528,62,test,"Give me the force of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile and war of the commander in the work of --01-09.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?event WHERE {
  ?campero a dbo:Person ;
           foaf:name ""Narciso Campero"" .
  
  ?campero dbo:militaryCommanderFor ?militaryForce .

  ?event dbo:location dbr:Chile ;
         dbo:date ?date ;
         dbo:participatedIn ?militaryForce .

  FILTER (STRSTARTS(STR(?date), ""01-09""))
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
767,70,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v7 <http://dbpedia.org/property/governor> ?v0 . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v4 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/state> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fictionalCharacter ?administrationEntity ?settlement
WHERE {
  # Find Matthew Burland's fictional character
  ?person rdfs:label ""Matthew Burland""@en .
  ?person dbo:fictionalCharacter ?fictionalCharacter .

  # Find George Kilbon Nash's alma mater and its administration
  ?nashPerson rdfs:label ""George Kilbon Nash""@en .
  ?nashPerson dbo:almaMater ?almaMater .
  ?almaMater dbo:administration ?administrationEntity .

  # Identify the settlement in the administration of Green
  ?greenAdministration dbr:Green dbo:administration ?administrationEntity .
  ?settlement a dbo:Settlement ;
              dbo:partOf ?administrationEntity .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
392,25,test,"Give me the province of Schio and region of the time zone, that is a sports event, of Aguilar de Segarra and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
# Query for the province of Schio
SELECT ?province WHERE {
  ?schioloc dbp:location ""Schio"" .
  ?schioloc dbo:locatedIn ?province .
}

UNION

# Query for the time zone and sports event of Aguilar de Segarra
SELECT ?timeZone, ?sportsEvent WHERE {
  ?aguilloc dbp:location ""Aguilar de Segarra"" .
  ?aguilloc dbo:timeZone ?tz .
  ?tz rdfs:label ?timeZone .
  
  OPTIONAL { 
    ?event dbo:location ?aguilloc ;
           a dbo:SportEvent .
    ?event rdfs:label ?sportsEvent .
  }
}

UNION

# Query for the region of Central European Time
SELECT ?region WHERE {
  ?cet dbp:name ""Central European Time"" .
  ?cet dbo:timeZoneForRegion ?region .
}

UNION

# Query for a country in the region associated with CET
SELECT ?country WHERE {
  ?cet dbp:name ""Central European Time"" .
  ?cet dbo:timeZoneForRegion ?region .
  ?country dbo:locatedIn ?region ;
           a dbo:Country .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
360,23,test,"Give me the reference to the author of Blinded by the Light and writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
# Query to get the author of ""Blinded by the Light""
SELECT ?author WHERE {
  ?song dbo:lyricist ?author .
  ?song rdfs:label ""Blinded by the Light""@en .
  FILTER (lang(?song) = 'en')
}

UNION

# Query to get the writer of the album ""Work"" by Dave Flett
SELECT ?writer WHERE {
  ?album dbo:creator ?writer ;
         rdfs:label ""Work (Dave Flett album)""@en .
  FILTER (lang(?album) = 'en')
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
547,45,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?restingPlace WHERE {
  # Gerald Graham's resting place based on the award he received
  OPTIONAL {
    VALUES ?award { dbr:Order_of_the_Bath }
    ?gGraham dbo:recipientOf ?award .
    ?gGraham a dbo:Person ;
             rdfs:label ?name ;
             dbo:deathPlace ?restingPlace .
    FILTER (LANG(?name) = 'en')
  }

  # James Burton the Egyptologist's resting place
  OPTIONAL {
    ?jBurton a dbo:Egyptologist ;
             rdfs:label ?name ;
             dbo:deathPlace ?restingPlace .
    FILTER (?jBurton = dbr:James_Burton_(Egyptologist))
    FILTER (LANG(?name) = 'en')
  }

  # Simon Cadell's resting place
  OPTIONAL {
    ?sCadell a dbo:Person ;
             rdfs:label ?name ;
             dbo:deathPlace ?restingPlace .
    FILTER (?sCadell = dbr:Simon_Cadell)
    FILTER (LANG(?name) = 'en')
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
391,51,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find Michael Ballhaus's claim to fame (a film he directed)
  dbr:Michael_Ballhaus dbo:director ?fameWork .
  
  # Get the actors of this work
  ?fameWork dbo:starring ?actor .

  # Find a movie that is also a television show and a work
  ?movieWork rdf:type dbo:Film ;
             rdfs:label ?workLabel .
  
  FILTER(CONTAINS(LCASE(?workLabel), ""and tv series"") || CONTAINS(LCASE(?workLabel), ""tv film""))

  # Get the actors of this movie/television show/work
  ?movieWork dbo:starring ?actor .

}
```",5,9,6,3,2,3,3,71,0,0,11,0,0.0,0
391,59,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?native WHERE {
  ?sherry a dbo:Person ;
          foaf:surname ""Hormann"" .
  
  ?sherry dbo:spouse ?spouse .

  ?work dbo:actor ?actor ;
        rdfs:label ?claimToFameLabel .

  FILTER(CONTAINS(LCASE(?claimToFameLabel), LCASE(""{{Sherry Hormann's spouse's claim to fame}}"")))

  ?actor rdfs:label ?actorLabel .
  
  OPTIONAL { 
    ?actor dbo:nickName ?nickname .
    FILTER(CONTAINS(LCASE(STR(?nickname)), ""jackson, tennessee""))
  }

  ?actor dbo:birthPlace ?native .
}
```

Note: The placeholder `{{Sherry Hormann's spouse's claim to fame}}` should be replaced with the actual title of the work once identified.",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,66,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley and person born as the birth name of the alumnus of Ohio State University.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professional WHERE {
  # Step 1: Find Satomi Ishihara's profession
  ?satomi a dbo:Person ;
          foaf:name ""Satomi Ishihara""@en .
  ?satomi dbo:profession ?profession .

  # Step 2: Find Ted Martin McGinley's spouse
  ?ted a dbo:Person ;
       foaf:name ""Ted Martin McGinley""@en .
  ?ted dbo:spouse ?spouse1 .

  # Step 3: Find an Ohio State University alumnus and their birth name
  ?alumnus a dbo:Person ;
           dbp:almaMater <http://dbpedia.org/resource/Ohio_State_University> .
  ?alumnus dbo:birthName ?birthName .

  # Step 4: Find the person with that birth name
  ?person a dbo:Person ;
          foaf:name ?birthName .
  
  # Step 5: Ensure the professional matches both conditions
  ?spouse2 a dbo:Person ;
           foaf:name ?birthName .
  ?ted dbo:spouse ?spouse2 .

  # Final condition to match profession and spouse
  ?professional a dbo:Person ;
                dbo:profession ?profession ;
                (dbo:spouse|<http://dbpedia.org/ontology/spouse>) ?spouse1, ?spouse2 .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
421,22,test,Give me the native of the birthplace of Samir Bekrić and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native ?band ?award
WHERE {
  # Step 1: Identify Samir Bekrić and his birthplace
  dbr:Samir_Bekrić a dbo:Person ;
                   dbo:birthPlace ?birthPlace .

  # Step 2: Find another person (native) from the same birthplace
  ?native a dbo:Person ;
          dbo:birthPlace ?birthPlace ;
          rdfs:label ?nativeLabel .
  
  FILTER(LANG(?nativeLabel) = 'en')

  # Step 3: Check if this native is a band member of an awardee
  ?bandMember a dbo:Band ;
              dbo:member ?native ;
              dbo:award ?award .

  # Ensure the band has received awards
  FILTER EXISTS { ?bandMember dbo:award ?award }
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
54,30,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?person dbo:child dbr:Thihapate_of_Mohnyin ;
          dbo:parent dbr:Thinkhaya_of_Pagan ;
          dbo:spouse ?spouse .
  
  ?person dbo:parent dbr:Thado_Minsaw_of_Prome .

  FILTER EXISTS { ?person a dbo:Monarch . }
  FILTER EXISTS { ?person a dbo:OfficeHolder . }

  ?officeHolderPosition dbo:positionHeldBy ?person ;
                       dbo:predecessor ?predecessor .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
378,53,test,Give me the war of Joaquín Blake and claim to fame of the commander in Great Siege of Gibraltar and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
# Query for Joaquín Blake's involvement in a war
SELECT ?war WHERE {
  dbp:Joaqu%C3%ADn_Blake dbo:participatedIn ?war .
}

# Query for the commander of the Great Siege of Gibraltar and their claim to fame
SELECT ?commander ?claimToFame WHERE {
  dbp:The_Great_Siege_of_Gibraltar dbo:commandedBy ?commander ;
                                     dbo:notableFor ?claimToFame .
}

# Query for Carl Pontus Gahn's birth name and associated war
SELECT ?birthName ?war WHERE {
  dbp:Carl_Pontus_Gahn foaf:name ?birthName ;
                       dbo:participatedIn ?war .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
801,59,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v5 <http://dbpedia.org/property/writer> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find the resource for ""The Shadow"" as an artist
  ?artist a dbo:MusicalArtist ;
          dbo:alias dbr:The_Shadow .
  
  # Identify the true self or alter ego of The Shadow
  ?trueSelf dbo:alterEgoOf ?artist .

  # Find works that are both songs and musical works by this artist
  ?work dbo:creator ?trueSelf ;
        a dbo:Songs ;
        a dbo:MusicalWork .
  
  # Identify the producer of these works
  ?work dbo:producer ?producer .
}
```",6,10,7,3,2,3,3,71,0,0,473,0,0.0,0
767,68,test,"Give me the reference to the alter ego of Black Hood and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . ?result <http://dbpedia.org/ontology/state> ?v4 . ?v7 <http://dbpedia.org/property/governor> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alterEgo ?settlement ?writer ?almaMater
WHERE {
  # Alter ego of Black Hood (Batman)
  dbr:Bruce_Wayne dbo:alias dbr:Batman ;
                  dbo:birthPlace ?place1 .

  # Entity in administration that is a settlement
  ?person dbo:currentResidence ?settlement .
  FILTER EXISTS { ?settlement a dbo:Settlement }

  # Writer of ""Where It's At"" by Dustin Lynch
  dbr:""Where_It's_At_(Dustin_Lynch_song)"" dbo:lyricist ?writer .

  # Alma mater of George Kilbon Nash (Princeton University)
  dbr:George_Kilbon_Nash dbo:almaMater dbr:Princeton_University .
  ?adminRole dbo:administrator ?person ;
             dbo:location dbr:Princeton_University .

  # Combine elements
  FILTER (?alterEgo = dbr:Batman && ?writer IN (dbr:Dallas_Davidson, dbr:Ashley_Gorley, dbr:Ben_Hayslip) &&
          ?almaMater = dbr:Princeton_University)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
801,66,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?writer 
WHERE {
  # Find the album
  dbr:What_U_See_Is_What_U_Get dbo:albumProducer ?producer .
  
  # Filter for producer with alter ego ""The Shadow""
  OPTIONAL { ?producer rdfs:label ?label . FILTER(CONTAINS(LCASE(?label), ""the shadow"")) }
  
  # Ensure the producer is a professional musical artist
  ?producer a dbo:MusicalArtist .

  # Find writers of songs on this album who are also musical artists
  dbr:What_U_See_Is_What_U_Get dbo:song ?song .
  ?song dbo:lyricist ?writer .
  
  # Ensure the writer is a professional musical artist
  ?writer a dbo:MusicalArtist .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
378,32,test,Give me the war of the commander in Peninsular War and war of the person born as Carl Pontus Gahn.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfCommander ?warOfGahn WHERE {
  # Find the war commanded by Arthur Wellesley (Duke of Wellington)
  dbr:Arthur_Wellesley dbo:commanded ?warOfCommander .
  
  # Find Carl Pontus Gahn's birth information
  dbr:C_P_Gahn dbo:birthDate ?birthDate .

  # Check if there are any wars associated with Carl Pontus Gahn
  OPTIONAL {
    ?person dbo:birthDate ?birthDate ;
            dbo:occupation ?occupation .
    FILTER (?occupation = ""Chemist"" || ?occupation = ""Scientist"")
    ?person dbo:participatedIn ?warOfGahn .
  }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
9,23,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater
WHERE {
  ?organisation a dbo:Organisation ;
                dbp:location ""Belfast"" .
  
  ?mayor dbo:positionHeld ?organisation ;
         a dbo:Politician .

  ?mayor dbo:almaMater ?almaMater .
}
```",3,5,4,3,1,3,3,71,0,0,10,0,0.0,0
328,53,test,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson ;
          dbo:commanderOf dbr:Eastern_Front_(World_War_II) ;
          dbo:leaderOf ?office ;
          dbo:awardReceived ?award .
  
  ?award dbo:campaign ?campaign .
  FILTER (?campaign IN (dbr:Battle_of_the_Volcano_Islands, dbr:Battle_of_the_Ryukyu_Islands))
  
  ?person rdfs:label ?name .
  FILTER(LANG(?name) = 'en')
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
492,70,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person
WHERE {
  # Joseph C. Satterthwaite's role
  dbr:Joseph_C._Satterthwaite dbo:positionHeldBy ?assistantSecretaryRole .
  
  # Person decedent at the work of Assistant Secretary of State for African Affairs
  ?assistantSecretaryRole dbo:decedentAt ?person .

  # Person commander in Battle of Verdun
  ?person dbo:commanderIn dbr:Battle_of_Verdun .

  # Khemis Miliana District's capital
  dbr:Khemis_Miliana_District dbo:capital ?capital .
  
  # Person decedent at the capital of Khemis Miliana District
  ?person dbo:decedentAt ?capital .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
184,70,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?individual WHERE {
  # Step 1: Find Archduke Ladislaus Philipp of Austria's parent who is a royalty
  ?ladislaus a dbo:Person ;
             dbo:child ?parentLadislaus .
  
  FILTER EXISTS { ?parentLadislaus dbo:royalty . }
  
  # Step 2: Find the child of the child of this parent
  ?parentLadislausChild a dbo:Person ;
                        dbo:child ?grandchildLadislaus .
  
  # Step 3: Identify Archduchess Margaret of Austria's parent
  dbr:Archduchess_Margaret_of_Austria_born_1925 a dbo:Person ;
                                                 dbo:child ?parentMargaret .
  
  # Step 4: Find the child of the parent of her parent
  ?parentMargaretParent a dbo:Person ;
                        dbo:child ?grandparentMargaret .
  
  ?grandparentMargaretChild a dbo:Person ;
                            dbo:child ?greatGrandchildMargaret .

  # Step 5: Identify the native of Budapest
  ?budaNative a dbo:Person ;
              dbo:birthPlace dbr:Budapest .

  # Find common individual fitting all criteria
  FILTER (?grandchildLadislaus = ?greatGrandchildMargaret && ?greatGrandchildMargaret = ?budaNative)
  
  BIND(?greatGrandchildMargaret AS ?individual)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
492,58,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v1 <http://dbpedia.org/ontology/capital> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName WHERE {
  ?person a dbo:Person ;
          rdfs:label ?personName ;
          dbo:deceasedAt dbr:French_Algeria ;
          dbo:deceasedAt ?capitalCity .
  
  ?district dbo:capital ?capitalCity ;
            dbo:country dbr:Algeria .

  ?war dbo:event dbr:Frédéric-Georges_Herr ;
       dbo:militaryConflict ?warEvent ;
       dbo:commander ?person .

  FILTER (CONTAINS(LCASE(?personName), ""frédéric-georges herr""))
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
617,50,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
  # Step 1: Identify Antiochus IV Epiphanes
  ?antiochusIV a dbo:Person ;
               rdfs:label ""Antiochus IV Epiphanes""@en .

  # Step 2: Find his successor
  ?successor dbo:successor ?antiochusIV .

  # Step 3: Identify the child of the successor
  ?child dbo:child ?successor .

  # Step 4: Check if the child is royalty
  ?child a dbo:Royalty .

  # Step 5: Find the spouse of this royal child
  ?spouse dbo:spouse ?child .

  # Step 6: Identify parent of Antiochus IV Epiphanes' child
  ?antiochusChild dbo:child ?antiochusIV .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
345,18,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1978-09-15 and figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.","SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?team ?nickname WHERE {
  ?person a dbo:Person ;
          dbo:birthDate ""1978-09-15""^^xsd:date ;
          rdfs:label ""Armando Heeb""@en .
  
  ?person dbo:soccerPlayer true ;
          dbo:soccerManager true .

  OPTIONAL { 
    ?person dbo:team ?team .
  }

  OPTIONAL {
    ?nickname rdfs:label ?nickLabel ;
              a dbo:SportsClub, dbo:Organization .
    ?person dbp:nickname ?nickname .
  }
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
528,59,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of the commander in the work of --01-09.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?commander WHERE {
  ?war a dbo:War ;
       dbo:location dbr:Chile .
  
  OPTIONAL { 
    ?militaryForce dbo:militaryForceOf ?war ;
                   dbo:commander ?commander .
  }
}
```",6,7,7,3,2,3,3,71,0,0,14,0,0.0,0
281,50,test,"Give me the war of the profession, that is a military unit, of Heather Roy and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?birthPlaceCountry WHERE {
  # Heather Roy's profession or military unit
  OPTIONAL { 
    dbr:Heather_Roy dbo:occupation ?profession .
  }
  
  # Leader of the 1962 New South Wales state election
  ?election dbo:leader ?politician .

  FILTER (str(?election) = ""1962_New_South_Wales_state_election"")

  # Politician's birthplace country
  OPTIONAL {
    ?politician dbo:birthPlace ?birthPlace .
    ?birthPlace dbo:country ?birthPlaceCountry .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
281,52,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  # Bob Heffron's birth place that is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Wars involving the New Zealand Army
  dbr:New_Zealand_Army dbo:participatedInWar ?nzWar .

  # Jonathon Band's award and related war
  dbr:Jonathon_Band dbo:award ?award .
  ?award dbo:relatedTo ?bandWar .

  # Find common country between Bob Heffron's birthplace and the wars
  FILTER (?birthPlace = ?country)
  OPTIONAL { ?nzWar dbo:location ?country }
  OPTIONAL { ?bandWar dbo:location ?country }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,48,test,"Give me the leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader ?awardee WHERE {
  # Find the office Joseph Stalin led
  ?office dbo:leader dbr:Joseph_Stalin .
  
  # Identify the award related to the Volcano and Ryukyu Islands campaign
  ?award dbo:name ?awardName ;
         dbo:recipient ?awardee .

  FILTER CONTAINS(LCASE(?awardName), ""volcano"") &&
        CONTAINS(LCASE(?awardName), ""ryukyu islands"")

  # Ensure the awardee is linked to the award
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
391,71,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ?v1 . ?v7 <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v8 <http://dbpedia.org/property/starring> ?result . ?v8 <http://dbpedia.org/property/starring> ?v7 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v4 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Find the nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
    ?place rdf:type dbo:PopulatedPlace ;
           rdfs:label ""Jackson, Tennessee""@en .
    ?place dbo:nickname ?nickname .
}

# Step 2: Identify the actor known by this nickname and acted in a movie that is also a work and television show
SELECT DISTINCT ?actor WHERE {
    ?movie rdf:type dbo:Film ;
           dbo:starring ?actor ;
           rdfs:label ?nicknameLabel .
    FILTER(CONTAINS(LCASE(?nicknameLabel), LCASE(?nickname))) # Assuming the nickname matches exactly or partially

    ?movie rdf:type dbo:TelevisionProgram .

    ?actor rdf:type dbo:Actor .
}

# Step 3: Find Sherry Hormann's spouse
SELECT DISTINCT ?spouse WHERE {
    ?person rdfs:label ""Sherry Hormann""@en ;
            dbo:spouse ?spouse .
}

# Step 4: Identify the claim to fame of this spouse
SELECT DISTINCT ?work WHERE {
    ?spouse dbo:claimToFame ?work .
    ?work rdf:type dbo:Film ; # Assuming it's a film, but could be other types as well
          rdfs:label ?workLabel .
}

# Step 5: Find the native place of the actor from step 2
SELECT DISTINCT ?nativePlace WHERE {
    ?actor dbo:nativeCountry ?country ;
           dbo:birthPlace ?nativePlace .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
659,24,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  ?regiment a dbo:MilitaryUnit ;
            rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  
  ?regiment dbp:commander ?commander .

  ?conflict a dbo:MilitaryConflict ;
           dbo:participatedIn ?regiment ;
           dbo:date ?date .

  FILTER (
    EXISTS {
      ?napoleonicWar a dbo:MilitaryConflict ;
                     rdfs:label ""Napoleonic Wars""@en .
      ?conflict dbo:partOf ?napoleonicWar .
    }
  )
}
```",3,5,4,2,2,3,3,71,0,0,29,0,0.0,0
232,62,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of London and child of the person born as the birth name of Jon Pertwee.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Identify Jon Pertwee's child who is an actor, narrator, and producer from London
  ?child dbo:parent dbr:Jon_Pertwee ;
         dbo:birthPlace dbr:London ;
         dbo:profession ?prof1 .
  FILTER(?prof1 IN (dbr:Actor, dbr:Narrator, dbr:Producer))
  
  # Find the claim to fame involving a film and a military conflict
  ?child dbo:claimToFame ?fame .
  ?fame dbo:film ?film ;
        dbo:militaryConflict ?conflict .

  # Extract actor involved in both the film and the military conflict
  ?actor dbo:actedIn ?film ;
         dbo:participatedIn ?conflict .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
659,71,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v8 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v7 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck's involvement in a military conflict
  ?conflict dbo:commander dbr:Rutger_Jan_Schimmelpenninck .
  
  # Polish Hussars as a military unit involved in the same conflict
  ?unit a dbo:MilitaryUnit ;
        rdfs:label ""Polish Hussars""@en ;
        dbo:militaryConflict ?conflict .

  # Commander of the Polish Hussars during this conflict
  ?commander dbo:commanderOf ?unit .
  
  # Link to an office holder from Kingdom of Ireland
  ?officeHolder a dbo:OfficeHolder ;
                dbo:nativeCountry dbr:Kingdom_of_Ireland ;
                dbo:militaryForce ?militaryForce .

  # Ensure the military force is related to the conflict
  ?militaryForce dbo:militaryConflict ?conflict .
}
```",9,17,10,3,3,3,3,71,0,0,15,0,0.0,0
427,46,test,Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti.,SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?michelePartyLabel (GROUP_CONCAT(?fatherPartyLabel; separator="", "") AS ?fatherParties)
WHERE {
  # Michele Pinto's party
  ?michele dbo:wikiPageID ""Michele_Pinto"" .
  ?michele dbo:party ?micheleParty .
  ?micheleParty rdfs:label ?michelePartyLabel .

  # Lamberto Andreotti's father and his parties
  ?lamberto dbo:wikiPageID ""Lamberto_Andreotti"" .
  ?lamberto dbo:father ?father .
  ?father dbo:party ?fatherParty .
  ?fatherParty rdfs:label ?fatherPartyLabel .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
161,62,test,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce1 ?militaryForce2 WHERE {
  # Find Indalecio Prieto's predecessor
  ?predecessor dbo:predecessor dbr:Indalecio_Prieto .
  
  # Identify the Biscay Campaign and its commander
  ?campaign dbo:type dbr:MilitaryConflict ;
            dbo:socialEvent true ;
            dbo:commander ?commander ;
            dbo:militaryForce ?militaryForce1 .

  # Link predecessor to the campaign
  ?predecessor dbo:commanderOfMilitaryConflict ?campaign .
  
  # Find person who died during Francoist Spain
  ?decedent dbo:dateOfDeath ?deathDate ;
           dbo:placeOfDeath dbr:Francoist_Spain .

  # Identify military force associated with the decedent
  ?conflict dbo:type dbr:MilitaryConflict ;
            dbo:socialEvent true ;
            dbo:militaryForce ?militaryForce2 .
  
  ?decedent dbo:commanderOfMilitaryConflict ?conflict .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
435,25,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and work of Article 62, Section IV of Constitution of Iceland and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?v2 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/ontology/timeZone> ?v4 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  ?figure dbo:nationality dbr:Iceland .
  ?figure dbo:officeTitle ?title .
  FILTER(?title IN (dbr:President_of_Iceland, dbr:Ambassador)) .
  ?figure dbo:administers ?settlement .
  ?settlement a dbo:Settlement ;
              dbo:country dbr:Sierra_Leone .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
281,35,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?heatherWar ?awardeeWar WHERE {
  # Heather Roy's profession or military unit and related war
  OPTIONAL {
    dbr:Heather_Roy dbo:profession ?heatherProf .
    ?heatherProf dbo:participatedIn ?heatherWar .
  }
  
  OPTIONAL {
    dbr:Heather_Roy dbo:militaryUnit ?heatherUnit .
    ?heatherUnit dbo:participatedIn ?heatherWar .
  }

  # Awardee of Knight Grand Cross of the Order of the Bath and related war
  OPTIONAL {
    ?awardee dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
    ?awardee dbo:profession ?awardeeProf .
    ?awardeeProf dbo:participatedIn ?awardeeWar .
  }

  OPTIONAL {
    ?awardee dbo:militaryUnit ?awardeeUnit .
    ?awardeeUnit dbo:participatedIn ?awardeeWar .
  }
  
  # Ensure both wars are the same
  FILTER (?heatherWar = ?awardeeWar)
}
```",4,5,5,2,2,3,3,71,0,0,9,0,0.0,0
281,69,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v7 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardWar ?militaryUnit ?birthCountry
WHERE {
  # Jonathon Band's award and associated war
  ?band a dbo:Person ;
        foaf:name ""Jonathon Band"" .
  ?band dbo:award ?award .
  ?award dbo:war ?awardWar .

  # Military unit in New Zealand Army related to an office holder and politician
  ?unit a dbo:MilitaryUnit ;
        dbo:country dbr:New_Zealand ;
        dbo:member ?politician .
  ?politician a dbo:Politician, dbo:OfficeHolder .

  # Bob Heffron's birthplace country
  ?heffron a dbo:Person ;
           foaf:name ""Bob Heffron"" .
  ?heffron dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:countryName ?birthCountry .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
547,69,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of the award of Gerald Graham and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v7 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchildRestingPlace ?awardeeRestingPlace ?actorRestingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  {
    ?grandchild dbo:parent ?child .
    ?child dbo:parent dbr:William_Haliburton .
    OPTIONAL { ?grandchild dbo:restingPlace ?grandchildRestingPlace }
  }

  UNION

  # Resting place of the awardee of the award of Gerald Graham
  {
    ?award dbo:recipient ?awardee .
    ?award dbo:givenTo dbr:Gerald_Graham .
    OPTIONAL { ?awardee dbo:restingPlace ?awardeeRestingPlace }
  }

  UNION

  # Resting place of the actor of ""Enemy at the Door""
  {
    ?movie dbo:starring ?actor .
    ?movie rdfs:label ""Enemy at the Door""@en .
    OPTIONAL { ?actor dbo:restingPlace ?actorRestingPlace }
  }
}
```",8,8,9,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
492,65,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at the capital, that is a settlement, of Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v4 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Query for successor of Joseph C. Satterthwaite as US Assistant Secretary of State for African Affairs
SELECT ?successor WHERE {
  ?satterthwaite a dbo:GovernmentOfficial ;
                  dbo:office ""US Assistant Secretary of State for African Affairs"" .
  ?satterthwaite foaf:name ""Joseph C. Satterthwaite""@en .
  ?satterthwaite dbo:successor ?successor .
}

UNION

# Query for a notable person associated with Algiers, the capital of Algeria
SELECT ?person WHERE {
  ?algeria dbo:capital ?algiers .
  ?algiers foaf:name ""Algiers""@en .
  ?person dbo:location ?algiers ;
          a dbo:Person .
}

UNION

# Query for commander in Battle of Verdun and the war they commanded
SELECT ?verdunCommander, ?war WHERE {
  ?battle a dbo:MilitaryConflict ;
          foaf:name ""Battle of Verdun""@en .
  ?battle dbo:commander ?verdunCommander .
  
  ?verdunCommander dbo:commanderInWar ?war .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
981,16,test,"Give me the entity in the region of Time in Indonesia and birth place of the person born, that is a beauty queen, as .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/birthName> """"@en . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:BeautyQueen .
  ?person dbo:nationality dbr:Indonesia .
  ?person dbo:birthPlace ?birthPlace .
}
```",4,5,5,2,2,3,2,20,0,0,19,0,0.0,0
391,35,test,"Give me the native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Assuming ""Hub City"" refers to a known city, e.g., Columbia, South Carolina
  VALUES (?hubCity) { dbr:Columbia_(South_Carolina) }

  ?actor dbo:nativePlace ?nativePlace .
  ?actor dbo:spouse ?rozRyan .

  ?movie dbo:starring ?actor ;
         dbo:starring dbr:Roz_Ryan ;
         a dbo:Film, dbo:TelevisionShow, dbo:Work .

  ?actor dbo:cityOfResidence ?hubCity .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
485,27,test,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and entity in United Kingdom.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeBirthPlace ?region
WHERE {
  # Find a writer or poet who received the Eric Gregory Award
  ?person dbo:award dbr:Eric_Gregory_Award .
  ?person rdf:type/(dbo:writer|dbo:poet) .

  # Get their birth place
  ?person dbo:birthPlace ?awardeeBirthPlace .

  # Find Joseph Whitaker's birth place and ensure it is a region in the UK
  dbr:Joseph_Whitaker dbo:birthPlace ?region .
  ?region rdf:type dbo:Region .
  ?region dbo:country dbr:United_Kingdom .

  # Ensure the awardee's birth place matches this region
  ?awardeeBirthPlace rdfs:subClassOf* dbo:Region .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
435,23,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and work of the author of Iceland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?town WHERE {
  ?tobin rdf:type dbo:Person .
  ?tobin foaf:name ""J. R. R. Tolkien"" .
  ?tobin dbo:nationality dbr:Icelandic_people .
  ?tobin dbo:residence ?town .
  ?town rdf:type dbo:Settlement ;
        dbo:country dbr:Iceland .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
378,42,test,Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of Joaquín Blake.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfGahn ?claimToFameSiege ?otherWar
WHERE {
  # Find Carl Pontus Gahn's war involvement
  ?gahn a dbo:Person ;
        dbo:birthName ""Carl Pontus Gahn"" .
  OPTIONAL { ?gahn dbo:participatedIn ?warOfGahn . }

  # Joaquín Blake's claim to fame in the Great Siege of Gibraltar and another war
  dbr:Joaquín_Blake a dbo:Person ;
                    dbo:claimToFame ?claimToFameSiege ;
                    dbo:participatedIn ?otherWar .
  
  FILTER(?claimToFameSiege = dbr:Great_Siege_of_Gibraltar)
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
360,25,test,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v3 <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?album ?deathPlace
WHERE {
  # Find albums written by Dave Flett involving Manfred Mann
  ?album a dbo:Album ;
         dbo:writer dbr:Dave_Flett ;
         dbo:bandMember dbr:Manfred_Mann .

  # Get the death place of Winnie Madikizela-Mandela
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  
  FILTER (isBlank(?deathPlace) = false)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
318,9,test,Give me the professional in the profession of Robert Xavier Rodriguez and person born in the founding year of Eel Pie Publishing.,SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person (STR(?birthYear) AS ?birthYear)
WHERE {
  # Find Robert Xavier Rodriguez's profession
  dbr:Robert_Xavier_Rodriguez dbo:profession ?profession .

  # Find the founding year of Eel Pie Publishing
  dbr:Eel_Pie_Publishing dbo:foundingYear ?foundingYear .
  
  BIND(YEAR(?foundingYear) AS ?birthYear)

  # Find a person born in that year with the same profession
  ?person a dbo:Person ;
          dbo:birthDate ?birthDate ;
          dbo:profession ?sameProfession .

  FILTER(YEAR(?birthDate) = ?birthYear)
  FILTER(?sameProfession = ?profession)
}
```",4,4,5,2,2,2,2,9,0,0,7,0,0.0,0
701,55,test,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Ramesses II's child (e.g., Merneptah)
  ?child dbo:parent dbr:Ramesses_II .
  
  # Parent of that child is Ramesses II or Nefertari
  OPTIONAL { ?child dbo:parent ?parent1 . }
  OPTIONAL { ?child dbo:parent ?parent2 . }

  # Merneptah's father is Ramesses II
  dbr:Merneptah dbo:father dbr:Ramesses_II .

  # Spouse of Ramesses II (Nefertari)
  ?spouse dbo:spouse dbr:Ramesses_II .
  
  # Nefertari's child (e.g., Merneptah)
  ?child2 dbo:parent dbr:Nefertari .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
285,20,test,Give me the parent of the child of the spouse of Aristotle Onassis and spouse of the professional in the award of Stan Lee.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Aristotle Onassis's spouse
SELECT ?spouse WHERE {
    dbr:Aristotle_Onassis dbo:spouse ?spouse .
}

# Step 2: Find the child of Aristotle Onassis's spouse
SELECT ?child WHERE {
    ?spouse dbo:child ?child .
    FILTER(?spouse IN (<SPONS_RESULT_FROM_STEP_1>))
}

# Step 3: Determine the parent of that child (either Aristotle Onassis or his spouse)
SELECT DISTINCT ?parent WHERE {
    ?child dbo:parent ?parent .
    FILTER(?child IN (<CHILD_RESULT_FROM_STEP_2>))
}

# Step 4: Identify Stan Lee's professional award
SELECT ?award WHERE {
    dbr:Stan_Lee dbo:award ?award .
}

# Step 5: Find the spouse of the professional associated with Stan Lee's award
SELECT ?spouseOfProfessional WHERE {
    ?professional dbo:award <AWARD_RESULT_FROM_STEP_4> .
    ?professional dbo:spouse ?spouseOfProfessional .
}

# Final step: Combine results to get the parent and the spouse
SELECT DISTINCT ?parent ?spouseOfProfessional WHERE {
    VALUES (?child) { (<CHILD_RESULT_FROM_STEP_2>) }
    ?child dbo:parent ?parent .
    
    ?professional dbo:award <AWARD_RESULT_FROM_STEP_4> .
    ?professional dbo:spouse ?spouseOfProfessional .
}
```

Note: Replace `<SPONS_RESULT_FROM_STEP_1>`, `<CHILD_RESULT_FROM_STEP_2>`, and `<AWARD_RESULT_FROM_STEP_4>` with actual results from the respective queries.",6,6,7,3,2,3,2,20,0,0,3,0,0.0,0
487,18,test,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of the administration of the person born on 1955-01-26.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://dbpedia.org/property/governor> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration1 ?country1 ?administration2 ?country2 WHERE {
  # Find Philip Brian Scott and his administration
  ?person1 a dbo:SoccerPlayer ;
           foaf:name ""Philip Brian Scott"" .
  
  OPTIONAL { ?person1 dbo:positionHeld ?administration1 . }
  OPTIONAL { ?administration1 dbo:country ?country1 . }

  # Find the person born on 1955-01-26 and their administration
  ?person2 a dbo:Person ;
           dbo:birthDate ""1955-01-26""^^xsd:date .
  
  OPTIONAL { ?person2 dbo:positionHeld ?administration2 . }
  OPTIONAL { ?administration2 dbo:country ?country2 . }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
465,9,test,"Give me the death place of the native of Prague and administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?person dbo:birthPlace dbr:Prague .
  ?person dbo:deathPlace ?deathPlace .
  
  # Assuming the leader is a chairperson of the Chamber of Deputies
  ?person dbo:position dbr:Chairman_of_the_Chamber_of_Deputies_of_the_Czech_Republic .

  # The person should be associated with a political party
  ?party dbo:chairman ?person .
  
  FILTER EXISTS { ?party a dbo:PoliticalParty }
}
```",4,6,5,2,2,2,2,9,0,0,8,0,0.0,0
161,69,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v7 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce1 ?militaryConflict1 ?societalEvent1 
       ?militaryForce2 ?militaryConflict2 
       ?commanderRole
WHERE {
  # Francisco Largo Caballero's military force during Francoist Spain
  dbr:Francisco_Largo_Caballero dbo:militaryConflict ?militaryConflict1 .
  ?militaryConflict1 a dbo:MilitaryConflict ;
                    dbo:societalEvent ?societalEvent1 .

  # Military conflict and societal event of Francisco Largo Caballero
  dbr:Francisco_Largo_Caballero dbo:militaryForce ?militaryForce2 .
  ?militaryForce2 dbo:militaryConflict ?militaryConflict2 ;
                  dbo:societalEvent ?societalEvent1 .

  # Commander role of El Director (Francisco Largo Caballero)
  dbr:Francisco_Largo_Caballero dbo:commanderOf ?commanderRole .
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
488,28,test,Give me the death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceTokugawaIeyasu ?administrationGoYozei ?birthPlaceCommanderBoshinWar
WHERE {
  # Death place of Tokugawa Ieyasu
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlaceTokugawaIeyasu .

  # Administration (reign) of Emperor Go-Yōzei
  dbr:Emperor_Go-Yozei dbo:reign ?administrationGoYozei .

  # Birth place of Saigō Takamori, a commander in the Boshin War
  dbr:Saigo_Takamori dbo:birthPlace ?birthPlaceCommanderBoshinWar .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
701,68,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v5 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
    # Seti I's child
    ?childSetiI dbo:father dbr:Seti_I .
    
    # Seti I's grandchild
    ?grandchildSetiI dbo:mother ?childSetiI .

    # Merneptah's father
    ?merneptahFather dbo:son dbr:Merneptah .

    # Spouse of Merneptah's father
    ?spouseOfMerneptahFather dbo:spouse ?merneptahFather .

    # Amun-her-khepeshef's spouse
    ?amunHerKhepeshefSpouse dbo:spouse dbr:Amun-her-khepeshef .

    # Child of Amun-her-khepeshef's spouse
    ?childOfAmunHerKhepeshefSpouse dbo:parent ?amunHerKhepeshefSpouse .

    # Parent of the child from step 6
    ?parent dbo:child ?childOfAmunHerKhepeshefSpouse .
    
    # Find common entity among these relationships
    FILTER (?grandchildSetiI = ?spouseOfMerneptahFather && ?spouseOfMerneptahFather = ?amunHerKhepeshefSpouse)
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
754,19,test,Give me the parent of the parent of May Hnin Htapi and parent of the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
# Query for May Hnin Htapi's ancestry
SELECT ?grandParent WHERE {
  ?mayHninHtapi dbo:birthName ""May Hnin Htapi"" .
  ?mayHninHtapi dbo:parent ?parent1 .
  ?parent1 dbo:parent ?grandParent .
}

UNION

# Query for Ram Khamhaeng the Great's descendant
SELECT ?ancestor WHERE {
  ?reference rdfs:seeAlso <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> .
  ?reference dbo:child ?descendant .
  ?descendant dbo:parent ?ancestor .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
701,51,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Ramesses II.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?battle dbo:commander ?commander .
  FILTER(STR(?battle) = ""Battle of Perire"") .

  ?father dbo:child ?commander .
  
  ?royalSpouse dbo:spouse ?father ;
               a dbo:RoyalFamilyMember .  # Assuming there's a class for royalty

  ?ramessesChild dbo:parent ?royalSpouse ;
                 dbp:father ""Ramesses II""^^xsd:string .

}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
747,48,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  # Find Tracey Elizabeth McSween and her band
  ?tracey a dbo:Person ;
          foaf:name ""Tracey Elizabeth McSween"" ;
          dbo:musicalBand ?band .

  # Find the decedent from Zolotonosha
  ?decedent a dbo:Person ;
            dbo:deathPlace dbr:Zolotonosha ;
            dbo:birthDate ?birthDate .

  # Find an athlete and soccer player born on the same date as the decedent
  ?athlete a dbo:Person, dbo:Athlete ;
           dbo:sport dbr:Soccer ;
           dbo:birthDate ?birthDate .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
959,52,test,"Give me the manager of 2013 Júbilo Iwata season and native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?manager WHERE {
    # Step 1: Identify Yōichi Masuzoe's native country
    dbr:Yōichi_Masuzoe dbo:nativePlace ?nativeCountry .

    # Step 2: Find the alma mater of a person born in 1958
    ?person dbo:birthDate ?birthDate ;
            dbo:almaMater ?university .
    FILTER (YEAR(?birthDate) = 1958)
    
    # Ensure the university is Japanese, an organization, and an educational institution
    ?university rdf:type dbo:University ;
                dbo:country dbr:Japan .

    # Step 3: Determine the manager of Júbilo Iwata for the 2013 season
    dbr:Júbilo_Iwata_2013_season dbo:manager ?manager .
    
    # Step 4: Connect all elements
    ?manager dbo:nativePlace ?nativeCountry ;
             dbo:almaMater ?university .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
16,68,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Find Gigi Rice's birth name
  ?gigi a dbo:Person;
        foaf:name ""Gigi Rice"" ;
        dbo:birthName ?birthNameGigi .

  # Step 2: Find Ted McGinley's birth name and spouse
  ?ted a dbo:Person;
       foaf:name ""Ted McGinley"" ;
       dbo:birthName ?birthNameTed .
  
  ?ted dbo:spouse ?spouse .

  # Step 3: Identify the profession of actors from ""Unnatural""
  ?unnaturalActor a dbo:Actor;
                  dbo:profession ?profession .
  ?unnaturalSeries dbo:title ""Unnatural"" ;
                   dbo:actor ?unnaturalActor .

  # Step 4: Find person matching all criteria
  ?person a dbo:Person;
          foaf:name ?birthNameGigi; # Matches Gigi Rice's birth name
          dbo:spouse ?spouse;       # Is spouse of Ted McGinley's spouse
          dbo:profession ?profession . # Has the same profession as an actor from ""Unnatural""
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
328,57,test,"Give me the awardee of Order of Suvorov and commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  
  # Awardee of the Order of Suvorov
  ?award dbo:awardedBy dbr:Order_of_Suvorov ;
         dbo:recipient ?person .

  # Commander in force at Budapest
  ?commanderOfMilitaryUnit dbo:commander ?person ;
                          dbo:location dbr:Budapest .
  
  # Leader of an office under Joseph Stalin
  ?office dbo:leader ?person ;
          dbo:head dbr:Joseph_Stalin .

  # Get the name of the person
  ?person rdfs:label ?name .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
161,71,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForceFranco ?societalEventFranco ?conflictPredecessor ?commanderDirector
WHERE {
  # Francisco Franco's military force and societal event
  dbr:Francisco_Franco dbo:militaryConflict ?militaryForceFranco .
  ?militaryForceFranco a dbo:MilitaryConflict ;
                     dbo:societalEvent ?societalEventFranco .

  # Predecessor of Indalecio Prieto (assuming Niceto Alcalá-Zamora)
  dbr:Niceto_Alcalá_Zamora dbo:militaryConflict ?conflictPredecessor .
  
  # Commander in the force known as El Director
  dbr:Francisco_Franco dbo:commanderIn ?commanderDirector ;
                      rdfs:label ""El Director""@en .
}
```",9,15,10,3,3,3,3,71,0,0,32,0,0.0,0
915,17,test,"Give me the resident of Springfield, Illinois and father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandparent WHERE {
  # Find Lizzie Spaulding's parent who is a fictional and soap character
  ?lizzieSpaulding dbr:Lizzie_Spaulding .
  ?lizzieParent dbo:child ?lizzieSpaulding ;
               dbo:spouse ?soapCharacter1 ;
               rdf:type dbo:FictionalCharacter .

  # Find the grandparent of Lizzie Spaulding who is also a fictional and soap character
  ?grandparent dbo:child ?lizzieParent ;
              dbo:spouse ?soapCharacter2 ;
              rdf:type dbo:FictionalCharacter .
  
  # Ensure the grandparent resides in Springfield, Illinois
  ?residence dbr:Springfield_(Illinois) .
  ?grandparent dbo:residence ?residence .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
617,46,test,"Give me the spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?spouse
WHERE {
  # Step 1: Identify Antiochus III the Great and his child
  ?antiochusIII a dbo:Monarch ;
                foaf:name ""Antiochus III"" .
  
  ?child dbo:parent ?antiochusIII ;
         rdf:type dbo:Person .

  # Step 2: Find spouse of this child
  ?spouse1 dbo:spouse ?child .

  # Step 3: Identify successor of Antiochus II Theos and ensure they are royalty
  ?antiochusII a dbo:Monarch ;
               foaf:name ""Antiochus II"" .
  
  ?successor dbo:predecessor ?antiochusII ;
             rdf:type dbo:Monarch .

  # Step 4: Find child of this successor who is royalty
  ?child2 dbo:parent ?successor ;
          rdf:type dbo:Person .

  # Step 5: Find a child of the second-generation royal
  ?grandChild dbo:parent ?child2 ;
              rdf:type dbo:Person .

  # Step 6: Identify spouse of this third-generation royal
  ?spouse2 dbo:spouse ?grandChild .
  
  FILTER (?spouse1 != ?spouse2) # Ensure different individuals are selected
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
767,38,test,Give me the reference to the alter ego of Black Hood and alma mater of the administration of George K. Nash.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alterEgo ?almaMater WHERE {
  # Find alter ego of Black Hood
  OPTIONAL { 
    dbr:Black_Hood dbo:alterEgo ?alterEgo .
  }
  
  # Find alma mater of George K. Nash
  OPTIONAL {
    dbr:George_K._Nash dbo:almaMater ?almaMater .
  }

  FILTER (?alterEgo = ?almaMater)
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
161,67,test,"Give me the military force of Rif War and commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
# Query for El Director's involvement in the Rif War
SELECT ?militaryForce ?commander WHERE {
  ?elDirector dbo:wikiPageRedirects db:El_Director .
  ?rifWar dbo:participatedInMilitaryUnit ?militaryForce ;
          dbo:commander ?commander .
  ?elDirector dbo:involvedInEvent ?rifWar .
}

# Query for Indalecio Prieto's predecessor and associated events
SELECT ?predecessor ?societalEvent ?militaryConflict ?force WHERE {
  ?indalecioPrieto dbo:successor ?predecessor ;
                   a dbo:Politician .
  ?societalEvent dbo:involves ?predecessor ;
                 a dbo:SocietalEvent .
  ?militaryConflict dbo:participatedInMilitaryUnit ?force ;
                    dbo:involves ?predecessor ;
                    a dbo:MilitaryConflict .
}
```",7,10,8,3,3,3,3,71,0,0,11,0,0.0,0
767,55,test,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater ?settlement ?alterEgo
WHERE {
  # Alma mater of George K. Nash
  dbr:George_K._Nash dbo:almaMater ?almaMater .

  # Entity in the administration of Green that is a settlement
  ?green dbo:member ?adminMember .
  FILTER (strstarts(str(?green), ""Green""))
  ?adminMember rdf:type dbo:Settlement .
  BIND(?adminMember AS ?settlement)

  # Alter ego of Black Hood
  ?blackHood rdfs:label ""Black Hood""@en .
  ?blackHood dbo:alterEgo ?alterEgo .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
429,8,test,"Give me the administration of Andrew Johnson and country of the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationStartYear ?administrationEndYear ?countryName
WHERE {
  # Andrew Johnson's presidency period
  dbr:Andrew_Johnson dbo:presidencyStartYear ?administrationStartYear ;
                      dbo:presidencyEndYear ?administrationEndYear .

  # Military organization involved in the Camden Expedition and its country
  OPTIONAL {
    dbr:Cameron_Expedition dbo:militaryConflict ?conflict .
    ?conflict dbo:participatingOrganisation ?organisation .
    ?organisation dbo:nationality ?country .
    ?country rdfs:label ?countryName .
    FILTER (lang(?countryName) = 'en')
  }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
701,48,test,Give me the spouse of the father of Merneptah and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouseOfMerneptahsFather WHERE {
  ?merneptah dbo:father ?merneptahsFather .
  FILTER(STR(?merneptah) = ""Merneptah"") .

  ?merneptahsFather dbo:spouse ?spouseOfMerneptahsFather .

  ?amunHerKhepeshef dbo:spouse ?spousesOfAmunHerKhepeshef .
  FILTER(STR(?amunHerKhepeshef) = ""Amun-her-khepeshef"") .

  ?child dbo:parent ?spousesOfAmunHerKhepeshef ;
         a dbo:Person .

  ?parentOfChild dbo:child ?child .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,55,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtistWatchtower ?meshuggahBandMember ?associatedArtistMeshuggah
WHERE {
  # Find band members of Donald Maynard Dokken
  ?person a dbo:Person ;
          foaf:name ""Donald Maynard Dokken"" ;
          dbo:bandMember ?band .
  
  ?band dbo:bandMember ?bandMember .

  # Find associated musical artists of Watchtower (band)
  dbr:Watchtower dbo:associatedMusicalArtist ?associatedArtistWatchtower .

  # Find band members of Meshuggah
  dbr:Meshuggah a dbo:Band ;
                dbo:member ?meshuggahBandMember .
  
  # Find associated musical artists of Meshuggah band members
  ?meshuggahBandMember dbo:associatedMusicalArtist ?associatedArtistMeshuggah .

}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
747,26,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Find songs written by Amba Shepherd
  ?song dbo:lyricsBy|dbo:musicBy dbr:Amba_Shepherd .
  
  # Identify the writer of the song (composer or lyricist)
  ?writer dbo:lyricsBy|dbo:musicBy ?song .

  # Get the band associated with this writer
  ?bandMember dbo:bandMember ?writer ;
              a dbo:Band .
              
  ?bandMember foaf:name ?band .
}
```",3,4,4,3,1,3,3,71,0,0,13,0,0.0,0
528,30,test,Give me the war of Irene Morales and force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war
WHERE {
  # For Narciso Campero Leyes
  OPTIONAL { 
    dbr:Narciso_Campero_Leyes dbo:participatedIn ?war .
  }
  
  # For Orozimbo Barbosa
  OPTIONAL { 
    dbr:Orozimbo_Barbosa dbo:participatedIn ?war .
  }

  # Assuming Irene Morales might be linked to a war through another property or resource
  OPTIONAL {
    dbr:Irene_Morales dbo:participatedIn ?war .
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
378,30,test,Give me the war of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of Joaquín Blake.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query for Carl Pontus Gahn's involvement in a war
SELECT ?war WHERE {
  wd:Q123456 dbo:participatedIn ?war .
}

# Query for the commander of the Great Siege of Gibraltar and their claim to fame
SELECT ?commander ?fame WHERE {
  wd:Q789012 dbo:commander ?commander ;
             dbo:famousFor ?fame .
}

# Query for Joaquín Blake's involvement in a war
SELECT ?war WHERE {
  wd:Q987654 dbo:participatedIn ?war .
}
```

Note: Replace `wd:Q123456`, `wd:Q789012`, and `wd:Q987654` with the actual DBpedia identifiers for Carl Pontus Gahn, the Great Siege of Gibraltar, and Joaquín Blake respectively. These identifiers can be found by searching DBpedia or using a SPARQL endpoint to query their names.",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
16,58,test,Give me the spouse of Ted McGinley and professional in the profession of Satomi Ishihara and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
# Query 1: Spouse of Ted McGinley
SELECT ?spouse WHERE {
    ?person dbo:name ""Ted McGinley""@en .
    ?person a dbo:Person .
    ?person dbo:spouse ?spouse .
}

# Query 2: Profession of Satomi Ishihara
SELECT ?profession WHERE {
    ?person dbo:name ""Satomi Ishihara""@en .
    ?person a dbo:Person .
    ?person dbo:profession ?profession .
}

# Query 3: Person born as the birth name of an alumnus of Ohio State University
SELECT DISTINCT ?personWithBirthName WHERE {
    ?alumnus dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> .
    ?alumnus foaf:name ?birthName .
    ?personWithBirthName foaf:name ?birthName .
    ?personWithBirthName a dbo:Person .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
404,27,test,Give me the child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?princess a dbo:Person ;
            foaf:name ""Princess Victoria Louise of Prussia""@en .
  
  ?princess dbo:spouse ?spouse .

  ?spouse dbo:father ?father .

  ?father dbo:child ?child .
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
281,65,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v6 . },"```sparql
# Step 1: Identify the leader of the 1962 New South Wales State Election
SELECT ?leader WHERE {
  ?election dbo:year ""1962"" .
  ?election dbo:state dbr:New_South_Wales .
  ?election dbo:leader ?leader .
}

# Step 2: Determine the birthplace country of this leader
SELECT DISTINCT ?birthPlaceCountry WHERE {
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
  BIND(?birthPlace AS ?birthPlaceCountry)
}

# Step 3: Identify Heather Roy's profession as a military unit
SELECT ?militaryUnit WHERE {
  dbr:Heather_Roy dbo:profession ?militaryUnit .
  ?militaryUnit rdf:type dbo:MilitaryUnit .
}

# Step 4: Find the war associated with Heather Roy's profession
SELECT DISTINCT ?war WHERE {
  ?militaryUnit dbo:participatedInWar ?war .
}

# Step 5: Identify the awardee of Knight Grand Cross of the Order of the Bath and their war
SELECT ?awardee ?awardWar WHERE {
  ?awardee dbo:receivedAward dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  ?awardee dbo:participatedInWar ?awardWar .
}

# Step 6: Find commonality between the wars
SELECT DISTINCT ?commonWar WHERE {
  { SELECT ?war WHERE {
      ?militaryUnit dbo:participatedInWar ?war .
    }
  } UNION {
    SELECT ?awardWar WHERE {
      ?awardee dbo:participatedInWar ?awardWar .
    }
  }
  FILTER(?war = ?awardWar)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
801,49,test,"Give me the professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional ?associatedArtist ?albumArtist WHERE {
  # Step 1: Identify The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo ?writer .
  
  # Step 2: Find the associated musical artist of the writer
  ?writer dbo:associatedMusicalArtist ?associatedArtist .

  # Step 3: Locate the album ""What U See Is What U Get""
  dbr:What_U_See_Is_What_U_Get dbo:artist ?albumArtist .
  
  # Step 4: Ensure the artist is both a musical artist and an artist
  ?albumArtist rdf:type dbo:MusicalArtist ;
               rdf:type dbo:Artist .

  # Bind the professional to the alter ego
  BIND(?writer AS ?professional)
}
```",5,9,6,3,2,3,3,71,0,0,22,0,0.0,0
659,58,test,"Give me the commander in German campaign of 1813 and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # German campaign of 1813
  ?campaign dbo:wikiPageRedirects dbr:German_Campaign_of_1813 .
  
  # Commander involved in the campaign
  ?campaign dbo:commander ?commander .

  # Connection to Rutger Jan Schimmelpenninck
  ?commander dbo:spouse ?schimmelpenninck .
  ?schimmelpenninck dbr:Rutger_Jan_Schimmelpenninck .

  # Connection to the 1st Light Cavalry Lancers Regiment
  ?regiment dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) .
  ?commander dbo:militaryService ?regiment .

  # Ensure military force is a societal event and a military conflict
  ?campaign rdf:type dbo:MilitaryConflict ;
            dbo:socialEvent ?militaryForce .
}
```",6,11,7,3,3,3,3,71,0,0,7,0,0.0,0
294,26,test,"Give me the resting place of Edwin A. Keeble and entity in the birth place, that is a settlement, of Marion James and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlaceEdwinAkeebles ?settlementMarionJamesBirthplace ?restingPlacePoliticianAwardee
WHERE {
  # Resting place of Edwin A. Keeble
  OPTIONAL { 
    dbr:Edwin_A._Keeble dbo:deathPlace ?restingPlaceEdwinAkeebles .
  }

  # Entity in the birthplace of Marion James that is a settlement
  OPTIONAL {
    dbr:Marion_James dbo:birthPlace ?marionBirthPlace .
    ?marionBirthPlace rdf:type dbo:Settlement .
    BIND(?marionBirthPlace AS ?settlementMarionJamesBirthplace)
  }

  # Resting place of an awardee who is a politician for the Distinguished Service Medal (U.S. Army)
  OPTIONAL {
    ?politician dbo:award dbr:Distinguished_Service_Medal_(United_States_Army) .
    ?politician rdf:type dbo:Politician .
    ?politician dbo:deathPlace ?restingPlacePoliticianAwardee .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
16,22,test,Give me the spouse of Ted McGinley and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  ?person dbo:birthName ""Ted McGinley""@en .
  ?person dbo:spouse ?spouse .
}

UNION

SELECT ?name WHERE {
  ?person dbo:birthName ""Gigi Rice""@en .
  ?person foaf:name ?name .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
801,61,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Step 1: Identify the album
  dbr:What_U_See_Is_What_U_Get a dbo:MusicalWork .

  # Step 2: Find producers of this album
  dbr:What_U_See_Is_What_U_Get dbo:producer ?producer .

  # Step 3: Ensure producer is a rapper and associated with another musical artist
  ?producer a dbo:Rapper .
  ?producer dbo:associatedMusicalArtist ?writer .

  # Step 4: Ensure the writer is both a musical artist and an artist
  ?writer a dbo:MusicalArtist ;
         a dbo:Artist .
}
```",6,14,7,3,2,3,3,71,0,0,9,0,0.0,0
182,23,test,Give me the war of the author of 2019 Sri Lanka Easter bombings and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war
WHERE {
  # Find the author of the 2019 Sri Lanka Easter bombings
  ?author a dbo:Person ;
          dbo:associatedWith dbr:2019_Sri_Lanka_Easter_bombings .

  # Find Tamara Kunanayakam's nationality
  dbr:Tamara_Kunanayakam dbo:nationality ?nationalityEntity .

  # Find wars associated with both the author and the nationality entity
  ?war a dbo:War ;
      (dbo:participatedIn|dbo:associatedWith) ?author ;
      (dbo:participatedIn|dbo:associatedWith) ?nationalityEntity .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
303,26,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in Panama and party of the commander, that is a politician, in United States invasion of Panama.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?arnulfoParty ?commanderParty WHERE {
  # Arnulfo Arias Madrid's party
  OPTIONAL { 
    dbr:Arnulfo_Arias_Madrid dbo:politicalParty ?arnulfoParty .
  }
  
  # Commander in the United States invasion of Panama (General Manuel Noriega)
  OPTIONAL {
    dbr:Manuel_Noriega dbo:politicalParty ?commanderParty .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
767,62,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to .","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v6 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?settlement
WHERE {
  # George Kilbon Nash's alma mater
  dbr:George_Kilbon_Nash dbo:almaMater ?almaMater .

  # Writer of ""Where It's At"" by Dustin Lynch
  OPTIONAL {
    dbr:""Where_It%27s_At_(Dustin_Lynch_album)"" dbo:lyricsBy ?writer .
    ?writer dbo:birthPlace ?settlement .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
801,36,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Step 1: Identify the album
  dbr:What_U_See_Is_What_U_Get a dbo:Album .

  # Step 2: Find associated musical artist(s)
  dbr:What_U_See_Is_What_U_Get dbo:artist ?artist .

  # Step 3 & 4: Ensure the artist is also a writer and belongs to both Artist and MusicalArtist classes
  ?artist a dbo:MusicalArtist ;
         a dbo:Artist .
  
  OPTIONAL { ?artist dbo:writer ?work . }
}
```",4,8,5,3,2,3,3,71,0,0,22,0,0.0,0
617,30,test,Give me the child of Antiochus III the Great and spouse of Laodice IV and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfAntiochusIII ?spouseOfLaodiceIV ?parentOfChildOfAntiochus
WHERE {
  # Find children of Antiochus III the Great
  ?childOfAntiochusIII dbo:father dbr:Antiochus_III_the_Great .
  
  # Find spouse of Laodice IV
  ?spouseOfLaodiceIV dbo:spouse dbr:Laodice_IV .

  # Identify Antiochus IV Epiphanes as a child of Antiochus III the Great
  ?antiochusIV dbo:father dbr:Antiochus_III_the_Great .
  
  # Find children of Antiochus IV Epiphanes
  ?childOfAntiochus dbo:father ?antiochusIV .

  # Identify parent of the child of Antiochus IV (which should be Antiochus IV)
  ?parentOfChildOfAntiochus dbo:child ?childOfAntiochus .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,60,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musicalArtist WHERE {
  # Step 1: Identify The Shadow's alter ego or true self
  dbr:The_Shadow dbo:alterEgo ?trueSelf .
  
  # Step 2: Find the professional identity associated with The Shadow's true self
  ?trueSelf dbo:professionalIdentity ?professionalIdentity .

  # Step 3: Locate the album ""What U See Is What U Get""
  dbr:What_U_See_Is_What_U_Get dbo:album ?album .
  
  # Step 4: Identify the writer of the album
  ?album dbo:writer ?writer .

  # Step 5: Find the associated musical artist who is also an artist
  ?writer dbo:musicalArtist ?musicalArtist .
  FILTER EXISTS { ?musicalArtist a dbo:MusicalArtist . }
  FILTER EXISTS { ?musicalArtist a dbo:Artist . }
}
```",6,10,7,3,2,3,3,71,0,0,22,0,0.0,0
421,21,test,Give me the band member of Senidah and native of Socialist Federal Republic of Yugoslavia and person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:bandMember dbr:Senidah .
  ?person dbo:nativePlace dbr:Socialist_Federal_Republic_of_Yugoslavia .
  ?person foaf:name ""Dino Merlin""^^xsd:string .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
48,18,test,"Give me the band of the writer of the work, that is a work, of Shellback (record producer) and band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerBand ?actorBand WHERE {
  # Part 1: Band of the writer of a work by Shellback
  ?work dbo:recordProducer dbr:Shellback .
  ?work dbo:writer ?writer .
  OPTIONAL { 
    ?writer dbo:musicalArtist ?artist .
    ?artist dbo:band ?writerBand .
  }

  # Part 2: Band of the actor who is a musical artist for ""Honor Up""
  ?honorUp dbo:actor ?actor .
  OPTIONAL {
    ?actor dbo:musicalArtist ?actorArtist .
    ?actorArtist dbo:band ?actorBand .
  }
  
  FILTER EXISTS { ?work . } # Ensure there's at least one work by Shellback
  FILTER EXISTS { ?honorUp dbr:Honor_Up . } # Ensure ""Honor Up"" is the correct work
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
747,64,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band1 ?band2 WHERE {
  # Find Shèna's birth date
  ?shena a dbo:Person ;
         dbo:birthName ""Shèna""@en .
  
  # Find Amba Shepherd's band
  ?ambaShepherd a dbo:Person ;
                rdfs:label ""Amba Shepherd""@en ;
                dbo:band ?band1 .

  # Find an athlete and soccer player born in Zolotonosha
  ?athlete a dbo:SoccerPlayer, dbo:Athlete ;
           dbo:birthPlace dbr:Zolotonosha ;
           dbo:birthDate ?birthDateDecedent .
  
  # Match Shèna's birth date with the decedent's birth date
  ?shena dbo:birthDate ?birthDateDecedent .

  # Find band of person born on the same date as the decedent
  ?person a dbo:Person ;
          dbo:birthDate ?birthDateDecedent ;
          dbo:band ?band2 .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
54,47,test,Give me the child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commonEntity WHERE {
  # Find Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi dbo:parent ?fatherOfSoeMinWimalaDewi .
  
  # Find the children of Soe Min Wimala Dewi's father
  ?fatherOfSoeMinWimalaDewi dbo:child ?childOfFather .

  # Find Thado Minsaw of Prome's parent
  ?thadoMinsaw dbo:parent ?parentOfThadoMinsaw .
  
  # Find the children of Thado Minsaw of Prome's parent
  ?parentOfThadoMinsaw dbo:child ?childOfParent .

  # Find a common entity that is both a child of Soe Min Wimala Dewi's father and a parent of one of Thado Minsaw of Prome's parent's children
  ?commonEntity rdf:type dbo:Person .
  FILTER (?childOfFather = ?commonEntity)
  OPTIONAL { ?commonEntity dbo:parent ?parentOfChild . }
  FILTER EXISTS {
    ?parentOfChild dbo:child ?childOfParent .
  }
}
```",5,5,6,3,2,3,3,71,0,2478,1,0.0,0.0,0
404,60,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName
WHERE {
  # Identify the spouse of Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

  # Find the father of this spouse
  ?spouse dbo:father ?father .

  # Determine the children of this father who are royalty
  ?father dbo:child ?child .
  ?child a dbo:Monarch .

  # Match one of these children to Princess Victoria Louise
  ?child rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  # Get the birth name of Princess Victoria Louise
  ?child dbo:birthName ?birthName .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
197,9,test,Give me the birthplace of the awardee of Leroy P. Steele Prize and birthplace of the member of FC Politehnica Timișoara.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
# Query for the birthplace of an awardee of the Leroy P. Steele Prize
SELECT ?awardee ?birthPlace WHERE {
  ?awardee dbo:awardReceived dbr:Leroy_P._Steele_Prize .
  ?awardee dbo:birthPlace ?birthPlace .
}

# Query for the birthplace of a member of FC Politehnica Timișoara
SELECT ?player ?birthPlace WHERE {
  ?player dbr:FC_Politehnica_Timișoara#players ?teamMembership .
  ?player dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,2,2,2,9,0,0,4,0,0.0,0
54,31,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?individual
WHERE {
  ?thinkhaya a dbo:Person ;
             foaf:name ""Thinkhaya of Pagan""@en .
  
  ?child dbo:parent ?thinkhaya ;
         dbo:child ?grandchild .

  ?thadoMinsaw a dbo:Person ;
               foaf:name ""Thado Minsaw of Prome""@en ;
               dbo:parent ?individual .

  FILTER (?child = ?individual)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
9,26,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeLabel ?almaMaterLabel
WHERE {
  ?medal a dbo:Award ; 
         rdfs:label ""Royal Medal""@en .
  
  ?recipient dbo:award ?medal ;
             a dbo:Person ;
             foaf:name ?awardeeLabel .

  OPTIONAL { ?recipient dbo:almaMater ?almaMater . }
  OPTIONAL { ?almaMater foaf:name ?almaMaterLabel . }

  FILTER (lang(?awardeeLabel) = 'en')
  FILTER (lang(?almaMaterLabel) = 'en')
}
```",3,4,4,3,1,3,3,71,0,496351,31,0.0,0.0,0
391,54,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons and native of the figure known as Hub City.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find Sherry Hormann's spouse
  ?sherry a dbo:Person ;
          foaf:name ""Sherry Hormann""@en .
  
  ?spouse dbo:spouse ?sherry .

  # Find the actor of ""All About the Andersons""
  ?film dbo:title ""All About the Andersons""@en ;
        dbo:actor ?actor .

  # Determine Hub City
  ?city dbo:wikiPageRedirects dbr:Hub_City ;
        dbo:birthPlace ?actor .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
345,20,test,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb and team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://dbpedia.org/ontology/birthDate> ?v4 . <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/manager> ?v5 . },"```sparql
# Step 1: Get Eiður Guðjohnsen's birth date
SELECT ?birthDate WHERE {
    dbpedia:Æður_Guðjónsson dbo:birthDate ?birthDate .
}

# Step 2: Find a soccer player and manager born on the same date as Eiður Guðjohnsen
SELECT DISTINCT ?person WHERE {
    ?person dbo:birthDate ?birthDate ;
            rdf:type dbo:SoccerPlayer, dbo:SoccerManager .
    FILTER(?birthDate = <Eiður_Guðjohnsen_birth_date>) # Replace with actual birth date from Step 1
}

# Step 3: Find Armando Heeb's team
SELECT DISTINCT ?team WHERE {
    dbpedia:Armando_Heeb dbo:memberOfTeam ?team .
}

# Step 4: Get the nickname of that sports club, ensuring it is a soccer club and organization
SELECT DISTINCT ?nickname WHERE {
    ?team rdf:type dbo:SoccerClub ;
          dbo:nickname ?nickname ;
          rdf:type dbo:SportsOrganization .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
617,43,test,"Give me the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Antiochus III the Great's child who is royalty
  ?child a dbo:Person ;
         dbo:parent dbr:Antiochus_III_the_Great ;
         rdfs:label ?childLabel .
  
  FILTER CONTAINS(LCASE(?childLabel), ""seleucus iv philopator"") .

  # Laodice IV as the child of Seleucus IV Philopator
  ?laodice dbo:parent ?child ;
           rdfs:label ?laodiceLabel .

  FILTER CONTAINS(LCASE(?laodiceLabel), ""laodice iv"") .

  # Nysa's parent is Laodice IV
  ?nysa dbo:spouse dbr:Nysa_of_Pontus ;
        dbo:parent ?laodice .

  # Demetrius I Soter as the successor of Antiochus IV Epiphanes
  ?demetrius a dbo:Person ;
             dbo:successorOf dbr:Antiochus_IV_Epiphanes ;
             rdfs:label ?demetriusLabel .

  FILTER CONTAINS(LCASE(?demetriusLabel), ""demetrius i soter"") .

  # Laodice IV as the spouse of Demetrius I Soter
  ?laodice dbo:spouse ?demetrius .
  
  BIND(?laodice AS ?person)
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
801,20,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalRole ?producer 
WHERE {
  ?work a dbr:Song ;
        dbo:creator dbr:50_Cent .
  
  OPTIONAL { ?work dbo:producer ?producer . }
  
  ?person dbo:name ""50 Cent"" ;
          dbo:profession ?professionalRole .

  FILTER(?person = dbr:50_Cent)
}
```",3,6,4,2,2,3,3,71,0,0,27,0,0.0,0
360,21,test,Give me the writer of The Roaring Silence and native of Johannesburg and reference to the author of Blinded by the Light.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
# Query to find the writer of ""The Roaring Silence"" and their native city
SELECT ?writer ?birthPlace WHERE {
  ?album dbo:composer ?writer .
  ?writer foaf:name ""Mike Oldfield""@en .
  ?writer dbo:birthPlace ?birthPlace .
  FILTER (CONTAINS(LCASE(STR(?birthPlace)), ""johannesburg""))
  ?album rdfs:label ""The Roaring Silence""@en .
}

# Query to find the author of ""Blinded by the Light""
SELECT ?author WHERE {
  ?song dbo:lyricsAuthor ?author .
  ?author foaf:name ""Bruce Springsteen""@en .
  ?song rdfs:label ""Blinded by the Light""@en .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
801,39,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of Westside Story (song).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find the album ""What U See Is What U Get""
  ?album rdf:type dbo:MusicalWork ;
         rdfs:label ""What U See Is What U Get""@en .
  
  # Identify the writer of the album
  ?album dbo:composer ?writer .

  # Ensure the writer is a musical artist and an artist
  ?writer rdf:type dbo:MusicalArtist, dbo:Artist .

  # Find the producer of ""Westside Story (song)""
  ?song rdf:type dbo:MusicalWork ;
        rdfs:label ""Westside Story (song)""@en .
  
  ?song dbo:producer ?producer .

  # Check if the writer is also the producer
  FILTER (?writer = ?producer)

  # Return the artist's name
  ?writer rdfs:label ?artist .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
314,26,test,"Give me the person deceased at the headquarter of House of Sombrerete and commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of 30.","SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName WHERE {
  ?person a dbo:Person ;
          dbo:deceasedAt dbr:House_of_Sombrerete ;
          dbo:occupation ?commanderRole .
  
  FILTER(CONTAINS(LCASE(?commanderRole), ""commander""))

  ?event dbo:eventType ?eventType .
  ?societalEvent dbo:societalEventType ?societalEventType .

  ?person dbo:award ?award .
  ?award dbo:number ""30""^^xsd:int .

  ?event dbo:participant ?person ;
         dbo:participant dbr:Lisa_Gavrić .
  
  ?societalEvent dbo:participant ?person ;
                 dbo:participant dbr:Lisa_Gavrić .

  ?person rdfs:label ?personName .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
281,57,test,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of Heather Roy.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
# Query to find the war Beauchamp Seymour, 1st Baron Alcester was involved in
SELECT ?war WHERE {
    ?s dbp:alias ""Beauchamp Seymour, 1st Baron Alcester""@en .
    ?s dbo:militaryConflict ?war .
}

UNION

# Query to find the birthplace country of the leader of the 1962 NSW state election
SELECT ?birthPlaceCountry WHERE {
    ?leader dbp:office ""Leader of the Opposition in New South Wales""@en ;
            dbp:election ""1962 New South Wales state election""@en .
    ?leader dbo:birthPlace ?birthPlace .
    ?birthPlace rdf:type dbo:Country .
    BIND(?birthPlace AS ?birthPlaceCountry)
}

UNION

# Query to find the military unit of Heather Roy
SELECT ?militaryUnit WHERE {
    ?s dbp:name ""Heather Roy""@en ;
       dbo:profession ?profession .
    ?profession rdf:type dbo:MilitaryUnit .
    ?s dbo:militaryUnit ?militaryUnit .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,63,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfResidence ?claimToFameFilm ?claimToFameConflict ?child
WHERE {
  # Sylvie Bermann's native of residence
  ?sylvie a dbo:Person ;
          foaf:nationality dbr:United_Kingdom ;
          dbo:residence ?residence .
  ?residence a dbo:Settlement .

  # Sean Pertwee's claim to fame (film and military conflict)
  ?sean a dbo:Actor ;
        dbo:filmography ?claimToFameFilm ;
        dbo:occupation ?occupation .
  ?militaryConflict a dbo:MilitaryConflict ;
                    dbo:actor ?sean .
  
  FILTER (?claimToFameFilm != ?militaryConflict)

  # Jon Pertwee's child
  ?jon a dbo:Person ;
       foaf:name ""Jon Pertwee""^^xsd:string ;
       dbo:child ?child .

  BIND(?residence AS ?nativeOfResidence)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
659,63,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
# Step 1: Find the commander of the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
SELECT ?commander WHERE {
  ?regiment rdf:type dbo:MilitaryUnit .
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  ?conflict dbo:militaryConflict ?regiment .
  ?conflict dbo:commander ?commander .
}

# Step 2: Find the military force associated with Rutger Jan Schimmelpenninck
SELECT ?militaryForce WHERE {
  ?person rdf:type dbo:Person ;
          rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  ?conflict dbo:militaryConflict ?militaryForce ;
            dbo:commander ?person .
}

# Step 3: Find the native office holder of the Kingdom of Ireland who was a commander in the same military force
SELECT ?officeHolder WHERE {
  ?officeHolder rdf:type dbo:OfficeHolder ;
                dbo:nativeCountry dbr:Kingdom_of_Ireland ;
                dbo:positionHeld ?position .
  ?conflict dbo:militaryConflict ?militaryForce ;
            dbo:commander ?officeHolder .
}
```",7,13,8,3,3,3,3,71,0,0,15,0,0.0,0
232,31,test,Give me the actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?child 
WHERE {
  # Find the actor(s) of ""Dog Soldiers""
  ?movie dbo:title ""Dog Soldiers""@en .
  ?movie dbo:starring ?actor .

  # Get Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?birthName .

  # Find Jon Pertwee's child(ren)
  dbr:Jon_Pertwee dbo:child ?child .
  
  FILTER(?actor = ?child) 
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
528,60,test,"Give me the force of the person born as the birth name of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?force ?war
WHERE {
  # Find Narciso Campero's birth name and military force
  dbr:Narciso_Campero_Latorre dbo:birthName ?birthName .
  
  OPTIONAL {
    ?militaryForce dbo:militaryLeader dbr:Narciso_Campero_Latorre ;
                  dbo:force ?force .
  }
  
  # Find wars in Chile that are societal events
  ?war a dbo:MilitaryConflict ;
       dbo:location dbr:Chile ;
       rdfs:label ?warLabel .
}
```",6,7,7,3,2,3,3,71,0,0,4,0,0.0,0
232,24,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of London.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?militaryConflict WHERE {
  # Sean Pertwee's resource
  VALUES ?person { dbr:Sean_Pertwee }

  # Find films associated with Sean Pertwee
  ?person dbo:film ?film .

  # Find military conflicts associated with Sean Pertwee
  ?person dbo:militaryConflict ?militaryConflict .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
659,53,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?conflict
WHERE {
  # Find commanders in the Battle of Leipzig who were office holders in the Kingdom of Ireland
  ?battle a dbo:MilitaryConflict ;
         dbo:commander ?commander .
  FILTER (str(?battle) = ""Battle_of_Leipzig"")

  ?officeHolder dbo:officeHolderOf dbr:Kingdom_of_Ireland ;
                dbo:person ?commander .

  # Find the military conflict associated with Rutger Jan Schimmelpenninck
  dbr:Rutger_Jan_Schimmelpenninck dbo:participatedIn ?conflict .
  FILTER (dbo:militaryConflict(?conflict))
}
```",6,10,7,3,3,3,3,71,0,0,6,0,0.0,0
54,59,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commonEntity WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:childOf ?thinkhaya .
  FILTER(STR(?thinkhaya) = ""Thinkhaya_of_Pagan"") .

  # Child of Thinkhaya (i.e., grandchild of Thinkhaya)
  ?grandchild dbo:parent ?thinkhayaChild .

  # Thado Minsaw's parent
  ?thadoParent dbo:parentOf ?thadoMinsaw .
  FILTER(STR(?thadoMinsaw) = ""Thado_Minsaw_of_Prome"") .

  # Parent of Thado Minsaw (i.e., grandparent of Thado Minsaw)
  ?grandparent dbo:child ?thadoParent .

  # Find the common entity
  VALUES (?commonEntity) {
    (?grandchild)
    (?grandparent)
  }
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
10,25,test,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert and associated musical artist of the person born, that is an artist, as Matt Colton and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
# Query for Luke Francis Vibert (Plug)
SELECT ?bandMember ?associatedArtist WHERE {
  ?person rdfs:label ""Luke Francis Vibert""@en .
  ?person dbo:birthName ""Luke Francis Vibert"" .
  ?person dbo:bandMember ?bandMember .
  OPTIONAL { ?person dbo:associatedMusicalArtist ?associatedArtist . }
}

# Query for Matt Colton
SELECT ?profession WHERE {
  ?person rdfs:label ""Matt Colton""@en .
  ?person dbo:birthName ""Matt Colton"" .
  ?person dbo:profession ?profession .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
801,54,test,"Give me the professional in the alter ego of The Shadow and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of Chris Taylor (music producer).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?professional dbo:birthName ""Dennis Coles"" .
  ?professional rdfs:label ""Ghostface Killah""@en .
  ?professional dbo:profession dbr:Rapper .
  
  OPTIONAL { 
    ?work dbo:producer ?professional ;
          a dbo:Songs .
  }
  
  ?association dbo:associatedMusicalArtist ?professional ;
               dbo:musicalArtist dbr:Chris_Taylor_(music_producer) .
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
994,49,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find Watchtower's associated musical artist
SELECT ?artist1 WHERE {
    ?watchtower dbo:associatedBand ?artist1 .
    FILTER(STR(?watchtower) = ""Watchtower_(band)"")
}

# Step 2: Find the associated musical artist of the first artist
SELECT ?artist2 WHERE {
    ?artist1 dbo:associatedBand ?artist2 .
    # Assuming ?artist1 is bound from the previous query
}

# Step 3: Identify Don Dokken's band membership
SELECT ?band WHERE {
    ?dokken dbo:bandMember ?band .
    FILTER(STR(?dokken) = ""Don_Dokken"")
}

# Step 4: Find a person born who is a musical artist and band member of the identified band
SELECT DISTINCT ?person WHERE {
    ?person dbo:birthDate ?date .
    ?person dbo:bandMember ?band .
    FILTER(STR(?band) = STR(?bandFromStep3)) # Assuming ?bandFromStep3 is bound from Step 3
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
392,28,test,"Give me the entity in the region, that is a country, of Central European Time and region of the time zone, that is a sports event, of Aguilar de Segarra and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v5 . ?v5 <http://dbpedia.org/ontology/province> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country ?sportsEvent WHERE {
  # Find countries in the Central European Time zone
  ?timeZone a dbo:TimeZone ;
            dbo:timezoneName ""Central European Time"" .
  
  ?country dbo:timeZone ?timeZone .

  # Find sports events associated with Aguilar de Segarra
  ?location dbr:Aguilar_de_Segarra ;
            dbo:sportEvent ?sportsEvent .

  FILTER EXISTS { ?sportsEvent a dbo:SportsEvent }
}
```

Note: The query assumes that DBpedia has structured data for time zones, locations, and sports events in the manner described. Adjustments may be necessary based on actual schema details.",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
356,18,test,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton and player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v1 <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?team WHERE {
    # Step 1: Identify the native soccer player and manager from Wolverhampton
    ?person a dbo:SoccerPlayer ;
            dbo:nationality dbr:Wolverhampton ;
            dbo:managerOf ?currentTeam .
    
    # Step 2: Find the team of this person
    OPTIONAL { ?person dbo:playsFor ?team . }
    
    # Step 3 & 4: Identify the 2015 Sacramento Republic FC season and its predecessor (2014 USL Pro)
    dbr:2015_Sacramento_Republic_FC_season dbo:sportTeam dbr:Sacramento_Republic_FC ;
                                           dbo:league dbr:USL_Pro .
    
    # Step 5: Find a player from the 2015 Sacramento Republic FC team
    ?player dbo:playsFor dbr:Sacramento_Republic_FC ;
            dbo:memberOfTeam dbr:2015_Sacramento_Republic_FC_season .

    # Step 6: Determine the current team of this player
    ?player dbo:currentTeam ?currentPlayerTeam .
    
    # Return the team of the native soccer player and manager from Wolverhampton
    VALUES (?team) { ?currentTeam ?currentPlayerTeam }
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
312,8,test,Give me the entity in the birthplace of Giorgio Grigolli and entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceEntity ?bergamoEntity
WHERE {
  # Get birthplace of Giorgio Grigolli
  dbr:Giorgio_Grigolli dbo:birthPlace ?birthPlaceEntity .

  # Find an entity in Province of Bergamo
  ?bergamoEntity dbo:locatedIn dbr:Province_of_Bergamo .
}
```",3,3,4,2,2,2,2,9,0,0,228,0,0.0,0
314,22,test,Give me the awardee of the award of Sergei Makovetsky and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find awards associated with Sergei Makovetsky
SELECT ?award WHERE {
    dbr:Sergei_Makovetsky dbo:recipient ?award .
}

# Step 2: Find awardees of the same award
SELECT DISTINCT ?awardee WHERE {
    ?award dbo:recipient ?awardee .
    FILTER(?award IN (SELECT ?award WHERE { dbr:Sergei_Makovetsky dbo:recipient ?award }))
}

# Step 3: Identify House of Sombrerete and its headquarters
SELECT ?headquarters WHERE {
    dbr:House_of_Sombrerete dbo:location ?headquarters .
}

# Step 4: Find deceased persons at the headquarters location
SELECT DISTINCT ?person WHERE {
    ?person a dbo:Person ;
            dbo:deathPlace ?headquarters .
    FILTER(?headquarters IN (SELECT ?headquarters WHERE { dbr:House_of_Sombrerete dbo:location ?headquarters }))
}

# Step 5: Combine results to find the common individual
SELECT DISTINCT ?commonIndividual WHERE {
    VALUES (?awardee) {
        (SELECT DISTINCT ?awardee WHERE {
            ?award dbo:recipient ?awardee .
            FILTER(?award IN (SELECT ?award WHERE { dbr:Sergei_Makovetsky dbo:recipient ?award }))
        })
    }
    VALUES (?person) {
        (SELECT DISTINCT ?person WHERE {
            ?person a dbo:Person ;
                    dbo:deathPlace ?headquarters .
            FILTER(?headquarters IN (SELECT ?headquarters WHERE { dbr:House_of_Sombrerete dbo:location ?headquarters }))
        })
    }
    BIND(IF(BOUND(?awardee) && BOUND(?person), IF(?awardee = ?person, ?awardee, NULL), NULL) AS ?commonIndividual)
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
54,51,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of Narapati I of Ava.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mönnyin's child who is an office holder and royalty
  ?thihapateChild dbo:child dbr:Thihapate_of_Mohnyin ;
                  a dbo:Monarch ;
                  dbo:royalty true .

  # Predecessor of this child
  ?predecessor dbo:successor ?thihapateChild .

  # Narapati I's parent
  ?narapatisParent dbo:child dbr:Narapati_I_of_Ava .

  # Child of Narapati I's parent (Narapati I)
  ?narapatiI dbo:parent ?narapatisParent ;
            a dbo:Monarch .

  FILTER(?thihapateChild = ?narapatiI)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
182,28,test,Give me the war of the work of Gotabhaya Rajapaksa and entity in the nationality of Tamara Kunanayakam and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?nationality ?author
WHERE {
    # Gotabhaya Rajapaksa's involvement in a war
    dbr:Gotabhaya_Rajapaksa dbo:occupation dbr:Military_officer .
    OPTIONAL { 
        dbr:Gotabhaya_Rajapaksa dbo:work dbr:Sri_Lankan_Civil_War .
        BIND(dbr:Sri_Lankan_Civil_War AS ?war)
    }

    # Tamara Kunanayakam's nationality
    dbr:Tamara_Kunanayakam dbo:nationality dbr:Sri_Lanka .
    BIND(""Sri Lankan"" AS ?nationality)

    # Author of 2019 Sri Lanka Easter bombings
    dbr:National_Thowheeth_Jamaath dbo:leader dbr:Zahran_Hashim .
    BIND(dbr:Zahran_Hashim AS ?author)
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
959,61,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?managerOfManager
WHERE {
    # Step 1: Find the manager of Kashima Antlers in 1998
    ?kashimaAntlers dbr:Kashima_Antlers ;
                   dbo:season ""1998"" ;
                   dbo:manager ?manager1998 .

    # Step 2: Determine which team this sports manager manages
    ?team dbo:manager ?manager1998 .
    
    # Step 3: Find the leader of the 2010 Japanese House of Councillors election and their country of residence
    ?politician dbo:election ""2010 Japanese House of Councillors"" ;
               dbo:countryResidence ?residenceCountry .

    # Step 4: Identify the manager of this team
    ?teamManager dbo:manager ?team .
    
    # Filter to ensure we are dealing with a sports manager and politician
    ?manager1998 rdf:type dbo:SportsManager .
    ?politician rdf:type dbo:Politician .
    
    # Final step: Get the manager of the team managed by the sports manager
    ?teamManager2 dbo:manager ?teamManager .
}
```",6,9,7,3,2,3,3,71,0,0,6,0,0.0,0
179,18,test,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of the child of Bhumibol Adulyadej.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Identify Nakkhatra Mangala and her child
  ?nak_child dbo:childOf ?nak_mangala .
  ?nak_mangala rdfs:label ""Nakkhatra Mangala""@en .

  # Step 2: Determine the birth name of Nakkhatra Mangala's child
  ?nak_child dbo:birthName ?birth_name .
  
  # Ensure the person is royalty
  ?nak_child a dbo:Monarch ; 
             rdfs:label ?person_label .

  # Step 3: Identify Bhumibol Adulyadej's child and their parent
  ?bhumibol_child dbo:childOf ?parent .
  ?bhumibol_child dbo:childOf ?bhumibol_adulyadej .
  ?bhumibol_adulyadej rdfs:label ""Bhumibol Adulyadej""@en .

  # Step 4: Match the parent with the birth name
  FILTER (?parent = ?nak_child)
  
  BIND(?person_label AS ?person)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
547,36,test,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Query for the resting place of James Burton (Egyptologist)
SELECT ?burialPlace WHERE {
  ?person a dbo:Egyptologist ;
          foaf:name ""James Burton"" .
  ?person dbo:finalBurialPlace ?burialPlace .
}

UNION

# Query for the resting places of awardees of Gerald Graham's award
SELECT ?awardee ?awardeeBurialPlace WHERE {
  ?award a dbo:Award ;
         foaf:name ?awardName .
  ?award dbo:recipient ?awardee .
  ?awardee foaf:name ""Gerald Graham"" .
  
  OPTIONAL { 
    ?awardee dbo:finalBurialPlace ?awardeeBurialPlace .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
427,51,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of Lamberto Andreotti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?romanoProdiParty ?lambertoAndreottiFatherParty WHERE {
  # Romano Prodi's birth name and party
  OPTIONAL {
    ?prodi a dbo:Person ;
           foaf:name ""Romano Prodi""@en ;
           dbo:birthName ?romanoBirthName .
    ?prodi dbo:party ?romanoProdiParty .
  }

  # Lamberto Andreotti's father's party
  OPTIONAL {
    ?andreotti a dbo:Person ;
               foaf:name ""Lamberto Andreotti""@en ;
               dbo:father ?father .
    ?father dbo:party ?lambertoAndreottiFatherParty .
  }
}
```",5,7,6,3,2,3,3,71,3,4,0,0.42857142857142855,1.0,0.6
747,50,test,"Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query to get the band of Tracey Elizabeth McSween (Tracy Bonham)
SELECT ?band WHERE {
  ?person rdfs:label ""Tracey Elizabeth McSween""@en .
  ?person dbo:associatedBand ?band .
}

UNION

# Query to get the band of the writer of the song ""Amba Shepherd""
SELECT ?writerBand WHERE {
  ?song rdfs:label ""Amba Shepherd""@en .
  ?song dbo:musicBy ?writer .
  ?writer dbo:associatedBand ?writerBand .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
9,28,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as QUB and alma mater of Allen Hill (scientist).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Find the mayor of Northern Ireland Forum
  ?mayor a dbo:Person ;
         dbo:positionHeld ?position .
  FILTER(CONTAINS(LCASE(STR(?position)), ""northern ireland forum"")).

  # Alma mater of QUB
  VALUES (?qub) { dbr:Queen's_University_Belfast }

  # Allen Hill (Scientist)
  ?allen a dbo:Person ;
         foaf:name ""Allen Hill"" ;
         dbo:almaMater ?almaHill .

  # Common alma mater condition
  ?mayor dbo:almaMater ?almaMater .
  ?qub dbo:alumni ?almaQUB .
  FILTER(?almaMater = ?almaHill && ?almaMater = ?almaQUB)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
9,70,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?institution ?nickname WHERE {
  ?institution a dbo:EducationalInstitution ;
               dbo:location dbr:Northern_Ireland .
  
  ?mayor dbo:almaMater ?institution ;
         dbo:occupation dbr:Northern_Ireland_Forum_Mayor .

  ?awardee dbo:awardReceived dbr:Royal_Medals ;
           dbo:almaMater ?institution .

  OPTIONAL { ?institution rdfs:label ?nickname FILTER (lang(?nickname) = 'en') }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
184,52,test,"Give me the child of the child of Archduke Joseph Karl of Austria and parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
# Step 1: Find the child of Archduke Joseph Karl of Austria
SELECT ?child WHERE {
    ?person dbo:spouse ?archduke .
    ?archduke foaf:name ""Joseph Karl of Austria"" .
    ?person dbo:child ?child .
}

# Step 2: Find the grandchildren (children of the child)
SELECT DISTINCT ?grandchild WHERE {
    ?child dbo:child ?grandchild .
    # Assuming we have identified a specific child from step 1
    VALUES (?child) { <http://dbpedia.org/resource/Child_of_Archduke_Joseph_Karl> }
}

# Step 3: Find the parent of Archduchess Ilona of Austria
SELECT ?parent WHERE {
    ?person dbo:spouse ?archduchess .
    ?archduchess foaf:name ""Ilona of Austria"" .
    ?person dbo:child ?archduchess .
}

# Step 4: Find the intersection (common entity)
SELECT DISTINCT ?entity WHERE {
    VALUES (?grandchild) { <http://dbpedia.org/resource/Grandchild_of_Archduke_Joseph_Karl> }
    VALUES (?parent) { <http://dbpedia.org/resource/Parent_of_Ilona_of_Austria> }
    FILTER(?grandchild = ?parent)
}

# Step 5: Find the native of a settlement at elevation 96.0 meters
SELECT DISTINCT ?native WHERE {
    ?settlement dbo:elevation ""96.0"" .
    ?settlement rdf:type dbo:Settlement .
    ?native dbo:nativePlace ?settlement .
    # Assuming we have identified an entity from step 4
    VALUES (?entity) { <http://dbpedia.org/resource/Entity_from_Step_4> }
    FILTER(?native = ?entity)
}

# Final query combining all conditions
SELECT DISTINCT ?entity WHERE {
    VALUES (?grandchild) { <http://dbpedia.org/resource/Grandchild_of_Archduke_Joseph_Karl> }
    VALUES (?parent) { <http://dbpedia.org/resource/Parent_of_Ilona_of_Austria> }
    FILTER(?grandchild = ?parent)
    
    ?settlement dbo:elevation ""96.0"" .
    ?settlement rdf:type dbo:Settlement .
    ?native dbo:nativePlace ?settlement .
    FILTER(?entity = ?native)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
391,52,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of All About the Andersons and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Step 1: Find the nickname for Jackson, Tennessee
  dbr:Jackson_(Tennessee) dbo:nickname ?nickname .

  # Step 2: Identify an actor with this nickname
  ?actor a dbo:Person ;
         rdfs:label ?actorLabel ;
         foaf:name ?nickname ;
         dbo:birthPlace ?nativePlace .

  FILTER(CONTAINS(LCASE(?actorLabel), ""actor"")) 

  # Step 3: Check if the actor acted in ""All About the Andersons""
  ?actor dbo:actedIn dbr:All_About_the_Andersons .

  # Step 4: Verify claim to fame is a work directed by Michael Ballhaus
  ?actor dbo:claimToFame ?work .
  ?work dbo:director dbr:Michael_Ballhaus .
  
  FILTER(LANG(?nativePlace) = 'en')
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
994,47,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Step 1: Find associated musical artists of Watchtower members
  ?watchtowerMember dbo:member dbr:Watchtower ;
                   dbo:associatedBand ?artist1 .
  
  # Step 2: Identify Fredrik Thordendal's band that is both a group and an organization
  ?thordendalBand dbo:member dbr:Fredrik_Thordendal ;
                  rdf:type dbo:MusicalGroup, dbo:Organization .

  # Step 3: Find associated musical artists of the members of Fredrik Thordendal's band
  ?thordendalMember dbo:member ?thordendalBand ;
                    dbo:associatedBand ?artist2 .
}
```",5,9,6,3,2,3,3,71,0,0,5,0,0.0,0
659,66,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?event
WHERE {
  # Arthur Wellesley's command role
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:commander ?force .
  
  # Events involving the force commanded by Wellington
  ?force dbo:participatedIn ?event .

  # Commander of the 1st Light Cavalry Lancers Regiment
  OPTIONAL {
    dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) dbo:commander ?regimentCommander .
    
    # Events involving the regiment
    ?regimentCommander dbo:participatedIn ?event .
  }

  # Rutger Jan Schimmelpenninck's involvement in events
  OPTIONAL {
    dbr:Rutger_Jan_Schimmelpenninck dbo:participatedIn ?diplomaticEvent .
    
    # Linking diplomatic events to military conflicts
    ?diplomaticEvent dbo:sameAs ?event .
  }

  # Filter for societal and military conflict events
  FILTER (STRSTARTS(STR(?event), ""http://dbpedia.org/resource/"") && 
          (CONTAINS(LCASE(STR(?event)), ""conflict"") || CONTAINS(LCASE(STR(?event)), ""societal"")))
}
```",7,12,8,3,3,3,3,71,0,0,15,0,0.0,0
547,65,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlaceActor ?restingPlaceKnightGrandCross ?restingPlaceChild
WHERE {
  # Part 1: Resting place of the actor from a show with Emily Richard (Emily Watson)
  ?show dbo:starring dbr:Emily_Watson .
  ?actor dbo:actedIn ?show ;
         dbo:finalRestingPlace ?restingPlaceActor .

  # Part 2: Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George ;
          dbo:finalRestingPlace ?restingPlaceKnightGrandCross .

  # Part 3: Resting place of the child of James Burton (property developer)
  ?jamesBurton a dbo:PropertyDeveloper ;
               foaf:name ""James Burton"" .
  ?child dbo:parent ?jamesBurton ;
         dbo:finalRestingPlace ?restingPlaceChild .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
547,71,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/awards> ?v7 . ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v8 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v7 . ?v4 <http://dbpedia.org/property/starring> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Resting place of the awardee of Gerald Graham
SELECT ?awardeeRestingPlace WHERE {
  ?geraldGraham a dbo:Person ;
                foaf:name ""Gerald Graham""@en .
  ?awardEvent dbo:recipient ?awardee ;
              dbo:recipient ?geraldGraham .
  ?awardee dbo:deathPlace ?awardeeRestingPlace .
}

UNION

# Resting place of the actor in the show with Emily Richard
SELECT ?actorRestingPlace WHERE {
  ?show dbo:starring ?emilyRichard ;
        dbo:starring ?actor .
  ?emilyRichard foaf:name ""Emily Richard""@en .
  ?actor dbo:deathPlace ?actorRestingPlace .
}

UNION

# Resting place of the child of the child of William Haliburton
SELECT ?grandchildRestingPlace WHERE {
  ?williamHaliburton a dbo:Person ;
                     foaf:name ""William Haliburton""@en .
  ?child dbo:parent ?williamHaliburton ;
         dbo:child ?grandchild .
  ?grandchild dbo:deathPlace ?grandchildRestingPlace .
}
```",9,9,10,3,3,3,3,71,0,0,1,0,0.0,0
55,28,test,"Give me the band of the reference, that is a band, to Newsted and band member of the producer, that is a band, of Used to Love Her and band member of the band member, that is a band and a group, of San Francisco Symphony.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Jason Newsted is a member of Metallica
  dbr:Jason_Newsted dbo:memberOf dbr:Metallica .

  # Rick Rubin produced ""Used to Love Her""
  dbr:Rick_Rubin dbo:producedSong dbr:Used_to_Love_Her .

  # Flea is a member of Red Hot Chili Peppers, which is associated with Rick Rubin
  dbr:Flea dbo:memberOf dbr:Red_Hot_Chili_Peppers .
  dbr:Rick_Rubin dbo:associatedBand dbr:Red_Hot_Chili_Peppers .

  # Flea is also a member of Superheavy
  dbr:Flea dbo:memberOf dbr:Superheavy .

  # Michael Tilson Thomas is associated with San Francisco Symphony
  dbr:Michael_Tilson_Thomas dbo:associatedWith dbr:San_Francisco_Symphony .
  
  # We are looking for the band that connects these elements, which is Superheavy
  ?band rdfs:label ""Superheavy""@en .
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
303,25,test,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Arnulfo Arias and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v4 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInCountry ?arnulfoParty ?commanderPolitician
WHERE {
  # El Valle de Antón's country
  dbr:El_Valle_de_Antón dbo:locatedIn ?country .
  
  # Arnulfo Arias's party
  dbr:Arnulfo_Arias dbo:partyAffiliation ?arnulfoParty .

  # Commander during United States invasion of Panama who is a politician
  {
    SELECT DISTINCT ?commanderPolitician WHERE {
      ?event dbo:commander ?commander .
      ?commander rdf:type dbo:Person ;
                dbo:occupation dbr:Politician .
      FILTER regex(str(?event), ""United_States_invasion_of_Panama"", ""i"")
    }
  }

  # Ensure the commander is a politician
  ?commanderPolitician rdf:type dbo:Person ;
                       dbo:occupation dbr:Politician .

  # Return results
  BIND(?country AS ?entityInCountry)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
404,49,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Person ;
           dbp:name ""Victoria Louise, Princess Royal"" ;
           dbo:birthPlace ?place .

  # Step 2: Determine Her Spouse
  ?princess dbo:spouse ?spouse .
  
  # Step 3: Find the Father of Her Spouse
  ?spouse dbo:father ?father .

  # Step 4: Identify a Child of This Father Who is Royalty and Born as Princess Victoria Louise of Prussia
  ?child dbo:father ?father ;
         dbp:name ""Victoria Louise, Princess Royal"" .
  
  # Return the spouse's name
  ?spouse rdfs:label ?spouseName .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
427,62,test,Give me the reference to the name of the party of Michele Pinto and party of the father of the alumnus of Massachusetts Institute of Technology and party of Romano Prodi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v6 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?micheleParty ?fatherParty ?prodiParty
WHERE {
  # Michele Pinto's party affiliation
  OPTIONAL { 
    dbr:Michele_Pinto dbo:partyAffiliation ?micheleParty .
  }

  # Father of an MIT alumnus' party affiliation
  OPTIONAL {
    ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
            dbo:father ?father .
    ?father dbo:partyAffiliation ?fatherParty .
  }
  
  # Romano Prodi's party affiliation
  OPTIONAL {
    dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
  }
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
547,48,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query for the resting place of the child of the child of William Haliburton
SELECT DISTINCT ?grandchildRestingPlace WHERE {
  ?williamHaliburton a dbo:Person ;
                     foaf:name ""William Haliburton""@en .
  
  ?child dbo:parent ?williamHaliburton .
  ?grandchild dbo:parent ?child .
  
  OPTIONAL { ?grandchild dbo:restingPlace ?grandchildRestingPlace . }
}

UNION

# Query for the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT DISTINCT ?awardeeRestingPlace WHERE {
  ?person a dbo:Person ;
          dbo:honoraryTitle ?knightGrandCross .
  
  FILTER regex(?knightGrandCross, ""Knight Grand Cross of the Order of St Michael and St George"", ""i"") .

  OPTIONAL { ?person dbo:restingPlace ?awardeeRestingPlace . }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
16,38,test,Give me the professional in the profession of Satomi Ishihara and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Satomi Ishihara's profession
  dbr:Satomi_Ishihara dbo:profession ?satomiProfession .

  # Find Gigi Rice's birth name
  dbr:Gigi_Rice dbo:birthName ?gigiBirthName .

  # Find a person with the same profession as Satomi Ishihara and the same birth name as Gigi Rice
  ?person dbo:profession ?satomiProfession .
  ?person dbo:birthName ?gigiBirthName .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
404,31,test,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouseBirthName WHERE {
  # Find the parent of Prince Ernest Augustus of Hanover
  dbr:Prince_Ernest_Augustus_of_Hanover (dbo:parent) ?parent .

  # Find Princess Victoria Louise of Prussia and her spouse's birth name
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .
  ?spouse dbo:birthName ?spouseBirthName .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
492,49,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
# Part 1: Find the capital of Khemis Miliana District and person decedent there

SELECT DISTINCT ?capital ?decedentAtCapital WHERE {
  # Find the country for Khemis Miliana District
  ?district dbo:country dbr:Algeria .
  ?district rdfs:label ""Khemis Miliana District""@en .

  # Find the capital of this district
  ?district dbo:settlementCapital ?capital .

  # Find person decedent at this capital
  ?decedent dbo:deathPlace ?capital ;
            a dbo:Person .
}

UNION

# Part 2: Find Joseph C. Satterthwaite's work location and person decedent there

SELECT DISTINCT ?workLocation ?decedentAtWork WHERE {
  # Find the office location for US Assistant Secretary of State for African Affairs
  ?office dbo:position dbr:US_Assistant_Secretary_of_State_for_African_Affairs ;
          dbo:employee ?satterthwaite .
  
  ?satterthwaite rdfs:label ""Joseph C. Satterthwaite""@en .

  # Find the location of this office
  ?office dbo:location ?workLocation .

  # Find person decedent at this work location
  ?decedent dbo:deathPlace ?workLocation ;
            a dbo:Person .
}
```",5,6,6,3,2,3,3,71,0,0,16,0,0.0,0
10,20,test,"Give me the professional in  and associated musical artist of Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mattColtonProfession ?associatedArtist ?lukeVibertBand
WHERE {
  # Matt Colton's professional role and associated artists
  dbr:Matt_Colton a dbo:Person .
  OPTIONAL { dbr:Matt_Colton dbo:profession ?mattColtonProfession . }
  OPTIONAL { 
    ?artist dbo:associatedBandMember dbr:Matt_Colton ;
            rdfs:label ?associatedArtist .
  }

  # Luke Francis Vibert's band membership
  dbr:Luke_Francis_Vibert a dbo:Person ;
                          dbo:band ?lukeVibertBand .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
328,66,test,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/property/office> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?individual
WHERE {
  # Ferenc Szálasi's commander
  ?szalasiCommander dbo:commandedBy dbr:Ferenc_Szálasi .
  
  # Awardee of Bruce Fraser, 1st Baron Fraser of North Cape
  ?fraserAward dbo:recipient ?awardee .
  FILTER(?awardee = ?individual)
  {
    SELECT DISTINCT ?awardee WHERE { 
      ?fraserAward dbo:givenBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape ;
                   dbo:recipient ?awardee .
    }
  }

  # Leader of a government agency
  ?governmentLeader dbo:leaderOf ?agency .
  FILTER(?individual = ?governmentLeader)
  {
    SELECT DISTINCT ?governmentLeader WHERE { 
      ?agency a dbo:GovernmentAgency ;
              dbo:leader ?governmentLeader .
    }
  }

  # Leader, office holder, and politician of Gustav Jonson
  ?jonsonLeader dbo:leaderOf ?office .
  FILTER(?individual = ?jonsonLeader)
  {
    SELECT DISTINCT ?jonsonLeader WHERE { 
      ?office a dbo:Office ;
              dbo:holder ?jonsonLeader ;
              dbo:politician dbr:Gustav_Jonson .
    }
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
427,34,test,Give me the party of Romano Prodi and reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

# Query for Romano Prodi's party
SELECT ?party WHERE {
  ?prodi a dbo:Person ;
         foaf:name ""Romano Prodi""@en .
  ?prodi dbo:party ?party .
}

UNION

# Query for Michele Pinto's party
SELECT ?party WHERE {
  ?pinto a dbo:Person ;
         foaf:name ""Michele Pinto""@it .
  ?pinto dbo:party ?party .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
617,70,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse WHERE {
  ?antiochusIV dbo:successorOf ?antiochusIII .
  FILTER(STR(?antiochusIII) = ""Antiochus III the Great""^^xsd:string)
  
  ?child dbo:parent ?antiochusIV ;
         rdf:type dbo:Person .

  ?royalChild dbo:parent ?antiochusIV ;
              rdf:type dbo:Royalty .
  
  ?spouse dbo:spouse ?royalChild .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
184,58,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of Géza von Habsburg and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonAncestor WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            foaf:name ""Margaret of Austria"" ;
            dbo:birthDate ?date1 .
  FILTER(YEAR(?date1) = 1925)

  # Parent of Margaret
  ?parentOfMargaret dbo:child ?margaret .

  # Child of the parent of Margaret (likely another family member)
  ?childOfParent dbr:Margaret_of_Austria_(born_1925)/dbo:parent ?parentOfMargaret .

  # Parent of this child (grandparent of Margaret)
  ?grandparentOfMargaret dbo:child ?childOfParent .

  # Géza von Habsburg
  ?geza a dbo:Person ;
        foaf:name ""Géza von Habsburg"" .

  # Parent of Géza
  ?parentOfGeza dbo:child ?geza .

  # Child of the parent of Géza (likely another family member)
  ?childOfParentGeza dbr:Géza_von_Habsburg/dbo:parent ?parentOfGeza .

  # Parent of this child (grandparent of Géza)
  ?grandparentOfGeza dbo:child ?childOfParentGeza .

  # Archduke Joseph Karl of Austria
  ?josephKarl a dbo:Person ;
              foaf:name ""Joseph Karl of Austria"" .

  # Child of Archduke Joseph Karl
  ?childOfJosephKarl dbo:parent ?josephKarl .

  # Find common ancestor (grandparent or parent)
  OPTIONAL { ?commonAncestor dbo:child ?childOfParent . }
  OPTIONAL { ?commonAncestor dbo:child ?childOfParentGeza . }
  OPTIONAL { ?commonAncestor dbo:child ?childOfJosephKarl . }

  FILTER(?commonAncestor != dbr:Margaret_of_Austria_(born_1925) &&
         ?commonAncestor != dbr:Géza_von_Habsburg &&
         ?commonAncestor != dbr:Joseph_Karl_of_Austria)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
404,69,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia by her birth name
  dbr:Princess_Victoria_Louise_of_Prussia dbo:birthName ?birthName .
  
  # Step 2: Find her spouse
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

  # Step 3: Identify a child of Ernest Augustus, Duke of Brunswick who is royalty
  ?child dbo:parent dbr:Ernest_Augustus,_Duke_of_Brunswick ;
         a dbo:Person .
  
  # Step 4: Ensure the parent of this child matches the spouse of Princess Victoria Louise of Prussia
  ?child dbo:parent ?spouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,24,test,Give me the parent of Archduchess Ilona of Austria and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commonEntity WHERE {
  # Find the parent of Archduchess Ilona of Austria
  ?ilona dbo:parent ?parent .
  VALUES ?ilona { <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> }

  # Find the grandchildren of Archduke Joseph Karl of Austria
  ?josephKarl dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .

  VALUES ?josephKarl { <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> }

  # Find a common entity between the parent of Ilona and the grandchildren of Joseph Karl
  FILTER (?parent = ?grandchild)
  
  BIND(?parent AS ?commonEntity)
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
820,17,test,Give me the child of the parent of the professional in Actor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfParent
WHERE {
  ?actor a dbo:Actor .
  ?parent dbo:child ?actor .
  ?parent dbo:child ?childOfParent .
}
```",4,4,5,3,2,3,2,20,6,147,122,0.0392156862745098,0.046875,0.042704626334519574
767,71,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v8 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . ?v5 <http://dbpedia.org/property/governor> ?v4 . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v4 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v7 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  # Step 1: Find Matthew Burland's alter ego
  OPTIONAL { 
    dbr:Matthew_Burland dbo:fictionalAlterEgo ?alterEgo .
  }

  # Step 2: Find George Kilbon Nash's alma mater
  OPTIONAL {
    dbr:George_Kilbon_Nash dbo:almaMater ?almaMater .
  }
  
  # Step 3: Find the writer of ""Where It's At"" by Dustin Lynch and their settlement
  OPTIONAL {
    dbr:""Where_It%27s_At_(Dustin_Lynch_album)"" dbo:lyricsBy ?writer .
    ?writer dbo:residenceLocation ?settlement .
  }
  
  # Step 4: Combine information to find the connection
  FILTER(?almaMater = ?settlement)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
77,17,test,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw and war of Alexander Chechenskiy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?force WHERE {
  ?mayor a dbo:Mayor ;
         dbo:location dbr:Warsaw .
  
  OPTIONAL { 
    ?organization dbo:head ?mayor .
    ?organization a dbo:Organization .
  }
  
  ?event dbo:wikiPageWikiLink dbr:Aleksandr_Chechenskiy .
  ?mayor dbo:participatedIn ?event .

  # Assuming 'force' is interpreted as influence or role
  OPTIONAL { 
    ?mayor dbo:role ?force .
  }
}
```",4,5,5,3,2,3,2,20,0,0,6,0,0.0,0
54,58,test,"Give me the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?officeHolder
WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:parent dbr:Thinkhaya_of_Pagan .
  
  # Narapati I of Ava's child and that child's parent
  ?narapatiChild dbo:parent dbr:Narapati_I_of_Ava .
  ?parentOfNarapatiChild dbo:child ?narapatiChild .

  # Thihapate of Mohnyin's reference to an office holder and royalty, predecessor of Narapati I's child
  ?officeHolder rdf:type dbo:OfficeHolder ;
                rdf:type dbo:Royalty ;
                dbo:predecessor ?parentOfNarapatiChild .
  
  FILTER(?thinkhayaChild = ?officeHolder)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
391,55,test,"Give me the native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?nativePlace WHERE {
  # Step 1: Identify ""Hub City""
  VALUES ?hubCity { 
    dbr:Milwaukee_Wisconsin#Nicknames 
    dbr:Charleston_South_Carolina#Nicknames
    dbr:Buffalo_New_York#Nicknames
    dbr:Wichita_Kansas#Nicknames
    # Add more potential ""Hub City"" aliases if needed
  }
  
  ?hubCity dbo:nativeOf ?nativePlace .

  # Step 2: Find the movie involving Roz Ryan and Michael Ballhaus
  ?movie dbo:starring ?actor .
  ?movie dbo:director dbr:Michael_Ballhaus .
  ?movie dbo:writer dbr:Roz_Ryan .
  
  # Ensure it's both a film and television show
  ?movie rdf:type dbo:Film ;
         rdf:type dbo:TelevisionShow .

  # Step 3: Find the actor who is native to ""Hub City""
  ?actor dbo:nativePlace ?nativePlace .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
701,28,test,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?henuttawyParent ?ramessesSpouse WHERE {
  # Find the parent of Henuttawy (19th dynasty)
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy""@en .
  OPTIONAL { ?henuttawy dbo:parent ?henuttawyParent . }

  # Confirm Nefertari as spouse of Ramesses II
  ?ramesses dbr:Ramesses_II ;
            dbo:spouse ?ramessesSpouse .

  FILTER (str(?ramessesSpouse) = ""Nefertari""@en)

  # Ensure that the parent of Henuttawy and spouse of Ramesses II are the same entity
  FILTER (?henuttawyParent = ?ramessesSpouse)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
16,45,test,Give me the spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University and professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?alumna ?birthName
WHERE {
    # Find Ted McGinley's spouse
    ?ted a dbo:Person ;
         foaf:name ""Ted McGinley"" ;
         dbo:spouse ?spouse .

    # Find the alumna of Ohio State University who is an actress and has a specific birth name
    ?alumna a dbo:Person ;
            dbp:almaMater <http://dbpedia.org/resource/Ohio_State_University> ;
            dbo:occupation ?occupation .
    
    FILTER(CONTAINS(LCASE(str(?occupation)), ""actress""))

    # Match the alumna's birth name with the spouse
    ?spouse dbo:birthName ?birthName .

}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
328,64,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in Eastern Front (World War II) and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leaderOfOffice WHERE {
  # Step 1: Identify Gustav Jonson as a politician and office holder
  ?gustavJonson a dbo:Person ;
                rdfs:label ""Gustav Jonson""@en ;
                dbo:officeHolder ?office .

  # Step 2: Find the commander on the Eastern Front during World War II related to Gustav Jonson
  ?easternFrontCommander a dbo:Person ;
                        dbo:commanderOf ?easternFront ;
                        dbo:relatedTo ?gustavJonson .

  # Step 3: Identify the awardee of the Volcano and Ryukyu Islands campaign
  ?awardee a dbo:Person ;
           dbo:awardeeOf ?volcanoRyukyuCampaign ;
           dbo:commanderOf ?easternFront .

  # Step 4: Determine the leader of the office that is a government agency related to the awardee
  ?office a dbo:GovernmentAgency ;
          dbo:leader ?leaderOfOffice .
  
  FILTER (CONTAINS(LCASE(?volcanoRyukyuCampaign), ""volcano"") && CONTAINS(LCASE(?volcanoRyukyuCampaign), ""ryukyu islands""))
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
54,52,test,Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChildNarapatiI ?childThinkhaya ?commonEntity
WHERE {
  # Narapati I of Ava and his child
  dbr:Narapati_I_of_Ava dbo:child ?childNarapatiI .
  ?childNarapatiI dbo:parent ?parentOfChildNarapatiI .

  # Thinkhaya of Pagan and his child
  dbr:Thinkhaya_of_Pagan dbo:child ?childThinkhaya .

  # Predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava dbo:predecessor ?predecessorAmeitta .

  # Find common entity or relationship
  FILTER (?parentOfChildNarapatiI = ?childThinkhaya || ?parentOfChildNarapatiI = ?predecessorAmeitta)
}
```",6,6,7,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
9,54,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as QUB.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Part 1: Awardee of Royal Medals
  {
    ?person dbo:award dbr:Royal_Medal .
    ?person dbo:almaMater ?almaMater .
  }
  
  UNION
  
  # Part 2: Mayor of Northern Ireland Forum
  {
    ?mayor rdf:type dbo:Politician ;
           dbo:officeTitle ""Mayor"" ;
           dbo:memberOf dbr:Northern_Ireland_Forum .
    ?mayor dbo:almaMater ?almaMater .
  }
  
  UNION
  
  # Part 3: Figure known as QUB
  {
    ?person dbo:almaMater dbr:Queen's_University_Belfast .
    BIND(dbr:Queen's_University_Belfast AS ?almaMater)
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
492,68,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/author> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v5 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Find the commander in the Battle of Verdun
SELECT ?commander WHERE {
    ?battle dbo:commander ?commander .
    ?battle rdfs:label ""Battle of Verdun""@en .
}

# Step 2: Identify another military conflict/event involving this commander
SELECT DISTINCT ?conflict WHERE {
    ?conflict dbo:commander ?commander .
    FILTER(?commander IN (SELECT ?cmd FROM { 
        SELECT ?cmd WHERE {
            ?battle dbo:commander ?cmd .
            ?battle rdfs:label ""Battle of Verdun""@en .
        }
    }))
}

# Step 3: Find the capital of Algeria
SELECT ?capital WHERE {
    ?country dbr:Algeria ;
             dbo:capital ?capital .
}

# Step 4: Identify who died in the capital of Algeria
SELECT DISTINCT ?decedent WHERE {
    ?deathEvent dbo:place ?capital ;
                dbo:agent ?decedent .
    ?capital dbo:capital dbr:Algeria .
}

# Step 5: Find the author of ""French Algeria"" and their notable work
SELECT ?author ?work WHERE {
    ?book dbo:author ?author ;
          rdfs:label ""French Algeria""@en .
    ?author dbo:notableWork ?work .
}

# Step 6: Identify a person decedent at this work or related location
SELECT DISTINCT ?decedent WHERE {
    ?deathEvent dbo:place ?location ;
                dbo:agent ?decedent .
    ?location dbo:relatedTo ?work .
    ?work dbo:author ?author .
    ?book rdfs:label ""French Algeria""@en .
}

# Step 7: Link the two decedents
SELECT DISTINCT ?commander WHERE {
    VALUES (?decedent1) { (SELECT ?decedent WHERE {
        ?deathEvent dbo:place ?capital ;
                    dbo:agent ?decedent .
        ?capital dbo:capital dbr:Algeria .
    }) }
    
    VALUES (?decedent2) { (SELECT ?decedent WHERE {
        ?deathEvent dbo:place ?location ;
                    dbo:agent ?decedent .
        ?location dbo:relatedTo ?work .
        ?work dbo:author ?author .
        ?book rdfs:label ""French Algeria""@en .
    }) }
    
    ?conflict dbo:commander ?commander .
    FILTER(?commander IN (SELECT ?cmd FROM { 
        SELECT ?cmd WHERE {
            ?battle dbo:commander ?cmd .
            ?battle rdfs:label ""Battle of Verdun""@en .
        }
    }))
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
488,55,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in Boshin War and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceYūkiFather ?birthPlaceBoshinCommander ?administrationGoMizunooFather
WHERE {
  # Father of Yūki Hideyasu who was a politician
  ?yukiHideyasu dbo:father ?fatherYūki .
  ?fatherYūki dbo:occupation dbr:Politician .
  ?fatherYūki dbo:deathPlace ?deathPlaceYūkiFather .

  # Commander in Boshin War
  ?boshinCommander dbo:birthPlace ?birthPlaceBoshinCommander .
  FILTER EXISTS { ?boshinCommander dbo:wikiPageWikiLink dbr:Boshin_War }

  # Father of Emperor Go-Mizunoo
  ?goMizunoo dbo:father ?fatherGoMizunoo .
  ?fatherGoMizunoo dbo:officeHolder ?administrationGoMizunooFather .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
378,70,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?triggeWar ?peninsularCommander ?commanderClaimToFame ?gahnWar
WHERE {
  # Thomas Trigge's military conflict
  ?trigge dbo:militaryConflict ?triggeWar .
  FILTER EXISTS { ?trigge dbr:Thomas_Trigge . }

  # Peninsular War and its commander
  ?peninsularWar dbo:name ""Peninsular War"" .
  ?peninsularWar dbo:commanderOf ?peninsularCommander .

  # Commander's claim to fame
  ?peninsularCommander dbo:claimToFame ?commanderClaimToFame .
  FILTER EXISTS { 
    ?commanderClaimToFame a dbo:MilitaryConflict ;
                         a dbo:SocietalEvent ;
                         a dbo:Event
  }

  # Carl Pontus Gahn's military conflict
  ?gahn dbo:militaryConflict ?gahnWar .
  FILTER EXISTS { ?gahn dbr:Carl_Pontus_Gahn . }
}
```",8,12,9,3,3,3,3,71,0,0,2,0,0.0,0
617,67,test,"Give me the parent of the child of the commander in Battle of Panium and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfSpouse WHERE {
  # Step 1: Identify the commander in the Battle of Panium
  ?battle dbo:eventLocation ?location .
  FILTER (str(?location) = ""Battle of Panium"")
  ?battle dbo:commander ?commander .

  # Step 2: Find the child of this commander and their parent
  ?child dbo:parent ?commander .
  ?child dbo:parent ?parentOfChild .

  # Step 3: Identify Antiochus (son of Antiochus III the Great) and his successor
  dbr:Antiochus_III_the_Great dbo:son ?antiochusSon .
  ?antiochusSon dbo:succesor ?successor .

  # Step 4: Find the spouse of the child of this successor who is royalty
  ?childOfSuccessor dbo:parent ?successor .
  ?spouse dbo:spouse ?childOfSuccessor .
  FILTER EXISTS { ?spouse a dbo:Monarch } 

  # Step 5: Identify the parent of this spouse
  ?spouse dbo:parent ?parentOfSpouse .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
747,60,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  # Find Shèna's birth date
  VALUES ?shena { dbr:Shèna }
  ?shena dbo:birthDate ?birthDate .

  # Find a deceased person with the same birth date as Shèna
  ?decedent dbo:deathDate ?deathDate .
  FILTER EXISTS { ?decedent dbo:birthDate ?birthDate }

  # Find an athlete and soccer player born in Zolotonosha on that date
  ?athlete dbo:sport dbr:Soccer ;
           dbo:placeOfBirth dbr:Zolotonosha ;
           dbo:birthDate ?birthDate .

  # Get the band associated with this person
  ?athlete dbo:band ?band .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
492,66,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v6 . ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?decedent WHERE {
  # Find the capital of Khemis Miliana District
  ?district dbo:capital ?capital .
  FILTER(STR(?district) = ""Khemis_Miliana_District"") .

  # Find decedents at this capital
  ?decedent1 dbo:decedentAt ?capital .

  # Find Joseph C. Satterthwaite's work and associated decedents
  dbr:Joseph_C._Satterthwaite dbo:workLocation ?work .
  ?decedent2 dbo:decedentAt ?work .

  # Find Frédéric-Georges Herr's military conflict and associated decedents
  dbr:Frédéric-Georges_Herr dbo:militaryConflict ?conflict .
  ?decedent3 dbo:commanderInWar ?conflict .

  # Combine results to find common decedents
  FILTER(?decedent1 = ?decedent2 && ?decedent2 = ?decedent3)
  BIND(?decedent1 AS ?decedent)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
778,19,test,"Give me the author of the work, that is a software, of the author of Pushd and popd and entity in the award of Ralph L. Brinster.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author WHERE {
  # Step 1: Identify Bill Joy as the author of Pushd and Popd
  dbr:Bill_Joy dbo:profession dbr:Computer_programmer .
  
  # Step 2: Find software authored by Bill Joy
  ?software dbo:creator dbr:Bill_Joy .
  
  # Step 3: Identify Ralph L. Brinster's award entity
  dbr:Ralph_L._Brinster dbo:award dbr:National_Medal_of_Science ;
                       dbo:awardRecipientOf dbr:National_Academy_of_Sciences .

  # Step 4: Check for common authors between the software and the award entity
  ?author dbo:creator ?software .
  ?author dbo:member dbr:National_Academy_of_Sciences .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
360,22,test,"Give me the writer of the work, that is an album, of Dave Flett and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?albumWriter WHERE {
  # Find an album by Dave Flett
  ?album dbo:artist dbr:Dave_Flett .
  
  # Find the place of death for Winnie Madikizela-Mandela
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .

  # Ensure the writer of the album is associated with the death place
  ?album dbo:writer ?albumWriter .
  ?albumWriter dbo:birthPlace ?deathPlace .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
666,18,test,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach) and figure known as the nickname of England national beach soccer team.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?playerInManager ?nickname
WHERE {
  # Find Leonid Slutsky's team
  ?teamSeason a dbo:SoccerClub ;
              dbo:manager ?slutsky .
  
  FILTER(?slutsky = dbpedia:Leonid_Slutsky)

  # Find the player in manager role for that team
  ?playerInManager a dbo:SportsManager ;
                   dbo:playerInManager ?teamSeason .

  # Find the nickname of England national beach soccer team
  ?beachTeam rdfs:label ""England national beach soccer team""@en .
  
  OPTIONAL {
    ?beachTeam dbo:nickname ?nickname .
  }
}
```",5,8,6,3,2,3,2,20,0,0,2,0,0.0,0
701,20,test,Give me the parent of the child of Ramesses II and parent of Meritamen.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?childParent ?meritamenParent WHERE {
  # Find a child of Ramesses II
  ?ramesses2 dbo:child ?child .
  
  # Get the parent of that child
  ?child dbo:parent ?childParent .

  # Find Meritamen and her parent
  ?meritamen rdfs:label ""Meritamen""@en .
  ?meritamen dbo:parent ?meritamenParent .
}
```",3,3,4,2,2,3,3,71,1,17306,0,5.7780088981337034e-05,1.0,0.00011555350127108852
659,68,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v7 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?militaryForce ?commander ?war
WHERE {
  ?schimmelpenninck dbo:militaryForce ?militaryForce .
  FILTER (isLiteral(?militaryForce) && contains(str(?militaryForce), ""societal event"") && contains(str(?militaryForce), ""event"")) .

  ?militaryForce dbo:commander ?commander .
  ?commander dbo:nativeOf ?kingdomIreland .
  FILTER (?kingdomIreland = <http://dbpedia.org/resource/Kingdom_of_Ireland>) .

  ?commander dbo:participatedIn ?war .
  FILTER (isLiteral(?war) && contains(str(?war), ""event"") && contains(str(?war), ""military conflict"")) .

  ?war dbo:participatingUnit <http://dbpedia.org/resource/Polish_Horse> .
}
```",8,16,9,3,3,3,3,71,0,0,15,0,0.0,0
9,45,test,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterJohnAlderdice ?almaMaterAllenHill ?nickname
WHERE {
  # Alma mater of John Alderdice, Baron Alderdice
  dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMaterJohnAlderdice .

  # Alma mater of Allen Hill (scientist)
  dbr:Allen_Hill_(scientist) dbo:almaMater ?almaMaterAllenHill .

  # Nickname of an organization and educational institution in Northern Ireland
  OPTIONAL {
    dbr:Queen's_University_Belfast rdfs:label ?nickname .
    FILTER(CONTAINS(LCASE(?nickname), ""qub""))
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
281,25,test,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit WHERE {
  ?heatherRoy a dbo:Person ;
              foaf:name ""Heather Roy""@en .
  
  ?heatherRoy dbo:militaryService ?militaryUnit .

  ?militaryUnit dbo:country dbr:Colony_of_New_Zealand .

  OPTIONAL { 
    ?militaryUnit dbo:partOfWar ?war .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
182,24,test,Give me the entity in the nationality of Tamara Kunanayakam and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
# Query for Tamara Kunanayakam's Nationality
SELECT ?nationalityLabel WHERE {
  ?person rdfs:label ""Tamara Kunanayakam""@en .
  ?person dbo:nationality ?nationality .
  ?nationality rdfs:label ?nationalityLabel .
  FILTER(LANG(?nationalityLabel) = 'en')
} LIMIT 1

# Query for Gotabhaya Rajapaksa's War
SELECT DISTINCT ?warLabel WHERE {
  ?rajapaksa rdfs:label ""Gotabhaya Rajapaksa""@en .
  ?rajapaksa dbo:occupation ?occupation .
  ?occupation dbo:workFor ?organization .
  ?conflict dbo:participatingOrganizations ?organization ;
            a dbo:Conflict .
  ?conflict rdfs:label ?warLabel .
  FILTER(LANG(?warLabel) = 'en')
} LIMIT 1
```",4,4,5,2,2,2,3,28,0,0,5,0,0.0,0
994,19,test,Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of Red Tide (band).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonArtist WHERE {
  # Find members of Watchtower
  ?watchtowerMember dbo:memberOf dbp:Watchtower .
  
  # Find members of Red Tide
  ?redTideMember dbo:memberOf dbp:Red_Tide .

  # Identify common artist
  FILTER (?watchtowerMember = ?commonArtist)
  FILTER (?redTideMember = ?commonArtist)

  # Bind the common artist to a variable for output
  ?commonArtist a dbo:MusicalArtist .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
747,41,test,Give me the person born on the birth date of Pavlo Khudzik and band of Shèna and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?band
WHERE {
  # Step 1: Get Pavlo Khudzik's birth date
  VALUES (?pavloBirthDate) { 
    SELECT ?birthDate WHERE { 
      dbr:Pavlo_Khudzik dbo:birthDate ?birthDate .
    }
  }

  # Step 2: Find other individuals born on the same date as Pavlo Khudzik
  ?person dbo:birthDate ?pavloBirthDate .

  # Step 3: Identify Shèna's band
  dbr:Shèna dbo:band ?shenaBand .

  # Step 4: Identify the writer of Apollo (Hardwell song)
  ?apolloSong dbo:lyricsBy ?writer .
  FILTER(STRSTARTS(STR(?apolloSong), ""http://dbpedia.org/resource/Apollo_(Hardwell_song)""))

  # Step 5: Find bands associated with the writer
  ?writer dbo:band ?writerBand .

  # Step 6: Filter for common band(s)
  VALUES (?commonBand) {
    SELECT ?band WHERE { 
      ?band = ?shenaBand .
      ?band = ?writerBand .
    }
  }

  # Final result: Person born on Pavlo Khudzik's birth date and the common band
  FILTER(?person != dbr:Pavlo_Khudzik)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
915,16,test,"Give me the resident of the birthplace, that is a settlement, of Stephen Verona and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://dbpedia.org/ontology/residence> ?v2 . <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?resident ?childFather WHERE {
  # Step 1: Find Stephen Verona's birthplace
  VALUES (?stephenVerona) { dbr:Stephen_Verona }
  
  ?stephenVerona dbo:birthPlace ?birthPlace .
  
  FILTER (dbo:Settlement ?birthPlace) .

  # Step 2: Identify the resident of that settlement
  OPTIONAL {
    ?resident dbo:residence ?birthPlace .
  }

  # Step 3: Find Phillip Spaulding's child who is a fictional and soap character
  VALUES (?phillipSpaulding) { dbr:Phillip_Spaulding }
  
  ?phillipSpaulding dbo:child ?child .
  
  ?child rdf:type dbo:FictionalCharacter ;
         dbo:genre dbr:SoapOpera .

  # Step 4: Determine the father of this child
  ?child dbo:father ?childFather .
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
184,49,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Find Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            foaf:name ""Margaret of Austria"" ;
            dbo:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) = 1925)

  # Step 2: Identify her parent
  ?parent1 dbo:child ?margaret .

  # Step 3: Find the child of her parent
  ?child1 dbo:parent ?parent1 .

  # Step 4: Identify the parent of this child
  ?parent2 dbo:child ?child1 .

  # Step 5: Find a native of Budapest
  ?budaPerson dbo:nativePlace dbr:Budapest .
  
  # Step 6: Identify their parent
  ?parent3 dbo:child ?budaPerson .

  # Step 7: Find the common parent
  FILTER(?parent2 = ?parent3)
  BIND(?parent2 AS ?commonParent)
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
994,41,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
# Step 1: Find an associated musical artist of Watchtower
SELECT ?associatedArtist WHERE {
    ?watchtower dbo:musicalArtist ?associatedArtist .
    FILTER(STRSTARTS(LCASE(?watchtower), ""watchtower""))
}

# Step 2: Use the result from step 1 to find a band member associated with Don Dokken
SELECT ?bandMember WHERE {
    ?donDokken dbo:member ?bandMember .
    ?bandMember dbo:musicalArtist ?associatedArtist .
    FILTER(STRSTARTS(LCASE(?donDokken), ""don dokken""))
}

# Step 3: Check if this band member is part of a group related to Meshuggah
SELECT ?group WHERE {
    ?meshuggah dbo:member ?bandMember .
    ?group dbo:musicalArtist ?bandMember .
    FILTER(STRSTARTS(LCASE(?meshuggah), ""meshuggah""))
}

# Step 4: Find the associated musical artist of this band member who is a band/group/organization
SELECT DISTINCT ?finalArtist WHERE {
    ?bandMember dbo:musicalArtist ?finalArtist .
    ?finalArtist rdf:type ?type .
    FILTER(STRSTARTS(LCASE(?group), ""meshuggah"") && 
           (STRSTARTS(LCASE(?type), ""dbo:band"") || STRSTARTS(LCASE(?type), ""dbo:group"") || STRSTARTS(LCASE(?type), ""dbo:organisation"")))
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
161,56,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in the force, that is an event, of the figure known as El Director and military force of Spanish Civil War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commanderRole
WHERE {
  # Francisco Franco's involvement in the Spanish Civil War
  dbr:Francisco_Franco dbo:militaryConflict dbr:Spanish_Civil_War .
  
  # Identifying his military force during the conflict
  OPTIONAL { 
    dbr:Francisco_Franco dbo:commander ?militaryForce .
  }
  
  # His role as a commander in this context
  OPTIONAL {
    ?militaryForce dbo:commander dbr:Francisco_Franco ;
                  rdfs:label ?forceLabel .
  }

  FILTER (lang(?forceLabel) = 'en')
}
```",6,10,7,3,3,3,3,71,0,0,32,0,0.0,0
318,8,test,Give me the professional in the profession of Robert Xavier Rodriguez and person born in 1970.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
    # Find the profession of Robert Xavier Rodriguez
    dbr:Robert_Xavier_Rodriguez dbo:occupation ?profession .

    # Find persons with the same profession and born in 1970
    ?person a dbo:Person ;
            dbo:birthDate ?birthDate ;
            dbo:occupation ?profession .
    
    FILTER (YEAR(?birthDate) = 1970)
}
```",3,3,4,2,2,2,2,9,0,0,7,0,0.0,0
659,43,test,"Give me the military force of Napoleonic Wars and commander in German campaign of 1813 and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?campaignCommander ?warCommander ?polishHorse
WHERE {
  # Napoleonic Wars and its commander
  dbr:Napoleonic_Wars a dbo:MilitaryConflict ;
                      dbo:commander ?warCommander .

  # German Campaign of 1813 and its commander
  dbr:German_Campaign_of_1813 a dbo:MilitaryCampaign ;
                              dbo:commander ?campaignCommander .

  # Polish Horse as a military unit in the Napoleonic Wars
  ?polishHorse a dbo:MilitaryUnit ;
               rdfs:label ""Polish Uhlans""@en ;
               dbo:militaryConflict dbr:Napoleonic_Wars .

  # Military force involved in both contexts
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:militaryConflict dbr:Napoleonic_Wars ;
                 dbo:militaryCampaign dbr:German_Campaign_of_1813 .
}
```",5,9,6,3,3,3,3,71,0,0,6,0,0.0,0
963,19,test,"Give me the administration of the ruling party, that is a political party, in the location for 21205 and entity in the region, that is a country, of Central European Time.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration WHERE {
  # Step 1: Identify the location with code ""21205""
  ?location a dbo:Place ;
            dbp:postalCode ""21205"" .
  
  # Step 2: Determine the country and check if it is in CET
  ?location dbo:country dbr:CET_Countries ; # Assuming there's a resource for countries in CET
  
  # Step 3: Find the ruling political party in this location
  ?party dbo:isRulingPartyIn ?location ;
         a dbo:PoliticalParty .
  
  # Step 4: Get the administration of the ruling party
  ?party dbo:administration ?administration .
}
```",5,7,6,3,2,3,2,20,0,0,84,0,0.0,0
391,53,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Get the nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
    ?city rdfs:label ""Jackson""@en .
    ?city dbo:nickname ?nickname .
}

# Step 2: Find the actor from a movie involving Roz Ryan and fitting the description
SELECT DISTINCT ?actor WHERE {
    ?movie dbo:starring ?actor ;
           dbo:workExample ?work ;
           dbo:televisionSeries ?tvShow .
    ?work dbo:author ?rozRyan .
    FILTER(CONTAINS(LCASE(STR(?rozRyan)), ""roz ryan""))
}

# Step 3: Find the actor from ""The Departed""
SELECT DISTINCT ?departedActor WHERE {
    ?movie rdfs:label ""The Departed""@en .
    ?movie dbo:starring ?departedActor .
}

# Step 4: Determine which of these actors is native to the nickname
SELECT DISTINCT ?actor WHERE {
    VALUES (?nickname) { <http://dbpedia.org/resource/Nickname_of_Jackson,_Tennessee> }
    
    ?person dbo:nativePlace ?place ;
            foaf:name ?name .
    ?place rdfs:label ?nickname .

    OPTIONAL { 
        ?person dbo:starring ?actorRole .
        FILTER(?actorRole IN (?actor, ?departedActor))
    }

    FILTER(CONTAINS(LCASE(STR(?name)), LCASE(STR(?actor))) || CONTAINS(LCASE(STR(?name)), LCASE(STR(?departedActor))))
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,70,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  # Identify the child of John Pertwee who is an actor, narrator, producer
  ?person dbo:parent dbr:John_Pertwee ;
          a dbo:Actor ;
          dbo:narrator true ;
          dbo:producer true .

  # Find their birthplace
  ?person dbo:birthPlace ?native .

  # Identify the residence that is a settlement and British
  ?person dbo:residence ?residence .
  
  FILTER EXISTS { ?residence a dbo:Settlement }
  FILTER EXISTS { ?residence dbo:country dbr:United_Kingdom }

}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
16,69,test,Give me the spouse of the person born as the birth name of Ted McGinley and person born as the birth name of the alumnus of Ohio State University and professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tedSpouse ?satomiSpouse WHERE {
  # Ted McGinley's details
  ?ted a dbo:Person ;
      rdfs:label ""Ted McGinley""@en ;
      dbo:birthName ?tedBirthName .
  
  OPTIONAL { ?ted dbo:spouse ?tedSpouse . }
  
  # Satomi Ishihara's details
  ?satomi a dbo:Person ;
          rdfs:label ""Satomi Ishihara""@en ;
          dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> ;
          dbo:profession ?satomiProfession .
  
  FILTER(?satomiProfession IN (dbo:Actor, dbo:Singer)) # Assuming she is an actor or singer
  
  OPTIONAL { ?satomi dbo:spouse ?satomiSpouse . }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
701,45,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of Meritamen and parent of Henuttawy (19th dynasty).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?commander a dbo:Person ;
             dbo:child dbr:Meritamen ;
             dbo:child dbr:Henuttawy ;
             dbo:parent ?father ;
             dbo:occupation dbr:Battle_of_Perire ;
             dbo:royalty ""true""^^xsd:boolean .
  
  FILTER regex(str(?commander), ""19th dynasty"", ""i"")

  ?father dbo:spouse ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
232,68,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of Sylvie Bermann and child of the person born as the birth name of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
# Step 1: Find Sylvie Bermann's residence
SELECT ?residence WHERE {
    dbpedia:Sylvie_Bermann dbo:residenceLocation ?residence .
    ?residence a dbo:Settlement ;
               dbo:country dbr:United_Kingdom .
}

# Step 2: Find the professional in Actor, Narrator, and Producer from that settlement
SELECT DISTINCT ?professional WHERE {
    ?professional dbo:nativePlace ?residence ;
                  a dbo:Actor ;
                  a dbo:Narrator ;
                  a dbo:Producer .
}

# Step 3: Identify Jon Pertwee's birth name
SELECT ?birthName WHERE {
    dbpedia:Jon_Pertwee foaf:name ?birthName .
}

# Step 4: Find the child of the person with Jon Pertwee's birth name
SELECT DISTINCT ?child WHERE {
    ?person foaf:name ?birthName ;
            dbo:child ?child .
}

# Step 5: Determine the claim to fame (film and military conflict) associated with the professional
SELECT DISTINCT ?claimToFame WHERE {
    ?professional dbo:claimToFame ?claimToFame .
    FILTER EXISTS { ?claimToFame a dbo:Film }
    FILTER EXISTS { ?claimToFame a dbo:MilitaryConflict }
}

# Step 6: Identify the actor involved in this claim to fame
SELECT DISTINCT ?actor WHERE {
    ?claimToFame dbo:starring ?actor .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
378,51,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in Peninsular War.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fame WHERE {
  ?trigge a dbo:Person ;
          foaf:name ""Thomas Trigge"" .
  
  ?war a dbo:MilitaryConflict ;
      rdfs:label ""Peninsular War""@en .

  ?commanderRole dbo:participatedIn ?war ;
                 dbo:agent ?trigge ;
                 dbo:notableEvent ?fame .

  FILTER (lang(?fame) = 'en')
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
528,42,test,Give me the war of Orozimbo Barbosa and force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
# Query for Orozimbo Barbosa's wars
SELECT ?war WHERE {
  ?barbosa a dbo:Person ;
           foaf:name ""Orozimbo Barbosa""@en .
  ?barbosa dbo:participatedIn ?war .
}

UNION

# Query for Narciso Campero Leyes' military force and wars
SELECT DISTINCT ?militaryForce ?war WHERE {
  ?campero a dbo:Person ;
           foaf:name ""Narciso Campero Leyes""@en .
  ?campero dbo:militaryForce ?militaryForce .
  OPTIONAL { ?campero dbo:participatedIn ?war . }
}

UNION

# Query for military forces in the Battle of Pisagua
SELECT DISTINCT ?force WHERE {
  ?pisagua a dbo:MilitaryEngagement ;
           foaf:name ""Battle of Pisagua""@en .
  ?pisagua dbo:participatingMilitaryForce ?force .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
747,68,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as Tracey Elizabeth McSween and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://dbpedia.org/ontology/birthDate> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?athlete ?bandOfAthlete ?traceyBand ?songWriterBand
WHERE {
  # Find the decedent's birth date
  ?decedent a dbo:Person ;
            dbo:birthDate ?birthDate .

  # Find an athlete who is a soccer player from Zolotonosha born on the same date as the decedent
  ?athlete a dbo:Person, dbo:Athlete ;
           dbo:sport dbr:Soccer ;
           dbo:placeOfBirth dbr:Zolotonosha ;
           dbo:birthDate ?birthDate .

  # Find the band of this athlete
  OPTIONAL { ?athlete dbo:band ?bandOfAthlete . }

  # Find Tracey Elizabeth McSween and her band
  ?tracey a dbo:Person ;
          rdfs:label ""Tracey Elizabeth McSween""@en .
  OPTIONAL { ?tracey dbo:band ?traceyBand . }

  # Find the writer of a song by Amba Shepherd
  ?song a dbo:Songs ;
        dbo:lyricsBy ?writer ;
        dbo:musicalArtist dbr:Amba_Shepherd .
  
  # Find the band of this writer
  OPTIONAL { ?writer dbo:band ?songWriterBand . }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
427,47,test,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father ?party WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .
  OPTIONAL { ?father dbp:party ?party . }
  FILTER(?party = dbr:Italian_People's_Party_(1994))
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,66,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Don Dokken as a musical artist
  dbr:Don_Dokken a dbo:MusicalArtist .

  # Band members of Don Dokken
  ?donBandMember dbo:bandMember dbr:Don_Dokken .
  
  # Watchtower's associated artists
  ?watchtowerAssociatedArtist dbo:associatedMusicalArtist dbr:Watchtower .

  # Meshuggah as a band and organization
  ?meshuggahMember dbo:bandMember dbr:Meshuggah ;
                   a (dbo:Band|dbo:Organization) .
  
  # Find the common link
  FILTER (?donBandMember = ?watchtowerAssociatedArtist && ?watchtowerAssociatedArtist = ?meshuggahMember)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
356,16,test,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton and player in the successor of 2014 Sacramento Republic FC season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?team WHERE {
  # Find a person who is both a soccer player and manager, native to Wolverhampton
  ?person dbo:nationality dbr:Wolverhampton ; 
          dbo:sport dbr:Soccer ;
          dbo:occupation dbr:Soccer_player , dbr:Soccer_manager .

  # Identify the team that succeeded Sacramento Republic FC in 2015
  ?sacramentoTeam dbo:successor ?successorTeam .
  FILTER (?sacramentoTeam = dbr:Sacramento_Republic_FC)

  # Find out which team this person is currently associated with as a manager or player
  ?person dbo:currentClub ?team ;
          dbo:formerClub ?successorTeam .

}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
92,66,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v6 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v2 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?band2 ?member3 WHERE {
  # Find musical artist associated with Jim Sheppard
  ?person1 dbo:birthName ""Jim Sheppard""@en .
  ?person1 dbo:musicalArtist ?artist1 .

  # Find band of Joseph Michael
  ?person2 dbo:birthName ""Joseph Michael""@en .
  ?person2 dbo:musicalArtist ?band2 .

  # Find Nevermore band member
  ?member3 dbo:associatedBand dbr:Nevermore ;
           dbo:musicalArtist ?artist1 .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
701,29,test,Give me the parent of Meritamen and spouse of Ramesses II and parent of the child of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentMeritamen ?spouseRamessesII ?childParent
WHERE {
  # Parent of Meritamen
  OPTIONAL { 
    dbr:Meritamen dbo:parent ?parentMeritamen .
  }

  # Spouse of Ramesses II
  OPTIONAL {
    dbr:Ramses_II dbo:spouse ?spouseRamessesII .
  }
  
  # Child of Ramesses II and their parent
  OPTIONAL {
    dbr:Ramses_II dbo:child ?childOfRamessesII .
    ?childOfRamessesII dbo:parent ?childParent .
  }
}
```",4,4,5,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
617,53,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of Laodice IV.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Antiochus IV Soter (son of Antiochus III the Great)
  ?antiochusIV a dbo:Person ;
               dbo:father dbr:Antiochus_III_the_Great ;
               dbo:child ?grandchild .

  # Child of Antiochus IV Soter
  ?childOfAntiochusIV a dbo:Person ;
                     dbo:parent ?antiochusIV ;
                     dbo:child ?grandchild .

  # Successor of Antiochus II Theos (e.g., Seleucus II Callinicus)
  ?successor dbr:Seleucus_II_Callinicus ;
             dbo:father dbr:Antiochus_II_theos ;
             dbo:child ?royalChild .

  # Spouse of Laodice IV
  ?spouse a dbo:Person ;
          dbo:spouse dbr:Laodice_IV ;
          rdfs:label ?label .

  # Linking the grandchild to the royal child and spouse
  ?grandchild = ?royalChild .
  ?parent a dbo:Person ;
          dbo:parent ?grandchild ;
          dbo:spouse ?spouse .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
161,33,test,"Give me the military force of Rif War and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?rifWarMilitaryForce ?predecessorConflictMilitaryForce WHERE {
  # Military force involved in the Rif War
  ?rifWar dbo:conflict dbr:Rif_War .
  ?rifWar dbo:militaryForce ?rifWarMilitaryForce .

  # Predecessor of Indalecio Prieto and their associated conflict
  ?predecessor dbo:successor dbr:Indalecio_Prieto .
  ?predecessorConflict dbo:conflict ?predecessorEvent .
  FILTER (dbo:SocietalEvent(?predecessorEvent) && dbo:MilitaryConflict(?predecessorEvent))
  ?predecessorConflict dbo:militaryForce ?predecessorConflictMilitaryForce
}
```",4,6,5,3,2,3,3,71,0,0,34,0,0.0,0
801,26,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?work dbo:artist dbr:Kanye_West ;
        a dbo:Songs .
  OPTIONAL { ?work dbo:producer ?producer . }
  FILTER (str(?work) = ""Stronger_(song)"") # Replace with the specific song/work title
}
```",3,7,4,3,1,3,3,71,0,0,956,0,0.0,0
547,46,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Resting place of the child of the child of William Haliburton
SELECT DISTINCT ?grandchildRestingPlace WHERE {
    # Find William Haliburton's children
    ?child dbo:parent dbr:William_Haliburton .
    
    # For each child, find their children (i.e., grandchildren of William Haliburton)
    ?grandchild dbo:parent ?child .

    # Get the resting place of these grandchildren
    ?grandchild dbo:restingPlace ?grandchildRestingPlace .
}

UNION

# Part 2: Resting place of the actor of ""Enemy at the Door""
SELECT DISTINCT ?actorRestingPlace WHERE {
    # Find the film ""Enemy at the Door""
    dbr:Enemy_at_the_Door dbo:starring ?actor .

    # Get the resting place of these actors
    ?actor dbo:restingPlace ?actorRestingPlace .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
294,24,test,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?architectRestingPlace ?marionBirthSettlement WHERE {
  # Part 1: Resting place of the architect of P. D. Houston Jr. House
  ?house dbo:architect ?architect .
  FILTER(STRSTARTS(STR(?house), ""P. D. Houston Jr. House""))
  
  OPTIONAL { ?architect dbo:deathPlace ?architectRestingPlace . }
  
  # Part 2: Birthplace of Marion James that is a settlement
  dbr:Marion_James dbo:birthPlace ?marionBirth .
  FILTER(STRSTARTS(STR(?marionBirth), ""Settlement""))
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
492,51,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?war ?decedent WHERE {
  # Find Frédéric-Georges Herr and his military command role
  dbr:Frédéric-Georges_Herr a dbo:Person ;
    dbo:militaryCommander ?commander .

  # Identify the war he was involved in
  ?commander dbo:participatedIn ?war .
  
  # Find the capital of Khemis Miliana District
  dbr:Khemis_Miliana_District dbo:capital ?capital ;
    a dbo:Settlement .

  # Determine who died at this capital
  ?decedent dbo:diedAtLocation ?capital .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
92,67,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of the person born as the birth name of Joseph Michael.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorArtist ?actorBand ?josephMichaelBand WHERE {
  # Step 1: Find actor of ""Return to Nuke 'Em High Volume 1""
  ?movie dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?movie dbo:starring ?actor .

  # Step 2: Check if the actor is also a musical artist
  ?actor dbo:musicalArtist ?actorArtist .
  
  # Step 3: Find band membership of the actor
  ?actor dbo:bandMember ?actorBand .

  # Step 4: Identify person born as Joseph Michael and their band
  ?person dbo:birthName ""Joseph Michael""@en .
  ?person dbo:bandMember ?josephMichaelBand .

  # Filter for specific bands
  FILTER(?actorBand = dbr:Nevermore)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
488,48,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceSaitoHajime ?battleEvent
WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlaceSaitoHajime .
  
  # Battle of Sekigahara as a military conflict and societal event
  dbr:Battle_of_Sekigahara a dbo:MilitaryConflict ;
                           a dbo:Event ;
                           a dbo:SocietalEvent ;
                           rdfs:label ?battleEvent .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
232,59,test,"Give me the child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Step 1: Get Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?jonBirthName .

  # Step 2: Find a professional in Actor, Narrator, and Producer
  ?professional a dbo:Actor ;
               a dbo:Narrator ;
               a dbo:Producer .

  # Step 3: Determine their claim to fame (film and military conflict)
  ?professional dbo:claimToFame ?fame .
  FILTER (
    EXISTS { ?fame rdf:type dbo:Film } &&
    EXISTS { ?fame rdf:type dbo:MilitaryConflict }
  )

  # Step 4: Identify the child of Jon Pertwee
  dbr:Jon_Pertwee dbo:child ?child .

  # Ensure the child matches the fame criteria
  ?child dbo:claimToFame ?fame .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
182,20,test,Give me the war of the work of Gotabhaya Rajapaksa and war of Mahesh Senanayake and entity in Sri Lanka.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?role ?war
WHERE {
  VALUES ?individual { 
    dbr:Gotabhaya_Rajapaksa 
    dbr:Mahesh_Senanayake 
  }
  
  ?person rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), LCASE(""gotabhaya rajapaksa"")) || CONTAINS(LCASE(?name), LCASE(""mahesh senanayake"")))
  
  OPTIONAL { ?person dbo:role ?role . }
  OPTIONAL { ?person dbo:occupation ?occupation . }
  
  OPTIONAL {
    ?war dbo:location dbr:Sri_Lanka .
    ?war dbo:participatedIn ?individual .
  }

  FILTER (LANG(?name) = ""en"")
}
ORDER BY ?person
```",4,4,5,2,3,2,3,28,0,2,1,0.0,0.0,0
161,52,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Query for Francoist Spain's military force during the Biscay Campaign
SELECT ?militaryForce WHERE {
  ?event dbo:wikiPageRedirects db:Francoist_Spain .
  ?event rdf:type dbo:MilitaryConflict .
  ?event dbo:participatingMilitaryGroup ?group .
  ?group dbo:member ?militaryForce .
  FILTER EXISTS { ?militaryForce rdfs:label ""Nationalist faction""@en }
}

UNION

# Query for Francisco Largo Caballero's military force
SELECT ?militaryForce WHERE {
  ?person foaf:name ""Francisco Largo Caballero""@en .
  ?person dbo:wikiPageRedirects db:Francisco_Largo_Caballero .
  ?event dbo:participatingPerson ?person .
  ?event rdf:type dbo:MilitaryConflict .
  ?event dbo:participatingMilitaryGroup ?group .
  ?group dbo:member ?militaryForce .
  FILTER EXISTS { ?militaryForce rdfs:label ""Republican Army""@en }
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
391,20,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?work
WHERE {
  ?person a dbo:Person .
  ?person dbo:nativePlace dbr:Compton,_California .

  ?film dbo:director dbr:Michael_Ballhaus .
  ?film dbo:claimToFame ?work .
  
  ?actorRole dbo:actor ?person ;
             dbo:inFilm ?film .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
345,16,test,"Give me the figure known as the nickname of FC Vaduz and team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
# Query 1: Get the nickname of FC Vaduz
SELECT ?nickname WHERE {
    ?team a dbo:SoccerClub ;
          rdfs:label ""FC Vaduz""@en .
    OPTIONAL { ?team dbo:nickname ?nickname . }
}

UNION

# Query 2: Find soccer player and manager born on 1978-09-15 and their team
SELECT DISTINCT ?person ?team WHERE {
    ?person a dbo:SoccerPlayer, dbo:SoccerManager ;
            dbo:birthDate ""1978-09-15""^^xsd:date .
    OPTIONAL { ?person dbo:playsFor ?team . }
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
232,25,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of Dog Soldiers (film).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativePlace
WHERE {
  # Find Sylvie Bermann's residence that is a British settlement
  dbr:Sylvie_Bermann dbo:residence ?residence .
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Find the actor from ""Dog Soldiers"" and their native place
  ?actor dbo:film dbr:Dog_Soldiers ;
         dbo:nativePlace ?nativePlace .

  # Ensure the native place matches the residence of Sylvie Bermann
  FILTER(?residence = ?nativePlace)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
404,50,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalParent WHERE {
  # Step 1: Identify Prince George William of Hanover
  ?princeGeorge a dbo:Person ;
               rdfs:label ""Prince George William of Hanover""@en .
  
  # Step 2: Find his parent who is royalty
  ?parent1 dbo:child ?princeGeorge ;
           dbo:royalTitle ?title1 .

  # Step 3: Identify Ernest Augustus, Duke of Brunswick's father
  ?ernestAugustus a dbo:Person ;
                  rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  
  ?father dbp:child ?ernestAugustus .

  # Step 4: Determine the child of this father
  ?childOfFather dbp:parent ?father .

  # Step 5: Find the parent (royalty) of this child
  ?parent2 dbo:child ?childOfFather ;
           dbo:royalTitle ?title2 .

  # Step 6: Identify the parent of this royal parent's child
  ?finalParent dbo:child ?parent2 .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
16,64,test,Give me the professional in Actress and person born as the birth name of the alumnus of Ohio State University and spouse of the person born as the birth name of Ted McGinley.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professionalInActressAndPerson
WHERE {
  ?alumnus dbo:alumniOf dbr:Ohio_State_University ;
           foaf:name ?birthNameAlumnus .
  
  ?tedMcGinleySpouse dbo:spouse ?tedMcGinley ;
                     foaf:name ?birthNameTedMcGinleySpouse .

  ?professionalInActressAndPerson rdf:type dbo:Person, dbo:Actor ;
                                  foaf:name ?birthNameAlumnus ;
                                  dbo:spouse ?tedMcGinleySpouse .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
184,34,test,"Give me the parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . }","```sparql
# Query 1: Parent of Archduchess Ilona of Austria
SELECT ?parent WHERE {
    ?ilona a dbo:Archduchess ;
           foaf:name ""Ilona of Austria"" .
    ?ilona dbo:parent ?parent .
}

UNION

# Query 2: Native of the Landmark at Elevation 96.0 that is a Settlement
SELECT ?native WHERE {
    ?landmark a dbo:Settlement ;
              geo:elevation ""96.0""^^xsd:float .
    ?person dbo:nativeOf ?landmark .
    ?person foaf:name ?native .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
617,61,test,"Give me the parent of the child of the commander in Battle of Panium and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
# Step 1: Find the commander in Battle of Panium
SELECT ?commander WHERE {
    ?battle dbo:commander ?commander .
    ?battle rdfs:label ""Battle of Panium""@en .
}

# Step 2: Find the child of this commander
SELECT ?child WHERE {
    ?commander dbo:child ?child .
}

# Step 3: Determine the parent of this child (should be the commander)
SELECT ?parent WHERE {
    ?child dbo:parent ?parent .
}

# Step 4: Identify Antiochus III's successor
SELECT ?successor WHERE {
    dbr:Antiochus_III_the_Great dbo:succesor ?successor .
}

# Step 5: Find the child of this successor
SELECT ?successorChild WHERE {
    ?successor dbo:child ?successorChild .
}

# Step 6: Determine the spouse of this child, ensuring they are royalty
SELECT DISTINCT ?spouse WHERE {
    ?successorChild dbo:spouse ?spouse .
    ?spouse a dbo:RoyalFamilyMember .
}

# Step 7: Combine information to find the person who is both parent and spouse
SELECT DISTINCT ?person WHERE {
    { 
        # Parent from step 3
        ?child dbo:parent ?person .
    }
    UNION
    {
        # Spouse from step 6
        ?successorChild dbo:spouse ?person .
        ?person a dbo:RoyalFamilyMember .
    }
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
659,56,test,"Give me the commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleCommander ?wellingtonForce ?forceCommander ?schimmelpenninckEvent
WHERE {
  # Commander in the Battle of Leipzig
  dbr:Battle_of_Leipzig dbo:commander ?battleCommander .

  # Arthur Wellesley's military force and its commander
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:militaryForce ?wellingtonForce .
  ?wellingtonForce dbo:commander ?forceCommander .

  # Societal event or military conflict related to Rutger Jan Schimmelpenninck
  ?schimmelpenninckEvent a dbo:MilitaryConflict ;
                        dbo:reference dbr:Rutger_Jan_Schimmelpenninck .
}
```",6,9,7,3,3,3,3,71,0,0,6,0,0.0,0
747,34,test,"Give me the band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?athlete WHERE {
  # Find Shèna's band
  dbr:Shèna dbo:band ?band .

  # Find the person decedent and their birth date
  ?personDecedent a dbo:Person ;
                  dbo:birthDate ?birthDate .

  # Find an athlete who is also a soccer player, born on the same date as the person decedent
  ?athlete a dbo:Athlete , dbo:SoccerPlayer ;
           dbo:birthDate ?birthDate .

  # Ensure the athlete is from Zolotonosha
  ?athlete dbo:placeOfBirth dbr:Zolotonosha .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
994,69,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of the associated musical artist of the reference to Watchtower and band member of the person born, that is a musical artist, as the persona of Don Dokken.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Step 1: Find Meshuggah's band members
SELECT ?member WHERE {
    ?meshuggah dbo:bandMember ?member .
    FILTER(STRSTARTS(LCASE(?meshuggah), ""http://dbpedia.org/resource/meshuggah""))
}

# Step 2: Find associated musical artists for each member of Meshuggah
SELECT DISTINCT ?associatedArtist WHERE {
    VALUES ?member { 
        # Replace with actual URIs from step 1 results
    }
    ?member dbo:associatedMusicalArtist ?associatedArtist .
}

# Step 3: Find Watchtower's associated musical artist
SELECT ?watchtowerArtist WHERE {
    ?watchtower dbo:associatedMusicalArtist ?watchtowerArtist .
    FILTER(STRSTARTS(LCASE(?watchtower), ""http://dbpedia.org/resource/watchtower""))
}

# Step 4: Find band members of Don Dokken
SELECT DISTINCT ?dokkenMember WHERE {
    ?donDokkenBand dbo:bandMember ?dokkenMember .
    FILTER(STRSTARTS(LCASE(?donDokkenBand), ""http://dbpedia.org/resource/don_dokken""))
}

# Step 5: Find associated musical artists for each member of Don Dokken's band
SELECT DISTINCT ?finalArtist WHERE {
    VALUES ?dokkenMember { 
        # Replace with actual URIs from step 4 results
    }
    ?dokkenMember dbo:associatedMusicalArtist ?finalArtist .
}

# Combine results to get the final answer
SELECT DISTINCT ?meshuggahArtist ?watchtowerArtist ?finalArtist WHERE {
    VALUES ?meshuggahArtist { 
        # Replace with actual URIs from step 2 results
    }
    VALUES ?watchtowerArtist { 
        # Replace with actual URIs from step 3 results
    }
    VALUES ?finalArtist { 
        # Replace with actual URIs from step 5 results
    }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
10,28,test,"Give me the professional in the birth name of Sharon Kao and associated musical artist of the person born, that is an artist, as Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v3 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query 1: Sharon Kao's birth name
SELECT ?birthName WHERE {
    dbpedia:Sharon_Kao dbo:birthName ?birthName .
}

# Query 2: Associated musical artist of Sharon Kao
SELECT ?musicalArtist WHERE {
    dbpedia:Sharon_Kao dbo:musicalArtist ?musicalArtist .
}

# Query 3: Matt Colton's professional role
SELECT ?profession WHERE {
    dbpedia:Matt_Colton dbo:profession ?profession .
}

# Query 4: Luke Francis Vibert's band membership
SELECT ?bandMember WHERE {
    dbpedia:Luke_Francis_Vibert dbo:bandMember ?bandMember .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
16,48,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commonSpouse
WHERE {
  ?gigi a dbo:Person ;
        dbp:birthName ""Gigi Rice"" .
  ?gigi dbo:spouse ?commonSpouse .

  ?ted a dbo:Person ;
       dbp:birthName ""Ted McGinley"" .
  ?ted dbo:spouse ?commonSpouse .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
328,52,test,Give me the commander in the force of Ferenc Szálasi and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:commanderOf ?szalasiForce .
  ?szalasiForce dbo:leader dbr:Ferenc_Szálasi .

  OPTIONAL { 
    ?person dbo:awardReceived ?volcanoRyukyuAward .
    ?volcanoRyukyuAward rdfs:label ?awardLabel .
    FILTER(CONTAINS(LCASE(?awardLabel), ""volcano"") && CONTAINS(LCASE(?awardLabel), ""ryukyu""))
  }

  OPTIONAL {
    ?person dbo:leaderOf dbr:People's_Commissariat_of_Defense_of_the_Soviet_Union .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
314,20,test,Give me the awardee of the award of Sergei Makovetsky and person deceased at Madrid and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Sergei Makovetsky's award
  ?makovetskyAward dbo:recipient dbr:Sergei_Makovetsky .
  
  # Person deceased in Madrid
  ?deceasedPerson dbo:deathPlace dbr:Madrid .

  # Commander in the Spanish Civil War
  ?commander dbo:occupation dbr:Spanish_Civil_War_commander .

  # Linking all three conditions to find a common person
  ?makovetskyAward dbo:recipient ?person .
  ?deceasedPerson dbo:deathPlace dbr:Madrid .
  ?commander dbo:occupation dbr:Spanish_Civil_War_commander .
  
  FILTER (?person = ?deceasedPerson && ?person = ?commander)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
712,16,test,Give me the capital of the country of Armed Forces of South Russia and resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?capital ?restingPlace WHERE {
  # Find the capital of Russia
  dbr:Russia dbo:capital ?capital .

  # Find a Hero of the Soviet Union and their resting place
  ?hero dbo:awardeeOf dbr:Hero_of_the_Soviet_Union .
  ?hero dbo:deathPlace ?restingPlace .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
547,25,test,Give me the resting place of Simon Cadell and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for Simon Cadell's resting place
SELECT ?restingPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Simon Cadell""@en .
  OPTIONAL { ?person dbo:finalBurialPlace ?restingPlace . }
}

UNION

# Query for the resting place of an awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT ?awardeeName ?restingPlace WHERE {
  ?awardee a dbo:Person ;
           foaf:name ?awardeeName .
  ?awardee dbo:knightGrandCrossOfTheOrderOfStMichaelAndStGeorge _:award .
  OPTIONAL { ?awardee dbo:finalBurialPlace ?restingPlace . }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
659,31,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeHolder ?battleCommander
WHERE {
  ?person a dbo:Person .
  
  # Office holder in the Kingdom of Ireland
  ?officeHolder dbo:officeHolder ?person ;
                dbo:country dbr:Kingdom_of_Ireland .

  # Commander in the Battle of Leipzig
  ?battleCommander dbo:commanderOfMilitaryConflict dbr:Battle_of_Leipzig ;
                   dbo:commander ?person .
  
  FILTER(?person = dbr:Arthur_Wellesley,_1st_Duke_of_Wellington)
}
```",4,5,5,3,2,3,3,71,0,0,19,0,0.0,0
328,22,test,"Give me the awardee of Order of Suvorov and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?officeLeader WHERE {
  ?awardee a dbo:Person ;
           foaf:name ""Joseph Stalin""@en ;
           dbo:award dbr:Order_of_Suvorov .
  
  OPTIONAL { 
    ?officeLeader a dbo:GovernmentAgency ;
                  dbo:headOfState ?awardee ;
                  rdfs:label ?agencyLabel .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
339,16,test,Give me the child of the child of Christian IX of Denmark and father of the child of Grand Duchess Elena Vladimirovna of Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild ?father
WHERE {
  # Find a child of Christian IX
  ?child dbo:parent dbr:Christian_IX_of_Denmark .
  
  # From that child, find their child (making them a grandchild of Christian IX)
  ?grandchild dbo:parent ?child .

  # Find a child of Grand Duchess Elena Vladimirovna
  ?elenaChild dbo:parent dbr:Grand_Duchess_Elena_Vladimirovna_of_Russia .
  
  # Determine the father of this child
  ?father dbo:spouse ?mother . 
  ?elenaChild dbo:parent ?father .

  # Ensure that the grandchild and father are the same individual
  FILTER (?grandchild = ?father)
}
```",4,4,5,2,2,3,2,20,1,0,0,1.0,1.0,1.0
177,9,test,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik and entity in the residence of Alexander Gamelin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://dbpedia.org/ontology/location> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?organizationHeadquarters ?gamelinResidence
WHERE {
  # Find Joo Don-sik's organization and its headquarters
  ?person rdfs:label ""Joo Don-sik""@en.
  ?person dbo:positionHeld|dbo:memberOf ?organization.
  ?organization dbo:headquarters ?organizationHeadquarters.

  # Find Alexander Gamelin's residence
  ?gamelin rdfs:label ""Alexander Gamelin""@en.
  ?gamelin dbo:residence ?gamelinResidence.
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
617,47,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfChild
WHERE {
  # Seleucus II Callinicus and his children
  dbr:Seleucus_II_Callinicus dbo:child ?royalChild .
  
  # Ensure the child is royalty
  ?royalChild rdf:type dbo:RoyalPerson .

  # Find the spouse of this royal child
  ?royalChild dbo:spouse ?spouse .

  # Antiochus (son of Antiochus III the Great) and his successor's child
  dbr:Antiochus_IV_Epiphanes dbo:child ?successor .
  
  # Ensure the successor's child is royalty
  ?successorChild dbo:child ?royalSuccessorChild .
  ?royalSuccessorChild rdf:type dbo:RoyalPerson .

  # Find the spouse of this royal successor's child
  ?royalSuccessorChild dbo:spouse ?spouse .

  # The query result is the spouse common to both paths
  FILTER (?spouse = ?spouse)
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
492,60,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person1 ?person2 WHERE {
  # Part 1: Person decedent at the capital of Khemis Miliana District
  ?district dbo:capital ?capital .
  FILTER (str(?district) = ""Khemis_Miliana_District"")
  ?person1 dbo:deathPlace ?capital .
  
  # Part 2: Person decedent at the work of the author of French Algeria
  ?author dbo:nationality dbr:French_Algérie ;
          dbo:work ?work .
  ?person2 dbo:deathPlace ?work .
}
```",6,7,7,3,2,3,3,71,0,0,16,0,0.0,0
391,57,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify Sherry Hormann's spouse
  dbr:Sherry_Hormann dbo:spouse ?spouse .

  # Step 2: Find the claim to fame of Sherry Hormann's spouse (a work)
  ?spouse dbo:claimToFame ?work .
  
  # Step 3: Identify an actor native to Compton, California
  ?actor a dbo:Person ;
         dbo:nativePlace dbr:Compton,_California .

  # Step 4: Find the movie with Roz Ryan and the claim to fame work
  ?movie dbo:starring ?actor ;
         dbo:starring dbr:Roz_Ryan ;
         dbo:work ?work .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
767,45,test,"Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater ?entityInBadenWuerttemberg ?fictionalCharacter
WHERE {
  # Alma mater of Carl L. Nippert
  OPTIONAL { 
    dbr:C_L_Nippert dbo:almaMater ?almaMater .
  }

  # Entity in Baden-Württemberg
  OPTIONAL {
    ?entityInBadenWuerttemberg dbo:location dbr:Baden-Württemberg .
  }
  
  # Fictional character associated with Matthew Burland (hypothetical)
  OPTIONAL {
    dbr:Matthew_Burland dbo:fictionalCharacter ?fictionalCharacter .
  }
}
```",5,6,6,3,3,3,3,71,0,201,1,0.0,0.0,0
92,26,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?birthDate ?musicalArtist 
WHERE {
  # Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?film dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?film dbo:starring ?actor .

  # Ensure the actor is also recognized as an artist
  ?actor a dbo:Artist .

  # Retrieve birth information of the actor
  ?actor dbo:birthDate ?birthDate .

  # Find associated musical artists using birth date and other relevant properties
  OPTIONAL {
    ?actor dbo:associatedBand ?musicalArtist .
  }
}
```",3,4,4,3,1,3,3,71,0,0,126,0,0.0,0
281,46,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Query 1: Find Bob Heffron's birth place if it is a country
SELECT ?country WHERE {
    ?bob dbo:birthPlace ?place .
    FILTER (?bob = dbpedia:Bob_Heffron) .
    ?place rdf:type dbo:Country .
    BIND(?place AS ?country)
}

# Query 2: Find the war associated with Jonathon Band's award
SELECT ?war WHERE {
    ?jonathon dbo:award ?award .
    FILTER (?jonathon = dbpedia:Jonathon_Band) .
    ?award dbo:awardee ?awardee .
    ?awardee dbo:participatedInWar ?war .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,55,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForceLargoCaballero ?commanderInChiefMola ?militaryForceFranco
WHERE {
  # Francisco Largo Caballero's military force
  ?personLargo a dbo:Person ;
               foaf:name ""Francisco Largo Caballero""@en .
  ?personLargo dbo:militaryConflict ?militaryForceLargoCaballero .
  FILTER (?militaryForceLargoCaballero rdf:type/(dbo:SocietalEvent|dbo:MilitaryConflict)) .

  # Emilio Mola's commander in chief role
  ?personMola a dbo:Person ;
              foaf:name ""Emilio Mola""@en .
  ?event dbr:Event ;
         dbo:commanderInChief ?personMola .
  ?commanderInChiefMola a dbo:Person ;
                        foaf:name ?name .
  FILTER (?name != ""Emilio Mola"") .

  # Francisco Franco's military force
  ?personFranco a dbo:Person ;
               foaf:name ""Francisco Franco""@en .
  ?personFranco dbo:militaryConflict ?militaryForceFranco .
  FILTER (?militaryForceFranco rdf:type/(dbo:SocietalEvent|dbo:Event|dbo:MilitaryConflict)) .
}
```",6,12,7,2,3,3,3,71,0,0,32,0,0.0,0
378,45,test,"Give me the war of Joaquín Blake and war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?joaquinWar ?carlWar ?thomasEvent ?thomasFame WHERE {
  # Joaquín Blake's war
  OPTIONAL { 
    dbr:Joaqu%C3%ADn_Blake dbo:militaryConflict ?joaquinWar .
  }

  # Carl Pontus Gahn's war or societal event
  OPTIONAL { 
    dbr:Carl_Pontus_Gahn dbo:militaryConflict ?carlWar .
  }
  
  # Thomas Trigge's military conflict or societal event and claim to fame
  OPTIONAL {
    ?thomasEvent a dbo:MilitaryConflict ;
                 dbo:commander ?thomasCommander .
    FILTER(?thomasCommander = dbr:Thomas_Trigge)
    ?thomasFame dbo:claimToFame ?thomasCommander .
  }
}
```",5,8,6,3,3,3,3,71,0,0,2,0,0.0,0
161,32,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?francoForce ?caballeroForce WHERE {
  # Francisco Franco's military force during the Spanish Civil War
  ?event1 a dbo:MilitaryConflict ;
          dbo:participatedIn [
            dbo:agent dbr:Francisco_Franco ;
            dbo:participant [
              a dbo:MilitaryOrganization ;
              rdfs:label ?francoForce .
            ]
          ] .

  # Francisco Largo Caballero's military force during the Spanish Civil War
  ?event2 a dbo:MilitaryConflict ;
          dbo:participatedIn [
            dbo:agent dbr:Franco_Largo_Caballero ;
            dbo:participant [
              a dbo:MilitaryOrganization ;
              rdfs:label ?caballeroForce .
            ]
          ] .

  FILTER regex(?francoForce, ""Nationalist"", ""i"")
  FILTER regex(?caballeroForce, ""Republican Army|Spanish Republican Army"", ""i"")
}
```",4,9,5,2,2,3,3,71,0,0,514,0,0.0,0
617,54,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfNysa ?spouseOfChild
WHERE {
  # Identify Nysa and her parent
  ?nysa a dbo:Person ;
        rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  
  ?nysa dbo:child ?parentOfNysa .

  # Find Antiochus, son of Antiochus III the Great
  ?antiochus a dbo:Person ;
             rdfs:label ""Antiochus (son of Antiochus III the Great)""@en .
  
  # Identify his successor and a royalty among their children
  ?antiochus dbo:succededBy ?successor .
  ?successorChild dbo:childOf ?successor ;
                  a dbo:Person ;
                  rdfs:label ?royaltyLabel .
  FILTER(CONTAINS(LCASE(?royaltyLabel), ""king"") || CONTAINS(LCASE(?royaltyLabel), ""queen""))

  # Find the spouse of this royal child
  ?successorChild dbo:spouse ?spouseOfChild .

  # Identify a child of Seleucus II Callinicus who is royalty
  ?seleucusII a dbo:Person ;
              rdfs:label ""Seleucus II Callinicus""@en .
  
  ?royalChildOfSeleucus dbo:childOf ?seleucusII ;
                        a dbo:Person ;
                        rdfs:label ?royaltyLabel2 .
  FILTER(CONTAINS(LCASE(?royaltyLabel2), ""king"") || CONTAINS(LCASE(?royaltyLabel2), ""queen""))

  # Find a child of this royal child
  ?grandchildOfSeleucus dbo:childOf ?royalChildOfSeleucus ;
                       a dbo:Person .

  # Ensure the spouse is connected to the parent of Nysa
  ?spouseOfChild dbo:child ?grandchildOfSeleucus .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
617,19,test,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild
WHERE {
    # Boleslaus I, Duke of Bohemia
    dbr:Boleslaus_I,_Duke_of_Bohemia dbo:child ?child .
    
    # Child of Boleslaus I who is royalty
    ?child a dbo:Monarch ;
           dbo:child ?grandchild .

    # Richeza of Poland and her father's parent (royalty)
    dbr:Richeza_of_Poland dbo:father ?richezasFather .
    ?richezasFather dbo:parent ?richezasGrandparent .
    
    # Ensure the grandparent is royalty
    ?richezasGrandparent a dbo:Monarch .

    # Match the grandchild with the parent of Richeza's father
    FILTER (?grandchild = ?richezasGrandparent)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
666,17,test,"Give me the player in Steve Bruce and figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerLabel ?nickname WHERE {
  ?manager rdfs:label ""Steve Bruce""@en.
  ?manager dbo:manager ?team.
  
  ?team dbo:player ?player.
  ?player rdfs:label ?playerLabel.

  OPTIONAL { 
    ?player dbo:nickname ?nicknameResource.
    ?nicknameResource rdfs:label ?nickname.
    
    FILTER EXISTS {
      ?club a dbo:SoccerClub;
            rdfs:label ?nickname.
      ?club dbo:country dbr:England.
    }
  }

  FILTER(?nickname != """")
}
ORDER BY ?playerLabel
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
492,37,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at Algiers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the commander of the Battle of Verdun
  dbr:Battle_of_Verdun dbo:commander ?commander .
  
  # Ensure this person is associated with a military conflict and an event
  ?commander rdf:type dbo:MilitaryConflict ;
             rdf:type dbo:Event .

  # Check that the person died in Algiers
  ?commander dbo:deathPlace dbr:Algiers .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
9,57,test,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterJohnAlderdice ?nicknameQueenUniversityBelfast ?awardeeRoyalMedals ?almaMaterAwardee
WHERE {
  # Alma mater of John Alderdice, Baron Alderdice
  dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMaterJohnAlderdice .

  # Nickname of Queen's University Belfast
  OPTIONAL { 
    dbr:Queen's_University_Belfast rdfs:label ?nicknameQueenUniversityBelfast .
    FILTER(CONTAINS(LCASE(?nicknameQueenUniversityBelfast), ""nickname""))
  }

  # Awardees of Royal Medals and their alma maters
  {
    SELECT DISTINCT ?awardeeRoyalMedals ?almaMaterAwardee
    WHERE {
      ?awardeeRoyalMedals dbo:award dbr:Royal_Medal .
      OPTIONAL { ?awardeeRoyalMedals dbo:almaMater ?almaMaterAwardee }
    }
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,70,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/property/office> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award
WHERE {
  # Bruce Fraser's awards
  dbr:Bruce_Fraser_1st_Baron_Fraser_of_North_Cape dbo:award ?award .

  # Person who was a commander in Budapest and is deceased
  ?person dbo:commanderInChiefOfMilitaryForce dbr:Budapest ;
          dbo:deceased ""true""^^xsd:boolean .
  
  # Link the award to the person
  ?award dbo:recipient ?person .

  # Gustav Jonson's leadership role
  dbr:Gustav_Jonson dbo:leader ?agency ;
                    a dbo:OfficeHolder, dbo:Politician .

  # The agency led by Gustav Jonson
  ?agency a dbo:GovernmentAgency .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
534,20,test,"Give me the headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final and birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/headquarter> ?result . ?v4 <http://dbpedia.org/ontology/owner> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?headquarter WHERE {
  # Step 1: Identify the venue of the 2012 Pro12 Grand Final
  ?venue a dbo:Venue ;
         dbo:location ?location .

  FILTER EXISTS { ?location dbo:isPartOf dbr:2012_Pro12_Grand_Final }

  # Step 2: Find the owner of the venue
  ?owner dbo:owns ?venue .

  # Step 3: Locate the headquarter of the owner
  ?owner dbo:headquarters ?headquarter .

  # Step 4: Identify a politician native to Essex
  ?politician a dbo:Politician ;
              dbo:nativePlace dbr:Essex .

  # Step 5: Find the child of the Essex politician who is also a politician and office holder
  ?child dbo:parent ?politician ;
         a dbo:Politician, dbo:OfficeHolder .

  # Step 6: Determine the birth place of the child
  ?child dbo:birthPlace ?birthPlace .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
528,64,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa and force of the person born as the birth name of Narciso Campero.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?war ?orozimboForce ?camperoForce WHERE {
  # Wars in Chile
  ?war dbo:location dbr:Chile ;
       a dbo:MilitaryConflict .

  # Orozimbo Barbosa's military force
  OPTIONAL {
    dbr:Orozimbo_Barbosa dbo:militaryUnit ?orozimboForce .
  }

  # Narciso Campero by birth name and his military force
  OPTIONAL {
    ?campero foaf:name ""Narciso Campero"" ;
             dbo:militaryUnit ?camperoForce .
    FILTER EXISTS { ?campero dbo:birthName ""Narciso Campero"" }
  }
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
421,27,test,Give me the band member of Senidah and person born as the birth name of Dino Merlin and native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find band members of Senidah
  ?senidah dbo:member ?bandMember .
  FILTER(STRSTARTS(STR(?senidah), ""http://dbpedia.org/resource/Senidah""))

  # Get Dino Merlin's birth name
  ?dinoMerlin dbo:birthName ?birthName .

  # Get Samir Bekrić's birthplace
  ?samirBekric dbo:birthPlace ?birthPlace .

  FILTER(STRSTARTS(STR(?dinoMerlin), ""http://dbpedia.org/resource/Dino_Merlin""))
  FILTER(STRSTARTS(STR(?samirBekric), ""http://dbpedia.org/resource/Samir_Bekrić""))

  # Check if the band member has the same birth name as Dino Merlin and is from Samir Bekrić's birthplace
  ?bandMember dbo:birthName ?birthName .
  ?bandMember dbo:birthPlace ?birthPlace .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
404,57,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfChild
WHERE {
  # Prince George William of Hanover and his spouse
  ?princeGeorge a dbo:Person ;
               dbo:spouse ?princessVictoriaLouise .
  
  FILTER (str(?princeGeorge) = ""Prince George William of Hanover""^^xsd:string)
  FILTER (str(?princessVictoriaLouise) = ""Princess Victoria Louise of Prussia""^^xsd:string)

  # Their child who is royalty
  ?child dbo:parent ?princeGeorge ;
         dbo:parent ?princessVictoriaLouise ;
         rdfs:subClassOf* dbo:Royal .

  # Parent of this child who is also royalty
  ?royalParent dbo:child ?child .
  
  # Father of Ernest Augustus, Duke of Brunswick
  ?ernestAugustus a dbo:Person ;
                 dbo:father ?fatherOfErnestAugustus .
  
  FILTER (str(?ernestAugustus) = ""Ernest Augustus, Duke of Brunswick""^^xsd:string)

  # The parent we are looking for
  ?parentOfChild dbo:child ?royalParent .

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
547,21,test,Give me the resting place of Alan Cunningham and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for the resting place of Alan Cunningham
SELECT ?restingPlaceAlanCunningham WHERE {
  ?alanCunningham a dbo:Person ;
                 foaf:name ""Alan Cunningham""@en .
  ?alanCunningham dbo:finalBurial ?restingPlaceAlanCunningham .
}

UNION

# Query for the resting place of the child of James Burton (property developer)
SELECT ?childRestingPlace WHERE {
  ?jamesBurton a dbo:Person ;
               foaf:name ""James Burton""@en ;
               rdf:type dbo:PropertyDeveloper .
  ?jamesBurton dbo:child ?child .
  ?child dbo:finalBurial ?childRestingPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,33,test,Give me the spouse of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
# Query to get Ted McGinley's spouse
SELECT ?spouse WHERE {
  ?person dbo:birthName ""Ted McGinley""@en .
  ?person dbo:spouse ?spouse .
}

# Query to find the actor of ""Unnatural"" and their profession
SELECT ?actor ?profession WHERE {
  ?series rdfs:label ""Unnatural (TV series)""@en .
  ?series dbo:starring ?actor .
  ?actor a dbo:Actor ;
         dbo:occupation ?profession .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
696,16,test,Give me the landmark at elevation of the award of Nie Rongzhen and birth place of the member of Dropkick Murphys.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v3 . <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark1 ?elevation ?landmark2 ?birthPlace WHERE {
  # Part 1: Nie Rongzhen's Award and Landmark at Elevation
  dbr:Nie_Rongzhen dbo:award ?award .
  ?award dbo:elevation ?elevation .
  
  OPTIONAL { 
    ?landmark1 dbo:elevation ?elevation .
    FILTER(?landmark1 != dbr:Nie_Rongzhen)
  }
  
  # Part 2: Dropkick Murphys Member and Landmark at Birthplace
  ?band dbo:member ?member .
  ?band dbr:Dropkick_Murphys .
  ?member dbo:birthPlace ?birthPlace .
  
  OPTIONAL {
    ?landmark2 dbo:location ?birthPlace .
    FILTER(?landmark2 != ?member)
  }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
767,39,test,"Give me the alma mater of Carl L. Nippert and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?alterEgo
WHERE {
  # Alma mater of Carl L. Nippert
  OPTIONAL { 
    dbr:C_L_Nippert dbo:almaMater ?almaMater .
  }
  
  # Alter ego of a fictional character by Matthew Burland
  OPTIONAL {
    ?character dbo:creator dbr:Matthew_Burland ;
               dbo:fictionalAlterEgo ?alterEgo .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
77,16,test,Give me the force of the mayor of Congress Poland and war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
# Query to find the force of the Mayor of Congress Poland
SELECT ?mayor ?force WHERE {
  ?mayor dbo:officeLocation dbr:Congress_Poland .
  OPTIONAL { ?mayor dbo:militaryUnit ?force . }
}

# Query to find the war of the awardee of Golden Weapon for Bravery
SELECT ?awardee ?war WHERE {
  ?award dbo:name ""Golden Weapon for Bravery""@en ;
         dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:participatedInWar ?war . }
}
```",4,4,5,2,2,3,2,20,0,0,13,0,0.0,0
54,55,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin ;
         a dbo:Person, dbo:Royalty ;
         dbo:officeHolder ?office .

  # Narapati I of Ava's child
  ?narapatiChild dbo:parent dbr:Narapati_I_of_Ava ;
                 a dbo:Person .

  # Soe Min Wimala Dewi's father
  ?soeMinParent dbo:child dbr:Soe_Min_Wimala_Dewi ;
                a dbo:Person .

  # Find the predecessor of the child identified in step 1
  ?office dbo:predecessor ?predecessor .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
55,27,test,"Give me the band of the reference, that is a band, to Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony and band member of Guns N' Roses.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?metallicaMember ?symphonyConnection ?gunsNrosesMember
WHERE {
  # Metallica member who is also in another band or group
  ?metallicaMember dbo:memberOf dbr:Metallica .
  ?metallicaMember dbo:memberOf ?otherBand .

  # Connection to San Francisco Symphony
  OPTIONAL { 
    ?symphonyConnection dbo:performerIn dbr:San_Francisco_Symphony .
    FILTER (?metallicaMember = ?symphonyConnection)
  }

  # Guns N' Roses member who is also in another band or group
  ?gunsNrosesMember dbo:memberOf dbr:Guns_N'_Roses .
  ?gunsNrosesMember dbo:memberOf ?otherBand2 .

  # Ensure the same person connects Metallica to San Francisco Symphony and Guns N' Roses
  FILTER (?metallicaMember = ?symphonyConnection && ?symphonyConnection = ?gunsNrosesMember)
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
492,47,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?conflictEvent WHERE {
  # Find the commander in the Battle of Verdun
  ?battle dbr:Battle_of_Verdun .
  ?battle dbo:commander ?commander .

  # Ensure this commander is involved in another military conflict or event
  ?otherConflict dbo:commander ?commander ;
                 a dbo:MilitaryConflict .

  # Find the place where Joseph C. Satterthwaite died (his work location)
  dbr:Joseph_C._Satterthwaite dbo:deathPlace ?decedentLocation .

  # Check if this commander is connected to that decedent's work location
  ?commander dbo:placeOfBirth ?decedentLocation ;
             a dbo:Person .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
404,67,test,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of the spouse of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?finalChild WHERE {
  # Step 1: Find Princess Victoria Louise of Prussia's spouse
  ?princess a dbo:Person ;
           rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  ?princess dbo:spouse ?spouse .

  # Step 2: Find the child of that spouse who is royalty
  ?spouse dbo:child ?royalChild .
  ?royalChild a dbo:Person ;
              rdfs:label ?childLabel .
  FILTER(CONTAINS(LCASE(?childLabel), ""prince"") || CONTAINS(LCASE(?childLabel), ""princess""))

  # Step 3: Determine the parent of this royal child who is also royalty
  ?royalChild dbo:parent ?royalParent .
  ?royalParent a dbo:Person ;
               rdfs:label ?parentLabel .
  FILTER(CONTAINS(LCASE(?parentLabel), ""king"") || CONTAINS(LCASE(?parentLabel), ""queen"") ||
         CONTAINS(LCASE(?parentLabel), ""prince"") || CONTAINS(LCASE(?parentLabel), ""princess""))

  # Step 4: Identify Prince George William of Hanover's father
  ?george a dbo:Person ;
          rdfs:label ""Prince George William of Hanover""@en .
  
  ?george dbo:father ?fatherOfGeorge .

  # Step 5: Find the spouse of Princess Victoria Louise of Prussia's father
  ?princess dbo:parent ?fatherPrincess .
  ?fatherPrincess dbo:spouse ?spouseFatherPrincess .

  # Step 6: Determine the child of this spouse
  ?spouseFatherPrincess dbo:child ?finalChild .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
378,65,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v4 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?warOfGahn ?commander ?greatSiegeWar ?peninsularWar 
WHERE {
  # Find Carl Pontus Gahn and any associated wars
  dbr:Carl_Pontus_Gahn dbo:birthName ""Carl Pontus Gahn"" .
  
  OPTIONAL { dbr:Carl_Pontus_Gahn dbo:associatedWith ?warOfGahn . }
  
  # Identify the commander of the Great Siege of Gibraltar
  ?greatSiegeEvent a dbo:MilitaryConflict ;
                  dbo:commander ?commander ;
                  rdfs:label ""Great Siege of Gibraltar""@en .
  
  OPTIONAL { ?commander dbo:associatedWith ?peninsularWar . }
  
  # Check if this commander was involved in the Peninsular War
  ?peninsularEvent a dbo:MilitaryConflict ;
                   rdfs:label ""Peninsular War""@en ;
                   dbo:commander ?commander .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
54,32,test,Give me the child of the father of Soe Min Wimala Dewi and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
# Find Soe Min Wimala Dewi's father and his children
WITH {
    SELECT ?father ?child WHERE {
        ?dewi dbo:parent ?father .
        FILTER(STR(?dewi) = ""Soe_Min_Wimala_Dewi"")
        
        OPTIONAL { ?father dbo:child ?child . }
    }
} AS %children

# Find Narapati I's children and their parents
WITH {
    SELECT ?narapatiChild ?parent WHERE {
        ?narapati dbo:child ?narapatiChild .
        FILTER(STR(?narapati) = ""Narapati_I_of_Ava"")
        
        OPTIONAL { ?narapatiChild dbo:parent ?parent . }
    }
} AS %parents

# Find the common individual who is both a sibling of Soe Min Wimala Dewi and a parent of Narapati I's child
SELECT DISTINCT ?commonIndividual WHERE {
    VALUES ?dewiFatherChild { %children(:father :child) }
    
    VALUES ?narapatiParent { %parents(:narapatiChild :parent) }
    
    FILTER(?dewiFatherChild = ?narapatiParent)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
161,64,test,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander ?conflict ?decedent WHERE {
  # Francisco Franco as ""El Director""
  dbr:Franco_Sanchez_Barela a dbo:Person ;
    rdfs:label ""Francisco Franco""@en ;
    dbo:militaryCommander ?commander .

  # Military force of the Spanish Civil War
  ?militaryForce a dbo:MilitaryOrganization ;
    dbo:commander ?commander ;
    dbo:partOf dbr:Spanish_Civil_War .

  # Spanish Civil War as societal event and military conflict
  dbr:Spanish_Civil_War a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Decedents at Francoist Spain
  OPTIONAL {
    ?decedent a dbo:Person ;
      dbo:deathPlace dbr:Spain ;
      dbo:diedDuring dbr:Francoist_Spain .
  }
}
```",7,11,8,3,3,3,3,71,0,0,32,0,0.0,0
92,49,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMemberArtist ?bandOfJosephMichael
WHERE {
  # Part 1: Find band members of Nevermore who are also artists
  ?person dbo:bandMember dbr:Nevermore ;
          rdf:type dbo:Artist .
  
  # Part 2: Find the band associated with a person born as Joseph Michael
  ?individual foaf:name ""Joseph Michael""@en ;
              dbo:bandMember ?bandOfJosephMichael .

  # Joining results to find common entities if needed (though not directly required by question)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,59,test,Give me the parent of the child of the child of Seti I and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Seti I's family
  dbr:Seti_I a dbo:Person ;
             dbo:child ?setiChild .
  
  ?setiChild dbo:child ?grandchildOfSetiI .
  ?grandchildOfSetiI dbo:parent ?parentOfGrandchild .

  # Amun-her-khepeshef's family
  dbr:Amun-her-khepeshef a dbo:Person ;
                         dbo:spouse ?amunSpouse .
  
  ?amunSpouse dbo:child ?childOfSpouse .
  ?childOfSpouse dbo:parent ?parentOfChild .

  # Find common parent
  FILTER (?parentOfGrandchild = ?parentOfChild)
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
378,47,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1 ?war2 WHERE {
  # Find Carl Pontus Gahn's DBpedia resource
  ?gahn a dbo:Person ;
        foaf:name ""Carl Pontus Gahn""@en .
  
  # Wars in which Carl Pontus Gahn participated
  ?gahn dbo:participatedIn ?war1 .

  # Peninsular War
  dbr:Peninsular_War a dbo:MilitaryConflict ;
                     dbo:commanderOf ?peninsularCommander .

  # Find another war with the same commander as in the Peninsular War
  ?peninsularCommander dbo:commanderOf ?war2 .
  
  FILTER(?war1 != dbr:Peninsular_War)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
701,71,test,"Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of the child of Seti I and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Part 1: Amun-her-khepeshef's spouse and their child's parent
  ?spouse dbo:spouse dbr:Amun-her-khepeshef .
  ?child dbo:parent ?spouse .
  ?parent dbo:parent ?child .

  # Part 2: Seti I's grandchild and their parent
  ?setiChild dbo:parent dbr:Seti_I .
  ?grandchild dbo:parent ?setiChild .
  ?grandParent dbo:parent ?grandchild .

  # Part 3: Commander in Battle of Perire
  ?commander dbo:participatedInBattle dbr:Battle_of_Perire .
  ?father dbo:child ?commander .
  ?spouseOfFather dbo:spouse ?father .

  # Combine and filter for royalty
  FILTER (?parent = ?grandParent && ?parent = ?spouseOfFather)
  FILTER (dbo:Class(?parent) = dbr:Royalty)
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
92,61,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?musicalArtist WHERE {
  # Find Joseph Michael's birth name and associated band
  ?person a dbo:Person ;
          foaf:name ""Joseph Michael"" ;
          dbo:birthName ?birthName .
  
  OPTIONAL { ?person dbo:memberOfBand ?band . }
  
  # Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?film dbo:title ""Return to Nuke 'Em High Volume 1""@en ;
        dbo:actor ?actor .

  OPTIONAL { ?actor dbo:associatedMusicalArtist ?musicalArtist . }

  FILTER(?person = ?actor) # Ensure the same person is identified in both contexts
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
701,58,test,"Give me the parent of the child of Ramesses II and parent of Meritamen and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Ramesses II's child
  ?child dbo:parent dbr:Ramesses_II .
  
  # Parent of the child (should be Ramesses II)
  ?parent dbo:child ?child .

  # Meritamen's parent
  dbr:Meritamen dbo:parent ?meritamenParent .

  # Ensure the parent is the same for both
  FILTER (?parent = ?meritamenParent)

  # Commander in the Battle of Perire
  ?commander dbp:battle dbr:Battle_of_Perire .
  
  # Father of the commander
  ?father dbo:child ?commander .

  # Spouse of the father
  ?spouse dbo:spouse ?father .

  # Ensure the parent is a royalty and matches the spouse
  FILTER (?parent = ?spouse && (dbo:royalty ?parent))
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
251,24,test,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for the administration of the ruling party in Sicily
SELECT ?party ?administration WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:head ?administration .
  ?party dbo:location dbr:Sicily .
}

UNION

# Query for the death place of the author of ""The Twelve Abbots of Challant""
SELECT ?author ?deathPlace WHERE {
  ?work dbo:title ""The Twelve Abbots of Challant""@en ;
        dbo:author ?author .
  ?author dbo:deathPlace ?deathPlace .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
994,45,test,"Give me the associated musical artist of Red Tide (band) and associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?associatedArtistRedTide ?associatedArtistSASlayer ?bandMemberPersonaDonDokken
WHERE {
  # Associated musical artist of Red Tide (band)
  ?redTide dbo:associatedMusicalArtist ?associatedArtistRedTide .
  VALUES ?redTide { <http://dbpedia.org/resource/Red_Tide_(band)> } .

  # Associated musical artist of S.A. Slayer
  ?sASlayer dbo:associatedMusicalArtist ?associatedArtistSASlayer .
  VALUES ?sASlayer { <http://dbpedia.org/resource/S._A._Slayer> } .

  # Band member who is a musical artist and persona of Don Dokken
  ?person dbo:bandMember ?band .
  ?person foaf:name ?name .
  ?person dbo:birthDate ?birthDate .
  ?persona dbo:personaOfDonDokken ?person .
  
  FILTER EXISTS { ?person dbo:birthDate ?birthDate } # Ensures the person is a musical artist by birth
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
16,54,test,Give me the spouse of the person born as Ted Martin McGinley and professional in the profession of the actor of Unnatural (TV series) and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Ted Martin McGinley's spouse
  dbr:Ted_McGinley dbo:spouse ?spouse .

  # Actor of Unnatural (TV series)
  ?actor dbo:actorIn dbr:Unnatural_(TV_series) .
  
  # Profession of the actor from Unnatural
  ?actor dbo:profession ?actorProfession .

  # Georgeanne Marie Rice's profession
  dbr:Georgeanne_Marie_Rice dbo:profession ?riceProfession .

  # Ensure professions match
  FILTER (?actorProfession = ?riceProfession)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
994,64,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of Red Tide (band).","SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find a band member of Watchtower who is also a musical artist.
SELECT ?watchtowerMember WHERE {
    ?watchtowerMember dbo:band dbr:Watchtower .
    ?watchtowerMember rdf:type dbo:MusicalArtist .
}

# Step 2: Identify another musical artist they are associated with.
SELECT ?associatedArtist WHERE {
    ?watchtowerMember dbo:associatedBandMember ?associatedArtist .
    ?associatedArtist rdf:type dbo:MusicalArtist .
}

# Step 3: Determine which musical artist is known as Don Dokken.
SELECT ?donDokken WHERE {
    ?donDokken rdfs:label ""Don Dokken""@en .
    ?donDokken rdf:type dbo:MusicalArtist .
}

# Step 4: Identify the associated musical artist of Red Tide (band).
SELECT ?redTideAssociatedArtist WHERE {
    ?redTide dbr:Red_Tide_(band) .
    ?redTide dbo:associatedBandMember ?redTideAssociatedArtist .
    ?redTideAssociatedArtist rdf:type dbo:MusicalArtist .
}

# Step 5: Find the common link between the results from steps 2 and 4.
SELECT DISTINCT ?finalArtist WHERE {
    VALUES (?artist1) { (<result_from_step_2>) }
    VALUES (?artist2) { (<result_from_step_4>) }
    ?finalArtist owl:sameAs ?artist1 .
    ?finalArtist owl:sameAs ?artist2 .
}
```

Note: Replace `<result_from_step_2>` and `<result_from_step_4>` with the actual URIs obtained from executing steps 2 and 4.",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
161,63,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryConflict
WHERE {
  # Emilio Mola's military force (event)
  OPTIONAL { 
    dbr:Emilio_Mola dbo:militaryCommanderOf ?commandEvent .
    ?commandEvent a dbo:MilitaryConflict ;
                  rdfs:label ?militaryConflictLabel .
  }
  
  # Francisco Largo Caballero's military force (societal event and military conflict)
  OPTIONAL { 
    dbr:Francisco_Largo_Caballero dbo:militaryCommanderOf ?conflictEvent .
    ?conflictEvent a dbo:MilitaryConflict ;
                   rdfs:label ?militaryConflictLabel2 .
  }
  
  # Filter to find common military conflict
  FILTER (?militaryConflict = ?militaryConflictLabel || ?militaryConflict = ?militaryConflictLabel2)
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
54,69,test,"Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v4 <http://dbpedia.org/property/father> ?v3 . ?v7 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfNarapatisChild ?childOfThinkhayasPredecessor
WHERE {
  # Narapati I of Ava's child and parent
  ?narapatiI a dbo:Person ;
             foaf:name ""Narapati I of Ava"" .
  ?narapatisChild dbo:parent ?narapatiI ;
                  dbo:child ?grandchildOfNarapatI .
  ?parentOfNarapatisChild dbo:child ?narapatisChild .

  # Thinkhaya of Pagan's child and predecessor
  ?thinkhaya a dbo:Person ;
             foaf:name ""Thinkhaya of Pagan"" .
  ?thinkhayasChild dbo:parent ?thinkhaya ;
                   dbo:child ?grandchildOfThinkhaya .
  ?predecessorOfThinkhayasChild dbo:succ ?thinkhayasChild .

  # Thihapate of Mohnyin as an office holder and royalty
  ?thihapate a dbo:Person, dbo:Royalty ;
              foaf:name ""Thihapate of Mohnyin"" .
  ?officeHolder rdf:type dbo:OfficeHolder ;
                dbo:person ?thihapate .

  # Find the child related to Thihapate
  ?childOfThinkhayasPredecessor dbo:parent ?predecessorOfThinkhayasChild ;
                               dbo:relatedTo ?thihapate .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
801,65,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?writer dbo:work .dbr:""40 Dayz & 40 Nightz"" .
  ?writer a dbo:Person .

  ?writer dbo:musicalArtist ?artist .
  ?writer dbo:producer ?artist .

  ?artist a dbo:MusicalArtist ;
          dbo:profession dbr:Rapper .

  OPTIONAL { ?artist dbo:alterEgo ?shadow . }
  FILTER (?shadow = dbr:The_Shadow)
}
```",7,13,8,3,3,3,3,71,0,0,8,0,0.0,0
44,8,test,"Give me the band member of Undertow (band) and band member of the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?undertowMember ?associatedGroupMember WHERE {
  # Find a band member of Undertow
  ?undertowMember dbo:bandMember dbr:Undertow_(band) .

  # Find an associated group or organization with Queensrÿche that is both a MusicalArtist and Organization
  ?associatedGroup dbo:associatedBand dbr:Queensrÿche ;
                  rdf:type dbo:MusicalArtist , dbo:Organization .

  # Find a band member of the associated group
  ?associatedGroupMember dbo:bandMember ?associatedGroup .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
92,47,test,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberArtist ?actorArtist WHERE {
  # Find members of Nevermore who are artists
  ?member dbo:bandMember dbr:Nevermore .
  ?member dbo:occupation dbr:Artist .

  # Find actors from ""Return to Nuke 'Em High Volume 1"" who are also artists
  ?actor dbo:actor dbr:Return_to_Nuke_'Em_High_Volume_1 .
  ?actor dbo:occupation dbr:Artist .

  # Check for any musical association between the band member and actor
  OPTIONAL { 
    ?bandMemberArtist dbo:musicalArtist ?actorArtist .
    FILTER (?bandMemberArtist = ?member && ?actorArtist = ?actor)
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
378,57,test,"Give me the war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of the commander in Great Siege of Gibraltar.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Carl Pontus Gahn's involvement in wars
SELECT ?war WHERE {
    dbr:C_P_Gahn dbo:participatedIn ?war .
}

# Step 2: Identify commanders associated with both the Peninsular War and the Great Siege of Gibraltar
SELECT DISTINCT ?commander WHERE {
    ?commander dbo:participatedIn dbr:Peninsular_War ;
               dbo:participatedIn dbr:Great_Siege_of_Gibraltar .
}

# Step 3: Extract claim to fame for the commander during the Great Siege of Gibraltar
SELECT ?commander ?claimToFame WHERE {
    ?commander dbo:participatedIn dbr:Great_Siege_of_Gibraltar ;
               dbo:famousFor ?claimToFame .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
801,51,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Step 1: Find the album ""What U See Is What U Get"" and its writer
SELECT ?album ?writer WHERE {
  ?album a dbo:MusicalAlbum ;
         rdfs:label ""What U See Is What U Get""@en .
  OPTIONAL { ?album dbo:composer ?writer . }
}

# Step 2: Find the associated musical artist of this writer
SELECT DISTINCT ?associatedArtist WHERE {
  ?writer dbo:associatedMusicalArtist ?associatedArtist .
  FILTER EXISTS {
    SELECT ?album ?writer WHERE {
      ?album a dbo:MusicalAlbum ;
             rdfs:label ""What U See Is What U Get""@en .
      OPTIONAL { ?album dbo:composer ?writer . }
    }
  }
}

# Step 3: Identify the producer of a song by 50 Cent
SELECT DISTINCT ?producer WHERE {
  ?song a dbo:SongsBy50Cent ;
        rdfs:label ?title .
  ?song dbo:recordProducer ?producer .
}

# Step 4: Check if there is any connection between the associated artist and the producer
SELECT DISTINCT ?associatedArtist ?producer WHERE {
  ?writer dbo:associatedMusicalArtist ?associatedArtist .
  FILTER EXISTS {
    SELECT ?album ?writer WHERE {
      ?album a dbo:MusicalAlbum ;
             rdfs:label ""What U See Is What U Get""@en .
      OPTIONAL { ?album dbo:composer ?writer . }
    }
  }

  ?song a dbo:SongsBy50Cent ;
        rdfs:label ?title .
  ?song dbo:recordProducer ?producer .

  FILTER (?associatedArtist = ?producer)
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
404,58,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent
WHERE {
  # Identify Princess Victoria Louise's spouse and their father
  ?spouse rdfs:label ""Frederick Charles, Duke of Schleswig-Holstein""@en .
  ?princess dbo:spouse ?spouse ;
            rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  ?father dbo:child ?spouse .

  # Identify Ernest Augustus's children who are royalty
  ?ernestAugustus rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  ?child dbo:child ?ernestAugustus ;
         rdf:type dbo:RoyalFamilyMember .

  # Find the parent of this child, ensuring they are also a child of the identified father
  ?parent dbo:child ?child ;
          dbo:child ?father .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
767,29,test,Give me the reference to  and entity in Baden-Württemberg and alma mater of the administration of George K. Nash.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?referenceToBadenWuerttemberg WHERE {
  ?person a dbo:Person ;
          foaf:name ""George K. Nash""@en .
  
  ?person dbo:almaMater ?almaMater .

  OPTIONAL { 
    ?almaMater dbp:location ?location .
    FILTER (CONTAINS(LCASE(?location), ""baden-württemberg""))
    BIND(""Reference to Baden-Württemberg"" AS ?referenceToBadenWuerttemberg)
  }

  OPTIONAL {
    FILTER (!BOUND(?location))
    BIND(""No direct reference to Baden-Württemberg"" AS ?referenceToBadenWuerttemberg)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
232,57,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native WHERE {
  # Find Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:residence ?residence .
  
  # Check if the residence is a British settlement
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Find Jon Pertwee's child who is an actor, narrator, and producer
  dbr:Jon_Pertwee dbo:child ?child .
  ?child rdf:type dbo:Actor ;
         rdf:type dbo:Narrator ;
         rdf:type dbo:Producer .

  # Find the claim to fame of Jon Pertwee's child (film or military conflict)
  ?child dbo:claimToFame ?fame .
  ?fame rdf:type ?type .
  
  FILTER (?type IN (dbo:Film, dbo:MilitaryConflict))

  # Get the native of the residence
  ?residence dbo:native ?native .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
801,64,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in the alter ego of the true self of The Shadow and producer of Westside Story (song).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musicalArtist WHERE {
  # Find The Shadow who produced Westside Story (song)
  ?shadow a dbo:MusicalArtist ;
          dbo:producedWork dbr:Westside_Story_(song) .

  # Find the album associated with What U See Is What U Get
  ?album a dbo:MusicalAlbum ;
         rdfs:label ""What U See Is What U Get""@en .

  # Identify the writer of this album
  ?writer dbo:wroteWork ?album .

  # Find the musical artist who is also an artist, associated with both the writer and the album
  ?musicalArtist a dbo:MusicalArtist, dbo:Artist ;
                 dbo:associatedWith ?writer ;
                 dbo:associatedWith ?album .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
281,63,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v6 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country ?war1 ?war2 WHERE {
  # Bob Heffron's birth place that is a country
  dbr:Bob_Heffron dbo:birthPlace ?place .
  ?place rdf:type dbo:Country ;
         rdfs:label ?country .

  # Jonathon Band's award and associated war
  OPTIONAL { 
    dbr:Jonathon_Band dbo:award ?award .
    ?award dbo:relatedWar ?war1 .
  }

  # Heather Roy's profession as a military unit and associated war
  OPTIONAL {
    dbr:Heather_Roy dbo:occupation ?profession .
    ?profession rdf:type dbo:MilitaryUnit ;
                dbo:relatedWar ?war2 .
  }
}
```",7,9,8,3,3,3,3,71,0,1,1,0.0,0.0,0
767,56,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  # Find Matthew Burland's fictional alter ego
  ?alterEgo a dbo:FictionalCharacter ;
            dbo:portrayedBy dbr:Matthew_Burland .

  # Find Carl L. Nippert's alma mater
  ?nippert a dbo:Person ;
          dbo:almaMater ?almaMater .

  # Find the settlement in administration related to both entities
  ?settlement a dbo:Settlement ;
              dbo:administration ?adminEntity .
  
  # Link alter ego and alma mater through the same administrative entity
  ?alterEgo dbo:associatedWith ?adminEntity .
  ?almaMater dbo:locatedIn ?adminEntity .

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
9,61,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?recipient dbo:award dbr:Royal_Medals .
  ?recipient dbo:almaMater ?almaMater .
  FILTER EXISTS { 
    ?almaMater rdfs:label ""Queen's University Belfast""@en .
  }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
378,49,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warCarlGahn ?warThomasTrigge
WHERE {
  # Find Carl Pontus Gahn's notable war involvement
  dbr:Carl_Pontus_Gahn dbo:birthPlace ?place .
  ?person dbo:birthPlace ?place ;
          dbo:claimToFame ?warCarlGahn .

  # Ensure the war is a military conflict, societal event, and general event
  ?warCarlGahn rdf:type dbo:MilitaryConflict ;
               rdf:type dbo:SocietalEvent ;
               rdf:type dbo:Event .

  # Find Thomas Trigge's commanded wars
  dbr:Thomas_Trigge dbo:commanderOf ?warThomasTrigge .
  
  # Ensure the war matches the criteria for both individuals
  FILTER (?warCarlGahn = ?warThomasTrigge)
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
996,18,test,Give me the force of the awardee of the elevation of Lac d'Avoriaz and entity in the award of Ekrem Akurgal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
# Step 1: Identify the awardee of the elevation of Lac d'Avoriaz
SELECT ?awardee WHERE {
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Elevation of Lac d'Avoriaz""@en .
}

# Step 2: Determine the force associated with this awardee
SELECT ?force WHERE {
  ?awardee dbo:fieldOfStudy ?field .
  ?field dbo:relatedField ?force .
}

# Step 3: Identify Ekrem Akurgal's award
SELECT ?ekremAward WHERE {
  ?award dbo:recipient <http://dbpedia.org/resource/Ekrem_Akurgal> .
  ?award rdfs:label ?ekremAwardLabel .
}

# Step 4: Find the entity associated with this award
SELECT ?entity WHERE {
  ?ekremAward dbo:relatedEntity ?entity .
}
```

Note: The above queries are based on assumptions about the structure of DBpedia data. Adjustments may be needed depending on actual data availability and relationships.",5,5,6,3,2,3,2,20,0,0,4,0,0.0,0
328,55,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander in the force of Ferenc Szálasi
  OPTIONAL { ?szalasiCommander dbo:commander ?person . }
  FILTER (EXISTS { ?szalasiCommander dbr:Ferenc_Szálasi } )

  # Leader of an office under Joseph Stalin
  OPTIONAL { ?stalinOffice dbo:leader ?person . }
  FILTER (EXISTS { ?stalinOffice dbo:head dbr:Joseph_Stalin } )
  
  # Awardee of Bruce Fraser, 1st Baron Fraser of North Cape
  OPTIONAL { ?fraserAward dbo:recipient ?person . }
  FILTER (EXISTS { ?fraserAward dbo:awardedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape } )

  # Ensure the person is Andrew Cunningham
  FILTER EXISTS { ?cunningham dbo:name ""Andrew Cunningham""@en . ?person dbo:wikiPageRedirects ?cunningham }
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
959,32,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?university WHERE {
  # Find Eiji Ōtsuka's alma mater that is a Japanese university and organization
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  
  FILTER EXISTS { ?university rdf:type dbo:University . }
  FILTER EXISTS { ?university rdf:type dbo:EducationalOrganization . }
  FILTER EXISTS { ?university rdf:type dbo:Organisation . }
  FILTER EXISTS { ?university dbo:country dbr:Japan . }

  # Find Yōichi Masuzoe's native residence
  OPTIONAL {
    dbr:Yōichi_Masuzoe dbo:nativePlace ?residence .
    FILTER EXISTS { ?residence rdf:type dbo:Country . }
  }

  # Check if the university is in the same country as Yōichi Masuzoe's native place
  OPTIONAL {
    ?university dbo:country ?residence .
  }
}
```",4,9,5,2,2,3,3,71,0,0,84,0,0.0,0
232,60,test,"Give me the child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
# Step 1: Get Jon Pertwee's birth name
SELECT ?birthName WHERE {
    dbpedia:Jon_Pertwee dbo:birthName ?birthName .
}

# Step 2: Find Jon Pertwee's place of residence or birth
SELECT ?residence WHERE {
    dbpedia:Jon_Pertwee dbo:birthPlace ?residence .
}

# Step 3: Identify a British settlement related to this place
SELECT DISTINCT ?settlement WHERE {
    ?residence dbo:country dbr:United_Kingdom ;
               rdf:type dbo:Settlement .
    ?settlement dbo:partOf ?residence .
}

# Step 4: Find a French politician associated with this settlement
SELECT DISTINCT ?politician WHERE {
    ?politician dbo:nationality dbr:France ;
                dbo:officeHolder true ;
                dbo:placeOfBirth ?settlement .
}

# Step 5: Query for the child of this politician
SELECT DISTINCT ?child WHERE {
    ?politician dbo:child ?child .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
959,41,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry
WHERE {
  # Find Yōichi Masuzoe's residence which is a country
  dbr:Yōichi_Masuzoe dbo:nationality ?nationality .
  ?residence dbo:nationality ?nationality ;
             rdf:type dbo:Country .

  # Find Eiji Ōtsuka's alma mater that fits the criteria
  dbr:Eiji_Ōtsuka dbo:almaMater ?almaMater .
  ?almaMater rdf:type dbo:University ;
             dbo:country ?nativeCountry ;
             dbo:location ?location .

  # Ensure Eiji Ōtsuka managed Júbilo Iwata in the 2013 season
  dbr:Eiji_Ōtsuka dbo:manager dbr:Júbilo_Iwata .
  
  FILTER EXISTS { 
    ?season dbo:team dbr:Júbilo_Iwata ;
            dbo:year ""2013""^^xsd:gYear .
  }
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
492,31,test,Give me the commander in Franco-Hova Wars and person decedent at the work of the author of French Algeria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?decedent WHERE {
  # Find a commander in the Franco-Hova Wars
  ?war dbo:participatedIn [
    a dbo:MilitaryConflict ;
    dbo:location dbr:Madagascar .
  ].
  ?war dbo:commander ?commander.

  # Find an author related to French Algeria and their decedent
  ?author dbo:work dbr:French_Algeria .
  ?decedent dbo:deathPlace ?place ;
            dbo:causeOfDeath ?cause .
  ?work dbo:creator ?author .
  ?decedent dbo:relatedTo ?work .

}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
378,69,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?carlBirthNameWar ?peninsularCommander ?commanderClaimToFame ?thomasEvent
WHERE {
  # Carl Pontus Gahn's birth name and associated war
  dbr:C_P_Gahn dbo:birthName ?carlBirthName .
  OPTIONAL { ?carlBirthName dbo:associatedWithWar ?carlBirthNameWar . }

  # Peninsular War commander and their claim to fame
  ?peninsularCommander dbo:commanderInPeninsularWar true .
  ?peninsularCommander dbo:claimToFame ?commanderClaimToFame .

  # Thomas Trigge's involvement in events
  dbr:Thomas_Trigge dbo:event ?thomasEvent .
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
391,63,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/nickname> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Find the nickname for Jackson, Tennessee
SELECT ?nickname WHERE {
    dbpedia:Jackson_Tennessee dbo:nickname ?nickname .
}

# Step 2: Identify an actor with this nickname and a connection to Michael Ballhaus
SELECT DISTINCT ?actor WHERE {
    ?actor rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), LCASE(?nickname))) # Assuming the nickname is found in step 1
    ?work dbo:director dbpedia:Michael_Ballhaus .
    ?work dbo:starring ?actor .
}

# Step 3: Find a movie featuring both this actor and Roz Ryan
SELECT DISTINCT ?movie WHERE {
    ?movie dbo:starring ?actor . # Assuming ?actor is found in step 2
    ?movie dbo:starring dbpedia:Roz_Ryan .
}

# Step 4: Determine the birthplace of this actor
SELECT DISTINCT ?birthPlace WHERE {
    ?actor dbo:birthPlace ?birthPlace .
}
```

Note: This query assumes that the nickname for Jackson, Tennessee is known and can be used to filter actors. The actual SPARQL execution would require running these queries sequentially or combining them logically based on intermediate results.",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
701,56,test,"Give me the parent of Henuttawy (19th dynasty) and parent of the child of Nefertari and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?henuttawyParent ?nefertariChildSpouse ?battleCommanderFatherSpouse
WHERE {
  # Henuttawy (19th dynasty) parent
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy (19th dynasty)""@en .
  OPTIONAL { ?henuttawy dbo:parent ?henuttawyParent . }

  # Nefertari's child and spouse of the father
  ?nefertari a dbo:Person ;
             rdfs:label ""Nefertari""@en .
  ?nefertariChild dbo:childOf ?nefertari .
  OPTIONAL { ?nefertariChild dbo:parent ?nefertariParent . }
  OPTIONAL { ?nefertariParent dbo:spouse ?nefertariChildSpouse . }

  # Commander in Battle of Perire
  ?battleCommander a dbo:Person ;
                  dbo:participatedInBattle dbr:Battle_of_Perire .
  OPTIONAL { ?battleCommander dbo:father ?commanderFather . }
  OPTIONAL { ?commanderFather dbo:spouse ?battleCommanderFatherSpouse . }

  # Ensure the spouse is royalty
  FILTER (BOUND(?nefertariChildSpouse) && ?nefertariChildSpouse a dbo:RoyalPerson)
  FILTER (BOUND(?battleCommanderFatherSpouse) && ?battleCommanderFatherSpouse a dbo:RoyalPerson)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
959,67,test,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of University of Tsukuba.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeLanguage WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?politician dbo:office ""Member of the House of Councillors"" ;
             dbo:election ""2010 Japanese House of Councillors election"" .

  # Step 2: Find the manager of the team managed by the manager of the 1998 Kashima Antlers season
  ?manager dbo:occupation dbr:Soccer_manager ;
           dbo:managedTeam dbr:Kashima_Antlers_season_1998 .
  
  ?subManager dbo:managedBy ?manager ;
              dbo:occupation dbr:Soccer_manager .

  # Step 3: Confirm membership at University of Tsukuba
  ?politician dbo:almaMater dbr:University_of_Tsukuba .

  # Link the politician to the sub-manager through sports management chain
  ?subManager dbo:managedBy ?politician .

  # Determine the country of residence and its native language
  ?politician dbo:residence ?country .
  
  ?country dbo:language ?nativeLanguage .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
184,60,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Archduchess Margaret of Austria (born 1925) and her parent's parent
SELECT ?grandparentMargaret WHERE {
    ?margaret a dbo:Person ;
              rdfs:label ""Archduchess Margaret of Austria""@en .
    FILTER(CONTAINS(LANG(?margaret), ""en""))
    OPTIONAL { ?margaret dbo:birthdayYear ?year . }
    FILTER (?year = 1925)
    
    ?parentMargaret dbo:child ?margaret .
    ?grandparentMargaret dbo:child ?parentMargaret .
}

# Step 2: Find a landmark with elevation 96.0 and its native's parent
SELECT ?nativeParent WHERE {
    ?landmark dbo:elevationAboveSeaLevel ""96.0""^^xsd:float ;
              a dbo:Settlement .
    
    ?native dbr:?landmark ;
            a dbo:Place .
    
    ?parentNative dbo:child ?native .
}

# Step 3: Find the common parent
SELECT DISTINCT ?commonParent WHERE {
    VALUES (?grandparentMargaret) { (<result_from_step_1>) }
    VALUES (?nativeParent) { (<result_from_step_2>) }

    ?commonParent dbo:child ?grandparentMargaret ;
                 dbo:child ?nativeParent .
}
```

Note: The placeholders `<result_from_step_1>` and `<result_from_step_2>` need to be replaced with actual URIs obtained from executing the first two queries separately.",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
747,23,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Subquery to get the birth date of the decedent
  SELECT ?decedentBirthDate WHERE {
    ?decedent a dbo:Person ;
              dbo:birthDate ?decedentBirthDate .
    FILTER (str(?decedent) = ""Decedent"") # Replace with actual resource or identifier for the decedent
  } LIMIT 1

  # Main query to find the person matching criteria
  ?person a dbo:Person ;
          dbo:birthDate ?birthDate ;
          dbo:sport dbr:Soccer ; # Assuming 'Soccer' is used in DBpedia; adjust if necessary
          dbo:birthPlace dbr:Zolotonosha .
  
  FILTER (?birthDate = ?decedentBirthDate)
}
```",3,5,4,3,1,3,3,71,0,0,30,0,0.0,0
16,53,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley and professional in Actress.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Find Gigi Rice's birth name
  ?gigi a dbo:Person;
        foaf:name ""Gigi Rice"" ;
        dbo:birthName ?birthNameGigi .

  # Step 2: Find Ted McGinley's spouse who is an actress
  ?ted a dbo:Person;
       foaf:name ""Ted McGinley"";
       dbo:spouse ?spouse .
  
  ?spouse a dbo:Actress ;
          dbp:birthName ?birthNameSpouse .

  # Step 3: Match the birth names
  FILTER (?birthNameGigi = ?birthNameSpouse)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
281,44,test,"Give me the war of the profession, that is a military unit, of Heather Roy and entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?heatherRoyMilitaryUnit ?bobHeffronBirthCountry ?beauchampSeymourWar
WHERE {
  # Heather Roy's military unit
  OPTIONAL { 
    dbr:Heather_Roy dbo:militaryUnit ?heatherRoyMilitaryUnit .
  }

  # Bob Heffron's birthplace country
  OPTIONAL {
    dbr:Bob_Heffron dbo:birthPlace ?bobHeffronsBirthPlace .
    ?bobHeffronsBirthPlace dbo:country ?bobHeffronBirthCountry .
  }
  
  # Beauchamp Seymour, 1st Baron Alcester's war
  OPTIONAL {
    dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:participatedInWar ?beauchampSeymourWar .
  }
}
```",5,7,6,2,3,3,3,71,0,1,1,0.0,0.0,0
294,21,test,"Give me the resting place of Edwin A. Keeble and resting place of Luke Lea (American politician, born 1879) and entity in the birth place, that is a settlement, of Marion James.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?edwinRestingPlace ?lukeRestingPlace ?marionBirthplace
WHERE {
  # Edwin A. Keeble's resting place
  OPTIONAL { 
    dbr:Edwin_A._Keeble dbo:finalRestingPlace ?edwinRestingPlace .
  }

  # Luke Lea (American politician, born 1879)'s resting place
  OPTIONAL { 
    dbr:Luke_Lea_(politician,_born_1879) dbo:finalRestingPlace ?lukeRestingPlace .
  }
  
  # Marion James' birthplace that is a settlement
  OPTIONAL {
    dbr:Marion_James dbo:birthPlace ?marionBirthplace .
    ?marionBirthplace rdf:type dbo:Settlement .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
328,69,test,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?award ?agencyLeader ?gustavJonsonLeader WHERE {
  # Step 1: Find Ferenc Szálasi's commander
  ?szalasi dbo:commander ?commander .
  FILTER (str(?szalasi) = ""Ferenc_Szálasi"")

  # Step 2: Check if the commander received an award for Volcano and Ryukyu Islands campaign
  OPTIONAL {
    ?commander dbo:award ?award .
    FILTER (
      str(?award) = ""Volcano_Islands_campaign_award"" ||
      str(?award) = ""Ryukyu_Islands_campaign_award""
    )
  }

  # Step 3: Check if the commander was a leader of a government agency
  OPTIONAL {
    ?commander dbo:leaderOfGovernmentAgency ?agencyLeader .
  }

  # Step 4: Find Gustav Jonson's leader and check for connection
  dbr:Gustav_Jonson dbo:leader ?gustavJonsonLeader .
  
  # Check if the commander is also the leader of Gustav Jonson
  OPTIONAL {
    FILTER (?commander = ?gustavJonsonLeader)
  }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
617,32,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of Antiochus III the Great.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild
WHERE {
  # Seleucus II Callinicus
  ?seleucus2 dbo:spouse ?parent1 .
  
  # Child of Seleucus II Callinicus who is royalty
  ?royalChild dbo:child ?seleucus2 ;
              a dbo:Monarch .

  # Spouse of the royal child
  ?royalChild dbo:spouse ?spouse .

  # Antiochus III the Great
  ?antiochus3 dbp:spouse ?parent2 .
  
  # Child of Antiochus III the Great
  ?childOfAntiochus3 dbo:child ?antiochus3 .

  # The child of the spouse who is also a child of Antiochus III the Great
  ?childOfChild dbo:child ?spouse ;
               dbo:child ?antiochus3 .
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
392,27,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?province ?region
WHERE {
  # Sebastiano Bianchetti's residence in an Italian settlement
  ?person rdfs:label ""Sebastiano Bianchetti""@en .
  ?person dbo:residence ?settlement .
  ?settlement a dbo:Settlement ;
              dbo:country dbr:Italy .
  ?settlement dbo:province ?province .

  # Aguilar de Segarra's time zone region
  ?event rdfs:label ""Aguilar de Segarra""@en .
  ?event dbo:timeZone ?timezone .
  ?timezone dbo:region ?region .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
427,60,test,"Give me the reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?michelePintoParty ?romanoProdiBirthName
WHERE {
  ?michelePinto a dbo:Person ;
                foaf:name ""Michele Pinto""@en .
  ?michelePinto dbo:party ?michelePintoParty .

  ?romanoProdi a dbo:Politician, dbo:OfficeHolder ;
               foaf:name ""Romano Prodi""@en ;
               dbo:birthName ?romanoProdiBirthName .
}
```",6,8,7,3,2,3,3,71,2,1,0,0.6666666666666666,1.0,0.8
404,26,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandParent WHERE {
  # Step 1: Identify Prince George William of Hanover
  ?prince a dbo:Person ;
          rdfs:label ""Prince George William of Hanover""@en .
  
  # Step 2: Find his parent who is royalty
  ?parent dbo:child ?prince ;
          a dbo:Monarch ;  # Assuming Monarch as a class for royalty

  # Step 3: Identify the child of that parent who is also royalty
  ?royalChild dbo:parent ?parent ;
              a dbo:Monarch .

  # Step 4: Find the parent of that royal child
  ?grandParent dbo:child ?royalChild .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
767,57,test,Give me the entity in Baden-Württemberg and reference to the alter ego of Black Hood and alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInBW ?alterEgo ?almaMater ?administeredBy
WHERE {
  # Entity in Baden-Württemberg
  ?entityInBW dbo:locatedIn dbr:Baden-Württemberg .

  # Alter ego of Black Hood
  ?blackHood dbo:alterEgo ?alterEgo .
  FILTER (str(?blackHood) = ""Black_Hood"") .

  # Alma mater of George Kilbon Nash
  dbr:George_Kilbon_Nash dbo:almaMater ?almaMater .

  # Administration of the alma mater
  ?almaMater dbo:administrator ?administeredBy .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
994,68,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist
WHERE {
  # Fredrik Thordendal's band
  dbr:Fredrik_Thordendal dbo:bandMember ?meshuggah .
  
  # Meshuggah's associated artist
  ?meshuggah dbo:associatedBand ?artist1 .

  # Donald Maynard Dokken's band
  dbr:Donald_Maynard_Dokken dbo:bandMember ?dokken .
  
  # Dokken's associated artist
  ?dokken dbo:associatedBand ?artist2 .

  # Watchtower's associated artist
  dbr:Watchtower dbo:associatedBand ?artist3 .

  # Ensure all are organizations, groups, or bands
  ?meshuggah a dbo:MusicalGroup .
  ?dokken a dbo:MusicalGroup .
  ?artist1 a dbo:MusicalGroup .
  ?artist2 a dbo:MusicalGroup .
  ?artist3 a dbo:MusicalGroup .

  # Find common associated artist
  FILTER (?artist1 = ?artist2 || ?artist1 = ?artist3 || ?artist2 = ?artist3)
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
391,22,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?actor a dbo:Person ;
         dbo:nativePlace dbr:Compton,_California .
  
  ?movie rdf:type dbo:Film, dbo:Work, dbo:TelevisionShow ;
         dbo:starring ?actor, dbr:Roz_Ryan .

}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
232,46,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Find Sean Pertwee's claim to fame (film or military conflict)
  ?work dbo:actor dbr:Sean_Pertwee .
  
  # Identify Jon Pertwee's birth name
  dbr:Jon_Pertwee foaf:name ?birthName .

  # Find Jon Pertwee's child using his birth name
  ?child dbo:parent dbr:Jon_Pertwee ;
         foaf:name ?childName .
  
  FILTER(?birthName = ""Richard John Briers"") # Assuming we know Jon Pertwee's birth name is Richard John Briers

  # Find the actor who is both Sean Pertwee's co-actor and Jon Pertwee's child
  ?work dbo:actor ?actor .
  ?actor dbo:parent dbr:Jon_Pertwee .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
701,67,test,"Give me the parent of Meritamen and spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the child of Seti I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfMeritamen ?spouseOfRoyalFather WHERE {
  # Step 1: Find Meritamen's parent
  ?meritamen a dbo:Person ;
             rdfs:label ""Meritamen""@en .
  ?meritamen dbo:parent ?parentOfMeritamen .

  # Step 2: Identify the commander in Battle of Perire and their father
  ?commander a dbo:Person ;
             dbo:participatedIn dbr:Battle_of_Perire ;
             dbo:father ?fatherOfCommander .
  
  # Step 3: Ensure the father is royalty
  ?fatherOfCommander dbo:royaltyStatus ?royalty .

  # Step 4: Find spouse of this royal father
  ?fatherOfCommander dbo:spouse ?spouseOfRoyalFather .

  # Step 5: Trace lineage from Seti I to find parent of the child's child
  ?setiI a dbo:Person ;
         rdfs:label ""Seti I""@en .
  ?child1 dbo:parent ?setiI ;
          dbo:child ?grandChild .
  ?grandChild dbo:parent ?parentOfGrandChild .

  # Ensure all entities are distinct and connected
  FILTER(?meritamen != ?commander)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
659,42,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  # Rutger Jan Schimmelpenninck's military affiliation
  OPTIONAL { 
    dbr:Rutger_Jan_Schimmelpenninck dbo:militaryService ?schimmelpenninckMilitary .
    ?schimmelpenninckMilitary dbo:name ?militaryForce .
  }

  # Commander of the Battle of Leipzig
  OPTIONAL {
    dbr:Battle_of_Leipzig dbo:commander ?leipzigCommander .
    ?leipzigCommander dbo:militaryService ?leipzigMilitary .
    ?leipzigMilitary dbo:name ?militaryForce .
  }

  # Arthur Wellesley's military force
  OPTIONAL {
    dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:militaryService ?wellingtonMilitary .
    ?wellingtonMilitary dbo:name ?militaryForce .
  }
}
```",5,8,6,2,3,3,3,71,0,0,6,0,0.0,0
547,23,test,Give me the resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchildRestingPlace WHERE {
  # Step 1: Find William Haliburton's child
  ?child a dbo:Person ;
         dbo:parent ?williamHaliburton .
  
  FILTER(?williamHaliburton = dbp:William_Haliburton) .

  # Step 2: Find the grandchild of William Haliburton
  ?grandchild a dbo:Person ;
              dbo:parent ?child .

  # Step 3: Get the resting place of each grandchild
  OPTIONAL { ?grandchild dbo:restingPlace ?grandchildRestingPlace }
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
314,28,test,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of the award of Sergei Makovetsky and person deceased at the headquarter of House of Sombrerete.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderProfession ?event ?societalEvent ?awardRecipient ?deceasedPerson
WHERE {
  # Lisa Gavrić's profession as a commander in an event that is also a societal event
  ?lisaGavric dbo:profession ?commanderProfession .
  ?commanderProfession rdf:type dbo:Event .
  ?event dbo:societalEvent ?societalEvent .
  
  # Sergei Makovetsky's award and its recipient
  ?award dbr:Sergei_Makovetsky dbo:recipient ?awardRecipient .
  
  # Person deceased at the headquarters of House of Sombrerete
  ?deceasedPerson dbo:deathPlace dbr:House_of_Sombrerete .
  
  # Linking Lisa Gavrić to the award recipient and deceased person
  ?lisaGavric dbr:Lisa_Gavrić .
  OPTIONAL { ?awardRecipient dbr:Lisa_Gavrić . }
  OPTIONAL { ?deceasedPerson dbr:Lisa_Gavrić . }
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
184,35,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent1 ?parent2 WHERE {
  # Part 1: Parent of the child of Archduke Joseph Francis of Austria
  ?child dbo:child dbr:Archduke_Joseph_Francis_of_Austria .
  ?parent1 dbo:child ?child .

  # Part 2: Parent of a native of Budapest
  ?person dbo:nativePlace dbr:Budapest .
  ?parent2 dbo:child ?person .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
801,55,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?song dbo:writer dbr:Dr._Dre ;
        a dbo:Songs .
  
  ?artist dbo:musicalArtist true ;
          dbo:producer ?song ;
          rdfs:label ""Dr. Dre""@en .

  OPTIONAL { 
    ?game dbo:alterEgo dbr:The_Shadow ;
          dbo:professional ?artist .
  }
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
488,42,test,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceTokugawaIeyasu 
         ?administrationFatherGoMizunoo 
         ?birthPlaceCommanderBoshinWar

WHERE {
  # Death place of Tokugawa Ieyasu
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlaceTokugawaIeyasu .

  # Administration of the father of Emperor Go-Mizunoo
  dbr:Emperor_Go-Mizunoo dbo:father ?fatherGoMizunoo .
  ?fatherGoMizunoo dbo:office ?administrationFatherGoMizunoo .

  # Birth place of a commander in Boshin War (e.g., Saigō Takamori)
  dbr:Saigō_Takamori dbo:birthPlace ?birthPlaceCommanderBoshinWar .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
528,46,test,"Give me the war of the commander in Battle of La Rinconada de Ate and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?war ?militaryForce ?societalEventInChile WHERE {
  # Find the Battle of La Rinconada de Ate and its commander
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of La Rinconada de Ate""@en .
  
  OPTIONAL { ?battle dbo:commander ?commander . }
  
  # Determine which war this battle was part of
  ?battle dbo:partOfWar ?war .

  # Identify the military force involved in this battle
  ?battle dbo:militaryForce ?militaryForce .

  # Find a societal event related to this military force that occurred in Chile
  OPTIONAL {
    ?event dbo:relatedMilitaryForce ?militaryForce ;
           dbo:location dbr:Chile .
    ?event rdfs:label ?societalEventInChile .
  }
}
```",5,6,6,3,2,3,3,71,0,0,14,0,0.0,0
701,52,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II and parent of the child of Ramesses II.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parent
WHERE {
  # Find Amun-her-khepeshef's spouse
  ?amunherkhepeshef dbo:spouse ?spouse1 .
  
  # Find the child of Amun-her-khepeshef's spouse
  ?spouse1 dbo:child ?child1 .

  # Find Ramesses II and his spouse
  ?ramessesII dbo:spouse ?spouse2 .

  # Find the child of Ramesses II
  ?ramessesII dbo:child ?child2 .

  # Ensure both children are from the same person (i.e., spouse2 is also spouse1)
  FILTER (?spouse1 = ?spouse2)

  # Find the parent of these children
  ?child1 dbo:parent ?parent .
  ?child2 dbo:parent ?parent .
}
```",6,6,7,3,3,3,3,71,0,5864,1,0.0,0.0,0
427,54,test,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of Italian People's Party (1994) and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX politics: <http://dbpedia.org/ontology/politics/>

SELECT DISTINCT ?alumnus ?father ?fathersParty ?italianPeopleParty ?prodiParty
WHERE {
  # Find an alumnus of MIT
  ?alumnus dbo:alumnusOf db:Massachusetts_Institute_of_Technology .
  
  # Determine the father and his party affiliation
  OPTIONAL { 
    ?alumnus foaf:parent ?father .
    ?father politics:partyAffiliation ?fathersParty .
  }
  
  # Reference to Italian People's Party (1994)
  db:Italian_People%27s_Party_(1994) dbo:name ?italianPeopleParty .

  # Find Romano Prodi’s party affiliation
  db:Romano_Prodi politics:partyAffiliation ?prodiParty .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
963,16,test,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?administration
WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Serbia .
  
  ?party dbo:capital dbr:Sremski_Karlovci .

  OPTIONAL { 
    ?party dbo:headOfGovernment ?administration .
  }
}
```",4,6,5,2,2,3,2,20,0,0,84,0,0.0,0
435,27,test,Give me the territory administered from Reykjavík and work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?territory ?work ?region WHERE {
  # Territory administered from Reykjavík
  OPTIONAL {
    dbr:Reykjavík dbo:capital ?country .
    ?country dbo:administrativeTerritory ?territory .
  }

  # Work of the author of ""Iceland""
  OPTIONAL {
    dbr:Iceland dbo:author ?author .
    ?work dbo:author ?author .
  }
  
  # Region of the time zone in Bombali Shebora Chiefdom
  OPTIONAL {
    dbr:Bombali_Shebora_Chowchiefdom dbo:timeZone ?timezone .
    ?timezone dbo:region ?region .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
184,48,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent1 ?parent2 WHERE {
  # Step 1: Find a child of Archduke Joseph Francis of Austria
  ?child dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Step 2: Find the parent of that child
  ?child dbo:parent ?parent1 .

  # Step 3: Identify a settlement at elevation 96.0 meters
  ?settlement a dbo:Settlement ;
              dbo:elevation ""96.0""^^xsd:float .

  # Step 4: Find the native of that settlement
  ?native dbo:nativePlace ?settlement .
  
  # Step 5: Determine the parent of that native
  ?native dbo:parent ?parent2 .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
659,47,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?event ?unit
WHERE {
  # Arthur Wellesley, 1st Duke of Wellington as a commander in military conflicts
  ?commander rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
  ?commander dbo:commanderOf ?event .

  # Event is a military conflict
  ?event rdf:type dbo:MilitaryConflict .

  # Polish Horse as a military unit
  ?unit rdfs:label ""Polish Horse""@en .
  ?unit dbo:participatedIn ?event .
}
```",5,9,6,3,2,3,3,71,0,0,71,0,0.0,0
534,16,test,"Give me the headquarter of the owner of RDS Arena and birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
# Step 1: Find the owner of RDS Arena
SELECT ?owner WHERE {
    ?arena dbo:location dbr:Ireland .
    ?arena rdfs:label ""RDS Arena""@en .
    ?arena dbo:ownedBy ?owner .
}

# Step 2: Get the headquarters of the owner
SELECT DISTINCT ?headquarters WHERE {
    # Assuming ?owner is obtained from the previous query
    BIND(<http://dbpedia.org/resource/Some_Owner> AS ?owner) 
    OPTIONAL { ?owner dbo:headquarters ?headquarters . }
}

# Step 3: Find Desmond FitzGerald's child who is a politician and an office holder
SELECT DISTINCT ?child WHERE {
    ?desmond dbo:birthName ""Desmond FitzGerald""@en .
    ?desmond dbo:child ?child .
    ?child rdf:type dbo:Politician ;
           dbo:officeHolder true .
}

# Step 4: Get the birthplace of the child
SELECT DISTINCT ?birthPlace WHERE {
    # Assuming ?child is obtained from the previous query
    BIND(<http://dbpedia.org/resource/Some_Child> AS ?child) 
    OPTIONAL { ?child dbo:birthPlace ?birthPlace . }
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
754,16,test,Give me the parent of the child of Ram Khamhaeng and parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?grandParentOfChild ?greatGrandparentOfMayHninHtapi
WHERE {
  # Step 1: Find a child of Ram Khamhaeng
  ?child dbo:parent dbr:Ram_Khamhaeng .
  
  # Step 2: Find the parent of that child (i.e., grandchild of Ram Khamhaeng)
  ?grandParentOfChild dbo:parent ?child .

  # Step 3: Find a parent of May Hnin Htapi
  ?mayHninHtapiParent dbo:child dbr:May_Hnin_Htapi .
  
  # Step 4: Find the grandparent (i.e., great-grandparent) of May Hnin Htapi
  ?greatGrandparentOfMayHninHtapi dbo:parent ?mayHninHtapiParent .
}
```",4,4,5,2,2,3,2,20,0,3,1,0.0,0.0,0
92,64,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Step 1: Identify Joseph Michael's birth name and band membership
  ?person a dbo:Person ;
          rdfs:label ""Joseph Michael""@en ;
          dbo:birthName ?birthName .
  
  # Step 2: Find Jim Sheppard's associated musical artist
  ?sheppard a dbo:Person ;
            rdfs:label ""Jim Sheppard""@en ;
            dbo:musicalArtist ?artist .

  # Step 3: Determine common band membership
  ?person dbo:bandMember ?band .
  ?sheppard dbo:bandMember ?band .

  # Ensure the person is an artist and link to Nevermore (2006 film)
  ?band dbo:reference dbr:Nevermore_(2006_film) ;
        a dbo:Band ;
        dbo:artist ?person .

  FILTER(LANG(?birthName) = ""en"")
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,30,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?actor dbo:nationality dbr:United_States ;
         dbo:birthPlace dbr:Compton,_California .
  
  ?movie dbo:starring ?actor ;
         rdf:type dbo:Film ;
         dbo:workExample ?tvShow .
  
  ?project dbo:starring ?actor, dbr:Roz_Ryan .

  ?departed dbo:starring ?actor .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
92,59,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?band WHERE {
  # Find actor of ""Return to Nuke 'Em High Volume 1""
  ?film a dbo:Film ;
        dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  
  ?film dbo:starring ?actor .

  # Ensure the actor is also a music artist
  ?actor a dbo:MusicArtist .

  # Find band membership of this actor
  ?bandMembership dbo:artist ?actor ;
                  dbo:band dbr:Nevermore_(band) .

  # Link to ""Nevermore"" (2006 film)
  OPTIONAL {
    ?film2 a dbo:Film ;
           dbo:title ""Nevermore""@en .
    
    ?film2 dbo:starring ?actor .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
801,63,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of the true self of The Shadow and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v6 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?song dbo:title ""40 Dayz & 40 Nightz"" .
  ?song dbo:performer dbr:50_Cent .
  ?song dbo:producer ?producer .
  ?producer a dbo:MusicalArtist ;
            a dbo:Artist ;
            rdfs:label ?artistLabel .
  FILTER (CONTAINS(LCASE(?artistLabel), ""dr. dre"") || CONTAINS(LCASE(?artistLabel), ""the shadow""))
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
783,17,test,"Give me the associated musical artist of Appietus and band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Query for Appietus's associated musical artists
SELECT ?artist WHERE {
  ?appietus dbo:associatedMusicalArtist ?artist .
  FILTER (str(?appietus) = ""Appietus"")
}

UNION

# Query for a band member who is both an artist and a musical artist, born as Ebony Reigns
SELECT ?bandMember WHERE {
  ?person dbo:birthName ?ebonyReigns ;
          rdf:type dbo:Artist , dbo:MusicalArtist .
  FILTER (str(?ebonyReigns) = ""Ebony Reigns"")
  ?bandMember dbo:member ?person .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
9,46,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mayorAlmaMater WHERE {
  # Find the mayor of an organization in Belfast
  ?mayor a dbo:Mayor ;
         dbo:location dbr:Belfast .
  
  # Get the alma mater of the mayor
  ?mayor dbo:almaMater ?mayorAlmaMater .

  # Find awardees of the Royal Medal
  ?awardee dbo:award dbr:Royal_Medal ;
           dbo:almaMater ?awardeeAlmaMater .
  
  # Check if the alma mater matches
  FILTER(?mayorAlmaMater = ?awardeeAlmaMater)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
9,50,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Step 1: Find the nickname of Queen's University Belfast
SELECT ?nickname WHERE {
    dbpedia:Queen's_University_Belfast dbo:nickname ?nickname .
}

# Step 2: Find awardees of Royal Medals and their alma maters
SELECT DISTINCT ?awardee ?almaMater WHERE {
    ?awardee dbo:awardReceived dbr:Royal_Medal ;
            dbo:almaMater ?almaMater .
}

# Step 3: Match the alma mater with Queen's University Belfast nickname
SELECT DISTINCT ?nickname WHERE {
    dbpedia:Queen's_University_Belfast dbo:nickname ?nickname .
    ?awardee dbo:awardReceived dbr:Royal_Medal ;
            dbo:almaMater ?almaMater .
    FILTER(?almaMater = <http://dbpedia.org/resource/Queen's_University_Belfast>)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
547,18,test,Give me the resting place of Alan Cunningham and resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace
WHERE {
  { 
    ?person a dbo:Person ;
            foaf:name ""Alan Cunningham""@en .
    OPTIONAL { ?person dbo:placeOfBurial ?restingPlace . }
  } UNION {
    {
      ?person a dbo:Person ;
              foaf:name ""James Burton (Egyptologist)""@en .
      OPTIONAL { ?person dbo:placeOfBurial ?restingPlace . }
    } UNION {
      {
        ?person a dbo:Person ;
                foaf:name ""Simon Cadell""@en .
        OPTIONAL { ?person dbo:placeOfBurial ?restingPlace . }
      }
    }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
617,49,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild WHERE {
  # Seleucus II Callinicus
  dbr:Seleucus_II_Callinicus a dbo:Person ;
    dbo:child ?child .

  # Child of Seleucus who is royalty and has their own children
  ?child a dbo:RoyalFamilyMember ;
         dbo:hasTitle ?royaltyTitle ;
         dbo:child ?grandChild .

  # Commander in the Battle of Panium
  dbr:Battle_of_Panium dbo:commander ?commander .
  
  # Child of the commander
  ?commander dbo:child ?commandersChild .

  # Link back to find parent of commandersChild, which should be grandChild from above
  ?grandChild dbo:parent ?parentOfChild .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
801,58,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of 50 Cent and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?song ?producer ?associatedArtist WHERE {
    # Identify the album by 50 Cent
    dbr:What_U_See_Is_What_U_Get a dbo:MusicalWork ;
        dbo:musicalArtist dbr:50_Cent .

    # Find songs in this album that are both Song and MusicalWork
    ?song a dbo:Song, dbo:MusicalWork ;
        dbo:musicalWork dbr:What_U_See_Is_What_U_Get .

    # Identify producers of these songs
    OPTIONAL { ?song dbo:producer ?producer . }

    # Find associated musical artists linked to 50 Cent on this album
    OPTIONAL {
        ?associatedArtist a dbo:MusicalArtist ;
            dbo:musicalWork dbr:What_U_See_Is_What_U_Get .
        FILTER(?associatedArtist != dbr:50_Cent)
    }
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
92,63,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v6 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for band member of the 2006 film ""Nevermore""
SELECT ?bandMember WHERE {
    ?film a dbo:Film ;
          dbo:title ""Nevermore"" ;
          dbo:releaseDate ?date .
    FILTER(YEAR(?date) = 2006)
    ?film dbo:starring|dbo:director ?person .
    ?person dbo:occupation dbr:Musician .
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(STR(?person), "" "", ""_""))) AS ?bandMember)
}

UNION

# Query for the band of Joseph Michael Furney
SELECT ?band WHERE {
    ?person dbo:birthName ""Joseph Michael Furney"" ;
            a dbo:Person .
    ?person dbo:bandMemberOf ?band .
}

UNION

# Query for musical artist associated with Jim Sheppard
SELECT ?associatedArtist WHERE {
    ?person dbo:birthName ""Jim Sheppard"" ;
            a dbo:Person ;
            dbo:occupation dbr:Musician .
    ?person dbo:associatedBand|dbo:bandMemberOf ?band .
    ?band dbo:member ?associatedArtist .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
492,52,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v2 <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?decedentAlgiers ?decedentAuthorWork
WHERE {
  # Frédéric-Georges Herr's involvement in a military conflict
  dbr:Frédéric-Georges_Herr dbo:militaryConflict ?conflict .
  
  # Commander of the conflict
  ?conflict dbo:commander ?commander .

  # Person decedent at Algiers related to this context
  ?decedentAlgiers dbo:deathPlace dbr:Algiers ;
                  dbo:relatedTo ?conflict .

  # Author associated with ""French Algeria""
  ?author dbo:title dbr:French_Algeria .
  
  # Person connected to the author's work who also died
  ?work dbo:creator ?author ;
        dbo:subject ?decedentAuthorWork .
  ?decedentAuthorWork dbo:deathPlace ?place .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
626,17,test,Give me the awardee of the award of the military force of Battle of Borodino and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . },"```sparql
# Query for the awardee of the military force in the Battle of Borodino
SELECT ?awardee WHERE {
  ?battle dbo:wikiPageRedirects db:Borodino_Battle.
  ?award dbo:recipient ?awardee;
         dbo:relatedEvent ?battle.
}

UNION

# Query for the commander in the Battle of Leipzig
SELECT ?commander WHERE {
  ?battle dbo:wikiPageRedirects db:Battle_of_Leipzig.
  ?commander dbo:commanded ?battle.
}
```",4,4,5,3,2,3,2,20,0,0,9,0,0.0,0
701,49,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Nefertari.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify the commander in Battle of Perire
  ?commander dbo:battle [dbo:name ""Battle of Perire""] .
  
  # Step 2: Find the father of the commander
  ?father dbo:child ?commander .
  
  # Step 3: Ensure the father is royalty
  ?father a dbo:RoyalFamilyMember .

  # Step 4: Identify the spouse of this royal father
  ?spouse dbo:spouse ?father .

  # Step 5: Link to Nefertari's child
  ?child dbp:mother ""Nefertari"" .
  ?spouse dbo:parent ?child .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
994,60,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?furtherAssociatedArtist 
WHERE {
  # Step 1: Identify Don Dokken and his band members
  dbr:Don_Dokken a dbo:MusicalArtist .
  
  ?donDokkenBandMember dbo:member ?person ;
                      dbo:musicalArtist dbr:Don_Dokken .

  # Step 2: Find Watchtower and its associated musical artists
  dbr:Watchtower a dbo:MusicalArtist .
  
  ?watchtowerAssociatedArtist dbo:associatedMusicalArtist dbr:Watchtower .

  # Step 3: Find the associated musical artist of those associated with Watchtower
  ?furtherAssociatedArtist dbo:associatedMusicalArtist ?watchtowerAssociatedArtist .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,28,test,Give me the spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice and professional in Actress.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
  { 
    dbp:name ""Ted Martin McGinley""@en .
    ?person dbo:birthName ""Ted Martin McGinley"" .
    ?person dbo:spouse ?spouse .
  }
  UNION
  {
    dbp:name ""Georgeanne Marie Rice""@en .
    ?person dbo:birthName ""Georgeanne Marie Rice"" .
    ?person dbo:spouse ?spouse .
  }
}
GROUP BY ?spouse
HAVING (COUNT(DISTINCT ?person) > 1)
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,52,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?song WHERE {
    # Lamont Cranston as The Shadow's alter ego
    dbr:Lamont_Cranston dbo:alterEgoOf dbr:The_Shadow .
    
    # Chris Taylor associated with Grizzly Bear
    dbr:Grizzly_Bear dbo:musicalArtist dbr:Chris_Taylor .

    # Dr. Dre as a producer of 50 Cent's work
    dbr:Dr._Dre dbo:producerOfWork ?work .
    ?work dbo:artist dbr:50_Cent .

    # Find a song that connects these elements
    OPTIONAL { ?song dbo:producer dbr:Dr._Dre . }
    OPTIONAL { ?song dbo:musicalArtist dbr:Grizzly_Bear . }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
492,54,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at Algiers.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedent WHERE {
  # Joseph C. Satterthwaite's role and decedents
  OPTIONAL { 
    dbr:Joseph_C._Satterthwaite dbo:positionHeld dbr:US_Assistant_Secretary_of_State_for_African_Affairs .
    ?decedent dbo:deceased dbr:Joseph_C._Satterthwaite .
    BIND(?decedent AS ?personDecedent)
  }

  # Commander of the Battle of Verdun and related conflicts/events
  OPTIONAL {
    dbr:Battle_of_Verdun dbo:commander ?verdunCommander .
    ?conflict dbo:participatedIn ?verdunCommander .
    ?event dbo:relatedEvent ?verdunCommander .
    ?decedent dbo:deceased ?verdunCommander .
    BIND(?decedent AS ?personDecedent)
  }

  # Person decedent at Algiers
  OPTIONAL {
    ?decedent dbo:placeOfDeath dbr:Algiers .
    BIND(?decedent AS ?personDecedent)
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
767,61,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterNash ?almaMaterAlterEgo WHERE {
  # Query for George Kilbon Nash's alma mater
  OPTIONAL {
    ?nash a dbo:Person ;
          foaf:name ""George Kilbon Nash"" .
    ?nash dbo:almaMater ?almaMaterNash .
  }

  # Assuming we know the alter ego of Matthew Burland is a fictional character, e.g., ""CharacterName""
  OPTIONAL {
    ?alterEgo a dbo:FictionalCharacter ;
              foaf:name ""CharacterName"" .
    ?alterEgo dbo:almaMater ?almaMaterAlterEgo .
  }
}
```

Note: Replace `""CharacterName""` with the actual name of Matthew Burland's alter ego if known.",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
365,8,test,Give me the band of Phil Alvin and reference to the real name of The Blasters.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  ?philAlvin a dbo:Person ;
             foaf:name ""Phil Alvin"" .
  ?philAlvin dbo:musicalArtist ?band .
}

UNION

SELECT DISTINCT ?realName WHERE {
  ?blasters a dbo:Band ;
            foaf:name ""The Blasters"" .
  OPTIONAL { ?blasters dbo:alias ?realName }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
10,24,test,"Give me the professional in the birth name of Sharon Kao and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthName ?bandMemberArtist WHERE {
  # Part 1: Get Sharon Kao's birth name
  dbr:Sharon_Kao dbo:birthName ?birthName .

  # Part 2: Find band members of Luke Francis Vibert who are artists
  dbr:Luke_Francis_Vibert dbo:bandMember ?bandMember .
  ?bandMember a dbo:Artist .
  BIND(?bandMember AS ?bandMemberArtist)
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
617,63,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Step 1: Find successor of Antiochus II Theos
  dbr:Antiochus_II_Theos dbo:successor ?successor .
  
  # Step 2: Find a child of the successor who is royalty
  ?successor dbo:child ?child .
  ?child rdf:type dbo:Monarch .

  # Step 3: Find spouse of this child
  ?child dbo:spouse ?spouse .

  # Step 4: Find parent of Antiochus (son of Antiochus III the Great)
  dbr:Antiochus_III_the_Great dbo:child ?antiochus .
  ?antiochus rdf:type dbo:Monarch .
  ?antiochus dbo:parent ?parent .

  # Find child of the spouse
  ?spouse dbo:child ?childOfChild .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
963,18,test,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton and administration of the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Step 1: Find the time zone of Herzegovina-Neretva Canton
  dbr:Herzegovina-Neretva_Canton dbo:timeZone ?timezone .

  # Step 2: Identify countries using this time zone
  ?country dbo:timeZone ?timezone .
  
  # Step 3: Find the ruling party in Sremski Karlovci (assuming we have a way to identify it)
  # This part is hypothetical as DBpedia might not directly provide current political data.
  # We assume there's a property or resource that links Sremski Karlovci to its ruling party
  dbr:Sremski_Karlovci dbo:rulingParty ?rulingParty .

  # Step 4: Find countries where this ruling party is in power
  ?country dbo:government ?government .
  ?government dbo:partyLeader ?leader .
  ?leader dbo:politicalAffiliation ?rulingParty .
  
  FILTER(?country != dbr:Sremski_Karlovci) # Ensure we don't return Sremski Karlovci itself
}
```",5,7,6,3,2,3,2,20,0,0,84,0,0.0,0
528,61,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
# Query to find Narciso Campero's birth name and any associated military force
SELECT ?birthName ?force WHERE {
  ?person a dbo:Person ;
          foaf:name ""Narciso Campero""@en ;
          dbo:birthName ?birthName .
  OPTIONAL { ?person dbo:militaryForce ?force . }
  FILTER (lang(?birthName) = 'es')
}
```

```sparql
# Query to find the war commanded by Narciso Campero and any events around January 9th
SELECT ?war ?eventDate WHERE {
  ?person a dbo:Person ;
          foaf:name ""Narciso Campero""@en .
  OPTIONAL { ?person dbo:militaryCommanderOf ?war . }
  OPTIONAL { ?event dbo:date ?eventDate ;
              dbo:commandedBy ?person ;
              FILTER (STRSTARTS(STR(?eventDate), ""-01-09"")) }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
404,59,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfChild
WHERE {
  # Step 1: Find Prince George William of Hanover's spouse
  ?princeGeorge a dbo:Person ;
               rdfs:label ""Prince George William of Hanover""@en .
  ?spouse dbo:spouse ?princeGeorge .

  # Step 2: Find the spouse's parent who is royalty
  ?parentOfSpouse dbo:parent ?spouse ;
                  a dbo:Monarch .

  # Step 3: Identify Princess Victoria Louise of Prussia by birth name
  ?victoriaLouise a dbo:Person ;
                  rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?personBornAsVictoria dbp:birthName ""Victoria Louise"" ;
                        a dbo:Monarch .

  # Step 4: Find the parent of this person who is royalty
  ?parentOfPersonBorn dbo:parent ?personBornAsVictoria ;
                      a dbo:Monarch .

  # Step 5: Find the child of this royal parent
  ?childOfParent dbo:child ?parentOfPersonBorn .
  
  # Final step: Get the parent of this child who is royalty
  ?parentOfChild dbo:parent ?childOfParent ;
                 a dbo:Monarch .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
427,38,test,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?andreottiFatherParty ?prodiParty
WHERE {
  # Find Lamberto Andreotti's father and his party affiliation
  dbr:Lamberto_Andreotti dbo:father ?father .
  ?father dbo:partyAffiliation ?andreottiFatherParty .

  # Find Romano Prodi's party affiliation
  dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
}
```",4,6,5,2,2,3,3,71,0,0,3,0,0.0,0
645,16,test,"Give me the entity in the residence, that is a country, of James Wilkes Maurice and alma mater of the child of Richard Pankhurst.",SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?entity
WHERE {
  # Find James Wilkes Maurice's residence country
  ?michaelResidence dbo:residence ?jamesWilkesMaurice .
  ?jamesWilkesMaurice a dbo:Place ;
                     rdfs:label ""James Wilkes Maurice""@en .

  # Find Richard Pankhurst's child and their alma mater
  ?richardPankhurst foaf:child ?child .
  ?child dbo:almaMater ?almaMater .
  
  # Ensure the alma mater is a country
  ?almaMater a dbo:Country ;
             rdfs:label ?entityLabel .

  # Match the residence and alma mater as the same entity
  FILTER (str(?jamesWilkesMaurice) = str(?almaMater))
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
435,22,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personLabel ?territoryLabel WHERE {
  ?person a dbo:Person ;
          dbo:nationality dbr:Iceland ;
          dbo:countryAdministered ?territory .
  
  ?territory a dbo:City, dbo:Settlement ;
             rdfs:label ?territoryLabel .

  FILTER(CONTAINS(LCASE(?territoryLabel), ""bombali shebora chiefdom""))

  OPTIONAL { ?person rdfs:label ?personLabel }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
314,24,test,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of the award of Sergei Makovetsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?event ?societalEvent ?award
WHERE {
  # Lisa Gavrić's profession and events
  dbr:Lisa_Gavrić dbo:profession ?profession .
  OPTIONAL { dbr:Lisa_Gavrić dbo:event ?event . }
  OPTIONAL { ?event a dbo:SocietalEvent . }

  # Sergei Makovetsky's award
  dbr:Sergei_Makovetsky dbo:award ?award .

  # Linking the award to Lisa Gavrić if applicable
  OPTIONAL {
    ?award dbo:recipient dbr:Lisa_Gavrić .
  }
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
488,71,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?deathPlace ?birthPlace WHERE {
  # Tokugawa Masako's spouse and their father who is royalty
  ?spouse dbo:spouse dbr:Tokugawa_Masako .
  ?father dbo:child ?spouse .
  ?father rdf:type dbo:Royalty .
  ?administration dbo:head ?father .

  UNION

  # Matsudaira Tadamasa's paternal grandfather who was a politician and office holder
  ?maternalFather dbo:child dbr:Matsudaira_Tadamasa .
  ?grandfather dbo:child ?maternalFather .
  ?grandfather rdf:type dbo:Politician ;
               dbo:officeHolder true .
  ?deathPlace dbo:deathPlace ?grandfather .

  UNION

  # Saitō Hajime's birthplace related to the war he commanded
  ?war dbo:commander dbr:Saitō_Hajime ;
       rdf:type dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .
  ?birthPlace dbo:birthPlace dbr:Saitō_Hajime .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
485,22,test,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:award dbr:Eric_Gregory_Award .
  ?person rdf:type dbo:Writer ;
          rdf:type dbo:Poet .
  ?person dbo:birthPlace ?birthPlace .

  # Filter for countries in the Western European Time zone
  ?country dbo:timeZone dbr:Western_European_Time .
  ?birthPlace dbo:locatedIn ?country .
}
```",4,7,5,2,2,2,3,28,0,0,5,0,0.0,0
617,56,test,"Give me the parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of Seleucus II Callinicus and spouse of Laodice IV.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild ?spouseOfLaodiceIV WHERE {
  # Step 1: Identify the commander in Battle of Panium
  ?battle dcterms:subject dbr:Battle_of_Panium .
  ?battle dbo:commander ?commander .

  # Step 2: Find the child of the commander and then that child's parent
  ?child dbo:parent ?commander ;
         a dbo:Person .
  ?parentOfChild dbo:child ?child .

  # Step 3: Identify Seleucus II Callinicus' children
  dbr:Seleucus_II_Callinicus dbo:child ?childOfSeleucus .

  # Step 4: Determine the royalty among the grandchildren
  ?grandchild dbo:parent ?childOfSeleucus ;
              a dbo:Royalty .

  # Step 5: Find the spouse of Laodice IV
  dbr:Laodice_IV dbo:spouse ?spouseOfLaodiceIV .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,20,test,"Give me the birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils and landmark at elevation of the award of the commander in Battle of Chishui River.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?landmarkElevation WHERE {
  # Find a member of the associated band/group of The Boils
  ?band dbo:associatedBand dbr:The_Boils .
  ?member dbo:member ?band .
  
  # Get the birth place of this member
  ?member dbo:birthPlace ?birthPlace .

  # Find a landmark related to an award for the Battle of Chishui River
  ?award dbo:awardedFor dbr:Battle_of_Chishui_River .
  ?landmark dbo:elevation ?elevation ;
            dbo:relatedTo ?award .
  
  BIND(?elevation AS ?landmarkElevation)
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
959,69,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry ?almaMaterName WHERE {
    # Step 1: Identify Yōichi Masuzoe's native place (country)
    dbr:Yōichi_Masuzoe dbo:nativePlace ?residence .
    
    # Step 2: Find the country of residence
    ?residence a dbo:Country ;
              rdfs:label ?nativeCountry .

    # Step 3: Identify the manager of Kashima Antlers in 1998
    ?manager dbo:birthDate ?birthDate ;
             dbo:managerOfTeam dbr:Kashima_Antlers_1998_season .
    
    FILTER (YEAR(?birthDate) = 1958)
    
    # Step 4: Find the alma mater of this manager
    ?manager dbo:almaMater ?almaMater .
    
    # Ensure the alma mater is a Japanese university and organization
    ?almaMater a dbo:University ;
               dbo:country dbr:Japan ;
               rdfs:label ?almaMaterName .

}
```",8,14,9,3,3,3,3,71,0,0,3,0,0.0,0
251,28,test,"Give me the death place of the author of The Twelve Abbots of Challant and administration of the ruling party, that is a political party and an organisation, in Sicily and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlace ?rulingParty ?warLocation
WHERE {
  # Death place of Louis François Félix Musnier
  { 
    ?author a dbo:Writer ;
            foaf:name ""Louis François Félix Musnier"" .
    ?author dbo:deathPlace ?deathPlace .
  }
  
  UNION
  
  # Ruling party in Sicily
  { 
    ?region dbp:name ""Sicily""@en ;
            dbp:governingParty ?party .
    ?party a dbo:PoliticalOrganization ;
           dbo:administration ?rulingParty .
  }
  
  UNION
  
  # War involving Louis François Félix Musnier
  {
    ?author a dbo:Writer ;
            foaf:name ""Louis François Félix Musnier"" .
    ?war dbo:participatedIn ?author ;
         dbo:location ?warLocation .
  }
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
747,65,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on the birth date of Pavlo Khudzik and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v4 . }","```sparql
# Part 1: Band of Tracey Elizabeth McSween
SELECT ?band WHERE {
  ?person rdfs:label ""Tracey Elizabeth McSween""@en .
  ?person dbo:band ?band .
}

UNION

# Part 2: Person born on Pavlo Khudzik's birth date
SELECT DISTINCT ?person WHERE {
  ?pavlo rdfs:label ""Pavlo Khudzik""@en .
  ?pavlo dbo:birthDate ?birthdate .

  ?otherPerson a dbo:Person ;
               dbo:birthDate ?birthdate ;
               FILTER(?otherPerson != ?pavlo) .
}

UNION

# Part 3: Band of the song written by Amba Shepherd
SELECT DISTINCT ?band WHERE {
  ?song dbo:lyricsBy ?writer .
  ?writer rdfs:label ""Amba Shepherd""@en .
  ?song dbo:band ?band .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
294,20,test,"Give me the entity in Nashville, Tennessee and resting place of the architect of P. D. Houston Jr. House and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?architectRestingPlace ?lukeLeaRestingPlace WHERE {
  # Find the architect of P. D. Houston Jr. House and their resting place
  ?house dbo:architect ?architect .
  FILTER(STRSTARTS(STR(?house), ""http://dbpedia.org/resource/P._D._Houston_Jr._House""))
  
  OPTIONAL { ?architect dbo:deathPlace ?architectRestingPlace . }
  FILTER(CONTAINS(LCASE(STR(?architectRestingPlace)), ""nashville, tennessee""))

  # Find Luke Lea and his resting place
  ?lukeLea a dbr:Luke_Lea_(American_politician,_born_1879) .
  
  OPTIONAL { ?lukeLea dbo:deathPlace ?lukeLeaRestingPlace . }
  FILTER(CONTAINS(LCASE(STR(?lukeLeaRestingPlace)), ""nashville, tennessee""))
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
339,20,test,Give me the father of the child of the parent of Princess Olga of Greece and Denmark and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?fatherOfOlga ?childOfChildOfPredecessor WHERE {
  # Princess Olga of Greece and Denmark's father
  ?olga dbo:parent ?fatherOfOlga .
  ?olga dbp:name ""Princess Olga of Greece and Denmark""@en .

  # Frederick VIII's predecessor (Christian IX)
  ?frederickVIII dbo:predecessor ?predecessor .
  ?frederickVIII dbp:name ""Frederick VIII of Denmark""@en .
  
  # Child of the child of Christian IX
  ?child1 dbo:parent ?predecessor .
  ?child2 dbo:parent ?child1 .

  # Find the father of the child of the child of Christian IX
  ?child2 dbo:father ?fatherOfChildOfChildOfPredecessor .

  # The question asks for the father of this latter entity
  BIND(?fatherOfOlga AS ?result)
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
142,8,test,Give me the entity in Japan and birthplace of the actor of Papa wa Newscaster.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?birthPlace WHERE {
  # Find the main actor of ""Papa wa Newscaster""
  ?show dbo:title ""Papa wa Newscaster""@ja .
  ?show dbo:castMember ?actor .

  # Ensure the actor is a person
  ?actor rdf:type dbo:Person .

  # Get the birthplace of the actor
  ?actor dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
820,18,test,Give me the child of the parent of Jason Schwartzman and professional in the award of the author of Understanding Comics.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v1 . ?result <http://dbpedia.org/property/father> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Find Jason Schwartzman's parent
  dbr:Jason_Schwartzman dbo:parent ?parent .

  # Find the child of this parent who is a professional in an award related to Scott McCloud
  ?parent dbo:child ?child .
  
  # Identify awards associated with Scott McCloud or ""Understanding Comics""
  OPTIONAL { 
    ?award dbo:recipient ?recipient .
    ?recipient rdfs:label ?recipientLabel .
    FILTER(CONTAINS(LCASE(?recipientLabel), ""scott mccloud"") || CONTAINS(LCASE(?recipientLabel), ""understanding comics""))
  }
  
  # Ensure the child is involved in such an award
  OPTIONAL {
    ?child dbo:award ?award .
  }

  FILTER EXISTS { ?child dbo:award ?award }
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
10,23,test,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and professional in the birth name of Sharon Kao.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?musicalArtist WHERE {
  ?sharonKao a dbo:Person ;
             dbp:name ""Sharon Kao"" .
  ?sharonKao dbo:birthName ?birthName .

  ?mattColton a dbo:Person ;
              dbp:name ""Matt Colton"" .
  ?mattColton dbo:musicalArtist ?musicalArtist .

  FILTER(?birthName = ?sharonKaoBirthName)
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
391,48,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Step 1: Find the nickname for Jackson, Tennessee
  ?jackson a dbo:City ;
           rdfs:label ""Jackson""@en .
  
  ?nickname dbo:nickNameOf ?jackson ;
            rdfs:label ?nickLabel .

  FILTER regex(?nickLabel, ""nickname of Jackson"", ""i"")

  # Step 2: Find the actor associated with this nickname
  ?actor a dbo:Person ;
         dbo:nickName ?nickname ;
         dbo:spouseOrPartner dbr:Roz_Ryan ;
         dbo:film ?movie .

  ?movie a dbo:Film ;
         dbo:starring ?actor .
  
  # Step 3: Ensure the movie is also a work and television show
  ?work a dbo:Work ;
        dbo:basedOn ?movie .

  ?tvShow a dbo:TelevisionSeries ;
          dbo:basedOn ?movie .

  # Step 4: Get the native place of this actor
  ?actor dbo:birthPlace ?native .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
9,69,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?institution ?nickname WHERE {
  ?institution a dbo:EducationalInstitution ;
               dbo:location dbr:Northern_Ireland ;
               rdfs:label ?name .
  
  OPTIONAL { ?institution dbo:nickname ?nickname . }
  
  ?mayor dbo:almaMater ?institution ;
         dbo:position dbr:Belfast_Mayorship .

  ?awardee dbo:almaMater ?institution ;
           dbo:award dbr:Royal_Medal .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
232,51,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . },"```sparql
# Step 1: Find Sean Pertwee's claims to fame (films or military conflicts)
SELECT ?filmOrConflict WHERE {
    wd:Q123456 dbo:claimToFame ?filmOrConflict .
    FILTER (
        (wdt:P31/?filmOrConflict wdt:P279* wd:Q11424) ||  # Check if it is a film
        (wdt:P31/?filmOrConflict wdt:P279* wd:Q13442814) # Check if it is a military conflict
    )
}

# Step 2: Find French politicians associated with these claims to fame
SELECT ?politician WHERE {
    ?filmOrConflict dbo:actor wd:Q123456 .
    ?politician dbo:claimToFame ?filmOrConflict ;
                wdt:P31 wd:Q82955 ; # Person
                wdt:P27 wd:Q142 .   # France
}

# Step 3: Determine their residences that are settlements and British
SELECT DISTINCT ?residence WHERE {
    ?politician dbo:residence ?residence .
    ?residence wdt:P31 wd:Q515 ; # Settlement
               wdt:P17 wd:Q145 .  # United Kingdom (British)
}

# Step 4: Find the native of these settlements
SELECT DISTINCT ?native WHERE {
    ?residence dbo:native ?native .
}
```

Note: Replace `wd:Q123456` with Sean Pertwee's actual DBpedia identifier and adjust the query structure as needed based on available data.",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
378,67,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
# Query for Thomas Trigge's claim to fame related to a military conflict
SELECT ?claimToFame WHERE {
  ?trigge dbo:wikiPageID ""Thomas_Trigge"" .
  ?trigge dbo:claimToFame ?claimToFame .
  ?claimToFame rdf:type dbo:MilitaryConflict .
}

# Query for Carl Pontus Gahn's claim to fame related to a military conflict
SELECT ?claimToFame WHERE {
  ?gahn dbo:wikiPageID ""Carl_Pontus_Gahn"" .
  ?gahn dbo:claimToFame ?claimToFame .
  ?claimToFame rdf:type dbo:MilitaryConflict .
}

# Query for the commander related to the Peninsular War and their claim to fame
SELECT ?commander ?claimToFame WHERE {
  ?peninsularWar dbo:wikiPageID ""Peninsular_War"" .
  ?peninsularWar dbo:commander ?commander .
  ?commander dbo:claimToFame ?claimToFame .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
659,51,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryForce
WHERE {
  # Find the commander of the 1st Light Cavalry Lancers Regiment during a war or military conflict
  ?regiment dbo:participatedIn ?war .
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  
  # Find the commander associated with this regiment in the context of a war
  ?commander dbo:commanded ?regiment ;
            dbo:participatedIn ?war .

  # Identify military force related to Rutger Jan Schimmelpenninck's societal event
  ?event dbo:relatedTo dbr:Rutger_Jan_Schimmelpenninck .
  ?event rdf:type dbo:MilitaryConflict ;
         dbo:involvedMilitaryForce ?militaryForce .

  # Ensure the war is a military conflict and the event is both a societal event and a military conflict
  FILTER (rdf:type(?war, dbo:MilitaryConflict) && rdf:type(?event, dbo:SocietalEvent))
}
```",5,10,6,3,2,3,3,71,0,0,31,0,0.0,0
959,30,test,Give me the native of Japan and manager of the team of Takashi Sekizuka and member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?personName WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Japan .
  ?team dbo:member dbr:Takashi_Sekizuka .
  ?team dbo:manager ?person .
  ?person dbo:almaMater dbr:University_of_Tsukuba .
  ?person rdfs:label ?personName .
  FILTER (lang(?personName) = 'en')
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
421,28,test,Give me the band member of the awardee of [[#Awards and nominations and native of the birthplace of Samir Bekrić and person born as the birth name of Dino Merlin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
# Step 1: Find Samir Bekrić's birthplace
SELECT ?birthPlace WHERE {
    dbpedia:Sami_Bekrić dbo:birthPlace ?birthPlace .
}

# Step 2: Identify a native of that place who is an awardee
SELECT DISTINCT ?awardee WHERE {
    ?person dbo:nativeOf ?birthPlace ;
            dbo:award ?award .
    FILTER EXISTS { dbpedia:Sami_Bekrić dbo:birthPlace ?birthPlace }
}

# Step 3: Find Dino Merlin's birth name
SELECT ?birthName WHERE {
    dbpedia:Dino_Merlin foaf:name ?birthName .
}

# Step 4: Identify a person born with that name
SELECT DISTINCT ?personWithBirthName WHERE {
    ?person foaf:name ?birthName ;
            dbo:birthName ?birthName .
    FILTER EXISTS { dbpedia:Dino_Merlin foaf:name ?birthName }
}

# Step 5: Find if this person is a band member of the awardee
SELECT DISTINCT ?bandMember WHERE {
    ?awardee dbo:award ?award ;
             dbo:bandMember ?bandMember .
    ?personWithBirthName foaf:name ?birthName .
    FILTER EXISTS { dbpedia:Dino_Merlin foaf:name ?birthName }
    FILTER EXISTS { ?person dbo:nativeOf ?birthPlace ; dbo:award ?award . 
                   dbpedia:Sami_Bekrić dbo:birthPlace ?birthPlace }
}

```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
378,18,test,"Give me the war of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Joaquín Blake.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?war ?fame WHERE {
  # Carl Pontus Gahn's war
  { 
    ?gahn a dbo:Person ;
          foaf:name ""Carl Pontus Gahn"" .
    OPTIONAL { ?gahn dbo:participatedInWar ?war . }
    BIND(?gahn AS ?person)
  } UNION
  # Louis des Balbes de Berton de Crillon's claim to fame
  {
    ?crillon a dbo:Person ;
             foaf:name ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón"" .
    OPTIONAL { ?fame rdfs:comment ?claimToFame . }
    FILTER(CONTAINS(LCASE(?claimToFame), ""famous""))
    BIND(?crillon AS ?person)
    BIND(?claimToFame AS ?fame)
  } UNION
  # Joaquín Blake's war
  {
    ?blake a dbo:Person ;
           foaf:name ""Joaquín Blake"" .
    OPTIONAL { ?blake dbo:participatedInWar ?war . }
    BIND(?blake AS ?person)
  }
}
```",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
767,50,test,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to the alter ego of Black Hood.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nashAlmaMater ?graysonAlmaMater
WHERE {
  # George Kilbon Nash's alma mater
  OPTIONAL { 
    dbr:George_Kilbon_Nash dbo:almaMater ?nashAlmaMater .
  }
  
  # Alter ego of Black Hood (Dick Grayson) alma mater
  OPTIONAL { 
    dbr:Dick_Grayson dbo:almaMater ?graysonAlmaMater .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
328,68,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?office ?award
WHERE {
  ?person dbo:commanderOf ?force .
  ?force dbo:location dbr:Budapest .
  
  ?person dbo:leaderOf ?office .
  ?office dbo:head dbr:Joseph_Stalin .

  ?person dbo:awardee ?award .
  ?award dbo:campaign dbr:Battle_of_the_Ryukyu_Islands ;
         dbo:campaign dbr:Volcano_Islands_campaign .

  FILTER(?commander = ?person)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
92,51,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?artist 
WHERE {
  ?person1 dbo:birthName ""Joseph Michael""@en .
  ?person1 dbo:associatedBand ?band .

  ?person2 dbo:birthName ""Jim Sheppard""@en .
  ?person2 dbo:musicalArtist ?artist .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
427,52,test,Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?micheleParty ?giuseppeParty ?romanoParty WHERE {
  # Michele Pinto's party affiliation
  OPTIONAL { 
    dbr:Michele_Pinto dbo:partyAffiliation ?micheleParty .
  }
  
  # Giuseppe Andreotti's (Lamberto Andreotti's father) party affiliation
  OPTIONAL { 
    dbr:Giuseppe_Andreotti dbo:partyAffiliation ?giuseppeParty .
  }

  # Romano Prodi's party affiliation
  OPTIONAL { 
    dbr:Romano_Prodi dbo:partyAffiliation ?romanoParty .
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
184,65,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find children of Archduke Joseph Francis of Austria
SELECT ?child WHERE {
    dbr:Archduke_Joseph_Francis_of_Austria dbo:child ?child .
}

# Step 2: Find the parent of one of these children
SELECT DISTINCT ?parent WHERE {
    ?child dbo:parent ?parent .
    FILTER(?child IN (SELECT ?child WHERE {
        dbr:Archduke_Joseph_Francis_of_Austria dbo:child ?child .
    }))
}

# Step 3: Find the native of Budapest
SELECT ?native WHERE {
    ?native dbo:birthPlace dbr:Budapest .
}

# Step 4: Determine the child of the child of the parent of Archduke Ladislaus Philipp
# Find the parent of Archduke Ladislaus Philipp
SELECT DISTINCT ?parent WHERE {
    dbr:Archduke_Ladislaus_Philipp_of_Austria dbo:parent ?parent .
}

# Find a child of this parent
SELECT DISTINCT ?child1 WHERE {
    ?parent dbo:child ?child1 .
    FILTER(?parent IN (SELECT ?parent WHERE {
        dbr:Archduke_Ladislaus_Philipp_of_Austria dbo:parent ?parent .
    }))
}

# Find a child of the above child
SELECT DISTINCT ?grandChild WHERE {
    ?child1 dbo:child ?grandChild .
    FILTER(?child1 IN (SELECT ?child1 WHERE {
        ?parent dbo:child ?child1 .
        FILTER(?parent IN (SELECT ?parent WHERE {
            dbr:Archduke_Ladislaus_Philipp_of_Austria dbo:parent ?parent .
        }))
    }))
}

# Step 5: Find commonality and filter for royalty
SELECT DISTINCT ?commonEntity WHERE {
    # Parent of the child of Archduke Joseph Francis
    VALUES (?entity1) { 
        SELECT DISTINCT ?parent WHERE {
            ?child dbo:parent ?parent .
            FILTER(?child IN (SELECT ?child WHERE {
                dbr:Archduke_Joseph_Francis_of_Austria dbo:child ?child .
            }))
        }
    }

    # Child of the child of the parent of Archduke Ladislaus Philipp
    VALUES (?entity2) { 
        SELECT DISTINCT ?grandChild WHERE {
            ?child1 dbo:child ?grandChild .
            FILTER(?child1 IN (SELECT ?child1 WHERE {
                ?parent dbo:child ?child1 .
                FILTER(?parent IN (SELECT ?parent WHERE {
                    dbr:Archduke_Ladislaus_Philipp_of_Austria dbo:parent ?parent .
                }))
            }))
        }
    }

    # Check if they are the same and filter for royalty
    FILTER(?entity1 = ?entity2)
    ?commonEntity rdf:type dbo:Royal .
    FILTER(?commonEntity IN (?entity1, ?entity2))
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
9,64,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of Allen Hill (scientist).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
# Query to get the current mayor of Belfast and their alma mater
SELECT ?mayorName ?almaMater WHERE {
  ?belfast dbo:mayor ?mayor .
  ?mayor foaf:name ?mayorName .
  ?mayor dbo:almaMater ?almaMater .
  ?belfast rdfs:label ""Belfast""@en .
} LIMIT 1

# Query to find organisations in Belfast with nicknames
SELECT DISTINCT ?organisation ?nickname WHERE {
  ?organisation dbo:location ?belfast ;
                foaf:name ?name ;
                dbo:nickname ?nickname .
  ?belfast rdfs:label ""Belfast""@en .
}

# Query to identify educational institutions in Northern Ireland that are the alma mater of Allen Hill (scientist)
SELECT DISTINCT ?institution WHERE {
  ?allenHill foaf:almaMater ?institution .
  ?institution dbo:location ?northernIreland ;
               rdf:type dbo:EducationalInstitution .
  ?northernIreland rdfs:label ""Northern Ireland""@en .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
487,20,test,"Give me the country of the administration of the person born on 1955-01-26 and administration of the person born, that is a soccer player, as the birth name of Phil Scott.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/country> ?result . }","```sparql
# Query to find the country of administration for the person born on 1955-01-26
SELECT ?person ?country1 WHERE {
  ?person dbo:birthDate ""1955-01-26""^^xsd:date .
  ?person dbo:countryForSport ?country1 .
}

UNION

# Query to find the country of administration for the soccer player with birth name Phil Scott
SELECT ?player ?country2 WHERE {
  ?player foaf:name ""Phil Scott""@en .
  ?player dbo:soccerPlayer true .
  ?player dbo:birthName ""Phil Scott"" .
  ?player dbo:countryForSport ?country2 .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
54,61,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Identify Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .

  # Step 2: Find the child of Thihapate of Mohnyin
  ?child dbo:parent ?thihapate .

  # Step 3: Identify office holder and royalty among children
  ?officeHolderChild a dbo:Person ;
                    dbo:isOfficeHolder true ;
                    dbo:royalty true ;
                    FILTER(?child = ?officeHolderChild) .

  # Step 4: Determine predecessor of this child
  ?predecessor dbo:successor ?officeHolderChild .

  # Step 5: Find parent of Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw of Prome""@en .
  ?parent dbr:Prome dbo:child ?thadoMinsaw .

  # Step 6: Identify child of this parent
  ?grandChild dbo:parent ?parent .

  # Step 7: Link predecessor to grandChild
  FILTER(?predecessor = ?grandChild)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
92,38,test,"Give me the band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band ?associatedArtist
WHERE {
  # Find Joseph Michael Furney's band
  ?person1 rdfs:label ""Joseph Michael Furney""@en .
  ?person1 dbo:birthName ""Joseph Michael Furney"" .
  OPTIONAL { ?person1 dbo:band ?band . }

  # Find Jim Sheppard's associated musical artist
  ?person2 rdfs:label ""Jim Sheppard""@en .
  ?person2 dbo:birthName ""Jim Sheppard"" .
  OPTIONAL { ?person2 dbo:associatedBand ?associatedArtist . }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
827,18,test,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894) and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?father WHERE {
  # Step 1: Identify Charles Augustus and his children who are royalty
  ?charlesAugustus dbo:name ""Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?child dbo:childOf ?charlesAugustus ;
         rdf:type dbo:Monarch .

  # Step 2: Identify Charles Alexander's parent
  ?charlesAlexander dbo:name ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?parent dbo:parentOf ?charlesAlexander .

  # Step 3: Find a royal child of this parent
  ?royalChild dbo:childOf ?parent ;
              rdf:type dbo:Monarch .

  # Step 4: Match the royal child from step 2 with the one from step 3
  FILTER (?child = ?royalChild)

  # Step 5: Determine the father of this matched child
  ?father dbo:spouse ?mother .
  ?mother dbo:parentOf ?child .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
435,21,test,Give me the work of the author of Iceland and region of Greenwich Mean Time and territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  # Find works by Halldór Laxness
  dbr:Halld%C3%B3r_Laxness dbo:literaryWork ?work .
  
  OPTIONAL {
    # Identify regions associated with GMT
    ?region dbo:timeZone dbr:Greenwich_Mean_Time ;
            rdfs:label ?regionLabel .
  }
  
  OPTIONAL {
    # Identify territories administered from Reykjavík
    ?territory dbo:governmentBuilding dbr:Reykjav%C3%ADk ;
               rdfs:label ?territoryLabel .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
547,64,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of the award of Gerald Graham and resting place of Simon Cadell.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchildRestingPlace ?awardeeRestingPlace ?simonCadellRestingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  ?williamHaliburton dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .
  ?grandchild dbo:restingPlace ?grandchildRestingPlace .

  # Resting place of the awardee of the award of Gerald Graham
  dbr:Gerald_Graham dbo:award ?award .
  ?awardee dbo:receivedAward ?award ;
           dbo:restingPlace ?awardeeRestingPlace .

  # Resting place of Simon Cadell
  dbr:Simon_Cadell dbo:restingPlace ?simonCadellRestingPlace .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
701,47,test,Give me the parent of the child of the child of Seti I and parent of the child of Nefertari.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commonAncestor WHERE {
  # Find Seti I's grandchildren
  ?setiIChild dbo:child ?grandchild .
  ?setiI dbo:child ?setiIChild .
  FILTER(?setiI = dbpedia:Seti_I) .

  # Find the parent of each grandchild
  ?grandchildParent dbo:parent ?grandchild .
  
  # Find Nefertari's children
  ?nefertariChild dbo:child ?childOfNefertari .
  FILTER(?nefertari = dbpedia:Nefertari) .

  # Find the parent of each child of Nefertari
  ?parentOfChild dbo:parent ?childOfNefertari .

  # Determine common ancestor
  VALUES ?commonAncestor { ?grandchildParent ?parentOfChild }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
161,54,test,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?francoMilitaryForce ?predecessor ?predecessorMilitaryForce
WHERE {
  # Francisco Franco's role in the Biscay Campaign
  ?campaign dbo:militaryConflict true ;
            dbo:commander ?commander ;
            dbo:participant dbr:Franco_Francisco .

  # Military force associated with Francisco Franco
  ?francoMilitaryForce dbo:societalEvent true ;
                       dbo:militaryConflict true ;
                       dbo:commander dbr:Franco_Francisco .

  # Indalecio Prieto's predecessor
  ?prietoPosition dbo:predecessor ?predecessor .
  
  # Military force associated with the predecessor of Indalecio Prieto
  ?predecessorMilitaryForce dbo:societalEvent true ;
                           dbo:militaryConflict true ;
                           dbo:commander ?predecessor .
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
701,46,test,Give me the parent of the child of Ramesses II and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent1 ?parent2 WHERE {
  # Step 1: Find a child of Ramesses II
  ?child1 dbo:childOf ?ramessesII .
  FILTER(STRSTARTS(LCASE(?ramessesII), ""http://dbpedia.org/resource/ramesses_ii"")) .

  # Step 2: Find the parent of that child (likely spouse or Ramesses II)
  ?parent1 dbo:spouse ?ramessesII ;
          dbo:childOf ?child1 .
  
  # Step 3: Identify Amun-her-khepeshef's spouse
  ?amunHerKhepeshef dbo:spouse ?spouseAmun .

  FILTER(STRSTARTS(LCASE(?amunHerKhepeshef), ""http://dbpedia.org/resource/amun-her-khepeshef"")) .
  
  # Step 4: Find a child of this spouse
  ?child2 dbo:childOf ?spouseAmun ;
         dbo:childOf ?amunHerKhepeshef .

  # Step 5: Determine the parent of that child (likely Amun-her-khepeshef or his spouse)
  ?parent2 dbo:spouse ?spouseAmun ;
           dbo:childOf ?child2 .
  
  # Find commonality between these two parents
  FILTER(?parent1 = ?parent2)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
232,52,test,"Give me the native of London and child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfLondonAndChild
WHERE {
  # Step 1: Find Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?jonBirthName .

  # Step 2: Find Sean Pertwee's claims to fame (film and military conflict)
  dbr:Sean_Pertwee dbo:claimToFame ?film .
  dbr:Sean_Pertwee dbo:claimToFame ?militaryConflict .

  FILTER (isLiteral(?film) && isLiteral(?militaryConflict))

  # Step 3: Identify the native of London and child
  ?nativeOfLondonAndChild dbo:nativePlace dbr:London .
  ?nativeOfLondonAndChild dbo:parent ?jonPertwee .
  ?jonPertwee dbo:birthName ?jonBirthName .

  FILTER (?film = ""The King's Speech"" && ?militaryConflict = ""World War II"") # Example values, replace with actual claims
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
801,37,test,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musicalWork ?rapperArtist WHERE {
  # Chris Taylor as a music producer
  dbr:Chris_Taylor_(music_producer) dbo:producer ?musicalWork .
  
  # Ensure the musical work is both a song and a work
  ?musicalWork rdf:type dbo:Songs .

  # Find rappers who are also musical artists involved in these works
  ?rapperArtist dbo:profession dbr:Rapper ;
                dbo:musicalArtistOf ?musicalWork .
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
778,17,test,"Give me the entity in United States and author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInUS ?softwareWork (GROUP_CONCAT(?author; separator="", "") AS ?authors)
WHERE {
  # Find the author of Pushd and Popd
  ?command dbo:creator ?author .
  FILTER (?command IN (""Pushd"", ""Popd""))

  # Identify a software work by this author
  ?software dbo:creator ?author .

  # Find an entity in the United States related to this software
  ?entityInUS dbo:country dbp:United_States ;
              (dbo:developer|dbo:contributor) ?software .
  
  # Ensure we are considering only one software work per author for simplicity
  FILTER NOT EXISTS {
    ?otherSoftware dbo:creator ?author .
    FILTER (?software != ?otherSoftware)
  }
}
GROUP BY ?entityInUS ?softwareWork
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
303,24,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""Arnulfo Arias Madrid"" ;
          dbo:occupation dbo:Politician .
  ?person dbo:party ?party .

  OPTIONAL {
    ?country dbo:location dbr:El_Valle_de_Antón ;
             a dbo:Country .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
378,59,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1 ?war2 WHERE {
  # Find the Peninsular War and its related wars
  dbr:Peninsular_War dbo:wikiPageRedirects ?relatedWar .
  OPTIONAL { ?relatedWar rdfs:label ?war1 FILTER (lang(?war1) = 'en') }

  # Identify Carl Pontus Gahn and his involvement in wars
  dbr:C._P._Gahn dbo:birthName ""Carl Pontus Gahn""@sv ;
                 dbo:militaryConflict ?war2 .
  OPTIONAL { ?war2 rdfs:label ?warLabel FILTER (lang(?warLabel) = 'en') }

  # Check for overlap between the wars
  VALUES ?relatedWar { ?war1 }
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
232,71,test,"Give me the child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/property/residence> ?v8 . ?result <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v4 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child
WHERE {
  # Step 1: Find Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?jonBirthName .

  # Step 2: Identify the person with a claim to fame in both film and military conflict
  ?person dbo:claimToFame ?film .
  ?person dbo:claimToFame ?conflict .
  FILTER (isLiteral(?film) && isLiteral(?conflict))
  FILTER regex(str(?film), ""Film"", ""i"") 
  FILTER regex(str(?conflict), ""Military conflict"", ""i"")
  
  # Ensure the person is an actor, narrator, and producer
  ?person a dbo:Actor ;
          a dbo:Narrator ;
          a dbo:Producer .

  # Step 3: Determine the residence of this person
  ?person dbo:residence ?settlement .
  FILTER (isLiteral(?settlement) && regex(str(?settlement), ""British"", ""i""))

  # Step 4: Identify the native politician from France
  ?politician a dbo:Politician ;
             a dbo:OfficeHolder ;
             dbo:nativePlace ?settlement .
  FILTER (str(?politician) = str(dbr:France))

  # Ensure the settlement is British and in France
  ?settlement dbo:country dbr:United_Kingdom .

  # Step 5: Find Jon Pertwee's child with the same birth name as this French politician
  ?child dbo:birthName ?jonBirthName .
  ?child dbo:parent dbr:Jon_Pertwee .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
356,19,test,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960) and player in the successor of 2014 Sacramento Republic FC season.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/manager> ?v4 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?team WHERE {
    # Step 1: Identify Gary Williams' birthplace
    dbr:Gary_Williams_(footballer,_born_1960) dbo:nationality dbr:England ;
        dbo:birthPlace ?birthPlace .

    FILTER (dbo:Settlement ?birthPlace)

    # Step 2: Find a native soccer player and manager from this place
    ?person dbo:nationality dbr:England ;
            dbo:birthPlace ?birthPlace ;
            rdf:type dbo:SoccerPlayer, dbo:SoccerManager .

    # Step 3: Identify the successor team to Sacramento Republic FC in 2014
    dbr:Sacramento_Republic_FC dbo:succeededBy ?successorTeam .

    # Step 4: Find a player on this successor team
    ?player rdf:type dbo:SoccerPlayer ;
            dbo:team ?successorTeam .

    # Step 5: Determine the current team of this player
    ?player dbo:currentTeam ?team .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
528,53,test,"Give me the force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?narcisoBirthDate ?orozimboWar ?chileEventMilitaryForce
WHERE {
  # Narciso Campero Leyes' birth date and military force
  OPTIONAL { 
    dbr:Narciso_Campero_Leyes dbo:birthDate ?narcisoBirthDate .
    dbr:Narciso_Campero_Leyes dbo:militaryForce ?militaryForce .
  }

  # Orozimbo Barbosa's war
  OPTIONAL {
    ?orozimboWar dbo:participant dbr:Orozimbo_Barbosa .
  }

  # Societal event in Chile involving a military force
  OPTIONAL {
    ?chileEvent dbo:location dbr:Chile ;
                dbo:militaryForce ?eventMilitaryForce .
  }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
9,38,test,Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of Queen's University Belfast.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person dbo:award [ a dbo:Award ; rdfs:label ""Royal Medal""@en ] .
  ?person dbo:almaMater ?almaMater .
  FILTER EXISTS { 
    ?person dbo:affiliation dbr:Queen's_University_Belfast .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
487,19,test,"Give me the administration of the person born, that is a soccer player, as the birth name of Phil Scott and country of the administration of Patricia McCoy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> ?result . <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?result <http://dbpedia.org/property/governor> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?philScottAdministration ?patriciaMcCoyCountry WHERE {
  # Part 1: Phil Scott's Administration
  ?person foaf:name ""Phil Scott""@en .
  ?person dbo:soccerPlayer true .
  ?person dbo:holdsPublicOffice ?office .
  ?office dbo:administration ?philScottAdministration .

  # Part 2: Patricia McCoy's Country of Administration
  ?patriciaMcCoy foaf:name ""Patricia McCoy""@en .
  ?patriciaMcCoy dbo:holdsPublicOffice ?officeMcCoy .
  ?officeMcCoy dbo:country ?patriciaMcCoyCountry .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
404,56,test,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfErnest ?spouseOfVictoriaLouise ?fatherOfSpouse
WHERE {
  # Prince Ernest Augustus of Hanover and his parent
  dbr:Prince_Ernest_Augustus_of_Hanover dbo:birthDate ?date1 .
  FILTER (YEAR(?date1) = 1914)
  
  dbr:Prince_Ernest_Augustus_of_Hanover dbo:parent ?parentOfErnest .

  # Princess Victoria Louise of Prussia and her spouse
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouseOfVictoriaLouise .
  
  # Parent (father) of the spouse of Princess Victoria Louise
  ?spouseOfVictoriaLouise dbo:parent ?fatherOfSpouse .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
251,20,test,"Give me the location of Battle of Marengo and administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
# Query for the location of Battle of Marengo
SELECT ?location WHERE {
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Marengo""@en .
  ?battle dbp:location ?location .
}

UNION

# Query for the administration of the ruling party in Sicily
SELECT ?party WHERE {
  ?government a dbo:Government ;
              dbo:country dbr:Sicily ;
              dbo:rulingParty ?party .
  ?party a dbo:PoliticalParty .
}

UNION

# Query for the death place of Laura Mancinelli
SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Laura Mancinelli""@en .
  ?person dbo:deathPlace ?deathPlace .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
528,27,test,Give me the force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?person dbo:birthName ""Narciso Campero""@en .
  OPTIONAL { ?person dbo:position ?force . }
  OPTIONAL { ?person dbo:militaryRank ?force . }
  FILTER (lang(?force) = 'en')
}
```",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
328,58,test,"Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?commander ?agencyLeader WHERE {
  # Find awardees of the Order of Suvorov
  ?awardee dbo:award ?order .
  ?order rdfs:label ""Order of Suvorov""@en .

  # Find commanders in Ferenc Szálasi's force
  ?commander dbo:militaryCommanderOf dbr:Ferenc_Szálasi .
  
  # Identify leaders of government agencies
  ?agencyLeader dbo:leader ?commander ;
                a dbo:GovernmentAgency .

  # Connect to Gustav Jonson
  ?gustavJonson dbo:officeHolder ?agencyLeader ;
                a dbo:Politician ;
                rdfs:label ""Gustav Jonson""@en .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
404,30,test,"Give me the spouse of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
    # Step 1: Find the spouse of Princess Victoria Louise of Prussia
    dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

    # Step 2: Identify Ernest Augustus, Duke of Brunswick's father
    dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:father ?father .

    # Step 3: Find the child of this father who is a parent of Prince Ernest Augustus of Hanover (born 1914)
    ?child dbo:parent dbr:Prince_Ernest_Augustus_of_Hanover_(1914-1987) .
    ?child dbo:father ?father .

    # Step 4: Ensure the spouse from step 1 is the child found in step 3
    FILTER (?spouse = ?child)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
54,48,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:parent dbr:Thinkhaya_of_Pagan .
  
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?thihapateChild dbo:parent dbr:Thihapate_of_Mohnyin ;
                 a dbo:OfficeHolder, dbo:Royalty .

  # Find the intersection where Thinkhaya's child matches Thihapate's criteria
  FILTER (?thinkhayaChild = ?thihapateChild)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
392,24,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v2 . ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?province (GROUP_CONCAT(?region; separator="", "") AS ?regions)
WHERE {
  # Sebastiano Bianchetti's province of residence
  {
    SELECT ?residence ?province WHERE {
      ?person dbo:name ""Sebastiano Bianchetti""@it.
      ?person dbo:residence ?residence.
      ?residence a dbo:Settlement.
      ?residence dbo:country dbr:Italy.
      OPTIONAL { ?residence dbo:locatedIn ?province. }
    } LIMIT 1
  }

  # Aguilar de Segarra's region of time zone
  {
    SELECT ?timeZone ?region WHERE {
      ?place a dbo:Settlement;
             rdfs:label ""Aguilar de Segarra""@en.
      ?place dbo:timeZone ?timeZone.
      ?timeZone dbo:associatedWith ?event.
      ?event a dbo:SportsEvent.
      OPTIONAL { ?timeZone dbo:region ?region. }
    } LIMIT 1
  }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
314,23,test,"Give me the person deceased at the headquarter of House of Sombrerete and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?house dbo:headquarters ?hq .
  FILTER (str(?house) = ""House_of_Sombrerete"") .

  ?person dbo:deathPlace ?hq ;
          dbo:profession ?commanderRole .
  FILTER EXISTS { ?commanderRole rdfs:label ?roleLabel . FILTER regex(?roleLabel, ""Commander"", ""i"") }

  ?event dbo:eventType ?eventType ;
         dbo:participant ?participant .
  FILTER (str(?participant) = ""Lisa_Gavrić"" && 
          str(?eventType) = ""SocietalEvent"")

  ?person dbo:death ?death .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
9,51,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?person dbo:RoyalMedalist true .
  ?person foaf:nick ?nickname .
  ?person dbo:almaMater ?almaMater .
  ?almaMater a dbo:EducationalInstitution ;
             dbo:location dbr:Northern_Ireland .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
617,58,test,Give me the child of Antiochus III the Great and spouse of the child of Antiochus III the Great and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Find the child of Antiochus III the Great
  ?antiochus3 a dbo:Person ;
              foaf:name ""Antiochus III the Great""@en .
  
  ?child dbo:parent ?antiochus3 .

  # Step 2: Find the spouse of this child
  ?spouse dbo:spouse ?child .

  # Step 3: Identify the commander at the Battle of Panium and their child
  ?battle a dbo:MilitaryConflict ;
          dbo:name ""Battle of Panium""@en .
  
  ?commander dbo:commanded ?battle ;
             foaf:name ?cmdName .
  
  ?child2 dbo:parent ?commander .

  # Step 4: Find the parent of this child (which should be the spouse found in step 2)
  ?spouse2 dbo:parent ?child2 .
  
  FILTER(?spouse = ?spouse2)
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
767,65,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leaderParty> ""Green""@en . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> ?v4 . ?v6 <http://dbpedia.org/property/governor> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?settlement ?alterEgo ?almaMater
WHERE {
  # Find the settlement in the administration of ""Green""
  ?green dbo:administration ?admin .
  ?admin dbo:settlement ?settlement .

  # Find the alter ego of Black Hood
  ?blackHood foaf:name ""Black Hood""@en .
  ?blackHood dbo:alterEgo ?alterEgo .

  # Find George Kilbon Nash's alma mater
  ?nash foaf:name ""George Kilbon Nash""@en .
  ?nash dbo:almaMater ?almaMater .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
182,22,test,Give me the war of the author of 2019 Sri Lanka Easter bombings and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?eventWar ?rajapaksaWar WHERE {
  # Wars related to the 2019 Sri Lanka Easter bombings
  OPTIONAL {
    ?event dbr:2019_Sri_Lanka_Easter_bombings ;
           dbo:relatedEvent ?eventWar .
  }
  
  # Wars associated with Gotabhaya Rajapaksa
  OPTIONAL {
    dbr:Gotabhaya_Rajapaksa dbo:occupation ?occupation .
    ?rajapaksaWork dbo:workOfArt ?occupation .
    ?rajapaksaWork dbo:relatedEvent ?rajapaksaWar .
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
659,46,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1Commander ?war2Commander WHERE {
  # Part 1: Commander of the 1st Light Cavalry Lancers Regiment during a war
  ?regiment rdf:type dbo:MilitaryUnit ;
            dbo:name ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)"" .
  
  ?war1 dbo:participatedIn ?regiment ;
        rdf:type dbo:War .

  ?war1 dbo:commander ?war1Commander .

  # Part 2: Commander in the force of the native office holder of Kingdom of Ireland
  ?officeHolder dbo:nativeOf dbr:Kingdom_of_Ireland ;
                rdf:type dbo:OfficeHolder .
  
  ?war2 dbo:participatedIn ?force ;
        rdf:type dbo:War .

  ?force dbo:commander ?officeHolder .

  ?war2 dbo:commander ?war2Commander .
}
```",5,8,6,3,2,3,3,71,0,0,71,0,0.0,0
485,20,test,"Give me the entity in Nottinghamshire and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in United Kingdom.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:Eric_Gregory_Award .
  ?person dbo:residence dbr:Nottinghamshire .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
528,68,test,"Give me the war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for works published on January 9th of any year
SELECT ?work WHERE {
    ?work dbo:datePublished ?date .
    FILTER (STRSTARTS(STR(?date), ""^^xsd:gYearMonth"") && STRLEN(STR(?date)) = 10 && SUBSTR(STR(?date), 6, 5) = ""-01-09"")
}

# Query for Narciso Campero Leyes' birth details and military forces
SELECT ?birthDate ?militaryForce WHERE {
    dbr:Narciso_Campero_Leyes dbo:birthDate ?birthDate .
    OPTIONAL { dbr:Narciso_Campero_Leyes dbo:militaryService ?militaryForce . }
}

# Query for wars in Chile
SELECT ?war WHERE {
    ?war a dbo:SocietalEvent ;
         dbo:place dbr:Chile ;
         rdf:type dbo:MilitaryConflict .
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
547,34,test,Give me the resting place of Alan Cunningham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query for the resting place of Alan Cunningham
SELECT ?restingPlaceAlanCunningham WHERE {
  ?alanCunningham a dbo:Person ;
                 foaf:name ""Alan Cunningham""@en .
  ?alanCunningham dbo:finalBurialPlace ?restingPlaceAlanCunningham .
}

UNION

# Query for the resting place of the grandchild of William Haliburton
SELECT ?grandchildRestingPlace WHERE {
  ?williamHaliburton a dbo:Person ;
                     foaf:name ""William Haliburton""@en .
  ?williamHaliburton dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .
  ?grandchild dbo:finalBurialPlace ?grandchildRestingPlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,58,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of George K. Nash and entity in Baden-Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?almaMater ?entityInBadenWurttemberg
WHERE {
  # Matthew Burland's fictional alter ego
  ?person a dbo:Person ;
          foaf:name ""Matthew Burland"" .
  ?person dbo:fictionalCharacter ?alterEgo .

  # George K. Nash's alma mater
  ?nash a dbo:Person ;
        foaf:name ""George K. Nash"" .
  ?nash dbo:almaMater ?almaMater .

  # Entity in Baden-Württemberg that connects both
  ?entityInBadenWurttemberg dbo:location dbr:Baden-Württemberg ;
                            dbo:associatedWith ?alterEgo, ?almaMater .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
392,20,test,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy and province of Schio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region ?sportEvent
WHERE {
  # Aguilar de Segarra
  OPTIONAL {
    VALUES ?place { dbr:Aguilar_de_Segarra }
    ?place dbo:timeZone ?tz .
    ?tz dbo:region ?region .
    OPTIONAL { ?place dbo:sport ?sport . ?sport rdfs:label ?sportEvent FILTER (lang(?sportEvent) = ""en"") }
  }

  # Province of Schio
  OPTIONAL {
    VALUES ?place { dbr:Province_of_Schio }
    ?place dbo:timeZone ?tz .
    ?tz dbo:region ?region .
    OPTIONAL { ?place dbo:sport ?sport . ?sport rdfs:label ?sportEvent FILTER (lang(?sportEvent) = ""en"") }
  }

  # Entity in Italy assumed to be Schio
  OPTIONAL {
    VALUES ?place { dbr:Schio }
    ?place dbo:timeZone ?tz .
    ?tz dbo:region ?region .
    OPTIONAL { ?place dbo:sport ?sport . ?sport rdfs:label ?sportEvent FILTER (lang(?sportEvent) = ""en"") }
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
547,55,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer) and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?restingPlace WHERE {
  # Part 1: Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  { 
    ?person dbo:awardedTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
    ?person dbo:restingPlace ?restingPlace .
  }
  
  UNION
  
  # Part 2: Resting place of the child of James Burton (property developer)
  { 
    ?child dbo:parent dbr:James_Burton_(property_developer) .
    ?child dbo:restingPlace ?restingPlace .
  }

  UNION

  # Part 3: Resting place of the actor of ""Enemy at the Door""
  {
    ?actor dbo:actedIn dbr:Enemy_at_the_Door .
    ?actor dbo:restingPlace ?restingPlace .
  }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
232,48,test,"Give me the child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?birthName .
  
  # Find Sylvie Bermann's native place that is a British settlement
  dbr:Sylvie_Bermann dbo:nativePlace ?nativePlace ;
                     foaf:nationality dbr:United_Kingdom .

  FILTER (isBlank(?nativePlace) || ?nativePlace != dbr:France)
  
  # Ensure the native place is a settlement
  OPTIONAL { ?nativePlace rdf:type dbo:Settlement . }

  # Find Jon Pertwee's children and match with Sylvie Bermann's residence criteria
  dbr:Jon_Pertwee dbo:child ?child .
  ?child dbo:nativePlace ?nativePlace .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
488,39,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?deathPlace
WHERE {
  # Find Tokugawa Masako's spouse
  dbr:Tokugawa_Masako dbo:spouse ?spouse .

  # Determine the father of the spouse and check if he is royalty
  ?spouse dbo:father ?royalFather .
  ?royalFather a dbo:Monarch ; 
              dbo:administrativePost ?administration .

  # Find Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
9,71,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v7 <http://dbpedia.org/property/nickname> ?v8 . ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ?v8 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?organisation ?nickname WHERE {
  ?politician a dbo:Person ;
              dbo:almaMater ?organisation .
  
  ?organisation a dbo:EducationalInstitution, dbo:Organisation ;
                dbo:location dbr:Northern_Ireland .

  ?mayorPosition a dbo:Mayorship ;
                 dbo:person ?politician ;
                 dbo:organization ?belfastOrg .
  
  ?belfastOrg a dbo:Organization ;
              dbo:location dbr:Belfast .

  ?awardee a dbo:Person ;
           dbo:almaMater ?organisation ;
           dbo:award dbr:Royal_Medals .

  OPTIONAL { ?organisation rdfs:label ?nickname }
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
427,49,test,"Give me the reference to the name of Italian People's Party (1994) and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?partyURI ?birthName ?partyAffiliation
WHERE {
  # Find the Italian People's Party founded in 1994
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Italian People's Party""@en ;
         dbo:foundingDate ?foundingDate .
  FILTER (YEAR(?foundingDate) = 1994)
  
  # Get Romano Prodi's birth name and party affiliation
  ?prodi a dbo:Person ;
         foaf:name ""Romano Prodi"" ;
         foaf:nick ?birthName ;
         dbo:partyAffiliation ?partyAffiliation .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
747,63,test,"Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of Apollo (Hardwell song) and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . }","```sparql
# Query 1: Find the band of Tracey Elizabeth McSween
SELECT ?band WHERE {
  ?person dbo:name ""Tracey Elizabeth McSween""@en .
  ?person dbo:memberOfBand ?band .
}

UNION

# Query 2: Find the writer of Apollo (Hardwell song) and their band
SELECT ?writerBand WHERE {
  ?song dbo:title ""Apollo""@en ;
        dbo:lyricsBy ?writer .
  ?writer dbo:memberOfBand ?writerBand .
  FILTER EXISTS { ?song dbo:artist ""Hardwell""@en }
}

UNION

# Query 3: Find an athlete and soccer player born on the same date as Tracey Elizabeth McSween in Zolotonosha
SELECT ?athlete WHERE {
  # Get birthdate of Tracey Elizabeth McSween
  ?person1 dbo:name ""Tracey Elizabeth McSween""@en .
  ?person1 dbo:birthDate ?birthdate .

  # Find athlete and soccer player with the same birth date born in Zolotonosha
  ?athlete dbo:birthDate ?birthdate ;
           dbo:sport dbr:Soccer ;
           dbo:placeOfBirth dbr:Zolotonosha .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
328,62,test,Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Budapest .
  ?person dbo:award ?award .
  FILTER (
    EXISTS { ?award dbo:name ""Commander's Award for the Volcano and Ryukyu Islands Campaign"" } ||
    EXISTS { ?award dbo:name ""Order of Victory"" }
  ).
  ?person dbo:leaderOf dbr:People%27s_Commissariat_of_Defence_of_the_Soviet_Union .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
528,37,test,Give me the war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?force 
WHERE {
  VALUES ?campero { dbr:Narciso_Campero }
  
  ?campero dbo:commanderOf ?war .
  OPTIONAL { ?campero dbo:workFor ?force . }

  FILTER (isLiteral(?war) && isLiteral(?force))
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
378,71,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/commander> ?v8 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v7 . ?v8 <http://dbpedia.org/ontology/knownFor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Identify Carl Pontus Gahn's birth name
SELECT ?birthName WHERE {
    dbr:C._P._Gahn dbo:birthName ?birthName .
}

# Step 2: Find the war associated with his birth name
SELECT DISTINCT ?war WHERE {
    ?person dbo:birthName ?birthName .
    ?person dbo:claimToFame ?war .
    FILTER(?birthName = ""Carl Pontus Gahn"") # Replace with actual birth name from step 1
}

# Step 3: Determine Thomas Trigge's claim to fame
SELECT DISTINCT ?conflict WHERE {
    dbr:Thomas_Trigge dbo:claimToFame ?conflict .
    FILTER(?conflict rdf:type dbo:MilitaryConflict || ?conflict rdf:type dbo:SocietalEvent)
}

# Step 4: Identify the commander in the Peninsular War and another war
SELECT DISTINCT ?anotherWar WHERE {
    ?commander dbo:commanded ?peninsularWar .
    ?peninsularWar rdfs:label ""Peninsular War""@en .
    ?commander dbo:commanded ?anotherWar .
    FILTER(?anotherWar rdf:type dbo:MilitaryConflict)
}
```",9,13,10,3,3,3,3,71,0,0,2,0,0.0,0
528,38,test,Give me the war of the commander in Battle of La Rinconada de Ate and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the commander in the Battle of La Rinconada de Ate
SELECT ?commander WHERE {
  ?battle dbo:wikiPageRedirects dbr:Battle_of_La_Rinconada_de_Ate .
  ?battle dbo:commander ?commander .
}

UNION

# Query for information about Narciso Campero Leyes
SELECT ?person ?description WHERE {
  ?person rdfs:label ""Narciso Campero Leyes""@en .
  ?person dbo:description ?description .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
404,45,test,Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Step 1: Identify Prince Ernest Augustus of Hanover born in 1914
  ?prince a dbo:Person ;
          dbo:birthDate ?birthDate ;
          rdfs:label ""Prince Ernest Augustus of Hanover""@en .
  
  FILTER (YEAR(?birthDate) = 1914)

  # Step 2: Determine his parent
  ?parent dbo:child ?prince .

  # Step 3: Find Princess Victoria Louise of Prussia's spouse
  ?vl dbr:Princess_Victoria_Louise_of_Prussia ;
      dbo:spouse ?spouse .

  # Step 4: Identify the father of this spouse
  ?father dbo:child ?spouse .

  # Step 5: Determine the child of this father
  ?child dbo:parent ?father .

  # Step 6: Ensure the entity is both a parent of Prince Ernest Augustus and a child of the father of Princess Victoria Louise's spouse
  FILTER (?parent = ?child)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
659,36,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in German campaign of 1813.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
    ?campaign a dbo:MilitaryConflict ;
              dbo:commander dbr:Rutger_Jan_Schimmelpenninck ;
              rdfs:label ""German campaign of 1813""@en .
    
    ?campaign dbo:militaryForce ?militaryForce .
}
```",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
488,22,test,Give me the administration of the father of Emperor Go-Mizunoo and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for the administration of Toyotomi Hideyori (father of Emperor Go-Mizunoo)
SELECT ?administration WHERE {
  wd:Q12345 dbo:positionHeld ?administration .
}
```

```sparql
# Query for the birthplace of Enomoto Takeaki
SELECT ?birthPlace WHERE {
  wd:Q67890 dbo:birthPlace ?birthPlace .
}
```

Note:
- `wd:Q12345` is a placeholder for the DBpedia entity ID of Toyotomi Hideyori. You would need to replace it with the actual QID from DBpedia.
- `wd:Q67890` is a placeholder for the DBpedia entity ID of Enomoto Takeaki. Similarly, this should be replaced with the correct QID.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,36,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?institutionLabel ?nickname
WHERE {
  ?institution a dbo:EducationalInstitution ;
               dbp:country ""Northern Ireland"" ;
               dbo:almaMater dbr:John_Alderdice ;
               rdfs:label ?institutionLabel .
  OPTIONAL { ?institution dbo:nickname ?nickname }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,61,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedent ?warCommander
WHERE {
  # Step 1: Find the capital of Khemis Miliana District
  dbr:Khemis_Miliana_District dbo:capital ?capital .
  
  # Step 2: Find a person who died at this capital
  ?personDecedent dbo:decedentAtLocation ?capital ;
                 rdf:type dbo:Person .

  # Step 3: Identify the commander in Battle of Verdun
  dbr:Battle_of_Verdun dbo:commanderInBattle ?verdunCommander .
  
  # Step 4: Find a person who was a commander in a war involving this commander
  ?warCommander dbo:involvedIn ?militaryConflict ;
               rdf:type dbo:Person .
  ?militaryConflict dbo:commanderInBattle ?verdunCommander .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
54,26,test,Give me the parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?finalParent
WHERE {
  # Step 1: Find Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Person ;
               foaf:name ""Thado Minsaw""@en .

  # Step 2: Find the parent of Thado Minsaw
  ?parentOfThadoMinsaw dbo:child ?thadoMinsaw .

  # Step 3: Find the child of this parent
  ?childOfParent a dbo:Person ;
                 dbo:parent ?parentOfThadoMinsaw .

  # Step 4: Find the parent of this child
  ?finalParent dbo:child ?childOfParent .
}
```",3,3,4,3,1,3,3,71,0,3,2,0.0,0.0,0
959,71,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/manager> ?v7 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v8 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member
WHERE {
  # Step 1: Identify the politician leader from 2010 Japanese House of Councillors election
  ?politician dbo:birthYear ""1958""^^xsd:gYear ;
              a dbo:Politician ;
              dbo:nationality dbr:Japan .

  # Step 2: Find the manager of the 1998 Kashima Antlers season
  ?manager dbo:occupation dbr:Sports_manager ;
           dbo:managedTeam dbr:Kashima_Antlers_season_1998 .

  # Step 3: Link the sports manager to an educational institution
  ?institution dbo:type dbr:University ;
               dbo:type dbr:Educational_institution ;
               dbo:type dbr:Organisation ;
               dbo:nationality dbr:Japan ;
               dbo:alumni ?manager .

  # Step 4: Identify a member of this alma mater
  ?member dbo:almaMater ?institution .
}
```",9,16,10,3,3,3,3,71,0,0,3,0,0.0,0
959,68,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://dbpedia.org/property/residence> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?manager WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?politician dbo:nationality dbr:Japan ;
              dbo:birthDate ?birthDate ;
              dbo:almaMater ?university .
  
  FILTER (YEAR(?birthDate) = 1958)
  
  # Step 2: Find the alma mater that is both an organization and an educational institution
  ?university a dbo:University ;
             a dbo:Organisation .

  # Step 3: Identify Takashi Sekizuka's team manager who is also associated with this university
  ?teamManager dbo:almaMater ?university .
  
  ?takashiSekizukaTeam dbo:manager ?teamManager .
  dbr:Takashi_Sekizuka dbo:memberOf ?takashiSekizukaTeam .

}
```",8,14,9,3,3,3,3,71,0,0,3,0,0.0,0
232,38,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find Sean Pertwee's claim to fame (film or military conflict)
  VALUES (?pertweeFame) { 
    dbr:The_Secret_History_of_the_Kings
    dbr:Battle_of_Britain
  }
  
  # Check if Sean Pertwee is associated with the film or military conflict
  ?pertweeFame dbo:actor dbr:Sean_Pertwee .
  
  # Find actors involved in the same film or military conflict
  ?pertweeFame dbo:actor ?actor .

  FILTER(?actor != dbr:Sean_Pertwee)

  # Find Sylvie Bermann's native place (British settlement)
  dbr:Sylvie_Bermann dbo:nativePlace ?nativePlace .
  
  # Ensure the native place is a British settlement
  ?nativePlace rdf:type dbo:Settlement ;
               dbo:country dbr:United_Kingdom .

  # Check if the actor has any connection to the British settlement (optional, for additional context)
  OPTIONAL {
    ?actor dbo:nativePlace ?nativePlace .
  }
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
378,21,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
# Query for the war associated with Carl Pontus Gahn
SELECT ?war WHERE {
  ?person dbo:birthName ""Carl Pontus Gahn""@en .
  ?person dbo:participatedIn ?war .
}

UNION

# Query for the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?fame WHERE {
  ?person rdfs:label ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
  ?person dbo:notableWork ?fame .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
54,65,test,"Give me the child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Step 1: Find Soe Min Wimala Dewi's father and his child
  ?soeMinWimalaDewi dbo:parent ?fatherOfSoeMinWimalaDewi .
  ?fatherOfSoeMinWimalaDewi dbo:child ?childOfFather .

  # Step 2: Find Thado Minsaw of Prome's parent and their child
  ?thadoMinsaw dbr:Prome dbo:parent ?parentOfThadoMinsaw .
  ?parentOfThadoMinsaw dbo:child ?childOfParent .

  # Step 3: Find Thihapate of Mohnyin's child and its predecessor
  ?thihapate dbr:Mohnyin dbo:child ?childOfThihapate .
  ?predecessor dbo:succeededBy ?childOfThihapate .

  # Combine the elements to find a common entity
  FILTER (?childOfFather = ?parentOfChild && ?parentOfChild = ?predecessor)

  # Step 4: Ensure the entity is an office holder and royalty
  ?entity rdf:type dbo:OfficeHolder .
  ?entity rdf:type dbo:Royalty .

  # Link the common entity to the conditions
  ?childOfFather rdfs:label ?entityLabel .
  FILTER (CONTAINS(LCASE(?entityLabel), ""soe min wimala dewi"") || CONTAINS(LCASE(?entityLabel), ""thado minsaw"") || CONTAINS(LCASE(?entityLabel), ""thihapate""))
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
645,18,test,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock and alma mater of the child of Richard Pankhurst.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Step 1: Find the commander in Battle of Diamond Rock
SELECT ?commander WHERE {
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Diamond Rock""@en .
}

# Step 2: Determine the residence country of the commander
SELECT DISTINCT ?country WHERE {
  ?commander dbo:residenceLocation ?location .
  ?location rdf:type dbo:Country .
  ?location rdfs:label ?country .
  
  # Assuming we have identified the commander from step 1, replace <Commander_URI> with actual URI
  FILTER(?commander = <Commander_URI>)
}

# Step 3: Find Richard Pankhurst's child and their alma mater
SELECT DISTINCT ?almaMater WHERE {
  ?child dbo:parent ?richardPankhurst .
  ?richardPankhurst rdfs:label ""Richard Pankhurst""@en .
  
  ?child dbo:almaMater ?almaMater .
}

# Step 4: Find the common entity between residence country and alma mater
SELECT DISTINCT ?entity WHERE {
  VALUES (?entity) { (<Country_URI>), (<Alma_Mater_URI>) }
}
```

Note: Replace `<Commander_URI>`, `<Country_URI>`, and `<Alma_Mater_URI>` with actual URIs obtained from the previous queries.",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
767,64,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Step 1: Find the writer of ""Where It's At"" from Dustin Lynch's album
SELECT ?writer WHERE {
  ?album dbo:title ""Where It's At""@en .
  ?album dbo:artist dbr:Dustin_Lynch .
  ?song dbo:lyricsBy ?writer .
  ?song dbo:partOfAlbum ?album .
}

# Step 2: Find Carl L. Nippert's alma mater
SELECT ?almaMater WHERE {
  ?person foaf:name ""Carl L. Nippert""@en .
  ?person dbo:almaMater ?almaMater .
}

# Step 3: Identify Matthew Burland's alter ego (fictional character)
SELECT ?alterEgo WHERE {
  ?person foaf:name ""Matthew Burland""@en .
  ?person dbo:fictionalCharacter ?alterEgo .
}

# Step 4: Find the entity in administration and settlement
SELECT DISTINCT ?entity WHERE {
  # Assuming we have found ?writer, ?almaMater, and ?alterEgo from previous queries
  VALUES (?writer ?almaMater ?alterEgo) { (dbr:Writer dbr:Alma_Mater dbr:Fictional_Character) } # Replace with actual URIs

  ?entity dbo:administration ?writer .
  ?entity dbo:settlementType dbr:Settlement .
  
  OPTIONAL {
    ?entity dbo:relatedTo ?almaMater .
  }
  
  OPTIONAL {
    ?entity dbo:relatedTo ?alterEgo .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
528,55,test,Give me the force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query 1: Narciso Campero Leyes' military force or rank
SELECT ?force WHERE {
  ?person a dbo:Person ;
          foaf:name ""Narciso Campero Leyes"" .
  OPTIONAL { ?person dbo:militaryRank ?rank . }
  OPTIONAL { ?person dbo:memberOfMilitaryOrganization ?force . }
}

# Query 2: War of the Battle of Pisagua and military forces involved
SELECT DISTINCT ?war ?militaryForce WHERE {
  ?battle a dbo:MilitaryEngagement ;
          foaf:name ""Battle of Pisagua"" .
  ?battle dbo:partOfWar ?war .
  OPTIONAL { ?battle dbo:militaryForce1 ?militaryForce . }
  OPTIONAL { ?battle dbo:militaryForce2 ?militaryForce . }
}

# Query 3: Commander in the Battle of La Rinconada de Ate
SELECT DISTINCT ?commander WHERE {
  ?battle a dbo:MilitaryEngagement ;
          foaf:name ""Battle of La Rinconada de Ate"" .
  OPTIONAL { ?battle dbo:commander1 ?commander . }
  OPTIONAL { ?battle dbo:commander2 ?commander . }
}
```",6,6,7,2,3,3,3,71,0,0,2,0,0.0,0
427,67,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Query for Romano Prodi's birth name and party
SELECT ?birthName ?party WHERE {
  VALUES ?prodi { dbr:Romano_Prodi }
  ?prodi dbo:birthName ?birthName .
  ?prodi dbo:party ?party .
}

UNION

# Query for the father of an MIT alumnus who is a politician and associated with Partito Popolare Italiano
SELECT ?fatherParty WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
           rdf:type dbo:Politician .
  ?alumnus dbo:parent ?father .
  ?father dbo:party ?fatherParty .
  FILTER EXISTS { ?father foaf:name ?name . FILTER regex(?name, ""Partito Popolare Italiano"", ""i"") }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
177,8,test,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik and entity in South Korea.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/location> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?headquarters WHERE {
  ?person foaf:name ""Joo Don-sik""@en.
  ?person dbo:memberOf|dbo:employer ?organisation.
  ?organisation dbp:headquarters ?headquarters.
  ?headquarters dbp:country ""South Korea"".
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
328,54,test,"Give me the commander in the force of the person decedent at Budapest and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:commanderInForce dbr:Budapest_offensive_(1944) .
  ?person dbo:leaderOf dbr:People's_Commissariat_of_Defence_of_the_Soviet_Union .
  ?person dbo:awardee dbr:Order_of_the_Bath .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
547,56,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of Simon Cadell and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeRestingPlace ?simonCadellRestingPlace ?childRestingPlace WHERE {
  # Gerald Graham's award awardee
  OPTIONAL {
    ?award dbo:recipient ?awardee .
    ?award dbo:holder dbr:Gerald_Graham .
    ?awardee dbo:deathPlace ?awardeeRestingPlace .
  }

  # Simon Cadell's resting place
  dbr:Simon_Cadell dbo:deathPlace ?simonCadellRestingPlace .

  # Child of James Burton (property developer)
  OPTIONAL {
    ?jamesBurton a dbo:Person ;
                 foaf:name ""James Burton"" ;
                 dbo:description ?description .
    FILTER(CONTAINS(LCASE(?description), ""property developer""))
    
    ?child dbo:parent ?jamesBurton ;
           dbo:deathPlace ?childRestingPlace .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
783,16,test,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng and associated musical artist of the band member of Ofori Amponsah.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?priscillaBandMember ?oforiBandMember WHERE {
  # Identify Priscilla Opoku-Kwarteng
  ?priscilla a dbo:Person ;
             foaf:name ""Priscilla Opoku-Kwarteng"" ;
             dbo:birthDate ?birthDate ;
             dbo:musicalArtist ?musicalArtist1 .
  
  # Ensure she is an artist and musical artist
  FILTER EXISTS { ?musicalArtist1 a dbo:MusicalArtist }
  
  # Find her band member
  ?priscillaBandMember dbo:bandMember ?priscilla .

  # Identify Ofori Amponsah
  ?ofori a dbo:Person ;
         foaf:name ""Ofori Amponsah"" ;
         dbo:musicalArtist ?musicalArtist2 .
  
  # Ensure he is a musical artist
  FILTER EXISTS { ?musicalArtist2 a dbo:MusicalArtist }
  
  # Find his band members
  ?oforiBandMember dbo:bandMember ?ofori .

  # Check for association between Priscilla's and Ofori's band members
  OPTIONAL {
    ?priscillaBandMember dbp:associatedWith ?oforiBandMember .
  }
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
827,19,test,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859) and father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?father WHERE {
  # Step 1: Find Maria Pavlovna's children who are royalty
  ?child1 dbo:parent dbr:Grand_Duchess_Maria_Pavlovna_of_Russia ;
         rdf:type dbo:RoyalFamilyMember .

  # Step 2: Find a child of one of her royal children who is also royalty
  ?grandChild dbo:parent ?child1 ;
              rdf:type dbo:RoyalFamilyMember .

  # Step 3: Identify Princess Pauline's spouse who is royalty
  ?spouse dbo:spouse dbr:Princess_Pauline_of_Saxe-Weimar-Eisenach ;
          rdf:type dbo:RoyalFamilyMember .

  # Step 4: Find a child of her royal spouse who is royalty
  ?child2 dbo:parent ?spouse ;
          rdf:type dbo:RoyalFamilyMember .

  # Step 5: Determine the father of this child
  ?father dbo:child ?child2 .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
747,46,test,"Give me the band of the writer of Apollo (Hardwell song) and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
# Step 1: Identify the writer of ""Apollo"" by Hardwell
SELECT ?writer WHERE {
  ?song dbo:title ""Apollo""@en .
  ?song dbo:artist <http://dbpedia.org/resource/Hardwell> .
  ?song dbo:lyricist ?writer .
}

# Step 2: Determine the band associated with this writer
SELECT DISTINCT ?band WHERE {
  ?writer dbo:musicBand ?band .
}

# Step 3: Find a person born on the same date as the decedent
SELECT DISTINCT ?person WHERE {
  ?decedent dbo:deathDate ?date .
  ?person dbo:birthDate ?date .
  FILTER EXISTS { ?person rdf:type dbo:Person }
}

# Step 4: Identify an athlete and soccer player from Zolotonosha
SELECT DISTINCT ?athlete WHERE {
  ?athlete dbo:sport dbr:Soccer .
  ?athlete dbo:nationality <http://dbpedia.org/resource/Ukraine> .
  ?athlete dbo:birthPlace <http://dbpedia.org/resource/Zolotonosha> .
  FILTER EXISTS { ?athlete rdf:type dbo:Athlete }
}

# Step 5: Combine information
SELECT DISTINCT ?band ?person WHERE {
  # Assuming we have the writer's URI from step 1 and athlete's URI from step 4
  ?writer dbo:musicBand ?band .
  ?decedent dbo:deathDate ?date .
  ?person dbo:birthDate ?date .
  FILTER EXISTS { ?person rdf:type dbo:Person }
  ?athlete dbo:sport dbr:Soccer .
  ?athlete dbo:nationality <http://dbpedia.org/resource/Ukraine> .
  ?athlete dbo:birthPlace <http://dbpedia.org/resource/Zolotonosha> .
  FILTER EXISTS { ?athlete rdf:type dbo:Athlete }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
701,61,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the child of Seti I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?battle dbo:commander ?commander .
  FILTER(CONTAINS(LCASE(STR(?battle)), ""perire"")) .

  ?father dbo:child ?commander ;
          a dbo:Person .

  ?spouse dbo:spouse ?father ;
          a dbo:RoyalFamilyMember .  # Assuming 'dbo:RoyalFamilyMember' is the class for royalty

  ?setiI dbr:Seti_I .
  ?grandChild1 dbo:child ?parent1 ;
               dbo:child ?setiI .

  ?grandChild2 dbo:child ?parent2 ;
               dbo:child ?grandChild1 .

  FILTER(?spouse = ?parent1 || ?spouse = ?parent2)
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
44,9,test,"Give me the band member of the associated musical artist, that is a group and an organisation, of Queensrÿche and band member of the band of John Pettibone.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedBand
WHERE {
  # Find members of Queensrÿche
  ?member dbo:bandMember dbr:Queensrÿche .
  
  # Check if the member is part of an organization or group
  OPTIONAL { ?member dbo:memberOf ?organization . FILTER (isLiteral(?organization) || ?organization != dbr:Queensrÿche) }
  
  # Find bands associated with John Pettibone
  ?band dbo:bandMember dbr:John_Pettibone .
  
  # Check if the member is also part of this band
  ?member dbo:bandMember ?band .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
378,48,test,Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?eliottClaimToFame ?gahnClaimToFame
WHERE {
  # George Augustus Eliott's claim to fame related to the Great Siege of Gibraltar
  dbr:George_Augustus_Eliott dbo:notableWork ?eliottClaimToFame .
  
  # Karl Pontus Gahn's birth name and his notable work
  dbr:Karl_Pontus_Gahn dbo:birthName ""Karl Pontus Gahn""@en ;
                      dbo:notableWork ?gahnClaimToFame .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
996,17,test,Give me the force of Dagobert Sigmund von Wurmser and entity in the award of the native of Palestine (region).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?wurmserForce ?award ?palestineEntity
WHERE {
  # Dagobert Sigmund von Wurmser's military rank or title
  dbr:Dagobert_Sigmund_von_Wurmser dbo:militaryRank ?wurmserForce .
  
  # Any awards received by Wurmser
  OPTIONAL { dbr:Dagobert_Sigmund_von_Wurmser dbo:award ?award . }
  
  # Entity from Palestine (region) connected through an award
  ?palestineEntity a dbo:Person ;
                  dbo:nationality dbr:Palestinian_people ;
                  dbo:award ?award .
}
```",4,4,5,3,2,3,2,20,0,0,4,0,0.0,0
9,67,test,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?nickname ?medalAwardee WHERE {
  # Identify John Alderdice's alma mater
  dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMater .
  
  # Get the nickname of the alma mater
  OPTIONAL { ?almaMater rdfs:label ?nickname FILTER (lang(?nickname) = 'en') . }
  
  # Ensure the institution is in Northern Ireland
  ?almaMater dbo:location dbr:Northern_Ireland .
  
  # Find a connection to Royal Medals through notable alumni
  OPTIONAL {
    ?almaMater dbo:notableAlumni ?medalAwardee .
    ?medalAwardee dbo:award dbr:Royal_Medals .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
838,18,test,"Give me the band member of the band, that is a group, of YU Grupa and band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?yuGrupaMember ?zikaBandMember 
WHERE {
  # Find band members of YU Grupa
  ?yuGrupa dbr:YU_Grupa .
  ?yuGrupa dbo:bandMember ?yuGrupaMember .

  # Find the band associated with Žika Jelić
  ?zikaJelic dbr:Žika_Jelić .
  ?zikaJelic dbo:musicalArtist ?zikaBand .
  
  # Ensure it's a band and group
  ?zikaBand rdf:type dbo:Band .

  # Find band members of Žika Jelić's band
  ?zikaBand dbo:bandMember ?zikaBandMember .
}
```",5,10,6,3,2,3,2,20,0,0,5,0,0.0,0
427,18,test,Give me the party of Giulio Andreotti and party of Romano Prodi and reference to Partito Popolare Italiano.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?andreottiParty ?prodiParty ?ppiReference
WHERE {
  # Giulio Andreotti's party affiliations
  OPTIONAL { 
    dbr:Giulio_Andreotti dbo:partyAffiliation ?andreottiParty .
  }
  
  # Romano Prodi's party affiliations
  OPTIONAL { 
    dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
  }

  # Reference to Partito Popolare Italiano
  OPTIONAL {
    dbr:Partito_Popolare_Italiano ?ppiReference .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
767,49,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?settlement WHERE {
  # Find the alter ego (fictional character) of Matthew Burland
  OPTIONAL { 
    dbr:Matthew_Burland dbo:alterEgo ?alterEgo .
  }
  
  # Find the settlement associated with Green
  OPTIONAL {
    ?greenEntity rdfs:label ""Green""@en .
    ?greenEntity dbo:administrativeUnit ?settlement .
  }
}
```",5,7,6,3,2,3,3,71,0,0,7,0,0.0,0
488,47,test,"Give me the birth place of the commander in Boshin War and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Identify Matsudaira Tadamasa's father
SELECT ?father WHERE {
    dbr:Matsudaira_Tadamasa dbo:father ?father .
}

# Step 2: Verify the office holder role of Matsudaira Tadamasa's father (if needed)
# This step might involve checking additional properties or roles if available in DBpedia.

# Step 3: Identify the politician (Matsudaira Tadamasa's grandfather)
SELECT ?grandfather WHERE {
    ?father dbo:father ?grandfather .
    # Optionally, check for a property indicating he was a politician
}

# Step 4: Find the birth place of the commander in Boshin War
SELECT ?commanderBirthPlace WHERE {
    ?commander rdf:type dbo:MilitaryPerson ;
               dbo:militaryConflict dbr:Boshin_War .
    ?commander dbo:birthPlace ?commanderBirthPlace .
}

# Step 5: Find the death place of Matsudaira Tadamasa's grandfather (the politician)
SELECT ?grandfatherDeathPlace WHERE {
    ?grandfather dbo:deathPlace ?grandfatherDeathPlace .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
492,71,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v4 . ?v7 <http://dbpedia.org/ontology/capital> ?v8 . ?result <http://dbpedia.org/ontology/deathPlace> ?v8 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v7 . },"```sparql
# Step 1: Find the capital of Khemis Miliana District
SELECT ?capital WHERE {
    ?district dbo:country dbr:Algeria .
    ?district rdfs:label ""Khemis Miliana District""@en .
    ?district dbo:administrativeCapital ?capital .
}

# Step 2: Find person decedent at this capital
SELECT DISTINCT ?person WHERE {
    ?person dbo:deceasedAtLocation ?capital .
    FILTER(?capital IN (<capital_uri>)) # Replace <capital_uri> with the actual URI found in step 1
}

# Step 3: Find the author of ""French Algeria""
SELECT ?author WHERE {
    ?work dbo:title ""French Algeria""@en .
    ?work dbo:author ?author .
}

# Step 4: Find person decedent at this work
SELECT DISTINCT ?person WHERE {
    ?person dbo:deceasedAtLocation ?work .
    FILTER(?work IN (<work_uri>)) # Replace <work_uri> with the actual URI found in step 3
}

# Step 5: Find the commander in the Battle of Verdun
SELECT ?commander WHERE {
    ?battle dbo:name ""Battle of Verdun""@en .
    ?battle dbo:commander ?commander .
}

# Step 6: Find person decedent at this commander's work
SELECT DISTINCT ?person WHERE {
    ?person dbo:deceasedAtLocation ?work .
    ?work dbo:creator ?commander .
    FILTER(?commander IN (<commander_uri>)) # Replace <commander_uri> with the actual URI found in step 5
}

# Step 7: Combine all conditions to find the person satisfying all criteria
SELECT DISTINCT ?person WHERE {
    VALUES (?capital ?work ?commander) {(<capital_uri> <work_uri> <commander_uri>)} # Replace URIs from previous steps

    OPTIONAL { ?person dbo:deceasedAtLocation ?capital }
    OPTIONAL { ?person dbo:deceasedAtLocation ?work }
    OPTIONAL { ?person dbo:deceasedAtLocation ?work2 . ?work2 dbo:creator ?commander }

    FILTER(?person != null)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
328,43,test,Give me the commander in the force of the person decedent at Budapest and awardee of Order of Suvorov and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:commanderOf dbr:Budapest_offensive_(1945) .
  ?person dbo:awardeeOf dbr:Order_of_Suvorov .
  ?person dbo:leaderOf dbr:Ministry_of_Defence_(Soviet_Union) .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
378,43,test,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War and war of Carl Pontus Gahn.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?claimToFame ?peninsularWar ?otherWar
WHERE {
  ?crillon a dbo:Person ;
           foaf:name ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en ;
           dbo:claimToFame ?claimToFame .

  ?peninsularWar rdfs:label ?labelPeninsularWar .
  FILTER(CONTAINS(LCASE(?labelPeninsularWar), ""peninsular war"") && LANGMATCHES(LANG(?labelPeninsularWar), ""en""))
  ?crillon dbo:participatedIn ?peninsularWar .

  ?gahn a dbo:Person ;
        foaf:name ""Carl Pontus Gahn""@en .
  ?otherWar rdfs:label ?labelOtherWar .
  FILTER(CONTAINS(LCASE(?labelOtherWar), ""war"") && LANGMATCHES(LANG(?labelOtherWar), ""en""))
  ?gahn dbo:participatedIn ?otherWar .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
365,9,test,"Give me the reference to the real name of The Blasters and band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?memberName ?bandName WHERE {
  # Part 1: Get real names of The Blasters' members
  ?blasterBand a dbo:Band ;
               foaf:name ""The Blasters"" .
  
  ?member dbo:memberOf ?blasterBand ;
          foaf:name ?memberName .

  # Part 2: Find bands associated with an artist who is a vocalist, musician, and songwriter
  ?artist a dbo:MusicalArtist ;
          dbo:vocalist ?band ;
          dbo:musician ?band ;
          dbo:songwriter ?band .
  
  ?band foaf:name ?bandName .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
617,20,test,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland and child of the child, that is a royalty, of the parent of Mlada (abbess).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?v4 <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?parentOfFather
WHERE {
  # Step 1: Identify Mlada (abbess) and her parent
  ?mlada a dbo:Apostle ; 
         dbo:parent ?parentMlada .
  
  FILTER EXISTS { ?parentMlada rdf:type dbo:Person . }
  
  # Step 2: Find the child of Mlada's parent who is royalty
  ?childOfParentMlada dbo:parent ?parentMlada ;
                      rdf:type dbo:Monarch .

  # Step 3: Identify Richeza of Poland and her reference that is royalty
  ?richeza a dbo:Person ; 
           rdfs:label ""Richeza of Poland""@en .
  
  ?referenceRicheza dbo:spouse ?richeza ;
                    rdf:type dbo:Monarch .

  # Step 4: Find Richeza's father and his parent who is royalty
  ?fatherRicheza dbo:child ?richeza ;
                 rdf:type dbo:Person .
  
  ?parentFatherRicheza dbo:child ?fatherRicheza ;
                       rdf:type dbo:Monarch .

  # Step 5: Find the common entity that fits all criteria
  ?parentOfFather dbo:child ?fatherRicheza ;
                  rdf:type dbo:Monarch .
  
  FILTER (?parentOfFather = ?referenceRicheza)
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
392,23,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v2 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?province ?country
WHERE {
  # Find Sebastiano Bianchetti's residence in an Italian settlement
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti"" .
  
  ?residence dbo:resident ?person ;
             dbo:location dbr:Italy ;
             dbo:administrativeArea ?province .

  # Ensure the province is part of a region with CET timezone
  ?region dbo:timeZone dbr:Central_European_Time ;
          dbo:country ?country .
  
  ?province dbo:partOf ?region .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
767,33,test,Give me the entity in Baden-Württemberg and alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInBadenWurttemberg ?almaMater
WHERE {
  ?nash a dbo:Person ;
        foaf:name ""George Kilbon Nash"" .
  
  ?nash dbo:location ?entityInBadenWurttemberg .
  ?entityInBadenWurttemberg dbo:country dbr:Germany ;
                            dbo:stateOrProvince dbr:Baden-Württemberg .

  ?nash dbo:almaMater ?almaMater .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
838,19,test,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?otherBand
WHERE {
  # Identify YU Grupa
  dbr:YU_Grupa a dbo:MusicalGroup .

  # Find band members of YU Grupa who are also artists and musical artists
  ?member dbo:bandMember dbr:YU_Grupa .
  ?member a dbo:Artist ;
          a dbo:MusicalArtist .

  # Identify other bands these members belong to
  ?member dbo:bandMember ?otherBand .
}
```",5,10,6,3,2,3,2,20,0,0,5,0,0.0,0
492,27,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName WHERE {
  # Find the capital settlement of Khemis Miliana District
  ?capital a dbo:PopulatedPlace ;
           dbo:country dbr:Algeria ;
           rdfs:label ""Khemis Miliana""@en .
  
  # Find persons who died in this capital
  ?person dbo:deathPlace ?capital ;
          a dbo:Person ;
          foaf:name ?personName .
}
```",3,4,4,3,1,3,3,71,0,0,122,0,0.0,0
328,34,test,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find the leader of People's Commissariat of Defense
  ?defenseLeader dbo:leader dbr:Joseph_Stalin .
  
  # Find individuals awarded in both campaigns
  ?person dbo:award ?volcanoAward .
  ?person dbo:award ?ryukyuAward .

  # Ensure awards are related to the Volcano and Ryukyu Islands campaigns
  ?volcanoAward dbo:campaign dbr:Volcano_Islands_campaign .
  ?ryukyuAward dbo:campaign dbr:Ryukyu_Islands_campaign .

  # Check if the leader is also the awardee
  FILTER (?person = ?defenseLeader)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
391,58,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Native of Compton, California
  ?person dbo:nativePlace dbr:Compton,_California .

  # Actor in Michael Ballhaus's notable work
  ?work dbo:director dbr:Michael_Ballhaus .
  ?work dbo:actor ?person .

  # Actor in a movie that is also a TV series
  ?movie dbo:basedOn ?book .
  ?tvSeries dbo:basedOn ?book .
  ?movie dbo:actor ?person .
  ?tvSeries dbo:actor ?person .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
617,22,test,Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfAntiochus ?grandChild ?parentOfGrandChild
WHERE {
  # Find Antiochus III the Great
  ?antiochusIII a dbo:Person ;
               foaf:name ""Antiochus III""@en ;
               dbo:spouse ?spouse .

  # Find his son named Antiochus
  ?sonOfAntiochusIII a dbo:Person ;
                    foaf:name ""Antiochus""@en ;
                    dbo:parent ?antiochusIII ;
                    dbo:child ?childOfAntiochus .

  # Find the children of this Antiochus (grandchildren of Antiochus III)
  ?childOfAntiochus a dbo:Person ;
                   dbo:parent ?sonOfAntiochusIII ;
                   dbo:child ?grandChild .

  # Determine the parent of these grandchildren
  ?grandChild dbo:parent ?parentOfGrandChild .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
142,9,test,Give me the birthplace of the actor of Papa wa Newscaster and entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?birthPlace WHERE {
  ?production dbo:character ""Papa wa Newscaster""@en .
  ?production dbo:actor ?actor .
  
  ?actor dbo:birthPlace ?birthPlace .

  # Assuming we have a way to identify regions under Japan Standard Time
  OPTIONAL { 
    ?birthPlace dbo:timeZone dbr:Japan_Standard_Time .
  }
}
```",4,4,5,2,2,2,2,9,0,0,2,0,0.0,0
915,20,test,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?resident WHERE {
  # Step 1: Identify Lizzie Spaulding
  ?lizzie a dbo:FictionalCharacter ;
          rdfs:label ""Lizzie Spaulding""@en .
  
  # Step 2: Find the Parent of Lizzie Spaulding
  ?parent dbo:child ?lizzie ;
          a dbo:FictionalCharacter, dbo:SoapOperaCharacter .

  # Step 3: Identify the Child of This Parent
  ?child dbo:parent ?parent ;
         a dbo:FictionalCharacter, dbo:SoapOperaCharacter .
  
  # Step 4: Find the Director of Pipe Dreams (1976 film)
  dbr:Pipe_Dreams_1976_Film dbo:director ?director .

  # Step 5: Determine the Birthplace of the Director
  ?director dbo:birthPlace ?settlement ;
            a dbo:Settlement .
  
  # Step 6: Identify the Resident of This Settlement
  ?resident dbo:residence ?settlement .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
328,67,test,"Give me the awardee of Order of Suvorov and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in the force of the person decedent at Budapest.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee WHERE {
  # Find Gustav Jonson and his leadership role
  ?gustavJonson a dbo:OfficeHolder ;
                foaf:name ""Gustav Jonson"" ;
                dbo:leaderOf ?governmentAgency .

  # Identify the awardee of Order of Suvorov
  ?awardee dbo:awardReceived dbr:Order_of_Suvorov .

  # Check if this awardee is a leader of a government agency led by Gustav Jonson
  ?awardee dbo:leaderOf ?governmentAgency .

  # Find any commander in force at Budapest related to the person decedent
  OPTIONAL {
    ?commander dbo:commanderInForceAtBudapest ?event .
    ?decedent dbo:commandedBy ?commander ;
              dbo:deathPlace dbr:Budapest .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
30,8,test,Give me the native of Paris and professional in the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nationality ?occupation
WHERE {
  dbr:Édouard_Alphonse_James_de_Rothschild 
    dbo:nationality ?nationality ;
    dbo:birthPlace dbr:Paris ;
    dbo:occupation ?occupation .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
547,57,test,Give me the resting place of James Burton (Egyptologist) and resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlaceJamesBurton ?restingPlaceActor ?restingPlaceKnightGrandCross

{
  # Resting place of James Burton (Egyptologist)
  {
    SELECT ?restingPlaceJamesBurton
    WHERE {
      dbr:James_Burton_(egyptologist) dbo:deathPlace ?place .
      OPTIONAL { ?place rdfs:label ?restingPlaceLabel . FILTER(LANG(?restingPlaceLabel) = ""en"") }
      BIND(COALESCE(?restingPlaceLabel, STR(?place)) AS ?restingPlaceJamesBurton)
    }
  }

  # Resting place of the actor from a show with Emily Richard
  {
    SELECT ?actor ?restingPlaceActor
    WHERE {
      ?show dbo:castMember dbr:Emily_Richard .
      ?show dbo:castMember ?actor .
      FILTER(?actor != dbr:Emily_Richard) .
      OPTIONAL { ?actor dbo:deathPlace ?place . }
      OPTIONAL { ?place rdfs:label ?restingPlaceLabel . FILTER(LANG(?restingPlaceLabel) = ""en"") }
      BIND(COALESCE(?restingPlaceLabel, STR(?place)) AS ?restingPlaceActor)
    }
  }

  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    SELECT ?person ?restingPlaceKnightGrandCross
    WHERE {
      ?person dbo:award dbr:Order_of_St_Michael_and_St_George .
      FILTER EXISTS { ?person dbo:honorificPrefix ""Knight Grand Cross"" }
      OPTIONAL { ?person dbo:deathPlace ?place . }
      OPTIONAL { ?place rdfs:label ?restingPlaceLabel . FILTER(LANG(?restingPlaceLabel) = ""en"") }
      BIND(COALESCE(?restingPlaceLabel, STR(?place)) AS ?restingPlaceKnightGrandCross)
    }
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
617,71,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v8 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antiochus IV Epiphanes (son of Antiochus III the Great)
  dbr:Antiochus_IV_Epiphanes dbo:father dbr:Antiochus_III_the_Great .
  
  # Successor to Antiochus IV Epiphanes
  ?successor dbo:succeededBy dbr:Antiochus_IV_Epiphanes .
  ?successor a dbo:Monarch .

  # Child of the successor (Demetrius I Soter)
  ?child dbo:parent ?successor .
  
  # Spouse of this child (Cleopatra Thea)
  ?spouse dbo:spouse ?child .
  ?spouse a dbo:Royalty .

  # Commander in Battle of Panium
  dbr:Battle_of_Panium dbo:commander dbr:Seleucus_III_Ceraunus .

  # Child of the commander (Antiochus IV Epiphanes)
  ?antiochusIV dbo:parent dbr:Seleucus_III_Ceraunus .
  
  # Child of this child (Antiochus VI Dionysus)
  ?antiochusVI dbo:parent ?antiochusIV .

  # Ensure the spouse is royalty
  FILTER (?child = dbr:Antiochus_VI_Dionysus && ?spouse = dbr:Cleopatra_Thea)
}
```",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
747,49,test,Give me the band of the person born as the persona of Shèna and person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personaBand ?sameBirthDatePersonBand WHERE {
  # Find the person known as ""the persona of Shèna""
  ?persona a dbo:Person ;
           rdfs:label ""Shèna""@en .
  
  # Get the band associated with this persona
  OPTIONAL { ?persona dbo:band ?personaBand . }
  
  # Find Pavlo Khudzik's birth date
  dbr:Pavlo_Khudzik dbo:birthDate ?pavloBirthDate .

  # Find another person born on the same date as Pavlo Khudzik
  ?sameBirthDatePerson a dbo:Person ;
                      dbo:birthDate ?pavloBirthDate .
  
  # Get the band associated with this person
  OPTIONAL { ?sameBirthDatePerson dbo:band ?sameBirthDatePersonBand . }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
115,9,test,Give me the alma mater of the awardee of National Order of Scientific Merit and alma mater of the alumnus of National University of San Marcos.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeAlmaMater ?alumnusAlmaMater WHERE {
  # Find the alma mater of an awardee of the National Order of Scientific Merit
  ?person dbo:award dbr:National_Order_of_Scientific_Merit .
  ?person dbo:almaMater ?awardeeAlmaMater .

  # Find the alma mater of an alumnus of the National University of San Marcos
  ?individual dbo:alumniOf dbr:National_University_of_San_Marcos .
  ?individual dbo:almaMater ?alumnusAlmaMater .
}
```",4,4,5,2,2,2,2,9,0,0,2,0,0.0,0
996,20,test,Give me the entity in the award of the native of Palestine (region) and force of the awardee of the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v1 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardEntity ?force
WHERE {
  # Step 1: Find a person native to Palestine
  ?person dbo:nationality dbr:Palestine .
  
  # Step 2: Identify the award received by this person
  ?person dbo:award ?award .

  # Step 3: Determine the entity in the award
  ?award dbo:category ?awardEntity .

  # Step 4: Find a person associated with Lac d'Avoriaz elevation
  ?otherPerson dbo:elevation dbr:Lac_d%27Avoriaz .
  
  # Step 5: Identify the force of this awardee
  ?otherPerson dbo:force ?force .
}
```",6,6,7,3,2,3,2,20,0,0,4,0,0.0,0
820,16,test,Give me the professional in the award of Scott McCloud and child of the parent of Jason Schwartzman.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Step 1: Find Scott McCloud's award
  dbr:Scott_McCloud dbo:award ?award .

  # Step 2: Identify the parent of Jason Schwartzman
  OPTIONAL { 
    dbr:Jason_Schwartzman dbo:child ?parent .
  }

  # Step 3: Determine child of that parent (i.e., sibling or another child)
  OPTIONAL {
    ?parent dbo:child ?sibling .
  }
  
  # Ensure the sibling is not Jason Schwartzman himself
  FILTER(?sibling != dbr:Jason_Schwartzman)

  # Step 4: Identify professional role of this individual
  ?sibling dbo:profession ?professional .
}
```",4,4,5,2,2,3,2,20,0,171,1,0.0,0.0,0
701,35,test,Give me the parent of the child of Nefertari and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfChild ?spouseOfFather WHERE {
  # Step 1: Identify Nefertari's child
  ?nefertari dbo:child ?child .
  VALUES ?nefertari {<http://dbpedia.org/resource/Nefertari>} .

  # Step 2: Find the parent of that child (should be Nefertari)
  ?parentOfChild dbo:child ?child .

  # Step 3: Identify Merneptah's father
  ?merneptah dbo:father ?father .
  VALUES ?merneptah {<http://dbpedia.org/resource/Merneptah>} .

  # Step 4: Determine the spouse of Merneptah's father
  ?spouseOfFather dbo:spouse ?father .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
767,46,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of the administration of George K. Nash.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Find the songwriter of ""Where It's At"" by Dustin Lynch
  ?song dcterms:title ""Where It's At""@en .
  ?song dbo:lyricsBy ?writer .

  # Find George K. Nash's alma mater
  dbr:George_K._Nash dbo:almaMater ?almaMater .

  # Link the administration through the alma mater
  ?administration dbo:member ?person .
  ?person dbo:almaMater ?almaMater .

  # Ensure the person is the writer of ""Where It's At""
  FILTER (?writer = ?person)

  # Find a settlement in this administration
  ?settlement dbo:partOf ?administration ;
              a dbo:Settlement .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
547,61,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorRestingPlace ?awardeeRestingPlace WHERE {
  # Part 1: Resting place of the actor from a show with Emily Richard
  ?show dbo:starring dbr:Emily_Richard .
  ?actor dbo:actorIn ?show ;
         dbo:deathPlace ?actorDeathPlace .
  OPTIONAL { ?actor dbo:burialPlace ?actorRestingPlace . }
  
  # Part 2: Resting place of the awardee associated with Gerald Graham
  ?award dbo:recipient ?awardee .
  ?gerald dbr:Gerald_Graham ;
          dbo:award ?award .
  OPTIONAL { ?awardee dbo:burialPlace ?awardeeRestingPlace . }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
54,67,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Identify Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .

  # Step 2: Find Thihapate's child who is an office holder and royalty
  ?child dbo:parent ?thihapate ;
         a dbo:Royalty, dbo:OfficeHolder .

  # Step 3: Identify the predecessor of this child
  ?predecessor dbo:successor ?child .

  # Step 4: Identify Thado Minsaw of Prome and his parent
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw of Prome""@en .
  ?parent dbr:Prome dbo:child ?thadoMinsaw .

  # Step 5: Find the child of this parent
  ?grandChild dbo:parent ?parent .

  # Step 6: Identify Thinkhaya of Pagan and his child
  ?thinkhaya a dbo:Person ;
             rdfs:label ""Thinkhaya of Pagan""@en .
  ?thinkhayaChild dbo:parent ?thinkhaya .

  # Step 7: Ensure the predecessor is related to both steps 3 and 6
  FILTER (?predecessor = ?grandChild || ?predecessor = ?thinkhayaChild)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
994,24,test,"Give me the band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member ?associatedArtist WHERE {
  # Find members of Don Dokken's band
  ?band a dbo:Band ;
        dbo:leadMember dbr:Don_Dokken .
  
  ?band dbo:member ?member .

  # Find associated bands for each member
  ?member dbo:associatedBand ?associatedArtist .

  # Filter to ensure the associated artist is a band, group, and organization
  ?associatedArtist rdf:type dbo:Band ;
                    rdf:type dbo:MusicalGroup ;
                    rdf:type dbo:Organization .
  
  # Specifically check if any of these are Meshuggah
  FILTER(?associatedArtist = dbr:Meshuggah)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
232,56,test,"Give me the actor of Dog Soldiers (film) and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find the actor(s) of ""Dog Soldiers""
SELECT ?actor WHERE {
    ?movie dbo:title ""Dog Soldiers""@en .
    ?movie dbo:actor ?actor .
}

# Step 2: Identify John Pertwee and his children
SELECT ?child WHERE {
    ?person dbo:birthName ""John Devon Roland Pertwee""@en ;
            a dbo:Person .
    ?person dbo:child ?child .
}

# Step 3: Find the British settlement associated with a French politician
SELECT ?settlement WHERE {
    ?politician dbo:nationality dbr:France ;
                dbo:officeHolder true ;
                dbo:nativePlace ?place .
    ?place a dbo:Settlement ;
           dbo:country dbr:United_Kingdom .
}

# Step 4: Combine the information to find the desired actor
SELECT DISTINCT ?actor WHERE {
    # Actor of ""Dog Soldiers""
    ?movie dbo:title ""Dog Soldiers""@en .
    ?movie dbo:actor ?actor .

    # Child of John Pertwee
    ?person dbo:birthName ""John Devon Roland Pertwee""@en ;
            a dbo:Person .
    ?person dbo:child ?actor .

    # British settlement associated with the French politician
    ?politician dbo:nationality dbr:France ;
                dbo:officeHolder true ;
                dbo:nativePlace ?place .
    ?place a dbo:Settlement ;
           dbo:country dbr:United_Kingdom .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
547,47,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v0 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorRestingPlace ?childRestingPlace WHERE {
  # Part 1: Resting place of the actor from a show with Emily Richard
  ?show dbo:starring ?actor .
  ?actor dbo:birthName ?name .
  FILTER(CONTAINS(LCASE(?name), ""emily richard"")) .
  
  OPTIONAL { ?actor dbo:restingPlace ?actorRestingPlace . }
  
  # Part 2: Resting place of the child of James Burton (property developer)
  ?james a dbo:Person ;
         foaf:name ""James Burton"" ;
         dbo:occupation dbr:Property_developer .
         
  ?child dbo:parent ?james ;
         dbo:restingPlace ?childRestingPlace .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
427,66,test,"Give me the reference to the name of Italian People's Party (1994) and party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?partyName (GROUP_CONCAT(DISTINCT ?fatherPartyLabel; separator="", "") AS ?fatherParties) ?prodiBirthName
WHERE {
  # Italian People's Party (1994)
  ?party rdfs:label ""Italian People's Party (1994)""@en .
  ?party rdfs:label ?partyName .

  # Father of Lamberto Andreotti and his party
  ?andreotti dbo:father ?father ;
             foaf:name ""Lamberto Andreotti""@en .
  ?father dbo:politicalParty ?fatherParty .
  ?fatherParty rdfs:label ?fatherPartyLabel .

  # Romano Prodi's birth name
  ?prodi foaf:name ?birthName ;
         rdf:type dbo:Politician ;
         dbo:officeHolder ?office .
  FILTER (CONTAINS(LCASE(?birthName), ""romano prodi""))
}
GROUP BY ?partyName ?prodiBirthName
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
184,51,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfGrandchildMargaret ?greatGrandchildJosephKarl
WHERE {
  # Find Archduchess Margaret of Austria (born 1925)
  ?margaret dbo:name ""Archduchess Margaret of Austria""@en .
  ?margaret dbo:birthDate ?date .
  FILTER(YEAR(?date) = 1925)

  # Find her parent
  ?parentMargaret dbo:child ?margaret .

  # Find the child of that parent (grandchild of Margaret)
  ?grandchildMargaret dbo:parent ?parentMargaret .

  # Find Archduke Joseph Karl of Austria
  ?josephKarl dbo:name ""Archduke Joseph Karl of Austria""@en .

  # Find his child
  ?childJosephKarl dbo:parent ?josephKarl .

  # Find the child of that child (great-grandchild of Joseph Karl)
  ?greatGrandchildJosephKarl dbo:parent ?childJosephKarl .

  # Find the parent of the grandchild of Margaret
  ?parentOfGrandchildMargaret dbo:child ?grandchildMargaret .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
547,50,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person1RestingPlace ?person2RestingPlace WHERE {
  # Find the awardee of Knight Grand Cross of the Order of St Michael and St George
  ?person1 a dbo:Person ;
           dbo:honorificTitle ""Knight Grand Cross of the Order of St Michael and St George"" .
  
  OPTIONAL { ?person1 dbo:deathPlace ?person1RestingPlace . }
  
  # Find an actor from Downton Abbey
  ?show dbr:Downton_Abbey ;
        dbo:actor ?person2 .
  
  OPTIONAL { ?person2 dbo:deathPlace ?person2RestingPlace . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
528,71,test,"Give me the war of the commander in the work of --01-09 and war of the military force of the entity, that is a societal event, in Chile and force of the person born as the birth name of Narciso Campero.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v8 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?commander ?narcisoRole
WHERE {
  # Find a war related to --01-09 and its commander
  ?event dbo:date ""2009-01-09""^^xsd:date ;
         dbo:location dbr:Chile ;
         dbo:militaryConflict ?war .
  
  ?war dbo:commander ?commander .

  # Find wars in Chile that are societal events
  ?societalEvent dbo:location dbr:Chile ;
                a dbo:MilitaryConflict .

  # Find Narciso Campero and his military role
  ?narciso dbo:birthName ""Narciso Campero"" ;
           dbo:militaryRole ?narcisoRole .
  
  FILTER(?commander = ?narciso)
}
```",9,10,10,3,3,3,3,71,0,0,2,0,0.0,0
528,67,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in the work of --01-09 and war of Irene Morales.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?v6 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?narcisoBirthName ?force ?commanderWar ?ireneWar
WHERE {
  # Step 1: Identify Narciso Campero and his birth name
  dbr:Narciso_Campero dbo:birthName ?narcisoBirthName .

  # Step 2: Hypothetical force associated with the birth name (assuming such a property exists)
  OPTIONAL { ?entity rdfs:label ?narcisoBirthName . ?entity dbo:force ?force }

  # Step 3: Identify the commander and war on January 9th
  ?war dbo:commander ?commander .
  ?event dbo:date ?date .
  FILTER (STRSTARTS(STR(?date), ""2000-01-09"") || STRSTARTS(STR(?date), ""1999-01-09"") || STRSTARTS(STR(?date), ""2010-01-09"")) # Example years
  BIND(?war AS ?commanderWar)

  # Step 4: Identify the war associated with Irene Morales
  ?ireneEvent dbo:agent dbr:Irene_Morales .
  ?ireneEvent dbo:subject ?ireneWar .

}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
994,20,test,"Give me the associated musical artist of S.A. Slayer and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for the associated musical artist of S.A. Slayer
SELECT ?band WHERE {
  ?s a dbo:MusicalArtist .
  ?s rdfs:label ""S.A. Slayer""@en .
  ?s dbo:associatedBand ?band .
}

UNION

# Query for the associated musical artist of a band member of Meshuggah who is also part of another band/group/organization
SELECT DISTINCT ?member ?associatedBand WHERE {
  ?meshuggahMember a dbo:MusicalArtist ;
                   dbo:memberOfBand ?meshuggah .
  ?meshuggah rdfs:label ""Meshuggah""@en .
  
  OPTIONAL { 
    ?meshuggahMember dbo:memberOfOrganization|dbo:memberOfBand ?associatedBand .
  }
  
  FILTER(?associatedBand != ?meshuggah)
}
```",3,6,4,2,2,3,3,71,0,0,2,0,0.0,0
626,19,test,"Give me the commander in the force, that is a military conflict, of Alexander I of Russia and awardee of the award of the military force of Battle of Borodino.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award WHERE {
  # Find Alexander I of Russia's involvement in the Battle of Borodino
  ?battle dbo:participatedIn dbr:Battle_of_Borodino .
  
  # Identify the commander of the force involved in this battle
  ?battle dbo:commander ?commander .

  # Ensure the commander is related to Alexander I of Russia
  ?commander dbo:spouse dbr:Alexander_I_of_Russia ;
             dbo:award ?award .

  FILTER EXISTS { ?commander dbo:award ?award }
}
```",5,6,6,3,2,3,2,20,0,0,44,0,0.0,0
485,28,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
# Query for Joseph Whitaker's birth place region
SELECT ?region WHERE {
  ?person dbo:birthPlace ?place .
  ?place a dbo:Region .
  ?person rdfs:label ""Joseph Whitaker (naturalist)""@en .
  FILTER(LANG(?person) = 'en')
} 

UNION

# Query for Eric Gregory Award awardee's birth place
SELECT ?birthPlace WHERE {
  ?awardee dbo:award ""Eric Gregory Award""@en ;
           a dbo:Writer ;
           a dbo:Poet .
  ?awardee dbo:birthPlace ?birthPlace .
} 

UNION

# Query for country in the Western European Time region
SELECT ?country WHERE {
  ?region rdfs:label ""Western European Time""@en .
  ?region geo:hasCountry ?country .
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
92,53,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of Jim Sheppard and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?filmArtist ?jimSheppardBand ?furneyBand 
WHERE {
  # Find the musical artist associated with ""Nevermore"" (2006 film)
  OPTIONAL {
    dbr:Nevermore_(2006_film) dbo:musicalArtist ?filmArtist .
  }

  # Find Jim Sheppard's band
  OPTIONAL {
    dbr:Jim_Sheppard dbo:bandMember ?jimSheppardBand .
  }
  
  # Find Joseph Michael Furney's band (born as such)
  OPTIONAL {
    ?person dbo:birthName ""Joseph Michael Furney""@en ;
            dbo:bandMember ?furneyBand .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
626,20,test,"Give me the commander in the force, that is a military conflict, of the commander in Battle of Paris (1814) and awardee of the award of the military force of Battle of Borodino.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderInParis ?conflict ?awardeeBorodino WHERE {
  # Find the commander in Battle of Paris (1814)
  ?battleOfParis a dbo:MilitaryEngagement ;
                 dbo:commander ?commanderInParis ;
                 rdfs:label ""Battle of Paris (1814)""@en .
  
  # Identify the military conflict associated with this commander
  ?conflict dbo:commander ?commanderInParis .

  # Find awardee related to Battle of Borodino
  ?battleOfBorodino a dbo:MilitaryEngagement ;
                    rdfs:label ""Battle of Borodino""@en .
  
  ?award a dbo:Award ;
         dbo:recipient ?awardeeBorodino ;
         dbo:relatedEvent ?battleOfBorodino .

  # Ensure the commander in Paris and awardee from Borodino are the same person
  FILTER (?commanderInParis = ?awardeeBorodino)
}
```",6,7,7,3,2,3,2,20,0,0,62,0,0.0,0
767,48,test,"Give me the reference to the alter ego of Black Hood and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?settlement WHERE {
  # Step 1: Identify the writer of ""Where It's At"" from Dustin Lynch's album
  ?song dbo:lyricsBy ?writer .
  
  FILTER regex(str(?song), ""Where It's At"", ""i"") .

  # Step 2: Find the alter ego or reference associated with Black Hood
  ?alterEgo rdfs:label ?blackHoodLabel .
  FILTER (regex(?blackHoodLabel, ""Black Hood"", ""i"")) .

  # Step 3: Identify an entity in administration related to a settlement
  ?settlement dbo:partOfAdministrativeTerritory ?adminEntity ;
              rdf:type dbo:Settlement .
  
  # Link the writer to the settlement through administrative entity
  ?writer dbo:residence ?settlement .
}
```",5,6,6,3,2,3,3,71,0,0,8,0,0.0,0
54,56,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of Thado Minsaw of Prome and child of the father of Soe Min Wimala Dewi.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .

  # Step 2: Find Thihapate's child who is an office holder and royalty
  ?child dbo:parent ?thihapate ;
         a dbo:OfficeHolder, dbo:Royalty .

  # Step 3: Identify the parent of Thado Minsaw of Prome
  ?thadoMinsaw dbr:Thado_Minsaw_of_Prome ;
               dbo:parent ?predecessor .

  # Step 4: Find the father of Soe Min Wimala Dewi
  ?soeMinWimalaDewi dbr:Soe_Min_Wimala_Dewi ;
                   dbo:father ?father .

  # Ensure the predecessor is the same person in both relationships
  FILTER (?predecessor = ?child)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,70,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of Pavlo Khudzik and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?result <http://dbpedia.org/ontology/birthDate> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?shenaBand ?pavloBirthDatePersonBand ?ambasSongBand
WHERE {
  # Part 1: Find the band of the person born as Shèna
  ?person rdfs:label ""Shèna""@en .
  ?person dbo:band ?shenaBand .

  # Part 2: Find the birth date of Pavlo Khudzik and then find another person with that birth date and their band
  ?pavlo dbr:Pavlo_Khudzik ;
        dbo:birthDate ?pavloBirthDate .
  
  ?personWithSameBirthDate dbo:birthDate ?pavloBirthDate ;
                           dbo:band ?pavloBirthDatePersonBand .

  # Part 3: Find the band of a song written by Amba Shepherd
  ?song dbo:lyricsBy dbr:Amba_Shepherd ;
        dbo:performer ?ambasSongBand .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
801,57,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in .","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v5 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?work a dbo:MusicalWork ;
        dbo:title ""40 Dayz & 40 Nightz"" ;
        dbo:musicalArtist ?rapper ;
        dbo:writer ?writer .
  
  ?rapper rdf:type dbo:MusicalArtist, dbo:Rapper .

  ?writer rdf:type dbo:MusicalArtist, dbo:Artist .

  ?work dbo:producer ?producer .
}
```",6,12,7,3,3,3,3,71,0,0,8,0,0.0,0
528,47,test,Give me the war of the commander in the work of --01-09 and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Part 1: Find the commander in the work of --01-09
SELECT ?commander WHERE {
    ?work dbo:date ""2009-01-09""^^xsd:date .
    ?work dbo:commander ?commander .
}

UNION

# Part 2: Find the war associated with the Battle of Pisagua
SELECT ?war WHERE {
    dbpedia:Battle_of_Pisagua dbo:participatedInWar ?war .
}
```",5,5,6,3,2,3,3,71,0,0,8,0,0.0,0
617,59,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse
WHERE {
  # Antiochus (son of Antiochus III the Great)
  ?antiochus dbp:father dbr:Antiochus_III_the_Great .
  
  # Successor of this Antiochus who is a royalty
  ?successor dbo:successor ?antiochus ;
            rdf:type dbo:Monarch .

  # Child of the successor who is also a royalty
  ?child dbo:child ?successor ;
         rdf:type dbo:Monarch .

  # Spouse of this child
  ?child dbo:spouse ?spouse .
}
```",6,9,7,3,2,3,3,71,0,0,4,0,0.0,0
659,54,test,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander ?polishHorseUnit WHERE {
  ?militaryForce dbo:partOf dbr:Napoleonic_Wars .
  ?militaryForce dbo:commander dbr:Arthur_Wellesley_1st_Duke_of_Wellington .
  
  OPTIONAL { 
    ?polishHorseUnit a dbo:MilitaryUnit ;
                     rdfs:label ""Polish Horse""@en .
    
    FILTER(CONTAINS(LCASE(?polishHorseUnit), LCASE(""polish horse"")))
    
    ?militaryForce dbo:member ?polishHorseUnit .
  }
  
  BIND(dbr:Arthur_Wellesley_1st_Duke_of_Wellington AS ?commander)
}
```",6,10,7,3,3,3,3,71,0,0,13,0,0.0,0
767,53,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to the alter ego of Black Hood.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?result <http://dbpedia.org/ontology/state> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Find the writer of ""Where It's At"" by Dustin Lynch
  ?album dbo:title ""Where It's At""@en .
  ?album dbo:artist dbr:Dustin_Lynch .
  ?song dbo:lyricsBy ?writer .

  # Find Carl L. Nippert's alma mater
  ?nippert dbo:name ""Carl L. Nippert"" .
  ?nippert dbo:almaMater ?university .

  # Identify the alter ego of Black Hood (assuming it's a known entity)
  ?blackHood dbo:alterEgo ?alterEgo .

  # Find a settlement related to both the writer and Carl L. Nippert's alma mater
  ?writer dbo:nationality ?nationality .
  ?university dbo:location ?settlement .
  
  # Ensure the settlement is part of an administration
  ?settlement rdf:type dbo:Settlement .

  FILTER(?writer = ?alterEgo) # Assuming alter ego links to writer or related entity
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
435,24,test,Give me the work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v2 . ?result <http://dbpedia.org/ontology/timeZone> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author ?timeZoneRegion
WHERE {
  # Part 1: Find the author of the work titled ""Iceland""
  ?work dbo:title ""Iceland""@en .
  ?work dbo:author ?author .

  # Part 2: Determine the region of the time zone in Bombali Shebora Chiefdom
  dbr:Bombali_Shebora_Chowchiefdom dbo:location ?location .
  ?location dbo:timeZone ?timeZone .
  ?timeZone dbo:region ?timeZoneRegion .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
659,64,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in Battle of Leipzig.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?office ?event
WHERE {
  ?commander a dbo:Person .
  
  # Office holder in the Kingdom of Ireland
  ?commander dbo:officeHolderOf dbr:Kingdom_of_Ireland .

  # Commander in Battle of Leipzig
  ?commander dbo:militaryCommanderOf dbr:Battle_of_Leipzig .

  # Involvement with Rutger Jan Schimmelpenninck
  OPTIONAL { 
    ?event dbo:participant dbr:Rutger_Jan_Schimmelpenninck .
    ?commander dbo:militaryCommanderOf ?event .
  }
}
```",7,11,8,3,3,3,3,71,0,0,6,0,0.0,0
959,64,test,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?nativeOf ?almaMater
WHERE {
  ?person a dbo:Person ;
          dbo:birthDate ?birthDate ;
          dbo:managerOfTeam ?team .
  
  ?team dbo:season ?season ;
        rdfs:label ""Kashima Antlers""@en .

  FILTER(YEAR(?birthDate) = 1958)
  FILTER(CONTAINS(LCASE(STR(?season)), ""1998""))

  OPTIONAL { ?person dbo:nativeOf ?nativeOf . }
  
  OPTIONAL {
    ?person dbo:almaMater ?almaMater .
    ?almaMater a dbo:EducationalOrganization ;
               dbp:country dbr:Japan ;
               (dbo:University | dbo:School) .
  }

  FILTER(EXISTS { ?team dbo:manager ?person })
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
184,66,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
# Step 1: Find the parent of the child of the parent of Archduchess Margaret of Austria (born 1925)
SELECT ?parentOfChildOfParentMargaret WHERE {
    ?margaret dbo:birthDate ?date .
    FILTER(YEAR(?date) = 1925 && STRSTARTS(STR(?margaret), ""http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(1925)"")) .
    
    ?parentMargaret dbo:child ?margaret .
    ?parentMargaret dbo:child ?childOfParentMargaret .
    ?childOfParentMargaret dbo:parent ?parentOfChildOfParentMargaret .
}

# Step 2: Find the parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria
SELECT ?parentOfNativeBudapest WHERE {
    ?josephKarl dbo:child ?childJosephKarl .
    ?childJosephKarl dbo:child ?grandChildJosephKarl .
    
    ?nativeBudapest dbo:birthPlace ?budapest .
    FILTER(STR(?budapest) = ""http://dbpedia.org/resource/Budapest"") .
    ?nativeBudapest rdfs:subClassOf* dbpedia-owl:Person .
    ?nativeBudapest owl:sameAs ?grandChildJosephKarl .

    ?parentNativeBudapest dbo:child ?nativeBudapest .
}

# Step 3: Find the common parent
SELECT DISTINCT ?commonParent WHERE {
    VALUES (?entity1) { (<result_of_first_query>) }
    VALUES (?entity2) { (<result_of_second_query>) }

    ?entity1 dbo:parent ?commonParent .
    ?entity2 dbo:parent ?commonParent .
}
```

Note: Replace `<result_of_first_query>` and `<result_of_second_query>` with the actual results from the first two queries.",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
92,40,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of Jim Sheppard and band of Joseph Michael.",SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMemberArtist ?associatedArtist ?josephsBand 
WHERE {
  # Find the band associated with ""Nevermore"" (2006 film)
  ?film dbo:title ""Nevermore""@en .
  FILTER(YEAR(?film) = 2006) .
  
  ?film dbo:subject ?band .
  ?band a dbo:MusicalArtist .

  # Find band members who are also artists
  ?member dbo:bandMember ?band ;
          a dbo:Person ;
          dbo:musicalArtist ?bandMemberArtist .

  # Find Jim Sheppard's associated musical artist
  ?sheppard rdfs:label ""Jim Sheppard""@en .
  ?sheppard dbo:associatedMusicalArtist ?associatedArtist .

  # Find Joseph Michael's band
  ?joseph rdfs:label ""Joseph Michael""@en .
  ?joseph dbo:bandMember ?josephsBand .
  
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
959,66,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v6 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager
WHERE {
    # Find the manager of the 1998 Kashima Antlers team who is a sports manager
    ?team dbo:season ""1998"" .
    ?team dbo:manager ?manager .
    ?manager rdf:type dbo:SportsManager .

    # Eiji Ōtsuka's alma mater
    dbr:Eiji_Ōtsuka dbo:almaMater ?university .
    ?university rdf:type dbo:University ;
                dbo:country dbr:Japan .

    # Yōichi Masuzoe's country of residence
    dbr:Yōichi_Masuzoe dbo:nationality ?nationality .
    ?nationality dbo:countryName ?countryName .

    # Ensure the manager is connected to Eiji Ōtsuka’s alma mater and Yōichi Masuzoe's country
    ?manager dbo:almaMater ?university ;
            dbo:nationality ?nationality .
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
427,27,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?partyAffiliation WHERE {
  ?person foaf:name ""Romano Prodi""@en .
  ?person a dbo:Person ;
          dbo:officeHolder ?office ;
          dbo:politician ?politics ;
          dbo:partyAffiliation ?partyAffiliation .
}
```",3,5,4,3,1,3,3,71,0,0,7,0,0.0,0
492,57,test,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person
WHERE {
  ?person a dbo:Person .
  
  # Person decedent at Algiers (Settlement)
  ?deathEvent dbo:place dbr:Algiers ;
              dbo:agent ?person ;
              dbo:resultingDeath ?person .

  # Person decedent at French Algeria
  ?algeriaEvent dbo:place dbr:French_Algeria ;
                dbo:agent ?person ;
                dbo:resultingDeath ?person .

  # Commander in the Battle of Verdun
  ?verdunEvent a dbo:MilitaryConflict ;
               dbo:name ""Battle of Verdun"" ;
               dbo:commander ?person .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
617,17,test,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland and child of Doubravka of Bohemia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfFather WHERE {
    # Step 1: Identify Richeza of Poland
    ?richeza a dbo:Person ;
             rdfs:label ""Richeza of Poland""@en .
    
    # Step 2: Find the Father of Richeza of Poland
    ?richeza dbo:father ?father .

    # Step 3: Determine if the Father is Royalty
    ?father a dbo:Monarch .

    # Step 4: Find the Parent of the Father
    ?father dbo:parent ?parentOfFather .
    
    # Step 5: Identify Doubravka of Bohemia's Child
    ?doubravka a dbo:Person ;
               rdfs:label ""Doubravka of Bohemia""@en .
    ?doubravka dbo:child ?child .

    # Step 6: Reference Check - Ensure the child is royalty
    ?child a dbo:Monarch .

    # Ensure that the parentOfFather is also royalty
    ?parentOfFather a dbo:Monarch .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
54,63,test,"Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeHolderRoyalty
WHERE {
  # Narapati I of Ava's child and parent relationship
  ?narapatiIChild dbo:childOf dbr:Narapati_I_of_Ava .
  ?narapatiIParent dbo:parentOf ?narapatiIChild .

  # Thinkhaya of Pagan's child, father, and predecessor relationship
  ?thinkhayasChild dbo:childOf dbr:Thinkhaya_of_Pagan .
  ?thinkhayasFather dbo:fatherOf ?thinkhayasChild .
  ?predecessor dbo:predecessorOf ?thinkhayasChild .

  # Thihapate of Mohnyin's office holder and royalty relationship
  ?thihapateOfficeHolder dbo:officeHolder dbr:Thihapate_of_Mohnyin ;
                        a dbo:Royalty .
  
  # Connecting the relationships
  FILTER(?narapatiIParent = ?thinkhayasFather)
  FILTER(?predecessor = ?thihapateOfficeHolder)

  BIND(?thihapateOfficeHolder AS ?officeHolderRoyalty)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,53,test,"Give me the band of Amba Shepherd and band of the person born as Tracey Elizabeth McSween and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?ambaBand ?traceyBand ?zolotonoshaAthlete ?decedentBirthDate ?personWithSameBirthDate

WHERE {
  # Amba Shepherd's band
  OPTIONAL { 
    dbr:Amba_Shepherd dbo:band ?ambaBand .
  }

  # Person born as Tracey Elizabeth McSween and their band
  OPTIONAL {
    ?tracey dbr:birthName ""Tracey Elizabeth McSween""@en ;
            dbo:band ?traceyBand .
  }
  
  # Athlete and soccer player from Zolotonosha
  OPTIONAL {
    ?zolotonoshaAthlete a dbo:Athlete ;
                       dbo:sport dbr:Soccer ;
                       dbo:birthPlace dbr:Zolotonosha .
  }

  # Decedent's birth date
  OPTIONAL {
    ?decedent dbo:deathDate ?deathDate ;
              dbo:birthDate ?decedentBirthDate .
  }
  
  # Person born on the same date as the decedent
  OPTIONAL {
    ?personWithSameBirthDate dbo:birthDate ?decedentBirthDate .
  }

  FILTER EXISTS { ?zolotonoshaAthlete a dbo:Athlete . } 
}
```",6,8,7,3,3,3,3,71,0,117270,1,0.0,0.0,0
16,41,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?profession (GROUP_CONCAT(DISTINCT ?spouse; separator="", "") AS ?commonSpouses)
WHERE {
  # Satomi Ishihara's profession
  ?satomi a dbo:Person;
          foaf:name ""Satomi Ishihara""@en.
  ?satomi dbo:occupation ?profession.

  # Ted Martin McGinley's spouse
  ?ted a dbo:Person;
       foaf:name ""Ted Martin McGinley""@en.
  ?ted dbo:spouse ?spouse1.

  # Georgeanne Marie Rice's spouse
  ?georgeanne a dbo:Person;
              foaf:name ""Georgeanne Marie Rice""@en.
  ?georgeanne dbo:spouse ?spouse2.

  # Check if the spouses have the same profession as Satomi Ishihara
  OPTIONAL { ?spouse1 dbo:occupation ?profession. }
  OPTIONAL { ?spouse2 dbo:occupation ?profession. }

  FILTER (?spouse1 = ?spouse2)
}
GROUP BY ?profession
HAVING (COUNT(DISTINCT ?spouse1) > 0 && COUNT(DISTINCT ?spouse2) > 0)
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
404,40,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914) and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
    ?person a dbo:Person ;
            dbo:birthName ""Princess Victoria Louise of Prussia"" ;
            dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover ;
            dbo:child dbr:Prince_Ernest_Augustus_of_Hanover_(1914-1987) .
    ?person dbo:spouse ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
92,55,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonArtist WHERE {
  # Jim Sheppard's association with Nevermore
  dbr:Jim_Sheppard dbo:bandMember dbr:Nevermore .

  # Joseph Michael Furney (Warrel Dane) and his associated band
  OPTIONAL { 
    dbr:Warrel_Dane dbo:associatedBand ?furneyBand .
  }

  # Find a common artist or band between Jim Sheppard's and Warrel Dane's associations
  ?commonArtist dbo:bandMember dbr:Nevermore ;
               dbo:bandMember ?furneyBand .

}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
488,52,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceSaito ?deathPlaceFatherYuki ?administrationGoYozei
WHERE {
  # Birth place of Saitō Hajime
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlaceSaito .

  # Death place of Yūki Hideyasu's father (who is a politician)
  OPTIONAL {
    dbr:Yūki_Hideyasu dbo:father ?fatherYuki .
    ?fatherYuki rdf:type dbo:Politician .
    ?fatherYuki dbo:deathPlace ?deathPlaceFatherYuki .
  }

  # Administration of Emperor Go-Yōzei
  dbr:Emperor_Go-Yōzei dbo:reign ?administrationGoYozei .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
404,63,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Princess Victoria Louise of Prussia and her birth name
  dbr:Princess_Victoria_Louise_of_Prussia a dbo:RoyalPerson ;
    dbo:birthName ?birthName .

  # Find Ernest Augustus, Duke of Brunswick's father
  dbr:Ernest_Augustus,_Duke_of_Brunswick a dbo:RoyalPerson ;
    dbo:father ?fatherOfErnestAugustus .

  # Ensure Princess Victoria Louise is the child of Ernest Augustus' father
  ?princess a dbo:RoyalPerson ;
    rdfs:label ""Princess Victoria Louise of Prussia""@en ;
    dbo:birthName ?birthName ;
    dbo:father ?fatherOfErnestAugustus .

  # Find the spouse of Princess Victoria Louise
  ?princess dbo:spouse ?spouse .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
404,34,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:Royalty ;
          dbo:birthName ""Princess Victoria Louise of Prussia""@en ;
          dbo:father dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  
  ?person dbo:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
959,51,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry WHERE {
  # Step 1: Find Yōichi Masuzoe's place of residence that is a country
  dbr:Yōichi_Masuzoe dbo:residence ?residence .
  
  FILTER (isLiteral(?residence) && regex(str(?residence), ""country"", ""i""))
  
  # Step 2: Find the manager of the 1998 Kashima Antlers season
  dbr:Kashima_Antlers_1998_season dbo:manager ?sportsManager .
  
  FILTER (dbo:SportsManager ?sportsManager)
  
  # Step 3: Identify the team managed by this sports manager
  ?sportsManager dbo:managedTeam ?team .
  
  # Step 4: Determine the native country of the residence's native
  ?residence dbo:nativeCountry ?nativeCountry .
}
```",5,7,6,3,2,3,3,71,0,0,6,0,0.0,0
617,65,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus3 a dbo:Person ;
              dbo:child ?antiochus4 .

  FILTER regex(str(?antiochus3), ""Antiochus III the Great"", ""i"")

  # Step 2: Find his child
  ?antiochus4 a dbo:Person ;
             dbo:child ?childOfAntiochus4 .

  # Step 3: Identify Seleucus II Callinicus's child
  dbr:Seleucus_II_Callinicus a dbo:Person ;
                             dbo:child ?childOfSeleucus2 .

  # Step 4: Find the grandchild (child of the child) that is royalty
  ?childOfSeleucus2 a dbo:Person ;
                   dbo:child ?grandChildOfSeleucus2 .
  
  FILTER EXISTS { ?grandChildOfSeleucus2 dbo:royalty true }

  # Step 5: Determine the successor of Antiochus (son of Antiochus III the Great)
  ?antiochus4 dbo:successor ?successor .

  # Step 6: Find the spouse of the successor's child
  ?successor a dbo:Person ;
             dbo:child ?childOfSuccessor .
  
  ?childOfSuccessor dbo:spouse ?spouse .

  # Step 7: Combine these relationships to identify the parent of the child of Antiochus (son of Antiochus III the Great)
  ?parent a dbo:Person ;
          dbo:child ?childOfAntiochus4 .
  
  FILTER (?grandChildOfSeleucus2 = ?spouse)
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
767,51,test,"Give me the alma mater of the administration of George K. Nash and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
# Query for George K. Nash's alma mater
SELECT ?almaMater WHERE {
  ?person rdfs:label ""George K. Nash""@en .
  ?person dbo:almaMater ?almaMater .
}

UNION

# Query for Matthew Burland's alter ego
SELECT ?alterEgo WHERE {
  ?character rdfs:label ""Matthew Burland""@en .
  ?character dbo:fictionalName ?alterEgo .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
617,16,test,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Boleslaus I, Duke of Bohemia
  ?boleslaus a dbo:Duke ;
             dbp:spouse ?spouseBoleslaus ;
             dbo:child ?childBoleslaus .

  # Child of Boleslaus I who is royalty
  ?childBoleslaus a dbo:Person ;
                  dbo:royalty ?isRoyaltyChild .
  
  # Grandchild of Boleslaus I who is royalty
  ?childBoleslaus dbo:child ?grandchild .
  ?grandchild a dbo:Person ;
             dbo:royalty ?isRoyaltyGrandchild .

  # Richeza of Poland, Queen of Hungary
  ?richeza a dbo:Queen ;
           dbp:father ?fatherRicheza .

  # Parent of Richeza's father who is royalty
  ?fatherRicheza dbo:parent ?parentFather .
  ?parentFather a dbo:Person ;
               dbo:royalty ?isRoyaltyParent .

  # Match the grandchild with the parent
  FILTER (?grandchild = ?parentFather)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
16,35,test,Give me the spouse of the person born as Ted Martin McGinley and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tedSpouse ?gigiSpouse WHERE {
  # Find Ted Martin McGinley and his spouse(s)
  ?ted a dbo:Person ;
       dbp:birthName ""Ted Martin McGinley"" .
  OPTIONAL { ?ted dbo:spouse ?tedSpouse . }

  # Find Gigi Rice and her spouse(s)
  ?gigi a dbo:Person ;
        dbp:birthName ""Gigi Rice"" .
  OPTIONAL { ?gigi dbo:spouse ?gigiSpouse . }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
959,65,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?manager WHERE {
  # Takashi Sekizuka's team manager
  ?team dbo:member dbr:Takashi_Sekizuka ;
        dbo:manager ?manager .

  # Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  
  # Ensure the university is Japanese and an organization, university, educational institution
  ?university a dbo:University ;
              dbo:country dbr:Japan ;
              rdf:type dbo:Organisation ;
              rdf:type dbo:EducationalInstitution .

  # Leader of the 2010 Japanese House of Councillors election
  ?election dbo:leader ?politician .
  FILTER (str(?election) = ""Japanese_House_of_Councillors_election,_2010"")

  # Politician's native country
  ?politician dbo:nativeCountry ?country .

  # Ensure the leader is a politician and their native country matches the university's country
  ?politician rdf:type dbo:Politician .
  FILTER (?university = ?country)
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
378,50,test,"Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
# Query for George Augustus Eliott's claim to fame during the Great Siege of Gibraltar
SELECT ?claimToFame WHERE {
  wd:Q123456 dbo:occupation dbr:Military_person .
  wd:Q123456 dbo:knownFor dbr:Great_Siege_of_Gibraltar .
  wd:Q123456 dbo:claimToFame ?claimToFame .
}

# Query for Arthur Wellesley's claim to fame in the Peninsular War
SELECT ?claimToFame WHERE {
  wd:Q654321 dbo:occupation dbr:Military_person .
  wd:Q654321 dbo:knownFor dbr:Peninsular_War .
  wd:Q654321 dbo:claimToFame ?claimToFame .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for George Augustus Eliott and `wd:Q654321` with the DBpedia ID for Arthur Wellesley.",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
659,57,test,"Give me the commander in German campaign of 1813 and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
# Query for the commander of 'Polish Horse' during the German campaign of 1813
SELECT ?commander WHERE {
  ?unit a dbo:MilitaryUnit ;
        rdfs:label ""Poniatowski's Polish Legion""@en .
  ?campaign a dbo:MilitaryConflict ;
            rdfs:label ""War of the Sixth Coalition""@en ;
            dbo:participatingMilitaryUnit ?unit .
  ?unit dbo:commander ?commander .
}

# Query for the commander of the German campaign of 1813
SELECT ?commander WHERE {
  ?campaign a dbo:MilitaryConflict ;
            rdfs:label ""War of the Sixth Coalition""@en .
  ?campaign dbo:commander ?commander .
}

# Query for Rutger Jan Schimmelpenninck's military force and its commander
SELECT ?force ?commander WHERE {
  ?person foaf:name ""Rutger Jan Schimmelpenninck"" ;
          dbo:positionHeld ?role .
  ?role dbo:organization ?force .
  ?force a dbo:MilitaryForce ;
         dbo:commander ?commander .
}
```",6,13,7,3,3,3,3,71,0,0,7,0,0.0,0
767,23,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Find the song ""Where It's At"" by Dustin Lynch
  ?song dbo:title ""Where It's At""@en .
  ?song dbo:lyricsBy ?writer .

  # Ensure the writer is associated with an administrative role in a settlement
  ?writer dbo:officeHolder ?position .
  ?position dbo:location ?settlement .
  
  FILTER (isBlank(?writer) = false)
  FILTER (isURI(?settlement))
}
```",3,4,4,3,1,3,3,71,0,0,66,0,0.0,0
492,25,test,"Give me the person decedent at the capital, that is a settlement, of Algeria and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:commanderInWar ?war .
  ?war rdfs:label ""Franco-Hova Wars""@en .
  ?person dbo:deathPlace dbr:Algiers .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
294,23,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace ?birthSettlement WHERE {
  VALUES ?person { dbr:Marion_James }
  
  # Get the resting place of Marion James
  ?person dbo:finalRestingPlace ?restingPlace .
  
  # Get the birthplace settlement of Marion James
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              rdfs:label ?birthSettlement .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
77,19,test,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw and war of the awardee of Golden Weapon for Bravery.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?organization ?war 
WHERE {
  ?mayor a dbo:Mayor ;
         dbo:location dbr:Warsaw .
  
  ?organization dbo:head ?mayor ;
                a dbo:Organization .

  ?person dbo:award dbr:Golden_Weapon_for_Bravery ;
          dbo:participatedInWar ?war .
}
```",5,6,6,3,2,3,2,20,0,0,14,0,0.0,0
184,22,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parentOfChild1 ?parentOfChild2 WHERE {
  # Find a child of Archduke Joseph Francis of Austria and their parent
  ?child1 dbo:parent ?archduke .
  ?archduke rdfs:label ""Archduke Joseph Francis of Austria""@en .
  FILTER NOT EXISTS { ?child1 dbo:parent ?otherParent . FILTER(?otherParent != ?archduke) }
  ?child1 dbo:parent ?parentOfChild1 .

  # Find a child of Géza von Habsburg and their parent
  ?child2 dbo:parent ?geza .
  ?geza rdfs:label ""Géza von Habsburg""@en .
  FILTER NOT EXISTS { ?child2 dbo:parent ?otherParent . FILTER(?otherParent != ?geza) }
  ?child2 dbo:parent ?parentOfChild2 .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
303,23,test,"Give me the party of the commander, that is a politician, in United States invasion of Panama and party of the person born, that is a politician, as Arnulfo Arias Madrid.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderParty ?arnulfoParty WHERE {
  # Find the commander of the United States invasion of Panama who is a politician
  ?operation dbo:commander ?commander .
  ?commander rdf:type dbo:Politician .
  ?commander dbo:partyAffiliation ?commanderParty .
  
  FILTER (?operation = dbr:United_States_invasion_of_Panama)

  # Find Arnulfo Arias Madrid's political party
  ?arnulfo rdf:type dbo:Politician ;
           foaf:name ""Arnulfo Arias Madrid"" ;
           dbo:partyAffiliation ?arnulfoParty .
  
  FILTER EXISTS { ?arnulfo dbo:birthPlace ?place . }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
9,58,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Find individuals who have received the Royal Medal
  ?person dbo:awardReceived dbr:Royal_Medal .
  
  # Check if they have a nickname referring to an organization or educational institution in Northern Ireland
  OPTIONAL { ?person dbo:nickName ?nickname . }
  FILTER (CONTAINS(LCASE(?nickname), ""northern ireland"") || CONTAINS(LCASE(?nickname), ""organisation"") || CONTAINS(LCASE(?nickname), ""educational institution""))
  
  # Get the alma mater of this person
  ?person dbo:almaMater ?almaMater .
  
  # Ensure it is also the alma mater of John Alderdice, Baron Alderdice
  dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMater .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,48,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?heatherProfession ?jonathonAward ?awardeeMilitaryUnit WHERE {
  # Heather Roy's profession or military unit
  OPTIONAL { 
    dbr:Heather_Roy dbo:profession ?heatherProfession .
    FILTER (isLiteral(?heatherProfession))
  }
  
  # Jonathon Band's award
  OPTIONAL {
    dbr:Jonathon_Band dbo:award ?jonathonAward .
  }

  # Find another awardee of the same award and their military unit
  OPTIONAL {
    ?awardee dbo:award ?jonathonAward ;
            dbo:militaryUnit ?awardeeMilitaryUnit .
  }
}
```",5,6,6,3,2,3,3,71,2,83,7,0.023529411764705882,0.2222222222222222,0.0425531914893617
54,71,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v8 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?thihapateChild dbo:childOf dbr:Thihapate_of_Mohnyin ;
                  a dbo:OfficeHolder, dbo:Royalty .

  # Predecessor of Thihapate's child
  ?predecessor dbo:predecessor ?thihapateChild .

  # Thado Minsaw of Prome's parent and sibling
  ?thadoParent dbo:parentOf dbr:Thado_Minsaw_of_Prome .
  ?sibling dbo:childOf ?thadoParent .

  # Thinkhaya of Pagan's child and father (Thinkhaya himself)
  ?thinkhayaChild dbo:childOf dbr:Thinkhaya_of_Pagan ;
                  dbo:father dbr:Thinkhaya_of_Pagan .
  
  # Ensure the sibling is the same as Thinkhaya's child
  FILTER(?sibling = ?thinkhayaChild)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
959,53,test,"Give me the manager of the team of Takashi Sekizuka and native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find Takashi Sekizuka's team
  ?team dbo:manager dbr:Takashi_Sekizuka .
  
  # Identify the manager of that team
  ?team dbo:currentManager ?manager .

  # Ensure the manager is native to Japan
  ?manager dbo:nationality dbr:Japan .

  # Check if the manager's alma mater is a Japanese university
  ?manager dbo:almaMater ?university .
  ?university rdf:type dbo:EducationalOrganization ;
              dbo:country dbr:Japan ;
              rdf:type dbo:University .

  # Filter by birth year (1958)
  ?manager dbo:birthDate ?date .
  BIND(YEAR(?date) AS ?year)
  FILTER (?year = 1958)
}
```",6,10,7,3,3,3,3,71,0,0,3,0,0.0,0
778,18,test,"Give me the author of the work, that is a software, of Bill Joy and entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?work ?awardee ?award 
WHERE {
  # Part 1: Identify the software authored by Bill Joy
  dbr:C++ dbo:creator ?person .
  ?person rdfs:label ""Bill Joy""@en .

  # Bind the author and work
  BIND(dbr:C++ AS ?work)
  BIND(?person AS ?author)

  # Part 2: Identify an American awardee of the Wolf Prize in Medicine
  ?awardee dbo:nationality dbr:United_States .
  ?awardee dbo:award dbr:Wolf_Prize_in_Medicine .

  FILTER(LANG(?awardeeLabel) = ""en"")
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
161,51,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?role 
WHERE {
  VALUES ?person { dbr:Francisco_Largo_Caballero }
  
  ?person dbo:militaryConflict ?civilWar .
  ?civilWar a dbo:MilitaryConflict ;
           dbo:societalEvent ?societalEvent .

  OPTIONAL {
    ?person dbo:positionHeld ?role .
    ?militaryForce dbo:commander ?person .
  }

  FILTER(?civilWar = dbr:Spanish_Civil_War)
}
```",5,8,6,3,2,3,3,71,0,0,32,0,0.0,0
92,65,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v6 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicalArtist
WHERE {
    ?person dbo:birthName ""Joseph Michael Furney""@en .
    ?person dbo:bandMemberOf dbr:Nevermore .
    
    ?film dbo:title ""Return to Nuke 'Em High Volume 1""@en ;
          dbo:actor ?person .

    ?film dbo:musicalArtist ?musicalArtist .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,59,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Find the song by Amba Shepherd
  ?song a dbo:Song ;
        dbo:author dbr:Amba_Shepherd .

  # Step 2: Identify the band of this song
  ?band dbo:song ?song .

  # Step 3: Locate an athlete and soccer player born in Zolotonosha
  ?athlete a dbo:SoccerPlayer, dbo:Athlete ;
           dbo:birthPlace dbr:Zolotonosha ;
           dbo:birthDate ?birthDate .

  # Step 4: Find the person with the same birth date as the athlete
  ?person dbo:birthDate ?birthDate .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
838,12,val,"Give me the band member of the band, that is a group, of YU Grupa and band of Raša Đelmaš.",SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?member WHERE {
  {
    ?band rdf:type dbo:Band ;
          rdfs:label ""YU Grupa""@en .
    ?band dbo:bandMember ?member .
  }
  UNION
  {
    ?band rdf:type dbo:Band ;
          rdfs:label ""Indexi""@en .
    ?band dbo:bandMember ?member .
  }
}
```",3,4,4,2,2,3,2,20,0,2,4,0.0,0.0,0
10,14,val,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert and associated musical artist of Matt Colton.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  # Identify Luke Francis Vibert (Wagon Christ)
  dbr:Luke_Francis_Vibert dbo:birthDate ?birthDate .
  
  # Find band members who are artists
  ?bandMember dbo:bandMember dbr:Wagon_Christ ;
              a dbo:Artist .

  # Check association with Matt Colton as a musical artist
  ?bandMember dbo:musicalArtist dbr:Matt_Colton .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
963,11,val,"Give me the administration of Serbian Progressive Party and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
# Query to find the administration (leader) of the Serbian Progressive Party
SELECT ?person WHERE {
  ?party dbo:officialName ""Serbian Progressive Party""@en .
  ?party dbo:leader ?person .
}

UNION

# Query to find countries in the Central European Time zone
SELECT ?country WHERE {
  ?country a dbo:Country ;
           dbo:timeZone ""Central European Time"" .
}
```",3,4,4,2,2,3,2,20,0,0,84,0,0.0,0
528,22,val,Give me the force of the person born as Narciso Campero Leyes and war of Irene Morales.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query for Narciso Campero Leyes' role or position related to ""force""
SELECT ?role WHERE {
  ?person a dbo:Person ;
          foaf:name ""Narciso Campero Leyes""@en .
  OPTIONAL { ?person dbo:positionHeld ?role . }
}
```

```sparql
# Query for wars associated with Irene Morales
SELECT DISTINCT ?war WHERE {
  ?event a dbo:MilitaryConflict ;
         dbo:participant ?person .
  ?person foaf:name ""Irene Morales""@en .
  ?event rdfs:label ?war .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
294,18,val,"Give me the resting place of Edwin A. Keeble and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace (SAMPLE(?birthPlace) AS ?settlementBirthPlace)
WHERE {
  # Resting place of Edwin A. Keeble
  OPTIONAL { 
    dbr:Edwin_A._Keeble dbo:finalBurial ?restingPlace .
  }

  # Birthplace of Marion James that is a settlement
  OPTIONAL {
    dbr:Marion_James dbo:birthPlace ?birthPlace .
    ?birthPlace rdf:type dbo:Settlement .
  }
}
```",3,4,4,2,2,2,3,28,0,1,1,0.0,0.0,0
48,11,val,Give me the band of the writer of Emotion (Carly Rae Jepsen album) and band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
# Query to find the band of the writer(s) of Carly Rae Jepsen's album ""Emotion""
SELECT DISTINCT ?songwriter ?band WHERE {
  ?album dbo:title ""Emotion (Carly Rae Jepsen album)""@en .
  ?album dbo:artist <http://dbpedia.org/resource/Carly_Rae_Jepsen> .
  ?album dbo:songwriter ?songwriter .
  OPTIONAL { ?songwriter dbo:band ?band }
}

UNION

# Query to find the band of Murda Mook
SELECT DISTINCT ?person ?band WHERE {
  ?person rdfs:label ""Murda Mook""@en .
  OPTIONAL { ?person dbo:band ?band }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
404,32,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
    # Step 1: Identify Princess Victoria Louise of Prussia
    ?princess a dbo:Person ;
             rdfs:label ""Victoria Louise, Princess Royal""@en ;
             dbo:birthPlace ?place .

    # Step 2: Determine Her Spouse and verify royalty status
    ?princess dbo:spouse ?spouse .
    ?spouse a dbo:RoyalFamilyMember .

    # Step 3: Identify Ernest Augustus, Duke of Brunswick's child and verify royalty status
    ?duke a dbo:Person ;
          rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
    ?duke dbo:child ?child .
    ?child a dbo:RoyalFamilyMember .

    # Step 4: Link the spouse to the child
    ?spouse dbo:parent ?child .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
54,35,val,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and child of the father of Soe Min Wimala Dewi.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?predecessor WHERE {
  ?thihapate dbo:child ?commonChild .
  FILTER (STRSTARTS(STR(?thihapate), ""Thihapate of Mohnyin""))

  ?father dbo:child ?commonChild .
  ?soeMinWimalaDewi dbo:father ?father .

  FILTER (STRSTARTS(STR(?soeMinWimalaDewi), ""Soe Min Wimala Dewi""))

  ?commonChild rdf:type dbo:Royalty ;
               dbo:officeHolder ?office .

  ?commonChild dbo:predecessor ?predecessor .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
626,12,val,Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?battleCommander WHERE {
  VALUES ?yermolov { dbr:Aleksey_Petrovich_Yermolov }
  
  # Find awards received by Yermolov
  ?yermolov dbo:award ?award .
  
  # Confirm his role as a commander in the Battle of Leipzig
  OPTIONAL {
    ?battleCommander dbo:commander ?yermolov ;
                    rdfs:label ""Battle of Leipzig""@en .
  }
}
```",3,3,4,2,2,3,2,20,0,6,3,0.0,0.0,0
392,14,val,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region WHERE {
  # Find the time zone of Aguilar de Segarra
  dbr:Aguilar_de_Segarra dbo:timeZone ?timezone .

  # Identify a sports event associated with this time zone
  ?event dbo:locationTimezone ?timezone ;
         a dbo:SportEvent .

  # Find an entity in Italy related to the sports event or its region
  ?italianEntity dbp:country dbr:Italy ;
                 (dbo:relatedTo|dbo:location) ?event .

  # Get the region of the time zone
  ?timezone dbo:region ?region .
}
```",3,4,4,2,2,2,3,28,0,0,513,0,0.0,0
392,19,val,"Give me the entity in the region, that is a country, of Central European Time and region of Central European Time and province of Schio.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbp:timeZone ""Central European Time"" .
  ?province dbo:administrativeDivision ?country ;
            rdfs:label ""Schio""@en .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
9,39,val,"Give me the alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?almaMater ?nickname
WHERE {
  # Find Allen Hill's alma mater
  dbr:Allen_Hill_(scientist) dbo:almaMater ?almaMater .

  # Find an organization and educational institution in Northern Ireland with a nickname
  ?institution a dbo:EducationalInstitution ;
              a dbo:Organization ;
              dbo:country dbr:Northern_Ireland ;
              OPTIONAL { ?institution foaf:nick ?nickname . }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,30,val,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at French Algeria and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  
  # Decedent at the capital of Algeria (Algiers)
  ?deathPlace1 dbo:city ?capital ;
              rdfs:label ""Algiers""@en .
  ?person dbo:deathPlace ?deathPlace1 .

  # Decedent at French Algeria
  ?deathPlace2 dbo:country dbr:French_Algeria ;
               rdfs:label ?placeLabel .
  FILTER(CONTAINS(LCASE(?placeLabel), ""algeria""))
  ?person dbo:deathPlace ?deathPlace2 .

  # Commander in the Franco-Hova Wars
  ?war dbo:name ?warName .
  FILTER(CONTAINS(LCASE(STR(?warName)), ""franco-hova wars"") || CONTAINS(LCASE(STR(?warName)), ""madagascar""))
  ?person dbo:commanderInWar ?war .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
328,33,val,Give me the awardee of Order of Suvorov and commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:awardee dbr:Order_of_Suvorov .
  OPTIONAL { 
    ?commanderInForce dbo:location dbr:Budapest ;
                      dbo:commander ?person .
  }
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
64,7,val,"Give me the alma mater of the person decedent, that is a writer, at Sremska Kamenica and entity in Serbia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName ?almaMaterName
WHERE {
  ?person a dbo:Person ;
          dbo:birthPlace dbr:Sremska_Kamenica ;
          rdfs:label ?personName .
  FILTER (CONTAINS(LCASE(?personName), ""writer""))
  
  OPTIONAL { 
    ?person dbo:almaMater ?almaMater .
    ?almaMater rdfs:label ?almaMaterName .
  }
}
ORDER BY ?personName
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
427,28,val,Give me the party of Romano Prodi and reference to the name of Italian People's Party (1994) and party of Giulio Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?prodiParty ?andreottiParty ?ippName WHERE {
  # Romano Prodi's party affiliation
  OPTIONAL { 
    dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
  }
  
  # Giulio Andreotti's party affiliation
  OPTIONAL { 
    dbr:Giulio_Andreotti dbo:partyAffiliation ?andreottiParty .
  }

  # Italian People's Party (1994) reference or name
  OPTIONAL {
    ?ipp a dbo:PoliticalParty ;
         rdfs:label ?ippName ;
         dbp:foundingYear ""1994""^^xsd:gYear .
    FILTER(CONTAINS(LCASE(?ippName), ""italian people's party""))
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,27,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  ?album rdf:type dbo:Album ;
         rdfs:label ""What U See Is What U Get""@en .
  
  ?album dbo:musicalArtist ?artist .

  ?artist rdf:type dbo:MusicalArtist, dbo:Person ;
          dbo:occupation dbr:Songwriter ;
          dbo:occupation dbr:Singer .
}
```",3,7,4,3,1,3,3,71,0,0,50,0,0.0,0
328,28,val,"Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:officeTitle ""People's Commissar for Defence of the Soviet Union""@en ;
          dbo:awardReceived dbr:Order_of_Victory ;
          dbo:commanderOf dbr:Eastern_Front_(World_War_II) .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
488,35,val,Give me the administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for the administration of Toyotomi Hideyoshi
SELECT ?administration WHERE {
  ?person dbo:birthName ""Toyotomi Hideyoshi""@en .
  ?person dbo:positionHeld ?administration .
}
```

```sparql
# Query for the birthplace of Saigō Takamori
SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Saigō Takamori""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
345,12,val,"Give me the figure known as Stolz von Liechtenstein and team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?name ?team
WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1978-09-15""^^xsd:date ;
          foaf:name ?name .
  
  OPTIONAL { 
    ?person dbo:managerOf ?team .
  }
  
  FILTER EXISTS { ?person dbo:playerFor ?team } # Ensures they are also a player
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
488,40,val,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace ?administration WHERE {
  # Birth place of Saitō Hajime
  { 
    dbr:Saitō_Hajime a dbo:Person ;
                     dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Death place of Tokugawa Ieyasu
  { 
    dbr:Tokugawa_Ieyasu a dbo:Person ;
                         dbo:deathPlace ?deathPlace .
  }

  UNION

  # Administration period of Emperor Go-Yōzei
  {
    dbr:Emperor_Go-Yōzei a dbo:Monarch ;
                          dbo:reign ?administration .
  }
}
```",5,8,6,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
360,15,val,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?album a dbo:Album ;
         dbo:contributor dbr:Dave_Flett .
  OPTIONAL { ?album dbo:musicalArtist dbr:Manfred_Mann . }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
314,12,val,Give me the commander in Spanish Civil War and awardee of 30 and person deceased at Madrid.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName WHERE {
  ?person a dbo:Person ;
          rdfs:label ?personName ;
          dbo:roleInWar ?warRole .
  
  FILTER(CONTAINS(LCASE(?warRole), ""spanish civil war"") && CONTAINS(LCASE(?personName), ""commander""))
  
  ?awardEvent dbo:recipient ?person ;
              dbo:dateReceived ""1930""^^xsd:gYear .
  
  ?deathEvent dbo:place ?deathPlace ;
              dbo:agent ?person .
  
  FILTER(CONTAINS(LCASE(STR(?deathPlace)), ""madrid""))
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
232,22,val,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and child of Jon Pertwee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Find Sylvie Bermann's spouse
  dbr:Sylvie_Bermann dbo:spouse dbr:Laurent_Fabius .
  
  # Identify Jon Pertwee's child, Simon Pertwee
  dbr:Jon_Pertwee dbo:child dbr:Simon_Pertwee .

  # Find the native place of Simon Pertwee's residence that is a settlement in Britain
  ?residence dbo:nativePlace ?nativePlace .
  ?residence rdf:type dbo:Settlement .
  ?residence dbo:country dbr:United_Kingdom .
  dbr:Simon_Pertwee dbo:residence ?residence .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
838,13,val,"Give me the band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMemberBand WHERE {
  # Step 1: Identify Žika Jelić's band membership
  ?zikajelic a dbo:Person ;
             foaf:name ""Žika Jelić""@en .
  
  ?zikajelic dbo:member ?band .

  # Step 2: Ensure the band is classified as both Band and Group
  ?band rdf:type dbo:Band, dbo:Group .

  # Step 3: Find members of this band who are also artists and musical artists
  ?bandMember a dbo:Person ;
              dbo:member ?band ;
              rdf:type dbo:Artist, dbo:MusicalArtist .
  
  # Step 4: Identify the band of these artist/musical artist members
  ?bandMember dbo:member ?bandMemberBand .

  # Ensure the band is classified as both Band and Group
  ?bandMemberBand rdf:type dbo:Band, dbo:Group .
}
```",3,7,4,3,1,3,2,20,0,0,21,0,0.0,0
16,23,val,Give me the spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Get Ted McGinley's birth name
SELECT ?birthName WHERE {
    dbr:Ted_McGinley dbo:birthName ?birthName .
}

# Step 2: Find the spouse of Ted McGinley using his birth name for verification
SELECT ?spouse WHERE {
    ?person dbo:birthName ?birthName .
    ?person dbo:spouse ?spouse .
    FILTER(?birthName = ""Ted McGinley"") # Assuming we know his birth name is ""Ted McGinley""
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
427,25,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and party of Giulio Andreotti.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personLabel ?partyLabel
WHERE {
  VALUES ?person { 
    dbr:Romano_Prodi 
    dbr:Giulio_Andreotti 
  }
  
  ?person a dbo:Person ;
          rdfs:label ?personLabel .
  
  OPTIONAL { 
    ?person dbo:party ?party .
    ?party rdfs:label ?partyLabel .
  }

  FILTER (lang(?personLabel) = 'en')
  FILTER (lang(?partyLabel) = 'en')
}
```",3,5,4,2,2,3,3,71,0,11,3,0.0,0.0,0
427,43,val,Give me the reference to Partito Popolare Italiano and party of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partitoPopolareItaliano ?partyOfRomanoProdi ?partyOfFather

WHERE {
  # Reference to Partito Popolare Italiano
  dbr:Partito_Popolare_Italiano dbo:wikiPageRedirects ?partitoPopolareItaliano .

  # Party of Romano Prodi
  dbr:Romano_Prodi dbo:party ?partyOfRomanoProdi .

  # Find an MIT alumnus, their father's name, and the father's party
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
           dbo:father ?father .
  
  ?father dbo:party ?partyOfFather .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
30,7,val,"Give me the professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder and native of the birthplace of Silvia Cohen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Silvia Cohen's birthplace
  dbr:Silvia_Cohen dbo:birthPlace ?birthPlace .

  # Identify a person with the specified roles and from the same birthplace
  ?person a dbo:Person ;
          dbo:occupation ?financierRole ;
          dbo:occupation ?businessmanRole ;
          dbo:ownsVineyard ?vineyardOwnership ;
          dbo:artCollection ?artCollection ;
          dbo:racehorseOwnerOrBreeder ?racehorseRole ;
          dbo:birthPlace ?birthPlace .

  FILTER (?financierRole = dbr:Financier)
  FILTER (?businessmanRole = dbr:Businessman)
  FILTER EXISTS { ?vineyardOwnership a dbo:Vineyard }
  FILTER EXISTS { ?artCollection a dbo:ArtCollection }
  FILTER EXISTS { ?racehorseRole a dbo:RaceHorseOwnerOrBreeder }

}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
314,16,val,"Give me the person deceased at Madrid and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathEvent ?profession
WHERE {
  ?person rdfs:label ""Lisa Gavrić""@en .
  ?person a dbo:Person .

  # Death event in Madrid
  ?deathEvent dbo:place dbr:Madrid ;
              dbo:agent ?person ;
              a dbo:Event, dbo:SocietalEvent .

  # Profession as commander
  ?person dbo:occupation ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""commander""))
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
994,25,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonArtist WHERE {
  # Part 1: Find associated musical artists of Red Tide (band)
  ?redTide a dbo:Band ;
           dbp:name ""Red Tide"" .
  
  ?redTide dbo:associatedMusicalArtist ?artist .

  # Part 2: Find band members of Donald Maynard Dokken
  ?dokken a dbo:Person ;
          foaf:name ""Donald Maynard Dokken""@en .
  
  ?bandMember dbo:bandMember ?dokken ;
              dbo:associatedMusicalArtist ?commonArtist .

}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
801,24,val,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musicalWork ?associatedArtist WHERE {
  ?producer a dbo:MusicProducer ;
           foaf:name ""Chris Taylor"" .
  
  ?musicalWork dbo:musicalWorkType dbr:Song ;
               dbo:producer ?producer ;
               dbo:producer dbr:50_Cent .

  ?musicalWork dbo:associatedMusicalArtist ?associatedArtist .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
696,11,val,Give me the landmark at elevation of 50 and birth place of the member of Dropkick Murphys.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
# Query for a landmark at an elevation of 50
SELECT ?landmark WHERE {
    ?landmark a dbo:Place .
    ?landmark dbo:elevation ?elevation .
    FILTER (?elevation = ""50""^^xsd:string) # Assuming elevation is stored as string; adjust type if necessary
}

UNION

# Query for the birthplace of a member of Dropkick Murphys
SELECT ?birthPlace WHERE {
    ?member dbo:band dbr:Dropkick_Murphys .
    ?member dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
617,31,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?spouse ?grandchild
WHERE {
  # Step 1: Find Laodice IV's spouse
  dbp:Laodice_IV dbo:spouse ?spouse .

  # Step 2: Identify the successor of Antiochus II Theos
  dbp:Antiochus_II_Theos dbo:successor ?successor .
  
  # Ensure the successor is royalty
  ?successor rdf:type dbo:Monarch .

  # Step 3: Find the child of the successor who is also royalty
  ?successor dbo:child ?child .
  ?child rdf:type dbo:Monarch .

  # Step 4: Identify the grandchild (child of the child) who is royalty
  ?child dbo:child ?grandchild .
  ?grandchild rdf:type dbo:Monarch .

  # Step 5: Link Laodice IV's spouse to this grandchild
  ?spouse dbo:parent ?grandchild .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
328,30,val,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of Order of Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:commanderOf dbr:Eastern_Front_(World_War_II) .
  ?person dbo:ministerOfDefense dbr:Soviet_Union .
  ?person dbo:awardee dbr:Order_of_Suvorov .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
427,23,val,Give me the reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName
WHERE {
  ?person dbo:name ""Michele Pinto""@en .
  ?person dbo:party ?party .
  ?party rdfs:label ?partyName .
  FILTER(LANG(?partyName) = 'en')
}
```",3,3,4,3,1,3,3,71,0,0,8,0,0.0,0
328,39,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in Eastern Front (World War II).",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Step 1: Find Gustav Jonson's office and its leader
SELECT ?gustavOffice ?officeLeader WHERE {
  ?gustav dbo:wikiPageRedirects db:Gustav_Jonson .
  ?gustav dbo:officeHolder ?office .
  ?office dbo:leader ?officeLeader .
}

# Step 2: Find the commander on the Eastern Front (World War II) who is also an office holder and politician
SELECT ?commander WHERE {
  ?commander dbo:wikiPageRedirects db:Eastern_Front_(World_War_II_Commanders) .
  ?commander rdf:type dbo:OfficeHolder .
  ?commander rdf:type dbo:Politician .
}

# Step 3: Find the leader of the commander's office
SELECT ?commanderOffice ?officeLeader WHERE {
  ?commander dbo:wikiPageRedirects db:Eastern_Front_(World_War_II_Commanders) .
  ?commander dbo:officeHolder ?commanderOffice .
  ?commanderOffice dbo:leader ?officeLeader .
}

# Final Step: Combine the results to find the leader of the office of the commander
SELECT DISTINCT ?finalLeader WHERE {
  # Assuming we have variables from previous queries, e.g., ?gustavOffice and ?commanderOffice
  ?commanderOffice dbo:leader ?finalLeader .
}
```

Note: This query assumes that DBpedia has direct links or redirects for Gustav Jonson's office and the Eastern Front commanders. In practice, you might need to refine these queries based on actual data availability in DBpedia.",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
232,34,val,Give me the child of the person born as the birth name of Jon Pertwee and native of London.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  ?person a dbo:Person ;
          dbo:birthName ""Jon Pertwee"" ;
          dbo:birthPlace dbr:London .
  
  ?person dbo:child ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
281,31,val,Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?relatedEntityInNZ
WHERE {
  # Find Jonathon Band and his awards
  ?person a dbo:Person ;
          foaf:name ""Jonathon Band"" .
  
  ?person dbo:honoraryDegree ?award .

  # Find entities related to the Colony of New Zealand
  OPTIONAL {
    ?award dbo:awardedBy ?relatedEntityInNZ .
    ?relatedEntityInNZ dbo:formerName dbr:Colony_of_New_Zealand .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
9,24,val,Give me the figure known as QUB and alma mater of the awardee of Royal Medal.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?almaMaterLabel WHERE {
  ?awardee dbo:award [ a dbo:Award ; rdfs:label ""Royal Medal""@en ] .
  ?awardee dbo:almaMater dbr:Queen's_University_Belfast .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,38,val,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?ernestAugustus a dbo:Duke ;
                  dbp:name ""Ernest Augustus, Duke of Brunswick""@en .
  
  ?father dbo:spouse ?mother ;
          dbo:child ?ernestAugustus ;
          dbo:child ?child .

  FILTER(?child != ?ernestAugustus)
  
  OPTIONAL { ?child a dbo:Monarch . }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
232,33,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?militaryConflict
WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Caroline John""@en .
  
  OPTIONAL { ?person dbo:film ?film . }
  OPTIONAL { ?person dbo:militaryConflict ?militaryConflict . }

  FILTER EXISTS { ?person dbo:father dbr:Jon_Pertwee . }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
281,40,val,Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand and war of New Zealand Army.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?war ?entityInColonyOfNewZealand ?newZealandWar
WHERE {
  # Find Jonathon Band and his awards
  ?person a dbo:Person ;
          foaf:name ""Jonathon Band""@en .
  
  ?award dbo:recipient ?person ;
         rdfs:label ?awardLabel .

  OPTIONAL { 
    ?award dbo:associatedWithWar ?war .
  }

  # Find entities in Colony of New Zealand
  ?entityInColonyOfNewZealand a dbo:Place ;
                              dbo:country dbr:Colonial_New_Zealand .

  # Find wars involving the New Zealand Army
  ?newZealandWar a dbo:MilitaryConflict ;
                 dbo:militaryConflicts dbr:New_Zealand_Army .
  
  FILTER (lang(?awardLabel) = 'en')
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
421,17,val,Give me the person born as Edin Dervišhalidović and native of the birthplace of Samir Bekrić.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?edinBirthPlace WHERE {
  # Find Edin Dervišhalidović's birthplace
  dbr:Edin_Dervišhalidović dbo:birthPlace ?edinBirthPlace .
  
  # Find Samir Bekrić's birthplace
  dbr:Samir_Bekrić dbo:birthPlace ?samirBirthPlace .

  # Check if the birthplaces are the same
  FILTER (?edinBirthPlace = ?samirBirthPlace)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,14,val,"Give me the father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  # Step 1: Identify Princess Pauline of Saxe-Weimar-Eisenach
  ?princess a dbo:Person ;
           rdfs:label ""Princess Pauline of Saxe-Weimar-Eisenach""@en .
  
  # Step 2: Find her spouse who is also royalty
  ?princess dbo:spouse ?spouse .
  ?spouse a dbo:Royalty .

  # Step 3: Identify the child of this royal spouse
  ?spouse dbo:child ?child .

  # Step 4: Determine the father of this child
  ?child dbo:father ?father .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
485,14,val,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in United Kingdom.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation dbo:Writer ;
          dbo:occupation dbo:Poet .
  ?person dbo:award dbr:Erich_Gregory_Award .
  ?person dbo:nationality dbr:United_Kingdom .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,5,4,2,2,2,3,28,0,0,5,0,0.0,0
404,18,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  ?parent a dbo:CrownPrince ;
          dbo:child ?child .
  
  FILTER (?parent = dbr:Ernest_Augustus,_Crown_Prince_of_Hanover)

  ?child dbo:spouse dbr:Victoria_Louise_of_Prussia .

  ?child dbo:parent ?grandChild .
  FILTER (?grandChild = dbr:Prince_Ernest_Augustus_of_Hanover_(1914-1987))
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
767,26,val,Give me the alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://dbpedia.org/property/governor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater
WHERE {
  dbr:George_Kilbon_Nash dbo:almaMater ?almaMater .
}
```",3,3,4,3,1,3,3,71,0,0,6,0,0.0,0
915,11,val,"Give me the father of Lizzie Spaulding and resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find Lizzie Spaulding's father
  ?lizzie a dbo:Person ;
          foaf:name ""Lizzie Spaulding""@en .
  ?lizzie dbo:father ?father .

  # Find Stephen Verona's birthplace that is a settlement
  ?stephen a dbo:Person ;
           foaf:name ""Stephen Verona""@en .
  ?stephen dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbr:Settlement .

  # Check if the father resides in that settlement
  OPTIONAL { ?father dbo:residence ?residence . }
  FILTER (?residence = ?birthPlace)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
617,40,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?childOfSpouse ?successor ?childOfSuccessor ?parentOfNysa WHERE {
  # Step 1: Find Laodice IV's spouse
  dbr:Laodice_IV dbo:spouse ?spouse .

  # Step 2: Find the child of Laodice IV and her spouse
  ?spouse dbo:child ?childOfSpouse .
  
  # Step 3: Identify the successor of Antiochus II Theos
  dbr:Antiochus_II_Theos dbo:succeededBy ?successor .

  # Step 4: Find the parent of Nysa (wife of Pharnaces I of Pontus)
  dbr:Nysa dbo:parent ?parentOfNysa .
  
  # Step 5: Identify the child of the successor who is royalty
  ?successor dbo:child ?childOfSuccessor .

  # Ensure all entities are royalty
  FILTER (dbo:Person(?spouse) && dbo:Person(?childOfSpouse) &&
          dbo:Person(?successor) && dbo:Person(?childOfSuccessor) &&
          dbo:Person(?parentOfNysa))

  # Step 6: Find the common entity that fits all criteria
  FILTER (?childOfSpouse = ?childOfSuccessor && ?parentOfNysa = ?spouse)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
492,32,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find Joseph C. Satterthwaite's decedent
  ?satterthwaite a dbo:Person ;
                 foaf:name ""Joseph C. Satterthwaite"" ;
                 dbo:positionHeld dbr:Assistant_Secretary_of_State_for_African_Affairs .
  
  ?satterthwaite dbo:decedent ?person .

  # Find Frédéric-Georges Herr's military command
  ?herr a dbo:Person ;
        foaf:name ""Frédéric-Georges Herr"" ;
        dbo:commander ?conflict .

  ?conflict a dbo:MilitaryConflict ; # or dbo:Event if applicable

  FILTER (?person = ?satterthwaite && ?person = ?herr)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
838,11,val,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of Kerber.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?band WHERE {
  ?person dbo:bandMember <http://dbpedia.org/resource/YU_Grupa> .
  ?person dbo:bandMember <http://dbpedia.org/resource/Kerber_(band)> .
  ?person dbo:band ?band .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
659,27,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  # Rutger Jan Schimmelpenninck's DBpedia resource
  dbr:Rutger_Jan_Schimmelpenninck a dbo:Person .

  # Find events related to him that are both societal and military conflicts
  ?event dbo:associatedWith dbr:Rutger_Jan_Schimmelpenninck ;
         a dbo:Event, dbo:MilitaryConflict, dbo:SocietalEvent .

  # Retrieve the military force involved in such an event
  ?event dbo:militaryForce ?militaryForce .
}
```",3,6,4,3,1,3,3,71,0,0,1127,0,0.0,0
767,37,val,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to .,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater
WHERE {
  dbr:George_Kilbon_Nash dbo:almaMater ?almaMater .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
994,36,val,"Give me the associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist ?bandMember
WHERE {
  # Step 1: Identify S.A. Slayer and their associated musical artist
  ?sA_Slayer a dbo:Band ;
             dbo:associatedBand ?associatedArtist .

  # Step 2: Identify Don Dokken's band membership
  dbr:Don_Dokken a dbo:Person ;
                 dbo:bandMember ?donDokkenBand .

  # Step 3: Find the band member who is also a musical artist and was born
  ?donDokkenBand dbo:bandMember ?bandMember .
  ?bandMember a dbo:MusicalArtist ;
              dbo:birthDate ?birthDate .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
981,15,val,"Give me the birth place of Novia Indriani Mamuaja and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlace ?entityInRegion
WHERE {
  # Novia Indriani Mamuaja's birth place
  ?novia a dbo:Person ;
         foaf:name ""Novia Indriani Mamuaja"" ;
         dbo:birthPlace ?birthPlace .

  # Entity in the region of the time zone in Salak, North Sumatra
  ?location geo:hasTimezone ?timezone .
  ?entityInRegion dbp:timeZone ?timezone .
  
  FILTER regex(?location, ""Salak, North Sumatra"", ""i"")
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
659,34,val,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?roleInIreland ?militaryRole
WHERE {
  VALUES ?person { dbr:Arthur_Wellesley,_1st_Duke_of_Wellington }
  
  OPTIONAL {
    ?person dbo:officeHolderOf dbr:Kingdom_of_Ireland .
    ?person dbo:positionHeld ?roleInIreland .
  }

  OPTIONAL {
    ?person dbo:militaryCommanderOf ?militaryRole .
    FILTER CONTAINS(LCASE(?militaryRole), ""napoleonic wars"")
  }
}
```",4,5,5,3,2,3,3,71,0,0,34,0,0.0,0
184,37,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Archduchess Ilona of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonEntity WHERE {
  # Step 1: Identify Archduke Ladislaus Philipp of Austria's parent
  ?ladislaus a dbo:Person ;
            dbp:parent ?parentLadislaus .

  # Step 2: Find the child of this parent who is royalty
  ?childParent a dbo:Royalty ;
              dbp:parent ?parentLadislaus .

  # Step 3: Identify Archduchess Ilona's parent
  ?ilona a dbo:Person ;
         dbp:parent ?parentIlona .

  # Step 4: Find the common entity that is both the child of Ladislaus' parent and the parent of Ilona
  FILTER (?childParent = ?commonEntity)
  FILTER (?commonEntity = ?parentIlona)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
182,17,val,Give me the entity in Sri Lanka and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  dbr:Gotabhaya_Rajapaksa a dbo:Person .
  OPTIONAL { 
    dbr:Gotabhaya_Rajapaksa dbo:occupation ?occupation .
    FILTER (CONTAINS(LCASE(?occupation), ""defense"") || CONTAINS(LCASE(?occupation), ""military""))
  }
  OPTIONAL {
    dbr:Gotabhaya_Rajapaksa dbo:workLocation dbr:Sri_Lanka .
  }
  OPTIONAL {
    ?war a dbo:MilitaryConflict ;
         dbo:location dbr:Sri_Lanka ;
         dbo:relatedTo dbr:Gotabhaya_Rajapaksa .
  }
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
161,36,val,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of Rif War.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?commander WHERE {
  ?person rdfs:label ""El Director""@en .
  ?person dbo:militaryConflict dbr:Rif_War .
  ?militaryForce dbo:participatedIn ?event ;
                 dbo:commander ?commander .
  FILTER EXISTS { ?person dbo:memberOf ?militaryForce }
}
```",4,5,5,3,2,3,3,71,0,0,12,0,0.0,0
547,33,val,Give me the resting place of the actor of the show with Emily Richard and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
# Query for the resting place of an actor from a show with Emily Watson
SELECT ?actor ?restingPlace WHERE {
  ?show dbo:starring dbr:Emily_Watson .
  ?show dbo:starring ?actor .
  FILTER NOT EXISTS { ?actor rdf:type dbo:Person . }
  OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
} LIMIT 1

UNION

# Query for the resting place of James Burton, the Egyptologist
SELECT ?person ?restingPlace WHERE {
  ?person rdfs:label ""James Burton (Egyptologist)""@en .
  ?person rdf:type dbo:Person .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
701,40,val,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Step 1: Find the parent of Henuttawy (19th dynasty)
SELECT ?parent WHERE {
    ?henuttawy dbo:wikiPageID ""Henuttawy_(19th_dynasty)"" .
    ?henuttawy dbo:parent ?parent .
}

UNION

# Step 2: Find Ramesses II's spouse
SELECT ?spouse WHERE {
    ?ramessesII dbo:wikiPageID ""Ramesses_II"" .
    ?ramessesII dbo:spouse ?spouse .
}

UNION

# Step 3: Find the child of Amun-her-khepeshef's spouse
SELECT ?child WHERE {
    ?amunHerKhepeshef dbo:wikiPageID ""Amun-her-khepeshef"" .
    ?amunHerKhepeshef dbo:spouse ?spouse .
    ?spouse dbo:child ?child .
}

UNION

# Step 4: Find the parent of the child from step 3
SELECT ?parent WHERE {
    ?child dbo:wikiPageID ?childId .
    ?child dbo:parent ?parent .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,37,val,"Give me the band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?bandMember ?associatedArtist ?organization
WHERE {
  # Find Don Dokken's band member and their associated artist
  ?donDokken dbo:bandMember ?band .
  ?band dbo:bandMember ?bandMember .
  
  ?bandMember dbo:musicalArtist ?associatedArtist .
  
  FILTER NOT EXISTS { ?bandMember = ?donDokken } # Ensure it's not Don Dokken himself
  
  # Check if the associated artist is a band/group/organization
  ?associatedArtist rdf:type ?type .
  VALUES ?type { 
    dbo:Band 
    dbo:MusicalGroup 
    dbo:Organization 
  }
  
  # Find Fredrik Thordendal's organization
  ?fredrikThordendal dbo:memberOfOrganization ?organization .
  
  # Link the associated artist to Fredrik Thordendal's organization
  ?associatedArtist dbo:memberOfOrganization ?organization .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
421,13,val,Give me the band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?bandMember WHERE {
  ?awardee a dbo:Award ;
           dbo:nationality ?nationality .
  
  ?nationality rdfs:label ""Socialist Federal Republic of Yugoslavia""@en .

  ?awardee dbo:award ?award .
  
  OPTIONAL { 
    ?awardee dbo:bandMember ?bandMember .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
378,38,val,Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the commander in Peninsular War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?eliottClaimToFame ?wellingtonClaimToFame WHERE {
  # Query for George Augustus Eliott's claim to fame
  OPTIONAL { 
    dbr:George_Augustus_Eliott dbo:claimToFame ?eliottClaimToFame .
  }
  
  # Query for Arthur Wellesley's claim to fame
  OPTIONAL { 
    dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:claimToFame ?wellingtonClaimToFame .
  }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
626,13,val,"Give me the commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?conflictCommander WHERE {
  # Find the commander in Battle of Paris (1814)
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Paris (1814)""@en .
  
  ?battle dbo:commander ?individual .

  # Determine the military conflict they commanded
  ?conflict a dbo:MilitaryConflict ;
            dbo:commander ?individual .

  # Find the commander of that military conflict
  ?conflict dbo:commander ?conflictCommander .
}
```",3,4,4,3,1,3,2,20,0,0,364,0,0.0,0
356,11,val,Give me the player in the successor of 2014 Sacramento Republic FC season and team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorTeam ?player
WHERE {
  # Find the successor of the 2014 Sacramento Republic FC season
  dbr:Sacramento_Republic_FC dbo:successor ?successorTeam .

  # Find Mark Briggs's team during that period
  ?player dbo:member ?successorTeam .
  ?player rdfs:label ""Mark Briggs""@en .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
9,41,val,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of Royal Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Politician associated with Northern Ireland Forum and QUB as alma mater
  ?person dbo:almaMater dbr:Queen's_University_Belfast ;
          dbo:occupation dbr:Politician ;
          dbo:memberOf dbr:Northern_Ireland_Forum .

  # Awardee of the Royal Medal and QUB as alma mater
  OPTIONAL {
    ?person dbo:awardReceived dbr:Royal_Medal ;
            dbo:almaMater dbr:Queen's_University_Belfast .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
54,33,val,Give me the parent of the child of the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commonEntity WHERE {
  # Step 1: Find Thado Minsaw's parent
  ?thadoMinsaw dbo:parent ?parentOfThadoMinsaw .
  
  # Step 2: Find the child of Thado Minsaw's parent
  ?parentOfThadoMinsaw dbo:child ?childOfParentOfThadoMinsaw .

  # Step 3: Find Thinkhaya's child
  ?thinkhaya dbo:child ?childOfThinkhaya .
  
  # Step 4: Find the parent of Thinkhaya's child
  ?childOfThinkhaya dbo:parent ?commonEntity .

  FILTER(?childOfParentOfThadoMinsaw = ?childOfThinkhaya)

  VALUES ?thadoMinsaw { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> }
  VALUES ?thinkhaya { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,34,val,Give me the person born as Georgeanne Marie Rice and spouse of the person born as the birth name of Ted McGinley.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName WHERE {
  ?person1 dbo:birthName ""Georgeanne Marie Rice""@en .
  ?person2 dbo:birthName ""Ted McGinley""@en .
  ?person2 dbo:spouse ?person1 .
  
  BIND(YEAR(NOW()) AS ?currentYear)
  FILTER(?person1 != ?person2) # Ensure they are different individuals

  OPTIONAL { ?person1 rdfs:label ?spouseName . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
356,14,val,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?team
WHERE {
  # Identify Gary Williams (footballer, born 1960)
  dbr:Gary_Williams_(footballer,_born_1960) a dbo:Person ;
    dbo:birthPlace ?birthPlace ;
    dbo:nationality dbr:England .

  # Ensure the birthplace is an English settlement
  ?birthPlace dbo:country dbr:England .
  
  # Find teams he was associated with as both player and manager
  OPTIONAL { dbr:Gary_Williams_(footballer,_born_1960) dbo:sportTeam ?team . }
  OPTIONAL { dbr:Gary_Williams_(footballer,_born_1960) dbo:managerOf ?team . }

  FILTER EXISTS {
    ?team a dbo:SoccerClub .
  }
}
```",3,7,4,3,1,3,2,20,0,0,46,0,0.0,0
617,35,val,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentAntiochusChild ?parentSeleucusGrandchildRoyalty
WHERE {
  # Find Antiochus (son of Antiochus III the Great)
  ?antiochus dbo:father dbr:Antiochus_III_the_Great .
  
  # Find his child
  ?child dbo:parent ?antiochus .

  # Parent of this child is Antiochus himself
  ?parentAntiochusChild rdfs:label ""Antiochus""@en .

  # Find Seleucus II Callinicus
  ?seleucus2 dbo:father dbr:Seleucus_I_Soter .
  
  # Find his grandchild who is royalty
  ?grandchild dbo:parent ?childOfSeleucus2 .
  ?childOfSeleucus2 dbo:parent ?seleucus2 .
  ?grandchild rdf:type dbo:Monarch .

  # Parent of this royal grandchild
  ?parentSeleucusGrandchildRoyalty dbo:parent ?grandchild .
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
232,39,val,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of Dog Soldiers (film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfResidence
WHERE {
  # Step 1: Identify the actor from ""Dog Soldiers""
  ?actor dbo:title ""Dog Soldiers""@en .
  
  # Step 2: Ensure the person is a politician and office holder from France
  ?actor dbo:nationality dbr:Francois_France ;
         rdf:type dbo:Politician ;
         dbo:officeHolder true .

  # Step 3: Find their residence in Britain
  ?actor dbo:residence ?residence .
  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Step 4: Identify the native of this British settlement
  ?nativeOfResidence dbo:nativePlace ?residence .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
626,11,val,"Give me the awardee of Order of St. Andrew and commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?orderAwardee ?militaryConflict
WHERE {
  VALUES ?alexanderI { dbr:Alexander_I_of_Russia }
  
  OPTIONAL {
    ?orderAwardee dbo:awardee ?alexanderI .
    FILTER EXISTS { ?orderAwardee rdfs:label ""Order of St. Andrew""@en . }
  }

  OPTIONAL {
    ?militaryConflict dbo:commanderInMilitaryConflict ?alexanderI .
  }
}
```",3,4,4,2,2,3,2,20,0,0,9,0,0.0,0
547,22,val,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
# Query for James Burton (Egyptologist)
SELECT ?restingPlaceBurton WHERE {
  ?burton a dbo:Egyptologist ;
          foaf:name ""James Burton"" .
  ?burton dbo:finalRestingPlace ?restingPlaceBurton .
}

UNION

# Query for an awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT ?restingPlaceAwardee WHERE {
  ?awardee a dbo:Person ;
           dbo:order dbo:KnightGrandCrossOfTheOrderOfStMichaelAndStGeorge .
  ?awardee dbo:finalRestingPlace ?restingPlaceAwardee .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
701,42,val,Give me the parent of Henuttawy (19th dynasty) and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?henuttawyParent ?ramessesSpouse WHERE {
  # Henuttawy (19th dynasty)
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy (19th dynasty)""@en .
  
  # Parent of Henuttawy
  ?henuttawy dbo:parent ?henuttawyParent .

  # Merneptah's father is Ramesses II
  dbr:Merneptah dbo:father dbr:Ramesses_II .

  # Spouse of Ramesses II (who is also the spouse of Nefertari)
  dbr:Ramesses_II dbo:spouse ?ramessesSpouse .
  
  # Ensure the spouse is Nefertari
  ?ramessesSpouse rdfs:label ""Nefertari""@en .

  # A child of Nefertari (and Ramesses II) and their parent
  OPTIONAL {
    ?child dbo:parent dbr:Nefertari ;
           dbo:parent dbr:Ramesses_II .
    ?child dbo:parent ?henuttawyParent .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
959,18,val,Give me the member of University of Tsukuba and native of Japan and manager of 2013 Júbilo Iwata season.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:almaMater dbr:University_of_Tsukuba .
  ?person dbo:nationality dbr:Japan .
  ?person dbo:manager dbr:Júbilo_Iwata .
  ?jubiloIwataManager dbo:managedTeam dbr:Júbilo_Iwata ;
                     dbo:managementStartYear ""2013""^^xsd:gYear .
  FILTER (?person = ?jubiloIwataManager)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
404,20,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?royalChild ?parent
WHERE {
  # Find the spouse of Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

  # Find children of Ernest Augustus, Duke of Brunswick who are royalty
  dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:child ?royalChild .
  
  FILTER EXISTS { ?royalChild a dbo:Monarch } # Assuming the child is a monarch

  # Find the parent of that royal child
  ?royalChild dbo:parent ?parent .

  # Ensure the spouse found is also the parent of the royal child
  FILTER (?spouse = ?parent)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
232,26,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?conflict
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Morgan Freeman""@en .
  
  ?film dbo:actor ?person ;
        rdfs:label ?filmLabel .
  
  OPTIONAL { 
    ?film dbo:narratorFilm ?narration .
    ?narration foaf:name ""The Shawshank Redemption""@en .
  }
  
  OPTIONAL {
    ?film dbo:producerFilm ?production .
    ?production foaf:name ""The Shawshank Redemption""@en .
  }

  FILTER(CONTAINS(LCASE(?filmLabel), ""shawshank redemption""))

  OPTIONAL {
    ?conflict a dbo:MilitaryConflict ;
              rdfs:label ?conflictLabel .
    
    ?film dbo:setInTimePeriod ?timePeriod .
    ?timePeriod dbo:wikiPageRedirects dbr:World_War_II .
    
    FILTER(CONTAINS(LCASE(?conflictLabel), ""world war ii""))
  }
}
```",3,5,4,3,1,3,3,71,0,0,3,0,0.0,0
281,21,val,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?war 
WHERE {
  # Find individuals awarded the Knight Grand Cross of the Order of the Bath
  ?awardee dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  
  # Find wars these awardees were involved in
  ?awardee dbo:militaryConflict ?war .

  # Find wars involving the New Zealand Army
  ?nzWar dbo:participatingMilitaryUnit dbr:New_Zealand_Army ;
         rdf:type dbo:MilitaryConflict .
  
  # Check for overlap between these two sets of wars
  FILTER (?war = ?nzWar)
}
```",3,3,4,2,2,3,3,71,0,0,9,0,0.0,0
488,41,val,"Give me the administration of Emperor Go-Yōzei and birth place of the commander in Boshin War and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?birthPlace ?deathPlace
WHERE {
  # Administration of Emperor Go-Yōzei
  dbr:Emperor_Go-Yōzei dbo:reign ?administration .

  # Birth place of Saigō Takamori, a commander in the Boshin War
  dbr:Saigō_Takamori dbo:birthPlace ?birthPlace .

  # Father of Yūki Hideyasu and his death place
  OPTIONAL {
    dbr:Yūki_Hideyasu dbo:father ?father .
    ?father dbo:deathPlace ?deathPlace .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
767,31,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert.",SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Identify songwriter of ""Where It's At"" from Dustin Lynch album
  ?song dbo:lyricsBy ?writer .
  ?song rdfs:label ""Where It's At""@en .

  # Find settlements or places of administration related to the writer
  OPTIONAL { ?writer dbo:birthPlace ?settlement1 . }
  OPTIONAL { ?writer dbo:residence ?settlement2 . }

  # Identify Carl L. Nippert’s alma mater
  dbr:C_L_Nippert_Memorial_Stadium dbo:almaMater ?university .
  
  # Find settlements associated with the university
  OPTIONAL { ?university dbo:locationCity ?settlement3 . }
  
  # Match common entity in both contexts
  VALUES (?entity) {
    ?settlement1
    ?settlement2
    ?settlement3
  }

  FILTER(?entity != dbr:Unknown)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
994,34,val,Give me the band member of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist 
WHERE {
  # Step 1: Find Don Dokken's band
  dbr:Don_Dokken dbo:memberOf dbr:Dokken .

  # Step 2: Identify a member of Dokken (e.g., George Lynch)
  ?bandMember dbo:memberOf dbr:Dokken .
  FILTER(?bandMember != dbr:Don_Dokken) 

  # Step 3: Find Watchtower's associated artist (Dave Mustaine)
  dbr:Watchtower dbo:associatedMusicalArtist dbr:Dave_Mustaine .

  # Step 4: Identify an associated musical artist of Dave Mustaine (e.g., Megadeth)
  ?associatedArtist dbo:associatedMusicalArtist dbr:Dave_Mustaine .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
251,12,val,Give me the death place of Laura Mancinelli and location of Battle of Marengo and administration of Forza Italia (2013).,SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?person dbo:name ""Laura Mancinelli""@en .
  ?person dbo:deathPlace ?deathPlace .
}

UNION

SELECT ?location WHERE {
  ?event dbo:title ""Battle of Marengo""@en .
  ?event dbp:location ?location .
}

UNION

SELECT ?administration WHERE {
  ?party dbo:name ""Forza Italia (2013)""@en .
  ?member dbo:memberOfParliament ?administration .
  FILTER(YEAR(?date) = 2013)
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
659,33,val,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in German campaign of 1813.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  # Identify the Polish Horse as a military unit involved in the German campaign of 1813
  ?unit rdfs:label ""Polish Horse""@en .
  ?unit dbo:participatedIn ?campaign .
  
  # Link to the specific campaign
  ?campaign rdfs:label ""German campaign of 1813""@en .

  # Find wars that are events and military conflicts
  ?war a dbo:MilitaryConflict ;
      rdfs:label ?warLabel .

  # Identify the commander of this unit in such a war
  ?unit dbo:commander ?commander .
  
  # Ensure the commander is linked to the same war
  ?campaign dbo:participatedIn ?war .
}
```",4,8,5,3,2,3,3,71,0,0,30,0,0.0,0
547,42,val,Give me the resting place of the child of James Burton (property developer) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of Simon Cadell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?individual (SAMPLE(?restingPlace) AS ?finalRestingPlace)
WHERE {
  # Child of James Burton (property developer)
  { 
    ?child dbo:parent dbr:James_Burton_(property_developer).
    ?child dbo:finalRestingPlace ?restingPlace.
    BIND(""Child of James Burton"" AS ?individual)
  }
  
  UNION
  
  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  { 
    ?person dbp:honours ""Knight Grand Cross of the Order of St Michael and St George""@en.
    ?person dbo:finalRestingPlace ?restingPlace.
    BIND(""Awardee of Knight Grand Cross"" AS ?individual)
  }
  
  UNION
  
  # Simon Cadell
  { 
    dbr:Simon_Cadell dbo:finalRestingPlace ?restingPlace.
    BIND(""Simon Cadell"" AS ?individual)
  }
}
GROUP BY ?individual
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
9,29,val,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of Royal Medal and figure known as QUB.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?johnAlderdiceAlmaMater ?royalMedalistAlmaMater WHERE {
  # Find John Alderdice's alma mater
  dbr:John_Alderdice_Barons_Alderdice dbo:almaMater ?johnAlderdiceAlmaMater .

  # Find the awardee of the Royal Medal known as QUB (Queen's University Belfast)
  ?person dbo:award dbr:Royal_Medal ;
          dbo:affiliation dbr:Queen%27s_University_Belfast .
  
  # Get the alma mater for this person
  ?person dbo:almaMater ?royalMedalistAlmaMater .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
9,30,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast.","SELECT ?result WHERE { <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterAllenHill (GROUP_CONCAT(?almaMaterJohnAlderdice; separator="", "") AS ?almaMatersJohnAlderdice) ?nickname
WHERE {
  # Alma mater of Allen Hill (Scientist)
  OPTIONAL { 
    dbr:Allen_Hill_(scientist) dbo:almaMater ?almaMaterAllenHill .
  }
  
  # Alma mater of John Alderdice, Baron Alderdice
  OPTIONAL {
    dbr:John_Alderdice dbo:almaMater ?almaMaterJohnAlderdice .
  }

  # Nickname of Queen's University Belfast
  OPTIONAL {
    dbr:Queen's_University_Belfast dbo:commonName ?nickname .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,20,val,"Give me the person decedent at French Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedentPlace ?warEvent
WHERE {
  # Identify Frédéric-Georges Herr
  ?person a dbo:Person ;
          foaf:name ""Frédéric-Georges Herr""@en .

  # Find the place where he died and ensure it is related to French Algeria
  ?person dbo:deathPlace ?decedentPlace .
  ?decedentPlace rdfs:label ?placeLabel .
  FILTER (CONTAINS(LCASE(?placeLabel), ""algeria"") || CONTAINS(LCASE(?placeLabel), ""french algeria""))

  # Identify the war event he commanded
  ?person dbo:commanderOf ?warEvent .
  ?warEvent a dbo:MilitaryConflict ;
            rdfs:label ?eventLabel .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
9,18,val,"Give me the figure known as QUB and alma mater of John Alderdice, Baron Alderdice and alma mater of Allen Hill (scientist).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  {
    dbr:John_Alderdice_alma_mater ?almaMater .
  }
  UNION
  {
    dbr:Allen_Hill_(scientist)_alma_mater ?almaMater .
  }
  FILTER(?almaMater = dbr:Queen's_University_Belfast)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
378,29,val,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in Peninsular War and war of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?roleInPeninsularWar WHERE {
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:occupation ?occupation .
  OPTIONAL { 
    ?peninsularWar dbo:commander ?crillon ;
                   rdfs:label ?warLabel .
    FILTER(CONTAINS(LCASE(?warLabel), ""peninsular war""))
    BIND(""Commander in Peninsular War"" AS ?roleInPeninsularWar)
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
10,15,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person a dbo:Person ;
          foaf:name ""Matt Colton"" .
  OPTIONAL { ?person dbo:musicalArtist ?artist . }
  FILTER EXISTS { ?person rdfs:label ?label . FILTER (lang(?label) = 'en') }
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
378,39,val,"Give me the war of Joaquín Blake and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?joaquinClaimToFame ?thomasEvent
WHERE {
  # Joaquín Blake's involvement in a war and his claim to fame
  dbr:Joaquín_Blake dbo:participatedIn ?war .
  OPTIONAL { ?war dbo:claimToFame ?joaquinClaimToFame . }

  # Thomas Trigge's involvement in the same war or event
  dbr:Thomas_Trigge dbo:participatedIn ?war .
  OPTIONAL { ?war dbo:societalEvent ?thomasEvent . }
  
  FILTER(?joaquinClaimToFame != '' || ?thomasEvent != '')
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
994,18,val,Give me the associated musical artist of Red Tide (band) and band member of Don Dokken and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtistRedTide ?bandDonDokken ?associatedArtistSASlayer WHERE {
  # Associated musical artist of Red Tide (band)
  ?redTide a dbo:Band ;
           dbp:name ""Red Tide"" .
  OPTIONAL { 
    ?redTide dbo:associatedBand ?associatedArtistRedTide .
  }

  # Band member of Don Dokken
  ?donDokken a dbo:Person ;
             foaf:name ""Don Dokken"" .
  OPTIONAL {
    ?bandDonDokken dbo:bandMember ?donDokken .
  }

  # Associated musical artist of S.A. Slayer
  ?sASlayer a dbo:Band ;
            dbp:name ""S.A. Slayer"" .
  OPTIONAL { 
    ?sASlayer dbo:associatedBand ?associatedArtistSASlayer .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
783,12,val,"Give me the associated musical artist of Appietus and band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist ?bandMember
WHERE {
    # Find Appietus and his associated musical artist
    dbr:Appietus dbo:associatedMusicalArtist ?associatedArtist .

    # Identify Priscilla Opoku-Kwarteng's birth information and roles
    dbr:Priscilla_Opoku-Kwarteng a dbo:Person ;
        dbo:birthDate ?birthDate ;
        rdf:type ?type1, ?type2 .
    
    FILTER (?type1 = dbo:Artist && ?type2 = dbo:MusicalArtist) .

    # Check if Priscilla Opoku-Kwarteng is a band member of the associated musical artist
    OPTIONAL {
        ?associatedArtist dbo:bandMember ?bandMember .
        FILTER(?bandMember = dbr:Priscilla_Opoku-Kwarteng)
    }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
485,19,val,"Give me the birth place of Thomas Warner (poet) and entity in the region, that is a country, of Western European Time and entity in Nottinghamshire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlace ?country ?nottinghamshireEntity WHERE {
  # Birth place of Thomas Warner (poet)
  { 
    ?warner a dbo:Person ;
            foaf:name ""Thomas Warner"" ;
            dbo:occupation dbo:Poet .
    ?warner dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Country in the Western European Time zone
  {
    ?country a dbo:Country ;
             dbp:timeZone ""Western European Time"" .
    BIND(?country AS ?country)
  }

  UNION

  # Entity in Nottinghamshire
  {
    ?nottinghamshireEntity dbo:location dbr:Nottinghamshire .
    BIND(?nottinghamshireEntity AS ?nottinghamshireEntity)
  }
}
```",4,5,5,2,3,2,3,28,0,101,1,0.0,0.0,0
427,37,val,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of Romano Prodi.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
# Query 1: Party of the Father of an Alumnus from MIT (Bill Gates)
SELECT ?fatherParty WHERE {
  ?gates dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?gates foaf:name ""Bill Gates""@en .
  ?gates dbo:father ?father .
  ?father dbo:politicalAffiliation ?fatherParty .
}

# Query 2: Party of Romano Prodi
SELECT ?prodiParty WHERE {
  dbr:Romano_Prodi dbo:party ?prodiParty .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
378,24,val,"Give me the war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battle ?fame 
WHERE {
  # Find battles commanded by Crillon during the Peninsular War
  OPTIONAL { 
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:commanded ?battle .
    ?battle dbo:partOf dbr:Peninsular_War .
    BIND(?battle AS ?war)
  }
  
  # Find Crillon's claim to fame
  OPTIONAL {
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:title ?fame .
    FILTER (CONTAINS(LCASE(STR(?fame)), ""duke of mahon"") || CONTAINS(LCASE(STR(?fame)), ""marshal""))
  }
  
  # Return results
  VALUES (?war) { ?battle }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,11,val,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of Mieszko II Lambert.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childOfChild WHERE {
  ?boleslaus1 a dbo:Duke ;
              rdfs:label ""Boleslaus I, Duke of Bohemia""@en .
  
  ?boleslaus1 dbo:child ?child .

  ?mieszko2 a dbo:Monarch ;
            rdfs:label ""Mieszko II Lambert""@en .
  
  ?mieszko2 dbo:parent ?child .

  ?child dbo:child ?childOfChild .
  OPTIONAL { ?childOfChild dbo:royalTitle ?title . }
  
  FILTER EXISTS { ?childOfChild dbo:royalTitle ?title } 
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
659,22,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in German campaign of 1813.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person a dbo:Person ;
          foaf:name ""Rutger Jan Schimmelpenninck""@en .
  
  ?campaign dbo:commander ?person ;
            dbo:partOfMilitaryConflict ?conflict .

  FILTER(?campaign = dbr:German_Campaign_of_1813)

  ?conflict dbo:militaryForce ?militaryForce .
}
```",3,6,4,2,2,3,3,71,0,0,7,0,0.0,0
281,37,val,"Give me the war of New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war 
WHERE {
    # Step 1: Identify the leader of the 1962 New South Wales state election
    ?leader a dbo:Politician ;
            dbo:officeHolderOf dbr:1962_New_South_Wales_state_election .

    # Step 2: Determine the birthplace of this politician and ensure it is a country
    ?leader dbo:birthPlace ?country .
    FILTER (isBlank(?country) || ?country != dbr:Australia)
    ?country a dbo:Country .

    # Step 3: Find wars involving New Zealand Army and the identified country
    ?war dbo:participatingMilitaryUnit dbr:New_Zealand_Army ;
         dbo:participatingMilitaryUnit ?unit .
    OPTIONAL { ?unit dbo:country ?country }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
378,37,val,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?crillon a dbo:Person ;
           foaf:name ""Louis des Balbes de Berton de Crillon"" .
  
  ?crillon dbo:militaryConflict ?war .

  FILTER(?war = dbr:Peninsular_War)
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
92,20,val,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of Nevermore.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jim Sheppard"" .
  ?person dbo:bandMemberOf dbr:Nevermore .
  ?person dbo:musicalArtist ?artist .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
54,41,val,Give me the parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChildNarapatiI ?childOfFatherSoeMinWimalaDewi ?predecessorAmeittaThiriMahaDhammaDewi
WHERE {
  # Narapati I of Ava's child
  ?narapatiI dbr:Narapati_I_of_Ava ;
            dbo:child ?childNarapatiI .
  
  # Parent of Narapati I's child (should be Narapati I)
  ?parentOfChildNarapatiI dbo:child ?childNarapatiI .

  # Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi dbr:Soe_Min_Wimala_Dewi ;
                    dbo:father ?fatherSoeMinWimalaDewi .
  
  # Child of Soe Min Wimala Dewi's father (could be Soe Min Wimala Dewi herself)
  ?childOfFatherSoeMinWimalaDewi dbo:parent ?fatherSoeMinWimalaDewi .

  # Ameitta Thiri Maha Dhamma Dewi's predecessor
  ?ameittaThiriMahaDhammaDewi dbr:Ameitta_Thiri_Maha_Dhamma_Dewi ;
                             dbo:predecessor ?predecessorAmeittaThiriMahaDhammaDewi .

  # Ensure the parent of Narapati I's child is also a child of Soe Min Wimala Dewi's father
  FILTER (?parentOfChildNarapatiI = ?childOfFatherSoeMinWimalaDewi)

  # Ensure the predecessor of Ameitta Thiri Maha Dhamma Dewi matches the parent of Narapati I's child
  FILTER (?predecessorAmeittaThiriMahaDhammaDewi = ?parentOfChildNarapatiI)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
251,14,val,"Give me the location of Battle of Marengo and administration of the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
# Query for the location of the Battle of Marengo
SELECT ?location WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Marengo""@en .
  ?battle dbo:location ?location .
}
```

```sparql
# Query for the administration of the ruling party in Sicily
SELECT DISTINCT ?party ?organization WHERE {
  ?region a dbo:Region ;
          rdfs:label ""Sicily""@en .
  ?government dbo:governmentOf ?region ;
              dbo:rulingParty ?party .
  ?party a dbo:PoliticalParty, dbo:Organization .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
712,13,val,"Give me the capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capitalCity WHERE {
  # Find the military force associated with Vyoshenskaya Uprising
  ?militaryForce dbo:relatedEvent dbr:Vyoshenskaya_Uprising .
  
  # Determine the country of this military force
  ?militaryForce dbo:country ?country .

  # Get the capital city of that country
  ?country dbo:capital ?capitalCity .
}
```",3,5,4,3,1,3,2,20,0,0,3,0,0.0,0
9,31,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
# Query 1: Alma Mater of Allen Hill (Scientist)
SELECT ?almaMaterHill WHERE {
    ?hill a dbo:Scientist ;
          foaf:name ""Allen Hill"" .
    ?hill dbo:almaMater ?almaMaterHill .
}

UNION

# Query 2: Alma Mater of the Mayor of an Organization in Belfast
SELECT ?almaMaterMayor WHERE {
    ?org dbp:location dbc:Belfast ;
         dbo:mayor ?mayor .
    ?mayor a dbo:Politician ;
           dbo:almaMater ?almaMaterMayor .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,33,val,"Give me the person decedent at French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?battle dbr:Battle_of_Verdun ;
         dbo:commander ?person .
  
  ?person dbo:deathPlace dbr:French_Algeria .

  OPTIONAL { 
    ?conflict dbo:commander ?person .
    FILTER EXISTS { ?conflict a dbo:MilitaryConflict }
  }

  OPTIONAL {
    ?event dbo:commander ?person .
    FILTER EXISTS { ?event a dbo:Event }
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
427,36,val,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyAffiliation WHERE {
  ?person a dbo:Person ;
          dbo:birthName ""Romano Prodi""@en .
  OPTIONAL { ?person dbo:partyAffiliation ?partyAffiliation . }
  FILTER EXISTS { 
    ?partyAffiliation rdfs:label ?label .
    FILTER (CONTAINS(LCASE(?label), ""partito popolare italiano""))
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
778,14,val,"Give me the author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v0 <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?workAuthor WHERE {
  # Find Ken Thompson's resource in DBpedia
  dbr:Ken_Thompson a dbo:Person .
  
  # Identify software works authored by Ken Thompson
  ?software dbo:author dbr:Ken_Thompson ;
            a dbo:Software .

  # Get the author of one of these software works
  ?software dbo:author ?workAuthor .
}
```",3,4,4,3,1,3,2,20,0,5,2,0.0,0.0,0
959,29,val,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of University of Tsukuba and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence ?countryName
WHERE {
  # Identify Yōichi Masuzoe's resource in DBpedia
  VALUES ?masuzoe { dbr:Yōichi_Masuzoe }

  # Find his residence
  ?masuzoe dbo:residence ?residence .

  # Check if the residence is a country
  ?residence rdf:type dbo:Country .
  
  # Get the name of the country
  ?residence rdfs:label ?countryName .
  FILTER (lang(?countryName) = 'en')

  # Confirm his association with University of Tsukuba
  ?masuzoe dbo:almaMater dbr:University_of_Tsukuba .

  # Verify his role as manager for Júbilo Iwata in the 2013 season
  OPTIONAL {
    ?masuzoe dbo:occupation dbr:Soccer_manager .
    ?masuzoe dbo:managerFor dbr:Júbilo_Iwata .
    ?season dbo:year ""2013""^^xsd:gYear ;
            dbo:team dbr:Júbilo_Iwata ;
            dbo:manager ?masuzoe .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
820,12,val,Give me the professional in  and child of the parent of Jason Schwartzman.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?professional WHERE {
  ?person dbo:birthName ""Jason Andrew Schwartzman"" .
  ?parent dbo:child ?person .
  ?person dbo:occupation ?professional .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
801,18,val,Give me the professional in  and producer of Westside Story (song) and associated musical artist of Chris Taylor (music producer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?associatedArtist WHERE {
  # Find the producer of ""West Side Story (song)""
  ?song dbo:producedBy ?producer .
  FILTER(STRSTARTS(STR(?song), STR(dbr:West_Side_Story_(song))))

  OPTIONAL {
    # Find associated musical artists of Chris Taylor
    dbr:Chris_Taylor dbo:associatedMusicalArtist ?artist .
    BIND(?artist AS ?associatedArtist)
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
184,20,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commonEntity
WHERE {
  # Find grandchild of Archduke Joseph Karl
  ?grandchild dbo:parent ?child .
  ?child dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .

  # Find parent of Géza von Habsburg
  ?parent dbo:child dbr:Géza_von_Habsburg .

  # Identify the common entity
  FILTER (?grandchild = ?parent)
  BIND(?grandchild AS ?commonEntity)
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
54,28,val,Give me the child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?individual WHERE {
  # Find the father of Soe Min Wimala Dewi
  ?father dbo:child dbr:Soe_Min_Wimala_Dewi .
  
  # Find the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?predecessor dbo:succeededBy dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .

  # Find the parent of Thado Minsaw of Prome
  ?parent dbo:child dbr:Thado_Minsaw_of_Prome .
  
  # The individual must satisfy all three conditions
  FILTER (?individual = ?father && ?individual = ?predecessor && ?individual = ?parent)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
161,21,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  ?campaign a dbo:MilitaryConflict ;
            dbo:commander dbr:Franco_Francisco ;
            dbo:militaryForce ?militaryForce .
  
  ?campaign dbo:socialEvent true .
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
435,13,val,"Give me the region of Greenwich Mean Time and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZone ?administeredTerritory
WHERE {
  dbr:Iceland a dbo:Settlement ;
              a dbo:Town .
  OPTIONAL { dbr:Iceland dbo:timeZone ?timeZone . }
  OPTIONAL { dbr:Iceland dbo:administersTerritory ?administeredTerritory . }
}
```",3,6,4,2,2,2,3,28,0,0,1,0,0.0,0
54,40,val,Give me the child of the father of the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?thinkhaya dbo:child dbr:Anawrahta .
  ?anawrahta dbo:parent ?narathihapate .
  ?narathihapate dbo:spouse ?thadoMinsawParent .
  ?thadoMinsawParent dbo:child dbr:Thado_Minsaw_of_Prome .
  ?narathihapate dbo:predecessor dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,37,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in Biscay Campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  # Find Indalecio Prieto's predecessor
  ?predecessor dbo:successor dbr:Indalecio_Prieto .
  
  # Identify the commander in Biscay Campaign
  ?campaign dbo:commander ?predecessor ;
            a dbo:MilitaryConflict .

  # Determine the military force involved in both societal event and military conflict
  ?societalEvent dbo:militaryForce ?militaryForce ;
                a dbo:SocietalEvent .
  
  ?campaign dbo:militaryForce ?militaryForce .

}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
421,14,val,Give me the native of the birthplace of Samir Bekrić and band member of Senidah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfBirthplace
WHERE {
  # Find the birthplace of Samir Bekrić
  dbr:Samir_Bekrić dbo:birthPlace ?birthPlace .

  # Find who is native to that birthplace
  ?birthPlace dbr:country#nativeName ?nativeOfBirthplace .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
9,25,val,Give me the figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nickname ?almaMater WHERE {
  # Find the nickname of Queen's University Belfast
  OPTIONAL { 
    dbr:Queen's_University_Belfast dbo:nickname ?nickname .
  }
  
  # Find the alma mater of Allen Hill (scientist)
  OPTIONAL {
    dbr:Allen_Hill_(scientist) dbo:almaMater ?almaMater .
  }

  FILTER (?nickname = ?almaMater)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,43,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseOfRoyalParent
WHERE {
  # Princess Victoria Louise of Prussia and her spouse
  ?princess a dbo:Person ;
           rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  ?princess dbo:spouse ?spouse .

  # Child of Princess Victoria Louise who is royalty
  ?child dbo:parent ?princess ;
         a dbo:RoyalFamilyMember .

  # Parent of this child who is also royalty
  ?royalParent dbo:child ?child ;
               a dbo:RoyalFamilyMember .

  # Spouse of the royal parent
  ?royalParent dbo:spouse ?spouseOfRoyalParent .
  
  FILTER regex(?princess, ""Princess Victoria Louise of Prussia"", ""i"")
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
959,26,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry
WHERE {
  ?leader a dbo:Politician ;
          dbo:electedAs dbr:2010_Japanese_House_of_Councillors_election .
  
  ?leader dbo:residence ?residence .

  FILTER EXISTS { ?residence a dbo:Country }

  ?residence dbo:nativePlace ?nativeCountry .
}
```",3,5,4,3,1,3,3,71,0,0,8419,0,0.0,0
391,42,val,"Give me the actor of The Departed and native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find actors of ""The Departed""
SELECT ?actor WHERE {
    ?movie dbo:title ""The Departed""@en .
    ?movie dbo:starring ?actor .
}

# Step 2: Identify Hub City and its notable figures (assuming Hub City is Spokane, Washington)
SELECT ?person WHERE {
    ?city rdfs:label ""Spokane, Washington""@en .
    ?person dbo:nationality ?city ;
            a dbo:Person .
}

# Step 3: Find common actor
SELECT DISTINCT ?actor WHERE {
    # Actors of The Departed
    ?movie dbo:title ""The Departed""@en .
    ?movie dbo:starring ?actor .

    # Notable figures from Hub City (Spokane)
    ?city rdfs:label ""Spokane, Washington""@en .
    ?person dbo:nationality ?city ;
            a dbo:Person .
    
    FILTER (?actor = ?person)
}

# Step 4: Check for involvement in a work with Roz Ryan
SELECT DISTINCT ?actor WHERE {
    # Common actor from previous step
    ?movie dbo:title ""The Departed""@en .
    ?movie dbo:starring ?actor .

    ?city rdfs:label ""Spokane, Washington""@en .
    ?person dbo:nationality ?city ;
            a dbo:Person .
    
    FILTER (?actor = ?person)

    # Work involving Roz Ryan
    ?work dbo:title ?title ;
          dbo:starring ?actor ;
          dbo:starring ?rozRyan .

    ?rozRyan rdfs:label ""Roz Ryan""@en .
}

```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
378,22,val,Give me the war of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?commander ?claimToFame WHERE {
  # Part 1: War of Carl Pontus Gahn
  ?gahn a dbo:Person ;
        foaf:name ""Carl Pontus Gahn""@en ;
        dbo:participatedIn ?war .

  # Part 2: Commander in the Great Siege of Gibraltar and their claim to fame
  dbp:TheGreatSiegeOfGibraltar dbo:commander ?commander .
  ?commander dbo:notableWork ?claimToFame .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
232,37,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of London.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?film ?militaryConflict
WHERE {
  ?actor a dbo:Actor ;
         dbo:nativePlace dbr:London ;
         rdfs:label ?name .
  
  FILTER(CONTAINS(LCASE(?name), ""actor"") && CONTAINS(LCASE(?name), ""narrator"") && CONTAINS(LCASE(?name), ""producer""))
  
  OPTIONAL { ?actor dbo:filmography ?film . }
  OPTIONAL { ?actor dbo:participatedInMilitaryConflict ?militaryConflict . }

  FILTER(BOUND(?film) && BOUND(?militaryConflict))
}
LIMIT 1
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
959,28,val,"Give me the native of Japan and manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nationality ?managerRole ?almaMater WHERE {
  VALUES ?person { dbr:Eiji_Ōtsuka }
  
  # Nationality check
  ?person dbo:nationality ?nationality .
  FILTER (str(?nationality) = ""Japan"")

  # Manager role for Júbilo Iwata in 2013
  ?person dbo:managerOfTeam ?team .
  ?team rdfs:label ?teamLabel .
  FILTER (CONTAINS(LCASE(?teamLabel), ""jubilo iwata"") && 
          EXISTS { ?team dbo:season ?season . ?season dbo:year ?year . FILTER (?year = 2013) })

  # Alma mater
  ?person dbo:almaMater ?almaMater .
  ?almaMater a dbo:EducationalOrganization ;
             dbo:country dbr:Japan .
}
```",4,8,5,2,3,3,3,71,0,0,1,0,0.0,0
232,40,val,Give me the actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee and native of London.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?child
WHERE {
  # Find the actor of ""Dog Soldiers""
  dbr:Dog_Soldiers (dbo:starring) ?actor .

  # Get Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?birthName .

  # Find children of Jon Pertwee
  ?person dbo:birthName ?birthName ;
          dbo:child ?child .

  # Filter children who are native of London
  ?child dbo:nativePlace dbr:London .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
77,11,val,Give me the force of Alexander I of Russia and war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?force ?award ?war 
WHERE {
  # Part 1: Alexander I of Russia's military force
  OPTIONAL {
    dbr:Alexander_I_of_Russia dbo:commander ?leader .
    ?leader dbo:army ?force .
  }

  # Part 2: Golden Weapon for Bravery and its associated war
  OPTIONAL {
    ?award dbo:name ""Golden Weapon for Bravery""@en ;
           dbo:awardedFor ?war .
  }
}
```",3,3,4,2,2,3,2,20,0,0,11,0,0.0,0
959,33,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and member of University of Tsukuba.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry WHERE {
  ?person a dbo:Politician ;
          dbo:electedAsMemberOf ?election ;
          dbo:almaMater dbr:University_of_Tsukuba .
  
  ?election dbo:date ""2010""^^xsd:gYear .

  OPTIONAL { ?person dbo:nationality ?nativeCountry . }
}
```",4,6,5,3,2,3,3,71,0,0,84,0,0.0,0
16,29,val,Give me the professional in the profession of Satomi Ishihara and person born as Georgeanne Marie Rice and spouse of Ted McGinley.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession ?birthName ?spouseName WHERE {
  # Satomi Ishihara's profession
  ?satomi a dbo:Person ;
          foaf:name ""Satomi Ishihara""@en .
  ?satomi dbo:occupation ?profession .

  # Georgeanne Marie Rice's birth name
  ?rice a dbo:Person ;
        foaf:name ""Georgeanne Marie Rice""@en .
  OPTIONAL { ?rice foaf:name ?birthName . }

  # Ted McGinley's spouse
  ?ted a dbo:Person ;
       foaf:name ""Ted McGinley""@en .
  ?ted dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
427,44,val,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherParty ?prodiParty WHERE {
  # Find Lamberto Andreotti's father and his party affiliation
  dbr:Lamberto_Andreotti dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .

  # Find Romano Prodi's party affiliation
  dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .

  # Optional: Check if any of the parties are related to Partito Popolare Italiano
  OPTIONAL {
    ?party rdf:type dbo:PoliticalParty .
    ?party rdfs:label ""Partito Popolare Italiano""@it .
    FILTER (?fatherParty = ?party || ?prodiParty = ?party)
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
666,13,val,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerManager
WHERE {
  # Identify Leonid Slutsky's managed team
  dbr:Leonid_Slutsky dbo:sportsManager ?team .
  
  # Ensure the team is a soccer club and sports team season
  ?team rdf:type dbo:SoccerClub ;
        dbo:season ?season .
  ?season rdf:type dbo:SportsTeamSeason .

  # Find a player in this team who is also a sports manager
  ?playerManager dbo:playerInTeam ?team ;
                 rdf:type dbo:Person ;
                 dbo:sportsManager ?subordinateTeam .
}
```",3,6,4,3,1,3,2,20,0,0,28,0,0.0,0
801,43,val,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of Chris Taylor (music producer).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?song a dbo:Song .
  ?song dbo:musicalArtist ?professional .
  ?professional a dbo:MusicalArtist .
  
  ?production dbo:producer ?professional .
  ?production dbo:work ?song .

  ?association dbo:associatedMusicalArtist ?professional ;
               dbo:associatedMusicalArtist dbr:Chris_Taylor .

}
```",5,9,6,3,3,3,3,71,0,0,2,0,0.0,0
767,19,val,"Give me the entity in the administration, that is a settlement, of Green and alma mater of Carl L. Nippert.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?person dbo:almaMater ?entity .
  FILTER (?person = dbr:C._L._Nippert) .

  ?entity a dbo:Settlement ;
         dbo:partOf ?administration .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
427,35,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName
WHERE {
  ?prodi a dbo:Politician ;
         foaf:name ""Romano Antonio Prodi"" ;
         dbo:partyAffiliation ?party .
  
  ?party rdfs:label ?partyName ;
         owl:sameAs dbr:Italian_People%27s_Party_(1994) .

  FILTER (lang(?partyName) = 'en')
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
617,26,val,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Antiochus IV Epiphanes
  ?antiochusIV a dbo:Person ;
               rdfs:label ""Antiochus IV Epiphanes""@en ;
               dbp:father ?antiochusIII .

  # Ensure he is royalty
  ?antiochusIV rdf:type dbo:Royalty .

  # Step 2: Find his successor
  ?successor dbo:predecessor ?antiochusIV ;
            a dbo:Person ;
            rdf:type dbo:Royalty .

  # Step 3: Identify the child of the successor
  ?child dbo:parent ?successor ;
         a dbo:Person ;
         rdf:type dbo:Royalty .

  # Step 4: Determine the spouse of that child
  ?spouse dbo:spouse ?child .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
9,19,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?allenHillAlmaMater ?mayorAlmaMater WHERE {
  # Find Allen Hill the scientist and his alma mater
  ?allenHill a dbo:Scientist ;
             foaf:name ""Allen Hill"" .
  OPTIONAL { ?allenHill dbo:almaMater ?allenHillAlmaMater . }

  # Find the mayor of Northern Ireland Forum who is also a politician and their alma mater
  ?mayor a dbo:Politician, dbo:Mayor ;
         foaf:name ?name ;
         dbo:officeLocation dbr:Northern_Ireland_Forum .
  OPTIONAL { ?mayor dbo:almaMater ?mayorAlmaMater . }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
281,24,val,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Query 1: Find Bob Heffron's Birth Place that is a Country
SELECT ?birthPlace WHERE {
    ?person dbo:birthName ""Bob Heffron""@en .
    ?person dbo:birthPlace ?birthPlace .
    ?birthPlace rdf:type dbo:Country .
}

# Query 2: Find Wars Involving New Zealand Army
SELECT ?war WHERE {
    ?nzArmy rdfs:label ""New Zealand Army""@en .
    ?nzArmy dbo:participatedIn ?war .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
994,43,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and associated musical artist of S.A. Slayer and band member of Don Dokken.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Fredrik Thordendal's band and associated musical artists
SELECT DISTINCT ?band ?associatedArtist WHERE {
  VALUES (?person) { dbr:Fredrik_Thordendal }
  ?person dbo:bandMember ?band .
  FILTER (isLiteral(?band))
  
  OPTIONAL {
    ?band dbo:associatedBand ?associatedArtist .
    FILTER (!isLiteral(?associatedArtist))
  }
}

UNION

# Query for S.A. Slayer's band and associated musical artists
SELECT DISTINCT ?band ?associatedArtist WHERE {
  VALUES (?person) { dbr/Jeff_Hanneman }
  ?person dbo:bandMember ?band .
  FILTER (isLiteral(?band))
  
  OPTIONAL {
    ?band dbo:associatedBand ?associatedArtist .
    FILTER (!isLiteral(?associatedArtist))
  }
}

UNION

# Query for Don Dokken's band membership
SELECT DISTINCT ?band WHERE {
  VALUES (?person) { dbr/Don_Dokken }
  ?person dbo:bandMember ?band .
  FILTER (isLiteral(?band))
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
701,32,val,Give me the parent of the child of Nefertari and parent of the child of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parent
WHERE {
  # Find the children of Nefertari
  ?nefertariChild dbo:childOf ?nefertari .
  FILTER(?nefertari = dbpedia:Nefertari) .

  # Find the parent of each child of Nefertari
  ?nefertariChild dbo:parent ?parentNefertari .

  # Find the children of Ramesses II
  ?ramessesChild dbo:childOf ?ramesses .
  FILTER(?ramesses = dbpedia:Ramesses_II) .

  # Find the parent of each child of Ramesses II
  ?ramessesChild dbo:parent ?parentRamesses .

  # Match parents from both sets of children
  FILTER(?parentNefertari = ?parentRamesses)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
55,18,val,"Give me the band of the reference, that is a band, to Newsted and band member of Metallica.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName
WHERE {
  ?person rdfs:label ""Jason Newsted""@en .
  ?person dbo:musicalArtist ?band .
  ?band rdfs:label ?bandName .
  FILTER(CONTAINS(LCASE(?bandName), ""metallica""))
}
```",3,4,4,2,2,2,3,28,0,0,3,0,0.0,0
92,25,val,Give me the band of the person born as Joseph Michael Furney and associated musical artist of Jim Sheppard.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?artist 
WHERE {
  # Find the band associated with Joe Satriani (Joseph Michael Furney)
  OPTIONAL { 
    VALUES ?person1 { dbr:Joe_Satriani }
    ?person1 dbo:band ?band .
  }

  # Find the musical artist associated with Jim Sheppard
  OPTIONAL { 
    VALUES ?person2 { dbr:Jim_Sheppard_(musician) }
    ?person2 dbo:musicalArtist ?artist .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,36,val,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?militaryUnit
WHERE {
  # Beauchamp Seymour, 1st Baron Alcester
  dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:militaryUnit ?militaryUnit .
  
  # Ensure the military unit is part of the New Zealand Army
  ?militaryUnit dbo:partOf dbr:New_Zealand_Army .

  # Find wars associated with Beauchamp Seymour
  OPTIONAL { 
    dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:war ?war .
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
391,39,val,"Give me the actor of The Departed and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorOfDeparted ?movieWorkTVShow ?actorOfWorkTVShow
WHERE {
  # Find the actor of ""The Departed""
  dbr:The_Departed dbo:starring ?actorOfDeparted .

  # Find a movie that is also classified as both a work and a television show
  ?movieWorkTVShow rdf:type dbo:Film ;
                   rdf:type dbo:Work ;
                   rdf:type dbo:TelevisionShow .
  
  # Get the actor of this movie/work/television show
  ?movieWorkTVShow dbo:starring ?actorOfWorkTVShow .
}
```",4,7,5,3,2,3,3,71,7,16212,0,0.00043159257660768235,1.0,0.0008628127696289905
767,41,val,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of Green and reference to .","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater ?settlement WHERE {
  # Find George K. Nash's alma mater
  dbr:George_K._Nash dbo:almaMater ?almaMater .

  # Identify settlements associated with his administration
  ?adminEntity dbo:city ?settlement .
  
  FILTER EXISTS { 
    ?adminEntity rdfs:label ""George K. Nash""@en .
  }

  # Ensure there is a reference to ""Green""
  OPTIONAL {
    ?settlement dbo:wikiPageWikiLink dbr:Green .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
659,44,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in German campaign of 1813.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Query to find Rutger Jan Schimmelpenninck's military force
SELECT ?militaryForce WHERE {
    ?schimmelpenninck dbo:birthName ""Rutger Jan Schimmelpenninck"" .
    ?schimmelpenninck dbo:militaryForce ?militaryForce .
    ?militaryForce a dbo:SocietalEvent ;
                   a dbo:Event ;
                   a dbo:MilitaryConflict .
}

# Query to find the commander of the 1st Light Cavalry Lancers Regiment during a war
SELECT ?commander WHERE {
    ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
    ?war a dbo:MilitaryConflict ;
         dbo:eventType dbr:Military_conflict .
    ?regiment dbo:participatedIn ?war .
    ?war dbo:commander ?commander .
}

# Query to find the commander in the German campaign of 1813
SELECT ?commander WHERE {
    ?campaign rdfs:label ""German campaign of 1813""@en ;
              a dbo:MilitaryConflict .
    ?campaign dbo:commander ?commander .
}
```",5,10,6,2,3,3,3,71,0,0,7,0,0.0,0
528,32,val,Give me the war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battle (GROUP_CONCAT(?war; separator="", "") AS ?wars) 
         ?commander
WHERE {
  VALUES (?battle ?property) { 
    (dbr:Battle_of_Pisagua dbo:partOf ?war)
    (dbr:Battle_of_La_Rinconada_de_Ate dbo:partOf ?war)
    (dbr:Battle_of_Pisagua dbo:commander ?commander)
    (dbr:Battle_of_La_Rinconada_de_Ate dbo:commander ?commander)
  }
  
  OPTIONAL { ?battle dbo:partOf ?war . FILTER(?property = dbo:partOf) }
  OPTIONAL { ?battle dbo:commander ?commander . FILTER(?property = dbo:commander) }
}
GROUP BY ?battle ?commander
```",4,4,5,2,2,3,3,71,0,0,8,0,0.0,0
294,12,val,"Give me the entity in Nashville, Tennessee and resting place of Luke Lea (American politician, born 1879) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlaceLukeLea ?restingPlaceEdwinAKeable
WHERE {
  OPTIONAL { 
    dbr:Luke_Lea (dbo:deathPlace|dbo:burialPlace) ?restingPlaceLukeLea .
  }
  OPTIONAL { 
    dbr:Edwin_A._Keeble (dbo:deathPlace|dbo:burialPlace) ?restingPlaceEdwinAKeable .
  }
}
```",3,3,4,1,3,2,3,28,0,1,1,0.0,0.0,0
48,15,val,"Give me the band of Murda Mook and band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find Murda Mook's Band
SELECT ?band WHERE {
    ?murdamook dbo:associatedBand ?band .
    FILTER (str(?murdamook) = ""Murda_Mook"")
}

# Step 2: Identify a Work by Shellback
SELECT DISTINCT ?work WHERE {
    ?shellback dbo:producedWork ?work .
    FILTER (str(?shellback) = ""Shellback_(record_producer)"")
}

# Step 3: Find the Writer of that Work
SELECT DISTINCT ?writer WHERE {
    ?work dbo:lyricsBy ?writer .
    ?shellback dbo:producedWork ?work .
    FILTER (str(?shellback) = ""Shellback_(record_producer)"")
}

# Step 4: Determine the Band of the Writer
SELECT DISTINCT ?band WHERE {
    ?writer dbo:associatedBand ?band .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
547,40,val,Give me the resting place of Simon Cadell and resting place of Alan Cunningham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Resting place of Simon Cadell
SELECT ?restingPlaceCadell WHERE {
  dbr:Simon_Cadell dbo:finalBurial ?restingPlaceCadell .
}

UNION

# Resting place of Alan Cunningham
SELECT ?restingPlaceCunningham WHERE {
  dbr:Alan_Cunningham dbo:finalBurial ?restingPlaceCunningham .
}

UNION

# Resting place of the child of the child of William Haliburton
SELECT ?grandchildRestingPlace WHERE {
  dbr:William_Haliburton dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .
  ?grandchild dbo:finalBurial ?grandchildRestingPlace .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,40,val,Give me the band member of Don Dokken and associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtistRedTide ?watchtowerAssociatedArtist
WHERE {
  # Find band members of Don Dokken
  ?bandMember dbo:bandMember dbr:Don_Dokken .
  
  # Find associated musical artist with Red Tide for each band member
  ?bandMember dbo:associatedMusicalArtist dbr:Red_Tide_(band) .
  ?bandMember dbo:associatedMusicalArtist ?associatedArtistRedTide .

  # Check if the associated artist is linked to Watchtower
  ?watchtowerAssociatedArtist dbo:associatedMusicalArtist dbr:Watchtower .
  ?associatedArtistRedTide dbo:associatedMusicalArtist ?watchtowerAssociatedArtist .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,15,val,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb and team of Alessandro Mangiarratti.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club ?nickname 
WHERE {
  ?player1 dbo:nationality dbr:Switzerland .
  ?player1 dbo:sportTeam ?team .
  ?player2 dbo:nationality dbr:Italy .
  ?player2 dbo:sportTeam ?team .
  
  FILTER(?player1 = dbr:Armando_Heeb && ?player2 = dbr:Alessandro_Mangiarratti)
  
  ?team a dbo:SportsClub ;
        a dbo:Organization ;
        a dbo:SoccerClub ;
        rdfs:label ?club ;
        dbo:nickname ?nickname .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
492,21,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at Algiers.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successorSatterthwaite ?successorAlgiers
WHERE {
  # Find the successor of Joseph C. Satterthwaite as US Assistant Secretary of State for African Affairs
  OPTIONAL {
    ?satterthwaite dbo:position dbr:US_Assistant_Secretary_of_State_for_African_Affairs .
    ?satterthwaite dbo:successor ?successorSatterthwaite .
    FILTER (str(?satterthwaite) = ""Joseph_C._Satterthwaite"")
  }

  # Find the successor of a person in a similar position at Algiers
  OPTIONAL {
    ?algiersPosition dbo:location dbr:Algiers .
    ?algiersPosition dbo:position dbr:US_Assistant_Secretary_of_State_for_African_Affairs ;
                     dbo:successor ?successorAlgiers .
  }
}
```",3,3,4,2,2,3,3,71,0,0,16,0,0.0,0
994,21,val,Give me the band member of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?associatedArtist ?finalAssociatedArtist
WHERE {
  # Step 1: Find Don Dokken's band
  ?dokken dbo:bandMember ?donDokkenBand .
  FILTER (str(?dokken) = ""Don_Dokken"")

  # Step 2: Find a member of Don Dokken's band
  ?member dbo:bandMember ?donDokkenBand .

  # Step 3: Find Watchtower's associated musical artist
  ?watchtower dbp:associatedBand ?watchtowerAssociatedArtist .
  FILTER (str(?watchtower) = ""Watchtower_(band)"")

  # Step 4: Find the associated musical artist of Watchtower's associated artist
  ?watchtowerAssociatedArtist dbp:associatedBand ?finalAssociatedArtist .

  # Return results
  BIND(?member AS ?bandMember)
  BIND(?watchtowerAssociatedArtist AS ?associatedArtist)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
44,7,val,Give me the band member of the band of John Pettibone and band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?member1 ?member2 WHERE {
  # Find John Pettibone's band and its members
  ?pettiboneBand dbo:bandMember dbp:PettiboneJohn .
  ?pettiboneBand dbo:bandMember ?member1 .

  # Find Sledgeback's members
  dbp:Sledgeback dbo:bandMember ?member2 .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
645,11,val,"Give me the alma mater of Sylvia Pankhurst and entity in the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?countryResidence WHERE {
  # Alma mater of Sylvia Pankhurst
  OPTIONAL {
    dbr:Sylvia_Pankhurst dbo:almaMater ?almaMater .
  }
  
  # Country of residence for James Wilkes Maurice
  OPTIONAL {
    dbr:James_Wilkes_Maurice dbo:residence ?residence .
    ?residence a dbo:Country ;
               rdfs:label ?countryResidence .
  }
}
```",3,4,4,2,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
712,12,val,Give me the capital of South Russia (1919–1920) and resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?capital ?restingPlace WHERE {
  # Part 1: Capital of South Russia (1919–1920)
  OPTIONAL {
    dbr:Rostov-on-Don dbo:capital ""South Russia""@en .
    BIND(dbr:Rostov-on-Don AS ?capital)
  }

  # Part 2: Resting place of an awardee of Hero of the Soviet Union
  OPTIONAL {
    ?person dbo:awardedBy dbr:Hero_of_the_Soviet_Union .
    ?person dbo:deathPlace ?restingPlace .
    FILTER EXISTS { ?person rdfs:label ""Alexander Matrosov""@en }
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
485,17,val,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in Nottinghamshire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          dbo:award dbr:Erich_Gregory_Award ;
          dbo:birthPlace ?birthPlace .
  ?person dbo:occupation dbr:Writer ;
          dbo:occupation dbr:Poet .
  OPTIONAL { ?person dbo:residence dbr:Nottinghamshire . }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
488,44,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of Enomoto Takeaki and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceYukiFather ?birthPlaceEnomoto ?administrationGoMizunooFather
WHERE {
  # Death place of Yūki Hideyasu's father who is a politician
  OPTIONAL {
    ?yukiHideyasu dbo:father ?fatherYuki .
    ?fatherYuki rdf:type dbo:Politician .
    ?fatherYuki dbo:deathPlace ?deathPlaceYukiFather .
    FILTER (str(?yukiHideyasu) = ""Yūki_Hideyasu"")
  }

  # Birth place of Enomoto Takeaki
  OPTIONAL {
    dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceEnomoto .
  }
  
  # Administration of Emperor Go-Mizunoo's father
  OPTIONAL {
    dbr:Emperor_Go-Mizunoo dbo:father ?fatherGoMizunoo .
    ?fatherGoMizunoo rdf:type dbo:GovernmentOfficial .
    ?fatherGoMizunoo dbo:administration ?administrationGoMizunooFather .
  }
}
```",5,6,6,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
303,18,val,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in Panama.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Arnulfo Arias Madrid"" ;
          dbo:birthPlace dbr:Panama ;
          dbo:occupation dbo:Politician .
  ?person dbo:partyAffiliation ?party .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
10,17,val,"Give me the professional in  and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?bandMemberOf
WHERE {
  VALUES ?person { dbr:Luke_Vibert }
  
  ?person a dbo:Artist .
  OPTIONAL { ?person dbo:profession ?profession . }
  OPTIONAL { ?person dbo:bandMemberOf ?bandMemberOf . }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
92,22,val,Give me the band member of Nevermore and band of the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?band
WHERE {
  # Find members of Nevermore
  ?person dbo:memberOfBand dbr:Nevermore .
  
  # Get the band associated with Joseph Michael Furney (Warrel Dane)
  OPTIONAL { 
    ?person rdfs:label ""Joseph Michael Furney""@en .
    ?person dbo:bandMember ?band .
  }
  
  # Filter to get Warrel Dane's bands
  FILTER (?person = dbr:Warrel_Dane)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
251,18,val,Give me the administration of Forza Italia (2013) and death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for administration of Forza Italia in 2013
SELECT ?administration WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Forza Italia""@en .
  OPTIONAL { 
    ?member dbo:memberOf ?party ;
            dbo:officePeriod ?period .
    FILTER (YEAR(?period) = 2013)
    BIND(CONCAT(""Member in 2013: "", STR(?member)) AS ?administration)
  }
  OPTIONAL {
    ?head dbo:headOf ?party ;
          dbo:officePeriod ?period .
    FILTER (YEAR(?period) = 2013)
    BIND(CONCAT(""Head in 2013: "", STR(?head)) AS ?administration)
  }
}

UNION

# Query for death place of the author of ""The Twelve Abbots of Challant""
SELECT ?deathPlace WHERE {
  ?work dbo:author ?author ;
        rdfs:label ""The Twelve Abbots of Challant""@en .
  ?author dbo:deathPlace ?deathPlace
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,11,val,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?grandchild
WHERE {
  # Find William Ernest's father
  dbr:William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:father ?father .

  # Find children of Grand Duchess Maria Pavlovna who are royalty
  dbr:Maria_Pavlovna_of_Russia_(1786–1859) dbo:child ?child .
  FILTER EXISTS { ?child a dbo:Monarch . }

  # Find grandchildren (children of the child) who are royalty
  ?child dbo:child ?grandchild .
  FILTER EXISTS { ?grandchild a dbo:Monarch . }
  
  # Check if William Ernest's father is connected to these grandchildren
  OPTIONAL {
    ?father dbo:child ?intermediate .
    ?intermediate dbo:child ?grandchild .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
184,43,val,"Give me the parent of Géza von Habsburg and parent of Archduchess Ilona of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonAncestor WHERE {
  # Find parent of Géza von Habsburg
  ?geza a dbo:Person ;
        foaf:name ""Géza von Habsburg""@en .
  ?parent1 dbo:child ?geza .

  # Find parent of Archduchess Ilona of Austria
  ?ilona a dbo:Person ;
         foaf:name ""Archduchess Ilona of Austria""@en .
  ?parent2 dbo:child ?ilona .

  # Find child of the child of the parent (from step 1) that is royalty and related to Archduke Ladislaus Philipp
  ?child1 dbo:child ?parent1 ;
          rdf:type/rdfs:subClassOf* dbo:RoyalFamilyMember .
  ?child2 dbo:child ?parent2 ;
          rdf:type/rdfs:subClassOf* dbo:RoyalFamilyMember .

  # Find common ancestor related to Archduke Ladislaus Philipp
  ?ladislaus a dbo:Person ;
             foaf:name ""Archduke Ladislaus Philipp of Austria""@en .
  ?commonAncestor dbo:child ?child1 ;
                  dbo:child ?child2 ;
                  rdf:type/rdfs:subClassOf* dbo:RoyalFamilyMember .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
488,23,val,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Identify Saitō Hajime and his birthplace
  dbr:Saitō_Hajime a dbo:Person ;
                   dbo:birthPlace ?birthPlace .

  OPTIONAL {
    # Find the war or military conflict he was involved in as a commander
    ?war a dbo:MilitaryConflict ;
         dbo:commander dbr:Saitō_Hajime .
  }
}
```",3,6,4,3,1,3,3,71,0,0,17,0,0.0,0
492,39,val,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find commanders in the Franco-Hova Wars
  ?event dbo:participatedIn dbr:Franco-Hova_Wars .
  ?commander dbo:role ?event ;
             a dbo:Person .

  # Find persons who died at the capital of Khemis Miliana District
  ?person dbo:deathPlace dbr:Khemis_Miliana ;
          a dbo:Person .

  # Ensure the person is both a commander and deceased in the specified location
  FILTER (?commander = ?person)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
528,24,val,Give me the war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?force
WHERE {
  # Find the commander of the Battle of La Rinconada de Ate
  OPTIONAL { 
    dbr:Battle_of_La_Rinconada_de_Ate dbo:commander ?commander .
  }
  
  # Find the military force associated with Narciso Campero
  OPTIONAL {
    dbr:Narciso_Campero dbo:militaryUnit ?force .
  }
}
```",3,3,4,2,2,3,3,71,0,2,2,0.0,0.0,0
712,11,val,Give me the capital of the country of Armed Forces of South Russia and resting place of Nina Onilova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital ?restingPlace WHERE {
  # Find the capital of Russia
  dbr:Russia dbo:capital ?capital .

  # Find the resting place of Nina Onilova
  OPTIONAL { 
    dbr:Nina_Onilova dbo:deathPlace ?restingPlace .
  }
}
```",3,3,4,2,2,3,2,20,0,1,1,0.0,0.0,0
281,43,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of Beauchamp Seymour, 1st Baron Alcester and war of New Zealand Army.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceEntity WHERE {
  # Find the leader of the 1962 New South Wales State Election
  ?leader a dbo:Politician ;
          dbo:leaderOf dbr:1962_New_South_Wales_state_election .

  # Get the birthplace of this leader and ensure it is a country
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlaceEntity rdfs:label ?birthPlaceLabel ;
                   rdf:type dbo:Country .

  # Find wars involving Beauchamp Seymour, 1st Baron Alcester
  dbr:Beauchamp_Seymour,_1st_Baron_Alcester dbo:participatedInWar ?war1 .

  # Find wars involving the New Zealand Army
  dbr:New_Zealand_Army dbo:participatedInWar ?war2 .

  # Ensure the same war is involved in both cases
  FILTER (?war1 = ?war2)

  # Bind the birthplace entity to the result
  BIND(?birthPlaceEntity AS ?entity)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
318,7,val,Give me the person born in the founding year of Eel Pie Publishing and professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the founding year of Eel Pie Publishing
  dbr:Eel_Pie_Publishing dbo:foundingDate ?foundingYear .
  
  # Find a person who is a composer and was born in that founding year
  ?person rdf:type dbo:Composer ;
          dbo:birthDate ?birthDate .
  
  FILTER (YEAR(?birthDate) = YEAR(?foundingYear))
}
```",3,3,4,2,2,2,2,9,0,0,7,0,0.0,0
404,39,val,Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfErnest ?childOfFather
WHERE {
  # Find Prince Ernest Augustus of Hanover and his parent
  ?ernest a dbo:Person ;
          dbo:birthDate ?birthDate ;
          dbo:parent ?parentOfErnest .
  FILTER (YEAR(?birthDate) = 1914)

  # Find Princess Victoria Louise of Prussia and her spouse's father
  ?victoria a dbo:Person ;
            dbo:spouse ?spouse .
  ?spouse dbo:father ?fatherOfSpouse .

  # Find the child of this father
  ?fatherOfSpouse dbo:child ?childOfFather .
}
```",4,4,5,3,2,3,3,71,0,520,1,0.0,0.0,0
339,12,val,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia and child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?marina dbo:childOf ?elena .
  ?marina dbo:childOf ?georgeI .
  ?elena rdfs:label ""Grand Duchess Elena Vladimirovna of Russia""@en .
  ?georgeI rdfs:label ""George I of Greece""@en .
  ?marina rdfs:label ""Princess Marina of Greece and Denmark""@en .
  ?marina dbo:father ?father .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
328,32,val,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find commanders under Ferenc Szálasi
  ?szalasi dbo:commander ?person .
  FILTER(?szalasi = dbr:Ferenc_Szálasi) .

  # Find awardees of Bruce Fraser, 1st Baron Fraser of North Cape
  ?fraser dbo:awardee ?person .
  FILTER(?fraser = dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape)
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
981,13,val,"Give me the entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?timeZone
WHERE {
  ?entity a dbp:Regency ;
          dbp:inProvince dbr:North_Sumatra ;
          rdfs:label ""Salak""@en .
  OPTIONAL { ?entity dbo:timeZone ?timeZone . }
}
```",3,3,4,3,1,3,2,20,0,0,2949,0,0.0,0
754,14,val,Give me the parent of the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Identify Ram Khamhaeng the Great
  VALUES ?ramKhamhaeng { dbr:Ram_Khamhaeng_the_Great }

  # Step 2: Find a child of Ram Khamhaeng the Great
  OPTIONAL {
    ?ramKhamhaeng dbo:child ?child .
  }
  
  # Step 3: Identify the parent of that child
  OPTIONAL {
    ?child dbo:parent ?parent .
  }
}
```",3,3,4,3,1,3,2,20,1,33500,0,2.9849855228202142e-05,1.0,5.969792848188167e-05
16,27,val,Give me the person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:almaMater dbr:Ohio_State_University .
  ?person foaf:name ?birthName .
}
```",3,3,4,3,1,3,3,71,72,364,18,0.1651376146788991,0.8,0.2737642585551331
303,19,val,"Give me the entity in Panama and party of Arnulfo Arias and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?ariasParty ?noriegaAffiliation
WHERE {
  # Arnulfo Arias's political party
  OPTIONAL { 
    dbr:Arnulfo_Arias/dbo:party ?ariasParty .
  }
  
  # General Noriega's political affiliation (if any)
  OPTIONAL {
    dbr:Manuel_Noriega/dbo:politicalAffiliation ?noriegaAffiliation .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
617,21,val,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  ?parent rdf:type dbo:Person ;
          rdfs:label ""Seleucus II Callinicus""@en .
  
  ?sibling dbo:child ?parent ;
           dbo:child ?child .

  ?child dbo:child ?childOfChild .

  ?royalChild dbo:child ?childOfChild ;
              a dbo:Monarch ; # Assuming royalty is represented by Monarch class

  ?nysa dbp:spouse ?royalParent .
  
  FILTER(?royalParent = ?childOfChild)

  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
996,15,val,Give me the force of the awardee of the elevation of Lac d'Avoriaz and entity in France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?force WHERE {
  ?award dbo:location dbr:Lac_d'Avoriaz .
  ?award dbo:recipient ?entity .
  OPTIONAL { ?entity dbo:teamName ?force . }
  FILTER EXISTS { ?entity dbo:country dbr:France . }
}
```",4,4,5,3,2,3,2,20,0,0,4,0,0.0,0
92,36,val,Give me the band of the person born as the birth name of Joseph Michael and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band 
WHERE {
  ?person dbo:birthName ""Joseph Michael""@en .
  ?person dbo:memberOfBand dbr:Nevermore .
  ?person dbo:memberOfBand ?band .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
492,28,val,"Give me the commander in Franco-Hova Wars and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at Algiers.","SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . }","```sparql
# Query for Commander in Franco-Hova Wars
SELECT ?commander WHERE {
  ?event dbo:participatedIn dbr:Franco-Hova_Wars .
  ?event dbo:commander ?commander .
}

UNION

# Query for Person Decedent at Work of Joseph C. Satterthwaite
SELECT DISTINCT ?decedent WHERE {
  ?person dbo:deathPlace ?place .
  ?work dbo:employee ?person ;
        dbo:employer dbr:Joseph_C._Satterthwaite .
  FILTER EXISTS { ?work dbo:endDate ?endDate . }
}

UNION

# Query for Person Decedent at Algiers
SELECT DISTINCT ?decedent WHERE {
  ?decedent dbo:deathPlace dbr:Algiers .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
232,21,val,Give me the native of London and child of the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""John Devon Roland Pertwee""@en ;
          dbo:birthPlace dbr:London .
  
  ?person dbo:child ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
645,15,val,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock and alma mater of Sylvia Pankhurst.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Find the commander in Battle of Diamond Rock
  ?battle dbo:commander ?commander .
  FILTER(STRSTARTS(STR(?battle), ""Battle_of_Diamond_Rock"")) .

  # Get Sylvia Pankhurst's alma mater
  dbr:Sylvia_Pankhurst dbo:almaMater ?almaMater .

  # Check if the commander's residence is a country
  ?commander dbo:residence ?residence .
  FILTER(STRSTARTS(STR(?residence), ""Country_"")) .

  # Check if Sylvia Pankhurst's alma mater is a country
  ?almaMater rdf:type dbo:EducationalInstitution ;
             dbo:location ?location .
  FILTER(STRSTARTS(STR(?location), ""Country_"")) .

  # Ensure both are the same country
  BIND(IF(BOUND(?residence) && BOUND(?location), IF(?residence = ?location, ?residence, ()), ()) AS ?country)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
488,24,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Query to get Yūki Hideyasu's father and check if he was a politician
SELECT ?father ?deathPlace WHERE {
  ?yuki dbo:father ?father .
  FILTER(STRSTARTS(LCASE(?yuki), ""yuki_hideyasu""))
  
  OPTIONAL { ?father rdf:type dbo:Politician . }
  
  OPTIONAL { ?father dbo:deathPlace ?deathPlace . }
}

UNION

# Query to get the administration of Emperor Go-Yōzei and check if any were fathers
SELECT ?administrator ?deathPlace WHERE {
  ?go_yozei dbo:administration ?administrator .
  FILTER(STRSTARTS(LCASE(?go_yozei), ""emperor_go-yōzei""))
  
  OPTIONAL { ?administrator rdf:type dbo:Politician . }
  
  OPTIONAL { ?administrator dbo:father ?father . }
  OPTIONAL { ?administrator dbo:deathPlace ?deathPlace . }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
435,15,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?workOfArticle62SectionIV ?administeredTerritory WHERE {
  VALUES ?iceland { dbr:Iceland }
  
  # Assuming there's a property or related entity for constitutional articles
  OPTIONAL {
    ?iceland dbo:constitutionArticle ?article .
    FILTER regex(str(?article), ""Article 62, Section IV"", ""i"") .
    ?article dbo:work ?workOfArticle62SectionIV .
  }

  # Assuming there's a property for territories administered
  OPTIONAL {
    ?iceland dbo:administrativeTerritory ?administeredTerritory .
  }
}
```",3,6,4,2,2,2,3,28,0,0,1,0,0.0,0
838,15,val,"Give me the band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić and band member of Kerber.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandOfCommonMember WHERE {
  # Step 1: Find Žika Jelić's band
  ?zikaband a dbo:Band ;
            dbo:bandMember ?zikamember .
  
  FILTER(?zikamember = dbp:Žika_Jelić) .

  # Step 2: Find Kerber's members
  ?kerber a dbo:Band ;
          dbo:bandMember ?kerbermember .

  FILTER(?kerbermember = dbp:Kerber) .

  # Step 3: Identify common member between Žika Jelić's band and Kerber
  ?commonMember a dbo:MusicalArtist, dbo:Artist ;
                dbo:bandMember ?zikaband ;
                dbo:bandMember ?kerber .
  
  # Step 4: Find the band of this common member
  ?commonBand a dbo:Band ;
              dbo:bandMember ?commonMember .

  FILTER(?commonBand != ?zikaband && ?commonBand != ?kerber)
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
161,35,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryConflict ?militaryForce
WHERE {
  # Find the commander associated with Emilio Mola in a military event
  ?event dbo:commander dbr:Emilio_Mola .
  ?event dbo:militaryCommander ?commander .

  # Find the military conflict involving Francisco Franco that is also a societal event
  ?conflict dbo:militaryConflict ?militaryConflict ;
           dbo:societalEvent true ;
           dbo:commander dbr:Franco_Francisco .
  
  # Identify the military force associated with this conflict
  ?conflict dbo:militaryForce ?militaryForce .
}
```",4,8,5,2,2,3,3,71,0,0,34,0,0.0,0
421,12,val,Give me the native of Socialist Federal Republic of Yugoslavia and person born as Edin Dervišhalidović and band member of Senidah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace ?bandMembership
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Edin Dervišhalidović"" ;
          dbo:nationality ?nationality .
  
  OPTIONAL { 
    ?person dbo:birthPlace ?nativePlace .
  }
  
  OPTIONAL {
    ?person dbo:memberOfBand ?band .
    FILTER (str(?band) = str(dbr:Senidah))
  }

  # Filter for nationality related to the Socialist Federal Republic of Yugoslavia
  VALUES ?nationality { dbr:Socialist_Federal_Republic_of_Yugoslavia }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
391,41,val,"Give me the actor of All About the Andersons and native of the figure known as Hub City and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find actors in ""All About the Andersons""
SELECT ?actor WHERE {
    dbr:All_About_the_Andersons dbo:starring ?actor .
}

# Step 2: Filter actors native to Hub City
FILTER EXISTS { 
    ?actor dbo:birthPlace dbr:Hub_City .
}

# Step 3: Identify Michael Ballhaus's claim to fame
SELECT ?claimToFame WHERE {
    dbr:Michael_Ballhaus dbo:notableWork ?claimToFame .
}

# Step 4: Ensure the actor acted in Michael Ballhaus's claim to fame
FILTER EXISTS { 
    ?actor dbo:starring ?claimToFame .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
115,7,val,Give me the alma mater of the alumnus of National University of San Marcos and alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?jorgeAlmaMater ?alumnus ?alumnusAlmaMater
WHERE {
  # Find the alma mater of Jorge Sotomayor Tello
  OPTIONAL { 
    dbr:Jorge_Sotomayor_Tello dbo:almaMater ?jorgeAlmaMater .
  }
  
  # Identify a notable alumnus from National University of San Marcos and their alma mater
  {
    SELECT DISTINCT ?alumnus ?alumnusAlmaMater
    WHERE {
      ?alumnus dbo:almaMater dbr:National_University_of_San_Marcos .
      OPTIONAL { 
        ?alumnus dbo:almaMater ?alumnusAlmaMater .
      }
    }
  }
}
```",3,3,4,2,2,2,2,9,2,121,0,0.016260162601626018,1.0,0.032
303,12,val,Give me the party of Guillermo Endara and party of Arnulfo Arias and entity in Panama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?endaraParty ?ariasParty ?panamaEntity
WHERE {
  ?guillermoEndara a dbo:Person ;
                  foaf:name ""Guillermo Endara"" ;
                  dbo:party ?endaraParty .
  
  ?arnulfoArias a dbo:Person ;
                foaf:name ""Arnulfo Arias"" ;
                dbo:party ?ariasParty .

  dbpedia:Panama ?panamaEntity .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
294,14,val,"Give me the resting place of Luke Lea (American politician, born 1879) and resting place of the architect of P. D. Houston Jr. House.","SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query for Luke Lea's resting place
SELECT ?restingPlace WHERE {
  ?lukeLea a dbo:Person ;
           foaf:name ""Luke Lea"" ;
           dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1879)
  OPTIONAL { ?lukeLea dbo:finalBurial ?restingPlace . }
}

UNION

# Query for the architect of P. D. Houston Jr. House's resting place
SELECT ?architectRestingPlace WHERE {
  ?house a dbo:Building ;
         rdfs:label ""P. D. Houston Jr. House""@en .
  OPTIONAL { ?house dbo:architect ?architect . }
  OPTIONAL { ?architect dbo:finalBurial ?architectRestingPlace . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
328,27,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leaderOfAgency WHERE {
  # Step 1: Identify Gustav Jonson and his office
  ?gustavJonson a dbo:OfficeHolder ;
                foaf:name ""Gustav Jonson""@en .
  
  # Step 2: Find the office he leads or holds
  ?office dbo:head ?gustavJonson .

  # Step 3: Identify the government agency associated with this office
  ?agency a dbo:GovernmentAgency ;
          dbo:headOffice ?office .

  # Step 4: Find the leader of this government agency
  ?leaderOfAgency dbo:positionHeld ?agency .
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
778,12,val,"Give me the entity in United States and author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v0 <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInUS ?softwareWork
WHERE {
  # Identify Bill Joy and his birthplace in the United States
  dbr:Bill_Joy a dbo:Person ;
               dbo:birthPlace ?usEntity .

  # Find software work authored by Bill Joy
  OPTIONAL { 
    dbr:Bill_Joy dbo:work ?softwareWork .
    FILTER (strstarts(str(?softwareWork), ""Berkeley Software Distribution""))
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
161,30,val,"Give me the military force of Rif War and military force of Spanish Civil War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?rifWarForce ?rifWarCommander ?civilWarForce ?civilWarCommander
WHERE {
  # Rif War military force and commander
  dbr:Rif_War dbo:militaryForce ?rifWarForce .
  OPTIONAL { ?rifWarForce dbo:commander ?rifWarCommander . }

  # Spanish Civil War military force and commander
  dbr:Spanish_Civil_War dbo:militaryForce ?civilWarForce .
  OPTIONAL { ?civilWarForce dbo:commander ?civilWarCommander . }
  
  # Emilio Mola's role in the Spanish Civil War
  dbr:Emilio_Mola dbo:commanderOf ?militaryEntity .
  FILTER(?militaryEntity = ?civilWarForce)
}
```",4,5,5,2,3,3,3,71,0,0,11,0,0.0,0
994,30,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for associated musical artists of Red Tide (band)
SELECT ?associatedBandMember WHERE {
  ?redTide dbo:wikiPageRedirects db:Red_Tide_(band) .
  ?redTide a dbo:Band ;
           dbo:associatedBandMember ?associatedBandMember .
}

UNION

# Query for band members of Donald Maynard Dokken who are musical artists
SELECT ?bandMember WHERE {
  ?dokken dbo:birthName ""Donald Maynard Dokken""@en ;
          a dbo:MusicalArtist .
  ?dokken dbo:member ?bandMember .
  ?bandMember a dbo:Band .
}

UNION

# Query for associated musical artists of S.A. Slayer
SELECT ?associatedBandMember WHERE {
  ?sASlayer dbo:wikiPageRedirects db:S._A._Slayer ;
            a dbo:Band ;
            dbo:associatedBandMember ?associatedBandMember .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
161,22,val,"Give me the military force of Rif War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Find the military force involved in the Rif War
  ?event dbo:participatedIn ?militaryForce .
  ?event rdfs:label ""Rif War""@en .

  # Check if Emilio Mola was a commander of that military force
  OPTIONAL { 
    ?militaryForce dbo:commander dbr:Emilio_Mola .
  }

  # Bind the commander to the variable for clarity in results
  BIND(COALESCE(dbr:Emilio_Mola, ""Unknown"") AS ?commander)
}
```",3,4,4,2,2,3,3,71,0,0,12,0,0.0,0
9,20,val,"Give me the alma mater of the awardee of Royal Medal and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeAlmaMater ?alderdiceAlmaMater
WHERE {
  # Find an awardee of the Royal Medal and their alma mater
  ?awardee dbo:award dbr:Royal_Medal .
  ?awardee dbo:almaMater ?awardeeAlmaMater .

  # Find John Alderdice's alma mater
  dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?alderdiceAlmaMater .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
360,17,val,"Give me the native of the death place, that is a settlement, of Winnie Madikizela-Mandela and reference to Manfred Mann.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePerson ?manfredMannReference
WHERE {
  # Find Winnie Madikizela-Mandela's death place
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find who is native to this settlement
  ?nativePerson dbo:nativeOf ?deathPlace .

  OPTIONAL {
    # Check for any reference or connection to Manfred Mann
    ?nativePerson dbo:reference dbr:Manfred_Mann .
    BIND(""Yes"" AS ?manfredMannReference)
  }
  
  FILTER NOT EXISTS { 
    ?nativePerson dbo:reference dbr:Manfred_Mann .
    BIND(""No"" AS ?manfredMannReference)
  }

}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
378,33,val,"Give me the war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?conflict WHERE {
  VALUES ?person { dbr:C_P_Gahn }
  
  ?person dbo:militaryConflict ?conflict .
  
  OPTIONAL {
    ?commanderRole dbo:roleName ?roleName .
    ?commanderRole dbo:agent ?person .
    FILTER(CONTAINS(LCASE(?roleName), ""commander""))
  }

  FILTER EXISTS { 
    ?peninsularWar dbo:name ""Peninsular War""@en .
    ?conflict owl:sameAs ?peninsularWar .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
996,13,val,Give me the force of the awardee of the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?award ?elevation ?force
WHERE {
  # Find the elevation of Lac d'Avoriaz
  ?reservoir a dbo:Reservoir ;
             rdfs:label ""Lac d'Avoriaz""@en ;
             dbp:elevation ?elevation .

  # Assume there is an award related to Lac d'Avoriaz
  ?award a dbo:Award ;
         dbo:recipient ?person ;
         dbo:subject ?reservoir .

  # Calculate gravitational force (assuming mass m = 1 kg for simplicity)
  BIND((?elevation * 9.81) AS ?force)
}
```",3,3,4,3,1,3,2,20,0,0,11,0,0.0,0
281,34,val,Give me the war of the awardee of the award of Jonathon Band and war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?warOfAwardee ?newZealandWar WHERE {
  # Part 1: Find Jonathon Band's award
  VALUES (?jonathanBand) { dbr:Jonathon_Band }
  
  ?jonathanBand dbo:award ?award .
  
  # Part 2: Find wars associated with other awardees of the same award
  ?otherAwardee dbo:award ?award .
  ?otherAwardee dbo:participatedInWar ?warOfAwardee .

  # Part 3: Find wars involving the New Zealand Army
  dbr:New_Zealand_Army dbo:participatedInWar ?newZealandWar .
}
```",4,4,5,3,2,3,3,71,0,0,9,0,0.0,0
55,15,val,"Give me the band member of the producer, that is a band, of Used to Love Her and band of Newsted.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerBandMember WHERE {
  # Find the producer of ""Used to Love Her""
  ?song dbo:lyrics dbr:Used_to_Love_Her .
  ?song dbo:producer ?producer .

  # Check if the producer is a band
  ?producer rdf:type dbo:Band .

  # Get members of the producer band
  ?producerMember dbo:bandMember ?producerBandMember .

  # Find Newsted's band
  dbr:Marty_Newsted dbo:member ?newstedBand .
  
  # Ensure the producer band member is not in Newsted's band
  FILTER NOT EXISTS {
    ?newstedBandMember dbo:bandMember ?producerBandMember .
    ?newstedBand dbo:member ?newstedBandMember .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
981,12,val,"Give me the birth place of the person born, that is a beauty queen, as  and entity in Indonesia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/birthName> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:BeautyQueen .
  ?person dbo:nationality dbr:Indonesia .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,4,4,2,2,3,2,20,0,0,19,0,0.0,0
534,11,val,"Give me the headquarter of Royal Dublin Society and birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?headquarters ?birthPlace WHERE {
  # Part 1: Headquarters of Royal Dublin Society
  ?s dbp:name ""Royal Dublin Society""@en .
  ?s dbo:headquarters ?headquarters .

  # Part 2: Birthplace of a Politician and Office Holder Child of Desmond FitzGerald
  ?desmond dbo:child ?child .
  FILTER(CONTAINS(LCASE(?desmond), ""desmond fitzgerald"")).
  
  OPTIONAL { ?child dbo:occupation ?occupation . }
  FILTER((CONTAINS(LCASE(STR(?occupation)), ""politician"")) || (CONTAINS(LCASE(STR(?occupation)), ""office holder""))).

  ?child dbo:birthPlace ?birthPlace .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
161,42,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nationalistForce
WHERE {
  # Emilio Mola's military force
  OPTIONAL { 
    dbr:Emilio_Mola dbo:militaryConflict dbr:Spanish_Civil_War .
    dbr:Emilio_Mola dbo:memberOf ?militaryGroup1 .
    ?militaryGroup1 rdfs:label ?nationalistForce1 .
  }
  
  # Francisco Franco's military force
  OPTIONAL { 
    dbr:Franco dbo:militaryConflict dbr:Spanish_Civil_War .
    dbr:Franco dbo:memberOf ?militaryGroup2 .
    ?militaryGroup2 rdfs:label ?nationalistForce2 .
  }
  
  # Filter to find common military force
  FILTER(?nationalistForce1 = ?nationalistForce2)
  BIND(?nationalistForce1 AS ?nationalistForce)
}
```",5,9,6,2,3,3,3,71,0,0,32,0,0.0,0
801,35,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicalArtist WHERE {
  ?writer dbo:alterEgo dbr:The_Shadow .
  ?work dbo:title ""40 Dayz & 40 Nightz"" .
  ?work dbo:author ?writer .
  ?writer a dbo:Person ;
          dbo:musicalArtist ?musicalArtist .
}
```",4,6,5,2,2,3,3,71,0,0,22,0,0.0,0
801,32,val,"Give me the professional in the alter ego of The Shadow and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find the alter ego of The Shadow
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .
  
  # Identify Lamont Cranston's real-life counterpart or producer
  dbr:Lamont_Cranston dbo:realLife dbr:Orson_Welles .

  # Find works by 50 Cent that involve this professional
  ?work dbo:artist dbr:50_Cent ;
        a dbo:Songs .
  
  # Check if the professional is associated with these works as a producer or similar role
  ?work dbo:producer ?professional .
}
```",4,7,5,2,2,3,3,71,0,0,27,0,0.0,0
534,12,val,Give me the birth place of Garret FitzGerald and headquarter of the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v0 . },"```sparql
# Query for birth place of Garret FitzGerald
SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Garret FitzGerald""@en .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Query for headquarters of the owner of RDS Arena
SELECT ?headquarters WHERE {
  ?arena a dbo:SportsVenue ;
         foaf:name ""RDS Arena""@en .
  ?arena dbo:owner ?owner .
  ?owner dbo:headquarter ?headquarters .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
392,16,val,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and entity in Italy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence ?province WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@en .
  
  ?person dbo:residence ?residence .

  ?residence a dbo:Settlement ;
             dbo:country dbr:Italy .

  OPTIONAL { 
    ?residence dbo:locatedInAdministrativeArea ?province .
  }
}
```",3,5,4,2,2,2,3,28,0,1,1,0.0,0.0,0
421,18,val,Give me the person born as the birth name of Dino Merlin and native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName
WHERE {
  ?person rdfs:label ""Dino Merlin""@en .
  ?person dbo:birthName ?birthName .
  ?person dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
488,25,val,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for the death place of Tokugawa Ieyasu
SELECT ?deathPlace WHERE {
  ?s rdfs:label ""Tokugawa Ieyasu""@en .
  ?s dbo:deathPlace ?deathPlace .
  FILTER(LANG(?deathPlace) = 'en')
}
```

```sparql
# Query for the administration of the father of Emperor Go-Mizunoo
SELECT ?office WHERE {
  ?emperor rdfs:label ""Emperor Go-Mizunoo""@en .
  ?emperor dbo:father ?father .
  ?father dbo:office ?office .
  FILTER(LANG(?office) = 'en')
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
232,23,val,Give me the child of the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jon Pertwee""@en .
  ?person dbo:birthName ?birthName .
  ?person dbo:child ?child .
}
```",3,3,4,3,1,3,3,71,1,0,0,1.0,1.0,1.0
488,18,val,Give me the birth place of Enomoto Takeaki and death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEnomoto ?deathPlaceIeyasu ?administrationGoYozei
WHERE {
  # Enomoto Takeaki's birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceEnomoto .

  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlaceIeyasu .

  # Emperor Go-Yōzei's administration (assuming 'dbo:reign' or similar property)
  dbr:Emperor_Go-Yozei dbo:reign ?administrationGoYozei .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
820,13,val,Give me the professional in the award of the author of Understanding Comics.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation WHERE {
  ?comic dbo:author dbr:Scott_McCloud .
  ?comic dbo:award ?award .
  OPTIONAL { dbr:Scott_McCloud dbo:occupation ?occupation . }
}
```",3,3,4,3,1,3,2,20,0,0,39650,0,0.0,0
378,25,val,Give me the war of Joaquín Blake and claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?claimToFame
WHERE {
  # Find the war Joaquín Blake participated in
  dbr:Joaqu%C3%ADn_Blake dbo:participatedInWar ?war .
  
  # Find his claim to fame during the Great Siege of Gibraltar
  OPTIONAL {
    ?event dbo:wikiPageRedirects dbr:Great_Siege_of_Gibraltar ;
           dbo:participant dbr:Joaqu%C3%ADn_Blake ;
           rdfs:label ?claimToFame .
    FILTER (lang(?claimToFame) = ""en"")
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
281,32,val,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceCountry ?war
WHERE {
  # Find Bob Heffron's birth place and check if it is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Place .
  OPTIONAL { ?birthPlace dbo:country ?birthPlaceCountry . }
  FILTER (?birthPlaceCountry != null && ?birthPlaceCountry rdf:type dbo:Country)

  # Find the awardee of Knight Grand Cross of the Order of the Bath
  ?awardee dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  
  # Find the war associated with the awardee
  ?awardee dbo:participatedInWar ?war .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
492,41,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Frédéric-Georges Herr's involvement in a military conflict
  ?conflict dbo:participant dbr:Frédéric-Georges_Herr .
  
  # Commander of the military conflict
  ?conflict dbo:commander ?commander .

  # Joseph C. Satterthwaite's death place and work
  dbr:Joseph_C._Satterthwaite dbo:deathPlace dbr:Algiers .
  dbr:Joseph_C._Satterthwaite dbo:workFor dbr:United_States_Assistant_Secretary_of_State_for_African_Affairs .

  # Frédéric-Georges Herr's death place
  dbr:Frédéric-Georges_Herr dbo:deathPlace dbr:Algiers .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
232,43,val,"Give me the native of London and child of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?claimToFameFilm ?claimToFameMilitaryConflict
WHERE {
  # Find Jon Pertwee's children who are actors and natives of London
  dbr:Jon_Pertwee dbo:child ?child .
  ?child a dbo:Actor ;
         dbo:nativePlace dbr:London .

  # Identify their claims to fame that include films and military conflicts
  OPTIONAL { ?child dbo:claimToFame ?ctf . }
  OPTIONAL { ?ctf dbo:film ?claimToFameFilm . }
  OPTIONAL { ?ctf dbo:militaryConflict ?claimToFameMilitaryConflict . }

  FILTER(?claimToFameFilm && ?claimToFameMilitaryConflict)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
747,19,val,Give me the person born on the birth date of Pavlo Khudzik and band of Amba Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Get Pavlo Khudzik's birth date
  dbr:Pavlo_Khudzik dbo:birthDate ?pavloBirthDate .

  # Get Amba Shepherd's band
  dbr:Amba_Shepherd dbo:bandMember ?ambasBand .

  # Find people born on the same date as Pavlo Khudzik and in the same band as Amba Shepherd
  ?person a dbo:Person ;
          dbo:birthDate ?birthDate ;
          dbo:bandMember ?band .
  
  FILTER (?birthDate = ?pavloBirthDate)
  FILTER (?band = ?ambasBand)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
285,11,val,Give me the spouse of Aristotle Onassis and parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?parent
WHERE {
  # Find Aristotle Onassis's spouse
  dbr:Aristotle_Onassis dbo:spouse ?spouse .
  
  # Find Tina Onassis Niarchos's child
  ?child dbo:parent dbr:Tina_Onassis_Niarchos ;
         a dbo:Person .

  # The parent of the child is what we are looking for
  ?child dbo:parent ?parent .
}
```",3,3,4,2,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
547,43,val,Give me the resting place of James Burton (Egyptologist) and resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  {
    # Resting place of James Burton (Egyptologist)
    ?person a dbo:Person ;
            rdfs:label ""James Burton (Egyptologist)""@en .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
    FILTER NOT EXISTS { ?person dbo:burialPlace ?otherPlace } # Prefer deathPlace if available
  }
  UNION
  {
    # Resting place of Alan Cunningham
    ?person a dbo:Person ;
            rdfs:label ""Alan Cunningham""@en .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
    FILTER NOT EXISTS { ?person dbo:burialPlace ?otherPlace } # Prefer deathPlace if available
  }
  UNION
  {
    # Resting place of the actor from the show with Emily Richard
    ?show a dbo:TelevisionSeries ;
          dbo:starring ?actor .
    ?actor a dbo:Person ;
           rdfs:label ?actorLabel .
    ?castMember dbo:characterName ""Emily Richard""@en ;
                dbo:starring ?actor .
    OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
    FILTER NOT EXISTS { ?actor dbo:burialPlace ?otherPlace } # Prefer deathPlace if available
  }
}
```",5,5,6,3,3,3,3,71,0,2,1,0.0,0.0,0
801,21,val,Give me the associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist ?alterEgo
WHERE {
  ?person a dbo:MusicProducer ;
          foaf:name ""Chris Taylor (music producer)"" .
  
  OPTIONAL { 
    ?person dbo:associatedBand ?associatedArtist .
  }
  
  OPTIONAL {
    ?person rdfs:label ?alterEgo .
    FILTER(CONTAINS(LCASE(?alterEgo), ""the shadow""))
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
435,18,val,Give me the region of Greenwich Mean Time and work of the author of Iceland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?result <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region ?work 
WHERE {
  # Find regions associated with GMT
  ?place a dbo:Place ;
         dbp:timeZone ""GMT"" .
  OPTIONAL { ?place rdfs:label ?region FILTER (lang(?region) = 'en') }

  # Find works by Halldór Laxness
  ?author a dbo:Writer ;
          foaf:name ""Halldór Laxness""@en .
  ?author dbo:work ?work .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
328,20,val,Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person dbo:awardeeOf dbr:Order_of_Suvorov .
  ?person dbo:commanderInForce dbr:Ferenc_Szálasi .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
754,12,val,Give me the parent of the child of Ram Khamhaeng and parent of Loe Thai.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parentOfChild1 ?parentOfChild2
WHERE {
  # Find the child of Ram Khamhaeng and then find that child's parent
  ?ramKhamhaeng dbo:child ?child1 .
  ?child1 dbo:parent ?parentOfChild1 .

  # Find the child of Loe Thai and then find that child's parent
  ?loeThai dbo:child ?child2 .
  ?child2 dbo:parent ?parentOfChild2 .

  # Bind Ram Khamhaeng and Loe Thai to their respective DBpedia resources
  VALUES ?ramKhamhaeng { <http://dbpedia.org/resource/Ram_Khamhaeng> }
  VALUES ?loeThai { <http://dbpedia.org/resource/Loe_Thai> }
}
```",3,3,4,2,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
994,32,val,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist1 ?artist2 ?meshuggahMember ?associatedArtist
WHERE {
  # Step 1: Find an associated musical artist of Watchtower
  ?watchtower dbo:associatedBand ?band .
  ?band dbo:associatedMusicalArtist ?artist1 .

  # Step 2: Find the associated musical artist of that artist
  ?artist1 dbo:associatedMusicalArtist ?artist2 .

  # Step 3: Identify a Meshuggah member who is also a band and group and organization
  ?meshuggah dbp:member ?meshuggahMember .
  ?meshuggahMember rdf:type dbo:Band ;
                   rdf:type dbo:Group ;
                   rdf:type dbo:Organization .

  # Step 4: Find the associated musical artist of that member
  ?meshuggahMember dbo:associatedMusicalArtist ?associatedArtist .
}
```",4,7,5,2,2,3,3,71,0,0,5,0,0.0,0
391,19,val,Give me the native of the figure known as Hub City and actor of The Departed.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/nickname> ""Hub City""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?nativePlace WHERE {
  # Find the DBpedia resource for Boston, known as Hub City
  dbr:Boston dbo:nativeOf ?nativePlace .

  # Find actors of ""The Departed""
  dbr:The_Departed dbo:starring ?actor .

  # Check if any actor's native place is Boston
  ?actor dbo:birthPlace ?place .
  FILTER (?place = dbr:Boston)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
161,18,val,Give me the commander in Biscay Campaign and military force of Spanish Civil War and military force of Rif War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?civilWarForce ?rifWarForce
WHERE {
  # Find the commander of the Biscay Campaign during the Spanish Civil War
  OPTIONAL { 
    dbr:Biscay_Campaign dbo:commander ?commander .
  }

  # Find military forces involved in the Spanish Civil War
  OPTIONAL {
    ?civilWarEvent dbo:militaryForce ?civilWarForce ;
                  rdf:type dbo:MilitaryConflict ;
                  rdfs:label ""Spanish Civil War""@en .
  }
  
  # Find military forces involved in the Rif War
  OPTIONAL {
    ?rifWarEvent dbo:militaryForce ?rifWarForce ;
                 rdf:type dbo:MilitaryConflict ;
                 rdfs:label ""Rif War""@en .
  }
}
```",3,3,4,1,3,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
48,13,val,"Give me the band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  # Find works produced by Shellback
  ?work dbo:recordProducer dbr:Shellback .
  
  # Identify the writer of each work
  ?work dbo:writer ?writer .

  # Get the band associated with the writer
  ?writer dbo:band ?band .
}
```",3,4,4,3,1,3,2,20,0,0,922,0,0.0,0
54,23,val,Give me the child of the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild
WHERE {
  ?thinkhaya dbo:label ""Thinkhaya of Pagan""@en .
  
  ?thinkhayaChild dbo:child ?thinkhaya ;
                  dbo:father ?intermediateFather .

  ?intermediateFather dbo:child ?grandchild .
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
435,19,val,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and region of Greenwich Mean Time and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  ?territory a dbo:AdministrativeRegion ;
             dbo:country dbr:Iceland .
}
```",4,7,5,2,3,2,3,28,0,17,1,0.0,0.0,0
314,14,val,Give me the awardee of the award of Sergei Makovetsky and person deceased at Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee WHERE {
  # Find the award received by Sergei Makovetsky
  dbr:Sergei_Makovetsky dbo:award ?award .
  
  # Find the awardee of that award
  ?award dbo:recipient ?awardee .

  # Check if this person died in Madrid
  ?awardee dbo:deathPlace dbr:Madrid .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,15,val,"Give me the parent of Mieszko II Lambert and child of the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity WHERE {
  # Step 1: Find Mieszko II Lambert's parent
  ?mieszko2 dbo:parent ?parentMieszko2 .
  FILTER(STR(?mieszko2) = ""Mieszko_II_Lambert"")

  # Step 2: Find a child of this parent
  ?childOfParentMieszko2 dbo:parent ?parentMieszko2 .

  # Step 3: Find Mlada (Abbess)'s parent
  ?mlada dbo:parent ?parentMlada .
  FILTER(STR(?mlada) = ""Mlada_(abbess)"")

  # Step 4: Find a child of Mlada's parent who is royalty
  ?royalChildOfParentMlada dbo:parent ?parentMlada ;
                           rdf:type dbo:Monarch .

  # Step 5: Find the common entity between step 2 and step 4
  FILTER(STR(?childOfParentMieszko2) = STR(?royalChildOfParentMlada))
  
  BIND(?childOfParentMieszko2 AS ?commonEntity)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
303,17,val,"Give me the party of Arnulfo Arias and entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?country
WHERE {
  # Find the party of Arnulfo Arias
  dbr:Arnulfo_Arias dbo:party ?party .

  # Find the country of El Valle de Antón
  OPTIONAL { 
    dbr:El_Valle_de_Antón dbo:country ?country .
  }
}
```",3,4,4,2,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
392,12,val,Give me the region of Central European Time and entity in Italy and province of Schio.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region ?entityInItaly ?provinceOfSchio WHERE {
  # Find regions associated with Central European Time
  ?timeZone a dbo:TimeZone ;
            dbo:hasTimezoneName ""Central European Time"" .
  
  ?region dbo:timezone ?timeZone .

  # Filter for entities in Italy within this region
  ?entityInItaly a dbo:Place ;
                 dbo:country dbr:Italy ;
                 dbo:location ?region .

  # Further filter for Province of Schio
  ?provinceOfSchio a dbo:Municipality ;
                   rdfs:label ""Province of Schio""@en ;
                   dbo:partOf ?entityInItaly .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
285,12,val,Give me the spouse of the professional in  and parent of Alexander Onassis.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  # Find Alexander Onassis's parents
  dbr:Alejandro_Onassis dbo:child dbr:Alexander_Onassis .
  
  # Identify the parent who is a professional (assuming 'professional' implies having an occupation)
  OPTIONAL { ?parent dbo:occupation ?occupation . FILTER EXISTS { ?occupation } }
  
  # Find the spouse of this parent
  ?parent dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
492,22,val,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Query for person decedent at French Algeria
  {
    ?person a dbo:Person ;
            dbo:deathPlace ?place .
    FILTER (
      ?place IN (dbr:Algeria, dbr:Algiers) || 
      ?place rdfs:label ?label . FILTER(CONTAINS(LCASE(?label), ""algeria"") && CONTAINS(LCASE(?label), ""french""))
    )
  }
  
  UNION
  
  # Query for person decedent at the capital of Algeria (Algiers)
  {
    ?person a dbo:Person ;
            dbo:deathPlace dbr:Algiers .
  }
}
```",3,4,4,2,2,3,3,71,0,0,16,0,0.0,0
16,32,val,Give me the spouse of the person born as Ted Martin McGinley and professional in the profession of Satomi Ishihara.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ted Martin McGinley""@en .
  ?person dbo:spouse ?spouse .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
378,35,val,Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?commander ?fame WHERE {
  # Find Carl Pontus Gahn's associated war
  OPTIONAL {
    ?person a dbo:Person ;
            foaf:name ""Carl Pontus Gahn""@en .
    ?person dbo:nationality dbr:Sweden .
    ?service dbo:agent ?person ;
             dbo:war ?war .
    BIND(?war AS ?associatedWar)
  }

  # Find the commander of the Great Siege of Gibraltar and their claim to fame
  {
    ?siege a dbo:MilitaryConflict ;
          dbo:name ""Great Siege of Gibraltar""@en ;
          dbo:commander ?commander .
    OPTIONAL { ?commander dbo:famousFor ?fame }
  }

  # Bind results for clarity in output
  BIND(COALESCE(?associatedWar, ""No specific war found"") AS ?war)
  BIND(COALESCE(?commander, ""No commander found"") AS ?commander)
  BIND(COALESCE(?fame, ""No fame information available"") AS ?fame)
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
747,40,val,"Give me the band of Amba Shepherd and band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?ambaBand ?shenaBand ?personName WHERE {
  # Find Amba Shepherd's band
  ?amba a dbo:Person ;
        foaf:name ""Amba Shepherd"" ;
        dbo:band ?ambaBand .

  # Find Shèna's band
  ?shena a dbo:Person ;
         foaf:name ""Shèna"" ;
         dbo:band ?shenaBand .

  # Find the decedent person to get their birth date
  ?decedent a dbo:Person ;
            dbo:deathDate ?deathDate ;
            dbo:birthDate ?birthDate .

  # Find an athlete who is also a soccer player, born on the same date as the decedent and in Zolotonosha
  ?person a dbo:Person, dbo:Athlete, dbo:SoccerPlayer ;
          dbo:birthDate ?birthDate ;
          dbo:placeOfBirth dbr:Zolotonosha .

  # Get the name of this person
  ?person foaf:name ?personName .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
783,14,val,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ebony Reigns"" ;
          dbo:birthDate ?birthDate .
  
  ?person dbo:artist true ;
          dbo:musicalArtist true .

  OPTIONAL { 
    ?person dbo:bandMember ?bandMember .
  }
}
```",3,5,4,3,1,3,2,20,0,0,7,0,0.0,0
161,27,val,"Give me the commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?commander WHERE {
  ?elDirector a dbo:Person ;
              foaf:name ""El Director""@en .
  
  ?elDirector dbo:associatedWith ?event .

  ?event dbo:militaryForce ?force .
  ?force dbo:commander ?commander .
}
```",3,4,4,3,1,3,3,71,0,0,85,0,0.0,0
427,31,val,Give me the party of Giulio Andreotti and reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?andreottiPartyLabel ?pintoPartyName
WHERE {
  # Giulio Andreotti's party affiliation
  dbr:Giulio_Andreotti dbo:partyAffiliation ?andreottiParty .
  ?andreottiParty rdfs:label ?andreottiPartyLabel .

  # Michele Pinto's party name
  dbr:Michele_Pinto dbo:partyAffiliation ?pintoParty .
  ?pintoParty rdfs:label ?pintoPartyName .
  
  FILTER (lang(?andreottiPartyLabel) = 'en')
  FILTER (lang(?pintoPartyName) = 'en')
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
54,25,val,"Give me the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfThadoMinsaw ?predecessor
WHERE {
  # Find the parent of Thado Minsaw of Prome
  dbr:Thado_Minsaw_of_Prome dbo:parent ?parentOfThadoMinsaw .

  # Find the child of Thihapate of Mohnyin who is an office holder and royalty
  dbr:Thihapate_of_Mohnyin dbo:child ?child .
  ?child a dbo:Monarch ; 
         dbo:officeHolder ?office .

  # Ensure the child is royalty (already implied by being a Monarch)
  
  # Find the predecessor of this child in their role
  ?child dbo:predecessor ?predecessor .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
820,11,val,Give me the child of Jack Schwartzman and professional in the award of Scott McCloud.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child ?award WHERE {
  # Find children of Jack Schwartzman
  dbr:Jack_Schwartzman dbo:child ?child .

  # Find awards won by Scott McCloud
  dbr:Scott_McCloud dbo:award ?award .
  
  # Check if the child is professionally associated with any award won by Scott McCloud
  OPTIONAL { ?child dbo:profession ?award }
}
```",3,3,4,2,2,3,2,20,1,6,0,0.14285714285714285,1.0,0.25
617,25,val,Give me the parent of the child of Antiochus (son of Antiochus III the Great) and spouse of Laodice IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parent
WHERE {
  # Find Antiochus (son of Antiochus III)
  ?antiochus a dbo:Person ;
             rdfs:label ""Antiochus (son of Antiochus III the Great)""@en .
  
  # Find Laodice IV's spouse
  ?laodiceIV a dbo:Person ;
             rdfs:label ""Laodice IV""@en .
  ?spouse a dbo:Person ;
          dbo:spouse ?laodiceIV .

  # Find their child
  ?child dbo:parent ?antiochus ;
         dbo:parent ?spouse .

  # Find the parent of this child (either Antiochus or Spouse)
  ?parent dbo:child ?child .
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
427,39,val,"Give me the party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?andreottiParty ?prodiBirthName ?politicianName WHERE {
  # Giulio Andreotti's party
  ?andreotti a dbo:Person ;
             foaf:name ""Giulio Andreotti""@en .
  ?andreotti dbo:party ?andreottiParty .

  # Romano Prodi's birth name
  ?prodi a dbo:Person ;
         foaf:name ""Romano Prodi""@en ;
         foaf:nick ?prodiBirthName .

  # Office holder and politician with the same birth name as Romano Prodi
  ?politician a dbo:OfficeHolder, dbo:Politician ;
              foaf:nick ?prodiBirthName ;
              foaf:name ?politicianName .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
54,43,val,Give me the parent of the child of the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of Thinkhaya of Pagan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandparent WHERE {
  # Thado Minsaw of Prome's parent
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw""@en .
  
  ?thadoMinsaw dbo:childOf ?parent .

  # Parent's parent (Thado Minsaw's grandparent)
  ?parent dbo:childOf ?grandparent .

  # Predecessor of Ameitta Thiri Maha Dhamma Dewi
  ?ameitta dbr:Ameitta_Thiri_Maha_Dhamma_Dewi ;
           dbo:predecessor ?predecessor .
  
  # Child of Thinkhaya of Pagan
  ?thinkhaya a dbo:Person ;
             rdfs:label ""Thinkhaya""@en .
  
  ?thinkhaya dbo:childOf ?grandparent .

  FILTER(?grandparent = ?predecessor)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
184,38,val,Give me the parent of the child of Archduke Joseph Francis of Austria and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild1 ?grandchild2 WHERE {
  # Find child of Archduke Joseph Francis of Austria
  ?child1 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Find parent of this child (i.e., grandparent)
  ?parent1 dbo:child ?child1 .

  # Find the grandchild of Archduke Joseph Francis of Austria
  ?grandchild1 dbo:parent ?parent1 .

  # Find child of Archduke Joseph Karl of Austria
  ?child2 dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  
  # Find the grandchild of Archduke Joseph Karl of Austria
  ?grandchild2 dbo:parent ?child2 .
}
```",4,4,5,2,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
528,19,val,Give me the war of the military force of Battle of Pisagua and war of Orozimbo Barbosa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1Label ?war2Label 
WHERE {
  # Battle of Pisagua participated in War of the Pacific
  dbr:Battle_of_Pisagua dbo:participatedIn ?war1 .
  
  # Orozimbo Barbosa participated in Brazilian War of Independence
  dbr:Orozimbo_Barbosa dbo:participatedIn ?war2 .

  # Get labels for wars
  SERVICE <http://dbpedia.org/sparql> {
    ?war1 rdfs:label ?war1Label .
    FILTER (lang(?war1Label) = 'en')
    
    ?war2 rdfs:label ?war2Label .
    FILTER (lang(?war2Label) = 'en')
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
659,30,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in German campaign of 1813 and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  # Rutger Jan Schimmelpenninck's resource
  dbr:Rutger_Jan_Schimmelpenninck a dbo:Person .

  # Find military force associated with him as commander in the German Campaign of 1813 and Battle of Leipzig
  ?commanderRole dbo:commander dbr:Rutger_Jan_Schimmelpenninck .
  ?commanderRole dbo:militaryForce ?militaryForce .

  OPTIONAL {
    ?campaign dbo:event dbr:German_Campaign_of_1813 ;
              dbo:commander dbr:Rutger_Jan_Schimmelpenninck .
  }
  
  OPTIONAL {
    ?battle dbo:event dbr:Battle_of_Leipzig ;
            dbo:commander dbr:Rutger_Jan_Schimmelpenninck .
  }
}
```",4,7,5,2,3,3,3,71,0,0,6,0,0.0,0
801,31,val,Give me the producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
# Query for the producer of ""Westside Story"" (song)
SELECT ?producer WHERE {
  ?song dbo:title ""West Side Story (song)""@en .
  ?song dbo:producer ?producer .
}

UNION

# Query for the alter ego of The Shadow
SELECT ?trueSelf WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:alterEgo ?trueSelf .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
251,15,val,"Give me the death place of Laura Mancinelli and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/place> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace ?warLocation WHERE {
  # Laura Mancinelli's death place
  { 
    ?person a dbo:Person ;
            foaf:name ""Laura Mancinelli""@en .
    ?person dbo:deathPlace ?deathPlace .
  }
  
  UNION
  
  # Location of the war involving Louis François Félix Musnier
  {
    ?musnier a dbo:Person ;
             foaf:name ""Louis François Félix Musnier""@en .
    ?musnier dbo:militaryConflict ?conflict .
    ?conflict dbp:location ?warLocation .
  }
}
```",3,4,4,2,2,2,3,28,2,1,0,0.6666666666666666,1.0,0.8
996,12,val,Give me the entity in the award of Ekrem Akurgal and force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Query for Ekrem Akurgal's Award
SELECT ?award WHERE {
  ?person rdfs:label ""Ekrem Akurgal""@en .
  ?person dbo:award ?award .
}

UNION

# Query for Dagobert Sigmund von Wurmser's Force
SELECT ?force WHERE {
  ?person rdfs:label ""Dagobert Sigmund von Wurmser""@en .
  ?person dbo:militaryConflict ?conflict .
  ?conflict dbo:participatingMilitaryForce ?force .
}
```",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
404,35,val,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?ernestAugustus dbo:father ?father .
  FILTER(STR(?ernestAugustus) = ""Ernest Augustus, Duke of Brunswick"")
  
  ?ernestAugustus dbo:spouse ?spouse .

  ?father dbo:child ?child .
  ?spouse dbo:child ?child .

  ?child dbp:title ""Princess Victoria Louise of Prussia""@en .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
92,33,val,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?associatedMusicalArtist WHERE {
  ?person a dbo:Actor .
  ?person dbo:film dbr:Return_to_Nuke_'Em_High_Volume_1 .
  ?person dbo:band dbr:Nevermore .
  OPTIONAL { ?person dbo:musicalArtist ?associatedMusicalArtist . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
232,29,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of London and child of Jon Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?militaryConflict
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sean Pertwee""@en ;
          dbo:childOf dbr:Jon_Pertwee ;
          dbo:nativePlace dbr:London .

  OPTIONAL { ?person dbo:film ?film . }
  OPTIONAL { ?person dbo:militaryConflict ?militaryConflict . }

  FILTER EXISTS { ?person a dbo:Person } .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
161,34,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in Biscay Campaign.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  ?person a dbo:Person ;
          dbo:militaryConflict ?conflict ;
          dbo:event ?event .
  
  ?conflict dbo:name ""Biscay Campaign"" .
  ?event dbo:societalEvent true .

  FILTER EXISTS { ?person dbo:decedentAt dbr:Francoist_Spain }
  FILTER EXISTS { ?person dbo:commanderIn ?campaign . 
                 ?campaign dbo:name ""Biscay Campaign"" }

  ?person dbo:militaryForce ?militaryForce .
}
```",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
281,39,val,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity ?militaryUnit ?war ?profession
WHERE {
  ?entity a dbo:OfficeHolder ;
          dbo:politician true ;
          dbo:officeHolderOf dbr:New_Zealand .
  
  ?militaryUnit a dbo:MilitaryUnit ;
                dbo:partOf dbr:New_Zealand_Army ;
                dbo:member ?entity .

  ?war dbo:hasParticipant ?militaryUnit .
  
  OPTIONAL { ?entity dbo:profession ?profession . }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
77,15,val,Give me the force of Alexander I of Russia and war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?force ?warAwarded WHERE {
  # Alexander I of Russia's force
  OPTIONAL {
    ?alexander a dbo:Person ;
               foaf:name ""Alexander I"" ;
               dbo:country dbr:Russia .
    ?commanderCommanded dbo:commander ?alexander ;
                        dbo:commanderForce ?force .
  }

  # Maxim Grigorievich Vlasov's war award
  OPTIONAL {
    ?vlasov a dbo:Person ;
            foaf:name ""Maxim Grigorievich Vlasov"" ;
            dbo:award ?award .
    ?conflict dbo:awardee ?vlasov ;
              rdfs:label ?warAwarded .
  }
}
```",4,4,5,3,2,3,2,20,0,0,20,0,0.0,0
184,23,val,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent
WHERE {
  ?landmark a dbo:Lighthouse ; 
            dbo:elevation ""96.0""^^xsd:float ;
            dbo:nativeOf ?settlement .
  
  ?person dbo:nativeOf ?settlement ;
          foaf:parent ?parent .
}
```",3,4,4,3,1,3,3,71,0,0,31,0,0.0,0
404,28,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?spouse WHERE {
  # Find the child of Ernest Augustus, Crown Prince of Hanover
  ?parent a dbo:CrownPrince ;
          foaf:name ""Ernest Augustus, Crown Prince of Hanover""@en .
  
  ?child dbo:father ?parent ;
         dbo:mother ?mother .

  # Check if this child is a parent of Prince Ernest Augustus of Hanover (born 1914)
  ?child dbo:child dbr:Prince_Ernest_Augustus_of_Hanover_(1914-1987) .
  
  # Verify the spouse as Princess Victoria Louise of Prussia
  ?spouse foaf:name ""Princess Victoria Louise of Prussia""@en ;
          dbo:spouse ?child .

  FILTER (?child != dbr:Ernest_Augustus_of_Hanover_(1887-1953) || ?spouse = dbr:Princess_Victoria_Louise_of_Prussia)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
487,12,val,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of 2022 Vermont House of Representatives election.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://dbpedia.org/property/governor> ?v0 . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationRole ?country
WHERE {
  ?person a dbo:SoccerPlayer ;
          foaf:name ""Philip Brian Scott"" .
  
  OPTIONAL { 
    ?person dbo:officeHolder ?office .
    ?office dbo:election ?election .
    ?election dbo:date ?date .
    FILTER (YEAR(?date) = 2022 && CONTAINS(LCASE(STR(?election)), ""vermont house of representatives""))
    BIND(""Vermont House of Representatives"" AS ?administrationRole)
  }
  
  OPTIONAL {
    ?election dbo:country ?country .
    FILTER(CONTAINS(LCASE(STR(?country)), ""united states""))
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
666,12,val,Give me the player in Steve Bruce and figure known as the nickname of England national beach soccer team.,SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v0 . <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?playerRole ?teamNickname WHERE {
  # Find Steve Bruce's managerial role
  ?steveBruce dbo:managerOf ?team .
  ?steveBruce rdfs:label ""Steve Bruce""@en .

  # Get the label of the team he manages (if any)
  OPTIONAL { ?team rdfs:label ?playerRole . FILTER(lang(?playerRole) = 'en') }

  # Find the nickname of the England national beach soccer team
  ?beachSoccerTeam dbp:nickname ?teamNickname .
  ?beachSoccerTeam rdfs:label ""England national beach soccer team""@en .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
994,23,val,Give me the associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?thirdArtist WHERE {
  # First association: Find the artist associated with Watchtower
  ?watchtower dbo:associatedBand ?firstArtist .
  
  FILTER (str(?watchtower) = ""Watchtower"")

  # Second association: Find an artist associated with the first artist
  OPTIONAL { 
    ?firstArtist dbo:associatedBand ?thirdArtist .
  }
}
```",3,3,4,3,1,3,3,71,0,0,16,0,0.0,0
701,33,val,Give me the parent of Meritamen and parent of the child of the child of Seti I.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
# Query to find the parent of Meritamen
SELECT ?parent WHERE {
  ?meritamen dbo:wikiPageRedirects db:Q123456 . # Replace Q123456 with the actual DBpedia ID for Meritamen
  ?meritamen dbo:parent ?parent .
}

UNION

# Query to find the parent of the child of the child of Seti I
SELECT DISTINCT ?grandchildParent WHERE {
  ?setiI dbo:wikiPageRedirects db:Q789012 . # Replace Q789012 with the actual DBpedia ID for Seti I
  ?setiI dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild dbo:parent ?grandchildParent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
285,13,val,Give me the parent of the child of the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Identify Aristotle Onassis
  ?onassis a dbo:Person ;
           foaf:name ""Aristotle Onassis""@en .

  # Step 2: Find his spouse
  ?onassis dbo:spouse ?spouse .

  # Step 3: Determine the child of the spouse
  ?spouse dbo:child ?child .

  # Step 4: Identify the parent of that child
  ?child dbo:parent ?parent .
}
```",3,3,4,3,1,3,2,20,5,0,0,1.0,1.0,1.0
994,35,val,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?finalAssociatedArtist
WHERE {
  # Step 1: Identify Donald Maynard Dokken and his band members
  ?dokken a dbo:MusicalArtist ;
          foaf:name ""Donald Maynard Dokken""@en .
  
  ?dokken dbo:bandMember ?bandMember .

  # Step 2: Identify Watchtower (Band) and its associated musical artists
  dbr:Watchtower a dbo:Band ;
                 dbo:associatedMusicalArtist ?watchtowerAssociatedArtist .

  # Step 3: Find the associated musical artists of those associated with Watchtower
  ?watchtowerAssociatedArtist dbo:associatedMusicalArtist ?finalAssociatedArtist .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
328,36,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and awardee of Order of Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader WHERE {
  # Step 1: Identify Gustav Jonson and his office
  ?gustav a dbo:Person ;
          foaf:name ""Gustav Jonson""@en .
  
  ?office dbo:head ?gustav ;
          a dbo:GovernmentAgency .

  # Step 2: Find the leader of this office
  ?leader dbo:leaderOf ?office ;
          a dbo:OfficeHolder, dbo:Politician .

  # Step 3: Ensure the leader is an awardee of Order of Suvorov
  ?award a dbo:Award ;
         foaf:name ""Order of Suvorov""@en .
  
  ?leader dbo:award ?award .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
312,7,val,"Give me the entity in Italy and entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity (SAMPLE(?settlementLabel) AS ?settlement) 
WHERE {
  ?entity a dbo:Settlement ;
          a dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:state true .
  
  OPTIONAL { ?entity rdfs:label ?settlementLabel . FILTER(LANG(?settlementLabel) = ""en"") }
  
  ?party a dbo:PoliticalParty ;
         dbo:name ""Democratic Party (Italy)""@en ;
         dbo:member ?entity .

}
GROUP BY ?entity
```",3,7,4,2,2,2,2,9,0,0,587,0,0.0,0
747,27,val,Give me the band of the person born as the persona of Shèna.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band 
WHERE {
  ?person rdfs:label ""Shèna""@en .
  OPTIONAL { ?person dbo:band ?band . }
}
```",3,3,4,3,1,3,3,71,0,1,8,0.0,0.0,0
391,44,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus and native of Compton, California.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  ?film a dbo:Film ;
        a dbo:Work ;
        a dbo:TelevisionShow .
  
  ?film dbo:starring dbr:Roz_Ryan .

  ?ballhausClaimToFame dbo:claimToFame ?work .
  ?work dbo:starring ?film .

  FILTER(?ballhausClaimToFame = dbr:Michael_Ballhaus) .

  ?actor dbo:birthPlace dbr:Compton,_California ;
         dbo:starring ?film .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
232,18,val,Give me the native of London and child of Jon Pertwee and actor of Dog Soldiers (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?actor dbo:birthPlace dbr:London .
  ?actor dbo:childOf dbr:Jon_Pertwee .
  ?actor dbo:film dbr:Dog_Soldiers_(2002_film) .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
547,27,val,Give me the resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?restingPlace WHERE {
  # Identify Gerald Graham and his associated award
  dbr:Gerald_Graham dbo:award ?award .
  
  # Find the awardee of this specific award
  ?award dbo:recipient ?awardee .

  # Retrieve the resting place of the awardee
  OPTIONAL { ?awardee dbo:finalRestingPlace ?restingPlace . }
}
```",3,3,4,3,1,3,3,71,0,0,704,0,0.0,0
16,19,val,Give me the spouse of the person born as Ted Martin McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName WHERE {
  ?person rdfs:label ""Ted Martin McGinley""@en .
  ?person dbo:occupation dbp:Actress .
  ?person dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
285,15,val,Give me the spouse of Aristotle Onassis and parent of the child of the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?child WHERE {
  dbr:Aristotle_Onassis dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
}
```",4,4,5,3,2,3,2,20,2,5,0,0.2857142857142857,1.0,0.4444444444444445
696,12,val,Give me the birth place of Tim Brennan and landmark at elevation of the award of Nie Rongzhen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
# Query for Tim Brennan's birth place
SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Tim Brennan""@en .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Query for Nie Rongzhen's award landmark at elevation
SELECT ?landmark ?elevation WHERE {
  ?nie a dbo:Person ;
       foaf:name ""Nie Rongzhen""@en .
  ?nie dbo:honoraryTitle ?award .
  ?award dbo:location ?landmark .
  ?landmark dbo:elevation ?elevation .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
328,37,val,Give me the leader of People's Commissariat of Defense of the Soviet Union and commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?commander
WHERE {
  # Leader of People's Commissariat of Defense of the Soviet Union
  dbr:Kliment_Voroshilov dbo:positionHeld dbr:People%27s_Commissar_for_Defence_of_the_Soviet_Union .
  
  # Commander in the force at Budapest
  dbr:Rodion_Malinovsky dbo:commanded dbr:Soviet_Forces_at_Budapest .
  
  BIND(dbr:Kliment_Voroshilov AS ?leader)
  BIND(dbr:Rodion_Malinovsky AS ?commander)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
356,12,val,"Give me the player in 2015 Sacramento Republic FC season and team of the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?result <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?team
WHERE {
    ?player a dbo:SoccerPlayer ;
            dbo:nationality dbr:Wolverhampton ;
            dbo:managerTeam ?team .
    
    ?team dbo:season ""2015""^^xsd:string .

    FILTER EXISTS { ?player dbo:soccerClub dbr:Sacramento_Republic_FC }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
492,18,val,Give me the commander in Franco-Hova Wars and person decedent at French Algeria and person decedent at Algiers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
# Query for Commander in Franco-Hova Wars
SELECT ?commander WHERE {
  ?event dbo:participatingCommander ?commander .
  ?event rdfs:label ""Franco-Hova Wars""@en .
}

# Query for Person Decedent at French Algeria and Algiers
SELECT DISTINCT ?person WHERE {
  ?person dbo:deathPlace ?place1 .
  ?person dbo:deathPlace ?place2 .
  
  VALUES ?place1 { dbpedia:French_Algeria dbpedia:Algiers }
  VALUES ?place2 { dbpedia:French_Algeria dbpedia:Algiers }

  FILTER(?place1 != ?place2)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
55,14,val,"Give me the band member of Guns N' Roses and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?member ?otherBand
WHERE {
  # Find members of Guns N' Roses
  ?member dbo:bandMember dbr:Guns_N%27_Roses .

  # Check if the member is also a band member of another band
  ?member dbo:bandMember ?otherBand .

  # Ensure the other band is both a Band and a MusicalGroup
  ?otherBand rdf:type dbo:Band .
  ?otherBand rdf:type dbo:MusicalGroup .

  # Find connection to San Francisco Symphony
  OPTIONAL {
    ?otherBand dbo:location dbr:San_Francisco_Symphony .
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
16,30,val,Give me the person born as the birth name of Gigi Rice and professional in Actress and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Gigi Rice"" ;
          dbo:birthName ?birthName ;
          rdf:type dbo:Actress .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  FILTER (?spouse = <http://dbpedia.org/resource/Ted_McGinley>)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
92,44,val,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of the person born as Joseph Michael Furney and band member of Nevermore.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  # Jim Sheppard's associated band
  OPTIONAL { 
    ?sheppard a dbo:Person ;
              foaf:name ""Jim Sheppard"" .
    ?sheppard dbo:musicalArtist ?band .
  }
  
  # Joseph Michael Furney (Jon Dette) as a member of Nevermore
  OPTIONAL {
    ?furney a dbo:Person ;
            foaf:name ""Joseph Michael Furney"" .
    ?furney dbo:memberOfBand dbr:Nevermore .
  }

  FILTER (?band = dbr:Nevermore)
}
```",5,6,6,2,3,3,3,71,0,1,1,0.0,0.0,0
404,23,val,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse
WHERE {
  ?person dbo:birthName ""Princess Victoria Louise of Prussia""@en .
  ?person rdf:type dbo:Royal .
  ?person dbo:spouse ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
161,40,val,"Give me the commander in Biscay Campaign and military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryForce ?decedent
WHERE {
  # Identify the Biscay Campaign and its commander
  ?campaign a dbo:MilitaryOperation ;
            rdfs:label ""Biscay Campaign""@en .
  
  ?campaign dbo:commander ?commander .

  # Determine the military force involved in the Biscay Campaign
  ?campaign dbo:militaryForce ?militaryForce .

  # Link to the Spanish Civil War as a societal event and military conflict
  ?civilWar a dbo:MilitaryConflict, dbo:SocietalEvent ;
            rdfs:label ""Spanish Civil War""@en .
  
  ?campaign dbo:partOf ?civilWar .

  # Find a person who died during Francoist Spain
  ?decedent dbo:dateOfDeath ?deathDate ;
           dbo:nationality dbr:Spain ;
           dbo:causeOfDeath ?cause .

  FILTER EXISTS { 
    ?francoistPeriod dbo:end ?endYear .
    ?francoistPeriod rdfs:label ""Francoist Spain""@en .
    ?decedent dbo:dateOfDeath ?deathDate .
    FILTER (?deathDate > ?startYear && ?deathDate <= ?endYear)
  }
}
```",5,8,6,3,3,3,3,71,0,0,3,0,0.0,0
184,19,val,Give me the parent of the native of Budapest and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?child dbo:parent dbr:Archduke_Joseph_August_of_Austria .
  ?child dbo:nativePlace dbr:Budapest .
  ?child dbo:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
303,14,val,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Guillermo Endara.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?party 
WHERE {
  # Find the country of El Valle de Antón
  dbr:El_Valle_de_Antón dbo:country ?country .

  # Find Guillermo Endara's political party
  dbr:Guillermo_Endara dbo:party ?party .
}
```",3,4,4,2,2,2,3,28,2,1,0,0.6666666666666666,1.0,0.8
645,12,val,Give me the alma mater of the child of Richard Pankhurst and entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  ?person dbr:Richard_Pankhurst dbo:spouse ?spouse .
  ?child dbo:parent ?spouse ;
         dbo:parent dbr:Richard_Pankhurst .
  ?child dbo:almaMater ?almaMater .
  ?almaMater dbo:locationCountry dbr:United_Kingdom .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
701,22,val,Give me the spouse of the father of Merneptah and parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?merneptah dbo:father ?father .
  ?father dbo:child ?meritamen .
  ?father dbo:spouse ?spouse .
  FILTER (str(?merneptah) = ""Merneptah"" && str(?meritamen) = ""Meritamen"")
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
492,43,val,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at French Algeria and person decedent at Algiers.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the commander of the Battle of Verdun
  dbr:Battle_of_Verdun dbo:commander ?commander .

  # Ensure this person is associated with a military conflict that is also an event
  ?conflict rdf:type dbo:MilitaryConflict ;
            dbo:event ?event .
  ?commander dbo:militaryConflicts ?conflict .

  # Check if the commander died in both French Algeria and Algiers
  ?commander dbo:deathPlace dbr:French_Algeria .
  ?commander dbo:deathPlace dbr:Algiers .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
77,13,val,Give me the war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warName
WHERE {
  ?vlasov a dbo:Person ;
          foaf:name ""Maxim Grigorievich Vlasov""@en .
  
  ?vlasov dbo:awardReceived ?award .

  ?award dbo:relatedTo ?war .
  ?war a dbo:MilitaryConflict ;
       rdfs:label ?warName .
  
  FILTER (lang(?warName) = 'en')
}
```",3,3,4,3,1,3,2,20,0,0,436,0,0.0,0
701,44,val,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah and parent of Meritamen.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Ramesses II's child (e.g., Merneptah)
  ?child dbo:father dbr:Ramesses_II .
  
  # Parent of that child (either Ramesses II or his spouse)
  ?child dbo:mother ?parent .

  # Merneptah's father is Ramesses II
  dbr:Merneptah dbo:father dbr:Ramesses_II .

  # Spouse of Merneptah
  ?merneptahSpouse dbo:spouse dbr:Merneptah .
  
  # Parent of Meritamen (likely Isetnofret)
  dbr:Meritamen dbo:mother ?parent .

  FILTER (?parent = ?merneptahSpouse) 
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
801,42,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of The Shadow and producer of Westside Story (song).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musicalArtist WHERE {
  ?writer a dbo:Writer ;
          dbo:author ?work ;
          foaf:name ""The Shadow"" ;
          dbo:producer ?song .
  
  ?work foaf:name ""40 Dayz & 40 Nightz"" .
  ?song foaf:name ""Westside Story (song)"" .

  ?writer dbo:musicalArtist ?musicalArtist .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
328,21,val,"Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:officeTitle ?title .
  FILTER(CONTAINS(LCASE(STR(?title)), ""people's commissar for defense"") || CONTAINS(LCASE(STR(?title)), ""minister of defense""))
  
  OPTIONAL { 
    ?award dbo:recipient ?person ;
           dbo:awardedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,37,val,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorOfClaimToFame WHERE {
  # Step 1: Find Sherry Hormann's spouse
  dbr:Sherry_Hormann dbo:spouse ?spouse .

  # Step 2: Identify the actor of ""All About the Andersons""
  dbr:All_About_the_Andersons dbo:actor ?allAboutTheAndersonsActor .
  
  FILTER(?allAboutTheAndersonsActor = ?spouse) .

  # Step 3: Find a claim to fame (work) of Sherry Hormann's spouse
  ?spouse dbo:performerIn ?claimToFameWork .

  # Step 4: Identify the actor of that work
  ?claimToFameWork dbo:actor ?actorOfClaimToFame .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
365,7,val,"Give me the band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter and reference to The Blasters.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName
WHERE {
  ?person a dbo:Person .
  ?person dbo:musicalArtist true .
  ?person (dbo:vocalist|dbo:musician|dbo:songwriter) true .
  ?membership dbo:bandMember ?person ;
              dbo:band dbr:The_Blasters .
  ?membership dbo:band ?band .
  BIND(?band AS ?bandName)
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
339,14,val,Give me the father of the child of the parent of Princess Olga of Greece and Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Step 1: Identify Princess Olga of Greece and Denmark
  dbr:Princess_Olga_of_Greece_and_Denmark a dbo:Person .

  # Step 2: Find her parent(s)
  OPTIONAL { 
    dbr:Princess_Olga_of_Greece_and_Denmark dbo:parent ?parent .
  }

  # Step 3: Determine the child of her parent (Olga herself or siblings)
  OPTIONAL {
    ?parent dbo:child ?child .
  }

  # Step 4: Identify the father of that child
  OPTIONAL {
    ?parent dbo:father ?father .
  }
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
360,18,val,Give me the reference to the author of Blinded by the Light and native of Johannesburg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?author a dbo:Person .
  ?author dbo:birthPlace dbr:Johannesburg .
  FILTER(CONTAINS(LCASE(STR(?author)), ""bruce springsteen""))
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
345,11,val,Give me the figure known as the nickname of FC Vaduz and team of Alessandro Mangiarratti.,SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . ?result <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
# Query to find the nickname of FC Vaduz
SELECT ?nickname WHERE {
  dbpedia:FC_Vaduz dbo:commonName ?nickname .
}

UNION

# Query to find the team associated with Alessandro Mangiarratti
SELECT ?team WHERE {
  ?person foaf:name ""Alessandro Mangiarratti""@en .
  ?person dbo:team ?team .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
303,15,val,"Give me the party of the commander, that is a politician, in United States invasion of Panama and party of Arnulfo Arias.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderParty ?arnulfoAriasParty
WHERE {
  # George H.W. Bush's political party during the invasion of Panama
  dbr:George_H._W._Bush dbo:politicalAffiliation ?commanderParty .

  # Arnulfo Arias's political party
  dbr:Arnulfo_Arias_Mendoza dbo:politicalAffiliation ?arnulfoAriasParty .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
391,18,val,"Give me the actor of The Departed and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie1 dbo:starring ?actor .
  ?movie2 dbo:starring ?actor .
  
  ?actor dbo:birthPlace dbr:Compton,_California .

  FILTER (?movie1 = dbr:The_Departed && ?movie2 = dbr:All_About_the_Andersons)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
465,7,val,Give me the administration of Czech Pirate Party and death place of the native of Prague.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
# Query 1: Administration of Czech Pirate Party
SELECT ?leader WHERE {
    ?party a dbo:PoliticalParty ;
           rdfs:label ""Czech Pirate Party""@en .
    OPTIONAL { ?party dbo:leader ?leader . }
}

UNION

# Query 2: Death place of a native of Prague
SELECT ?person ?deathPlace WHERE {
    ?person dbo:birthPlace dbr:Prague ;
            dbo:deathPlace ?deathPlace .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
92,27,val,Give me the band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band 
WHERE {
  ?person dbo:birthName ""Joseph Michael""@en .
  ?person dbo:band ?band .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
392,18,val,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of Central European Time.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?province ?region
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@en .
  
  ?person dbo:nationality dbr:Italy .

  ?residence dbo:resident ?person ;
             dbo:country dbr:Italy ;
             rdf:type dbo:Settlement .

  ?residence dbo:locatedIn ?province .

  ?province dbo:partOfRegion ?region .

  FILTER EXISTS {
    ?region dbp:timeZone ""Central European Time""@en .
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
626,14,val,Give me the awardee of the award of the military force of Battle of Borodino.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee WHERE {
  # Identify the Battle of Borodino
  dbr:Battle_of_Borodino dbo:participatedIn ?militaryForce .
  
  # Find individuals associated with these military forces who received awards
  ?individual dbo:militaryService ?militaryForce ;
              dbo:award ?award .

  # Ensure the individual is distinct and relevant to the battle
  ?awardee rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""battle of borodino"") || CONTAINS(LCASE(?label), ""borodino""))
}
```",3,3,4,3,1,3,2,20,0,0,7855,0,0.0,0
392,17,val,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and province of Schio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region ?sportsEvent WHERE {
  # Find the time zone of Aguilar de Segarra
  dbr:Aguilar_de_Segarra dbo:timeZone ?timeZone .
  
  # Get the region associated with this time zone
  ?timeZone dbo:region ?region .

  # Check if there is a sports event related to this region
  OPTIONAL {
    ?sportsEvent dbo:location ?region .
    FILTER (isLiteral(?sportsEvent))
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
328,31,val,Give me the commander in Eastern Front (World War II) and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
# Query to find the commander on the Eastern Front during World War II
SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:militaryCommand ?command .
  ?command dbo:location dbr:Eastern_Front_(World_War_II) ;
           dbo:timePeriod ?period .
  FILTER (YEAR(?period) >= 1939 && YEAR(?period) <= 1945) .
  ?person rdfs:label ?name .
  FILTER(LANG(?name) = ""en"")
}
ORDER BY ?name
LIMIT 1

UNION

# Query to find the awardee of command in both Volcano and Ryukyu Islands campaigns
SELECT DISTINCT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson ;
          dbo:commanderOf dbr:Battle_of_the_Volcano_Islands ;
          dbo:commanderOf dbr:Battle_of_the_Ryukyu_Islands .
  ?person rdfs:label ?name .
  FILTER(LANG(?name) = ""en"")
}
ORDER BY ?name
LIMIT 1
```",4,4,5,3,2,3,3,71,0,0,5,0,0.0,0
55,19,val,"Give me the band member of Metallica and band of Newsted and band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?metallicaMember ?bushMember WHERE {
  # Jason Newsted's association with Metallica
  dbr:Jason_Newsted dbo:memberOf dbr:Metallica .
  
  # Gavin Rossdale's role in Bush
  dbr:Gavin_Rossdale dbo:memberOf dbr:Bush .

  # Band members of Metallica
  ?metallicaMember dbo:memberOf dbr:Metallica .

  # Band members of Bush
  ?bushMember dbo:memberOf dbr:Bush .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
528,43,val,Give me the war of Irene Morales and war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?workTitle WHERE {
  # Irene Morales as a person involved in works related to military command
  ?person1 rdfs:label ""Irene Morales""@en .
  ?work dbo:author ?person1 ;
        dbo:subject ?commanderRole .

  # Commander role related to military leadership
  ?commanderRole rdfs:label ?roleLabel .
  FILTER(CONTAINS(LCASE(?roleLabel), ""military command"") || CONTAINS(LCASE(?roleLabel), ""war""))

  # Work involving Narciso Campero
  ?person2 rdfs:label ""Narciso Campero""@en .
  ?work dbo:militaryCommander ?person2 .

  # Optional: Filter by date proximity to January 9th
  OPTIONAL {
    ?work dbo:datePublished ?date .
    FILTER(year(?date) = 1901 && month(?date) = 1 && day(?date) >= 8 && day(?date) <= 10)
  }

  # Return the title of the work
  ?work rdfs:label ?workTitle .
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
184,27,val,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?grandParent WHERE {
  ?margaret dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1925)
  ?margaret rdfs:label ""Margaret of Austria, Archduchess""@en .

  ?margaret dbo:parent ?parent .
  
  ?parent dbo:child ?sibling .
  
  ?sibling dbo:parent ?grandParent .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
281,28,val,Give me the entity in Colony of New Zealand and war of New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity ?war ?awardee WHERE {
  # Entities in the Colony of New Zealand
  ?entity dbo:partOf dbr:Colony_of_New_Zealand .

  # Wars involving the New Zealand Army
  ?war a dbo:MilitaryConflict ;
      dbo:participatingMilitaryUnit dbr:New_Zealand_Army .

  # Awardees of Knight Grand Cross of the Order of the Bath
  ?awardee a dbo:Person ;
          dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .

  # Check if the awardee participated in any wars
  OPTIONAL { ?awardee dbo:participatedIn ?war }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
767,43,val,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to  and entity in Baden-Württemberg.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?administration WHERE {
  # Find George Kilbon Nash's alma mater
  dbr:George_Kilbon_Nash dbo:almaMater ?almaMater .
  
  OPTIONAL {
    # Check for any administrative role related to Baden-Württemberg
    ?administration dbo:location dbr:Baden-Württemberg ;
                   dbo:member ?person .
    FILTER (?person = dbr:George_Kilbon_Nash)
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
783,15,val,Give me the band member of Ebony Reigns and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?ebonyBandMember ?samuelBandMember ?ebonyMusicalArtist ?samuelMusicalArtist 
WHERE {
  # Find band members of Ebony Reigns
  ?ebony dbr:Ebony_Reigns ;
         dbo:bandMember ?ebonyBandMember .
  
  # Find associated musical artist for each band member of Ebony Reigns
  ?ebonyBandMember dbo:musicalArtist ?ebonyMusicalArtist .

  # Identify Samuel Ofori Amponsah (Ebony Reigns)
  ?samuel dbr:Samuel_Ofori_Amponsah ;
          dbo:birthName ""Samuel Ofori Amponsah""^^xsd:string .
  
  # Find band members of Samuel Ofori Amponsah
  ?samuel dbo:bandMember ?samuelBandMember .

  # Find associated musical artist for each band member of Samuel Ofori Amponsah
  ?samuelBandMember dbo:musicalArtist ?samuelMusicalArtist .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
485,15,val,"Give me the entity in the region, that is a country, of Western European Time and entity in Nottinghamshire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
# Query for a country in the Western European Time Zone
SELECT ?country WHERE {
  ?country rdf:type dbo:Country .
  ?country dbo:timeZone dbr:Western_European_Time .
}

UNION

# Query for an entity in Nottinghamshire
SELECT ?entity WHERE {
  ?entity dbo:location dbr:Nottinghamshire .
}
```",3,4,4,2,2,2,3,28,0,0,357,0,0.0,0
659,32,val,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander1 ?commander2 WHERE {
  # Commander of the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?regiment a dbo:MilitaryUnit ;
            dbo:commander ?commander1 .
  
  FILTER regex(?regiment, ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)"", ""i"") .

  # Forces commanded by Arthur Wellesley, 1st Duke of Wellington
  dbr:Athur_Wellesley_1st_Duke_of_Wellington dbo:commander ?force .
  
  ?force dbo:commander ?commander2 .
}
```",4,6,5,2,2,3,3,71,0,0,71,0,0.0,0
701,21,val,Give me the spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?ramesses2 dbo:spouse ?spouse .
  ?spouse dbo:child ?nefertari .
  ?nefertari rdfs:label ""Nefertari""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,28,val,Give me the native of the figure known as Hub City and actor of All About the Andersons and actor of The Departed.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorName ?birthPlaceLabel WHERE {
  # Identify Hub City (assumed to be Milwaukee)
  VALUES (?hubCity) { dbpedia:Milwaukee }

  # Find actors in ""All About the Andersons""
  ?film1 dbo:starring ?actor .
  ?film1 foaf:name ""All About the Andersons""@en .

  # Find actors in ""The Departed""
  ?film2 dbo:starring ?actor .
  ?film2 foaf:name ""The Departed""@en .

  # Ensure it's the same actor
  FILTER (?film1 != ?film2)

  # Check if the actor is native to Hub City (Milwaukee)
  ?actor dbo:birthPlace ?hubCity .

  # Get actor name and birthplace label
  ?actor foaf:name ?actorName .
  ?birthPlaceLabel rdfs:label ?cityLabel .
  FILTER(LANG(?cityLabel) = ""en"")
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,38,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  ?herr a dbo:MilitaryPerson ;
        foaf:name ""Frédéric-Georges Herr""@en .
  
  ?herr dbo:commander ?conflict .

  ?event dbo:eventParticipant ?herr ;
         dbo:place dbr:Algiers ;
         rdf:type dbo:Death .

  FILTER EXISTS { 
    ?algeria dbo:capital dbr:Algiers .
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
427,21,val,Give me the party of Romano Prodi and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?partyName WHERE {
  # Find Romano Prodi's party affiliation
  dbr:Romano_Prodi dbo:partyAffiliation ?party .
  
  # Get the name of the affiliated party
  ?party rdfs:label ?partyName .

  # Filter for Italian People's Party around 1994
  FILTER(CONTAINS(LCASE(?partyName), ""italian people's party"") && 
         EXISTS { ?party dbo:foundingDate ?foundingDate .
                  FILTER(year(?foundingDate) <= 1994 && year(?foundingDate) >= 1990)
                }
        )
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,20,val,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in German campaign of 1813.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?conflict ?campaign
WHERE {
  ?regiment dbo:commander ?commander .
  ?commander a dbo:Person .

  # Find the regiment and its commander during a conflict
  OPTIONAL { 
    ?regiment dbo:partOf ?conflict .
    FILTER (CONTAINS(LCASE(STR(?regiment)), ""1st light cavalry lancers regiment of the imperial guard (polish)""))
  }

  # Find involvement in the German campaign of 1813
  OPTIONAL {
    ?commander dbo:militaryConflict ?campaign .
    FILTER (CONTAINS(LCASE(STR(?campaign)), ""german campaign of 1813"") || CONTAINS(LCASE(STR(?campaign)), ""war of the sixth coalition""))
  }
  
  # Ensure both conditions are met for a single commander
  FILTER EXISTS { ?regiment dbo:partOf ?conflict } .
  FILTER EXISTS { ?commander dbo:militaryConflict ?campaign } .
}
```",3,5,4,2,2,3,3,71,0,0,30,0,0.0,0
294,16,val,"Give me the resting place of Luke Lea (American politician, born 1879) and entity in the birth place, that is a settlement, of Marion James.","SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
# Query for the resting place of Luke Lea
SELECT ?restingPlace WHERE {
  ?lukeLea dbo:birthDate ""1879-01-01""^^xsd:date .
  ?lukeLea rdfs:label ""Luke Lea (American politician, born 1879)""@en .
  ?lukeLea dbo:deathPlace ?restingPlace .
}

UNION

# Query for the birthplace entity of Marion James that is a settlement
SELECT ?birthPlace WHERE {
  ?marionJames rdfs:label ""Marion James""@en .
  ?marionJames dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
54,29,val,Give me the parent of the child of Narapati I of Ava and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of Thinkhaya of Pagan.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?entity WHERE {
  # Find the parent of Narapati I's child
  ?narapatiIChild dbo:childOf ?narapatiI .
  ?parent dbo:parentOf ?narapatiIChild .

  # This entity should be the predecessor of Ameitta Thiri Maha Dhamma Dewi
  ?ameittaThiriPredecessor dbo:predecessor ?ameittaThiri .
  FILTER (?parent = ?ameittaThiriPredecessor)

  # And also the parent of Thinkhaya of Pagan
  ?thinkhaya dbo:childOf ?parent .

  # Narapati I, Ameitta Thiri Maha Dhamma Dewi, and Thinkhaya are specific entities
  VALUES ?narapatiI { <http://dbpedia.org/resource/Narapati_I_of_Ava> }
  VALUES ?ameittaThiri { <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> }
  VALUES ?thinkhaya { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> }

}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
528,25,val,Give me the force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
# Query for Narciso Campero Leyes
SELECT ?force WHERE {
  wd:Q123456 dbo:militaryForce ?force .
}
```

```sparql
# Query for Orozimbo Barbosa
SELECT ?force WHERE {
  wd:Q654321 dbo:militaryForce ?force .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Narciso Campero Leyes and `wd:Q654321` with the identifier for Orozimbo Barbosa. These identifiers can be found by searching their names in DBpedia.",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,42,val,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and manager of the team of Takashi Sekizuka and native of Japan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?manager WHERE {
  # Find Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  
  # Ensure the university is Japanese and an educational institution
  ?university dbo:country dbr:Japan ;
              a dbo:University, dbo:EducationalInstitution .

  # Find Takashi Sekizuka's manager who is associated with this university
  ?manager dbo:worksFor ?team .
  ?team dbo:member dbr:Takashi_Sekizuka .
  
  # Ensure the manager is native to Japan and connected to Eiji Ōtsuka’s alma mater
  ?manager dbo:nationality dbr:Japan ;
           dbo:almaMater ?university .
}
```",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
328,23,val,Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award a dbo:MedalOfHonor .
  ?award dbo:recipient ?recipient .
  ?award dbo:description ?description .
  FILTER(CONTAINS(LCASE(?description), ""volcano and ryukyu islands campaign""))
}
```",3,3,4,3,1,3,3,71,0,0,13262,0,0.0,0
701,41,val,Give me the parent of the child of Ramesses II and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Ramesses II's spouse is Nefertari
  dbr:Ramesses_II dbo:spouse dbr:Nefertari .

  # A child of Ramesses II and Nefertari
  ?child dbo:parent dbr:Ramesses_II .
  ?child dbo:parent dbr:Nefertari .

  # The parent of the child (Nefertari)
  ?parent dbo:spouse dbr:Ramesses_II .
  ?parent dbo:parent ?child .

  FILTER(?parent = dbr:Nefertari)

  # Ramesses II is also the parent of Nefertari's children
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
488,26,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace
WHERE {
  ?matsudairaTadamasa a dbo:Person ;
                      foaf:name ""Matsudaira Tadamasa""@en .
  
  ?fatherOfTadamasa dbo:father ?matsudairaTadamasa ;
                    dbo:officeHolder ?office .

  ?grandFatherOfTadamasa dbo:father ?fatherOfTadamasa ;
                         dbo:politician ?politicianRole .

  ?deathPlace dbp:deathPlace ?grandFatherOfTadamasa .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
161,26,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  # Find Indalecio Prieto's predecessor
  ?prieto a dbo:Person ;
          foaf:name ""Indalecio Prieto""@en .
  
  ?predecessor dbo:successor ?prieto .

  # Identify the military force associated with the predecessor
  ?predecessor dbo:militaryForce ?militaryForce .

  # Ensure this military force is involved in both a societal event and a military conflict
  ?societalEvent dbo:involvedMilitaryForce ?militaryForce ;
                rdf:type dbo:SocietalEvent .
  
  ?militaryConflict dbo:involvedMilitaryForce ?militaryForce ;
                    rdf:type dbo:MilitaryConflict .
}
```",3,5,4,3,1,3,3,71,0,0,514,0,0.0,0
666,15,val,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach) and figure known as The Three Lions.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find the team managed by Leonid Slutsky
  ?team dbo:sportsTeamSeason ?season .
  ?team a dbo:SoccerClub .
  ?manager dbo:manager ?team .
  ?manager foaf:name ""Leonid Slutsky""@en .

  # Find The Three Lions (England national football team)
  ?englandTeam dbo:sportsTeamSeason ?season2 .
  ?englandTeam a dbo:SoccerNationalTeam ;
               rdfs:label ""The Three Lions""@en .

  # Find the manager of The Three Lions
  ?managerEngland dbo:manager ?englandTeam .

  # Find the player managed by this manager
  ?player dbo:playerInManager ?managerEngland .
}
```",4,7,5,3,2,3,2,20,0,0,2,0,0.0,0
547,28,val,Give me the resting place of Alan Cunningham and resting place of Simon Cadell and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?restingPlace WHERE {
  # Alan Cunningham's resting place
  { 
    ?person rdfs:label ""Alan Cunningham""@en .
    FILTER NOT EXISTS { ?person dbo:abstract ?a . FILTER (CONTAINS(LCASE(?a), ""disambiguation"")) }
    OPTIONAL { ?person dbo:finalRestingPlace ?restingPlace . }
  }

  UNION

  # Simon Cadell's resting place
  {
    ?person rdfs:label ""Simon Cadell""@en .
    FILTER NOT EXISTS { ?person dbo:abstract ?a . FILTER (CONTAINS(LCASE(?a), ""disambiguation"")) }
    OPTIONAL { ?person dbo:finalRestingPlace ?restingPlace . }
  }

  UNION

  # Child of James Burton who is a property developer
  {
    ?child dbp:parent ""James Burton""@en .
    ?child rdf:type dbo:Person .
    ?child dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""property developer""))
    OPTIONAL { ?child dbo:finalRestingPlace ?restingPlace . }
  }
}
```",4,4,5,2,3,3,3,71,0,2,1,0.0,0.0,0
16,24,val,Give me the professional in the profession of Satomi Ishihara and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession (GROUP_CONCAT(?personName; separator="", "") AS ?bornAsGeorgeanneMarieRice)
WHERE {
  # Find Satomi Ishihara's profession
  { 
    SELECT ?profession WHERE {
      ?satomiIshihara dbo:occupation ?profession .
      ?satomiIshihara foaf:name ""Satomi Ishihara""@en .
    }
  }

  # Find person born as Georgeanne Marie Rice
  {
    SELECT ?personName WHERE {
      ?person foaf:name ""Georgeanne Marie Rice""@en .
      FILTER EXISTS { ?person a dbo:Person . } # Ensure it's a person entity
    }
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
485,16,val,"Give me the entity in United Kingdom and entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?ukEntity ?birthPlaceRegion
WHERE {
  # Find Joseph Whitaker's associated entity in the UK
  ?person a dbo:Naturalist ;
          foaf:name ""Joseph Whitaker"" .
  
  OPTIONAL { 
    ?person dbo:residence ?ukEntity .
    FILTER (regex(str(?ukEntity), ""United Kingdom""))
  }
  
  # Find his birthplace and check if it is a region
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace dbp:type ?type .
  FILTER (?type = ""Region"")
  BIND(?birthPlace AS ?birthPlaceRegion)
}
```",3,4,4,2,2,2,3,28,0,0,357,0,0.0,0
712,15,val,"Give me the resting place of Nina Onilova and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
# Query for Nina Onilova's resting place
SELECT ?restingPlace WHERE {
  ?nina a dbo:Person ;
        foaf:name ""Nina Onilova""@en .
  OPTIONAL { ?nina dbo:finalBurialPlace ?restingPlace . }
}

UNION

# Query for the capital of the country related to Vyoshenskaya Uprising
SELECT ?capital WHERE {
  ?uprising a dbo:Event ;
            foaf:name ""Vyoshenskaya Uprising""@en .
  ?militaryForce dbo:participatedIn ?uprising ;
                 a dbo:MilitaryUnit, dbo:Organization .
  ?country dbo:hasMilitaryUnit ?militaryForce .
  ?capital dbo:capital ?country .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
378,19,val,Give me the war of the person born as Carl Pontus Gahn and war of Joaquín Blake.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?war WHERE {
  VALUES (?personName) { (dbr:C._P._Gahn) (dbr:Joaquín_Blake) }
  
  ?person rdfs:label ?personLabel .
  FILTER(CONTAINS(LCASE(?personLabel), LCASE(str(?personName)))) .

  OPTIONAL {
    ?person dbo:participatedIn ?war .
  }

  FILTER(!isBlank(?war))
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,39,val,Give me the spouse of Laodice IV and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Find the spouse of Laodice IV
  dbr:Laodice_IV dbo:spouse ?laodiceSpouse .

  # Step 2: Identify the commander in Battle of Panium
  ?battle dbo:commander ?commander .
  FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Panium""))

  # Step 3: Find the child of this commander
  ?child dbo:parent ?commander .

  # Step 4: Identify the spouse of this child, which should be Laodice IV's spouse
  ?child dbo:spouse ?spouse .
  
  FILTER(?laodiceSpouse = ?spouse)
}
```",4,4,5,3,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
328,25,val,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?officeLeader WHERE {
  ?person a dbo:MilitaryPerson ;
          dbo:commander ""Eastern Front (World War II)""@en .
  
  OPTIONAL { 
    ?person dbo:leaderOf ?office .
    ?office a dbo:GovernmentAgency ;
            dbo:head ""Joseph Stalin""@en .
  }
  
  FILTER EXISTS {
    ?person rdfs:label ?commanderLabel .
    FILTER(LANG(?commanderLabel) = 'en')
  }

  OPTIONAL {
    ?person rdfs:label ?officeLeaderLabel .
    FILTER(LANG(?officeLeaderLabel) = 'en')
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
827,12,val,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894) and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Identify Charles Augustus
  VALUES (?charlesAugustus) { dbr:Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach }
  
  # Find his children who are royalty
  ?child dbo:parent ?charlesAugustus .
  ?child rdf:type dbo:Monarch .

  # Ensure the child is also a child of Charles Alexander
  VALUES (?charlesAlexander) { dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach }
  ?child dbo:parent ?charlesAlexander .

  # Determine the father (either Charles Augustus or Charles Alexander)
  OPTIONAL { ?father dbo:spouse ?mother . ?child dbo:parent ?father . FILTER(?father IN (?charlesAugustus, ?charlesAlexander)) }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
492,24,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict ?commanderName WHERE {
  ?herr a dbo:Person ;
        foaf:name ""Frédéric-Georges Herr""@en ;
        dbo:deathPlace dbr:Algiers .
  
  ?herr dbo:militaryConflict ?conflict ;
        dbo:role ?role .

  FILTER(?role = dbo:Commander)

  ?commander a dbo:Person ;
             foaf:name ?commanderName ;
             dbo:role ?role .

  FILTER(?commander = ?herr)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
179,11,val,Give me the parent of Ubol Ratana and person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent ?personWithBirthName
WHERE {
  # Find the parent of Ubol Ratana
  OPTIONAL { 
    dbr:Ubol_Ratana dbo:parent ?parent .
  }
  
  # Find a person born with the name Sirikit
  OPTIONAL {
    ?personWithBirthName dbo:birthName ""Sirikit""@en .
  }

  FILTER (?parent = ?personWithBirthName)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
427,40,val,Give me the party of Giulio Andreotti and reference to the name of the party of Michele Pinto and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?andreottiPartyLabel ?pintoPartyLabel ?prodiPartyLabel
WHERE {
  ?andreotti a dbo:Person ;
             foaf:name ""Giulio Andreotti""@en .
  ?andreotti dbo:partyAffiliation ?andreottiParty .

  ?pinto a dbo:Person ;
         foaf:name ""Michele Pinto""@en .
  ?pinto dbo:partyAffiliation ?pintoParty .

  ?prodi a dbo:Person ;
         foaf:name ""Romano Prodi""@en .
  ?prodi dbo:partyAffiliation ?prodiParty .

  OPTIONAL { ?andreottiParty rdfs:label ?andreottiPartyLabel . FILTER (lang(?andreottiPartyLabel) = 'en') }
  OPTIONAL { ?pintoParty rdfs:label ?pintoPartyLabel . FILTER (lang(?pintoPartyLabel) = 'en') }
  OPTIONAL { ?prodiParty rdfs:label ?prodiPartyLabel . FILTER (lang(?prodiPartyLabel) = 'en') }
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
747,35,val,Give me the person born on the birth date of Pavlo Khudzik and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . }","```sparql
# Step 1: Find Pavlo Khudzik's birth date
SELECT ?birthDate WHERE {
    ?pavloKhudzik a dbo:Person ;
                  foaf:name ""Pavlo Khudzik""@en .
    ?pavloKhudzik dbo:birthDate ?birthDate .
}

# Step 2: Find another person born on Pavlo Khudzik's birth date
SELECT DISTINCT ?person WHERE {
    ?person a dbo:Person ;
            dbo:birthDate ?birthDate .
    FILTER NOT EXISTS { ?person foaf:name ""Pavlo Khudzik""@en }
}
ORDER BY ?person LIMIT 1

# Step 3: Find Tracey Elizabeth McSween's band
SELECT ?band WHERE {
    ?traceyMcSween a dbo:Person ;
                   foaf:name ""Tracey Elizabeth McSween""@en .
    ?traceyMcSween dbo:band ?band .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
92,43,val,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of Joseph Michael.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  ?person dbo:actor dbr:Return_to_Nuke_'Em_High_Volume_1 .
  ?person dbo:bandMember dbr:Nevermore_(band) .
  ?person dbo:associatedBand dbr:Ill_Natured_Demons ; # Assuming Ill Natured Demons is the band associated with Joseph Michael
         a dbo:MusicArtist .
  BIND(?person AS ?artist)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
701,24,val,Give me the parent of the child of Ramesses II and spouse of Ramesses II.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  ?ramesses2 dbo:spouse ?spouse .
  ?child dbo:parent ?spouse .
  ?ramesses2 dbo:child ?child .
}
```",3,3,4,2,2,3,3,71,0,6473,2,0.0,0.0,0
959,23,val,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMaterName
WHERE {
  ?person a dbo:Person ;
          dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1958)
  
  ?person dbo:almaMater ?almaMater .
  ?almaMater a dbo:University, dbo:EducationalOrganization ;
             dbo:country dbr:Japan .

  BIND(STRAFTER(STR(?almaMater), ""http://dbpedia.org/resource/"") AS ?almaMaterName)
}
```",3,7,4,3,1,3,3,71,0,0,524,0,0.0,0
251,19,val,"Give me the administration of Forza Italia (2013) and death place of Laura Mancinelli and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v2 <http://dbpedia.org/ontology/place> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for administration of Forza Italia in 2013
SELECT ?leader WHERE {
    ?party a dbo:PoliticalParty ;
           rdfs:label ""Forza Italia""@en .
    OPTIONAL { 
        ?party dbo:leader ?leader .
        FILTER(YEAR(?startDate) <= 2013 && (YEAR(?endDate) >= 2013 || NOT EXISTS { ?party dbo:endDate ?endDate }))
    }
}

UNION

# Query for death place of Laura Mancinelli
SELECT ?deathPlace WHERE {
    ?person a dbo:Person ;
            rdfs:label ""Laura Mancinelli""@en .
    OPTIONAL { 
        ?person dbo:deathPlace ?deathPlace .
    }
}

UNION

# Query for location of the war involving Louis François Félix Musnier
SELECT ?location WHERE {
    ?conflict a dbo:MilitaryConflict ;
              dbo:participant ?musnier .
    ?musnier rdfs:label ""Louis François Félix Musnier""@en .
    OPTIONAL { 
        ?conflict dbo:location ?location .
    }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
547,26,val,Give me the resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?restingPlace WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Nicole Jaffe""@en .
  OPTIONAL { ?actor dbo:finalBurialPlace ?restingPlace . }
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
314,13,val,Give me the person deceased at the headquarter of House of Sombrerete and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName WHERE {
  ?person a dbo:Person .
  ?person dbo:name ?personName .
  ?person dbo:deathPlace dbr:Headquarters_of_the_House_of_Sombrerete .
  
  # Assuming the award is represented by a property like dbo:award
  OPTIONAL { 
    ?person dbo:award ?award .
    FILTER (count(?award) = 30)
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,19,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?child WHERE {
  # Find Laodice IV's spouse
  dbr:Laodice_IV dbo:spouse ?spouse .
  
  # Find the child of this spouse
  ?spouse dbo:child ?child .

  # Ensure the child is royalty (assuming a property like dbo:royalty exists)
  OPTIONAL { ?child dbo:royalty ?isRoyalty . FILTER(?isRoyalty = true) }

  # Ensure the child is a descendant of Seleucus II Callinicus
  ?child dbo:parent* dbr:Seleucus_II_Callinicus .
}
```",3,4,4,2,2,3,3,71,3,6,0,0.3333333333333333,1.0,0.5
16,39,val,Give me the person born as the birth name of the alumnus of Ohio State University and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthName
WHERE {
  ?person rdf:type dbo:Alumni .
  ?person dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> .
  ?person rdf:type dbo:Actress .
  ?person dbo:birthName ?birthName .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
528,31,val,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?chileWar ?orozimboWar WHERE {
  # Wars in Chile
  ?chileWar a dbo:War ;
            dbp:location ""Chile""@en .

  # War involving Orozimbo Barbosa
  ?orozimboWar a dbo:War ;
               dbo:participant <http://dbpedia.org/resource/Orozimbo_Barbosa> .
}
```",4,5,5,3,2,3,3,71,0,0,9,0,0.0,0
659,28,val,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in Battle of Leipzig and military force of Napoleonic Wars.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?battle dbo:participatedIn [
    a dbo:MilitaryConflict ;
    dbo:commander ?commander .
  ].
  
  FILTER (
    ?battle = dbr:Battle_of_Leipzig &&
    ?commander != dbr:Arthur_Wellesley,_1st_Duke_of_Wellington
  )
}
```",4,4,5,2,3,3,3,71,0,0,5,0,0.0,0
9,22,val,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
# Query for John Alderdice's Alma Mater
SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""John Alderdice"" ;
          dbo:almaMater ?almaMater .
}

UNION

# Query for the Nickname of Queen's University Belfast
SELECT ?nickname WHERE {
  ?university a dbo:EducationalInstitution ;
              rdfs:label ""Queen's University Belfast""@en ;
              dbo:nickname ?nickname .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,27,val,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?unitName WHERE {
  ?unit a dbo:MilitaryUnit ;
        dbo:country dbr:New_Zealand .
  
  ?person dbo:profession dbr:Politician ;
          dbo:officeHolder ?office .

  ?unit dbo:member ?person .
  
  FILTER EXISTS { ?person dbo:officeHolder ?office }
}
```",3,6,4,3,1,3,3,71,0,0,14,0,0.0,0
392,13,val,"Give me the entity in the region, that is a country, of Central European Time and region of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country rdf:type dbo:Country .
  ?country dbp:timeZone ""Central European Time"" .
}
```",3,4,4,2,2,2,3,28,0,0,28787,0,0.0,0
360,12,val,Give me the writer of The Roaring Silence and native of Johannesburg and reference to Manfred Mann.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?birthPlace WHERE {
  ?album dbo:title ""The Roaring Silence"" ;
         dbo:artist dbr:Manfred_Mann's_Earth_Band ;
         dbo:lyricsBy ?writer .
  
  ?writer dbo:birthPlace dbr:Johannesburg .

  OPTIONAL { 
    ?connection dbo:associatedBand dbr:Manfred_Mann ;
                dbo:member ?writer .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
161,24,val,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderRole ?militaryForce WHERE {
  # Identify Francisco Largo Caballero
  dbr:Franco_Largo_Caballero a dbo:Person .

  # Find his role in the Biscay Campaign
  OPTIONAL { 
    ?campaign dbo:militaryConflict dbr:Biscay_Campaign .
    ?campaign dbo:commander dbr:Franco_Largo_Caballero .
    ?campaign dbo:commanderRole ?commanderRole .
  }

  # Identify the military force he commanded
  OPTIONAL {
    ?campaign dbo:militaryForce ?militaryForce .
  }
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
915,15,val,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . ?result <http://dbpedia.org/ontology/residence> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?resident
WHERE {
  # Step 1: Identify the director of ""Pipe Dreams"" (1976 film)
  ?film dbo:title ""Pipe Dreams""@en .
  ?film dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 1976) .
  
  ?director dbo:filmDirector ?film .

  # Step 2: Find if this director is the father of Lizzie Spaulding
  ?lizzie dbo:name ""Lizzie Spaulding""@en ;
          dbo:parent ?director .

  # Step 3: Determine the birthplace of the director
  ?director dbo:birthPlace ?birthPlace .

  # Step 4: Check if the birthplace is a settlement
  ?birthPlace rdf:type dbo:Settlement .

  # Step 5: Find notable residents of the birthplace
  ?resident dbo:residence ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
528,18,val,Give me the war of Orozimbo Barbosa and force of Narciso Campero and war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query for the war involving Orozimbo Barbosa (Paraguayan War)
SELECT ?war WHERE {
  ?war dbo:wikiPageRedirects db:Q1234567 ; # Assuming Q1234567 is the DBpedia ID for Paraguayan War
       a dbo:MilitaryConflict .
}

# Query for the war involving Narciso Campero (War of the Pacific)
SELECT ?war WHERE {
  ?war dbo:wikiPageRedirects db:Q2345678 ; # Assuming Q2345678 is the DBpedia ID for War of the Pacific
       a dbo:MilitaryConflict .
}
```

Note: The exact DBpedia IDs (`Q1234567`, `Q2345678`) need to be verified or replaced with correct identifiers from DBpedia.",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
547,38,val,Give me the resting place of the actor of Enemy at the Door and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?restingPlaceActor ?awardee ?restingPlaceAwardee WHERE {
  # Actor of ""Enemy at the Door""
  ?film dbo:title ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
  
  OPTIONAL { 
    ?actor dbo:restingPlace ?restingPlaceActor .
  }
  
  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  ?awardee dbo:honours ""Knight Grand Cross of the Order of St Michael and St George""@en .
  
  OPTIONAL { 
    ?awardee dbo:restingPlace ?restingPlaceAwardee .
  }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
77,12,val,Give me the force of the mayor of Congress Poland and war of Alexander Chechenskiy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader ?force WHERE {
  # Congress Poland leaders or governors
  {
    SELECT ?leader WHERE {
      ?leader a dbo:GovernmentOfficial ;
              dbo:country dbr:Congress_Poland .
    }
  }

  OPTIONAL {
    ?leader dbo:militaryForce ?force .
  }

  UNION

  # Alexander Chechenskiy and wars
  {
    ?person rdfs:label ""Alexander Chechenskiy""@en .
    ?person dbo:participatedInWar ?war .
    ?war rdfs:label ?warLabel .
  }
}
```",3,3,4,2,2,3,2,20,0,0,6,0,0.0,0
404,37,val,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchildParent WHERE {
  ?princeGeorgeWilliam dbo:parent ?parent1 .
  FILTER EXISTS { ?parent1 a dbo:Monarch } .

  ?parent1 dbo:child ?royalChild .
  FILTER EXISTS { ?royalChild a dbo:Monarch } .

  ?royalChild dbo:parent ?grandchildParent .
}
```",4,6,5,3,2,3,3,71,0,16,1,0.0,0.0,0
285,14,val,Give me the spouse of the professional in the award of Stan Lee.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
  ?stanLee a dbo:Person ;
           foaf:name ""Stan Lee"" ;
           dbo:spouse ?spouse .
}
```",3,3,4,3,1,3,2,20,0,0,4149,0,0.0,0
659,21,val,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:commander dbr:Arthur_Wellesley,_1st_Duke_of_Wellington .
  OPTIONAL { ?militaryForce rdfs:label ?forceLabel FILTER (lang(?forceLabel) = ""en"") }
}
```",3,3,4,2,2,3,3,71,0,0,32,0,0.0,0
92,29,val,"Give me the band of Joseph Michael and band member of Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . }","```sparql
# Step 1: Find Joseph Michael's band
SELECT ?band WHERE {
    dbpedia:Joseph_Michael dbo:band ?band .
}

# Step 2: Find a member of Nevermore
SELECT DISTINCT ?member WHERE {
    ?member dbo:member <http://dbpedia.org/resource/Nevermore> .
}

# Step 3: Find Jim Sheppard's associated musical artist
SELECT ?artist WHERE {
    dbpedia:Jim_Sheppard dbo:birthDate ?date ;
                         a dbo:Artist ;
                         dbo:associatedBand ?artist .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
328,19,val,"Give me the commander in Eastern Front (World War II) and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson ;
          dbo:commanderOf dbr:Eastern_Front_(World_War_II) .
  ?award dbo:recipient ?person ;
         dbo:awardee dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
  ?person rdfs:label ?name .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
184,31,val,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of Archduke Joseph August of Austria.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?landmark a dbo:Settlement ;
            dbo:elevation ""96.0""^^xsd:float .
  
  ?native dbo:nativePlace ?landmark .
  ?native dbo:parent ?parent .

  ?archduke dbr:Archduke_Joseph_August_of_Austria ;
            dbo:child ?parent .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
487,14,val,"Give me the administration of the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?administration
WHERE {
  ?person a dbo:SoccerPlayer .
  ?person foaf:name ""Phil Scott"" .
  ?person dbo:administration ?administration .
}
```",3,4,4,3,1,3,2,20,0,0,14,0,0.0,0
294,17,val,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v1 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?architect ?restingPlace WHERE {
  # Find the architect of P. D. Houston Jr. House
  ?house dbo:architect ?architect .
  FILTER(STRSTARTS(STR(?house), ""http://dbpedia.org/resource/P._D._Houston_Jr._House""))

  OPTIONAL {
    # Get the resting place (deathPlace or finalBurial) of the architect
    ?architect dbo:deathPlace ?restingPlace .
  }
}
```",3,3,4,2,2,2,3,28,0,2,1,0.0,0.0,0
547,41,val,Give me the resting place of the child of James Burton (property developer) and resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
# Query for the child of James Burton (property developer) and their resting place
SELECT ?child ?restingPlaceChild WHERE {
  ?jamesB rdf:type dbo:Person ;
          foaf:name ""James Burton"" .
  ?child dbo:parent ?jamesB ;
         dbo:occupation dbo:PropertyDeveloper .
  OPTIONAL { ?child dbo:finalRestingPlace ?restingPlaceChild }
}

UNION

# Query for Alan Cunningham and his resting place
SELECT ?alanCunningham ?restingPlaceAlan WHERE {
  ?alanCunningham rdf:type dbo:Person ;
                  foaf:name ""Alan Cunningham"" .
  OPTIONAL { ?alanCunningham dbo:finalRestingPlace ?restingPlaceAlan }
}

UNION

# Query for the actor of ""Enemy at the Door"" and their resting place
SELECT ?actor ?film ?restingPlaceActor WHERE {
  ?film rdf:type dbo:Film ;
        foaf:name ""Enemy at the Door"" .
  ?actor dbo:actedIn ?film ;
         dbo:finalRestingPlace ?restingPlaceActor .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
645,14,val,Give me the alma mater of the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater
WHERE {
  # Step 1: Identify Adela Pankhurst
  ?adela a dbo:Person ;
         foaf:name ""Adela Pankhurst""@en .

  # Step 2: Find her parent(s)
  ?parent dbo:child ?adela .

  # Step 3: Determine the child of her parent(s) (excluding Adela herself)
  ?sibling dbo:child ?parent .
  FILTER (?sibling != ?adela)

  # Step 4: Find alma mater for the sibling
  ?sibling dbo:almaMater ?almaMater .
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
281,33,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceCountry WHERE {
  # Find the leader of the 1962 New South Wales state election
  ?leader a dbo:Politician ;
          dbo:electedAs dbr:1962_New_South_Wales_state_election .

  # Get the birth place of the leader and ensure it is a country
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?placeLabel .
  FILTER (CONTAINS(LCASE(?placeLabel), ""country"") || CONTAINS(LCASE(?placeLabel), ""state""))

  # Find Beauchamp Seymour, 1st Baron Alcester's war involvement
  dbr:Beauchamp_Seymour,_1st_Baron_Alcester dbo:participatedIn ?war .

  # Link the leader's birth place country with the war
  ?birthPlace rdfs:label ?countryLabel .
  ?war rdfs:label ?warLabel .
  FILTER (CONTAINS(LCASE(?countryLabel), LCASE(?warLabel)))
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
981,14,val,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person dbo:author dbr:Kamikaze_Girls .
  ?person dbo:birthPlace ?birthPlace .
  OPTIONAL { ?person dbo:award ?award . FILTER(CONTAINS(LCASE(str(?award)), ""beauty queen"")) }
}
```",3,4,4,3,1,3,2,20,0,0,170,0,0.0,0
801,25,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of Westside Story (song).",SELECT ?result WHERE { <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  ?song1 dbo:lyricist ?writer .
  ?song2 dbo:producer ?writer .
  ?writer rdf:type dbo:MusicalArtist .

  FILTER (?song1 = dbr:40_Dayz_&_40_Nightz)
  FILTER (?song2 = dbr:Westside_Story_(song))
  
  ?artist dbo:associatedBandOrMusicalArtist ?writer .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
747,18,val,Give me the band of Shèna and person born on 1985-04-29 and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandShena (GROUP_CONCAT(?personName; separator="", "") AS ?personBorn1985) ?bandAmbaShepherd WHERE {
  # Shèna's band
  OPTIONAL { 
    dbr:Shèna dbo:band ?bandShena .
  }
  
  # Person born on 1985-04-29 and their band
  OPTIONAL {
    ?person dbo:birthDate ""1985-04-29""^^xsd:date ;
            rdfs:label ?personName .
    FILTER (lang(?personName) = 'en')
    OPTIONAL { 
      ?person dbo:band ?bandPerson .
    }
  }

  # Amba Shepherd's band
  OPTIONAL {
    dbr:Amba_Shepherd dbo:band ?bandAmbaShepherd .
  }
}
GROUP BY ?bandShena ?bandAmbaShepherd
```",3,3,4,1,3,3,3,71,0,1,1,0.0,0.0,0
645,13,val,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Diamond Rock""@en .
  
  ?battle dbo:commander ?commander .

  ?commander dbp:residence ?residence .

  ?residence dbo:country ?country .
}
```",3,4,4,3,1,3,2,20,0,0,42999,0,0.0,0
488,19,val,Give me the birth place of the commander in Boshin War and death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace
WHERE {
  # Saigō Takamori's birth place
  dbr:Saig%C5%8D_Takamori dbo:birthPlace ?birthPlace .
  
  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,37,val,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?predecessor
WHERE {
  # Find predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?ameitta a dbo:Monarch ;
           dbo:predecessor ?predecessor .

  # Identify Thado Minsaw of Prome and trace lineage
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw""@en .
  
  ?parentOfThadoMinsaw dbo:child ?thadoMinsaw .
  ?siblingOrRelatedChild dbo:parent ?parentOfThadoMinsaw .
  ?finalParent dbo:child ?siblingOrRelatedChild .

  # Ensure the predecessor and final parent are the same
  FILTER (?predecessor = ?finalParent)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
801,38,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?song dbo:lyricsBy ?writer .
  ?song rdfs:label ""40 Dayz & 40 Nightz""@en .

  ?writer a dbo:MusicalArtist ;
          a dbo:Artist ;
          dbo:producedWork ?work .

  ?work a dbo:MusicalWork, dbo:Song ;
        dbo:lyricsBy ?writer .
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
421,16,val,Give me the band member of Senidah and person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?birthNamePerson WHERE {
  # Find band members of Senidah
  ?senidah dbo:stageName ""Senidah""@en .
  ?senidah dbo:bandMember ?bandMember .

  # Find Dino Merlin's birth name
  ?dinoMerlin dbo:birthName ?birthName .

  # Find persons with the same birth name as Dino Merlin
  ?person dbp:birthday ?dateOfBirth ;
          dbo:birthName ?birthName .
  
  FILTER (?birthName = ?birthName)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
767,30,val,Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg and reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
# Query 1: Alma Mater of Carl L. Nippert
SELECT ?almaMater WHERE {
    ?person a dbo:Person ;
            foaf:name ""Carl L. Nippert"" .
    ?person dbo:almaMater ?almaMater .
}

UNION

# Query 2: Entity in Baden-Württemberg
SELECT ?entity WHERE {
    ?entity dbo:location ?place .
    ?place rdfs:label ""Baden-Württemberg""@en .
    FILTER (lang(?place) = 'en')
}

UNION

# Query 3: Alter Ego of Black Hood
SELECT ?alterEgo WHERE {
    ?character a dbo:FictionalCharacter ;
               foaf:name ""Black Hood"" .
    ?character dbo:alterEgo ?alterEgo .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
754,13,val,Give me the parent of the parent of the parent of Min Linka.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
# Step 1: Find Min Linka's direct parent class
SELECT ?minLinkaClass WHERE {
    dbp:Min_Linka rdf:type ?minLinkaClass .
}

# Step 2: Find the parent of Min Linka's class
SELECT ?grandparentClass WHERE {
    ?minLinkaClass rdfs:subClassOf+ ?grandparentClass .
    FILTER NOT EXISTS { ?grandparentClass rdfs:subClassOf+ ?other }
}

# Step 3: Find the great-grandparent class
SELECT ?greatGrandparentClass WHERE {
    ?grandparentClass rdfs:subClassOf+ ?greatGrandparentClass .
    FILTER NOT EXISTS { ?greatGrandparentClass rdfs:subClassOf+ ?other }
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
528,21,val,Give me the war of the military force of Battle of Pisagua and force of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleForce ?camperoForce WHERE {
  # Find military forces involved in the Battle of Pisagua
  ?battleEvent a dbo:Event ;
               rdfs:label ""Battle of Pisagua""@en .
  
  ?battleEvent dbo:participatedIn ?battleForce .

  # Find military force associated with Narciso Campero
  dbr:Narciso_Campero dbo:militaryService ?camperoForce .

  FILTER (lang(?battleEvent->rdfs:label) = ""en"")
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
182,18,val,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v2 . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?nationalityEntity
WHERE {
  # Find the war Jagath Dias participated in
  dbr:Jagath_Dias dbo:participatedIn ?war .
  
  # Find Tamara Kunanayakam's nationality
  dbr:Tamara_Kunanayakam dbo:nationality ?nationalityEntity .
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
184,41,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of Budapest and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Step 1: Find children of Archduke Joseph Karl of Austria
  ?child dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  
  # Step 2: Find grandchildren (children of the child)
  ?grandchild dbo:parent ?child .

  # Step 3: Filter for native of Budapest and parent of Archduchess Ilona
  ?grandchild dbo:nativePlace dbr:Budapest .
  ?ilona dbo:parent ?grandchild ;
         rdf:type dbo:Person ;
         rdfs:label ""Archduchess Ilona of Austria""@en .

}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
161,43,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of Rif War and commander in Biscay Campaign.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Indalecio Prieto's predecessor
SELECT ?predecessor WHERE {
    dbr:Indalecio_Prieto dbo:predecessor ?predecessor .
}

# Step 2: Determine the military force of this predecessor
SELECT ?militaryForce WHERE {
    ?predecessor dbo:militaryForce ?militaryForce .
}

# Step 3: Identify societal event and military conflict associated with this military force
SELECT DISTINCT ?event ?conflict WHERE {
    ?militaryForce dbo:participatedIn ?event .
    ?militaryForce dbo:participatedIn ?conflict .
    FILTER (dbo:SocietalEvent(?event) || dbo:MilitaryConflict(?conflict))
}

# Step 4: Find the military force of the Rif War
SELECT ?rifWarMilitaryForce WHERE {
    dbr:Rif_War dbo:militaryForce ?rifWarMilitaryForce .
}

# Step 5: Determine the commander in the Biscay Campaign
SELECT ?commander WHERE {
    dbr:Biscay_Campaign dbo:commander ?commander .
}

# Combine results to provide a coherent answer
SELECT DISTINCT ?predecessor ?militaryForce ?event ?conflict ?rifWarMilitaryForce ?commander WHERE {
    # Predecessor and their military force
    dbr:Indalecio_Prieto dbo:predecessor ?predecessor .
    ?predecessor dbo:militaryForce ?militaryForce .

    # Societal event and military conflict associated with predecessor's military force
    ?militaryForce dbo:participatedIn ?event .
    ?militaryForce dbo:participatedIn ?conflict .
    FILTER (dbo:SocietalEvent(?event) || dbo:MilitaryConflict(?conflict))

    # Military force of the Rif War
    dbr:Rif_War dbo:militaryForce ?rifWarMilitaryForce .

    # Commander in the Biscay Campaign
    dbr:Biscay_Campaign dbo:commander ?commander .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
360,16,val,Give me the writer of The Roaring Silence and reference to the author of Blinded by the Light.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bookTitle ?authorName WHERE {
  {
    # Query for the author of ""The Roaring Silence""
    ?book a dbo:Book ;
          rdfs:label ?bookTitle .
    FILTER (CONTAINS(LCASE(?bookTitle), ""the roaring silence""))
    OPTIONAL { ?book dbo:author ?author . }
    ?author rdfs:label ?authorName .
  } UNION {
    # Query for the author of ""Blinded by the Light""
    ?book a dbo:Book ;
          rdfs:label ?bookTitle .
    FILTER (CONTAINS(LCASE(?bookTitle), ""blinded by the light""))
    OPTIONAL { ?book dbo:author ?author . }
    ?author rdfs:label ?authorName .
  }
}
```",3,3,4,2,2,2,3,28,0,2,1,0.0,0.0,0
9,40,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as QUB.","SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
# Query for Allen Hill's Alma Mater
SELECT ?almaMaterAllenHill WHERE {
  ?allenHill a dbo:Scientist ;
             foaf:name ""Allen Hill"" .
  ?allenHill dbo:almaMater ?almaMaterAllenHill .
}

UNION

# Query for the Mayor of Belfast's Alma Mater
SELECT ?almaMaterMayor WHERE {
  # Identify QUB as an organization in Belfast
  ?qub a dbo:EducationalInstitution ;
       foaf:name ""Queen's University Belfast"" ;
       dbo:locationCity ?belfast .
  
  # Find the current mayor of Belfast
  ?mayor a dbo:Politician ;
         dbo:officeHolderOf ?belfastOffice ;
         dbo:almaMater ?almaMaterMayor .

  # Ensure the office is related to being Mayor of Belfast
  ?belfastOffice foaf:name ""Mayor of Belfast"" .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
184,30,val,Give me the parent of the child of Archduke Joseph Francis of Austria and child of Archduke Joseph August of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Find the child of Archduke Joseph Francis of Austria
  ?child1 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Find the child of Archduke Joseph August of Austria
  ?child2 dbo:parent dbr:Archduke_Joseph_August_of_Austria .

  # Find the parent of Géza von Habsburg
  dbr:Géza_von_Habsburg dbo:parent ?parentOfGeza .
  
  # Check if there is a common parent for both children and Géza's parent
  OPTIONAL { ?child1 dbo:parent ?commonParent . }
  OPTIONAL { ?child2 dbo:parent ?commonParent . }
  FILTER(?commonParent = ?parentOfGeza)
}
```",4,4,5,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
281,18,val,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in Colony of New Zealand and war of New Zealand Army.","SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1 ?war2 ?war3 WHERE {
  # Beauchamp Seymour's participation in wars
  dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:participatedIn ?war1 .
  
  # Wars involving the Colony of New Zealand
  ?war2 dbo:participatingMilitaryUnit dbr:Colony_of_New_Zealand .
  
  # Wars involving the New Zealand Army
  ?war3 dbo:participatingMilitaryUnit dbr:New_Zealand_Army .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
747,30,val,Give me the person born on 1985-04-29 and band of the person born as Tracey Elizabeth McSween and band of Amba Shepherd.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person1 ?band1 ?person2 ?band2 WHERE {
  # Find Tracey Elizabeth McSween and her band
  ?person1 a dbo:Person ;
           dbo:name ""Tracey Elizabeth McSween""@en .
  OPTIONAL { ?person1 dbo:band ?band1 . }

  # Find Amba Shepherd and her band
  ?person2 a dbo:Person ;
           dbo:name ""Amba Shepherd""@en .
  OPTIONAL { ?person2 dbo:band ?band2 . }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
184,26,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?childOfChild WHERE {
  # Step 1: Identify Archduke Ladislaus Philipp of Austria
  ?ladislaus a dbo:Person ;
             foaf:name ""Archduke Ladislaus Philipp of Austria""@en .

  # Step 2: Find his parent
  ?ladislaus dbo:parent ?parent .

  # Step 3: Find the child of this parent (could be siblings or cousins)
  ?sibling a dbo:Person ;
           dbo:parent ?parent .

  # Step 4: Identify if any sibling is royalty
  ?sibling rdf:type ?royaltyType .
  FILTER (
    ?royaltyType IN (
      dbo:Monarch,
      dbo:RoyalFamilyMember,
      dbo:CrownPrince,
      dbo:Princess,
      dbo:Duke,
      dbo:Archduke
    )
  )

  # Step 5: Find the child of this royal sibling
  ?sibling dbo:child ?childOfChild .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
838,14,val,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?member
WHERE {
  ?band rdf:type dbo:Band ;
        rdfs:label ""YU Grupa""@en .
  
  ?band dbo:bandMember ?member .

  ?member rdf:type ?type1 .
  FILTER (?type1 IN (dbo:Group, dbo:Organization))
}
```",3,6,4,3,1,3,2,20,0,0,40,0,0.0,0
356,13,val,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player
WHERE {
  # Step 1: Identify the 2015 Sacramento Republic FC Season
  dbr:2015_Sacramento_Republic_FC_season dbo:predecessor ?predecessor .

  # Step 2: Find its Predecessor's Successor
  ?predecessor dbo:successor ?successor .

  # Step 3: Ensure it is both a Sports Team Season and a Soccer Club Season
  ?successor rdf:type dbo:SportsTeamSeason ;
             rdf:type dbo:SoccerClubSeason .

  # Step 4: Extract the Player Information
  ?successor dbo:player ?player .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
754,15,val,Give me the parent of the parent of the parent of Min Linka and parent of May Hnin Thwe-Da.,SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?minLinkaThirdParent ?mayHninThweDaThirdParent WHERE {
  # Min Linka's hierarchy
  ?minLinka rdf:type ?minLinkaClass .
  ?minLinkaClass rdfs:subClassOf* ?firstLevelMinLinkaParent .
  ?firstLevelMinLinkaParent rdfs:subClassOf* ?secondLevelMinLinkaParent .
  ?secondLevelMinLinkaParent rdfs:subClassOf* ?thirdLevelMinLinkaParent .

  # May Hnin Thwe-Da's hierarchy
  ?mayHninThweDa rdf:type ?mayHninThweDaClass .
  ?mayHninThweDaClass rdfs:subClassOf* ?firstLevelMayHninThweDaParent .
  ?firstLevelMayHninThweDaParent rdfs:subClassOf* ?secondLevelMayHninThweDaParent .
  ?secondLevelMayHninThweDaParent rdfs:subClassOf* ?thirdLevelMayHninThweDaParent .

  # Filter for specific individuals
  FILTER(STR(?minLinka) = ""http://dbpedia.org/resource/Min_Linka"")
  FILTER(STR(?mayHninThweDa) = ""http://dbpedia.org/resource/May_Hnin_Thwe-Da"")

  BIND(?thirdLevelMinLinkaParent AS ?minLinkaThirdParent)
  BIND(?thirdLevelMayHninThweDaParent AS ?mayHninThweDaThirdParent)
}
```",4,4,5,3,2,3,2,20,0,13,1,0.0,0.0,0
232,27,val,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfResidence
WHERE {
  ?person a dbo:Person ;
          dbo:nationality dbr:France ;
          dbo:officeHolder ?office .
  
  ?person dbo:residence ?residence .

  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  ?resident dbo:nativePlace ?residence .
  
  BIND(?resident AS ?nativeOfResidence)
}
```",3,7,4,3,1,3,3,71,0,0,9121,0,0.0,0
92,19,val,"Give me the associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?band a dbo:Band ;
        dbp:name ""Nevermore"" .
  ?member dbo:bandMember ?band ;
          foaf:name ""Jim Sheppard"" .
  ?member dbo:associatedMusicalArtist ?artist .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,38,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryConflict ?commander
WHERE {
  # Find military conflict associated with Rutger Jan Schimmelpenninck
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryConflict ?militaryConflict .
  
  # Ensure the conflict is a societal event, an event, and a military conflict
  ?militaryConflict rdf:type dbo:SocietalEvent ;
                   rdf:type dbo:Event ;
                   rdf:type dbo:MilitaryConflict .

  OPTIONAL {
    # Find commander of the war involving the 1st Light Cavalry Lancers Regiment
    ?war dbo:participatedIn dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) .
    ?war dbo:commander ?commander .
  }
}
```",4,9,5,2,2,3,3,71,0,0,31,0,0.0,0
617,27,val,Give me the parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Find the Battle of Panium and its commander
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Panium""@en .
  
  ?commander dbo:commanded ?battle .
  
  # Find the child of the commander
  ?child dbo:parent ?commander .

  # Find the parent of that child
  ?child dbo:parent ?parent .
}
```",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
754,11,val,Give me the parent of May Hnin Thwe-Da and parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

# Query for May Hnin Thwe-Da's parent
SELECT ?parent WHERE {
  ?person rdfs:label ""May Hnin Thwe-Da""@en .
  OPTIONAL { ?person dbo:mother ?parent . }
  OPTIONAL { ?person dbo:father ?parent . }
}

UNION

# Query for May Hnin Htapi's grandparent
SELECT ?grandparent WHERE {
  ?child rdfs:label ""May Hnin Htapi""@en .
  OPTIONAL { ?child dbo:mother ?parent . }
  OPTIONAL { ?child dbo:father ?parent . }
  OPTIONAL { ?parent dbo:mother ?grandparent . }
  OPTIONAL { ?parent dbo:father ?grandparent . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
182,14,val,Give me the war of the work of Gotabhaya Rajapaksa and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work (GROUP_CONCAT(?authorLabel; separator="", "") AS ?authors)
WHERE {
  VALUES (?person) { 
    dbr:Gotabhaya_Rajapaksa 
    dbr:Mahesh_Senanayake
  }
  
  ?person dbo:wikiPageWikiLink ?work .
  ?work a dbo:Book .

  OPTIONAL { ?work rdfs:label ?workLabel . FILTER (lang(?workLabel) = 'en') }
  OPTIONAL { ?work dbo:description ?description . FILTER (lang(?description) = 'en' && CONTAINS(LCASE(?description), ""war"")) }

  ?author dbo:wikiPageRedirects* ?person .
  ?author rdfs:label ?authorLabel .
  FILTER (lang(?authorLabel) = 'en')

}
GROUP BY ?work
ORDER BY ?work
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
485,18,val,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of Thomas Warner (poet).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region
WHERE {
  ?whitaker dbo:birthPlace ?place1 .
  ?warner dbo:birthPlace ?place2 .
  
  FILTER (?place1 = ?place2)
  FILTER (rdf:type(?place1, dbo:Region))
  
  VALUES ?whitaker { <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> }
  VALUES ?warner { <http://dbpedia.org/resource/Thomas_Warner_(poet)> }

  BIND(?place1 AS ?region)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
767,28,val,"Give me the reference to  and entity in the administration, that is a settlement, of Green and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement ?reference WHERE {
  # Find Carl L. Nippert's alma mater
  ?nippert dbo:almaMater ?almaMater .
  
  FILTER(?nippert = dbr:C_L_Nippert)
  
  # Check if the alma mater is a settlement and part of an administration
  ?almaMater rdf:type dbo:Settlement .
  OPTIONAL { ?almaMater dbo:partOf ?administration . }
  
  # Get reference to the settlement
  ?settlement rdfs:label ?reference .
  FILTER(LANG(?reference) = 'en')
  
  # Ensure it's the same entity as alma mater
  FILTER(?settlement = ?almaMater)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
767,21,val,"Give me the entity in the administration, that is a settlement, of Green and reference to .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?settlement WHERE {
  ?settlement a dbo:PopulatedPlace .
  ?settlement dbo:partOf ?adminUnit .
  FILTER(CONTAINS(LCASE(STR(?settlement)), ""green""))
}
```",3,4,4,2,2,3,3,71,0,0,7,0,0.0,0
427,30,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to Partito Popolare Italiano and party of Giulio Andreotti.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiParty ?andreottiParty WHERE {
  # Romano Prodi's political party
  OPTIONAL { 
    dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
    FILTER (str(?prodiParty) = ""Partito Popolare Italiano"")
  }
  
  # Giulio Andreotti's political party
  OPTIONAL {
    dbr:Giulio_Andreotti dbo:partyAffiliation ?andreottiParty .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
712,14,val,Give me the resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName ?restingPlace
WHERE {
  ?person a dbo:HeroOfTheSovietUnion .
  ?person foaf:name ?personName .
  OPTIONAL { ?person dbo:finalRestingPlace ?restingPlace . }
}
```",3,3,4,3,1,3,2,20,0,0,63,0,0.0,0
528,44,val,Give me the war of the commander in Battle of La Rinconada de Ate and war of Irene Morales and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the war involving the commander of the Battle of La Rinconada de Ate
SELECT ?war WHERE {
  ?battle dbo:participatedInBattle dbr:Battle_of_La_Rinconada_de_Ate .
  ?battle dbo:commander ?commander .
  ?commander dbo:participatedInWar ?war .
}

# Query for the conflict involving Irene Morales
SELECT ?conflict WHERE {
  dbr:Irene_Morales dbo:involvedInConflict ?conflict .
}

# Query for the force associated with Narciso Campero Leyes
SELECT ?force WHERE {
  dbr:Narciso_Campero_Leyes dbo:birthDate ?birthDate .
  dbr:Narciso_Campero_Leyes dbo:militaryForce ?force .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
963,15,val,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton and administration of Serbian Progressive Party.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . ?v1 <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Find the time zone of Herzegovina-Neretva Canton
  dbr:Herzegovina-Neretva_Canton dbo:timeZone ?timezone .

  # Find countries in this time zone
  ?country a dbo:Country ;
           dbo:timeZone ?timezone .

  # Optional: Link to Serbian Progressive Party's administration if possible
  OPTIONAL {
    ?party dbr:Serbian_Progressive_Party .
    ?party dbo:headOfGovernment ?leader .
    ?leader dbo:country ?country .
  }
}
```",4,5,5,3,2,3,2,20,0,0,84,0,0.0,0
339,11,val,Give me the child of the child of Christian IX of Denmark and father of Princess Elizabeth of Greece and Denmark.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild ?father
WHERE {
  # Christian IX of Denmark
  dbr:Christian_IX_of_Denmark dbo:child ?child .
  
  # Child's child (Grandchildren)
  ?child dbo:child ?grandchild .

  # Princess Elizabeth of Greece and Denmark
  dbr:Princess_Elizabeth_of_Greece_and_Denmark dbo:father ?father .

  # Match the grandchild with the father of Princess Elizabeth
  FILTER (?grandchild = ?father)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
391,31,val,"Give me the actor of The Departed and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find actors in ""The Departed""
  ?movie dbo:title ""The Departed""@en .
  ?movie dbo:starring ?actor .

  # Find the nickname of Jackson, Tennessee
  OPTIONAL { 
    ?city rdfs:label ""Jackson, Tennessee""@en ;
          dbo:nickname ?nickname .
    
    # Find notable figures associated with this nickname
    ?figure dbo:birthPlace ?city ;
            a dbo:Person .
    
    # Check if any actor is also the figure from the city
    FILTER (?actor = ?figure)
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
92,39,val,Give me the associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Query for the associated musical artist of Jim Sheppard
SELECT ?artist WHERE {
  ?person rdfs:label ""Jim Sheppard""@en .
  ?person dbo:associatedBand ?artist .
}

UNION

# Query for the band of the person born with the birth name Joseph Michael
SELECT ?band WHERE {
  ?person dbo:birthName ""Joseph Michael"" ;
          dbo:band ?band .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,25,val,Give me the alma mater of Carl L. Nippert and reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
# Query for Carl L. Nippert's Alma Mater
SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carl L. Nippert""@en .
  ?person dbo:almaMater ?almaMater .
}

UNION

# Query for the Alter Ego of Black Hood
SELECT ?alterEgo WHERE {
  ?character a dbo:FictionalCharacter ;
             foaf:name ""Black Hood""@en .
  OPTIONAL { ?character dbo:alterEgo ?alterEgo . }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
801,44,val,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in  and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?associatedArtist 
WHERE {
    # Identify the musical work ""40 Dayz & 40 Nightz""
    dbr:40_Dayz_&_40_Nightz a dbo:MusicalWork .

    # Find producers of this work
    OPTIONAL { dbr:40_Dayz_&_40_Nightz dbo:producer ?producer . }

    # Identify associated performers with 50 Cent for this work
    OPTIONAL {
        dbr:50_Cent dbo:associatedPerformer ?artist .
        FILTER(?artist != dbr:50_Cent) 
        ?artist dbo:associatedMusicalWork dbr:40_Dayz_&_40_Nightz .
        BIND(?artist AS ?associatedArtist)
    }
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
701,43,val,Give me the parent of Meritamen and spouse of Ramesses II and parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parentOfMeritamen ?spouseOfRamessesII ?grandchildParent
WHERE {
  # Part 1: Parent of Meritamen
  { 
    ?meritamen dbo:wikiPageID ""Meritamen"" .
    ?meritamen dbo:parent ?parentOfMeritamen .
  }

  UNION

  # Part 2: Spouse of Ramesses II
  {
    ?ramessesII dbo:wikiPageID ""Ramesses_II"" .
    ?ramessesII dbo:spouse ?spouseOfRamessesII .
  }

  UNION

  # Part 3: Parent of the child of the child of Seti I
  {
    ?setiI dbo:wikiPageID ""Seti_I"" .
    ?child1 dbo:parent ?setiI .
    ?grandchild dbo:parent ?child1 .
    ?grandchildParent dbo:parent ?grandchild .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
701,25,val,Give me the parent of Henuttawy (19th dynasty) and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parentOfHenuttawy ?spouseOfMerneptahsFather
WHERE {
  # Part 1: Find the parent of Henuttawy (19th dynasty)
  ?henuttawy dbo:name ""Henuttawy""@en .
  ?henuttawy dbo:era ""19th Dynasty""@en .
  ?henuttawy dbo:parent ?parentOfHenuttawy .

  # Part 2: Find the spouse of Merneptah's father
  ?merneptah dbo:father ?merneptahsFather .
  ?merneptahsFather dbo:spouse ?spouseOfMerneptahsFather .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
547,19,val,Give me the resting place of the child of James Burton (property developer) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childRestingPlaceLabel ?simonCadellRestingPlaceLabel WHERE {
  # Find the child of James Burton and their resting place
  ?jamesBurton a dbo:Person ;
               foaf:name ""James Burton"" .
  ?jamesBurton dbo:child ?child .
  ?child dbo:finalRestingPlace ?childRestingPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  
  # Find the resting place of Simon Cadell
  ?simonCadell a dbo:Person ;
               foaf:name ""Simon Cadell"" .
  ?simonCadell dbo:finalRestingPlace ?simonCadellRestingPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  
  # Return the labels of the resting places
  BIND(STR(?childRestingPlace) AS ?childRestingPlaceLabel)
  BIND(STR(?simonCadellRestingPlace) AS ?simonCadellRestingPlaceLabel)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,21,val,Give me the spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?spouse WHERE {
  { 
    ?person rdfs:label ""Ted Martin McGinley""@en .
    ?person dbo:spouse ?spouse .
    FILTER(LANG(?person) = 'en')
  }
  UNION
  {
    ?person rdfs:label ""Georgeanne Marie Rice""@en .
    ?person dbo:spouse ?spouse .
    FILTER(LANG(?person) = 'en')
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,41,val,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?britishArmy ?napoleonicWars ?regiment
WHERE {
  # Arthur Wellesley, 1st Duke of Wellington
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:commander ?britishArmy .
  
  # British Army during the Napoleonic Wars
  ?britishArmy a dbo:MilitaryUnit ;
               dbo:participatedIn ?napoleonicWars .

  # Napoleonic Wars as an event and military conflict
  ?napoleonicWars a dbo:Event, dbo:MilitaryConflict ;
                  rdfs:label ""Napoleonic_Wars""@en .

  # Specific regiment within the context of the Napoleonic Wars
  OPTIONAL {
    dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) dbo:participatedIn ?napoleonicWars ;
                                                                         a dbo:MilitaryUnit .
  }
}
```",5,7,6,2,3,3,3,71,0,0,13,0,0.0,0
54,19,val,Give me the child of the father of Soe Min Wimala Dewi and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commonLink WHERE {
  # Find Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi a dbo:Person ;
                   dbo:father ?father .

  # Find children of Soe Min Wimala Dewi's father
  ?child dbo:father ?father .

  # Find Thado Minsaw of Prome's parent
  ?thadoMinsawOfProme a dbo:Person ;
                     dbo:parent ?commonLink .

  # Ensure the common link is both a child and a parent as described
  FILTER (?soeMinWimalaDewi = ?child || ?commonLink = ?child)
}
```",3,3,4,2,2,3,3,71,1,31577,0,3.166761669516752e-05,1.0,6.333322777795371e-05
16,36,val,Give me the spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
# Query to get the spouse of Ted McGinley
SELECT ?spouse WHERE {
  ?person dbo:birthName ""Ted McGinley""@en .
  ?person dbo:spouse ?spouse .
}

UNION

# Query to find a person born with the birth name of an Ohio State University alumnus
SELECT DISTINCT ?person WHERE {
  ?alumnus dbp:almaMater <http://dbpedia.org/resource/Ohio_State_University> ;
           dbo:birthName ?birthName .
  ?person dbo:birthName ?birthName .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
820,14,val,Give me the child of the parent of the professional in Actor.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild
WHERE {
  ?actor a dbo:Actor ;
         dbo:occupation dbp:Actor .
  
  ?parent dbo:child ?actor .

  ?parent dbo:child ?grandchild .
}
```",3,3,4,3,1,3,2,20,0,0,354,0,0.0,0
547,20,val,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the actor of ""Enemy at the Door""
SELECT ?actor ?restingPlaceActor WHERE {
  ?film a dbo:Film ;
        dbo:title ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?restingPlaceActor }
}

# Query for James Burton, the Egyptologist
SELECT ?burton ?restingPlaceBurton WHERE {
  ?burton a dbo:Egyptologist ;
          foaf:name ""James Burton""@en .
  OPTIONAL { ?burton dbo:deathPlace ?restingPlaceBurton }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
528,26,val,Give me the war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander ?work WHERE {
  ?war a dbo:War .
  ?war dbo:commander ?commander .
  OPTIONAL { ?commander dbo:work ?work . }
}
```",3,3,4,3,1,3,3,71,0,0,14,0,0.0,0
767,24,val,Give me the reference to  and alma mater of the administration of George K. Nash.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?administrationReference
WHERE {
  VALUES ?nash { dbr:George_K._Nash }
  
  ?nash dbo:almaMater ?almaMater .
  
  OPTIONAL {
    ?adminRelation dbo:employee ?nash ;
                  a dbo:PositionHeldBy .
    ?adminRelation dbo:employer ?administrationReference .
  }
}
```",3,3,4,2,2,3,3,71,0,1,2,0.0,0.0,0
801,34,val,Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
# Query for Lamont Cranston's professional role
SELECT ?profession WHERE {
  dbpedia:Lamont_Cranston dbo:occupation ?profession .
}

# Query for Chris Taylor's associated musical artist
SELECT ?band WHERE {
  dbpedia:Chris_Taylor_(musician) dbo:associatedBand ?band .
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
666,14,val,"Give me the figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v0 . ?v2 <http://dbpedia.org/property/nickname> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?clubLabel ?nickname 
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:sportTeamInLeague ?league .
  OPTIONAL { ?club dbp:nickname ?nickname . }
  FILTER EXISTS { ?league dbo:country dbr:England . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,6,4,3,1,3,2,20,0,0,12,0,0.0,0
492,23,val,Give me the person decedent at the work of the author of French Algeria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  ?book rdf:type dbo:Book .
  ?book rdfs:label ""French Algeria""@en .
  ?book dbo:author ?author .

  OPTIONAL { 
    ?workRelatedToAuthor dbo:decedent ?decedent .
    FILTER(?workRelatedToAuthor = ?book || ?workRelatedToAuthor = ?author)
  }
}
```",3,3,4,3,1,3,3,71,0,0,30,0,0.0,0
747,25,val,Give me the band of the person born as Tracey Elizabeth McSween and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?bandName WHERE {
  VALUES (?birthName) { (""Tracey Elizabeth McSween"" ""Amba Shepherd"") }
  
  # Find the person resource based on their birth name
  ?person dbo:birthName ?birthName .
  
  OPTIONAL {
    ?person dbo:memberOfBand ?band .
    ?band rdfs:label ?bandName .
    FILTER (lang(?bandName) = ""en"")
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,27,val,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institution ?nickname WHERE {
  ?institution a dbo:EducationalOrganization ;
               dbo:location dbr:Northern_Ireland .
  OPTIONAL { ?institution foaf:nick ?nickname . }
  FILTER (lang(?nickname) = 'en')
}
LIMIT 1
```",3,5,4,3,1,3,3,71,0,0,13,0,0.0,0
378,44,val,Give me the war of the commander in Peninsular War and claim to fame of the commander in Great Siege of Gibraltar and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query for the war of the commander in the Peninsular War (Arthur Wellesley)
SELECT ?war WHERE {
  wd:Q3323 dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         rdfs:label ?war .
  FILTER(CONTAINS(LCASE(?war), ""peninsular war""))
}

# Query for the claim to fame of the commander in the Great Siege of Gibraltar (George Augustus Eliott)
SELECT ?achievement WHERE {
  wd:Q1056 dbo:knownFor ?event .
  ?event rdfs:label ?achievement ;
         rdf:type dbo:MilitaryConflict .
  FILTER(CONTAINS(LCASE(?achievement), ""great siege of gibraltar""))
}

# Query for any war associated with Carl Pontus Gahn
SELECT ?war WHERE {
  wd:Q1234567 dbo:participatedIn ?event . # Replace Q1234567 with the correct DBpedia ID for Carl Pontus Gahn if available
  ?event rdf:type dbo:MilitaryConflict ;
         rdfs:label ?war .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
801,30,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of Westside Story (song) and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?song dbo:writer ?person .
  ?person dbo:musicalArtist true .
  ?person dbo:artist true .
  ?song dbr:Westside_Story .
  ?song dbo:producer ?person .
  FILTER (str(?song) = ""40 Dayz & 40 Nightz"")
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
378,20,val,Give me the war of the commander in Peninsular War and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?war
WHERE {
  # For Arthur Wellesley, Duke of Wellington
  VALUES ?wellington { dbr:Arthur_Wellesley,_1st_Duke_of_Wellington }
  
  OPTIONAL {
    ?wellington dbo:participatedIn ?peninsularWar .
    FILTER(?peninsularWar = dbr:Peninsular_War)
  }

  # For Carl Pontus Gahn
  VALUES ?gahn { dbr:C._P._Gahn }
  
  OPTIONAL {
    ?gahn dbo:participatedIn ?war .
  }

  UNION {
    ?wellington dbo:participatedIn ?otherWar .
    FILTER(?otherWar != dbr:Peninsular_War)
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
9,44,val,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of Royal Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nickname ?almaMaterJohnAlderdice ?almaMaterRoyalMedalist WHERE {
  # Find the nickname of Queen's University Belfast
  OPTIONAL { 
    dbr:Queen's_University_Belfast dbo:nickname ?nickname .
  }
  
  # Find John Alderdice's alma mater
  dbr:John_Alderdice dbo:almaMater ?almaMaterJohnAlderdice .

  # Find the awardee of the Royal Medal and their alma mater
  OPTIONAL {
    ?royalMedalist dbo:award ?royalMedal .
    ?royalMedal rdfs:label ""Royal Medal""@en .
    ?royalMedalist dbo:almaMater ?almaMaterRoyalMedalist .
  }

  # Ensure all entities are the same
  FILTER (?nickname = ?almaMaterJohnAlderdice && ?almaMaterJohnAlderdice = ?almaMaterRoyalMedalist)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
339,15,val,Give me the father of Princess Elizabeth of Greece and Denmark and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
# Step 1: Find Frederick VIII's predecessor
SELECT ?predecessor WHERE {
  ?frederickVIII dbo:successorOf ?predecessor .
  FILTER (str(?frederickVIII) = ""Frederick_VIII_of_Denmark"")
}

# Step 2: Find the child of the predecessor and then their child
SELECT ?grandchild WHERE {
  # Assuming we have found the predecessor in step 1, replace <predecessor> with actual URI
  ?child dbo:childOf ?predecessor .
  ?grandchild dbo:childOf ?child .
}

# Step 3: Find Princess Elizabeth's father and check if it matches the grandchild from step 2
SELECT ?father WHERE {
  ?princessElizabeth dbo:father ?father .
  FILTER (str(?princessElizabeth) = ""Princess_Elizabeth_of_Greece_and_Denmark"")
  
  # Assuming we have found the grandchild in step 2, replace <grandchild> with actual URI
  ?father owl:sameAs ?grandchild .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
547,39,val,Give me the resting place of Simon Cadell and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for the resting place of Simon Cadell
SELECT ?restingPlace WHERE {
  ?simonCadell a dbo:Person ;
               foaf:name ""Simon Cadell""@en .
  OPTIONAL { ?simonCadell dbo:finalBurialPlace ?restingPlace . }
}

UNION

# Query for the resting place of the awardee of Gerald Graham
SELECT ?awardeeRestingPlace WHERE {
  ?geraldGraham a dbo:Person ;
                foaf:name ""Gerald Graham""@en .
  OPTIONAL { ?awardEvent dbo:recipient ?awardee ;
                        dbo:givenBy ?geraldGraham . }
  OPTIONAL { ?awardee dbo:finalBurialPlace ?awardeeRestingPlace . }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
528,36,val,Give me the war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?force
WHERE {
  # Find wars associated with Irene Morales
  OPTIONAL {
    ?person rdfs:label ""Irene Morales""@en .
    ?person dbo:militaryConflict ?war .
  }
  
  # Find the force associated with Narciso Campero by birth name
  OPTIONAL {
    ?narciso dbr:Narciso_Campero ;
             dbo:birthName ?birthName .
    ?narciso dbo:memberOf ?force .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
617,24,val,Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?child dbo:parentOf <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> .
  ?antiochus dbo:child ?child .
  FILTER(STRSTARTS(STR(?antiochus), ""http://dbpedia.org/resource/Antiochus_III_the_Great""))
  ?child dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
339,13,val,Give me the child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild
WHERE {
  ?frederickVIII dbo:predecessor ?predecessor .
  FILTER (str(?frederickVIII) = ""Frederick_VIII_of_Denmark"")

  OPTIONAL { ?predecessor dbo:child ?child . }
  OPTIONAL { ?child dbo:child ?grandchild . }

  FILTER (!isBlank(?grandchild))
}
```",3,3,4,3,1,3,2,20,0,0,32,0,0.0,0
16,20,val,Give me the professional in the profession of Satomi Ishihara and spouse of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person;
          foaf:name ""Satomi Ishihara""@en.
  ?satomi dbo:occupation ?profession.

  # Find Ted McGinley's spouse
  ?ted a dbo:Person;
       foaf:name ""Ted McGinley""@en.
  ?ted dbo:spouse ?spouse.

  # Match the profession and spouse
  ?professional a dbo:Person;
                foaf:name ?name;
                dbo:occupation ?profession;
                dbo:spouse ?ted.
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
617,18,val,Give me the spouse of Laodice IV and child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?laodiceIV rdfs:label ""Laodice IV""@en .
  ?laodiceIV dbo:spouse ?spouse .
}
```",3,3,4,1,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
996,14,val,Give me the entity in the award of the native of Palestine (region).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?award
WHERE {
  # Identify the region of Palestine
  dbr:Palestine a dbo:Region .

  # Find persons native to this region
  ?person dbo:nativePlace dbr:Palestine .
  
  # Retrieve awards associated with these persons
  ?person dbo:award ?award .
}
```",3,3,4,3,1,3,2,20,0,0,292,0,0.0,0
391,21,val,Give me the native of the figure known as Hub City and actor of All About the Andersons.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
# Step 1: Find the city known as ""Hub City""
SELECT ?city WHERE {
  ?city dbo:nickname dbr:Hub_City .
}

# Step 2: Identify the actor from ""All About the Andersons""
SELECT DISTINCT ?actor WHERE {
  ?movie dbo:title ""All About the Andersons""@en.
  ?movie dbo:starring ?actor.
}

# Step 3: Find the native city of the identified actor
# Assuming we have found an actor with a URI <http://dbpedia.org/resource/Actor_Name>
SELECT ?nativePlace WHERE {
  <http://dbpedia.org/resource/Actor_Name> dbo:nativePlace ?nativePlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
345,14,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?team WHERE {
  # Get Eiður Guðjohnsen's birth date
  dbr:Eiður_Guðjohnsen dbo:birthDate ?eiðurBirthDate .

  # Find people who are both soccer players and managers
  ?person a dbo:SoccerPlayer ;
          a dbo:Manager ;
          dbo:birthDate ?birthDate .

  # Filter by birth date matching Eiður Guðjohnsen's birth date
  FILTER (?birthDate = ?eiðurBirthDate)

  # Get the team associated with these individuals
  OPTIONAL { ?person dbo:team ?team }
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
9,37,val,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as QUB.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater
WHERE {
  ?person dbo:almaMater ?almaMater .
  ?person dbo:awardReceived dbr:Royal_Medals .
  ?medal dbr:recipient ?person .
  ?person dbo:affiliation dbr:Queen's_University_Belfast .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
492,42,val,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:commanderOf dbr:Franco-Hova_Wars .
  
  # Person deceased in Algiers, Algeria
  ?deathPlace1 dbo:capital dbr:Algeria ;
              a dbo:Settlement .
  ?person dbo:deathPlace ?deathPlace1 .

  # Person deceased at the work location of Joseph C. Satterthwaite (Washington D.C.)
  ?deathPlace2 rdfs:label ""Washington, D.C.""@en ;
               a dbo:City .
  ?person dbo:deathPlace ?deathPlace2 .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
617,28,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of Seleucus II Callinicus and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?child ?royaltyChild WHERE {
  # Laodice IV's spouse
  dbr:Laodice_IV dbo:spouse ?spouse .
  
  # Child of the spouse (who is a royalty)
  ?spouse dbo:child ?child .
  ?child rdf:type dbo:Monarch . # Assuming royalty means being a monarch
  
  # This child must be a parent of Nysa
  ?child dbo:parent dbr:Nysa_(wife_of_Phranaces_I_of_Pontus) .

  # Ensure the lineage traces back to Seleucus II Callinicus
  ?child dbo:parent* dbr:Seleucus_II_Callinicus .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
534,13,val,"Give me the birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childBirthPlace
WHERE {
  ?politician a dbo:Politician ;
              dbo:nativePlace dbr:Essex .
  
  ?politician dbo:child ?child .
  
  ?child a dbo:Politician ;
         dbo:officeHolder ?office .

  ?child dbo:birthPlace ?childBirthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
701,23,val,Give me the parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parent
WHERE {
  ?amunherkhepeshef dbo:spouse ?spouse .
  FILTER (str(?amunherkhepeshef) = ""Amun-her-khepeshef"") .

  ?spouse dbo:child ?child .
  
  ?child dbo:parent ?parent .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
48,12,val,"Give me the band of Carl Falk and band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find the band associated with Carl Falk
SELECT ?band WHERE {
  dbr:C_Falk dbo:associatedBand ?band .
}

UNION

# Query to find the actor in ""Honor Up"" and their musical artist/band
SELECT ?actorBand WHERE {
  # Find actors of the movie ""Honor Up""
  dbr:Honor_Up dbo:starring ?actor .

  # Check if the actor is also a musician or associated with a band
  OPTIONAL { ?actor dbo:musicalArtist ?actorBand . }
  FILTER(?actorBand != """")
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
182,15,val,Give me the entity in Sri Lanka and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?war 
WHERE {
  # Identify Zahran Hashim as the author of the bombings
  dbr:Zahran_Hashim a dbo:Person ;
                    dbo:nationality dbr:Sri_Lanka .

  OPTIONAL {
    # Find any war or conflict associated with him in Sri Lanka
    ?entity dbo:location dbr:Sri_Lanka .
    ?entity dbo:participatedIn ?war .
    FILTER EXISTS { ?war dbo:place dbr:Sri_Lanka }
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
528,23,val,"Give me the war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?eventName WHERE {
  ?event a dbo:Event .
  ?event dbo:location dbr:Chile .
  ?event rdfs:label ?eventName .
  FILTER (CONTAINS(LCASE(?eventName), ""civil war"") || CONTAINS(LCASE(?eventName), ""military conflict""))
}
ORDER BY ?eventName
LIMIT 1
```",3,4,4,3,1,3,3,71,0,0,235,0,0.0,0
429,7,val,Give me the administration of the father of Martha Johnson Patterson and country of 77th Ohio Infantry Regiment.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherAdministration ?regimentCountry
WHERE {
  # Find Martha Johnson Patterson's father and his administration
  OPTIONAL {
    ?martha a dbo:Person ;
           foaf:name ""Martha Johnson Patterson"" .
    ?martha dbo:father ?father .
    ?father dbo:officeHolder ?administration .
    BIND(?administration AS ?fatherAdministration)
  }

  # Find the country of the 77th Ohio Infantry Regiment
  OPTIONAL {
    dbr:77th_Ohio_Infantry_Regiment a dbo:MilitaryUnit ;
                                      dbo:country ?regimentCountry .
  }
}
```",3,3,4,2,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
54,34,val,Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild
WHERE {
    ?thinkhaya dbo:spouse ?spouse .
    ?thinkhaya dbo:child ?child1 .
    ?child1 dbo:child ?grandchild .

    ?ameittaThiriMahaDhammaDewi dbo:predecessor ?predecessor .
    
    FILTER(?grandchild = ?predecessor)
    
    VALUES ?thinkhaya { <http://dbpedia.org/resource/Anawrahta> }  # Assuming Anawrahta is Thinkhaya of Pagan
    VALUES ?ameittaThiriMahaDhammaDewi { <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
959,20,val,"Give me the member of University of Tsukuba and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university ?country
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Yōichi Masuzoe"" ;
          dbo:almaMater ?university ;
          (dbo:nationality|dbo:residence) ?country .
  
  FILTER regex(str(?university), ""University of Tsukuba"", ""i"")
}
```",3,4,4,2,2,3,3,71,0,0,84,0,0.0,0
435,14,val,Give me the territory administered from Reykjavík and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?territory ?timeZoneRegion
WHERE {
  # Part 1: Territory administered from Reykjavík
  dbr:Reykjavík dbo:capital ?country .
  ?country dbo:name ?territory .

  # Part 2: Region of the time zone in Bombali Shebora Chiefdom
  OPTIONAL {
    dbr:Bombali_Shebora_Chowchiefdom dbo:location ?location .
    ?location dbo:timeZone ?timeZone .
    ?timeZone dbo:region ?timeZoneRegion .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
747,21,val,Give me the person born on the birth date of Pavlo Khudzik and band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find Pavlo Khudzik's birth date
  VALUES (?pavloBirthDate) { 
    SELECT ?birthDate WHERE { 
      dbr:Pavlo_Khudzik dbo:birthDate ?birthDate .
    }
  }

  # Find Shèna's band
  VALUES (?shenaBand) {
    SELECT ?band WHERE {
      dbr:Shèna dbo:memberOf ?band .
    }
  }

  # Find persons born on Pavlo Khudzik's birth date and in Shèna's band
  ?person a dbo:Person ;
          dbo:birthDate ?pavloBirthDate ;
          dbo:memberOf ?shenaBand .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
994,29,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of S.A. Slayer and band member of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Meshuggah member with associated bands/groups
SELECT DISTINCT ?meshuggahMember ?associatedBand WHERE {
  ?member dbo:member dbr:Meshuggah .
  ?member dbo:associatedBand ?associatedBand .
  FILTER NOT EXISTS { ?member dbo:member ?otherBand . FILTER(?otherBand != dbr:Meshuggah) }
}

UNION

# Slayer's Tom Araya associated musical artist
SELECT DISTINCT ?slayerMember ?associatedArtist WHERE {
  ?member dbo:member dbr:Slayer ;
          rdfs:label ""Tom Araya""@en .
  ?member dbo:associatedBand ?associatedArtist .
}

UNION

# Don Dokken band member with associated bands/groups
SELECT DISTINCT ?donDokkenMember ?associatedBand WHERE {
  ?member dbo:member dbr:Don_Dokken ;
          dbo:associatedBand ?associatedBand .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
528,29,val,Give me the war of Irene Morales and war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
# Query for wars associated with Irene Morales
SELECT ?war WHERE {
  ?person dbo:name ""Irene Morales""@en .
  ?person a dbo:Person .
  ?person dbo:participatedIn ?war .
}

UNION

# Query for the commander in Battle of La Rinconada de Ate and related wars
SELECT ?commander ?war WHERE {
  ?battle dbo:name ""Battle of La Rinconada de Ate""@en ;
          a dbo:Battle .
  ?battle dbo:commander ?commander .
  ?commander a dbo:Person .
  OPTIONAL { ?commander dbo:participatedIn ?war . }
}

UNION

# Query for the force or role associated with Narciso Campero
SELECT ?force WHERE {
  ?person dbo:name ""Narciso Campero""@en ;
          a dbo:Person .
  ?person dbo:participatedIn ?battle .
  ?battle dbo:commander ?commander .
  OPTIONAL { ?commander dbo:memberOf ?force . }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
617,23,val,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Step 1: Identify Antiochus II Theos
  dbr:Antiochus_II_Theos a dbo:Monarch .

  # Step 2: Find his successor who is also royalty
  dbr:Antiochus_II_Theos dbo:successor ?successor .
  ?successor a dbo:Monarch .

  # Step 3: Identify the child of this successor, ensuring they are royalty
  ?successor dbo:child ?secondChild .
  ?secondChild a dbo:Monarch .

  # Step 4: Find the grandchild (child of the second child)
  ?secondChild dbo:child ?grandchild .
}
```",3,5,4,3,1,3,3,71,0,0,5,0,0.0,0
54,20,val,Give me the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commonEntity WHERE {
  # Find Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:child ?commonEntity .
  VALUES ?thinkhaya { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> }

  # Find Narapati I of Ava's grandchild through a common entity
  ?narapatiIChild dbo:parent ?commonEntity .
  ?narapatiIChild dbo:child ?grandchild .
  VALUES ?narapatiI { <http://dbpedia.org/resource/Narapati_I_of_Ava> }
}
```",3,3,4,2,2,3,3,71,1,4649,0,0.00021505376344086021,1.0,0.00043001505052676843
281,22,val,"Give me the war of the profession, that is a military unit, of Heather Roy and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?unit
WHERE {
  OPTIONAL { 
    # Attempt to find military unit for Heather Roy, though unlikely to have results
    ?heather a dbo:Person ;
             foaf:name ""Heather Roy"" ;
             dbo:militaryUnit ?unit .
  }
  
  # Find military unit for Beauchamp Seymour, 1st Baron Alcester
  dbr:Beauchamp_Seymour,_1st_Baron_Alcester dbo:militaryUnit ?unit .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,40,val,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?office ?battle WHERE {
  ?person a dbo:Person ;
          foaf:name ""Arthur Wellesley""@en ;
          dbo:birthName ""Arthur Wesley""@en .
  
  OPTIONAL { ?person dbo:officeHolder ?office . }
  OPTIONAL { ?person dbp:battleCommanded ?battle . }

  FILTER (CONTAINS(LCASE(STR(?office)), ""kingdom of ireland"") || 
          CONTAINS(LCASE(STR(?battle)), ""battle of leipzig""))
}
```",5,6,6,3,3,3,3,71,0,0,5,0,0.0,0
184,40,val,"Give me the parent of Archduchess Ilona of Austria and child of Archduke Joseph August of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Find the parent of Archduchess Ilona of Austria
SELECT ?parent WHERE {
    ?ilona a dbo:Person ;
           rdfs:label ""Archduchess Ilona of Austria""@en .
    ?ilona dbo:parent ?parent .
}

# Step 2: Find the child of Archduke Joseph August of Austria
SELECT ?child WHERE {
    ?josephAugust a dbo:Person ;
                  rdfs:label ""Archduke Joseph August of Austria""@en .
    ?josephAugust dbo:child ?child .
}

# Step 3: Identify the native of a landmark at elevation 96.0
SELECT ?nativePlace WHERE {
    ?landmark a dbo:PopulatedPlace ;
              dbp:elevation ""96.0""^^xsd:float .
    ?person dbo:nativePlace ?landmark .
    ?person rdfs:label ?nativeLabel .
}

# Step 4: Combine the results to find the common entity
SELECT DISTINCT ?commonEntity WHERE {
    VALUES (?ilonaParent) { (<http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> dbo:parent ?x) }
    VALUES (?josephAugustChild) { (<http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> dbo:child ?y) }
    VALUES (?nativePlacePerson) { (?z dbo:nativePlace ?landmark) FILTER(?landmark.dbp:elevation = ""96.0""^^xsd:float) }

    ?x rdfs:label ?commonEntityLabel .
    ?y rdfs:label ?commonEntityLabel .
    ?z rdfs:label ?commonEntityLabel .

    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(?commonEntityLabel, "" "", ""_""))) AS ?commonEntity)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
378,26,val,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflictName WHERE {
  ?peninsularWar a dbo:PeninsularWar ;
                 dbo:commander dbr:Athur_Wellesley,_1st_Duke_of_Wellington .
  
  ?otherConflict a dbo:MilitaryConflict ;
                dbo:commander dbr:Athur_Wellesley,_1st_Duke_of_Wellington .

  FILTER(?peninsularWar != ?otherConflict)

  ?otherConflict rdfs:label ?conflictName .
}
```",3,4,4,3,1,3,3,71,0,0,118,0,0.0,0
767,35,val,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?alias
WHERE {
  ?person a dbo:Person .
  ?person dbo:administrativePost ?post .
  ?post dbo:location dbr:Green .

  OPTIONAL {
    ?person foaf:name ?name .
    FILTER regex(?name, ""Black Hood"", ""i"") .
    ?person foaf:alias ?alias .
  }
}
```",4,5,5,2,2,3,3,71,0,0,7,0,0.0,0
747,38,val,Give me the band of the writer of Apollo (Hardwell song) and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for the writer of Apollo (Hardwell song)
SELECT ?writer ?band WHERE {
  ?song dbo:lyricsBy ?writer .
  ?song rdfs:label ""Apollo""@en .
  OPTIONAL { ?writer dbo:memberOfBand ?band . }
  FILTER(LANG(?song) = 'en')
} LIMIT 1

UNION

# Query for Tracey Elizabeth McSween
SELECT ?person ?band WHERE {
  ?person foaf:name ""Tracey Elizabeth McSween""@en .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
LIMIT 1
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
360,19,val,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann and native of Johannesburg.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album ?writer ?manfredMannConnection ?personFromJohannesburg
WHERE {
  ?album dbo:writer dbr:Dave_Flett .
  
  OPTIONAL { 
    ?album dbo:member ?bandMember .
    ?bandMember foaf:name ""Manfred Mann""@en .
    BIND(""Yes"" AS ?manfredMannConnection)
  }
  
  OPTIONAL {
    ?person dbo:birthPlace dbr:Johannesburg .
    ?album dbo:writer ?person .
    BIND(?person AS ?personFromJohannesburg)
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
994,42,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
# Step 1: Find the associated musical artist of Red Tide (band)
SELECT ?associatedArtist WHERE {
    ?redTide dbo:associatedBand ?associatedArtist .
    FILTER(STR(?redTide) = ""Red_Tide_(band)"")
}

# Step 2: Find a band member who is also a musical artist and was born as Donald Maynard Dokken
SELECT ?person WHERE {
    ?person dbo:birthName ""Donald Maynard Dokken"" .
    ?person dbo:bandMember ?band .
    FILTER EXISTS { ?band rdf:type dbo:Band }
}

# Step 3: Find the associated musical artist of Watchtower (band)
SELECT ?watchtowerArtist WHERE {
    ?watchtower dbo:associatedBand ?watchtowerArtist .
    FILTER(STR(?watchtower) = ""Watchtower_(band)"")
}

# Step 4: Find the associated musical artist of the entity found in step 3
SELECT ?finalArtist WHERE {
    ?artist dbo:associatedBand ?watchtowerArtist .
    ?watchtower dbo:associatedBand ?watchtowerArtist .
    FILTER(STR(?watchtower) = ""Watchtower_(band)"")
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
251,13,val,"Give me the administration of Forza Italia (2013) and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/place> ?result . },"```sparql
# Query for administration of Forza Italia (2013)
SELECT ?administration WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Forza Italia""@en .
  OPTIONAL { 
    ?party dbo:leader ?person .
    ?person dbo:office ?office .
    ?office dbo:startDate ?start ;
            dbo:endDate ?end .
    FILTER (?start <= ""2013-12-31""^^xsd:date && (?end >= ""2013-01-01""^^xsd:date || NOT EXISTS { ?office dbo:endDate ?end }))
  }
}

UNION

# Query for location of the war involving Louis François Félix Musnier
SELECT ?location WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Louis François Félix Musnier""@en .
  ?person dbo:militaryConflict ?conflict .
  ?conflict dbo:place ?location .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
492,35,val,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
# Query to find person decedent at Algiers (capital of Algeria)
SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ""Algiers""@en .
  FILTER(LANG(?place) = 'en')
}

UNION

# Query to find person decedent at the workplace of Joseph C. Satterthwaite
SELECT ?person WHERE {
  ?satterthwaite dbo:office ?office .
  ?satterthwaite rdfs:label ""Joseph C. Satterthwaite""@en .
  FILTER(LANG(?satterthwaite) = 'en')
  
  ?person a dbo:Person .
  ?person dbo:deathPlace ?place .
  ?place owl:sameAs ?office .
}
```",4,5,5,2,2,3,3,71,0,0,16,0,0.0,0
161,25,val,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Identify the Spanish Civil War event
  dbr:Spanish_Civil_War a dbo:MilitaryConflict .

  # Find Emilio Mola's involvement in the war
  ?militaryForce dbo:participant dbr:Emilio_Mola ;
                dbo:conflict dbr:Spanish_Civil_War .

  # Assume Emilio Mola is the commander of this military force
  ?militaryForce dbo:commander dbr:Emilio_Mola .
  
  # Bind the commander to a variable for clarity
  BIND(dbr:Emilio_Mola AS ?commander)
}
```",3,4,4,2,2,3,3,71,0,0,32,0,0.0,0
801,28,val,Give me the producer of Westside Story (song) and associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?producer ?associatedArtist ?shadowProfessional
WHERE {
  # Producer of ""Westside Story"" (song)
  ?song dbo:title ""Westside Story""@en .
  ?song dbo:producer ?producer .

  # Associated musical artist of Chris Taylor
  ?chris foaf:name ""Chris Taylor (music producer)""@en .
  ?chris dbo:associatedMusicalArtist ?associatedArtist .

  # Professional in the alter ego of The Shadow
  ?shadow foaf:name ""The Shadow""@en .
  ?shadow foaf:name ?realName .
  ?shadow dbo:profession ?shadowProfessional .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
981,11,val,Give me the entity in the region of Time in Indonesia and birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for entity in the region of Time in Indonesia
SELECT ?entity WHERE {
  ?entity rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""time"") && CONTAINS(LCASE(?label), ""indonesia""))
  FILTER(langMatches(lang(?label), ""en""))
}

UNION

# Query for birth place of Novia Indriani Mamuaja
SELECT ?birthPlace WHERE {
  ?person dbo:birthPlace ?birthPlace .
  ?person rdfs:label ""Novia Indriani Mamuaja""@en .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
232,19,val,Give me the child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jon Pertwee"" ;
          dbo:actorInFilm dbr:Dog_Soldiers .
  ?person dbo:child ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
617,13,val,"Give me the child of the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?royalChild WHERE {
  ?mlada dbo:occupation dbr:Abbess .
  FILTER(STRSTARTS(LCASE(?mlada), ""mld"")) . # Assuming Mlada's name starts with 'Mld' in lowercase

  ?parent dbo:child ?mlada .

  ?parent dbo:child ?child .

  OPTIONAL { ?child dbo:royaltyTitle ?title } .
  
  FILTER EXISTS { ?child dbo:royaltyTitle ?title }
}
```",3,4,4,3,1,3,2,20,0,0,4,0,0.0,0
801,33,val,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?work WHERE {
  ?professional a dbo:MusicalArtist ;
                dbo:musicalGenre dbr:Rap_music .
  ?work dbo:producedBy ?professional ;
        (dbo:song|dbo:musicalWork) .
}
```",4,8,5,3,2,3,3,71,0,0,473,0,0.0,0
959,38,val,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of the team of Takashi Sekizuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry
WHERE {
  # Find Yōichi Masuzoe's residence and its native country
  ?yMasuzoe a dbo:Person ;
            foaf:name ""Yōichi Masuzoe""@en .
  
  ?yMasuzoe dbo:residence ?residence .

  ?residence dbo:nativeCountry ?nativeCountry .

  # Find Takashi Sekizuka's management role
  ?tSekizuka a dbo:Person ;
             foaf:name ""Takashi Sekizuka""@en .
  
  ?tSekizuka dbo:managerOf ?managedEntity .

  FILTER (?residence = ?managedEntity)
}
```",4,5,5,2,2,3,3,71,0,0,6,0,0.0,0
959,34,val,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager ?almaMater
WHERE {
  ?manager a dbo:Person ;
           dbo:birthDate ?birthDate ;
           dbo:nationality dbr:Japan ;
           dbo:managerOf dbr:Júbilo_Iwata_2013_season .
  
  FILTER(YEAR(?birthDate) = 1958)
  
  ?manager dbo:almaMater ?almaMater .
  ?almaMater rdf:type dbo:University .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
378,31,val,Give me the war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Query to find wars involving Joaquín Blake
SELECT ?war WHERE {
  ?person rdfs:label ""Joaquín Blake""@en .
  ?person dbo:participatedIn ?war .
}
```

```sparql
# Query to find the birth name of Carl Pontus Gahn
SELECT ?birthName WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:birthName ?birthName .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
959,44,val,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of Yōichi Masuzoe and member of University of Tsukuba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?manager WHERE {
  # Takashi Sekizuka's team manager
  ?team dbo:manager ?manager .
  
  # Yōichi Masuzoe's native country
  dbr:Yōichi_Masuzoe dbo:nationalityOrCitizenship ?country .

  # Manager is from the same country as Yōichi Masuzoe
  ?manager dbo:nationalityOrCitizenship ?country .
  
  # Takashi Sekizuka's team
  ?team dbo:member dbr:Takashi_Sekizuka .

  # University of Tsukuba membership
  ?manager dbo:almaMater dbr:University_of_Tsukuba .
}
```",5,6,6,2,3,3,3,71,0,0,2,0,0.0,0
182,12,val,Give me the war of Mahesh Senanayake and entity in Sri Lanka and war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?war 
WHERE {
  VALUES ?person { 
    dbr:Mahesh_Senanayake 
    dbr:Jagath_Dias 
  }
  
  ?person dbo:participatedIn ?event .
  ?event a dbo:War ; dbp:country ""Sri Lanka"" .
  BIND(?event AS ?war)
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
488,27,val,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration 
WHERE {
  ?tokugawaMasako dbo:spouse ?spouse .
  FILTER (str(?tokugawaMasako) = ""Tokugawa_Masako"") .

  ?spouse dbo:father ?royalFather .
  
  ?royalFather a ?class .
  FILTER (
    ?class IN (dbo:Monarch, dbo:RoyalFamilyMember)
  ) .

  OPTIONAL { ?royalFather dbo:positionHeld ?administration . }
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
232,20,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find Sean Pertwee's notable works (film and military conflict)
  dbr:Sean_Pertwee dbo:claimToFame ?work1 .
  dbr:Sean_Pertwee dbo:claimToFame ?work2 .

  # Ensure one work is a film and the other is a military conflict
  ?work1 rdf:type dbo:Film .
  ?work2 rdf:type dbo:MilitaryConflict .

  # Find actors associated with these works
  ?work1 dbo:actor ?actor .
  ?work2 dbo:actor ?actor .

  # Verify Sean Pertwee's parentage
  dbr:Sean_Pertwee dbo:parent dbr:Jon_Pertwee .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
328,26,val,Give me the commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander
WHERE {
  ?nagy a dbo:Person ;
        dbo:deathPlace dbr:Budapest ;
        dbo:causeOfDeath ?event .
  
  ?event dbo:location dbr:Hungarian_Revolution_of_1956 .

  ?sovietForce dbo:commander ?commander ;
               dbo:participatedIn ?event .
}
```",3,3,4,3,1,3,3,71,0,0,306,0,0.0,0
16,25,val,Give me the professional in Actress and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthName
WHERE {
  ?person rdfs:label ""Gigi Rice""@en .
  ?person dbo:birthName ?birthName .
  ?person rdf:type dbo:Person .
  ?person rdf:type dbo:Actress .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
232,32,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?filmActor ?conflictActor WHERE {
  # Sean Pertwee's films and military conflicts
  VALUES (?sean) { dbr:Sean_Pertwee }
  
  OPTIONAL {
    ?film dbo:actor ?sean .
    ?film dbo:actor ?filmActor .
    FILTER(?filmActor != ?sean)
  }

  OPTIONAL {
    ?conflict dbo:participatedIn ?sean .
    ?conflict dbo:participant ?conflictActor .
    FILTER(?conflictActor != ?sean)
  }
  
  # Sean Pertwee's father
  ?father dbo:birthName ""John Devon Roland Pertwee"" .
  ?father dbo:child ?sean .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
767,42,val,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Entity related to Green as a settlement in administration
  ?greenSettlement dbo:administrativeUnit ?entity .
  ?greenSettlement rdf:type dbo:Settlement .
  FILTER(CONTAINS(LCASE(STR(?greenSettlement)), ""green""))

  # Alter ego of Black Hood
  ?blackHoodAlias dbo:alias ?alterEgo .
  ?alterEgo rdfs:label ?entityLabel .
  FILTER(CONTAINS(LCASE(?entityLabel), ""black hood"") && LCASE(?entityLabel) != ""black hood"")

  # Alma mater of Carl L. Nippert
  dbr:C_L_Nippert dbo:almaMater ?almaMater .
  ?almaMater rdfs:label ?entityLabel .

  # Ensure all conditions point to the same entity
  FILTER(LCASE(?entityLabel) = LCASE(STR(?entity)))
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
747,22,val,Give me the band of the person born as Tracey Elizabeth McSween and person born on 1985-04-29.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  # Find the DBpedia resource for Tracey Elizabeth McSween by birth name
  ?person1 dbo:birthName ""Tracey Elizabeth McSween""@en .
  
  # Find the DBpedia resource for a person born on April 29, 1985
  ?person2 dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
  
  # Check if they are associated with the same band
  ?person1 dbo:band ?band .
  ?person2 dbo:band ?band .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,29,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent WHERE {
  ?child dbo:father dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  ?child dbo:mother dbr:Thyra_of_Denmark .
  ?child a dbo:Person .
  ?child dbo:spouse dbr:Victoria_Louise_of_Prussia .

  OPTIONAL { ?child dbo:father dbr:Ernest_Augustus,_Duke_of_Brunswick . }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
659,26,val,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?polishHorse a dbo:Organization ;
               rdfs:label ""Polish Horse""@en .
  
  ?conflict a dbo:MilitaryConflict .

  ?polishHorse dbo:participatedIn ?conflict .
  ?conflict dbo:commander ?commander .
}
```",3,7,4,3,1,3,3,71,0,0,130,0,0.0,0
747,31,val,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of Amba Shepherd.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName ?birthDate
WHERE {
  # Find the decedent's birth date
  ?decedent a dbo:Person ;
            dbo:birthDate ?birthDate .

  # Find the person who is an athlete, soccer player, born in Zolotonosha, and shares the same birth date as the decedent
  ?person a dbo:Person ;
          dbo:birthDate ?birthDate ;
          dbo:sport dbr:Soccer ;
          dbo:placeOfBirth dbr:Zolotonosha .

  # Ensure the person is associated with ""band of Amba Shepherd""
  ?membership dbo:member ?person .
  ?membership dbo:name dbr:Band_of_Amba_Shepherd .

  # Return the name and birth date of the person
  ?person rdfs:label ?personName .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
701,39,val,"Give me the parent of Henuttawy (19th dynasty) and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent ?spouse WHERE {
  # Step 1: Identify Henuttawy (19th dynasty)
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy (19th dynasty)""@en .
  
  # Step 2: Find Henuttawy's parent
  ?henuttawy dbo:parent ?parent .

  # Step 3: Identify the commander of the Battle of Perire
  ?battle a dbo:MilitaryConflict ;
          rdfs:label ""Battle of Perire""@en .
  ?battle dbo:commander ?commander .

  # Step 4: Determine the father of the commander
  ?commander dbo:parent ?father .

  # Step 5: Find the spouse of the commander's father, ensuring they are royalty
  ?father a dbo:Person ;
          dbo:spouse ?spouse .
  FILTER EXISTS { ?father dbo:royaltyStatus ?status . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
696,15,val,"Give me the landmark at elevation of 50 and birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?memberBirthPlace ?landmarkName WHERE {
    # Find The Boils and its members
    ?band a dbo:MusicalArtist ;
          rdfs:label ""The Boils""@en .
    
    ?member dbo:musicalArtist ?band ;
            dbo:birthPlace ?memberBirthPlace .

    # Find landmarks at elevation 50 meters
    ?landmark a dbo:Landmark ;
              dbo:elevation ""50""^^xsd:float ;
              rdfs:label ?landmarkName .

}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
404,42,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .
}
```",5,6,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
345,13,val,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  # Find Armando Heeb's nicknames
  dbr:Armando_Heeb dbo:nickName ?nickname .

  # Check if the nickname is also a sports club, organization, and soccer club
  OPTIONAL { ?nickname rdf:type dbo:SportsClub . }
  OPTIONAL { ?nickname rdf:type dbo:Organization . }
  OPTIONAL { ?nickname rdf:type dbo:SoccerClub . }

  FILTER (count(?nickname) > 0 && 
          count(?sportsClub) > 0 &&
          count(?organization) > 0 &&
          count(?soccerClub) > 0)
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
492,29,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander
WHERE {
  ?herr a dbo:Person ;
        foaf:name ""Frédéric-Georges Herr""@en ;
        dbo:militaryConflict ?conflict ;
        dbo:deathPlace ?place .

  OPTIONAL { ?conflict dbo:commander ?commander . }

  FILTER (
    ?place = dbr:Algiers OR
    ?place = dbr:French_Algeria
  )
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
184,29,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of Géza von Habsburg and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Find the child (first generation) of Archduke Joseph Karl of Austria
  ?child dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  
  # Find the grandchild (second generation)
  ?grandchild dbo:parent ?child .

  # Check if this grandchild is a parent of both Géza von Habsburg and Archduchess Ilona of Austria
  ?grandchild dbo:spouse ?spouse . 
  ?géza dbo:parent ?grandchild .
  ?ilona dbo:parent ?grandchild .

  # Filter to ensure the correct individuals are matched
  FILTER(?géza = dbr:Géza_von_Habsburg && ?ilona = dbr:Archduchess_Ilona_of_Austria)
}
```",4,4,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
9,21,val,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of Northern Ireland Forum.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName WHERE {
  ?person a dbo:Person ;
          foaf:name ?personName .
  ?person dbo:almaMater dbr:Queen's_University_Belfast .
  ?person dbo:occupation dbr:Municipal_government_official ; # Assuming the mayor is categorized under municipal government officials
         dbo:officeHolderOf dbr:Northern_Ireland_Forum .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
778,11,val,Give me the author of Chroot and entity in the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
# Query to get the author of Chroot
SELECT ?author WHERE {
  ?book a dbo:Book ;
        rdfs:label ""Chroot""@en .
  ?book dbo:author ?author .
}

UNION

# Query to get the entity in the award of Ralph L. Brinster
SELECT ?awardEntity WHERE {
  ?person foaf:name ""Ralph L. Brinster""@en ;
          dbo:award ?award .
  ?award dbo:recipient ?person ;
         ?property ?awardEntity .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
16,40,val,Give me the professional in Actress and spouse of the person born as the birth name of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?spouse WHERE {
  # Find Ted McGinley by birth name and his spouse
  { 
    ?person1 dbo:birthName ""Ted McGinley""@en .
    ?person1 dbo:spouse ?spouse .
  }
  
  UNION
  
  # Find Georgeanne Marie Rice by birth name and her spouse
  {
    ?person2 dbo:birthName ""Georgeanne Marie Rice""@en .
    ?person2 dbo:spouse ?spouse .
  }

  # Check if the spouse is an actress
  ?spouse rdf:type dbo:Actress .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,22,val,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query for band members associated with Donald Maynard Dokken in the band Dokken
SELECT ?member WHERE {
  ?dokken dbo:bandMember ?member .
  ?dokken foaf:name ""Dokken"" .
  ?person dbo:birthName ""Donald Maynard Dokken"" ;
          dbo:associatedBand ?dokken .
}

UNION

# Query for band members of Slayer
SELECT ?slayerMember WHERE {
  ?slayer dbo:bandMember ?slayerMember .
  ?slayer foaf:name ""Slayer"" .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,39,val,"Give me the commander in Battle of Leipzig and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForceSize
WHERE {
  ?battle a dbo:SocietalEvent ;
         a dbo:Event ;
         a dbo:MilitaryConflict ;
         rdfs:label ""Battle of Leipzig""@en .
  
  ?battle dbo:commander ?commander ;
          dbo:militaryForceSize ?militaryForceSize .

  OPTIONAL { ?battle dbo:reference dbr:Rutger_Jan_Schimmelpenninck . }
}
```",4,7,5,3,2,3,3,71,0,0,6,0,0.0,0
959,36,val,"Give me the member of University of Tsukuba and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager
WHERE {
    ?person dbo:almaMater dbr:University_of_Tsukuba .
    ?person dbo:manager ?teamManager .
    ?teamManager dbo:managedTeam dbr:1998_Kashima_Antlers_season .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
92,34,val,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of Joseph Michael.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMemberName WHERE {
  # Find the band associated with the film ""Nevermore"" (2006)
  dbr:Nevermore_(film) dbo:associatedBand dbr:Nevermore_(band) .
  
  # Identify members of this band
  ?member dbo:memberOf dbr:Nevermore_(band) .

  # Check if any member is also an artist and associated with Joseph Michael
  ?member a dbo:Artist ;
          rdfs:label ?bandMemberName .
  
  OPTIONAL {
    ?joseph dbo:memberOf dbr:Nevermore_(band) .
    FILTER (str(?joseph) = ""Joseph_Michael"") 
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
701,30,val,Give me the parent of Meritamen and spouse of the father of Merneptah and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?meritamenParent ?merneptahFatherSpouse ?henuttawyParent
WHERE {
  # Find the parent of Meritamen
  ?meritamen dbo:parent ?meritamenParent .
  
  # Find Merneptah's father and his spouse
  ?merneptah dbo:child ?merneptahFather .
  ?merneptahFather dbo:spouse ?merneptahFatherSpouse .

  # Find the parent of Henuttawy (19th dynasty)
  ?henuttawy dbo:parent ?henuttawyParent ;
             dbo:birthPlace ?place .
  FILTER EXISTS { 
    ?place dbo:wikiPageRedirects dbpedia-en:19th_Dynasty_of_Egypt
  }
  
  # Ensure the entities are correctly identified
  VALUES ?meritamen { <http://dbpedia.org/resource/Meritamen> }
  VALUES ?merneptah { <http://dbpedia.org/resource/Merenptah> }
  VALUES ?henuttawy { <http://dbpedia.org/resource/Henuttawy> }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
488,37,val,"Give me the administration of Emperor Go-Yōzei and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?deathPlace
WHERE {
  # Step 1: Identify Matsudaira Tadamasa
  VALUES (?matsudaira) { dbr:Matsudaira_Tadamasa }

  # Step 2: Find the father of Matsudaira Tadamasa
  ?matsudaira dbo:father ?father .

  # Step 3: Determine the office held by his father
  ?father dbo:officeHolder ?officeHolder .

  # Step 4: Identify the politician father of this office holder
  ?officeHolder dbo:father ?politicianFather .

  # Step 5: Find the death place of this politician
  ?politicianFather dbo:deathPlace ?deathPlace .

  # Step 6: Administration of Emperor Go-Yōzei
  VALUES (?emperor) { dbr:Emperor_Go-Yōzei }
  ?emperor dbo:administration ?administration .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
92,32,val,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nevermoreMember ?associatedArtist
WHERE {
  # Find members of Nevermore who are artists
  ?member rdf:type dbo:Person ;
          dbo:bandMember dbp:Nevermore ;
          rdf:type dbo:Artist .
  
  # Find associated musical artists for Jim Sheppard
  ?sheppard rdf:type dbo:Person ;
            foaf:name ""Jim Sheppard""@en ;
            rdf:type dbo:Artist .

  OPTIONAL {
    ?association dbo:musicalArtist ?associatedArtist .
    FILTER (?association IN (VALUES ?member) || ?association = ?sheppard)
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
528,39,val,Give me the war of Orozimbo Barbosa and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?narcisoBirthName ?war WHERE {
  # Find Narciso Campero's birth name
  dbr:Narciso_Campero dbo:birthName ?narcisoBirthName .
  
  # Find Orozimbo Barbosa and the war he was involved in
  OPTIONAL { 
    ?orozimbo dbo:participatedIn ?war .
    FILTER(?orozimbo = dbr:Orozimbo_Barbosa)
  }
}
```",4,4,5,3,2,3,3,71,0,1,2,0.0,0.0,0
534,15,val,"Give me the headquarter of Royal Dublin Society and birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceOfChild ?headquarters WHERE {
  # Step 1: Find a politician from Essex
  ?politician dbo:nationality dbr:Essex ;
             rdf:type dbo:Politician .

  # Step 2: Check if this politician has a child who is also a politician or office holder
  ?child dbo:parent ?politician ;
         rdf:type dbo:Politician ; # Assuming office holders are categorized under Politician

  # Step 3: Get the birthplace of this child
  ?child dbo:birthPlace ?birthPlaceOfChild .

  # Step 4: Find the headquarters of Royal Dublin Society
  dbr:Royal_Dublin_Society dbo:headquarters ?headquarters .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
701,34,val,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parentAmunHerkhepeshefSpouse ?parentRamessesIIISpouse
WHERE {
  # Find Amun-her-khepeshef's spouse
  ?amunHerKhepeshef a dbo:Person ;
                   foaf:name ""Amun-her-khepeshef""@en .
  
  ?spouse1 dbo:spouse ?amunHerKhepeshef .

  # Find the child of Amun-her-khepeshef's spouse
  ?child1 dbo:parent ?spouse1 ;
         a dbo:Person .

  # Find the parent of this child (should be Amun-her-khepeshef's spouse)
  ?parentAmunHerkhepeshefSpouse dbo:child ?child1 .
  
  # Find Ramesses II
  ?ramessesII a dbo:Person ;
              foaf:name ""Ramesses II""@en .

  # Find the spouse of Ramesses II
  ?spouse2 dbo:spouse ?ramessesII .

  # Find the child of Ramesses II's spouse
  ?child2 dbo:parent ?spouse2 ;
         a dbo:Person .

  # Find the parent of this child (should be Ramesses II's spouse)
  ?parentRamessesIIISpouse dbo:child ?child2 .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
747,29,val,Give me the band of the writer of Apollo (Hardwell song) and person born on 1985-04-29 and band of Shèna.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . }","```sparql
# Query for the band of the writer of ""Apollo"" by Hardwell
SELECT DISTINCT ?writerBand WHERE {
  ?song dbo:title ""Apollo""@en .
  ?song dbo:lyricist ?writer .
  ?writer dbo:bandMember ?writerBand .
  FILTER EXISTS { ?song dbo:artist <http://dbpedia.org/resource/Hardwell> }
}

UNION

# Query for the band of a person born on 1985-04-29
SELECT DISTINCT ?personBand WHERE {
  ?person dbo:birthDate ""1985-04-29""^^xsd:date .
  ?person dbo:bandMember ?personBand .
}

UNION

# Query for Shèna's band
SELECT DISTINCT ?shenaBand WHERE {
  <http://dbpedia.org/resource/Shèna> dbo:bandMember ?shenaBand .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
179,14,val,Give me the parent of the child of the parent of Vajiralongkorn.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandParent
WHERE {
  ?vajiralongkorn dbo:parent ?parent .
  ?parent dbo:child ?vajiralongkorn .
  ?vajiralongkorn dbo:parent ?grandChild .
  ?grandChild dbo:parent ?grandParent .
}
```",3,3,4,3,1,3,2,20,2,8364,1,0.0002390628735357399,0.6666666666666666,0.0004779543553590632
9,32,val,"Give me the alma mater of the awardee of Royal Medal and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeAlmaMater ?mayorAlmaMater WHERE {
  # Find the awardee of the Royal Medal and their alma mater
  ?person dbo:award dbr:Royal_Medal .
  ?person dbo:almaMater ?awardeeAlmaMater .

  # Find a politician who was mayor in the Northern Ireland Forum and their alma mater
  ?mayor rdf:type dbo:Politician ;
         dbo:positionHeld dbr:Northern_Ireland_Forum_Mayor .
  ?mayor dbo:almaMater ?mayorAlmaMater .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
747,44,val,Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of Apollo (Hardwell song) and person born on 1985-04-29.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person1Band ?writerBand ?person3Band WHERE {
  # Tracey Elizabeth McSween's band
  ?person1 dbo:birthName ""Tracey Elizabeth McSween""@en .
  OPTIONAL { ?person1 dbo:band ?person1Band . }

  # Writer of Apollo (Hardwell song)
  dbr:Apollo_(Hardwell_song)#Songwriters ?writer .
  ?writer dbo:band ?writerBand .

  # Person born on 1985-04-29
  ?person3 dbo:birthDate ""1985-04-29""^^xsd:date .
  OPTIONAL { ?person3 dbo:band ?person3Band . }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
528,33,val,Give me the war of Irene Morales and war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warOfIreneMorales ?warOfCommander ?date
WHERE {
    ?person rdfs:label ""Irene Morales""@en .
    ?work dbo:author ?person ;
          dbo:datePublished ?date ;
          dbo:title ?title .

    FILTER (regex(?date, ""^-01-09"", ""i"")) .

    OPTIONAL { ?work dbo:subject ?warOfIreneMorales . }
    OPTIONAL { ?work dbo:subject ?warOfCommander . }

    ?commander rdfs:label ?commanderLabel .
    ?work dbo:subject ?commander .

    FILTER (regex(?title, ""war"", ""i"") || regex(?commanderLabel, ""commander"", ""i""))
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
915,13,val,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?resident
WHERE {
  ?director dbo:directed dbr:Pipe_Dreams_(1976_film) .
  ?director dbo:birthPlace ?birthplace .
  
  FILTER EXISTS { ?birthplace a dbo:Settlement } .

  ?birthplace dbp:resident ?resident .
}
```",3,4,4,3,1,3,2,20,0,0,15,0,0.0,0
498,7,val,"Give me the band of Will Rahmer and band of the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
# Query to find the band of Will Rahmer
SELECT ?band WHERE {
  dbpedia:Will_Rahmer dbo:band ?band .
}

# Query to find the organization that is also a band for Solace of Requiem
SELECT DISTINCT ?organizationBand WHERE {
  ?organizationBand rdf:type dbo:Organization ;
                    rdf:type dbo:Band ;
                    rdfs:label ""Solace of Requiem""@en .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
392,15,val,"Give me the entity in the region, that is a country, of Central European Time and province of Schio.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?city rdf:type dbo:City .
  ?city dbo:country ?country .
  ?country rdf:type dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
  FILTER (str(?city) = ""Schio"") 
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
534,14,val,"Give me the headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://dbpedia.org/ontology/owner> ?v0 . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters WHERE {
  ?venue a dbo:SportsVenue ;
         dbo:event = dbr:2012_Pro12_Grand_Final .
  
  ?venue dbo:location ?owner .

  ?owner dbo:headquarters ?headquarters .
}
```",3,5,4,3,1,3,2,20,0,0,3,0,0.0,0
488,38,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
# Query to find the death place of Yūki Hideyasu's father
SELECT ?fatherName ?deathPlace WHERE {
  ?yuki dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER(CONTAINS(LCASE(?fatherName), ""yūki hideyasu"") && CONTAINS(LCASE(?fatherName), ""father""))
  OPTIONAL { ?father dbo:deathPlace ?deathPlace . }
  FILTER(!isBlank(?deathPlace))
} ORDER BY ?fatherName

# Query to find the administration of Emperor Go-Mizunoo's father
SELECT ?fatherName ?administration WHERE {
  wd:Q1234567 dbo:father ?father .
  ?father rdfs:label ?fatherName .
  OPTIONAL { ?father dbo:reign ?administration . }
  FILTER(!isBlank(?administration))
} ORDER BY ?fatherName
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Emperor Go-Mizunoo.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
55,12,val,Give me the band member of Guns N' Roses and band member of Metallica and band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?member ?metallicaBand ?gunsNRosesBand WHERE {
  # Find members of both Metallica and Guns N' Roses
  ?member dbo:bandMember ?metallicaBand .
  FILTER (str(?metallicaBand) = ""Metallica"")
  
  ?member dbo:bandMember ?gunsNRosesBand .
  FILTER (str(?gunsNRosesBand) = ""Guns_N%27_Roses"")

  # Find the band associated with Newsted
  OPTIONAL {
    ?newsted dbo:bandMember ?band .
    FILTER (str(?newsted) = ""James_Hetfield"")
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
10,13,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of Luke Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicalArtist WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Matt Colton""@en .
  FILTER NOT EXISTS { ?person dbo:birthDate ?date } # Ensure it's the artist, not another person with the same name
  ?person dbo:bandMemberOf dbr:Luke_Vibert .
  ?person dbo:musicalArtist ?musicalArtist .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
77,14,val,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?administrativeUnit WHERE {
  ?mayor a dbo:Mayor ;
         dbo:administrativeUnit ?administrativeUnit .
  ?administrativeUnit dbo:location dbr:Warsaw .
  FILTER EXISTS { ?administrativeUnit a dbo:Organization }
}
```",3,4,4,3,1,3,2,20,0,0,40,0,0.0,0
963,12,val,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci and entity in Serbia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?administration
WHERE {
  # Find the city Sremski Karlovci in Serbia
  dbr:Sremski_Karlovci dbo:country dbr:Serbia .
  
  # Identify the ruling political party in Sremski Karlovci
  ?party a dbo:PoliticalParty ;
         dbo:location dbr:Sremski_Karlovci ;
         dbo:isRulingIn dbr:Sremski_Karlovci .

  # Find the administration of that political party
  ?party dbo:administration ?administration .
}
```",3,4,4,2,2,3,2,20,0,0,84,0,0.0,0
528,34,val,"Give me the war of the military force of the entity, that is a societal event, in Chile and force of Narciso Campero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?militaryForce
WHERE {
  # Find wars in Chile
  ?war a dbo:War ;
       dbo:location dbr:Chile .
  
  # Find Narciso Campero's military force
  dbr:Narciso_Campero dbo:militaryForce ?militaryForce .

  # Optional: Link the war to the military force if needed
  OPTIONAL { ?war dbo:participatingMilitaryForce ?militaryForce }
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
404,33,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia and her spouse
  ?princess a dbo:Person ;
           rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  ?princess dbo:spouse ?spouse .

  # Step 2: Find their child who is royalty
  ?child dbo:parent ?princess ;
         dbo:parent ?spouse ;
         a ?royaltyClass .

  FILTER EXISTS { ?royaltyClass rdfs:subClassOf* dbo:RoyalFamilyMember }

  # Step 3: Determine the parent of this royal child (who is royalty)
  ?parentChild dbo:child ?child .
  
  # Step 4: Identify Prince George William of Hanover's parent who is royalty
  ?prince a dbo:Person ;
          rdfs:label ""Prince George William of Hanover""@en .

  ?princeParent dbo:child ?prince .
  
  # Ensure the parent is royalty
  FILTER EXISTS { ?parentChild a ?royaltyClass }

  # Step 5: Return the spouse of Princess Victoria Louise of Prussia
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
391,40,val,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of The Departed and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
# Step 1: Identify the nickname for Jackson, Tennessee
SELECT ?nickname WHERE {
    ?city rdfs:label ""Jackson""@en .
    ?city dbo:nickname ?nickname .
}

# Step 2: Find the actor common to both films
SELECT DISTINCT ?actor WHERE {
    ?film1 dbo:title ""The Departed""@en ;
           dbo:starring ?actor .
    ?film2 dbo:title ""All About the Andersons""@en ;
           dbo:starring ?actor .
}

# Step 3: Retrieve the birthplace of this actor
SELECT ?birthPlace WHERE {
    ?actor a dbo:Actor ;
           foaf:name ?name .
    FILTER(?name IN (VALUES ?name { 
        # Replace with actual name found from step 2
    }))
    ?actor dbo:birthPlace ?birthPlace .
}
```

Note: The query assumes that the nickname and actor's name are known or can be determined through additional queries. You would replace placeholders with actual values obtained from intermediate results.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
328,41,val,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of Ferenc Szálasi and leader of People's Commissariat of Defense of the Soviet Union.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .
  
  OPTIONAL { ?person dbo:award ?award . }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
281,23,val,Give me the war of the awardee of the award of Jonathon Band.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war
WHERE {
  # Identify Jonathon Band
  ?jonathanBand a dbo:Person ;
                foaf:name ""Jonathon Band""@en .

  # Find an award received by Jonathon Band
  ?award dbo:recipient ?jonathanBand .

  # Find other recipients of the same award
  ?otherRecipient dbo:recipient ?award .

  # Check if these recipients participated in any wars
  ?war a dbo:MilitaryConflict ;
       dbo:participant ?otherRecipient .
}
```",3,3,4,3,1,3,3,71,0,0,450,0,0.0,0
963,13,val,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  # Find the time zone of Herzegovina-Neretva Canton
  dbr:Herzegovina-Neretva_Canton dbo:timeZone ?timezone .
  
  # Find countries that have this time zone
  ?country dbo:timeZone ?timezone .
  
  # Ensure the entity is a country
  ?country rdf:type dbo:Country .
}
```",3,4,4,3,1,3,2,20,29,65,173232,0.30851063829787234,0.00016737754024275515,0.00033457356292001964
701,18,val,Give me the spouse of Ramesses II and parent of Henuttawy (19th dynasty) and parent of Meritamen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?ramesses2 rdf:type dbo:Person ;
             rdfs:label ""Ramesses II""@en .
  
  ?ramesses2 dbo:spouse ?spouse .

  ?henuttawy dbo:parent ?spouse ;
            rdfs:label ""Henuttawy (19th dynasty)""@en .
  
  ?meritamen dbo:parent ?spouse ;
             rdfs:label ""Meritamen""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
9,42,val,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Find the mayor associated with Northern Ireland Forum
  ?mayor a dbo:Mayor ;
         dbo:office ?office .
  
  FILTER(CONTAINS(LCASE(STR(?office)), ""northern ireland forum"")).

  # Get their alma mater
  ?mayor dbo:almaMater ?almaMater .

  # Verify Queen's University Belfast nickname (if needed)
  OPTIONAL {
    ?university a dbo:EducationalInstitution ;
               rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""queen's university belfast"") && CONTAINS(LCASE(?label), ""nickname"")) .
  }

  # Find Allen Hill and his alma mater
  ?allenHill a dbo:Scientist ;
             foaf:name ""Allen Hill"" ;
             dbo:almaMater ?hillAlmaMater .

  FILTER(?almaMater = ?hillAlmaMater)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
547,32,val,Give me the resting place of the actor of Enemy at the Door and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
# Query for the actor of ""Enemy at the Door""
SELECT ?actor ?restingPlace WHERE {
  ?film rdf:type dbo:Film .
  ?film rdfs:label ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
} LIMIT 1

UNION

# Query for the child of James Burton (property developer)
SELECT ?child ?restingPlace WHERE {
  ?person rdf:type dbo:Person ;
          rdfs:label ""James Burton""@en ;
          foaf:surname ""Burton"" .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""property developer"")).
  ?person dbo:child ?child .
  OPTIONAL { ?child dbo:deathPlace ?restingPlace . }
} LIMIT 1
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
179,15,val,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of Ubol Ratana.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName WHERE {
  ?ubolRatana a dbo:Person ;
              dbo:parent dbr:Nakkhatra_Mangala .
  
  ?person dbo:child ?ubolRatana ;
          dbo:birthName ?birthName .

  FILTER EXISTS { ?person dbo:royalty ?x } # Assuming there's a property indicating royalty
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
184,32,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity WHERE {
  # Step 1: Find Archduke Joseph Karl's children
  ?child1 dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  
  # Step 2: Find the child of one of his children (grandchild)
  ?grandchild dbo:parent ?child1 .

  # Step 3: Identify someone native to Budapest
  ?budaPerson dbo:nativePlace dbr:Budapest .

  # Step 4: Find the parent of this person
  ?parentOfBudaPerson dbo:child ?budaPerson .

  # Step 5: Look for a common entity between grandchild's child and parent of native to Budapest
  ?commonEntity dbo:child ?grandchild .
  ?commonEntity dbo:parent ?budaPerson .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
996,11,val,Give me the force of the awardee of 1778.0 and entity in France.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force WHERE {
  ?awardee dbo:awardYear ""1778"" .
  ?awardee dbo:nationality dbr:Francois_I_of_France ; # Assuming the nationality is France
           dbo:occupation ?occupation .
  
  OPTIONAL { 
    ?awardee dbo:militaryRank ?force .
  }
  
  FILTER (lang(?awardee->rdfs:label) = ""en"")
}
```",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
915,12,val,"Give me the resident of Springfield, Illinois and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?father a dbo:FictionalCharacter .
  ?father dbo:residence dbr:Springfield,_Illinois .
  ?father dbo:child dbr:Phillip_Spaulding .
  OPTIONAL { ?father dbo:genre dbr:SoapOpera . }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
404,44,val,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Find Ernest Augustus, Duke of Brunswick
  ?ernestAugustus a dbo:Duke ;
                 foaf:name ""Ernest Augustus, Duke of Brunswick""@en .

  # Identify his child who is royalty
  ?child dbo:childOf ?ernestAugustus ;
         dbo:royaltyTitle ?title .

  # Find the parent of this royal child
  ?parent dbo:spouse ?child .

  # Ensure the spouse is connected to Princess Victoria Louise of Prussia
  ?princess dbp:spouse ?parent .
  FILTER (str(?princess) = ""Princess Victoria Louise of Prussia""@en)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
391,27,val,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie ?actor
WHERE {
  ?movie a dbo:Film ;
         a dbo:CreativeWork ;
         a dbo:TelevisionShow .
  
  ?movie dbo:starring ?actor .
}
```",3,6,4,3,1,3,3,71,0,0,7061,0,0.0,0
963,14,val,"Give me the administration of the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/ontology/postalCode> ""21205"" . ?result <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?location ?rulingParty ?administration
WHERE {
  # Step 1: Identify the location using postal code ""21205""
  ?location dbo:postalCode ""21205"" .
  
  # Step 2: Find the ruling political party for this location
  ?rulingParty a dbo:PoliticalParty ;
               dbo:country ?location .

  # Optional: Filter to ensure it's currently in power (if such data is available)
  # This might require additional properties or external knowledge

  # Step 3: Retrieve administration details of the ruling party
  OPTIONAL { ?administration dbo:party ?rulingParty . }
  
  FILTER EXISTS {
    ?rulingParty dbo:country ?location .
  }
}
```",3,4,4,3,1,3,2,20,0,0,86,0,0.0,0
55,16,val,"Give me the band member of Guns N' Roses and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?band 
WHERE {
  # Find members of Guns N' Roses
  ?member dbo:memberOfBand dbr:Guns_N%27_Roses .
  
  # Check if the member is also a member of another band that includes Newsted (Metallica)
  ?member dbo:memberOfBand ?otherBand .
  ?otherBand dbo:formerMember dbr:Jason_Newsted .

  # Return the member and their associated band
  BIND(dbr:Guns_N%27_Roses AS ?band)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
10,16,val,Give me the professional in the birth name of Sharon Kao and associated musical artist of Matt Colton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for Sharon Kao's professional name
SELECT ?professionalName WHERE {
  ?sharonKao a dbo:Person ;
             foaf:name ""Sharon Kao"" .
  OPTIONAL { ?sharonKao dbo:birthName ?birthName . }
  OPTIONAL { ?sharonKao rdfs:label ?professionalName FILTER (lang(?professionalName) = 'en') . }
}

# Query for Matt Colton's associated musical artist
SELECT DISTINCT ?associatedArtist WHERE {
  ?mattColton a dbo:Person ;
              foaf:name ""Matt Colton"" .
  OPTIONAL { ?mattColton dbo:worksFor|dbo:associatedBand ?associatedArtist . }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
547,37,val,Give me the resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
# Query for Alan Cunningham's resting place
SELECT ?restingPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alan Cunningham""@en .
  ?person dbo:finalBurialPlace ?restingPlace .
}

UNION

# Query for the actor of the show with Emily Richard (The Crown)
SELECT ?actorRestingPlace WHERE {
  ?show dbo:title ""The Crown""@en ;
        dbo:starring ?actor .
  ?actor foaf:name ""Claire Foy""@en .
  ?actor dbo:finalBurialPlace ?actorRestingPlace .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
92,31,val,"Give me the associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberArtist WHERE {
  # Find Jim Sheppard's associated band
  ?sheppard a dbo:Person ;
            foaf:name ""Jim Sheppard"" .
  
  ?sheppard dbo:bandMember ?band .

  # Find the film Nevermore (2006)
  ?film a dbo:Film ;
        dbo:title ""Nevermore"" ;
        dbo:releaseDate ?date .
  
  FILTER(YEAR(?date) = 2006)

  # Find band members of this film's associated artist
  ?film dbo:bandMember ?filmBandMember .

  # Check if there is an overlap between the two bands
  ?bandMemberArtist dbo:bandMember ?band ;
                    dbo:bandMember ?filmBandMember .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
356,15,val,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season and team of Mark Briggs.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Step 1: Identify the 2015 Sacramento Republic FC Season
  ?sacramentoSeason a dbo:SoccerClubSeason ;
                   dbo:club dbr:Sacramento_Republic_FC ;
                   dbo:season ""2015""^^xsd:gYear .

  # Step 2: Find its Predecessor
  ?predecessorSeason dbo:successor ?sacramentoSeason .

  # Step 3: Determine the Successor of that Predecessor
  ?successorOfPredecessorSeason dbo:predecessor ?predecessorSeason ;
                                a dbo:SoccerClubSeason .

  # Step 4: Identify Mark Briggs's Team
  ?markBriggsTeam a dbo:SoccerClub ;
                  dbo:player dbr:Mark_Briggs .

  # Ensure the team is related to the successor of the predecessor season
  ?successorOfPredecessorSeason dbo:club ?markBriggsTeam .

  # Step 5: Find a Player in this Season
  ?successorOfPredecessorSeason dbo:player ?player .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
92,23,val,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName WHERE {
  ?band dbr:Nevermore ;
        dbo:bandMember ?member .
  ?member a dbo:MusicArtist ;
          rdfs:label ?memberName .
  FILTER (LANG(?memberName) = ""en"")
}
```",3,4,4,3,1,3,3,71,0,0,12,0,0.0,0
251,17,val,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
# Query to find the administration of the ruling party in Sicily
SELECT ?party ?administration WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Sicily .
  OPTIONAL { ?party dbo:headquarters ?administration . }
  FILTER EXISTS { ?party dbo:organizationType dbr:Organization }
}

# Query to find the death place of Laura Mancinelli
SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Laura Mancinelli""@en .
  ?person dbo:deathPlace ?deathPlace .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
427,33,val,Give me the reference to Partito Popolare Italiano and party of the father of the alumnus of Massachusetts Institute of Technology.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus ?father ?partyAffiliation ?partitoPopolareReference
WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .
  OPTIONAL { ?father dbo:partyAffiliation ?partyAffiliation . }
  
  FILTER EXISTS { 
    ?partyAffiliation rdfs:label ""Partito Popolare Italiano""@en .
  }

  ?partitoPopolareReference rdfs:label ""Partito Popolare Italiano""@en .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
404,36,val,Give me the spouse of Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?father ?child 
WHERE {
  # Step 1: Find the spouse of Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

  # Step 2: Find the father of the spouse
  ?spouse dbo:father ?father .

  # Step 3: Find a child of this father
  ?father dbo:child ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
161,23,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  ?person a dbo:Person ;
          dbo:deathPlace ?place .
  
  FILTER (regex(str(?place), ""Spain"", ""i"") || regex(str(?place), ""Francoist Spain"", ""i""))

  ?conflict a dbo:MilitaryConflict ;
           dbo:militaryForce ?militaryForce .

  ?person dbo:associatedWith ?conflict .
}
```",3,6,4,3,1,3,3,71,0,0,1073,0,0.0,0
617,36,val,Give me the parent of the child of the commander in Battle of Panium and child of Antiochus III the Great.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild ?childOfAntiochus
WHERE {
  # Find the commander in the Battle of Panium
  ?battle dbr:Battle_of_Panium .
  ?battle dbo:commander ?commander .

  # Find the child of this commander
  ?commander dbo:child ?child .

  # Find the parent of this child
  ?child dbo:parent ?parentOfChild .

  # Find the child of Antiochus III the Great
  dbr:Antiochus_III_the_Great dbo:child ?childOfAntiochus .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
54,44,val,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin ;
         a dbo:Royalty, dbo:OfficeHolder .

  # Predecessor of this child
  ?predecessor dbo:successor ?child .

  # Narapati I of Ava's child
  ?narapatiChild dbo:parent dbr:Narapati_I_of_Ava .

  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:parent dbr:Thinkhaya_of_Pagan .

  # The predecessor is related to both children
  FILTER (?predecessor = ?narapatiChild || ?predecessor = ?thinkhayaChild)
}
```",5,7,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
10,18,val,Give me the professional in the birth name of Sharon Kao and band member of Luke Vibert.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find Sharon Kao's birth name
  VALUES (?sharonKao) { dbr:Sharon_Kao }
  
  ?sharonKao dbo:birthName ?birthName .
  
  # Find band members of Luke Vibert
  VALUES (?lukeVibert) { dbr:Luke_Vibert }
  
  ?bandMember dbo:member ?lukeVibert ;
              a dbo:Person .

  # Check if the person with Sharon Kao's birth name is also a band member of Luke Vibert
  FILTER(?birthName = ?person)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
16,37,val,Give me the person born as Georgeanne Marie Rice and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
# Query to find Georgeanne Marie Rice's profession
SELECT ?person ?profession WHERE {
  ?person foaf:name ""Georgeanne Marie Rice""@en .
  OPTIONAL { ?person dbo:occupation ?profession . }
}

# Query to find actors of the TV series ""Unnatural""
SELECT DISTINCT ?actor ?actorName WHERE {
  dbpedia:Unnatural dbo:castMember ?actor .
  ?actor foaf:name ?actorName .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
92,18,val,Give me the band of Joseph Michael and associated musical artist of Jim Sheppard and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
# Query for Joseph Michael's band
SELECT ?band WHERE {
  ?person dbo:birthName ""Joseph Michael""@en .
  ?person dbo:bandMember ?band .
}

UNION

# Query for Jim Sheppard's associated musical artist
SELECT ?artist WHERE {
  ?person foaf:name ""Jim Sheppard""@en .
  ?person dbo:bandMember ?artist .
}

UNION

# Query for a band member of Nevermore
SELECT ?member WHERE {
  ?band rdfs:label ""Nevermore""@en .
  ?band dbo:bandMember ?member .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
915,14,val,"Give me the father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Step 1: Identify Lizzie Spaulding
  ?lizzie a dbo:FictionalCharacter ;
         dbp:soapOperaCharacter ""Lizzie Spaulding"" .

  # Step 2: Find Lizzie's parent
  ?parent a dbo:FictionalCharacter ;
          dbo:child ?lizzie .

  # Step 3: Determine the child of this parent
  ?child a dbo:FictionalCharacter ;
         dbp:soapOperaCharacter ?childName ;
         dbo:child ?parent .

  # Step 4: Identify the father of this child
  ?father a dbo:FictionalCharacter ;
          dbo:spouse ?mother ;
          dbo:child ?child .
}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
303,13,val,"Give me the entity in Panama and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party 
WHERE {
  ?person a dbo:Person ;
          dbo:birthPlace dbr:Panama ;
          rdfs:label ""Manuel Noriega""@en .
  
  OPTIONAL { ?person dbo:politicalParty ?party . }
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
488,33,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of Enomoto Takeaki.",SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceOfGrandfather ?birthPlaceOfEnomotoTakeaki
WHERE {
  # Part 1: Death Place of Matsudaira Tadamasa's Grandfather (Politician)
  ?matsumatsudaira dbo:father ?matsudairafather .
  ?matsudairafather dbo:father ?matsudairagrandfather .
  ?matsudairagrandfather a dbo:Person ;
                       dbo:deathPlace ?deathPlaceOfGrandfather .

  # Ensure the grandfather is a politician
  OPTIONAL { ?matsudairagrandfather dbo:occupation dbr:Politician . }

  FILTER EXISTS { ?matsudairagrandfather dbo:occupation dbr:Politician } 

  # Part 2: Birth Place of Enomoto Takeaki
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceOfEnomotoTakeaki .
}
```",4,6,5,3,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
281,26,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?election dbo:year ""1962"" ;
            dbo:state dbr:New_South_Wales .
  
  ?election dbo:leader ?leader .

  ?leader dbo:birthPlace ?birthPlace .

  ?birthPlace rdf:type dbo:Country ;
              rdfs:label ?country .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
391,25,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?actor
WHERE {
  # Find actor of ""The Departed""
  ?departedActor dbo:starring dbr:The_Departed .
  
  # Find movies where Roz Ryan is involved
  ?movie dbo:starring dbr:Roz_Ryan ;
         a dbo:Film ;
         dbo:work .

  # Ensure the movie also has an actor from ""The Departed""
  ?movie dbo:starring ?departedActor .

  # Get the actors of the movie
  ?movie dbo:starring ?actor .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
994,28,val,Give me the associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of Watchtower (band) and band member of Don Dokken.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?redTideArtist ?watchtowerAssociatedArtist ?donDokkenBandMember
WHERE {
  # Find the associated musical artist of Red Tide
  ?redTide dbr:Red_Tide .
  ?redTide dbo:associatedBand ?redTideArtist .

  # Find the associated musical artist of Watchtower's associated artist
  ?watchtower dbr:Watchtower .
  ?watchtower dbo:associatedBand ?watchtowerAssociatedArtist1 .
  ?watchtowerAssociatedArtist1 dbo:associatedBand ?watchtowerAssociatedArtist .

  # Check if any of these are band members of Don Dokken
  ?donDokkenBandMember dbo:memberOf dbr:Don_Dokken .
  
  FILTER (?redTideArtist = ?watchtowerAssociatedArtist || ?redTideArtist = ?donDokkenBandMember)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
378,27,val,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fame
WHERE {
  ?trigge a dbo:Person ;
          foaf:name ""Thomas Trigge""@en .
  
  ?war a dbo:MilitaryConflict ;
       dbo:commander ?trigge .

  OPTIONAL { 
    ?trigge dbo:claimToFame ?fame .
  }
}
```",3,6,4,3,1,3,3,71,0,0,6,0,0.0,0
182,16,val,Give me the entity in the nationality of Tamara Kunanayakam and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find Tamara Kunanayakam's nationality
  ?tamara a dbo:Person ;
          foaf:name ""Tamara Kunanayakam"" .
  
  OPTIONAL { ?tamara dbo:nationality ?nationality . }
  UNION
  OPTIONAL { ?tamara dbo:birthPlace ?birthPlace .
             ?birthPlace dbo:country ?nationality . }

  # Find the war Mahesh Senanayake participated in
  ?mahesh a dbo:Person ;
          foaf:name ""Mahesh Senanayake"" .
  
  OPTIONAL { ?mahesh dbo:participatedInWar ?war . }
  
  # Match the nationality with the country involved in the war
  ?war dbo:country ?entity .

  FILTER (?nationality = ?entity)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,13,val,"Give me the child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild
WHERE {
  # Step 1: Identify Charles Alexander
  ?charlesAlexander a dbo:Person ;
                   foaf:name ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .

  # Step 2: Find his parent
  ?parent dbo:child ?charlesAlexander .

  # Step 3: Determine the child of this parent
  ?royalChild dbo:child ?parent .

  # Step 4: Identify royalty among these children
  ?royalChild dbp:royalTitle ?title .

  # Step 5: Find the child of this royal individual
  ?grandchild dbo:child ?royalChild .
}
```",3,4,4,3,1,3,2,20,0,0,8,0,0.0,0
492,19,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in Franco-Hova Wars.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Query for Joseph C. Satterthwaite's date of death
SELECT ?deathDate WHERE {
  ?s a dbo:Person ;
     foaf:name ""Joseph C. Satterthwaite""@en .
  OPTIONAL { ?s dbo:deathDate ?deathDate . }
}

# Query for a commander in the Franco-Hova Wars and their date of death
SELECT ?person ?deathDate WHERE {
  ?person a dbo:Person ;
          dbo:occupation ""Commander""@en ;
          dbo:role ""Franco-Hova Wars""@en .
  OPTIONAL { ?person dbo:deathDate ?deathDate . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
696,13,val,"Give me the birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace
WHERE {
  ?theBoils dbo:associatedBand ?associatedArtist .
  FILTER (str(?theBoils) = ""The Boils"") .

  ?associatedArtist rdf:type dbo:Organization ;
                    rdf:type dbo:MusicalGroup ;
                    rdf:type dbo:Band .

  ?member dbo:member ?associatedArtist .
  ?member foaf:birthPlace ?birthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
701,36,val,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of Meritamen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse WHERE {
  ?battle dbo:commander ?commander .
  FILTER (str(?battle) = ""Battle of Perire"") .

  ?father dbo:father ?commander ;
          rdf:type dbo:Monarch . # Assuming royalty is represented by Monarch

  ?meritamen dbo:parent ?father ;
             rdfs:label ""Meritamen""@en .

  ?father dbo:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
328,29,val,Give me the commander in the force of Ferenc Szálasi and awardee of Order of Suvorov and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:awardeeOf dbr:Order_of_Suvorov .
  ?person dbo:leaderOf dbr:People's_Commissariat_of_Defence_of_the_Soviet_Union .
  ?szalasiForce dbo:commander ?person .
  FILTER EXISTS { 
    ?szalasiForce dbo:member dbr:Ferenc_Szálasi .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
404,21,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?person dbo:childOf dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  ?person dbo:spouse ?spouse .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
666,11,val,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season and figure known as The Three Lions.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Manager of Hull City A.F.C. during the 2016–17 season
  ?manager a dbo:SportsManager ;
           dbo:managedTeam dbr:Hull_City_A.FC_2016-17_season .

  # The Three Lions refers to the England national football team
  dbr:The_Three_Lions a dbo:NationalSoccerTeam ;
                      rdfs:label ""England""@en .

  # Find players who have been managers of Hull City and associated with England
  ?player dbo:managerOfTeam ?manager .
  ?player dbo:nationality dbr:England .
}
```",3,4,4,2,2,3,2,20,0,0,2,0,0.0,0
778,13,val,"Give me the entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?person a dbo:Person .
  ?person dbo:country dbr:United_States .
  ?person dbo:award dbr:Wolf_Prize_in_Medicine .
  ?person dbo:award ?award .
  ?award dbo:entity ?entity .
}
```",3,4,4,3,1,3,2,20,0,0,18629,0,0.0,0
161,44,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
# Query for Emilio Mola's commander in a force (event)
SELECT ?commander WHERE {
  ?militaryEvent dbo:commander dbr:Emilio_Mola .
  ?militaryEvent rdf:type dbo:MilitaryConflict .
  ?militaryEvent dbo:commander ?commander .
}

UNION

# Query for Francisco Largo Caballero's societal event and military conflict
SELECT DISTINCT ?event WHERE {
  OPTIONAL { 
    ?societalEvent dbo:participant dbr:Fran%C3%A7ois_Largo_Caballero .
    ?societalEvent rdf:type dbo:SocietalEvent .
    BIND(?societalEvent AS ?event)
  }
  OPTIONAL {
    ?militaryConflict dbo:participant dbr:Fran%C3%A7ois_Largo_Caballero .
    ?militaryConflict rdf:type dbo:MilitaryConflict .
    BIND(?militaryConflict AS ?event)
  }
}

UNION

# Query for military forces involved in the Rif War
SELECT DISTINCT ?force WHERE {
  ?rifWarEvent dbo:participatedIn dbr:Rif_War .
  ?rifWarEvent rdf:type dbo:MilitaryConflict .
  ?rifWarEvent dbo:militaryForce ?force .
}
```",5,8,6,2,3,3,3,71,0,0,11,0,0.0,0
48,14,val,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Step 1: Identify the show Stacey Dash was in
  ?show dbo:castMember dbr:Stacey_Dash .
  
  # Step 2: Find actors of that show who are also musical artists
  ?actor dbo:castMember ?show ;
         a dbo:Actor ;
         dbo:musicalArtist ?musicalArtist .

  # Step 3: Retrieve the band they belong to
  ?musicalArtist dbo:band ?band .
}
```",3,4,4,3,1,3,2,20,0,0,36,0,0.0,0
659,25,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?commanderInLeipzig
WHERE {
  # Rutger Jan Schimmelpenninck's military involvement
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryConflict ?militaryForce .

  # Battle of Leipzig and its commander
  dbr:Battle_of_Leipzig dbo:commander ?commanderInLeipzig .
  
  OPTIONAL {
    ?militaryForce dbo:participatedIn dbr:Battle_of_Leipzig .
  }
}
```",3,6,4,2,2,3,3,71,0,0,6,0,0.0,0
92,42,val,"Give me the band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney and associated musical artist of Jim Sheppard.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMemberArtist ?furneyBand ?sheppardArtist 
WHERE {
  # Find band members of Nevermore who are artists
  ?person dbo:bandMember dbr:Nevermore ;
          a dbo:MusicArtist .
  BIND(?person AS ?bandMemberArtist)

  # Find the band associated with Joseph Michael Furney (Warrel Dane)
  OPTIONAL {
    ?furney foaf:name ""Joseph Michael Furney""@en ;
           dbo:birthName ""Warrel Dane""@en ;
           dbo:member dbr:Nevermore .
    BIND(dbr:Nevermore AS ?furneyBand)
  }

  # Find associated musical artist of Jim Sheppard
  OPTIONAL {
    ?sheppard foaf:name ""Jim Sheppard""@en ;
              dbo:associatedMusicalArtist ?artist .
    BIND(?artist AS ?sheppardArtist)
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
747,32,val,Give me the person born on the birth date of Pavlo Khudzik and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?band 
WHERE {
  # Find Pavlo Khudzik's birth date
  VALUES (?pavloBirthDate) { 
    SELECT ?birthDate WHERE { 
      dbr:Pavlo_Khudzik dbo:birthDate ?birthDate .
    }
  }

  # Find the writer of ""Apollo"" by Hardwell and their band
  ?writer dbo:lyrics ?song .
  ?song rdfs:label ""Apollo (Hardwell song)""@en .
  
  OPTIONAL { 
    ?writer dbo:band ?band .
  }

  # Find a person born on Pavlo Khudzik's birth date
  ?person dbo:birthDate ?pavloBirthDate .

  FILTER(?writer = ?person)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
232,35,val,"Give me the child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  # Identify John Pertwee
  ?john a dbo:Person ;
        foaf:name ""John Pertwee"" ;
        dbo:birthName ""John Devon Roland Pertwee"" .

  # Identify Sylvie Bermann's British settlement residence
  ?sylvie a dbo:Person ;
          dbr:Sylvie_Bermann ;
          dbo:nativePlace ?settlement .
  
  FILTER (STRSTARTS(STR(?settlement), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?settlement a dbo:Settlement . } &&
          EXISTS { ?settlement dbo:country dbr:United_Kingdom . })

  # Find the child of John Pertwee
  ?john dbo:spouse ?sylvie .
  ?child dbo:parent ?john ;
         dbo:parent ?sylvie .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
617,29,val,Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?child dbo:parent dbr:Nysa_(wife_of_Pharaces_I_of_Pontus) .
  ?child dbo:parent dbr:Antiochus_III_the_Great .
  ?child dbo:spouse ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
427,26,val,Give me the party of the father of the alumnus of Massachusetts Institute of Technology.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?fatherPartyAffiliation
WHERE {
  ?alumnus dbo:almaMater dbpedia:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .
  OPTIONAL { ?father dbo:partyAffiliation ?fatherPartyAffiliation . }
}
```",3,3,4,3,1,3,3,71,0,0,7,0,0.0,0
179,13,val,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthName
WHERE {
  ?child dbo:parent dbr:Nakkhatra_Mangala .
  ?child rdf:type ?royaltyType .
  FILTER (
    ?royaltyType IN (dbo:Monarch, dbo:RoyalFamilyMember) # Adjust types as necessary for royalty
  )
  ?child dbo:birthName ?birthName .
}
```",3,4,4,3,1,3,2,20,0,0,1,0,0.0,0
378,28,val,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the person born as Carl Pontus Gahn and war of Joaquín Blake.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?fame ?war
WHERE {
  VALUES (?person ?name) {
    (dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón"")
    (dbr:Carl_Pontus_Gahn ""Carl Pontus Gahn"")
    (dbr:Joaquín_Blake ""Joaquín Blake"")
  }
  
  ?person rdfs:label ?name .
  OPTIONAL { ?person dbo:notableFor ?fame . FILTER(lang(?fame) = 'en') }
  OPTIONAL {
    ?person dbo:participatedInWar ?war .
    ?war rdfs:label ?warLabel .
    FILTER(lang(?warLabel) = 'en')
  }
}
ORDER BY ?name
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
783,11,val,Give me the associated musical artist of the band member of Ofori Amponsah and band member of Ebony Reigns.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?artist WHERE {
  ?artist dbo:bandMember <http://dbpedia.org/resource/Ofori_Amponsah> .
  ?artist dbo:bandMember <http://dbpedia.org/resource/Ebony_Reigns> .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
659,37,val,"Give me the military force of Napoleonic Wars and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?unit ?commander WHERE {
  ?unit a dbo:MilitaryUnit ;
        rdfs:label ""Polish Horse""@en ;
        dbo:participatedIn dbr:Napoleonic_Wars .
  
  OPTIONAL { 
    ?unit dbo:commander ?commander .
  }
}
```",4,8,5,3,2,3,3,71,0,0,29,0,0.0,0
421,15,val,Give me the band member of the awardee of [[#Awards and nominations and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Identify Edo Maajka's DBpedia resource
  dbr:Edo_Maajka a dbo:Person .

  # Find awards or nominations related to Edo Maajka
  OPTIONAL { 
    dbr:Edo_Maajka dbo:award ?award .
    ?award dbo:recipient ?entity .
    
    # Check if the recipient is a band and find its members
    ?entity a dbo:Band ;
            dbo:bandMember ?bandMember .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
487,15,val,Give me the country of the administration of the person born on 1955-01-26 and administration of Phil Scott.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/country> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person1 ?country1 ?person2 ?country2 WHERE {
  # Find the person born on 1955-01-26 and their country of administration
  {
    SELECT ?person1 ?country1 WHERE {
      ?person1 dbo:birthDate ""1955-01-26""^^xsd:date .
      OPTIONAL { ?person1 dbo:governorOf ?region . }
      OPTIONAL { ?region dbo:country ?country1 . }
    } LIMIT 1
  }

  # Find Phil Scott and his country of administration
  {
    SELECT ?person2 ?country2 WHERE {
      ?person2 rdfs:label ""Phil Scott""@en .
      OPTIONAL { ?person2 dbo:governorOf ?region . }
      OPTIONAL { ?region dbo:country ?country2 . }
    } LIMIT 1
  }
}
```",4,4,5,3,2,3,2,20,0,3,1,0.0,0.0,0
404,19,val,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  # Find Prince Ernest Augustus of Hanover born in 1914
  ?person a dbo:Person ;
          dbo:birthDate ?birthDate ;
          rdfs:label ""Prince Ernest Augustus of Hanover""@en .
  
  FILTER (YEAR(?birthDate) = 1914)

  # Retrieve his parents
  OPTIONAL { ?person dbo:father ?parent . }
  OPTIONAL { ?person dbo:mother ?parent . }

  # Check if the parent is married to Princess Victoria Louise of Prussia
  ?parent dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia .

  # Ensure the parent is royalty (e.g., Monarch)
  ?parent a dbo:Monarch .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
747,24,val,Give me the band of the writer of Apollo (Hardwell song) and band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerBand ?shenaBand WHERE {
  # Find the band of the writer of ""Apollo"" by Hardwell
  OPTIONAL {
    ?song dbo:lyricist ?writer .
    ?song rdfs:label ""Apollo""@en .
    FILTER(CONTAINS(LCASE(?song), ""hardwell""))
    ?writer dbo:band ?writerBand .
  }

  # Find the band associated with Shèna
  OPTIONAL {
    dbr:Shèna dbo:band ?shenaBand .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,18,val,Give me the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person dbo:parent ?thadoMinsaw .
  FILTER(STR(?thadoMinsaw) = ""Thado Minsaw of Prome"") .

  ?thinkhaya dbo:child ?person .
  FILTER(STR(?thinkhaya) = ""Thinkhaya of Pagan"") .

  ?ameittaThiri dbo:predecessor ?person .
  FILTER(STR(?ameittaThiri) = ""Ameitta Thiri Maha Dhamma Dewi of Ava"")
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
427,19,val,Give me the party of Giulio Andreotti and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyAffiliation ?partyName WHERE {
    ?person a dbo:Person ;
            foaf:name ""Giulio Andreotti""@en .
    
    OPTIONAL { 
        ?person dbo:partyAffiliation ?partyAffiliation .
        
        ?partyAffiliation rdfs:label ?partyLabel ;
                         dbo:foundingDate ?foundingDate ;
                         dbo:dissolutionDate ?dissolutionDate .
                         
        FILTER (CONTAINS(LCASE(?partyLabel), ""italian people's party"") && 
                (?foundingDate <= ""1994-12-31""^^xsd:date) &&
                (?dissolutionDate >= ""1994-01-01""^^xsd:date || NOT EXISTS { ?partyAffiliation dbo:dissolutionDate . }))
        
        BIND(?partyLabel AS ?partyName)
    }
    
    FILTER (EXISTS { ?person dbo:partyAffiliation ?partyAffiliation })
}
ORDER BY ?partyName
LIMIT 1
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
747,37,val,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and band of Shèna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v3 . },"```sparql
# Query for the band of the writer of works (songs) by Amba Shepherd
SELECT DISTINCT ?band WHERE {
  ?work dbo:writer dbr:Amba_Shepherd .
  ?work a dbo:Songs .
  ?person dbo:musicalBand ?band .
  FILTER(?person = dbr:Amba_Shepherd)
}

UNION

# Query for the band of Shèna
SELECT DISTINCT ?band WHERE {
  ?person dbo:musicalBand ?band .
  FILTER(?person = dbr:Shèna)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
747,36,val,Give me the band of the person born as the persona of Shèna and person born on 1985-04-29.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for Shèna
SELECT ?person ?band WHERE {
  ?person rdfs:label ""Shèna""@en .
  OPTIONAL { ?person dbo:band ?band . }
}

UNION

# Query for the person born on April 29, 1985
SELECT ?person ?band WHERE {
  ?person dbo:birthDate ""1985-04-29""^^xsd:date .
  OPTIONAL { ?person dbo:band ?band . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
10,12,val,Give me the professional in  and associated musical artist of Matt Colton and band member of Luke Vibert.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for Matt Colton's profession
SELECT ?profession WHERE {
  dbpedia:Matt_Colton dbo:occupation ?profession .
}

# Query for Luke Vibert's band membership
SELECT DISTINCT ?band WHERE {
  dbpedia:Luke_Vibert dbo:bandMember ?band .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
528,28,val,Give me the war of the military force of Battle of Pisagua and war of Orozimbo Barbosa and force of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleWar ?barbosaWar ?camperoForce
WHERE {
  # Battle of Pisagua and its associated war
  dbr:Battle_of_Pisagua dbo:participatedIn ?battleWar .
  
  # Orozimbo Barbosa's involvement in wars or battles
  dbr:Orozimbo_Barbosa dbo:participatedIn ?barbosaWar .

  # Narciso Campero and the military force he commanded
  dbr:Narciso_Campero dbo:commander ?camperoForce .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
435,12,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and region of Greenwich Mean Time and territory administered from Reykjavík.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?workOfArticle62SectionIV ?gmtRegion ?administeredTerritory WHERE {
  # Work of Article 62, Section IV of Constitution of Iceland
  OPTIONAL {
    ?constitution dbr:Iceland#Constitution .
    ?constitution dbo:text ?text .
    FILTER(CONTAINS(LCASE(?text), ""article 62 section iv"")) .
    BIND(SUBSTR(?text, STRSTARTS(UCASE(?text), ""ARTICLE 62 SECTION IV""), 1000) AS ?workOfArticle62SectionIV)
  }

  # Region of Greenwich Mean Time
  OPTIONAL {
    ?timeZone dbr:Greenwich_Mean_Time ;
              dbo:region ?gmtRegion .
  }
  
  # Territory administered from Reykjavík
  OPTIONAL {
    ?territory dbo:administrativeCapital dbr:Reykjavík ;
               rdfs:label ?administeredTerritory .
    FILTER(LANG(?administeredTerritory) = ""en"")
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
485,13,val,"Give me the birth place of Thomas Warner (poet) and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?country
WHERE {
  # Identify Thomas Warner (poet) and his birth place
  dbr:Thomas_Warner_(poet) dbo:birthPlace ?birthPlace .

  # Find the region of the birth place that uses Western European Time
  ?region dbo:timeZone ""Western European Time"" .
  ?birthPlace dbo:locatedIn ?region .

  # Identify countries within this time zone
  ?country a dbo:Country ;
           dbo:timeZone ""Western European Time"" .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
487,11,val,Give me the country of the administration of Patricia McCoy and administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . ?v2 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?patriciaCountry ?philCountry
WHERE {
  # Find Patricia McCoy's office and its country
  ?office dbo:incumbent dbr:Patricia_McCoy ;
          dbo:country ?patriciaCountry .

  # Find Phil Scott's office and its country
  ?office2 dbo:incumbent dbr:Phil_Scott ;
           dbo:country ?philCountry .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
959,37,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfCountry1 ?nativeOfCountry2 WHERE {
  # Identify the leader of the 2007 Japanese House of Councillors election
  ?politician a dbo:Politician ;
             dbo:officeHolder dbr:Japanese_House_of_Councillors_election,_2007 .

  # Identify the manager of Júbilo Iwata in 2013
  ?manager a dbo:FootballManager ;
           dbo:managedTeam dbr:Júbilo_Iwata ;
           dbo:managementPeriod ?period .
  
  FILTER (YEAR(?period) = 2013)

  # Find their residences and check if they are countries
  OPTIONAL { ?politician dbo:residence ?residence1 . }
  OPTIONAL { ?manager dbo:residence ?residence2 . }

  # Check if the residence is a country
  OPTIONAL {
    ?residence1 a dbo:Country .
    ?nativeOfCountry1 dbo:nativePlace ?residence1 ;
                     rdfs:label ?nativeLabel1 .
  }
  
  OPTIONAL {
    ?residence2 a dbo:Country .
    ?nativeOfCountry2 dbo:nativePlace ?residence2 ;
                     rdfs:label ?nativeLabel2 .
  }

}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
314,15,val,Give me the commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Query for commander in the Spanish Civil War
SELECT DISTINCT ?commander WHERE {
  ?commander a dbo:Person .
  ?commander dbo:role ""Commander""@en ;
             dbo:participatedIn dbr:Spanish_Civil_War .
}

UNION

# Query for person deceased at the headquarter of House of Sombrerete
SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  ?deathEvent dbo:place dbr:House_of_Sombrerete ;
              dbo:agent ?person ;
              dbo:deathPlace dbr:Headquarters_of_House_of_Sombrerete .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
701,19,val,Give me the parent of the child of Nefertari and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?nefertariChildParent ?henuttawyParent WHERE {
  # Find Nefertari's child
  ?child dbo:parent dbr:Nefertari .
  
  # Get the parent of Nefertari's child (Nefertari's grandchild)
  ?nefertariChildParent dbo:parent ?child .

  # Find Henuttawy's parent
  ?henuttawyParent dbo:parent dbr:Henuttawy_19th_dynasty .
  
  FILTER regex(str(?nefertariChildParent), ""19th dynasty"", ""i"")
  FILTER regex(str(?henuttawyParent), ""19th dynasty"", ""i"")
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,38,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find the movie that is also a work and a television show
  ?movie a dbo:Film ;
         a dbo:Work ;
         a dbo:TelevisionShow .

  # Roz Ryan's role in this movie
  ?role dbo:actor dbr:Roz_Ryan ;
        dbo:starring ?movie .

  # Michael Ballhaus' claim to fame
  dbr:Michael_Ballhaus dbo:claimToFame ?famousWork .

  # Find the actor of the famous work who is also in the movie
  ?role2 dbo:actor ?actor ;
         dbo:starring ?famousWork .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
142,7,val,Give me the birthplace of George Tokoro and entity in the region of Japan Standard Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthplace ?jstRegion
WHERE {
  ?georgeTokoro a dbo:Person ;
                foaf:name ""George Tokoro""@en ;
                dbo:birthPlace ?birthplace .
  
  ?region dbp:timeZone ""Japan Standard Time"" ;
          rdfs:label ?jstRegion .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
696,14,val,Give me the landmark at elevation of the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation
WHERE {
  # Find the Battle of Chishui River
  ?battle dbo:wikiPageRedirects dbr:Battle_of_Chishui_River .
  
  # Identify commanders involved in the battle
  ?battle dbo:commander ?commander .

  # Find awards received by these commanders
  ?commander dbo:awardReceived ?award .

  # Locate landmarks associated with these commanders or the event
  ?landmark dbo:location ?place .
  ?place dbo:wikiPageRedirects ?commander ;
         dbo:wikiPageRedirects ?battle .

  # Get elevation of the landmark
  ?landmark geo:elevation ?elevation .
}
```",3,3,4,3,1,3,2,20,0,0,1731,0,0.0,0
55,17,val,"Give me the band of Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?metallicaMember ?otherBand ?sfSymphonyConnection
WHERE {
  # Jason Newsted's association with Metallica
  dbr:Jason_Newsted dbo:bandMember dbr:Metallica .

  # Find other members of Metallica
  ?metallicaMember dbo:bandMember dbr:Metallica .
  
  # Check if these members are part of another band/group
  ?metallicaMember dbo:bandMember ?otherBand .

  # Check for connection with San Francisco Symphony
  OPTIONAL {
    ?otherBand dbo:performerOf dbr:San_Francisco_Symphony .
  }
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
54,42,val,"Give me the parent of Thado Minsaw of Prome and child of the father of Soe Min Wimala Dewi and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfThadoMinsaw WHERE {
  # Step 1: Find the parent of Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw of Prome""@en .
  ?thadoMinsaw dbo:parent ?parentOfThadoMinsaw .

  # Step 2: Find the father of Soe Min Wimala Dewi
  ?soeMinWimalaDewi a dbo:Person ;
                    rdfs:label ""Soe Min Wimala Dewi""@en .
  ?soeMinWimalaDewi dbo:parent ?fatherOfSoeMinWimalaDewi .

  # Step 3: Find the child of Soe Min Wimala Dewi's father
  ?childOfFather a dbo:Person ;
                 dbo:parent ?fatherOfSoeMinWimalaDewi .

  # Step 4: Find predecessor of Thihapate of Mohnyin's child who is an office holder and royalty
  ?thihapate a dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .
  ?childOfThihapate a dbo:Person ;
                    dbo:predecessor ?childOfFather ;
                    (dbo:officeHolder|a dbo:Royalty) .

  # Step 5: Ensure the parent from step 1 matches the criteria
  FILTER (?parentOfThadoMinsaw = ?childOfFather)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
378,23,val,Give me the war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war
WHERE {
  dbr:Carl_Pontus_Gahn dbo:birthName ""Carl Pontus Gahn"" .
  OPTIONAL { 
    dbr:Carl_Pontus_Gahn dbo:participatedIn ?war .
  }
}
```",3,3,4,3,1,3,3,71,0,0,12,0,0.0,0
360,14,val,"Give me the writer of The Roaring Silence and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
# Query to get the writer of ""The Roaring Silence""
SELECT ?author WHERE {
  ?book dbo:title ""The Roaring Silence""@en .
  ?book dbo:author ?author .
}

# Query to find a native of Winnie Madikizela-Mandela's death place (ensuring it is a settlement)
SELECT DISTINCT ?native WHERE {
  wd:Q1040 dbo:deathPlace ?place .
  ?place rdf:type dbo:PopulatedPlace .
  ?person dbo:nationality ?place ;
          rdf:type dbo:Person .
  FILTER EXISTS { ?place dbo:populationTotal ? } # Ensures it's a populated place
  BIND(?person AS ?native)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
391,34,val,"Give me the actor of All About the Andersons and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the actor in ""All About the Andersons""
  ?movie dbo:title ""All About the Andersons""@en .
  ?movie a dbo:Film .
  ?movie dbo:starring ?actor .

  # Find the nickname of Jackson, Tennessee
  dbr:Jackson,_Tennessee dbo:nickname ?nickname .

  # Find if the actor is native to the city with that nickname
  ?actor dbo:birthPlace ?place .
  ?place rdfs:label ?cityLabel .
  FILTER (CONTAINS(LCASE(?cityLabel), LCASE(STR(?nickname)))) 
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,42,val,Give me the spouse of the person born as Ted Martin McGinley and professional in Actress and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse1 ?spouse2 WHERE {
  # Find the actress born as Ted Martin McGinley
  ?person1 a dbo:Person ;
           dbo:birthName ""Ted Martin McGinley"" ;
           dbo:profession dbo:Actress .
  
  # Get her spouse
  ?person1 dbo:spouse ?spouse1 .

  # Find the person with birth name Gigi Rice
  ?person2 a dbo:Person ;
           dbo:birthName ""Gigi Rice"" .
  
  # Get their spouse
  ?person2 dbo:spouse ?spouse2 .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
314,17,val,Give me the awardee of the award of Sergei Makovetsky and commander in Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Query for finding other awardees of an award received by Sergei Makovetsky
SELECT DISTINCT ?awardee WHERE {
  ?s dbp:award ?award .
  ?s rdfs:label ""Sergei Makovetsky""@en .
  ?otherAwardee dbp:award ?award .
  FILTER(?s != ?otherAwardee)
}

# Query for finding a commander in the Spanish Civil War
SELECT DISTINCT ?commander WHERE {
  ?person dbo:role ?role ;
          dbo:participatedInEvent ?event .
  ?event rdfs:label ""Spanish Civil War""@en .
  FILTER(CONTAINS(LCASE(?role), ""commander""))
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
360,13,val,"Give me the writer of the work, that is an album, of Dave Flett and native of Johannesburg.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album a dbo:Album ;
         dbo:performer dbr:Dave_Flett .
  ?album dbo:creator ?writer .
  ?writer dbo:nativePlace dbr:Johannesburg .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
184,33,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Géza von Habsburg.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonEntity WHERE {
  # Step 1: Identify Archduke Ladislaus Philipp of Austria
  ?ladislaus a dbo:Person ;
             rdfs:label ""Archduke Ladislaus Philipp of Austria""@en .

  # Step 2: Find his parent
  ?parent dbo:child ?ladislaus .

  # Step 3: Determine the child of this parent who is royalty
  ?royaltyChild dbo:parent ?parent ;
                a dbo:Monarch ;  # Assuming Monarch as a class for royalty

  # Step 4: Identify the parent of Géza von Habsburg
  ?gezaParent dbp:child ""Géza von Habsburg""@en .

  # Step 5: Find the common entity satisfying both conditions
  FILTER (?royaltyChild = ?commonEntity)
  FILTER (?commonEntity = ?gezaParent)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
427,32,val,Give me the party of the father of Lamberto Andreotti and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherParty ?partyName
WHERE {
    # Find Lamberto Andreotti's father
    dbr:Lamberto_Andreotti dbo:father ?father .
    
    # Get the political party of Lamberto Andreotti's father
    ?father dbo:partyAffiliation ?fatherParty .

    # Retrieve information about the Italian People's Party (1994)
    OPTIONAL {
        ?party dbr:Italian_People%27s_Party_(1994) rdfs:label ?partyName .
        FILTER(LANG(?partyName) = 'en')
    }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
16,31,val,Give me the spouse of the person born as the birth name of Ted McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ted McGinley"" ;
          dbo:birthName ?birthName .
  FILTER EXISTS { ?person dbo:occupation ?occupation . 
                 VALUES ?occupation { 
                   dbr:Actress 
                 } }
  ?person dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
232,28,val,Give me the native of London and child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child ?actor
WHERE {
  # Find John Pertwee
  ?john a dbo:Person ;
        dbo:birthName ""John Devon Roland Pertwee"" .
  
  # Find his child who is native of London
  ?john dbo:child ?child .
  ?child dbo:nativePlace dbr:London .

  # Find the actor of Dog Soldiers (film)
  ?actor a dbo:Person ;
         dbo:actor dbr:Dog_Soldiers_(film) .
  
  FILTER (?child = ?actor)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
747,33,val,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  ?song dbo:composer ?person .
  ?person dbo:birthDate ?date .
  FILTER (CONTAINS(LCASE(STR(?person)), ""amba shepherd"") && STRDT(?date, xsd:date) && YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
  OPTIONAL { ?person dbo:band ?band }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
959,40,val,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager ?almaMater
WHERE {
  ?manager a dbo:Person ;
           dbo:birthDate ?birthDate ;
           dbo:nationality dbr:Japan ;
           dbo:managerOf dbr:Júbilo_Iwata_2013_season .
  
  FILTER(YEAR(?birthDate) = 1958)
  
  ?manager dbo:almaMater ?almaMater .
  
  ?almaMater a dbo:University .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
378,34,val,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person1 ?war1 ?person2 ?war2 WHERE {
  # Find Carl Pontus Gahn by birth name and associated war
  ?person1 a dbo:Person ;
           foaf:name ""Carl Pontus Gahn""@en .
  OPTIONAL { ?person1 dbo:participatedInWar ?war1 . }

  # Find Louis des Balbes de Balespierre de Crillon, 1st Duke of Mahón by claim to fame and associated war
  ?person2 a dbo:Person ;
           foaf:name ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
  OPTIONAL { ?person2 dbo:participatedInWar ?war2 . }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
485,12,val,Give me the birth place of Thomas Warner (poet) and entity in Nottinghamshire and entity in United Kingdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?nottinghamshireEntity ?ukEntity
WHERE {
  # Find birthplace of Thomas Warner (poet)
  dbr:Thomas_Warner_(poet) dbo:birthPlace ?birthPlace .

  # Find entities related to Nottinghamshire
  ?nottinghamshireEntity a dbo:AdministrativeRegion ;
                        dbo:country dbr:United_Kingdom ;
                        rdfs:label ""Nottinghamshire""@en .
  
  # Find entities related to United Kingdom
  ?ukEntity a dbo:CivicOrganisation ;
            dbo:location dbr:United_Kingdom ;
            rdfs:label ?labelUk .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
767,36,val,"Give me the entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?entityInBadenWuerttemberg
WHERE {
  # Find Matthew Burland's alter ego
  ?person a dbo:Person ;
          foaf:name ""Matthew Burland"" ;
          dbo:alterEgo ?alterEgo .

  # Ensure the alter ego is a fictional character
  ?alterEgo a dbo:FictionalCharacter .

  # Find an entity in Baden-Württemberg related to the alter ego
  ?entityInBadenWuerttemberg dbo:location dbr:Baden-Württemberg ;
                              dbo:relatedTo ?alterEgo .
}
```",4,5,5,3,2,3,3,71,0,0,7,0,0.0,0
959,19,val,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?universityName
WHERE {
  ?eiji dbr:Eiji_Ōtsuka .
  ?eiji dbo:almaMater ?university .
  ?university rdf:type dbo:University .
  ?university dbo:nationality dbr:Japan .
  BIND (STR(?university) AS ?universityName)
}
```",3,7,4,2,2,3,3,71,0,0,84,0,0.0,0
487,13,val,Give me the country of the administration of the person born on 1955-01-26.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/country> ?result . ?v1 <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?countryAdministered WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1955 && MONTH(?date) = 1 && DAY(?date) = 26)
  OPTIONAL { ?person dbo:countryAdministered ?countryAdministered . }
}
```",3,3,4,3,1,3,2,20,0,23,1,0.0,0.0,0
820,15,val,Give me the professional in the award of the author of Understanding Comics and child of Jack Schwartzman.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  ?book dbo:title ""Understanding Comics"" .
  ?book dbo:author ?author .

  ?person foaf:name ?name .
  ?person dbo:childOf ?parent .
  ?parent foaf:name ""Jack Schwartzman""@en .

  FILTER(?author = ?person)

  OPTIONAL { 
    ?award dbo:recipient ?person .
    ?award dbo:profession ?professional .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
827,15,val,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherOfWilliamErnest WHERE {
  # Step 1: Identify William Ernest
  ?williamErnest a dbo:Person ;
                foaf:name ""William Ernest, Grand Duke of Saxe-Weimar-Eisenach""@en .

  # Step 2: Determine His Father
  ?williamErnest dbo:father ?fatherOfWilliamErnest .

  # Step 3: Find Charles Alexander's Parent
  ?charlesAlexander a dbo:Person ;
                   foaf:name ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?charlesAlexander dbo:parent ?parentOfCharlesAlexander .

  # Step 4: Identify Royalty Descendant
  ?royalDescendant dbo:child ?parentOfCharlesAlexander ;
                   a/rdfs:subClassOf* dbo:Monarch .

  # Step 5: Determine the Child of This Royalty
  ?royalDescendantChild dbo:child ?royalDescendant .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
391,26,val,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify Sherry Hormann
  dbr:Sherry_Hormann a dbo:Person ;
                     dbo:spouse ?spouse .

  # Step 2: Find the spouse's claim to fame (notable work)
  ?spouse dbo:notableWork ?work .

  # Step 3: Determine who acted in that work
  ?work dbo:actor ?actor .
}
```",3,4,4,3,1,3,3,71,0,0,20,0,0.0,0
659,19,val,"Give me the commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleCommander ?welshCommander WHERE {
  # Commander in the Battle of Leipzig
  dbr:Battle_of_Leipzig dbo:commander ?battleCommander .
  
  # Commander in the force of Arthur Wellesley, 1st Duke of Wellington
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:commander ?welshCommander .
}
```",3,3,4,2,2,3,3,71,0,0,19,0,0.0,0
617,33,val,"Give me the child of Antiochus III the Great and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Antiochus III the Great
  ?antiochusIII a dbo:Person ;
                foaf:name ""Antiochus III the Great""@en .

  # His child, Antiochus IV
  ?antiochusIV dbo:childOf ?antiochusIII ;
              a dbo:Person ;
              foaf:name ""Antiochus IV""@en .

  # Spouse of Antiochus IV
  ?spouseOfAntiochusIV dbo:spouse ?antiochusIV ;
                      a dbo:Person .

  # Child of Antiochus IV and his spouse (royalty)
  ?child dbr:Antiochus_IV_of_Syria/dbo:spouse ?spouseOfAntiochusIV ;
         dbo:parent ?antiochusIV ;
         a dbo:RoyalFamilyMember .

  # Spouse of this royal child
  ?finalSpouse dbo:spouse ?child .
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
617,12,val,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary and child of Doubravka of Bohemia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandparent WHERE {
  ?richeza dbp:birthName ""Richeza of Poland"" .
  ?richeza dbo:father ?father .
  ?father (dbo:father|dbo:mother) ?grandparent .
  ?grandparent a dbo:Monarch .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
281,29,val,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Step 1: Find wars associated with Beauchamp Seymour, 1st Baron Alcester
SELECT ?war WHERE {
    ?s dbp:wikiPageID ""Beauchamp_Seymour,_1st_Baron_Alcester"" .
    ?s dbo:participatedInWar ?war .
}

# Step 2: Find Bob Heffron's birthplace country
SELECT ?country WHERE {
    ?s dbp:wikiPageID ""Bob_Heffron"" .
    ?s dbo:birthPlace ?bp .
    ?bp a dbo:Country .
    BIND(?bp AS ?country)
}

# Step 3: Find wars involving the New Zealand Army
SELECT ?nzWar WHERE {
    ?nzArmy a dbo:MilitaryUnit ;
            dbp:name ""New Zealand Army"" .
    ?nzArmy dbo:participatedInWar ?nzWar .
}

# Combine results to find common entity
SELECT DISTINCT ?war ?country ?nzWar WHERE {
    # Wars associated with Beauchamp Seymour, 1st Baron Alcester
    ?s dbp:wikiPageID ""Beauchamp_Seymour,_1st_Baron_Alcester"" .
    ?s dbo:participatedInWar ?war .

    # Bob Heffron's birthplace country
    ?b dbp:wikiPageID ""Bob_Heffron"" .
    ?b dbo:birthPlace ?country .
    ?country a dbo:Country .

    # Wars involving the New Zealand Army
    ?nzArmy a dbo:MilitaryUnit ;
            dbp:name ""New Zealand Army"" .
    ?nzArmy dbo:participatedInWar ?nzWar .

    FILTER(?war = ?nzWar)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
959,35,val,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager
WHERE {
  # Takashi Sekizuka's team and its manager
  ?team dbo:manager dbr:Takashi_Sekizuka .
  
  # Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .

  # Ensure the university is Japanese, an organization, and an educational institution
  ?university a dbo:University ;
             dbo:country dbr:Japan .
  
  # Link the team to the manager who is also associated with the university
  ?manager dbo:affiliation ?university .
}
```",4,8,5,2,2,3,3,71,0,1,2,0.0,0.0,0
55,13,val,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of Metallica.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerBandMember WHERE {
  # Find the artist or band associated with ""Used to Love Her""
  ?song dbo:title ""Used to Love Her"" ;
        dbo:artist ?artist .

  # Identify the producer of that song
  ?artist dbo:recordLabel ?label .
  ?label dbo:producer ?producer .

  # Check if this producer is a member of any band
  ?producer dbo:bandMember ?producerBandMember .

  # Find all members of Metallica
  dbr:Metallica dbo:bandMember ?metallicaMember .

  # Determine if there's an overlap between the two sets
  FILTER (?producerBandMember = ?metallicaMember)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
182,13,val,Give me the war of Jagath Dias and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1Label ?war2Label
WHERE {
  # War associated with Jagath Dias (Sri Lankan Civil War)
  dbr:Sri_Lankan_Civil_War dbo:wikiPageRedirects* ?redirect .
  OPTIONAL { ?redirect rdfs:label ?war1Label . FILTER(LANG(?war1Label) = ""en"") }
  
  # Context of Terrorism in Sri Lanka (related to the Easter bombings)
  dbr:Terrorism_in_Sri_Lanka dbo:wikiPageRedirects* ?redirect2 .
  OPTIONAL { ?redirect2 rdfs:label ?war2Label . FILTER(LANG(?war2Label) = ""en"") }
}
```",3,3,4,2,2,2,3,28,0,2,1,0.0,0.0,0
435,17,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
# Query for Article 62, Section IV of Constitution of Iceland
SELECT ?work WHERE {
  ?constitution dcterms:isPartOf <http://dbpedia.org/resource/Constitution_of_Iceland> .
  ?constitution dbo:section ""Article 62"" ;
                dbo:subSection ""IV"" .
  ?constitution dbo:text ?text .
  ?text dbp:content ?work .
}

UNION

# Query for the region of the time zone in Bombali Shebora Chiefdom
SELECT ?region WHERE {
  ?chiefdom rdf:type <http://dbpedia.org/ontology/Place> ;
            rdfs:label ""Bombali Shebora Chiefdom""@en .
  ?chiefdom dbo:timeZone ?timezone .
  ?timezone dbo:region ?region .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,34,val,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?childOfNysasChild ?successorsChild 
WHERE {
  # Find Nysa, wife of Pharnaces I of Pontus
  ?nysa dbo:spouse ?pharnacesI .
  ?pharnacesI rdfs:label ""Pharnaces I of Pontus""@en .

  # Find parent of Nysa
  ?parent dbo:child ?nysa .

  # Find child of Nysa's child who is royalty
  ?nysasChild dbo:child ?nysa .
  ?childOfNysasChild dbo:child ?nysasChild .
  ?childOfNysasChild a dbo:RoyalPerson .

  # Find successor of Antiochus II Theos who is royalty
  ?antiochusII rdfs:label ""Antiochus II Theos""@en .
  ?successor dbo:successor ?antiochusII .
  ?successor a dbo:RoyalPerson .

  # Find child of successor's child who is royalty
  ?successorsChild dbo:child ?successor .
  ?successorsGrandchild dbo:child ?successorsChild .
  ?successorsGrandchild a dbo:RoyalPerson .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
54,39,val,"Give me the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfThadoMinsaw ?predecessorOfChild
WHERE {
  # Find Thado Minsaw of Prome and his parent
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw of Prome""@en .
  
  ?thadoMinsaw dbo:parent ?parentOfThadoMinsaw .

  # Find Thihapate of Mohnyin and his child who is an office holder and royalty
  ?thihapate a dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .
  
  ?child dbo:parent ?thihapate ;
         a dbo:Monarch ; # Assuming Monarch as a class for royalty
         dbo:officeHolder true .

  # Find the predecessor of this child
  ?child dbo:predecessor ?predecessorOfChild .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
294,19,val,"Give me the entity in Nashville, Tennessee and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?politician ?restingPlace ?keeblesRestingPlace
WHERE {
  ?politician a dbo:Politician ;
             dbo:awardReceived dbr:Distinguished_Service_Medal_(U.S._Army) .
  
  ?politician dbo:deathPlace ?place .
  ?place rdfs:label ""Nashville, Tennessee""@en .

  OPTIONAL { ?politician dbo:deathPlace ?restingPlace . }
  
  dbr:Edwin_A._Keeble dbo:deathPlace ?keeblesRestingPlace .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
767,22,val,Give me the reference to the alter ego of Black Hood and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?entityInBadenWurttemberg WHERE {
  # Find the alter ego of Black Hood
  OPTIONAL { 
    dbr:Black_Hood dbo:alterEgo ?alterEgo .
  }
  
  # Find entities located in Baden-Württemberg
  ?entityInBadenWurttemberg dbo:location dbr:Baden-Württemberg .
}
```",3,3,4,2,2,3,3,71,0,201,7,0.0,0.0,0
547,24,val,Give me the resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for Alan Cunningham's resting place
SELECT ?restingPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alan Cunningham""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}

UNION

# Query to find the actor of ""Enemy at the Door"" and their resting place
SELECT ?actorRestingPlace WHERE {
  ?film a dbo:Film ;
        rdfs:label ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?actorRestingPlace . }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
391,24,val,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and actor of All About the Andersons.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Michael Ballhaus's work ""Goodfellas""
  dbr:Goodfellas dbo:director dbr:Martin_Scorsese .
  
  # Get actors involved in ""Goodfellas""
  dbr:Goodfellas dbo:starring ?actor .

  # Check if the actor also starred in ""All About the Andersons""
  OPTIONAL { 
    ?tvSeries dbo:title ""All About the Andersons""@en .
    ?tvSeries dbo:starring ?actor .
  }
  
  FILTER EXISTS {
    ?tvSeries dbo:title ""All About the Andersons""@en .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
547,35,val,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeRestingPlace ?childRestingPlace WHERE {
  # Find an individual who is a Knight Grand Cross of the Order of St Michael and St George
  ?person dbo:knightGrandCrossOfTheOrderOfStMichaelAndStGeorge true .
  
  # Get the death place (resting place) of this person
  ?person dbo:deathPlace ?awardeeRestingPlace .

  # Find a child of James Burton, the property developer
  dbr:James_Burton_(property_developer) dbo:child ?child .

  # Get the death place (resting place) of this child
  ?child dbo:deathPlace ?childRestingPlace .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
801,40,val,Give me the associated musical artist of Chris Taylor (music producer) and producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?artist2 ?artist3 WHERE {
  # Chris Taylor (music producer)
  OPTIONAL { 
    dbr:Chris_Taylor_(music_producer) dbo:associatedMusicalArtist ?artist1 .
  }

  # Producer of ""Westside Story"" (song)
  OPTIONAL {
    dbr:Westside_Story_(song) dbo:producer ?producer .
    ?producer dbo:associatedMusicalArtist ?artist2 .
  }
  
  # Professional in the alter ego of The Shadow
  OPTIONAL {
    dbr:Lamont_Cranston dbo:alias dbr:The_Shadow ;
                       dbo:associatedMusicalArtist ?artist3 .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
778,15,val,"Give me the author of Chroot and entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author ?awardingEntity
WHERE {
  # Find the author of Chroot
  ?chrootResource rdfs:label ""Chroot""@en .
  ?chrootResource dbo:author ?author .

  # Find an American awardee of the Wolf Prize in Medicine and their awarding entity
  ?person dbo:nationality dbr:United_States ;
          dbo:award [ a dbo:WolfPrizeInMedicine ; 
                      dbo:awardedTo ?person ] .
  ?person dbo:award [ a dbo:WolfPrizeInMedicine ;
                      dbo:awardingEntity ?awardingEntity ] .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
92,41,val,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?jimSheppardBandMember ?josephMichaelBand 
WHERE {
  # Find Jim Sheppard as a band member of Nevermore and an artist
  ?person dbo:name ""Jim Sheppard""@en .
  ?person dbo:bandMember dbr:Nevermore .
  ?person rdf:type dbo:Artist .

  # Get the band associated with Joseph Michael
  ?josephPerson dbo:name ""Joseph Michael""@en .
  ?josephPerson dbo:birthPlace ?place .
  ?josephPerson rdf:type dbo:Artist .
  ?josephPerson dbo:bandMember ?josephMichaelBand .

  # Ensure the bands are distinct and relevant
  FILTER(?person != ?josephPerson)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
959,43,val,"Give me the member of University of Tsukuba and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Identify the leader associated with the 2010 Japanese House of Councillors election.
SELECT ?politician WHERE {
    ?election dbo:electionDate ?date .
    FILTER (YEAR(?date) = 2010)
    ?election dbo:member ?politician .
    ?politician a dbo:Politician .
}

# Step 2: Determine the native country of this politician.
SELECT DISTINCT ?country WHERE {
    ?politician dbo:nationality ?nationality .
    ?nationality rdfs:label ?country .
    FILTER (LANG(?country) = 'en')
}

# Step 3: Find members/alumni of University of Tsukuba from that country.
SELECT DISTINCT ?member WHERE {
    ?member dbo:almaMater dbr:University_of_Tsukuba .
    ?member dbo:nationality ?nationality .
    ?nationality rdfs:label ?country .
    FILTER (LANG(?country) = 'en')
}

# Step 4: Identify the manager of Júbilo Iwata in 2013.
SELECT DISTINCT ?manager WHERE {
    ?team dbo:coach ?manager .
    ?team rdfs:label ""Júbilo Iwata""@en .
    ?season dbo:startDate ?start .
    FILTER (YEAR(?start) = 2013)
}

# Step 5: Find overlapping individuals who satisfy both conditions.
SELECT DISTINCT ?individual WHERE {
    VALUES ?country { ""Japan"" } # Assuming the country is Japan based on typical election leaders
    ?individual dbo:almaMater dbr:University_of_Tsukuba .
    ?individual dbo:nationality ?nationality .
    ?nationality rdfs:label ?country .
    FILTER (LANG(?country) = 'en')
    
    OPTIONAL {
        ?individual dbo:managerOf ?team .
        ?team rdfs:label ""Júbilo Iwata""@en .
        ?season dbo:startDate ?start .
        FILTER (YEAR(?start) = 2013)
    }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
994,31,val,Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of Red Tide (band).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonArtist WHERE {
  # Find musicians associated with Watchtower
  ?watchtowerMember dbo:bandMember dbr:Watchtower .
  
  # Find musicians associated with Red Tide
  ?redTideMember dbo:bandMember dbr:Red_Tide_(band) .

  # Check for a common musician between the two bands
  FILTER (?watchtowerMember = ?commonArtist || ?redTideMember = ?commonArtist)
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
314,19,val,Give me the commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson ;
          dbo:commanderOf ?spanishCivilWar .
  
  FILTER EXISTS { 
    ?spanishCivilWar dbo:participatedIn dbr:Spanish_Civil_War
  }
  
  ?person dbo:deathPlace dbr:House_of_Sombrerete .

  # Assuming ""awardee of 30"" refers to a specific award or recognition number.
  # This part is hypothetical as the exact property isn't clear without more context.
  OPTIONAL { 
    ?person dbo:awardNumber ""30"" .
  }

  ?person rdfs:label ?name .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
294,15,val,"Give me the entity in Nashville, Tennessee and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  ?person a dbo:Person ;
          dbo:award dbr:Distinguished_Service_Medal_(U.S._Army) ;
          dbo:birthPlace dbr:Nashville,_Tennessee .
  
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  FILTER (regex(str(?person), ""Politician""))
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
294,13,val,"Give me the resting place of Edwin A. Keeble and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?keeblesRestingPlace ?awardeesRestingPlace WHERE {
  # Edwin A. Keeble's resting place
  OPTIONAL { 
    dbr:Edwin_A._Keeble dbo:deathPlace ?keeblesRestingPlace .
  }

  # Politician who received the Distinguished Service Medal (U.S. Army)
  OPTIONAL {
    ?awardee dbo:occupation dbr:Politician ;
            dbo:awardReceived dbr:Distinguished_Service_Medal_(United_States_Army) .
    ?awardee dbo:deathPlace ?awardeesRestingPlace .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
184,28,val,Give me the child of Archduke Joseph August of Austria and parent of Archduchess Ilona of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find the child of Archduke Joseph August
  ?child dbo:parent dbr:Archduke_Joseph_August_of_Austria .
  
  # Check if this child is a parent of Archduchess Ilona
  ?child dbo:child dbr:Archduchess_Ilona_of_Austria .

  # Check if this child is also a parent of someone from Budapest
  ?child dbo:child ?person .
  ?person dbo:nativePlace dbr:Budapest .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
767,40,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v1 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Find the writer of ""Where It's At"" by Dustin Lynch
  ?songwriter dbo:title ""Where It's At""@en .
  ?album dbo:song ?song .
  ?song dbo:lyricist ?songwriter .
  ?album dbr:Dustin_Lynch .

  # Find Carl L. Nippert's alma mater
  ?nippert a dbo:Person ;
          foaf:name ""Carl L. Nippert"" ;
          dbo:almaMater ?almaMater .

  # Identify the settlement in the administration of both entities
  ?settlement a dbo:Settlement ;
              dbo:administrator ?songwriter ;
              dbo:administrator ?nippert .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
179,12,val,Give me the parent of the child of Bhumibol Adulyadej and person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?child dbo:parent ?parent .
  FILTER (
    EXISTS { ?child dbo:parent <http://dbpedia.org/resource/Bhumibol_Adulyadej> } &&
    EXISTS { ?child dbo:parent <http://dbpedia.org/resource/Sirikit_of_Thailand> }
  )
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
488,34,val,"Give me the administration of Emperor Go-Yōzei and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
# Query for Emperor Go-Yōzei's administration (reign period)
SELECT ?administration WHERE {
  ?emperor rdf:type dbo:Monarch .
  ?emperor rdfs:label ""Emperor Go-Yōzei""@en .
  ?emperor dbo:reign ?administration .
}

# Query for Saitō Hajime's birthplace
SELECT ?birthPlace WHERE {
  ?person rdf:type dbo:Person ;
          rdfs:label ""Saitō Hajime""@en ;
          dbo:birthPlace ?birthPlace .
}

# Query for the military conflict (Boshin War)
SELECT ?event WHERE {
  ?conflict rdf:type dbo:MilitaryConflict ;
            rdfs:label ""Boshin War""@en ;
            a dbo:Event ;
            dbo:socialEvent true .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
488,30,val,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceTokugawaIeyasu ?administrationEmperorOgimachi ?birthPlaceEnomotoTakeaki
WHERE {
  # Death place of Tokugawa Ieyasu
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlaceTokugawaIeyasu .

  # Administration (reign) of Emperor Ōgimachi, father of Emperor Go-Mizunoo
  dbr:Emperor_Ogimachi dbo:reign ?administrationEmperorOgimachi .

  # Birth place of Enomoto Takeaki
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceEnomotoTakeaki .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
184,39,val,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
# Step 1: Find Archduchess Margaret of Austria (born 1925) and her parent
SELECT ?margaret ?parentMargaret WHERE {
    ?margaret a dbo:Person ;
             foaf:name ""Archduchess Margaret of Austria""@en ;
             dbo:birthDate ?birthDate .
    FILTER(YEAR(?birthDate) = 1925)
    OPTIONAL { ?margaret dbo:childOf ?parentMargaret . }
}

# Step 2: Find the child of her parent
SELECT ?grandChild WHERE {
    ?parentMargaret dbo:child ?grandChild .
}

# Step 3: Find Archduke Joseph August of Austria and his child
SELECT ?josephAugust ?childJosephAugust WHERE {
    ?josephAugust a dbo:Person ;
                  foaf:name ""Archduke Joseph August of Austria""@en .
    OPTIONAL { ?josephAugust dbo:child ?childJosephAugust . }
}

# Step 4: Find the parent of this child
SELECT ?parentChildJosephAugust WHERE {
    ?childJosephAugust dbo:childOf ?parentChildJosephAugust .
}

# Step 5: Determine the common ancestor or relationship
SELECT DISTINCT ?commonAncestor WHERE {
    VALUES (?ancestor1) { ?grandChild }
    VALUES (?ancestor2) { ?parentChildJosephAugust }
    
    OPTIONAL { ?ancestor1 dbo:childOf ?commonAncestor . }
    OPTIONAL { ?ancestor2 dbo:childOf ?commonAncestor . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,43,val,Give me the person born as Georgeanne Marie Rice and spouse of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Georgeanne Marie Rice"" .
  ?person dbo:spouse dbpedia:Ted_McGinley .
  
  ?profession dbo:actor ?unnaturalActor .
  ?unnaturalActor rdfs:label ""Unnatural (TV series)""@en .

  ?person dbo:profession ?profession .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
488,32,val,"Give me the birth place of the commander in Boshin War and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceOfCommander ?deathPlaceOfPoliticianFather
WHERE {
  # Find the birth place of Saigō Takamori, a commander in the Boshin War
  dbr:Saigō_Takamori dbo:birthPlace ?birthPlaceOfCommander .

  # Identify Yūki Hideyasu and his father who was a politician
  dbr:Yūki_Hideyasu dbo:father ?politicianFather .
  
  # Ensure the father is categorized as a politician
  ?politicianFather rdf:type dbo:Politician .

  # Find the death place of Yūki Hideyasu's father
  ?politicianFather dbo:deathPlace ?deathPlaceOfPoliticianFather .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
617,14,val,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandparent WHERE {
  ?richeza rdfs:label ""Richeza of Poland""@en .
  ?richeza dbo:father ?father .
  ?father a dbo:Monarch ; # Ensures the father is royalty
          dbo:parent ?grandparent .
  ?grandparent a dbo:Monarch . # Ensures the grandparent is royalty
}
```",3,5,4,3,1,3,2,20,0,0,4,0,0.0,0
435,16,val,Give me the work of the author of Iceland and territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  # Find the author of the work titled ""Iceland""
  ?book dbo:title ""Iceland""@en .
  ?book dbo:author ?author .

  # Find territories administered from Reykjavík
  ?territory dbo:administrativeCenter dbr:Reykjavík .
  
  # Get works by this author
  ?work dbo:author ?author .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
182,19,val,Give me the war of Jagath Dias and entity in Sri Lanka and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war ?entity ?author ?event 
WHERE {
  # Jagath Dias involvement in war
  ?person rdfs:label ""Jagath Dias""@en .
  OPTIONAL { ?person dbo:participatedIn ?war . }
  OPTIONAL { ?person dbp:country ?entity . FILTER (lang(?entity) = 'en') }

  # Author of the 2019 Sri Lanka Easter bombings
  ?event rdfs:label ""2019 Sri Lanka Easter bombings""@en .
  OPTIONAL { ?event dbo:perpetrator ?author . }
}
```",4,4,5,2,3,2,3,28,0,2,1,0.0,0.0,0
404,25,val,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfErnestAugustus ?childOfFatherOfDuke
WHERE {
  # Find the parent of Prince Ernest Augustus of Hanover (born 1914)
  ?person a dbo:Person ;
          dbo:birthDate ?birthDate ;
          rdfs:label ""Prince Ernest Augustus of Hanover""@en .
  FILTER(YEAR(?birthDate) = 1914)

  # Identify the parent
  OPTIONAL { ?parentOfErnestAugustus dbo:child ?person . }
  OPTIONAL { ?person dbo:parent ?parentOfErnestAugustus . }

  # Find Ernest Augustus, Duke of Brunswick and his father
  ?duke a dbo:Person ;
        rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  
  OPTIONAL { ?fatherOfDuke dbo:child ?duke . }
  OPTIONAL { ?duke dbo:parent ?fatherOfDuke . }

  # Find the child of the father of Ernest Augustus, Duke of Brunswick
  OPTIONAL { ?childOfFatherOfDuke dbo:parent ?fatherOfDuke . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
161,19,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?francoForce ?civilWarForces
WHERE {
  # Francisco Franco's military force during the Spanish Civil War
  OPTIONAL {
    dbr:Francisco_Franco dbo:militaryConflict dbr:Spanish_Civil_War .
    dbr:Spanish_Civil_War dbo:leader dbr:Francisco_Franco .
    ?francoForce dbo:partOf dbr:Nationalist_Faction ;
                rdfs:label ?francoLabel .
  }
  
  # Military forces involved in the Spanish Civil War
  OPTIONAL {
    dbr:Spanish_Civil_War dbo:militaryConflict ?civilWarForces .
    ?civilWarForces rdfs:label ?civilWarLabel .
  }
}
```",3,6,4,2,2,3,3,71,0,0,514,0,0.0,0
10,19,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of Luke Vibert and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?associatedArtist WHERE {
  ?colton dbo:birthDate ?date .
  FILTER EXISTS { ?colton rdf:type dbo:Person . }
  
  ?colton dbo:bandMember ?vibertBand .
  ?vibertBand dbo:member ?artist .
  ?artist rdf:type dbo:musicalArtist .

  ?artist rdfs:label ""Matt Colton""@en .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
767,20,val,Give me the alma mater of the administration of George K. Nash and entity in Baden-Württemberg.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
# Query to find the alma mater of George K. Nash
SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""George K. Nash""@en .
  ?person dbo:almaMater ?almaMater .
}

UNION

# Query to find entities in Baden-Württemberg
SELECT ?entity WHERE {
  ?entity a dbo:AdministrativeRegion ;
          rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""baden-württemberg"") && LANGMATCHES(LANG(?label), ""de""))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
783,13,val,Give me the associated musical artist of the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicalArtist
WHERE {
  ?person a dbo:Person ;
          dbo:birthName ""Samuel Ofori Amponsah""@en .
  ?person dbo:musicalArtist ?musicalArtist .
}
```",3,3,4,3,1,3,2,20,0,0,35,0,0.0,0
54,21,val,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?predecessor ?childOfFather
WHERE {
  # Find predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?ameitta a dbo:Monarch ;
           rdfs:label ""Ameitta Thiri Maha Dhamma Dewi of Ava""@en .
  
  ?ameitta dbo:predecessor ?predecessor .

  # Find father of Soe Min Wimala Dewi
  ?soeminwimala a dbo:Monarch ;
                rdfs:label ""Soe Min Wimala Dewi""@en .
  
  ?soeminwimala dbo:father ?father .

  # Find child of the identified father
  ?childOfFather dbo:father ?father .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
184,36,val,Give me the parent of Géza von Habsburg and parent of the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?gezaParent ?margaretAncestor
WHERE {
  # Find the parent of Géza von Habsburg
  ?geza a dbo:Person ;
        foaf:name ""Géza von Habsburg"" .
  ?geza dbo:parent ?gezaParent .

  # Find Archduchess Margaret of Austria's parent
  ?margaret a dbo:Person ;
            foaf:name ""Archduchess Margaret of Austria"" ;
            dbo:birthdayYear ""1925""^^xsd:gYear .
  ?margaret dbo:parent ?margaretParent .

  # Find the child of Archduchess Margaret's parent (could be herself or a sibling)
  ?child dbo:parent ?margaretParent .

  # Find the parent of this child
  ?child dbo:parent ?margaretAncestor .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
547,31,val,Give me the resting place of Simon Cadell and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
# Query for Simon Cadell's resting place
SELECT ?restingPlace WHERE {
  ?simonCadell a dbo:Person ;
               foaf:name ""Simon Cadell""@en .
  OPTIONAL { ?simonCadell dbo:finalBurialPlace ?restingPlace . }
}

UNION

# Query for the child of the child of William Haliburton's resting place
SELECT ?grandchildRestingPlace WHERE {
  ?williamHaliburton a dbo:Person ;
                     foaf:name ""William Haliburton""@en .
  ?childOfWill a dbo:child { ?williamHaliburton } .
  ?grandChildOfWill a dbo:child { ?childOfWill } .
  OPTIONAL { ?grandChildOfWill dbo:finalBurialPlace ?grandchildRestingPlace . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,34,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/state> ?v1 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  ?song dbo:lyricsBy ?writer .
  FILTER(STRSTARTS(LCASE(?song), ""where it's at""))
  
  ?writer a dbo:Person ;
          dbo:administrator ?adminRole .

  ?adminRole dbo:settlement ?settlement .
}
```",4,5,5,3,2,3,3,71,0,0,8,0,0.0,0
391,29,val,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Michael Ballhaus and a notable work associated with him
  dbr:Michael_Ballhaus dbo:notableWork ?work .
  
  # Identify an actor from Compton, California
  ?actor dbo:nationality dbr:United_States ;
         dbo:birthPlace dbr:Compton,_California .

  # Check if this actor is known for acting in ""All About the Andersons""
  ?actor dbo:actedIn dbr:All_About_the_Andersons .
  
  # Ensure that the notable work of Michael Ballhaus matches with the actor's claim to fame
  ?actor dbo:notableWork ?work .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
801,41,val,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work ?producer WHERE {
    ?work a dbo:MusicalWork ;
          dbo:associatedPerformer dbr:50_Cent ;
          dbo:associatedPerformer dbr:The_Shadow .
    
    OPTIONAL { ?work dbo:producer ?producer . }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
251,16,val,Give me the location of Battle of Marengo and death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleLocation ?authorDeathPlace WHERE {
  # Location of the Battle of Marengo
  dbr:Battle_of_Marengo dbo:location ?battleLocation .

  # Author of ""The Twelve Abbots of Challant""
  ?work dbo:title ""The Twelve Abbots of Challant""@en .
  ?work dbo:author ?author .

  # Death place of the author
  ?author dbo:deathPlace ?authorDeathPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
994,26,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Identify Fredrik Thordendal's band
  dbr:Fredrik_Thordendal dbo:member dbr:Meshuggah .
  
  # Step 2: Find associated musical artists with Meshuggah
  dbr:Meshuggah dbo:associatedBand ?associatedArtist .
  
  # Ensure the result is a band, group, or organization
  ?associatedArtist rdf:type/(dbo:Band|dbo:MusicalGroup|dbo:Organization) .
}
```",3,7,4,3,1,3,3,71,0,0,33,0,0.0,0
427,42,val,"Give me the party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?andreottiParty ?prodiBirthDate ?prodiParty ?ippDescription
WHERE {
  # Giulio Andreotti's party affiliation
  dbr:Giulio_Andreotti dbo:partyAffiliation ?andreottiParty .

  # Romano Prodi's birth date and political affiliation
  dbr:Romano_Prodi a dbo:Politician ;
                  dbo:birthDate ?prodiBirthDate ;
                  dbo:partyAffiliation ?prodiParty .
  
  # Reference to Italian People's Party (1994)
  OPTIONAL {
    dbr:Italian_People%27s_Party_(1994) rdfs:comment ?ippDescription
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
303,16,val,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and party of Guillermo Endara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyName
WHERE {
  VALUES ?person { 
    dbr:Arnulfo_Arias_Madrid 
    dbr:Guillermo_Endara 
  }
  
  ?person dbo:party ?party .
  ?party rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
```",3,4,4,2,2,2,3,28,0,3,1,0.0,0.0,0
328,18,val,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of Order of Suvorov and commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ?name .
  
  # Leader of People's Commissariat of Defense
  ?officeHolder dbo:officeHolder ?person ;
                dbo:officeName dbr:People%27s_Commissar_of_Defence_of_the_Soviet_Union .

  # Awardee of Order of Suvorov
  ?award dbo:recipient ?person ;
         dbo:name dbr:Order_of_Suvorov .

  # Commander on the Eastern Front
  ?commanderFor dbo:militaryCommanderFor ?person ;
                dbo:place dbr:Eastern_Front_(World_War_II) .
  
  FILTER (lang(?name) = 'en')
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
421,19,val,Give me the band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  # Identify Edin Dervišhalidović
  dbr:Edin_Dervišhalidović a dbo:Person ;
    dbo:birthPlace dbr:Socialist_Federal_Republic_of_Yugoslavia ;
    dbo:award ?award .

  # Link the award to a band
  ?award dbo:recipient ?band .
  ?band a dbo:MusicalBand .

  # Find members of the band
  ?bandMember dbo:memberOf ?band .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
626,15,val,"Give me the awardee of Order of St. Andrew and commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?order dbo:awardee ?person .
  FILTER (str(?order) = ""Order_of_St._Andrew"")
  
  ?battle dbo:commanderInBattle ?person .
  FILTER (str(?battle) = ""Battle_of_Paris_(1814)"")
}
```",4,5,5,3,2,3,2,20,0,0,9,0,0.0,0
617,44,val,Give me the spouse of the child of Antiochus III the Great and child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?parent
WHERE {
  # Identify Antiochus III the Great
  dbr:Antiochus_III_the_Great a dbo:Person .

  # Find his children
  ?child dbo:parent dbr:Antiochus_III_the_Great ;
         a dbo:Person .

  # Determine the spouse of each child
  ?spouse dbo:spouse ?child .

  # Identify Antiochus, one of the children
  ?antiochusChild rdfs:label ""Antiochus""@en .
  
  # Ensure this Antiochus is a child of Antiochus III
  ?antiochusChild dbo:parent dbr:Antiochus_III_the_Great .

  # Find the parent of this specific Antiochus (should be Antiochus III)
  ?parent dbo:child ?antiochusChild .
  
  FILTER(?spouse != ?antiochusChild) # Ensure spouse is not the child itself
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
959,31,val,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?almaMater
WHERE {
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1958)
  
  ?person dbo:nationality dbr:Japan .

  ?person dbo:almaMater ?almaMater .
  
  ?almaMater a dbo:University ;
             dbo:country dbr:Japan .
}
```",4,8,5,3,2,3,3,71,0,0,167,0,0.0,0
314,18,val,"Give me the awardee of 30 and commander in the profession, that is an event and a societal event, of Lisa Gavrić.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person rdfs:label ""Lisa Gavrić""@en .
  ?person a dbo:Person .

  ?person dbo:award ?award .
  
  ?award a dbo:Event ;
        a dbo:SocietalEvent .

  FILTER(CONTAINS(LCASE(?awardLabel), ""30"") && CONTAINS(LCASE(?awardLabel), ""commander""))
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
488,43,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of Enomoto Takeaki and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceOfGrandfather ?birthPlaceOfEnomoto ?administrationOfGoYozei
WHERE {
  # Part 1: Death place of Matsudaira Tadamasa's grandfather (politician)
  ?matsudairaTadamasa dbo:father ?father.
  ?father dbo:father ?grandfather.
  ?grandfather a dbo:Politician.
  ?grandfather dbo:deathPlace ?deathPlaceOfGrandfather.

  # Part 2: Birth place of Enomoto Takeaki
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceOfEnomoto.

  # Part 3: Administration of Emperor Go-Yōzei
  dbr:Emperor_Go-Yozei dbo:reign ?administrationOfGoYozei.
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
197,7,val,Give me the birthplace of the member of FC Politehnica Timișoara and birthplace of George Lusztig.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Query for a member of FC Politehnica Timișoara and their birthplace
SELECT DISTINCT ?player ?birthPlacePolitehnica WHERE {
  ?player dbo:nationality dbr:Romania ;
         dbo:sportsTeam dbr:FC_Politehnica_Timișoara .
  ?player dbo:birthPlace ?birthPlacePolitehnica .
}

UNION

# Query for George Lusztig and his birthplace
SELECT DISTINCT ?lusztig ?birthPlaceLusztig WHERE {
  ?lusztig rdfs:label ""George Lusztig""@en ;
           dbo:birthPlace ?birthPlaceLusztig .
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
177,7,val,"Give me the headquarter of Ministry of Culture, Sports and Tourism and entity in the residence of Alexander Gamelin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
# Query for the headquarters of Ministry of Culture, Sports and Tourism
SELECT ?headquarters WHERE {
  ?ministry a dbo:GovernmentAgency ;
            rdfs:label ""Ministry of Culture, Sports and Tourism""@en .
  ?ministry dbo:headquarter ?headquarters .
}

UNION

# Query for the residence of Alexander Gamelin
SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alexander Gamelin"" .
  ?person dbo:residence ?residence .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
701,4,train,Give me the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Nefertari dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
959,2,train,Give me the manager of 2013 Júbilo Iwata season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?team a dbo:FootballClub ;
        rdfs:label ""Júbilo Iwata""@en .
  OPTIONAL { 
    ?team dbo:manager ?manager .
  }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
485,5,train,"Give me the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Joseph Whitaker"" .
  ?person rdf:type dbo:Naturalist .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbr:Region .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
339,6,train,Give me the father of Princess Elizabeth of Greece and Denmark and child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?princess dbo:father ?father .
  FILTER (str(?princess) = ""Princess Elizabeth of Greece and Denmark"")
  
  ?georgeI dbo:child ?father .
  FILTER (str(?georgeI) = ""George I of Greece"")
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
528,13,train,Give me the war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?war 
WHERE {
  # Find the commander(s) involved in the Battle of La Rinconada de Ate
  dbr:Battle_of_La_Rinconada_de_Ate dbo:commander ?commander .
  
  # Link the commander to a war they participated in
  ?commander dbo:participatedInWar ?war .
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
994,0,train,Give me the associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artistName
WHERE {
  ?band dbr:Slayer .
  ?band dbo:bandMember ?member .
  ?member foaf:name ?artistName .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
48,10,train,"Give me the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v0 <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor (GROUP_CONCAT(?showLabel; separator="", "") AS ?shows)
WHERE {
  # Find shows where Stacey Dash is an actor
  ?show dbo:starring dbr:Stacey_Dash .
  
  # For each show, find other actors who are also musical artists
  ?show dbo:starring ?actor .
  ?actor a dbo:MusicalArtist .

  # Ensure the actor is not Stacey Dash herself
  FILTER (?actor != dbr:Stacey_Dash)

  # Get labels for shows and actors
  SERVICE <http://dbpedia.org/sparql> {
    ?show rdfs:label ?showLabel .
    ?actor rdfs:label ?actorLabel .
  }
}
GROUP BY ?actor
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
44,3,train,"Give me the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  ?queensryche a dbo:MusicalArtist ;
               rdfs:label ""Queensrÿche""@en .
  
  ?queensryche dbo:associatedBand ?associatedArtist .
  
  FILTER EXISTS { ?associatedArtist a dbo:MusicalGroup } 
  FILTER EXISTS { ?associatedArtist a dbo:Organization }
}
```",1,3,2,1,1,2,2,9,0,0,3,0,0.0,0
492,0,train,Give me the person decedent at French Algeria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathDate WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person dbo:deathDate ?deathDate . }
  
  # Filter for notable figures related to the end of French Algeria
  FILTER (
    EXISTS { ?person dbo:spouse dbr:Ahmed_Ben_Bella } ||
    EXISTS { ?person dbo:birthPlace dbr:Algeria } ||
    EXISTS { ?person dbo:deathPlace dbr:Algeria }
  )
  
  # Limit to a specific timeframe around the Algerian War of Independence
  FILTER (
    year(?deathDate) >= 1954 &&
    year(?deathDate) <= 1962
  )
}
ORDER BY DESC(?deathDate)
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,30,0,0.0,0
747,1,train,Give me the band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  dbr:Amba_Shepherd dbo:musicalArtist ?band .
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
645,10,train,Give me the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?child WHERE {
  ?adela a dbo:Person ;
         foaf:name ""Adela Pankhurst""@en .
  
  ?parent dbo:child ?adela .

  ?parent dbo:child ?child .
  FILTER (?child != ?adela)
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
617,14,train,Give me the parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent
WHERE {
  ?antiochusIII a dbo:Person ;
                rdfs:label ""Antiochus III the Great""@en .
  
  ?antiochusIV dbo:childOf ?antiochusIII ;
               rdfs:label ""Antiochus IV Epiphanes""@en .

  ?child dbo:parent ?antiochusIV ;
         a dbo:Person .

  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
184,13,train,Give me the child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild WHERE {
  ?archduke a dbo:Person ;
            foaf:name ""Joseph Karl of Austria""@en .
  
  ?archduke dbo:child ?child .
  
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
177,3,train,"Give me the office, that is an organisation, of Joo Don-sik.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joo Don-sik""@en .
  ?person dbo:office ?office .
  FILTER (?office a dbo:Organization)
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
838,0,train,Give me the band of Raša Đelmaš.,SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band
WHERE {
  ?person dbp:name ""Raša Đelmaš""@sr .
  ?person dbo:band ?band .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
161,16,train,"Give me the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Identify Indalecio Prieto and his predecessor
  dbr:Indalecio_Prieto dbo:predecessor ?predecessor .
  
  # Find the force related to the predecessor that is both a societal event and a military conflict
  ?predecessor dbo:relatedTo ?force .
  ?force rdf:type dbo:SocietalEvent ;
         rdf:type dbo:MilitaryConflict .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
487,9,train,Give me the administration of the person born on 1955-01-26.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?personLabel ?positionHeld ?officeLabel WHERE {
  ?person a dbo:Person ;
          dbo:birthDate ""1955-01-26""^^xsd:date ;
          rdfs:label ?personLabel .
  OPTIONAL { 
    ?person dbo:positionHeld ?positionHolding .
    ?positionHolding dbo:positionName ?positionHeld ;
                     dbo:office ?office .
    ?office rdfs:label ?officeLabel .
  }
  FILTER (lang(?personLabel) = 'en')
}
ORDER BY ?person
```",2,2,3,2,1,3,2,20,0,46,3,0.0,0.0,0
488,2,train,Give me the administration of Emperor Go-Yōzei.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reignStart ?reignEnd ?administrationRole
WHERE {
  VALUES ?emperor { dbr:Emperor_Go-Yōzei }
  
  ?emperor a dbo:Monarch ;
           dbo:reignStart ?reignStart ;
           dbo:reignEnd ?reignEnd .
  
  OPTIONAL {
    ?emperor dbo:administrationRole ?administrationRole .
  }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
487,2,train,Give me the person born on 1955-01-26.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
    ?person a dbo:Person .
    ?person dbo:birthDate ?date .
    FILTER (YEAR(?date) = 1955 && MONTH(?date) = 1 && DAY(?date) = 26)
}
```",1,1,2,1,1,3,2,20,23,0,0,1.0,1.0,1.0
820,4,train,Who is the professional in Actor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName ?birthDate WHERE {
  VALUES ?actor { dbr:Leonardo_DiCaprio }
  ?actor a dbo:Actor ;
         foaf:name ?actorName ;
         dbo:birthDate ?birthDate .
}
```",1,1,2,1,1,3,2,20,0,0,21580,0,0.0,0
392,9,train,Give me the province of Schio and region of Central European Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
# Query for the province of Schio
SELECT ?province WHERE {
  dbpedia:Schio dbo:locatedInProvince ?province .
}

# Query for the region associated with Central European Time
SELECT DISTINCT ?region WHERE {
  ?timeZone a dbo:TimeZone ;
            rdfs:label ""Central European Time""@en .
  ?country dbo:timezone ?timeZone ;
           dbo:location ?region .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
981,6,train,Give me the entity in Indonesia and birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nationality ?birthPlace
WHERE {
  VALUES ?person { dbr:Novia_Indriani_Mamuaja }
  ?person dbo:nationality ?nationality .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
701,3,train,Give me the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX db: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  db:Amun-her-khepeshef dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
747,6,train,Who is the writer of Apollo (Hardwell song)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  VALUES ?song { dbr:Apollo_(Hardwell_song) }
  OPTIONAL { ?song dbo:composer ?writer . }
  OPTIONAL { ?song dbo:lyricist ?writer . }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
378,17,train,"Who is the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  ?trigge a dbo:Person ;
          foaf:name ""Thomas Trigge""@en .
  
  ?trigge dbo:participatedIn ?war .
  ?war a dbo:MilitaryConflict .

  OPTIONAL { 
    ?war dbo:commander ?commander .
  }
}
```",2,5,3,2,1,3,3,71,0,0,169,0,0.0,0
696,7,train,Give me the birth place of the member of Dropkick Murphys.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Band ;
          dbo:member ?member .
  ?member foaf:name ""Ken Casey""@en .
  ?member dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
55,8,train,"Give me the band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?song dbo:title ""Used to Love Her"" .
  ?song dbo:producer ?producer .

  FILTER (strstarts(str(?producer), str(dbr:))) # Ensures the producer is a DBpedia resource

  OPTIONAL { ?producer rdf:type dbo:Band . }
  
  OPTIONAL { 
    ?bandMember dbo:band ?producer .
    ?bandMember foaf:name ?memberName .
  }

  FILTER EXISTS { ?producer rdf:type dbo:Band } # Ensure we only consider producers that are bands
}
```",2,3,3,2,1,2,3,28,0,0,55,0,0.0,0
318,2,train,Give me the founding year of Eel Pie Publishing.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?foundingDate
WHERE {
  ?entity rdfs:label ""Eel Pie Publishing""@en .
  ?entity a dbo:Organization .
  ?entity dbo:foundingDate ?foundingDate .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
197,4,train,Give me the birthplace of Dumitru Nadu and birthplace of George Lusztig.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?personLabel (GROUP_CONCAT(?birthPlaceLabel; separator="", "") AS ?birthPlaces)
WHERE {
  VALUES (?person ?personLabel) {
    (<http://dbpedia.org/resource/Dumitru_Nadu> ""Dumitru Nadu"")
    (<http://dbpedia.org/resource/George_Lusztig> ""George Lusztig"")
  }
  
  ?person dbo:birthPlace ?birthPlace.
  ?birthPlace rdfs:label ?birthPlaceLabel.
  FILTER (lang(?birthPlaceLabel) = 'en')
}
GROUP BY ?personLabel
```",2,2,3,1,2,2,2,9,0,4,1,0.0,0.0,0
429,6,train,"Give me the country of the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?militaryForce dbo:participatedIn dbr:Civil_War_Camden_Expedition .
  ?militaryForce dbo:nationality ?country .
}
```",2,3,3,2,1,2,2,9,0,0,7,0,0.0,0
994,15,train,Give me the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?song dbo:title ""Watchtower""@en .
  ?song dbo:performer ?artist .
  FILTER (isLiteral(?artist) && lang(?artist) = ""en"")
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
404,14,train,"Give me the child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?er nestor:hasFather ?father .
  ?father dbo:child ?child .
  
  VALUES ?er { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> }
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
328,2,train,Give me the leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?organization a dbo:GovernmentAgency ;
                rdfs:label ""People's Commissariat for Military and Naval Affairs""@en .
  OPTIONAL { ?organization dbo:head ?leader . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,1,train,Give me the commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  VALUES ?battle { 
    dbr:Battle_of_Leipzig 
    dbr:Battle_of_the_Nations_(1813)
  }
  
  ?battle dbo:commander ?commander .
  UNION
  ?battle dbo:opposingCommander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,21,0,0.0,0
778,9,train,"Give me the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?award
WHERE {
  ?awardee a dbo:WolfPrizeInMedicineAwardee .
  ?awardee dbo:nationality dbr:United_States .
  ?awardee dbo:award ?award .
}
```",2,3,3,2,1,3,2,20,0,0,9,0,0.0,0
767,12,train,Give me the alma mater of Carl L. Nippert and reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT ?almaMaterLabel ?almaMaterURI
WHERE {
  wd:Q123456 dbo:almaMater ?almaMater .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  BIND(wd:Q123456 AS ?person)
  BIND(?almaMater AS ?almaMaterURI)
  BIND(rdfs:label(?almaMater) AS ?almaMaterLabel)
}
```

Note: Replace `wd:Q123456` with the actual Wikidata ID for Carl L. Nippert if available.",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
626,8,train,Give me the awardee of the award of Aleksey Petrovich Yermolov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Aleksey_Petrovich_Yermolov dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,6,230,0.0,0.0,0
378,13,train,Give me the war of the commander in Peninsular War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war a dbo:MilitaryConflict ;
      rdfs:label ""Peninsular War""@en .
  
  ?war dbo:commander ?commander .
  FILTER (lang(?commanderLabel) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,118,0,0.0,0
547,5,train,Give me the show with Emily Richard.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  ?person rdfs:label ""Emily Richard""@en .
  FILTER NOT EXISTS { ?person a dbo:Agent } # Ensure it's not an agent but a person
  ?person dbo:performerIn ?show .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
712,9,train,"Give me the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?uprising a dbo:Event ;
           rdfs:label ""Vyoshenskaya Uprising""@en .
  
  ?militaryForce dbo:partOf ?uprising ;
                 a dbo:MilitaryUnit .

  ?militaryForce dbo:country ?country .
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
534,1,train,Give me the headquarter of Royal Dublin Society.,SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?headquarters
WHERE {
  ?s rdf:type dbo:Organisation .
  ?s rdfs:label ""Royal Dublin Society""@en .
  ?s dbo:headquarters ?headquarters .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
488,14,train,Give me the administration of the father of Emperor Go-Mizunoo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?positionHeld
WHERE {
  # Find Emperor Go-Mizunoo
  dbr:Emperor_Go-Mizunoo dbo:father ?father .
  
  # Get the position held by his father, if any
  OPTIONAL { ?father dbo:positionHeld ?positionHolding . 
             ?positionHolding dbo:title ?positionHeld }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
356,7,train,Give me the player in the successor of 2014 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?team dbo:successor dbr:Sacramento_Republic_FC .
  ?team dbo:member ?player .
  FILTER EXISTS { ?player a dbo:FootballPlayer }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
356,9,train,"Give me the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorSeason
WHERE {
    ?season a dbo:SportSeason ;
            dbo:sportTeam dbr:Sacramento_Republic_FC ;
            dbo:year ""2015""^^xsd:gYear .
    
    ?predecessorSeason dbo:successor ?season ;
                       a dbo:SportSeason ;
                       dbo:sportTeam dbr:Sacramento_Republic_FC .

    ?predecessorSeason dbo:successor ?successorSeason .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
712,5,train,Who is the awardee of Hero of the Soviet Union?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:Hero_of_the_Soviet_Union .
}
```",1,1,2,1,1,3,2,20,819,68,18,0.923337091319053,0.978494623655914,0.9501160092807426
30,5,train,Give me the native of the birthplace of Silvia Cohen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nativeName
WHERE {
  ?silviaCohen a dbo:Person ;
               foaf:name ""Silvia Cohen""@en .
  ?silviaCohen dbo:birthPlace ?birthPlace .

  OPTIONAL { 
    ?birthPlace rdfs:label ?nativeName .
    FILTER (LANG(?nativeName) = 'he') # Assuming Hebrew is the native language for Silvia Cohen's birthplace
  }
}
```",2,2,3,2,1,2,2,9,0,0,11488,0,0.0,0
251,1,train,Give me the administration of Forza Italia (2013).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
    ?party a dbo:PoliticalParty ;
           rdfs:label ""Forza Italia""@en .
    
    OPTIONAL { 
        ?administration dbo:politicalParty ?party ;
                        dbo:startDate ?start ;
                        dbo:leader ?leader .
        
        FILTER (?start >= ""2013-01-01""^^xsd:date)
    }
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
179,3,train,Give me the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName
WHERE {
  dbr:Srirajakanya_née_Sirikit dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
232,4,train,Give me the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""John Devon Roland Pertwee"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
285,2,train,Who is the spouse of Aristotle Onassis?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Aristotle_Onassis> dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
184,5,train,"Give me the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?archduke rdf:type dbo:Archduke .
  ?archduke dbo:name ""Ladislaus Philipp of Austria"" .
  ?archduke dbo:parent ?parent .

  FILTER EXISTS { 
    ?parent rdfs:subClassOf* dbo:RoyalFamilyMember
  }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
778,10,train,"Give me the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?softwareName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bill Joy""@en .
  
  ?software dbo:creator ?person ;
            rdfs:label ?softwareName .
  
  FILTER(LANG(?softwareName) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,5,0,0.0,0
16,0,train,Give me the spouse of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName
WHERE {
  ?person dbo:name ""Ted McGinley""@en .
  ?person dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .
  FILTER (lang(?spouseName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
378,2,train,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame
WHERE {
  VALUES ?person { dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón }
  ?person dbo:knownFor ?claimToFame .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
498,2,train,"Give me the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandLabel WHERE {
  ?band a dbo:Band ;
        rdfs:label ?bandLabel ;
        dbo:organization ?org .
  ?org a dbo:Organization .
  ?band dbo:member ?member .
  ?member rdfs:label ""Solace of Requiem""@en .
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
391,9,train,"Give me the actor of The Departed and native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?movie dbr:The_Departed .
  
  OPTIONAL { ?actor dbo:birthPlace dbr:Compton,_California . }
  
  FILTER EXISTS { ?actor dbo:birthPlace dbr:Compton,_California . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,3,train,Give me the reference to Watchtower.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference
WHERE {
  dbr:Watchtower_Society dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,3,3,71,0,1,3,0.0,0.0,0
712,3,train,Give me the country of Armed Forces of South Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?country
WHERE {
  ?armedForces rdf:type dbo:MilitaryOrganization .
  ?armedForces rdfs:label ""Armed Forces of South Russia""@en .
  ?armedForces dbo:country ?country .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
666,1,train,Give me the figure known as The Three Lions.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?emblemName
WHERE {
  ?england dbo:name ""England""@en .
  ?england dbp:nationalEmblem ?emblem .
  ?emblem rdfs:label ?emblemName .
  FILTER (lang(?emblemName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
64,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
}
```",1,2,2,1,1,2,2,9,52,42,4,0.5531914893617021,0.9285714285714286,0.6933333333333335
10,5,train,Give me the birth name of Sharon Kao.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName
WHERE {
  dbr:Sharon_Kao a dbo:Person .
  dbr:Sharon_Kao dbo:birthName ?birthName .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
404,0,train,Give me the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Victoria Louise, Princess Royal""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
801,11,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation
WHERE {
  dbr:The_Shadow dbo:occupation ?occupation .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
485,10,train,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Person ;
          dbo:award dbr:Eric_Gregory_Award .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,4,3,2,1,2,3,28,7,26,0,0.21212121212121213,1.0,0.35
54,12,train,Give me the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentOfThadoMinsaw ?predecessorOfAmeittaThiri 
WHERE {
  ?thadoMinsaw dbo:predecessor ?parentOfThadoMinsaw .
  FILTER(STR(?thadoMinsaw) = ""Thado Minsaw of Prome"")

  ?ameittaThiri dbo:predecessor ?predecessorOfAmeittaThiri .
  FILTER(STR(?ameittaThiri) = ""Ameitta Thiri Maha Dhamma Dewi"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
666,9,train,"Give me the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?teamSeason dbo:sportsTeamSeason ?season .
  ?teamSeason dbo:coach dbr:Leonid_Slutsky .
  ?teamSeason dbo:team dbr:SoccerClub .
  ?teamSeason dbo:manager ?manager .
  FILTER EXISTS { ?manager a dbo:SportsManager }
}
```",2,5,3,2,1,3,2,20,0,0,5,0,0.0,0
435,5,train,Give me the author of Iceland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?author a dbo:Person .
  ?author dbo:nationality dbr:Iceland .
  FILTER EXISTS { ?author dbo:wikiPageWikiLink dbr:Iceland }
}
LIMIT 1
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
827,4,train,"Who is the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouseName WHERE {
  ?princess a dbo:Person ;
            rdfs:label ""Princess Pauline of Saxe-Weimar-Eisenach""@en .
  
  ?princess dbo:spouse ?spouse .

  ?spouse rdf:type ?royalType ;
          rdfs:label ?spouseName .

  FILTER (CONTAINS(LCASE(?royalType), ""monarch"") || CONTAINS(LCASE(?royalType), ""royalfamilymember""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
54,16,train,Give me the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?thadoMinsaw a dbo:Person ;
               foaf:name ""Thado Minsaw of Prome""@en .
  
  ?thadoMinsaw dbo:parent ?parent .

  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,3,3,0,0.5,1.0,0.6666666666666666
659,0,train,Give me the commander in German campaign of 1813.,SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?conflict a dbo:MilitaryConflict ;
            rdfs:label ""German campaign of 1813""@en .
  
  ?commander dbo:commanderOf ?conflict ;
             a dbo:Person .

  FILTER(LANG(?conflict->rdfs:label) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,31,0,0.0,0
617,7,train,Who is the commander in Battle of Panium?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Battle_of_Panium dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
801,15,train,Give me the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
915,1,train,Give me the father of Lizzie Spaulding.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName WHERE {
  ?lizzie a dbo:Person ;
          foaf:name ""Lizzie Spaulding""@en .
  ?lizzie dbo:father ?father .
  ?father foaf:name ?fatherName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
783,9,train,Give me the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band
WHERE {
  ?person dbp:name ""Shaggy"" .
  ?person dbo:birthName ""Samuel Ofori Amponsah""@en .
  ?person dbo:bandMember ?band .
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
701,1,train,Give me the parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  VALUES ?henuttawy { dbr:Henuttawy_(19th_dynasty) }
  ?henuttawy dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,10,train,Give me the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the child of Thinkhaya of Pagan
  ?child dbo:parent dbr:Thinkhaya_of_Pagan .
  
  # Ensure this person is also a predecessor to Ameitta Thiri Maha Dhamma Dewi
  ?person dbo:predecessor dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .
  
  # The person must be the same individual in both conditions
  FILTER (?child = ?person)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
778,5,train,"Give me the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?softwareName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bill Joy""@en .
  
  OPTIONAL { 
    ?person dbo:workFor ?organization .
    ?software dbo:creator ?person ;
              dbo:name ?softwareName .
  }
}
```",1,2,2,1,1,3,2,20,0,0,5,0,0.0,0
251,11,train,Give me the death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace
WHERE {
  ?book dbo:title ""The Twelve Abbots of Challant""@en .
  ?book dbo:author ?author .
  ?author dbo:deathPlace ?deathPlace .
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
314,3,train,Give me the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters
WHERE {
  ?house a dbo:NobleFamily ;
         rdfs:label ""House of Sombrerete""@en .
  OPTIONAL { ?house dbo:headquarters ?headquarters . }
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
391,17,train,"Give me the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/occupation> """"@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?entity WHERE {
  ?entity rdf:type dbo:Film .
  ?entity rdf:type dbo:CreativeWork .
  ?entity rdf:type dbo:TelevisionShow .
}
```",2,5,3,2,1,3,3,71,0,0,1674,0,0.0,0
9,2,train,Give me the figure known as QUB.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label WHERE {
  VALUES ?entity { dbr:Queen's_University_Belfast }
  ?entity rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
392,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country ?region
WHERE {
  ?country a dbo:Country .
  ?country dbp:timeZone ""Central European Time"" .
  OPTIONAL { ?country dbo:region ?region . }
}
```",1,2,2,1,1,2,3,28,0,0,56,0,0.0,0
645,6,train,Give me the alma mater of Sylvia Pankhurst and entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  dbr:Sylvia_Pankhurst dbo:almaMater ?almaMater .
  FILTER (lang(?almaMater) = ""en"")
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
645,4,train,Give me the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  VALUES ?adela { dbr:Adela_Pankhurst }
  OPTIONAL { ?adela dbo:mother ?mother . BIND(?mother AS ?parent) }
  OPTIONAL { ?adela dbo:father ?father . BIND(?father AS ?parent) }
  ?parent a dbo:Person .
  ?parent rdfs:label ?parentName .
  FILTER(LANG(?parentName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
959,15,train,"Give me the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMaterName WHERE {
  ?person dbo:birthYear ""1958""^^xsd:gYear .
  ?person dbo:almaMater ?university .
  ?university a dbo:University ;
              a dbo:EducationalOrganization ;
              a dbo:Organisation ;
              dbo:country dbr:Japan .
  BIND (str(?university) AS ?almaMaterName)
}
```",2,6,3,2,1,3,3,71,0,0,3,0,0.0,0
303,7,train,Give me the party of Arnulfo Arias and party of Guillermo Endara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?arnulfoPartyLabel ?guillermoPartyLabel
WHERE {
  OPTIONAL { 
    dbr:Arnulfo_Arias dbo:partyAffiliation ?arnulfoParty .
    ?arnulfoParty rdfs:label ?arnulfoPartyLabel .
    FILTER (lang(?arnulfoPartyLabel) = 'en')
  }
  
  OPTIONAL { 
    dbr:Guillermo_Endara dbo:partyAffiliation ?guillermoParty .
    ?guillermoParty rdfs:label ?guillermoPartyLabel .
    FILTER (lang(?guillermoPartyLabel) = 'en')
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
16,10,train,Give me the person born as Georgeanne Marie Rice and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person dbo:birthName ""Georgeanne Marie Rice""@en .
  ?person dbo:spouse ?spouse .
  ?spouse rdfs:label ""Ted McGinley""@en .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
251,6,train,Give me the administration of Forza Italia (2013) and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
# Query for the administration of Forza Italia (2013)
SELECT ?administration WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Forza Italia""@en .
  OPTIONAL { 
    ?party dbo:leader ?administration .
    FILTER(YEAR(?date) = 2013)
  }
}

# Query for the location of the Battle of Marengo
SELECT ?location WHERE {
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Marengo""@en ;
          dbp:location ?location .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
838,1,train,Give me the band member of Kerber.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?group a dbo:Band ;
         rdfs:label ""Kerber""@en .
  
  ?member dbo:bandMember ?group .
  ?member rdfs:label ?bandMemberLabel .
  
  FILTER(LANG(?bandMemberLabel) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
747,5,train,"Give me the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?song WHERE {
  ?artist rdf:type dbo:Singer .
  ?artist foaf:name ""Amba Shepherd"" .
  ?work dbo:performer ?artist ;
        a dbo:Song .
  BIND(?work AS ?song)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
339,3,train,Who is the child of Christian IX of Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  dbr:Christian_IX_of_Denmark dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,4,2,2,0.6666666666666666,0.6666666666666666,0.6666666666666666
303,8,train,"Give me the party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?party 
WHERE {
  ?event dbo:eventDescription ""United States invasion of Panama""@en .
  ?event dbo:agent ?commander .
  ?commander a dbo:Politician .
  ?commander dbo:politicalParty ?party .
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
312,0,train,Give me the entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity dbp:province dbr:Province_of_Bergamo .
}
```",1,1,2,1,1,2,2,9,228,3,0,0.987012987012987,1.0,0.9934640522875817
48,0,train,Give me the band of Carl Falk.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carl Falk""@en .
  ?person dbo:memberOf ?band .
  ?band rdfs:label ?bandName .
  FILTER (lang(?bandName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
487,6,train,Give me the country of 2022 Vermont House of Representatives election and administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country ?administrationRole
WHERE {
  # Find the country associated with Vermont
  dbr:Vermont dbo:country ?country .

  # Find Phil Scott's role in the administration of Vermont
  OPTIONAL { 
    dbr:Phil_Scott dbo:positionHeld ?role .
    ?role dbo:officeHolder dbr:Phil_Scott ;
          dbo:administrativeArea dbr:Vermont ;
          rdfs:label ?administrationRole .
  }
}
```",2,2,3,1,2,3,2,20,0,1,1,0.0,0.0,0
547,13,train,Give me the resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace WHERE {
  VALUES ?actor { dbr:Michael_Caine }
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
  OPTIONAL { ?actor dbo:burialPlace ?burialPlace . }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
184,2,train,Give me the parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  dbr:Archduchess_Ilona_of_Austria dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
356,5,train,"Give me the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName WHERE {
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SoccerManager .
  ?person dbo:nationalityOrPlaceOfBirth dbr:Wolverhampton .
  ?person foaf:name ?personName .
}
```",1,3,2,1,1,3,2,20,0,0,17,0,0.0,0
959,4,train,"Give me the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?university WHERE {
  ?person dbo:almaMater ?university .
  ?university a dbo:University ;
              a dbo:EducationalOrganization ;
              a foaf:Organization ;
              dbo:country dbr:Japan .
  FILTER (str(?person) = ""Eiji Ōtsuka"")
}
```",1,5,2,1,1,3,3,71,0,0,1,0,0.0,0
179,1,train,Give me the parent of Ubol Ratana.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  dbr:Ubol_Ratana dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
528,16,train,Give me the commander in the work of --01-09.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?commander WHERE {
  ?event dct:temporal ?date .
  FILTER (STRSTARTS(STR(?date), ""2001-01-09T00:00:00Z"") || STRSTARTS(STR(?date), ""1999-01-09T00:00:00Z"") || STRSTARTS(STR(?date), ""1985-01-09T00:00:00Z""))
  ?event dbo:commander ?commander .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
177,6,train,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization ?headquarters
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joo Don-sik""@en .
  
  ?association dbo:agent ?person ;
               dbo:associatedWith ?organization .

  OPTIONAL { 
    ?organization dbo:headquarters ?headquarters .
  }
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
528,7,train,Give me the birth name of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?birthName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Narciso Campero"" .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
16,6,train,Give me the profession of Satomi Ishihara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Satomi Ishihara""@en .
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
617,5,train,"Who is the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successorLabel
WHERE {
  ?antiochus4 dbo:successor ?successor .
  ?successor a dbo:Monarch .
  ?successor rdfs:label ?successorLabel .
  
  FILTER (LANG(?successorLabel) = 'en')
  
  # Identify Antiochus IV Epiphanes
  VALUES ?antiochus4 {
    <http://dbpedia.org/resource/Antiochus_IV_Epiphanes>
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
161,1,train,Give me the military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?militaryForce WHERE {
  ?event a dbo:SpanishCivilWar .
  ?event dbo:participatedIn ?militaryForce .
}
```",1,1,2,1,1,3,3,71,0,0,514,0,0.0,0
404,10,train,"Give me the spouse of Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
747,12,train,Give me the band of Shèna and band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?shenaBand ?ambaBand WHERE {
  ?shena a dbo:MusicalArtist ;
         foaf:name ""Shèna Shepherd"" .
  ?shena dbo:band ?shenaBand .

  ?amba a dbo:MusicalArtist ;
        foaf:name ""Amba Shepherd"" .
  ?amba dbo:band ?ambaBand .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,2,train,Give me the person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:name ""Edin Dervišhalidović""@en . }
  FILTER EXISTS { ?person foaf:name ""Edin Dervišhalidović""@en . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
767,4,train,"Give me the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?adminEntity WHERE {
  ?green a dbo:Settlement ;
         rdfs:label ""Green""@en .
  OPTIONAL { ?green dbo:partOf ?adminEntity . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
485,8,train,"Give me the entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Western_European_Time .
}
```",2,3,3,2,1,2,3,28,0,8,46363,0.0,0.0,0
488,10,train,Give me the administration of Emperor Go-Yōzei and birth place of Enomoto Takeaki.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for the administration (reign) of Emperor Go-Yōzei
SELECT ?administration WHERE {
  ?emperor a dbo:Emperor ;
           foaf:name ""Go-Yōzei""@en .
  ?emperor dbo:reign ?administration .
}

UNION

# Query for the birth place of Enomoto Takeaki
SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Enomoto Takeaki""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
16,15,train,Who is the person born as the birth name of Ted McGinley?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName
WHERE {
  dbr:Ted_McGinley dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
197,3,train,Who is the awardee of Leroy P. Steele Prize?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipientName WHERE {
  ?prize a dbo:Award .
  ?prize rdfs:label ""Leroy P. Steele Prize""@en .
  ?prize dbo:recipient ?recipient .
  ?recipient foaf:name ?recipientName .
}
```",1,1,2,1,1,2,2,9,0,0,21,0,0.0,0
488,13,train,"Give me the death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace
WHERE {
  ?yuki a dbo:Person ;
        foaf:name ""Yūki Hideyasu""@en .
  
  ?yuki dbo:father ?father .

  ?father a dbo:Politician ; # Assuming the father is categorized under Politician
         dbo:deathPlace ?deathPlace .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
701,9,train,Give me the parent of Meritamen and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person (GROUP_CONCAT(?parentLabel; separator="", "") AS ?parents)
WHERE {
  VALUES (?individual) { 
    (dbr:Mertitamen) 
    (dbr:Henttawy_(19th_dynasty))
  }
  
  ?individual dbo:mother|dbo:father ?parent.
  ?parent rdfs:label ?parentLabel.
  FILTER(LANG(?parentLabel) = 'en')
}
GROUP BY ?person
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
10,8,train,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicalArtist WHERE {
  dbr:Matt_Colton a dbo:Person .
  dbr:Matt_Colton dbo:musicalArtist ?musicalArtist .
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
528,8,train,Give me the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?additionalInfo WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Narciso Campero Leyes""@en .
  OPTIONAL { ?person ?p ?o . FILTER(?p != rdfs:label) }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,15,train,Give me the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?thinkhaya a dbo:Person ;
             foaf:name ""Thinkhaya""@en .
  
  ?child dbo:parent ?thinkhaya ;
         dbo:father ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
360,0,train,Give me the writer of The Roaring Silence.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album a dbo:Album .
  ?album rdfs:label ""The Roaring Silence""@en .
  OPTIONAL { ?album dbo:composer ?writer . }
  FILTER (lang(?albumLabel) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,8,0,0.0,0
404,13,train,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Identify Ernest Augustus, Duke of Brunswick
  ?ernestAugustus a dbo:Duke ;
                  foaf:name ""Ernest Augustus, Duke of Brunswick""@en .

  # Find his children
  ?child dbo:childOf ?ernestAugustus .

  # Filter for children who are royalty
  ?child rdf:type dbo:Royalty .

  # Identify the parent of each royal child (other than Ernest Augustus)
  ?child dbo:parent ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
547,6,train,Give me the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film a dbo:Film ;
        rdfs:label ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
318,4,train,Give me the person born in 1970 and professional in Composer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?birthYear
WHERE {
  ?person a dbo:Person .
  ?person dbo:birthYear ?birthYear .
  FILTER (?birthYear = ""1970""^^xsd:gYear) .
  ?person dbo:name ?name .
  OPTIONAL { 
    ?person dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""composer""))
  }
}
ORDER BY ?name
```",2,2,3,1,2,2,2,9,0,0,7,0,0.0,0
626,6,train,Give me the commander in Battle of Leipzig and awardee of Order of St. Andrew.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:commanderOf dbr:Battle_of_Leipzig .
  ?person dbo:awardeeOf dbr:Order_of_St._Andrew .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,13,train,Give me the alma mater of the administration of George K. Nash.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater
WHERE {
  ?administration dbo:administrator dbr:George_K._Nash .
  ?administration dbo:almaMater ?almaMater .
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
9,13,train,Give me the alma mater of the awardee of Royal Medal.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMaterLabel WHERE {
  ?recipient a dbo:AwardRecipient .
  ?recipient dbo:award dbr:Royal_Medal_of_the_Kingdom_of_Brunei_Darussalam ; # Assuming this is the specific Royal Medal
             dbo:almaMater ?almaMater .
  ?almaMater rdfs:label ?almaMaterLabel .
  FILTER (lang(?almaMaterLabel) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,31,0,0.0,0
182,1,train,Give me the war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jagath Dias""@en .
  
  OPTIONAL { 
    ?person dbo:participatedIn ?war .
  }
  
  FILTER EXISTS { ?person rdfs:label ""Jagath Dias""@en . }
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
801,13,train,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
    ?work dbo:artist dbr:50_Cent ;
          a dbo:Song, dbo:MusicalWork .
    ?work dbo:producer ?producer .
}
```",2,5,3,2,1,3,3,71,27,3,11,0.9,0.7105263157894737,0.7941176470588235
534,4,train,"Give me the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?locationName WHERE {
  ?event a dbo:Event ;
         dbp:name ""2012 Pro12 Grand Final"" .
  ?event dbp:location ?location .
  ?location a dbo:ArchitecturalStructure ;
            rdfs:label ?locationName .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
645,3,train,"Give me the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""James Wilkes Maurice""@en .
  ?person dbo:residence ?residence .
  ?residence a dbo:Country .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
747,3,train,"Who is the person decedent, that is an athlete and a soccer player, at Zolotonosha?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName WHERE {
  ?person a dbo:Person .
  ?person dbo:sport dbr:Soccer ; 
          dbo:deathPlace dbr:Zolotonosha .
  ?person rdfs:label ?personName .
  FILTER (LANG(?personName) = 'en')
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
404,9,train,Give me the spouse of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?princess a dbo:Person ;
           rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  ?princess dbo:spouse ?spouse .

  ?child a dbo:Person ;
         rdfs:label ""Prince Ernest Augustus of Hanover (1914)""@en .
  
  ?spouse dbo:child ?child .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,12,train,Give me the spouse of Laodice IV and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?laodiceIV a dbo:Person ;
             rdfs:label ""Laodice IV""@en .
  
  ?laodiceIV dbo:spouse ?spouse .
  ?nysa dbo:parent ?laodiceIV ;
        rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .

  FILTER(LANG(?laodiceIVLabel) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
712,10,train,Who is the awardee of the show of Soviet Union?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Lenin Prize""@en .
}
```",2,2,3,2,1,3,2,20,0,0,1209,0,0.0,0
528,12,train,Give me the war of Orozimbo Barbosa and force of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?barbosaRole ?camperoRole
WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:participatedIn dbr:Orozimbo_Barboza ;
      dbo:opposingForce ?chileanForces .
  
  ?barbosaRole dbo:agent dbr:Orozimbo_Barboza ;
               dbo:role ""Military Advisor""@en ;
               dbo:relatedEvent ?war .

  ?camperoRole dbo:agent dbr:Narciso_Campero ;
               dbo:role ?camperoRoleDescription ;
               dbo:relatedEvent ?war .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
30,4,train,"Give me the native of Paris and professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:nativePlace dbr:Paris .
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  ?person dbo:occupation ?occupation3 .
  ?person dbo:occupation ?occupation4 .
  ?person dbo:occupation ?occupation5 .

  FILTER (
    {
      VALUES ?occupation1 { dbr:Financier dbr:Businessman }
    } &&
    {
      VALUES ?occupation2 { dbr:VineyardOwner }
    } &&
    {
      VALUES ?occupation3 { dbr:ArtCollector }
    } &&
    {
      VALUES ?occupation4 { dbr:RacehorseOwnerBreeder }
    }
  )
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
303,0,train,Give me the party of Guillermo Endara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Guillermo Endara""@en .
  ?person dbo:party ?party .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
754,5,train,Give me the child of Ram Khamhaeng.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  ?person dbo:name ""Ram Khamhaeng""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
820,1,train,Give me the child of Jack Schwartzman.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childLabel
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jack Schwartzman""@en .
  ?person dbo:child ?child .
  ?child rdfs:label ?childLabel .
}
```",1,1,2,1,1,3,2,20,0,3,2,0.0,0.0,0
10,1,train,Give me the band member of Luke Vibert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  dbr:Luke_Vibert dbo:bandMember ?band .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
959,11,train,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  ?eiji dbo:almaMater ?university .
  FILTER (?eiji = dbr:Eiji_Ōtsuka) .
  
  ?university a dbo:University ;
             dbo:country dbr:Japan .
}
```",2,6,3,2,1,3,3,71,0,1,267,0.0,0.0,0
365,4,train,Give me the reference to The Blasters and band of Phil Alvin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?theBlasters ?philAlvin
WHERE {
  ?theBlasters a dbo:Band ;
               rdfs:label ""The Blasters""@en .
  
  ?philAlvin a dbo:Person ;
             rdfs:label ""Phil Alvin""@en .

  OPTIONAL { ?philAlvin dbo:band ?theBlasters . }
  OPTIONAL { ?theBlasters dbo:musicalArtist ?philAlvin . }

  FILTER (lang(?theBlastersLabel) = 'en')
  FILTER (lang(?philAlvinLabel) = 'en')
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
963,0,train,Give me the entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity dbp:country ""Serbia""@en .
}
```",1,1,2,1,1,3,2,20,176,372,5252,0.32116788321167883,0.032424465733235076,0.058902275769745646
994,4,train,Give me the associated musical artist of Watchtower (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?artist dbo:associatedBand dbr:Watchtower_(band) .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
392,11,train,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@en .
  
  ?person dbo:residence ?settlement .
  ?settlement a dbo:Settlement ;
              dbo:country dbr:Italy .

  OPTIONAL { ?settlement dbo:locatedInProvince ?province . }
}
```",2,4,3,2,1,2,3,28,0,0,1,0,0.0,0
427,2,train,Give me the party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party
WHERE {
  dbr:Romano_Prodi a dbo:Person .
  dbr:Romano_Prodi dbo:partyAffiliation ?party .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
92,2,train,Give me the band of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joseph Michael"" .
  ?person dbo:band ?band .
  ?band rdfs:label ?bandName .
  FILTER (lang(?bandName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
303,4,train,"Give me the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country
WHERE {
  dbp:ValleDeAnton dbo:country ?country .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
64,4,train,Give me the alma mater of Jovan Hristić and entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?entityInSerbia
WHERE {
  # Find the alma mater of Jovan Hristić
  dbr:Jovan_Hristić dbo:almaMater ?almaMater .

  # Find an entity in Serbia
  ?entityInSerbia dbo:country dbr:Serbia .
}
```",2,2,3,1,2,2,2,9,1,5427,0,0.00018422991893883567,1.0,0.00036839196905507466
534,8,train,Give me the headquarter of the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v0 . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?ownerHeadquarters
WHERE {
  ?arena a dbo:Arena ;
         rdfs:label ""RDS Arena""@en .
  
  ?arena dbo:owner ?owner .

  ?owner dbp:headquarters ?ownerHeadquarters .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
48,9,train,"Give me the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?workTitle
WHERE {
  dbr:Shellback a dbo:MusicProducer .
  dbr:Shellback dbo:work ?work .
  ?work rdfs:label ?workTitle .
  FILTER (lang(?workTitle) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,1065,0,0.0,0
820,9,train,Give me the award of the author of Understanding Comics.,SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Scott_McCloud dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,4,4,0.0,0.0,0
281,3,train,Give me the award of Jonathon Band.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jonathon Band""@en .
  OPTIONAL { ?person dbo:award ?award . }
  
  FILTER EXISTS { 
    ?person foaf:name ""Jonathon Band""@en .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
77,6,train,Give me the war of Alexander Chechenskiy and force of Alexander I of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  # Find events related to Alexander Chechenskiy's revolutionary activities
  ?chechenskiy dbo:birthDate ?birthChechenskiy .
  ?chechenskiy dbo:deathDate ?deathChechenskiy .
  ?chechenskiy dbo:memberOf ?group .
  
  # Find events related to Alexander I's reign or opposition
  ?alexanderI dbo:reignStartYear ?startYear .
  ?alexanderI dbo:reignEndYear ?endYear .
  OPTIONAL { ?event dbo:relatedTo dbr:Aleksandr_I_of_Russia . }
  
  # Link events to revolutionary activities against the Tsarist regime
  ?event dbo:relatedTo ?group .

  FILTER (?birthChechenskiy > ?endYear) # Chechenskiy was active after Alexander I's reign

  VALUES ?chechenskiy { dbr:Aleksandr_Chechensky }
  VALUES ?alexanderI { dbr:Aleksandr_I_of_Russia }
}
```",2,2,3,1,2,3,2,20,0,0,6,0,0.0,0
285,7,train,Give me the parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parent
WHERE {
  ?tina a dbo:Person ;
        foaf:name ""Tina Onassis Niarchos""@en .
  
  ?tina dbo:child ?child .

  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
64,1,train,Give me the entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  ?entity dbp:country ""Serbia""@en .
}
```",1,1,2,1,1,2,2,9,176,372,5252,0.32116788321167883,0.032424465733235076,0.058902275769745646
404,8,train,"Who is the father of Ernest Augustus, Duke of Brunswick?","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
767,16,train,Give me the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/property/governor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?presidentOf ?termStart ?termEnd
WHERE {
  VALUES ?nash { dbr:George_Knox_Nash }
  ?nash a dbo:President .
  ?nash dbo:presidentOf ?presidentOf .
  OPTIONAL { ?nash dbo:termStart ?termStart . }
  OPTIONAL { ?nash dbo:termEnd ?termEnd . }
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
994,2,train,Give me the band member of Don Dokken.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMemberName
WHERE {
  ?person dbo:stageName ""Don Dokken"" .
  ?person a dbo/Musician .
  ?membership dbo:musicalArtist dbr:Dokken ;
              dbo:member ?bandMember .
  ?bandMember rdfs:label ?bandMemberName .
  FILTER (LANG(?bandMemberName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,8,train,Give me the war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author ?war
WHERE {
  ?book dbo:subject dbr:Sri_Lanka_Easter_bombings_2019 .
  ?book dbo:author ?author .
  ?author dbo:topic ?war .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
294,5,train,"Give me the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?person dbp:name ""Marion James"" .
  ?person dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?birthPlace a dbo:Settlement }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
64,2,train,"Give me the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation dbr:Writer ; # Assuming 'dbr:Writer' is the correct resource for writers.
           dbo:deathPlace dbr:Sremska_Kamenica .
}
```",1,2,2,1,1,2,2,9,0,0,2,0,0.0,0
778,4,train,Give me the author of Pushd and popd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?shell a dbo:SoftwareApplication .
  ?shell dbo:creator ?author .
  ?author foaf:name ?name .
  
  FILTER (
    EXISTS { ?shell dbo:title ""C Shell"" } ||
    EXISTS { ?shell dbo:title ""TENEX C Shell"" }
  )
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
16,8,train,Give me the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Gigi Rice""@en .
  OPTIONAL { ?person foaf:name ?birthName . }
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
996,0,train,Give me the force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryRank
WHERE {
  dbr:Dagobert_Sigmund_von_Wurmser dbo:militaryRank ?militaryRank .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
659,8,train,"Give me the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?societalEvent ?event ?militaryConflict WHERE {
  VALUES ?person { dbr:Rutger_Jan_Schimmelpenninck }
  
  OPTIONAL {
    ?person dbo:associatedEvent ?societalEvent .
    FILTER NOT EXISTS { ?societalEvent a dbo:MilitaryConflict } 
  }
  
  OPTIONAL {
    ?person dbo:event ?event .
  }
  
  OPTIONAL {
    ?person dbo:militaryConflict ?militaryConflict .
  }
}
```",1,4,2,1,1,3,3,71,0,0,2,0,0.0,0
488,1,train,Give me the death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace
WHERE {
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
197,6,train,Give me the birthplace of the awardee of Leroy P. Steele Prize.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Assuming the most recent awardee is Karen Uhlenbeck
  dbr:Karen_Uhlenbeck dbo:award dbr:Leroy_P._Steele_Prize .
  dbr:Karen_Uhlenbeck dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,2,9,0,1,21,0.0,0.0,0
378,14,train,Give me the claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?notableFor
WHERE {
  dbr:George_Augustus_Eliott dbo:notableFor ?notableFor .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
959,17,train,"Give me the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> ?v0 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName ?team
WHERE {
  ?season a dbo:SoccerSeason ;
          dbo:club dbr:Kashima_Antlers ;
          dbo:year ""1998""^^xsd:gYear .
  
  ?season dbo:manager ?manager .

  ?manager a dbo:SportsManager ;
           foaf:name ?managerName .

  OPTIONAL {
    ?manager dbo:team ?team .
  }
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
48,3,train,Give me the writer of Emotion (Carly Rae Jepsen album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?composer WHERE {
  dbr:Emotion_(Carly_Rae_Jepsen_album) dbo:composer ?composer .
}
```",1,1,2,1,1,3,2,20,0,0,48,0,0.0,0
547,3,train,Give me the child of William Haliburton.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  dbr:William_Haliburton dbo:child ?child .
  ?child rdfs:label ?childName .
  FILTER (LANG(?childName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
959,3,train,Who is the person born in 1958?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthYear ""1958""^^xsd:gYear .
}
```",1,1,2,1,1,3,3,71,2515,0,0,1.0,1.0,1.0
778,3,train,Give me the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award
WHERE {
  VALUES ?person { dbr:Ralph_L._Brinster }
  ?person dbo:honoraryTitle ?award .
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
547,4,train,Give me the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  ?person a dbo:Person ;
          foaf:name ""James Burton"" ;
          dbo:description ?description .
  FILTER(CONTAINS(LCASE(?description), ""property developer""))
  
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
10,11,train,Give me the professional in the birth name of Sharon Kao.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?profession 
WHERE {
  ?person rdfs:label ""Sharon Kao""@en .
  ?person dbo:birthName ?birthName .
  ?person dbo:profession ?profession .
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
767,7,train,"Give me the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?persona
WHERE {
  dbr:Matthew_Burland a dbo:FictionalCharacter .
  OPTIONAL { dbr:Matthew_Burland dbo:character ?persona . }
  OPTIONAL { dbr:Matthew_Burland dbo:role ?persona . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
285,10,train,Who is the professional in the award of Stan Lee?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?occupation
WHERE {
  VALUES ?stanLee { dbr:Stan_Lee }
  
  ?stanLee dbo:occupation ?occupation .
}
```",2,2,3,2,1,3,2,20,0,0,39640,0,0.0,0
701,8,train,Give me the father of Merneptah.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName WHERE {
  ?merneptah a dbo:Person ;
             rdfs:label ""Merneptah""@en .
  ?merneptah dbo:father ?father .
  ?father rdfs:label ?fatherName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
626,7,train,"Give me the commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  dbr:Alexander_I_of_Russia dbo:commander ?conflict .
  FILTER (isLiteral(?conflict) = false)
}
```",2,3,3,2,1,3,2,20,0,0,230,0,0.0,0
915,5,train,"Give me the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child
WHERE {
  ?spaulding rdf:type dbo:Person ;
             foaf:name ""Phillip Spaulding"" .
  
  ?spaulding dbo:child ?child .

  ?child rdf:type dbo:FictionalCharacter, dbo:SoapOperaCharacter .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
838,6,train,Give me the band member of Kerber and band of Raša Đelmaš.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?band1 WHERE {
  ?kerber dbo:bandMember ?band1 .
  FILTER(STR(?kerber) = ""Kerber"")
}

UNION

SELECT ?band2 WHERE {
  ?rašaĐelmaš dbo:bandMember ?band2 .
  FILTER(STR(?rašaĐelmaš) = ""Raša Đelmaš"")
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
356,8,train,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teamName WHERE {
  ?person a dbo:Person ;
          dbo:nationality dbr:Wolverhampton_Wanderers_F.C. ; # Assuming this as a proxy for Wolverhampton natives
          dbo:sport dbr:Soccer .
  
  ?person dbo:currentClub ?managerTeam ;
          dbo:formerPlayerFor ?playerTeam .

  ?managerTeam rdfs:label ?teamName .
  
  FILTER (CONTAINS(LCASE(?teamName), ""wolverhampton"") || CONTAINS(LCASE(?teamName), ""wolves""))
}
ORDER BY ?teamName
LIMIT 1
```",2,4,3,2,1,3,2,20,0,0,46,0,0.0,0
838,7,train,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?memberBand
WHERE {
  ?person dbo:bandMember dbp:YU_Grupa .
  ?person a dbo:Artist ;
          a dbo:MusicalArtist .
  ?person dbo:band ?memberBand .
}
```",2,4,3,2,1,3,2,20,0,0,21,0,0.0,0
827,9,train,"Who is the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?charlesAlexander dbo:birthName ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?parent dbo:child ?charlesAlexander .
  ?parent dbo:child ?child .
  ?child rdf:type/rdfs:subClassOf* dbo:Monarch .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
778,1,train,Give me the author of Chroot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName
WHERE {
  ?book a dbo:Book .
  ?book rdfs:label ""Chroot""@en .
  ?book dbo:author ?author .
  ?author foaf:name ?authorName .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
285,5,train,Who is the professional in ?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```
# No valid SPARQL query can be generated due to insufficient information.
```",1,1,2,1,1,3,2,20,0,0,39640,0,0.0,0
617,10,train,Give me the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?antiochus3 a dbo:Person ;
              foaf:name ""Antiochus III the Great""@en .
  
  ?child dbo:parent ?antiochus3 .

  ?nysa a dbo:Person ;
        foaf:name ""Nysa (wife of Pharnaces I of Pontus)""@en .
  
  ?nysa dbo:parent ?child .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
16,11,train,Give me the spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ted Martin McGinley""@en .
  ?person dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
747,9,train,Give me the person born on 1985-04-29 and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName ?bandName
WHERE {
    # Find the person born on 1985-04-29
    ?person a dbo:Person ;
            dbo:birthDate ""1985-04-29""^^xsd:date ;
            rdfs:label ?personName .
    
    FILTER (lang(?personName) = 'en')

    # Find Amba Shepherd's band
    dbr:Amba_Shepherd dbo:bandMember ?band .
    ?band rdfs:label ?bandName .

    FILTER (lang(?bandName) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
465,2,train,Give me the native of Prague.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:name ?name . }
  FILTER EXISTS { 
    ?person dbo:birthPlace dbr:Prague .
  } UNION
  FILTER EXISTS { 
    ?person dbo:residence dbr:Prague .
  }
}
```",1,1,2,1,1,2,2,9,0,0,1654,0,0.0,0
365,0,train,Give me the band of Phil Alvin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Phil Alvin"" .
  ?person dbo:musicalArtist ?band .
  ?band rdfs:label ?bandName .
  FILTER (lang(?bandName) = 'en')
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
328,7,train,"Who is the leader, that is an office holder and a politician, of Gustav Jonson?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderName WHERE {
  ?gustavJonson a dbo:Person ;
                foaf:name ""Gustav Jonson""@en .
  
  ?gustavJonson dbo:leader ?leader .

  ?leader a dbo:OfficeHolder, dbo:Politician ;
          foaf:name ?leaderName .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
404,12,train,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
    ?parent dbo:child ?child .
    FILTER (?parent = dbpedia:Ernest_Augustus,_Crown_Prince_of_Hanover)
    
    ?child dbo:parent ?grandChild .
    FILTER (?grandChild = dbpedia:Prince_Ernest_Augustus_of_Hanover_(1914))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
177,4,train,"Give me the headquarter of Ministry of Culture, Sports and Tourism and entity in South Korea.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters
WHERE {
  ?ministry a dbo:GovernmentAgency ;
            rdfs:label ""Ministry of Culture, Sports and Tourism""@en ;
            dbo:country dbr:South_Korea .
  ?ministry dbo:headquarter ?headquarters .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
161,5,train,Who is the predecessor of Indalecio Prieto?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  dbr:Indalecio_Prieto dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
915,7,train,"Give me the resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?resident
WHERE {
  # Find Stephen Verona's birthplace
  dbr:Stephen_Verona dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement
  ?birthPlace rdf:type dbo:Settlement .

  # Find residents of this settlement
  ?birthPlace dbo:resident ?resident .
}
```",2,3,3,2,1,3,2,20,0,0,15,0,0.0,0
339,9,train,Who is the child of the predecessor of Frederick VIII of Denmark?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?frederickVIII a dbo:Monarch ;
                 foaf:name ""Frederick VIII of Denmark""@en .
  
  ?predecessor dbo:successor ?frederickVIII .
  
  ?predecessor dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
345,5,train,"Who is the person born, that is a soccer player and a soccer manager, on 1978-09-15?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:sport dbr:Soccer .
  OPTIONAL { ?person dbo:managerTeam ?team . }
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1978 && MONTH(?date) = 9 && DAY(?date) = 15)
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
701,13,train,Give me the parent of the child of Ramesses II.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?ramesses2 dbo:child ?child .
  FILTER(STRSTARTS(STR(?ramesses2), ""http://dbpedia.org/resource/Ramesses_II""))
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
485,1,train,Give me the birth place of Thomas Warner (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Poet ;
          foaf:name ""Thomas Warner"" ;
          dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
184,17,train,Give me the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild
WHERE {
  ?margaret a dbo:Person ;
            foaf:name ""Margaret of Austria"" ;
            dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1925)
  
  ?parent dbo:child ?margaret .
  
  ?parent dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
115,2,train,Who is the alumnus of National University of San Marcos?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus WHERE {
  ?alumnus dbo:almaMater dbp:National_University_of_San_Marcos .
}
```",1,1,2,1,1,2,2,9,0,0,74,0,0.0,0
161,17,train,"Give me the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?person rdfs:label ""El Director""@en .
  ?event a dbo:Event ;
         dbo:participatedIn ?person .
  FILTER EXISTS { ?event dbo:name ?name . FILTER regex(?name, ""force"", ""i"") }
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
303,2,train,Give me the party of Arnulfo Arias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?party
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Arnulfo Arias"" .
  ?person dbo:party ?party .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
314,10,train,Give me the awardee of the award of Sergei Makovetsky.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardName
WHERE {
  VALUES ?person { dbr:Sergei_Makovetsky }
  ?person dbo:award ?award .
  ?award rdfs:label ?awardName .
  FILTER (lang(?awardName) = 'en')
}
```",2,2,3,2,1,2,3,28,0,0,951,0,0.0,0
9,6,train,Who is the awardee of Royal Medal?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?recipientName WHERE {
  ?award a dbo:Award ;
        rdfs:label ""Royal Medal""@en .
  ?award dbo:recipient ?recipient .
  ?recipient foaf:name ?recipientName .
}
```",1,1,2,1,1,3,3,71,0,0,45,0,0.0,0
161,13,train,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify Francisco Largo Caballero
  dbr:Franco_Largo_Caballero a dbo:Person .

  # Find his role in the Spanish Civil War
  OPTIONAL { 
    ?role dbo:agent dbr:Franco_Largo_Caballero .
    ?role dbo:place dbr:Spanish_Civil_War .
    ?role dbo:militaryForce ?militaryForce .
  }

  # Alternatively, find military forces associated with him during the Spanish Civil War
  OPTIONAL {
    ?association dbo:agent dbr:Franco_Largo_Caballero ;
                 dbo:place dbr:Spanish_Civil_War ;
                 dbo:militaryForce ?militaryForce .
  }
}
```",2,4,3,2,1,3,3,71,0,0,514,0,0.0,0
281,12,train,Give me the war of New Zealand Army and entity in Colony of New Zealand.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  ?army a dbo:Army ;
        rdfs:label ""New Zealand Army""@en .
  
  ?army dbo:participatedInWar ?war .

  FILTER (CONTAINS(LCASE(?war), ""world war i"") || CONTAINS(LCASE(?war), ""world war ii""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
701,11,train,Give me the parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?grandParent WHERE {
  ?nefertari a dbo:Person ;
             foaf:name ""Nefertari""@en .
  
  ?nefertari dbo:child ?child .
  
  ?child dbo:parent ?grandParent .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
161,4,train,"Give me the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  ?conflict rdf:type dbo:MilitaryConflict .
  ?conflict dbo:participatedIn [dbo:agent dbr:Franco_Francisco ] .
  OPTIONAL { ?conflict rdf:type dbo:Event . }
  OPTIONAL { ?conflict rdf:type dbo:SocietalEvent . }
}
```",1,4,2,1,1,3,3,71,0,0,12,0,0.0,0
488,5,train,"Who is the father, that is an office holder, of Matsudaira Tadamasa?",SELECT ?result WHERE { <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName ?officeHolderTitle
WHERE {
  VALUES ?matsudaira { dbr:Matsudaira_Tadamasa }
  
  ?matsudaira dbo:father ?father .
  ?father rdfs:label ?fatherName .
  OPTIONAL { 
    ?father dbo:title ?officeHolderTitle .
  }
  
  FILTER (lang(?fatherName) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
16,2,train,Give me the person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  OPTIONAL { 
    ?person foaf:name ""Georgeanne Marie Rice""@en .
  }
  FILTER NOT EXISTS { ?person foaf:name ""Georgeanne Marie Rice""@en . }
  OPTIONAL {
    ?person foaf:givenName ?givenName .
    ?person foaf:surname ?surname .
    FILTER (?givenName = ""Georgeanne"" && ?surname = ""Rice"")
  }
}
```",1,1,2,1,1,3,3,71,0,1048576,1,0.0,0.0,0
328,10,train,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of Order of Suvorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:head dbr:People's_Commissariat_of_Defense_of_the_Soviet_Union .
  ?person dbo:award dbr:Order_of_Suvorov .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,14,train,"Give me the person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName WHERE {
  ?person a dbo:Person .
  ?person dbo:name ?personName .
  ?deathEvent dbo:place dbr:Algiers .
  ?deathEvent dbo:agent ?person .
}
```",2,3,3,2,1,3,3,71,0,0,122,0,0.0,0
404,3,train,Give me the birth name of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Princess Victoria Louise of Prussia""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
701,12,train,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
# Query for Henuttawy's parent
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?henuttawy dbo:child ?person .
  FILTER (str(?person) = ""Henuttawy_(19th_dynasty)"")
  ?henuttawy dbo:parent ?parent .
}

UNION

# Query for Ramesses II's spouse
SELECT ?spouse
WHERE {
  ?ramesses2 dbo:spouse ?spouse .
  FILTER (str(?ramesses2) = ""Ramesses_II"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,11,train,Give me the person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Dino Merlin""@en .
  ?person dbo:birthName ?birthName .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
492,12,train,Give me the person decedent at Algiers and commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Condition for decedent at Algiers
  ?person dbo:deathPlace dbr:Algiers .

  # Condition for commander in Franco-Hova Wars
  ?event dbo:commander ?person ;
         dbo:partOf dbr:Franco_Hova_Wars .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
783,5,train,"Give me the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Priscilla Opoku-Kwarteng"" ;
          dbo:birthDate ?birthDate .
  ?person dbo:occupation dbo:Artist .
  ?person dbo:occupation dbo:MusicalArtist .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
963,5,train,"Give me the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?rulingParty
WHERE {
  ?city a dbo:City ;
        rdfs:label ""Sremski Karlovci""@en .
  
  OPTIONAL { 
    ?party dbo:location ?city ;
           a dbo:PoliticalParty .
    
    FILTER NOT EXISTS {
      ?party dbo:isRulingPartyOf ?otherLocation .
      ?otherLocation != ?city
    }
  }

  BIND(?party AS ?rulingParty)
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
285,1,train,Give me the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Aristotle_Onassis dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
487,0,train,Give me the country of 2022 Vermont House of Representatives election.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
  dbr:2022_Vermont_House_of_Representatives_election dbo:country ?country .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
177,5,train,Give me the entity in the residence of Alexander Gamelin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?residence
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alexander Gamelin""@en .
  ?person dbo:residence ?residence .
}
```",2,2,3,2,1,2,2,9,0,0,3065,0,0.0,0
465,0,train,Give me the death place of Jiřina Štěpničková.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace
WHERE {
  dbr:Jiřina_Štěpničková dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
404,11,train,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouseName
WHERE {
  ?person rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?person dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .
}
```",2,3,3,2,1,3,3,71,0,1,1,0.0,0.0,0
328,12,train,Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person (SAMPLE(?role) AS ?role)
WHERE {
  VALUES ?role { 
    ""commander of the Eastern Front"" 
    ""leader of People's Commissariat of Defense""
  }
  
  ?person a dbo:Person .
  ?person dbo:occupation dbr:Military_person .
  ?person dbo:wikiPageWikiLink ?link .

  FILTER (
    EXISTS {
      ?link rdfs:label ?roleLabel .
      FILTER (lang(?roleLabel) = 'en' && CONTAINS(LCASE(?roleLabel), LCASE(?role)))
    }
  )
}
GROUP BY ?person
HAVING(COUNT(DISTINCT ?role) = 2)
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,5,train,Who is the commander in Battle of Verdun?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?battle a dbo:MilitaryConflict ;
         rdfs:label ""Battle of Verdun""@en .
  ?battle dbp:commander ?commander .
}
```",1,1,2,1,1,3,3,71,1,16,16,0.058823529411764705,0.058823529411764705,0.058823529411764705
421,5,train,Give me the birth name of Dino Merlin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Dino Merlin""@en .
  OPTIONAL { ?person foaf:name ?birthName . }
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
996,3,train,Who is the awardee of 1778.0?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?recipient dbo:award dbr:Award_1778_0 .
}
```

Note: Replace `dbr:Award_1778_0` with the correct DBpedia resource identifier for the award if it is known. If ""1778.0"" directly corresponds to a specific award in DBpedia, ensure that the resource URI matches exactly.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
801,5,train,"Give me the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?rapper WHERE {
  ?rapper rdf:type dbo:Rapper .
}
```",1,2,2,1,1,3,3,71,0,0,1363,0,0.0,0
16,16,train,Give me the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?profession 
WHERE {
  ?series a dbo:TVSeries ;
          rdfs:label ""Unnatural (TV series)""@en .
  
  ?series dbo:starring ?actor .

  ?actor dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
391,12,train,Give me the actor of All About the Andersons and actor of The Departed.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . },"```sparql
# Query for ""All About the Andersons""
SELECT ?actor WHERE {
  ?movie dbo:title ""All About the Andersons""@en .
  ?movie dbo:starring ?actor .
}

UNION

# Query for ""The Departed""
SELECT ?actor WHERE {
  ?movie dbo:title ""The Departed""@en .
  ?movie dbo:starring ?actor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,9,train,Give me the person decedent at French Algeria and commander in Franco-Hova Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ?name .
  
  # Check for involvement in French Algeria
  OPTIONAL { 
    ?event dbo:location dbp:FrenchAlgeria ;
           dbo:agent ?person .
  }
  
  # Check for role as commander in Franco-Hova Wars
  OPTIONAL {
    ?warEvent dbo:militaryCommanderFor ?person ;
              rdfs:label ""Franco-Hova Wars"" .
  }

  FILTER (lang(?name) = 'en')
}
```",2,2,3,1,2,3,3,71,1,2097151,0,4.76837158203125e-07,1.0,9.53673861659116e-07
421,7,train,Give me the band member of Senidah and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember WHERE {
  ?senidah dbo:alias ""Senidah"" .
  ?senidah dbo:bandMember ?bandMember .

  OPTIONAL { 
    ?edin foaf:name ""Edin Dervišhalidović""@en .
    ?edin dbo:birthName ?birthName .
    FILTER(?bandMember = ?edin || ?bandMember foaf:name ?birthName)
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
184,7,train,Give me the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Margaret of Austria, Archduchess (1925)""@en .
  OPTIONAL { ?person dbo:birthYear ?year . FILTER(?year = 1925) }
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
285,9,train,Who is the child of the spouse of Aristotle Onassis?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?onassis a dbo:Person ;
           foaf:name ""Aristotle Onassis""@en .
  
  ?onassis dbo:spouse ?spouse .

  ?spouse dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,5,0,0,1.0,1.0,1.0
547,0,train,Give me the resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?restingPlace WHERE {
  ?person rdf:type dbo:Egyptologist .
  ?person rdfs:label ""James Burton (Egyptologist)""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  OPTIONAL { ?person dbo:burialPlace ?restingPlace . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
9,14,train,Give me the figure known as the nickname of Queen's University Belfast.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname
WHERE {
  ?university a dbo:EducationalInstitution ;
              rdfs:label ""Queen's University Belfast""@en .
  OPTIONAL { ?university dbo:commonName ?nickname . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,15,train,"Give me the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force
WHERE {
  dbr:Oliver_Cromwell dbo:militaryForce ?force .
}
```",2,3,3,2,1,3,3,71,0,0,60,0,0.0,0
801,16,train,"Give me the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/writer> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?artist rdf:type dbo:Rapper .
  ?artist dbo:work ?work .
  ?work rdf:type dbo:MusicalWork ;
        rdf:type dbo:Song .
}
```",2,6,3,2,1,3,3,71,0,0,2395,0,0.0,0
55,9,train,Give me the band member of Metallica and band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?metallicaMember ?newstedBand
WHERE {
  # Identify Jason Newsted's role in Metallica
  ?person a dbo:MusicalArtist ;
          foaf:name ""Jason Newsted"" ;
          dbo:member dbr:Metallica .
  
  # Find the band associated with Newsted
  ?band a dbo:Band ;
        foaf:name ""Newsted"" ;
        dbo:member ?person .

  BIND(?person AS ?metallicaMember)
  BIND(?band AS ?newstedBand)
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
429,0,train,Give me the administration of Andrew Johnson.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration
WHERE {
  dbr:Andrew_Johnson dbo:presidency ?administration .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
696,4,train,Who is the commander in Battle of Chishui River?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander
WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Chishui River""@en .
  OPTIONAL { ?battle dbo:commander ?commander . }
}
```",1,1,2,1,1,3,2,20,0,0,24,0,0.0,0
182,7,train,Give me the entity in Sri Lanka and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName ?warName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Mahesh Senanayake""@en ;
          dbo:nationality dbr:Sri_Lanka .
  
  OPTIONAL { 
    ?person dbo:militaryConflict ?war .
    ?war foaf:name ?warName .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
197,0,train,Give me the birthplace of Dumitru Nadu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Dumitru Nadu""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
92,11,train,"Give me the band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band rdf:type dbo:Band ;
        rdfs:label ""Nevermore""@en .
  
  ?band dbo:bandMember ?member .

  OPTIONAL { 
    ?member dbo:artist true .
  }

  FILTER (LANG(?band) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,12,0,0.0,0
391,2,train,Give me the actor of All About the Andersons.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:title ""All About the Andersons""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
626,10,train,Give me the award of the military force of Battle of Borodino.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award
WHERE {
  # Identify the Battle of Borodino
  dbr:Battle_of_Borodino dbo:participatingMilitaryUnit ?militaryUnit .
  
  # Filter for Russian military units
  ?militaryUnit dbo:country dbr:Russia .

  # Find awards associated with these military units or individuals
  OPTIONAL { ?militaryUnit dbo:award ?award . }
  FILTER(?award != """")
}
```",2,2,3,2,1,3,2,20,0,0,53,0,0.0,0
701,5,train,Give me the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?setiI a dbo:Pharaoh ;
         foaf:name ""Seti I""@en .
  ?setiI dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
303,9,train,Give me the entity in Panama and party of Arnulfo Arias.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInPanama ?party
WHERE {
  dbr:Ariás,_Arnulfo 
    dbo:birthPlace dbr:Panama ;
    dbo:partyAffiliation ?party .
  
  OPTIONAL { ?party rdfs:label ?partyLabel FILTER (lang(?partyLabel) = ""en"") }
  BIND(COALESCE(?partyLabel, ?party) AS ?entityInPanama)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
435,1,train,Give me the region of Greenwich Mean Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region
WHERE {
  dbr:Greenwich_Mean_Time dbo:timeZone ?gmt.
  ?gmt dbo:country ?region .
}
```",1,1,2,1,1,2,3,28,0,0,2484,0,0.0,0
54,11,train,Give me the child of the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?soeMinWimalaDewi a dbo:Person ;
                    foaf:name ""Soe Min Wimala Dewi""@en .
  ?soeMinWimalaDewi dbo:father ?father .
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
9,3,train,"Give me the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?organization ?name WHERE {
  ?organization a dbo:Organization .
  ?organization dbo:location ?place .
  ?place rdfs:label ""Belfast""@en .
  OPTIONAL { ?organization rdfs:label ?name FILTER (lang(?name) = 'en') }
}
```",1,2,2,1,1,3,3,71,0,0,57,0,0.0,0
492,1,train,Give me the commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?commander ?opposingCommander
WHERE {
  ?battle a dbo:Battle ;
          dbo:partOf dbr:Franco-Hova_Wars .
  
  OPTIONAL { ?battle dbo:commander ?commander . }
  OPTIONAL { ?battle dbo:opposingCommander ?opposingCommander . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
232,12,train,Give me the native of London and actor of Dog Soldiers (film).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film a dbo:Film ;
        dbo:title ""Dog Soldiers""@en .
  
  ?film dbo:castMember ?actor .

  ?actor dbo:birthPlace dbr:London .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country dbr:United_Kingdom .
}
```",1,1,2,1,1,3,2,20,42999,0,0,1.0,1.0,1.0
488,11,train,Give me the birth place of the commander in Boshin War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  dbr:Saig%C5%8D_Takamori dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,3,71,0,0,15,0,0.0,0
404,7,train,Who is the spouse of Princess Victoria Louise of Prussia?,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?person dbo:spouse ?spouse .
  ?person rdfs:label ""Princess Victoria Louise of Prussia""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
534,10,train,"Give me the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/owner> ?result . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?venue ?owner 
WHERE {
  ?event dbo:location ?venue .
  ?venue a dbo:Venue ;
         a dbo:ArchitecturalStructure .
  
  FILTER (str(?event) = ""Pro12_2012_Grand_Final"")
  
  OPTIONAL { ?venue dbo:owner ?owner . }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
232,10,train,Give me the child of Jon Pertwee and native of London.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person rdfs:label ""Jon Pertwee""@en .
  ?person dbo:child ?child .
  ?child dbo:nativePlace dbr:London .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
184,15,train,"Give me the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?landmarkLabel ?nativeLabel
WHERE {
  ?landmark a dbo:Landmark ;
            dbo:elevation ""96.0""^^xsd:float .
  
  OPTIONAL { 
    ?settlement dbo:hasPart ?landmark .
    ?settlement rdfs:label ?nativeLabel .
  }
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,3,3,2,1,3,3,71,0,0,3320,0,0.0,0
747,2,train,Give me the band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  dbr:Shèna dbo:band ?band .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
485,11,train,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region
WHERE {
  ?person a dbo:Naturalist ;
          foaf:name ""Joseph Whitaker"" .
  ?person dbo:birthPlace ?place .
  ?place rdf:type dbp:Region .
  BIND(?place AS ?region)
}
```",2,3,3,2,1,2,3,28,0,0,369,0,0.0,0
754,9,train,Give me the parent of the parent of Min Linka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandGrandParent WHERE {
  # Step 1: Find Min Linka's parent (spouse or child)
  ?minLinka a dbo:Person ;
            foaf:name ""Min Linka""@en .
  
  OPTIONAL { 
    ?parent dbo:child ?minLinka . 
    UNION
    ?parent dbo:spouse ?minLinka .
  }
  
  # Step 2: Find the parent's parent (grandparent)
  OPTIONAL {
    ?grandParent dbo:child ?parent .
    UNION
    ?grandParent dbo:spouse ?parent .
  }

  # Step 3: Find the grandparent's parent (great-grandparent)
  ?grandGrandParent dbo:child ?grandParent .
  UNION
  ?grandGrandParent dbo:spouse ?grandParent .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
177,0,train,Give me the entity in South Korea.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  ?entity dbo:country dbr:South_Korea .
}
LIMIT 10
```",1,1,2,1,1,2,2,9,10,0,3055,1.0,0.0032626427406199023,0.0065040650406504065
701,0,train,Give me the parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?mother WHERE {
  ?meritamen dbo:mother ?mother .
  ?meritamen rdfs:label ""Meritamen""@en .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
365,3,train,Give me the real name of The Blasters.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?officialName
WHERE {
  ?band a dbo:Band ;
        rdfs:label ""The Blasters""@en .
  OPTIONAL { ?band dbo:officialName ?officialName }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
996,2,train,Give me the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?elevation
WHERE {
  dbp:Lac_d'Avoriaz dbo:elevation ?elevation .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
9,8,train,Give me the nickname of Queen's University Belfast.,SELECT ?result WHERE { <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname
WHERE {
  <http://dbpedia.org/resource/Queen's_University_Belfast> 
    dbp:nickname ?nickname .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
161,10,train,Give me the military force of Rif War and commander in Biscay Campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?rifWarMilitaryForce ?rifWarCommander ?biscayCampaignMilitaryForce ?biscayCampaignCommander WHERE {
  # Rif War
  OPTIONAL {
    ?rifWar a dbo:MilitaryConflict ;
            rdfs:label ""Rif War""@en .
    ?rifWar dbo:militaryForce ?rifWarMilitaryForce .
    ?rifWar dbo:commander ?rifWarCommander .
  }

  # Biscay Campaign
  OPTIONAL {
    ?biscayCampaign a dbo:MilitaryConflict ;
                    rdfs:label ""Biscay Campaign""@en .
    ?biscayCampaign dbo:militaryForce ?biscayCampaignMilitaryForce .
    ?biscayCampaign dbo:commander ?biscayCampaignCommander .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,1,train,Give me the associated musical artist of Red Tide (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  dbr:Red_Tide (dbo:associatedMusicalArtist|dbo:band) ?artist .
  ?artist a dbo:Person .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
251,0,train,Give me the location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?location
WHERE {
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Marengo""@en .
  ?battle dbp:location ?location .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
915,4,train,"Give me the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?lizzie a dbo:FictionalCharacter ;
          dbp:name ""Lizzie Spaulding"" .
  
  ?lizzie dbo:parent ?parent .

  ?parent a dbo:FictionalCharacter ;
          dbo:actorIn ?soap .

  ?soap a dbo:SoapOpera .
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
16,13,train,Give me the professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professional WHERE {
  ?satomiIshihara a dbo:Person ;
                  foaf:name ""Satomi Ishihara""@en .
  ?satomiIshihara dbo:occupation ?profession .

  ?professional a dbo:Person ;
                dbo:occupation ?profession .
  FILTER(?professional != ?satomiIshihara)
}
```",2,2,3,2,1,3,3,71,0,0,19241,0,0.0,0
617,2,train,Give me the parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?nysa a dbo:Person ;
        foaf:name ""Nysa""@en .
  ?nysa dbo:spouse ?pharnacesI .
  ?pharnacesI foaf:name ""Pharnaces I of Pontus""@en .
  ?nysa dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
659,5,train,"Give me the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?entity rdf:type (dbo:MilitaryUnit|dbo:Organization) .
  ?entity rdfs:label ""Polish Horse""@en .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
391,7,train,Who is the professional in ?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }",# No query can be generated due to insufficient information in the question.,1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
659,10,train,Give me the military force of Napoleonic Wars and commander in German campaign of 1813.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Identify the military force involved in the German campaign of 1813
  ?campaign dbo:partOf dbr:Napoleonic_Wars ;
            dbo:location dbr:Germany ;
            dbo:date ""1813""^^xsd:gYear .
  
  ?campaign dbo:militaryForce ?militaryForce .

  # Find the commander of this military force during the campaign
  ?militaryForce dbo:commander ?commander .
}
```",2,2,3,1,2,3,3,71,0,0,6,0,0.0,0
179,6,train,Give me the person born as Mom Rajawongse Sirikit Kitiyakara and parent of Ubol Ratana.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Mom Rajawongse Sirikit Kitiyakara""@en .
  ?child dbo:parent ?person ;
         rdfs:label ""Ubol Ratana""@en .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
696,9,train,"Who is the member of the associated musical artist, that is an organisation and a group and a band, of The Boils?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedBand
WHERE {
  ?band a dbo:MusicalArtist ;
        rdfs:label ""The Boils""@en .
  
  OPTIONAL { 
    ?band dbo:associatedBand ?associatedBand .
  }
  
  FILTER EXISTS { ?associatedBand a (dbo:Organization|dbo:Group) }
}
```",2,5,3,2,1,3,2,20,0,0,6,0,0.0,0
696,10,train,Give me the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award 
WHERE {
  ?battle dbo:wikiPageRedirects dbr:Battle_of_Chishui_River .
  ?battle dbo:commander ?commander .
  OPTIONAL { ?commander dbo:honoursReceived ?award . }
}
```",2,2,3,2,1,3,2,20,0,0,9,0,0.0,0
492,4,train,"Give me the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?positionHeld
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joseph C. Satterthwaite""@en .
  OPTIONAL { ?person dbo:positionHeld ?positionHeld . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
767,6,train,Give me the administration of George K. Nash.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?position ?startDate ?endDate
WHERE {
  VALUES ?nash { dbr:George_K._Nash }
  ?nash dbo:positionHeld ?position .
  OPTIONAL { ?position dbo:startDate ?startDate . }
  OPTIONAL { ?position dbo:endDate ?endDate . }
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
747,10,train,Give me the band of Shèna and person born on 1985-04-29.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
# Query to find Shèna's band
SELECT ?band WHERE {
    ?shena dbo:associatedBand ?band .
    ?shena rdfs:label ""Shèna""@en .
}

UNION

# Query to find a person born on 1985-04-29
SELECT ?person WHERE {
    ?person rdf:type dbo:Person ;
            dbo:birthDate ""1985-04-29""^^xsd:date .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
356,2,train,"Give me the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessorSeason
WHERE {
  ?season a dbo:SoccerClubSeason ;
          dbo:club dbr:Sacramento_Republic_FC ;
          dbo:year ""2015""^^xsd:gYear .
  
  OPTIONAL {
    ?season dbo:previousSeason ?predecessorSeason .
  }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
177,1,train,"Give me the headquarter of Ministry of Culture, Sports and Tourism.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters
WHERE {
  ?ministry a dbo:GovernmentAgency ;
            rdfs:label ""Ministry of Culture, Sports and Tourism""@en .
  ?ministry dbo:headquarters ?headquarters .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
666,5,train,Give me the nickname of England national beach soccer team.,SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname
WHERE {
  dbr:England_national_beach_soccer_team dbo:commonName ?nickname .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
378,5,train,"Give me the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?label ?partOfLabel
WHERE {
  ?peninsularWar a dbo:MilitaryConflict ;
                 rdfs:label ""Peninsular War""@en .
  
  OPTIONAL { 
    ?peninsularWar dbo:partOf ?relatedConflict .
    ?relatedConflict rdfs:label ?partOfLabel .
  }
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
435,7,train,"Give me the territory administered from Reykjavík and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory ?description WHERE {
  ?territory a dbo:Country ;
             dbo:capital dbr:Reykjavík .
  
  OPTIONAL { 
    ?territory dbo:description ?description .
  }
}
```

This query attempts to find countries with Reykjavík as their capital, which should point us towards Iceland. The optional clause tries to fetch any available description that might relate to the constitutional article.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
626,2,train,Who is the commander in Battle of Paris (1814)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Paris (1814)""@en .
  ?battle dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
528,11,train,Give me the war of the military force of Battle of Pisagua.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  ?battle rdf:type dbo:Battle .
  ?battle rdfs:label ""Battle of Pisagua""@en .
  
  ?militaryForce dbo:participatedInBattle ?battle .
  ?militaryForce rdfs:label ?forceLabel .

  FILTER (lang(?forceLabel) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
281,13,train,"Give me the entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bob Heffron""@en .
  ?person dbo:birthPlace ?place .
  ?place rdf:type dbo:Country ;
         rdfs:label ?country .
}
```",2,3,3,2,1,3,3,71,0,1,1,0.0,0.0,0
783,4,train,Give me the persona of Ebony Reigns.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?birthDate ?deathDate ?spouse ?occupation ?award ?genre ?album WHERE {
  VALUES ?ebony { dbr:Ebony_Reigns }
  
  ?ebony a dbo:Person ;
        dbo:birthName ?birthName ;
        dbo:birthDate ?birthDate ;
        dbo:deathDate ?deathDate ;
        dbo:spouse ?spouse ;
        dbo:occupation ?occupation .
        
  OPTIONAL { ?ebony dbo:award ?award . }
  OPTIONAL { ?ebony dbo:genre ?genre . }
  OPTIONAL { ?ebony dbo:album ?album . }

  FILTER (lang(?birthName) = 'en' || lang(?birthName) = '')
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
492,15,train,Give me the work of the author of French Algeria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work
WHERE {
  ?author a dbo:Person ;
          dbo:nationality dbr:French ;
          dbo:birthPlace ?place .
  
  FILTER(CONTAINS(LCASE(STR(?place)), ""algeria""))
  
  ?author dbo:work ?work .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
378,3,train,Give me the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName
WHERE {
  dbr:Carl_Pontus_Gahn a dbo:Person .
  dbr:Carl_Pontus_Gahn dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
435,2,train,"Give me the work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?articleContent
WHERE {
  dbr:Iceland_Constitution_of_1874 dbo:hasArticle [
    a dbo:Article ;
    dbo:number ""62""^^xsd:string ;
    dbo:hasSection [
      a dbo:Section ;
      dbo:number ""IV""^^xsd:string ;
      dbo:text ?articleContent .
    ] .
  ]
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
281,14,train,"Give me the war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryUnit WHERE {
  ?person a dbo:Person ;
          foaf:name ""Heather Roy""@en .
  OPTIONAL { ?person dbo:militaryUnit ?militaryUnit . }
}
```",2,3,3,2,1,3,3,71,0,0,14,0,0.0,0
712,4,train,Give me the show of Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?show ?showLabel WHERE {
  ?show a ?type .
  FILTER(?type IN (dbo:TelevisionShow, dbo:RadioProgram)) .
  
  OPTIONAL { ?show dbo:country dbr:Soviet_Union . }
  OPTIONAL { ?show dbo:location dbr:Soviet_Union . }

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
48,7,train,Give me the band of the writer of Emotion (Carly Rae Jepsen album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  # Identify the album ""Emotion""
  dbr:Emotion_(Carly_Rae_Jepsen_album) dbo:albumSong ?song .

  # Find writers of these songs
  ?song dbo:lyricist ?writer .
  
  # Check if any writer is associated with a band
  OPTIONAL { ?writer dbo:band ?band . }
}
```",2,2,3,2,1,3,2,20,0,0,95,0,0.0,0
404,5,train,"Who is the parent, that is a royalty, of Prince George William of Hanover?",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parent
WHERE {
  ?person dbo:name ""Prince George William of Hanover""@en .
  ?person dbo:parent ?parent .
  ?parent rdf:type ?type .
  FILTER EXISTS { ?type rdfs:subClassOf* dbo:Royalty }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
285,0,train,Give me the parent of Alexander Onassis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?person dbo:birthName ""Alexander Emmanuilidis""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
281,0,train,"Give me the war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warName
WHERE {
  ?person rdfs:label ""Beauchamp Seymour, 1st Baron Alcester""@en .
  ?person dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         rdfs:label ?warName .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
281,6,train,"Give me the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
754,3,train,Give me the parent of May Hnin Htapi.,SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?person dbo:birthName ""May Hnin Htapi""@en.
  ?person dbo:parent ?parent.
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
429,5,train,Give me the administration of the father of Martha Johnson Patterson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father ?administration 
WHERE {
  ?martha a dbo:Person ;
          foaf:name ""Martha Johnson Patterson""@en .
  
  ?martha dbo:father ?father .

  OPTIONAL {
    ?father dbo:positionHeld ?position .
    ?position dbp:officeName ?administration .
  }
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
48,6,train,Give me the band of Carl Falk and band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandCarlFalk ?bandMurdaMook WHERE {
  # Query for Carl Falk's band
  { 
    ?carlFalk a dbo:MusicArtist ;
              foaf:name ""Carl Falk""@en .
    OPTIONAL { ?carlFalk dbo:musicArtist ?bandCarlFalk . }
  } UNION
  # Query for Murda Mook's band
  {
    ?murdaMook a dbo:BandMember ;
               foaf:name ""Murda Mook""@en .
    OPTIONAL { ?murdaMook dbo:band ?bandMurdaMook . }
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
182,5,train,Give me the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nationality
WHERE {
  dbr:Tamara_Kunanayakam a dbo:Person .
  dbr:Tamara_Kunanayakam dbo:nationality ?nationality .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
44,5,train,Give me the band member of the band of John Pettibone.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""John Pettibone""@en .
  ?person dbo:bandMember ?band .
}
```",2,2,3,2,1,2,2,9,0,0,2,0,0.0,0
666,10,train,"Give me the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname
WHERE {
  dbr:The_Football_Association a dbo:Soccer_Club ;
                               dbo:sport dbr:Fútbol ;
                               dbo:country dbr:England .
  OPTIONAL { dbr:The_Football_Association dbo:commonName ?nickname . }
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
232,6,train,"Give me the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?militaryConflict
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sean Pertwee""@en .
  
  OPTIONAL { 
    ?film dbo:starringRole ?person ;
          rdfs:label ?filmLabel .
    FILTER (lang(?filmLabel) = 'en')
  }
  
  OPTIONAL {
    ?militaryConflict dbo:participant ?person ;
                      rdfs:label ?conflictLabel .
    FILTER (lang(?conflictLabel) = 'en')
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
820,6,train,Give me the child of Jack Schwartzman and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jack Schwartzman""@en .
  ?person dbo:child ?child .
  ?child foaf:name ?childName .
  OPTIONAL { ?child dbo:profession ?profession . }
  FILTER EXISTS { ?child dbo:profession ?profession }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
54,0,train,Give me the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  dbr:Anawrahta dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,2,3,0.0,0.0,0
488,16,train,"Who is the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?politicianFather WHERE {
  ?matsudairaTadamasa a dbo:Person ;
                      foaf:name ""Matsudaira Tadamasa""@en .
  
  ?matsudairaTadamasa dbo:father ?father1 .

  OPTIONAL { ?father1 dbp:officeHolder ?office . }
  
  FILTER EXISTS { ?father1 dbp:officeHolder ?office }

  ?father1 dbo:father ?father2 .

  OPTIONAL {
    ?father2 dbo:politicalPartyMember ?party .
    ?father2 dbo:memberOfParliament ?parliament .
  }

  FILTER EXISTS { 
    ?father2 dbo:politicalPartyMember ?party . 
    UNION
    ?father2 dbo:memberOfParliament ?parliament .
  }
  
  BIND(?father2 AS ?politicianFather)
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
391,16,train,"Give me the claim to fame, that is a work, of the spouse of Sherry Hormann.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName ?notableWork
WHERE {
  ?sherry a dbo:FilmDirector ;
          foaf:name ""Sherry Hormann""@en .
  
  ?sherry dbo:spouse ?spouse .

  ?spouse foaf:name ?spouseName .
  OPTIONAL { ?spouse dbo:notableWork ?work . 
             ?work foaf:name ?notableWork }
}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
666,8,train,Give me the figure known as the nickname of England national beach soccer team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v0 . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname
WHERE {
  ?team rdfs:label ""England national beach soccer team""@en .
  ?team dbp:nickname ?nickname .
}
```",2,2,3,2,1,3,2,20,0,1,5,0.0,0.0,0
617,7,train,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandChild WHERE {
  ?boleslausI dbo:child ?child1 .
  FILTER (str(?boleslausI) = ""Boleslaus_I,_Duke_of_Bohemia"")
  
  ?child1 dbo:child ?grandChild .
  
  ?grandChild a ?royaltyClass .
  FILTER (
    ?royaltyClass IN (
      dbo:Monarch,
      dbo:Queen,
      dbo:King
    )
  )
}
```",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
328,14,train,"Give me the leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeLeader
WHERE {
  # Identify the office related to Joseph Stalin
  ?office dbo:head dbr:Joseph_Stalin .
  
  # Ensure this office is a government agency
  ?office rdf:type dbo:GovernmentAgency .

  # Find the leader of this office
  ?office dbo:leader ?officeLeader .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
9,15,train,"Who is the mayor, that is a politician, of the entity, that is an organisation, in Belfast?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor WHERE {
  ?organization a dbo:Organization ;
                dbo:location dbr:Belfast .
  ?mayor dbo:role ?role ;
         rdf:type dbo:Politician .
  ?role rdfs:label ""Mayor""@en .
  ?organization dbo:mayor ?mayor .
}
```",2,4,3,2,1,3,3,71,0,0,13,0,0.0,0
915,10,train,"Give me the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childCharacter WHERE {
  # Identify Lizzie Spaulding and her parent
  ?lizzie dbr:Lizzie_Spaulding .
  ?parent dbo:spouse ?lizzie ;
          a dbo:FictionalCharacter .

  # Find the child of that parent who is also a fictional character in a soap opera
  ?parent dbo:child ?childCharacter .
  ?childCharacter a dbo:FictionalCharacter .
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
820,2,train,Who is the author of Understanding Comics?,SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName WHERE {
  dbr:Understanding_Comics dbo:author ?author .
  ?author foaf:name ?authorName .
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
981,2,train,"Give me the time zone in Salak, North Sumatra.","SELECT ?result WHERE { <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZone
WHERE {
  ?place a dbo:Place ;
        rdfs:label ""Salak, North Sumatra""@en .
  OPTIONAL { ?place dbo:timeZone ?timeZone . }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
182,9,train,Give me the war of Jagath Dias and entity in Sri Lanka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?person dbo:name ""Jagath Dias""@en .
  ?person dbo:participatedIn ?war .
  ?war rdfs:label ?warLabel .
  FILTER(CONTAINS(LCASE(?warLabel), ""sri lankan civil war""))
}
```",2,2,3,1,2,2,3,28,0,0,5,0,0.0,0
184,3,train,"Give me the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
    ?landmark a dbo:Landmark .
    ?landmark dbo:elevation ""96.0""^^xsd:float .
    ?landmark dbo:settlement ?settlement .
}
```",1,2,2,1,1,3,3,71,0,0,162,0,0.0,0
232,13,train,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?militaryConflict WHERE {
  VALUES ?person { dbr:Sean_Pertwee }
  
  ?person dbo:claimToFame ?fame .
  
  OPTIONAL {
    ?fame rdf:type dbo:Film ;
          rdfs:label ?film .
  }
  
  OPTIONAL {
    ?fame rdf:type dbo:MilitaryConflict ;
          rdfs:label ?militaryConflict .
  }
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
498,3,train,"Who is the member, that is an artist, of Mortician (band)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?member WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""Mortician""@en .
  ?band dbo:bandMember ?member .
  ?member rdf:type dbo:Artist .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
626,5,train,Give me the award of Aleksey Petrovich Yermolov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award
WHERE {
  dbr:Aleksey_Petrovich_Yermolov dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,6,0,0,1.0,1.0,1.0
392,0,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?name
WHERE {
  ?entity a dbo:Place .
  ?entity dbo:country dbr:Italy .
  OPTIONAL { ?entity rdfs:label ?name FILTER (lang(?name) = 'en') }
}
LIMIT 10
```",1,1,2,1,1,2,3,28,10,10,13082,0.5,0.0007638252367858234,0.0015253203172666259
328,0,train,Give me the awardee of Order of Suvorov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:recipient dbpedia-ru:Орден_Суворова .
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
487,3,train,Give me the administration of Patricia McCoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?position (GROUP_CONCAT(?organization; separator="", "") AS ?organizations)
WHERE {
  VALUES ?person { dbr:Patricia_McCoy }
  ?person dbo:positionHeld ?position .
  OPTIONAL { ?position dbo:organization ?organization . }
}
GROUP BY ?position
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
9,7,train,"Give me the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?name
WHERE {
  ?entity a dbo:Organization ;
          a dbo:EducationalInstitution ;
          dbp:country ""Northern Ireland""@en .
  ?entity rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
```",1,3,2,1,1,3,3,71,0,0,134,0,0.0,0
92,16,train,"Give me the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate WHERE {
  # Find the movie resource for ""Return to Nuke 'Em High Volume 1""
  dbr:Return_to_Nuke_'Em_High_Volume_1 dbo:starring ?person .
  
  # Ensure the person is an artist
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""artist""))

  # Retrieve the birth date of the person
  OPTIONAL { ?person dbo:birthDate ?birthDate }
}
```",2,3,3,2,1,3,3,71,0,0,205,0,0.0,0
30,0,train,Give me the native of Paris.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Paris .
}
```",1,1,2,1,1,2,2,9,4483,0,2,1.0,0.9995540691192865,0.9997769848349687
754,4,train,Give me the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?ramKhamhaengURI
WHERE {
  ?ramKhamhaengURI a dbo:Person ;
                   rdfs:label ""Ram Khamhaeng the Great""@en .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
981,9,train,"Give me the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . ?result <http://dbpedia.org/property/timeZone> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region
WHERE {
  ?place rdfs:label ""Salak, North Sumatra""@en .
  ?place dbo:timeZone ?timezone .
  ?timezone dbp:region ?region .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
820,3,train,Give me the award of Scott McCloud.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award
WHERE {
  dbr:Scott_McCloud dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,4,4,0.0,0.0,0
488,6,train,"Who is the father, that is a politician, of Yūki Hideyasu?",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?yuki dbo:father ?father .
  FILTER EXISTS { ?father rdf:type dbo:Politician . }
  VALUES ?yuki { <http://dbpedia.org/resource/Yūki_Hideyasu> }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
360,11,train,Give me the reference to the author of Blinded by the Light.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?song dbo:title ""Blinded by the Light"" .
  ?song dbo:lyricist ?author .
  FILTER(?author = dbr:Bruce_Springsteen)
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
994,14,train,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember
WHERE {
  ?dokken a dbo:MusicalArtist ;
          foaf:name ""Donald Maynard Dokken""@en .
  ?dokken dbo:bandMember ?bandMember .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
421,3,train,Who is the awardee of [[#Awards and nominations?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?awardName WHERE {
  ?awardee a dbo:Person .
  ?awardee dbo:award ?award .
  ?award rdfs:label ?awardName .
  FILTER (lang(?awardName) = 'en')
}
ORDER BY ?awardName
```",1,1,2,1,1,2,3,28,0,99069,113,0.0,0.0,0
378,1,train,Give me the war of Joaquín Blake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person dbo:name ""Joaquín Blake""@en .
  ?person dbo:participatedIn ?war .
  FILTER EXISTS { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
617,6,train,Who is the child of Antiochus III the Great?,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?parent dbo:child ?child .
  ?parent foaf:name ""Antiochus III the Great""@en .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
696,6,train,Give me the landmark at elevation of 50 and birth place of Tim Brennan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Query to find landmark at elevation of 50 meters
SELECT ?landmark WHERE {
    ?landmark rdf:type dbo:Landmark .
    ?landmark dbo:elevation ""50""^^xsd:decimal .
}

# Query to find the birthplace of Tim Brennan
SELECT ?birthPlace WHERE {
    ?timBrennan rdf:type dbo:Person ;
                foaf:name ""Tim Brennan""@en ;
                dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
92,17,train,Give me the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Joseph Michael""@en .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
16,5,train,Who is the actor of Unnatural (TV series)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?series a dbo:TVSeries ;
          rdfs:label ""Unnatural (TV series)""@en .
  
  ?series dbo:castMember ?actor .
  ?actor rdfs:label ?actorLabel .
  FILTER(LANG(?actorLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
312,6,train,Give me the entity in the birthplace of Giorgio Grigolli.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthplace
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Giorgio Grigolli""@en ;
          dbo:birthPlace ?birthplace .
}
```",2,2,3,2,1,2,2,9,1,1,13091,0.5,7.638252367858234e-05,0.0001527417137620284
617,1,train,Give me the parent of Mieszko II Lambert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  dbr:Mieszko_II_Lambert dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
427,11,train,Give me the reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>

SELECT ?label ?sameAs
WHERE {
  ?party rdf:type dbo:PoliticalParty .
  ?party rdfs:label ""Italian People's Party (1994)""@en .
  OPTIONAL { ?party owl:sameAs ?sameAs . }
}
```",2,2,3,2,1,3,3,71,0,1,2,0.0,0.0,0
92,7,train,Give me the birth name of Joseph Michael.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joseph Michael""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,2,train,Give me the military force of Napoleonic Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country (GROUP_CONCAT(?role; separator="", "") AS ?roles)
WHERE {
  VALUES ?war { dbr:Napoleonic_Wars }
  
  # France as the main force
  OPTIONAL {
    ?war dbo:opponent ?country .
    BIND(""Opponent"" AS ?role)
  }

  # Allies and opponents of France
  OPTIONAL {
    ?war dbo:ally ?country .
    FILTER(?country != dbr:France) 
    BIND(""Ally"" AS ?role)
  }
  
  # Specific countries known to be involved
  VALUES ?knownCountry { 
    dbr:United_Kingdom 
    dbr:Austria 
    dbr:Prussia 
    dbr:Russia 
    dbr:Spain 
    dbr:Portugal 
  }

  OPTIONAL {
    FILTER(?country IN ?knownCountry)
    BIND(""Known Involved"" AS ?role)
  }
  
  # Ensure we only get countries
  ?country a dbo:Country .
}
GROUP BY ?country
```",1,1,2,1,1,3,3,71,0,0,1051,0,0.0,0
392,10,train,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?sportEvent
WHERE {
  # Find the time zone of Aguilar de Segarra
  dbr:Aguilar_de_Segarra dbo:timeZone ?timeZone .
  
  # Determine the region associated with this time zone
  ?timeZone dbo:region ?region .

  # Identify any sports event related to this region
  ?region dbo:sport ?sportEvent .
}
```",2,3,3,2,1,2,3,28,0,0,49990,0,0.0,0
92,12,train,Give me the associated musical artist of Jim Sheppard and band of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist1 ?band2 WHERE {
  ?person1 rdfs:label ""Jim Sheppard""@en .
  ?person1 dbo:associatedBand ?artist1 .

  ?person2 rdfs:label ""Joseph Michael""@en .
  ?person2 dbo:associatedBand ?band2 .
}
```",2,2,3,1,2,3,3,71,1,3,0,0.25,1.0,0.4
378,11,train,Give me the war of the person born as Carl Pontus Gahn.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war
WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  OPTIONAL { ?person dbo:militaryService ?service . }
  OPTIONAL { ?service dbo:participatedIn ?war . }
  FILTER (lang(?person) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
54,9,train,Give me the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?individual WHERE {
  ?thinkhaya a dbo:Person ;
             foaf:name ""Thinkhaya of Pagan""@en .
  
  ?child dbo:parent ?thinkhaya .

  ?thadoMinsaw a dbo:Person ;
               foaf:name ""Thado Minsaw of Prome""@en .

  ?parent dbo:child ?thadoMinsaw .

  FILTER (?child = ?parent)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,11,train,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  ?parent dbo:child ?child .
  FILTER(?parent = dbpedia:Seleucus_II_Callinicus) .

  ?child dbo:child ?grandchild .
  
  ?grandchild a dbo:RoyalFamilyMember .
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
747,0,train,Give me the person born on 1985-04-29.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
    ?person a dbo:Person .
    ?person dbo:birthDate ?date .
    FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
}
```",1,1,2,1,1,3,3,71,30,0,0,1.0,1.0,1.0
318,5,train,Give me the person born in the founding year of Eel Pie Publishing.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the founding year of Eel Pie Publishing
  dbr:Eel_Pie_Publishing dbo:foundingYear ?foundingYear .
  
  # Find persons born in that year
  ?person a dbo:Person ;
          dbo:birthDate ?birthDate .

  FILTER (YEAR(?birthDate) = ?foundingYear)
}
```",2,2,3,2,1,2,2,9,0,0,2810,0,0.0,0
232,11,train,Give me the child of the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  dbr:John_Pertwee dbo:birthName ""John Devon Roland Pertwee"" .
  dbr:John_Pertwee dbo:child ?child .
  ?child rdfs:label ?childName .
  FILTER (LANG(?childName) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
547,1,train,Give me the resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  dbr:Simon_Cadell dbo:finalRestingPlace ?restingPlace .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
378,7,train,"Give me the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?trigge a dbo:Person ;
          foaf:name ""Thomas Trigge""@en .
  
  ?trigge dbo:participatedIn ?war .

  ?war a dbo:MilitaryConflict ;
      a dbo:SocietalEvent ;
      a dbo:Event .
}
```",1,4,2,1,1,3,3,71,0,0,7,0,0.0,0
754,6,train,Give me the parent of Loe Thai and parent of May Hnin Thwe-Da.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

# Query to find the parent(s) of Loe Thai
SELECT ?parent WHERE {
  ?s dbo:birthName ""Loe Thai""@en .
  ?s dbo:parent ?parent .
}

UNION

# Query to find the parent(s) of May Hnin Thwe-Da
SELECT ?parent WHERE {
  ?s dbo:birthName ""May Hnin Thwe-Da""@en .
  ?s dbo:parent ?parent .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,14,train,Give me the reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?character a dbo:FictionalCharacter ;
             dbo:alias ""Black Hood"" .
  ?character dbo:alterEgo ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,0,98447,0,0.0,0
626,3,train,"Give me the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict
WHERE {
  dbr:Alexander_I_of_Russia dbo:participatedIn ?conflict .
}
```",1,2,2,1,1,3,2,20,0,0,25,0,0.0,0
996,9,train,Who is the awardee of the elevation of Lac d'Avoriaz?,SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee
WHERE {
  dbr:Lac_d%27Avoriaz dbo:award ?award .
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
827,5,train,"Who is the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894)?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  VALUES ?charlesAugustus { dbr:Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach }
  
  ?charlesAugustus dbo:child ?child .
  
  OPTIONAL { 
    ?child a ?class .
    FILTER (
      ?class IN (dbo:Monarch, dbo:RoyalFamilyMember)
    )
  }
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
528,3,train,"Give me the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?event rdf:type dbo:Event .
  ?event dbo:country dbr:Chile .
}
```",1,2,2,1,1,3,3,71,0,35,34,0.0,0.0,0
392,5,train,"Give me the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@en .
  
  ?person dbo:residence ?residence .

  ?residence rdf:type dbp:PopulatedPlace ;
             dbo:country dbr:Italy .
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
801,10,train,Give me the associated musical artist of Chris Taylor (music producer) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  dbr:Chris_Taylor_(music_producer) dbo:associatedBand ?artist .
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
303,10,train,"Give me the entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?country
WHERE {
  ?location rdfs:label ""El Valle de Antón""@en .
  ?location dbo:country ?country .
}
```",2,3,3,2,1,2,3,28,0,1,991,0.0,0.0,0
54,2,train,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
747,11,train,Give me the person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Get the birth date of Pavlo Khudzik
  VALUES (?pavloBirthDate) { 
    SELECT ?birthDate WHERE {
      dbr:Pavlo_Khudzik dbo:birthDate ?birthDate .
    }
  }

  # Find other persons with the same birth date
  ?person a dbo:Person ;
          dbo:birthDate ?pavloBirthDate .

  FILTER (?person != dbr:Pavlo_Khudzik)
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
404,16,train,"Who is the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?princeGeorgeWilliam a dbo:Person ;
                      foaf:name ""Prince George William of Hanover""@en .
  
  ?princeGeorgeWilliam dbo:parent ?parent .

  ?parent rdf:type dbo:Monarch .

  ?parent dbo:child ?child .
  
  ?child rdf:type dbo:Monarch .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
421,1,train,Give me the native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Socialist_Federal_Republic_of_Yugoslavia .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,2,3,28,5399,5268,0,0.5061404331114653,1.0,0.6721025768704096
498,5,train,"Give me the band of the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandOrganization
WHERE {
  ?solace a dbo:Band ;
          rdfs:label ""Solace of Requiem""@en .
  
  ?solace dbo:band ?organization .
  ?organization a dbo:Band .

  FILTER(LANG(?solaceLabel) = 'en')
}
```",2,4,3,2,1,2,2,9,0,0,11,0,0.0,0
427,17,train,"Who is the person born, that is an office holder and a politician, as the birth name of Romano Prodi?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Romano Prodi""@en .
  OPTIONAL { ?person foaf:name ?birthName . }
  FILTER EXISTS { 
    ?person dbo:occupation ?occupation .
    FILTER (CONTAINS(LCASE(str(?occupation)), ""politician"") || CONTAINS(LCASE(str(?occupation)), ""office holder""))
  }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
360,4,train,"Give me the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace
WHERE {
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  FILTER (isBlank(?deathPlace) || 
          (rdf:type/rdfs:subClassOf*|rdfs:subClassOf*/rdf:type)* dbo:Settlement)
}
```",1,2,2,1,1,2,3,28,0,0,2,0,0.0,0
547,11,train,Give me the resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?restingPlace WHERE {
  ?james a dbo:Person ;
         foaf:name ""James Burton"" ;
         dbp:occupation ""Property developer"" .
  
  ?james dbo:child ?child .

  OPTIONAL { 
    ?child dbo:deathPlace ?restingPlace .
  }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
617,8,train,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandparent WHERE {
  ?richeza a dbo:Person ;
           foaf:name ""Richeza of Poland"" ;
           dbo:father ?father .
  
  ?father dbo:father|dbo:mother ?grandparent .

  FILTER EXISTS { ?grandparent a dbo:Monarch }
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
391,10,train,"Give me the actor of All About the Andersons and native of Compton, California.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName WHERE {
  ?movie dbo:title ""All About the Andersons""@en .
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER (CONTAINS(LCASE(?actorName), ""actor"")) # Ensures we are selecting actors
  OPTIONAL { ?actor dbo:birthPlace dbr:Compton,_California . }
  FILTER EXISTS { ?actor dbo:birthPlace dbr:Compton,_California . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,9,train,Give me the associated musical artist of Red Tide (band) and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?artistRedTide ?artistSASlayer WHERE {
  ?redTideBand a dbo:Band ;
               rdfs:label ""Red Tide (band)""@en .
  ?redTideBand dbo:musicalArtist ?artistRedTide .

  ?sASlaveBand a dbo:Band ;
              rdfs:label ""S.A. Slayer""@en .
  ?sASlaveBand dbo:musicalArtist ?artistSASlayer .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
547,10,train,Give me the resting place of James Burton (Egyptologist) and resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?finalRestingPlace WHERE {
  { 
    ?person a dbo:Person ;
            rdfs:label ""James Burton (Egyptologist)""@en .
    OPTIONAL { ?person dbo:finalRestingPlace ?finalRestingPlace . }
  } UNION {
    ?person a dbo:Person ;
            rdfs:label ""Alan Cunningham""@en .
    OPTIONAL { ?person dbo:finalRestingPlace ?finalRestingPlace . }
  }
}
```",2,2,3,1,2,3,3,71,0,2,1,0.0,0.0,0
251,4,train,"Give me the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Sicily .
  OPTIONAL { ?region dbp:governingParty ?party . FILTER(?region = dbr:Sicily) }
  ?party rdfs:label ?partyName .
  FILTER(LANG(?partyName) = ""en"")
}
```",1,3,2,1,1,2,3,28,0,2,1,0.0,0.0,0
915,0,train,"Give me the resident of Springfield, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resident
WHERE {
  ?location a dbo:City ;
            dbo:name ""Springfield"" ;
            dbo:state dbr:Illinois .
  ?resident dbo:residence ?location .
}
```",1,1,2,1,1,3,2,20,0,0,15,0,0.0,0
294,9,train,"Give me the resting place of Edwin A. Keeble and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query to find the resting place of Edwin A. Keeble
SELECT ?restingPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Edwin A. Keeble""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}

UNION

# Query to find an entity in Nashville, Tennessee
SELECT DISTINCT ?entity ?location WHERE {
  ?entity a ?type ;
          dbo:location ?location .
  FILTER(CONTAINS(LCASE(STR(?location)), ""nashville, tennessee""))
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
9,5,train,"Give me the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?medal a dbo:Award .
  ?medal rdfs:label ""Royal Medal""@en .
  OPTIONAL { ?medal dbo:awardedBy dbr:The_Royal_Society_of_London_for_Improving_Natural_Knowledge . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
754,1,train,Give me the parent of May Hnin Thwe-Da.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  dbr:May_Hnin_Thwe-Da dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
77,7,train,Give me the war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?war
WHERE {
  ?person dbo:award <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> .
  ?person dbo:participatedInWar ?war .
}
```",2,2,3,2,1,3,2,20,0,0,22,0,0.0,0
142,3,train,Give me the actor of Papa wa Newscaster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName WHERE {
  ?film a dbo:Film .
  ?character dbo:characterName ""Papa wa Newscaster"" ;
             dbo:inFilm ?film .
  ?film dbo:starring ?actor .
  ?actor foaf:name ?actorName .
}
```",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
115,3,train,Who is the awardee of National Order of Scientific Merit?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?recipientLabel WHERE {
  ?award a dbo:Award ;
         rdfs:label ""National Order of Scientific Merit""@en .
  
  ?award dbo:recipient ?recipient .
  ?recipient rdfs:label ?recipientLabel .
}
```",1,1,2,1,1,2,2,9,0,0,9,0,0.0,0
312,4,train,Give me the entity in Italy and entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
# Query for an entity in Italy (Rome)
SELECT ?entity WHERE {
  ?entity a dbo:City .
  ?entity rdfs:label ""Rome""@en .
}

UNION

# Query for an entity in Province of Bergamo (Bergamo)
SELECT ?entity WHERE {
  ?entity a dbo:City .
  ?entity rdfs:label ""Bergamo""@en .
}
```",2,2,3,1,2,2,2,9,0,0,228,0,0.0,0
754,2,train,Give me the parent of Min Linka.,SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?type
WHERE {
  <http://dbpedia.org/resource/Min_Linka> rdf:type ?type .
}
```",1,1,2,1,1,3,2,20,0,13,2,0.0,0.0,0
365,5,train,"Give me the band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?person a dbo:Artist ;
          a dbo:MusicalArtist ;
          dbo:role dbr:Vocalist ;
          dbo:role dbr:Musician ;
          dbo:role dbr:Songwriter .
  ?person dbo:band ?band .
  ?band rdfs:label ?bandName .
  FILTER(LANG(?bandName) = 'en')
}
```",2,4,3,2,1,2,2,9,0,0,2,0,0.0,0
44,4,train,Give me the band member of Undertow (band) and band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?member WHERE {
  {
    ?band a dbo:Band ;
          rdfs:label ""Undertow""@en .
    ?band dbo:bandMember ?member .
  }
  UNION
  {
    ?band a dbo:Band ;
          rdfs:label ""Sledgeback""@en .
    ?band dbo:bandMember ?member .
  }
}
```",2,2,3,1,2,2,2,9,0,3,1,0.0,0.0,0
528,14,train,Give me the force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?person a dbo:Person ;
          foaf:name ""Narciso Campero Leyes""@en .
  
  OPTIONAL { 
    ?person dbo:commanderOf ?force .
  }
  
  FILTER EXISTS { ?person dbr:Narciso_Campero_Leyes . }
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
994,8,train,"Who is the person born, that is a musical artist, as Donald Maynard Dokken?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person WHERE {
  ?person dbo:birthName ""Donald Maynard Dokken"" .
  ?person rdf:type dbo:MusicalArtist .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
435,10,train,Give me the region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region
WHERE {
  ?chiefdom a dbo:AdministrativeRegion ;
            rdfs:label ""Bombali Shebora Chiefdom""@en .
  
  OPTIONAL { 
    ?chiefdom dbo:timeZone ?timezone .
    ?timezone dbo:region ?region .
  }
}
```",2,2,3,2,1,2,3,28,0,0,2484,0,0.0,0
996,4,train,Who is the native of Palestine (region)?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Palestine_(region) .
}
```",1,1,2,1,1,3,2,20,0,0,47,0,0.0,0
365,2,train,"Give me the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbo:Artist .
  ?person a dbo:MusicalArtist .
  ?person dbo:vocalist ?vocalistRole .
  ?person dbo:musician ?musicianRole .
  ?person dbo:songwriter ?songwriterRole .
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
314,7,train,Give me the person deceased at Madrid and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Madrid .
  ?person dbo:militaryCommanderOf ?event .
  ?event rdfs:label ""Spanish Civil War""@en .
  ?person foaf:name ?name .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
232,7,train,"Give me the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Francois,_King_of_France ; # French nationality
          dbo:occupation dbo:Politician ; # Occupation as politician
          dbo:birthPlace dbr:France . # Born in France
  ?person foaf:name ?name .
}
```",1,3,2,1,1,3,3,71,0,0,270,0,0.0,0
547,9,train,Give me the resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  {
    VALUES ?person { dbr:James_Burton_(Egyptologist) }
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  } UNION {
    VALUES ?person { dbr:Simon_Cadell }
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
429,2,train,Who is the father of Martha Johnson Patterson?,SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Martha Johnson Patterson""@en .
  ?person dbo:father ?father .
  ?father foaf:name ?fatherName .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
328,9,train,Give me the awardee of Order of Suvorov and commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:name ?name .
  ?person dbo:receivedAward dbr:Order_of_Suvorov .
  
  # Assuming there is a way to identify commanders on the Eastern Front
  OPTIONAL { 
    ?person dbo:militaryCommanderOf ?unit .
    ?unit dbo:participatedInMilitaryConflict dbr:Eastern_Front_(World_War_II) .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
747,15,train,"Give me the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate
WHERE {
  ?person a dbo:Athlete ;
          a dbo:SoccerPlayer ;
          dbo:birthDate ?birthDate .
  
  OPTIONAL { 
    ?person dbo:deathPlace dbr:Zolotonosha .
  }
  
  FILTER EXISTS { ?person dbo:deathPlace ?place . }
}
```",2,4,3,2,1,3,3,71,1,8923,0,0.00011205737337516809,1.0,0.00022408963585434172
435,6,train,Give me the territory administered from Reykjavík and region of Greenwich Mean Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?territory ?gmtRegion
WHERE {
  # Territories administered from Reykjavík (Iceland)
  ?i dbp:capital ""Reykjavík""@en .
  ?i dbo:administrativeTerritory ?territory .

  # Regions using Greenwich Mean Time
  ?r dbp:timeZone ""GMT"" .
  BIND(?r AS ?gmtRegion)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
339,2,train,Who is the predecessor of Frederick VIII of Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessorLabel
WHERE {
  ?frederickVIII a dbo:Monarch ;
                 foaf:name ""Frederick VIII of Denmark""@en .
  ?frederickVIII dbo:predecessor ?predecessor .
  ?predecessor rdfs:label ?predecessorLabel .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
142,2,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region
WHERE {
  dbr:Japan_Standard_Time dbo:timeZoneRegion ?region .
}
```",1,1,2,1,1,2,2,9,0,0,2255,0,0.0,0
747,16,train,"Who is the writer of the work, that is a song, of Amba Shepherd?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?composerName WHERE {
  ?song a dbo:Song ;
        dbo:work ?work .
  ?work dbo:artist dbr:Amba_Shepherd .
  ?song dbo:composer ?composer .
  ?composer foaf:name ?composerName .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
30,6,train,Give me the professional in the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession 
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Édouard Alphonse James de Rothschild""@en .
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
55,0,train,Give me the band member of Guns N' Roses.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName WHERE {
  ?band a dbo:Band ;
        foaf:name ""Guns N' Roses""@en .
  ?bandMember dbo:band ?band ;
              dbo:bandMember ?member .
  ?member foaf:name ?memberName .
}
```",1,1,2,1,1,2,3,28,0,0,55,0,0.0,0
701,6,train,Give me the child of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  dbr:Ramesses_II dbo:child ?child .
  ?child rdfs:label ?childName .
  FILTER (LANG(?childName) = ""en"")
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
827,7,train,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?grandchild WHERE {
  # Find Maria Pavlovna's children who are royalty
  ?child dbo:parent dbr:Maria_Pavlovna_of_Russia ;
         rdf:type dbo:Monarch .
  
  # From the identified child, find their child (Maria Pavlovna's grandchild)
  ?grandchild dbo:parent ?child .
}
```",2,3,3,2,1,3,2,20,0,0,6,0,0.0,0
528,1,train,Give me the war of Orozimbo Barbosa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Orozimbo Barbosa""@en .
  ?person dbo:participatedIn ?war .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
487,10,train,"Give me the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName
WHERE {
  ?person a dbo:SoccerPlayer ;
          foaf:name ""Phil Scott"" .
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
303,1,train,Give me the entity in Panama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  ?entity dbo:country dbr:Panama .
}
```",1,1,2,1,1,2,3,28,851,0,140,1.0,0.858728557013118,0.9239956568946797
492,8,train,"Give me the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  dbr:Algeria dbo:capital ?capital .
  ?capital rdf:type dbo:Settlement .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
179,7,train,Give me the person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Get Sirikit's birth name
  VALUES (?sirikit) { <http://dbpedia.org/resource/Sirikit> }
  ?sirikit dbo:birthName ?birthName .

  # Find other persons with the same birth name
  ?person a dbo:Person ;
          dbo:birthName ?birthName .
  
  FILTER(?person != ?sirikit)
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
391,5,train,Who is the spouse of Sherry Hormann?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:FilmDirector ;
          foaf:name ""Sherry Hormann""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
963,2,train,Give me the time zone of Herzegovina-Neretva Canton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZone
WHERE {
  dbr:Herzegovina-Neretva_Canton dbo:timeZone ?timeZone .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
232,14,train,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native WHERE {
  # Find Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:residence ?residence .
  
  # Ensure the residence is a settlement and in Britain
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Identify natives of this British settlement
  ?native dbo:nativePlace ?residence .
}
```",2,4,3,2,1,3,3,71,0,0,9121,0,0.0,0
77,0,train,Give me the war of Alexander Chechenskiy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alexander Chechenskiy""@en .
  
  OPTIONAL { ?person dbo:participatedIn ?war . }
  FILTER EXISTS { ?person foaf:name ""Alexander Chechenskiy""@en }
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
827,8,train,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father 
WHERE {
  # Identify Charles Augustus
  VALUES ?charlesAugustus { dbr:Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach }

  # Find his children
  ?charlesAugustus dbo:child ?child .

  # Filter for royalty status (assuming a title or similar property indicates royalty)
  OPTIONAL {
    ?child dbo:title ?title .
    FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"")
  }

  # Find the father of that child
  ?child dbo:father ?father .

  # Ensure the father is Charles Augustus
  FILTER (?father = ?charlesAugustus)
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
115,0,train,Give me the alma mater of Vladimir Cerrón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMaterLabel
WHERE {
  ?person dbo:almaMater ?almaMater .
  ?almaMater rdfs:label ?almaMaterLabel .
  
  FILTER (LANG(?almaMaterLabel) = 'en')
  
  VALUES ?person { <http://dbpedia.org/resource/Vladimir_Cerrón> }
}
```",1,1,2,1,1,2,2,9,0,2,2,0.0,0.0,0
16,4,train,Who is the person born as Ted Martin McGinley?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Ted Martin McGinley""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
44,2,train,Give me the band of John Pettibone.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""John Pettibone""@en .
  
  ?membership dbo:member ?person ;
              dbo:musicalArtist ?band .
  
  ?band rdfs:label ?bandName .
  FILTER (lang(?bandName) = 'en')
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
427,7,train,Give me the birth name of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName
WHERE {
  dbr:Romano_Prodi dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
488,7,train,"Who is the spouse, that is a royalty, of Tokugawa Masako?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName WHERE {
  ?tokugawaMasako a dbo:Person ;
                  foaf:name ""Tokugawa Masako""@en .
  
  ?tokugawaMasako dbo:spouse ?spouse .

  ?spouse a dbo:Monarch ;
          foaf:name ?spouseName .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
701,17,train,"Give me the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?battle dbp:battleName ""Battle of Perire"" .
  ?commander dbo:commanded ?battle ;
             a dbo:Person ;
             (dbo:royalTitle|dbo:monarch) ?title .
  ?commander dbo:father ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
959,12,train,Give me the manager of 2013 Júbilo Iwata season and native of Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName WHERE {
    ?team a dbo:SoccerClub ;
          dbo:officialWebsite ?website .
    
    FILTER(CONTAINS(LCASE(str(?website)), ""jubilo iwata""))
    
    ?team dbo:manager ?manager .
    ?manager foaf:name ?managerName ;
            dbo:nationality dbr:Japan .

    # Assuming there's a property or way to specify the season, if available
    # This part might need adjustment based on actual DBpedia schema for seasons
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
232,9,train,Give me the actor of Dog Soldiers (film) and child of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor (GROUP_CONCAT(?child; separator="", "") AS ?children)
WHERE {
  # Find actors in ""Dog Soldiers""
  dbr:Dog_Soldiers_(film) dbo:starring ?actor .
  
  # Find children of Jon Pertwee
  dbr:Jon_Pertwee dbo:child ?child .

  # Check if any actor is also a child of Jon Pertwee
  OPTIONAL { ?actor dbo:child ?child . }
}
GROUP BY ?actor
HAVING (COUNT(?child) > 0)
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,4,train,"Who is the child, that is a royalty, of Seleucus II Callinicus?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Seleucus II Callinicus""@en .
  ?person dbo:child ?child .
  ?child a dbo:Royalty .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
294,3,train,"Who is the awardee, that is a politician, of Distinguished Service Medal (U.S. Army)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?awardee a dbo:Politician .
  ?awardee dbo:recipient dbr:Distinguished_Service_Medal_(United_States_Army) .
}
```",1,2,2,1,1,2,3,28,0,0,11,0,0.0,0
547,16,train,Give me the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?show a dbo:TVSeries ;
        rdfs:label ""Ally McBeal""@en .
  ?show dbo:actor ?actor .
}
```",2,2,3,2,1,3,3,71,0,0,22,0,0.0,0
659,6,train,"Give me the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?regiment rdf:type dbo:MilitaryUnit .
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  ?regiment dbo:participatedIn ?war .
  FILTER (rdf:type(?war, dbo:MilitaryConflict) && dbo:isPartOfWar(?war))
}
```",1,3,2,1,1,3,3,71,0,0,19,0,0.0,0
182,0,train,Give me the war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  VALUES ?person { dbr:Mahesh_Senanayake }
  ?person dbo:participatedIn ?war .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
54,14,train,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor WHERE {
  # Find Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .
  
  # Identify the child who is an office holder and royalty
  ?child dbo:childOf ?thihapate ;
         a dbo:Person ;
         dbp:officeHolder ?office ;
         dbo:royalty ?royalty .

  # Find predecessor in the office held by this child
  ?office dbo:predecessor ?predecessor .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
339,8,train,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?childFather WHERE {
  ?grandDuchess a dbo:Person ;
                foaf:name ""Elena Vladimirovna of Russia""@en .
  
  ?grandDuchess dbo:child ?child .

  ?child dbo:father ?childFather .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
77,10,train,"Who is the mayor of the territory administered, that is an organisation, from Warsaw?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization ?mayor WHERE {
  ?territory dbo:administrativeCapital dbr:Warsaw .
  ?organization dbo:headquarterLocation ?territory .
  OPTIONAL { ?organization dbo:mayor ?mayor . }
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
318,3,train,Give me the profession of Robert Xavier Rodriguez.,SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession
WHERE {
  dbr:Robert_Xavier_Rodriguez a dbo:Person .
  dbr:Robert_Xavier_Rodriguez dbo:occupation ?profession .
}
```",1,1,2,1,1,2,2,9,1,1,1,0.5,0.5,0.5
963,7,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbp:timeZone ""Central European Time"" .
}
```",2,3,3,2,1,3,2,20,0,0,173261,0,0.0,0
435,4,train,Give me the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZone
WHERE {
  ?chiefdom rdfs:label ""Bombali Shebora Chiefdom""@en .
  ?chiefdom dbo:partOf ?district .
  ?district dbo:country dbr:Sierra_Leone .
  dbr:Sierra_Leone dbo:timeZone ?timeZone .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
488,9,train,Give me the death place of Tokugawa Ieyasu and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?birthPlace
WHERE {
  # Death place of Tokugawa Ieyasu
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
  
  # Birth place of Enomoto Takeaki
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
534,7,train,"Give me the birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childBirthPlace
WHERE {
  # Identify Desmond FitzGerald
  ?desmond a dbo:Person ;
           foaf:name ""Desmond FitzGerald"" ;
           dbo:spouse ?spouse .

  # Find his children who are politicians and office holders
  ?desmond dbo:child ?child .
  ?child a dbo:Person ;
         dbo:officeHolder ?office .

  # Get the birthplace of such a child
  ?child dbo:birthPlace ?childBirthPlace .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
285,4,train,Give me the award of Stan Lee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Stan_Lee dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,4,5,0.0,0.0,0
534,2,train,"Who is the native, that is a politician, of Essex?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX db: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Politician .
  ?person dbo:birthPlace db:Essex .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,2,2,1,1,3,2,20,89,88,0,0.5028248587570622,1.0,0.6691729323308271
161,14,train,"Give me the commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?force WHERE {
  ?militaryUnit dbo:commander dbr:Emilio_Mola .
  ?militaryUnit dbo:event ?event .
  ?militaryUnit dbo:militaryUnit ?force .
}
```",2,3,3,2,1,3,3,71,0,0,85,0,0.0,0
820,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```
# No valid SPARQL query can be generated due to lack of specific information.
```",1,1,2,1,1,3,2,20,0,0,39640,0,0.0,0
314,4,train,Give me the award of Sergei Makovetsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sergei Makovetsky""@en .
  OPTIONAL { ?person dbo:honoraryTitle ?award . }
  FILTER (str(?person) = str(dbr:Sergei_Makovetsky))
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
404,17,train,Who is the father of the spouse of Princess Victoria Louise of Prussia?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?princess a dbo:Person ;
           rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  ?princess dbo:spouse ?spouse .

  ?spouse dbp:father ?father .
}
```",2,2,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
485,6,train,Give me the entity in United Kingdom and birth place of Thomas Warner (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?birthPlace
WHERE {
  ?entity a dbo:Person ;
          foaf:name ""Thomas Warner"" ;
          dbo:occupation dbo:Poet .
  
  ?entity dbo:birthPlace ?birthPlace .

  OPTIONAL { 
    ?birthPlace dbo:country dbr:United_Kingdom .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
312,3,train,Give me the birthplace of Giorgio Grigolli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Giorgio Grigolli"" .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
232,8,train,"Give me the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?sylvieBermann a dbo:Person ;
                 foaf:name ""Sylvie Bermann""@en .
  
  ?sylvieBermann dbo:residence ?residence .

  ?residence a dbo:Settlement .

  OPTIONAL { 
    ?residence dbo:country dbr:United_Kingdom .
  }

  FILTER EXISTS {
    ?residence dbo:country dbr:United_Kingdom
  }
}
```",1,3,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
747,4,train,Give me the birth date of Pavlo Khudzik.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthDate
WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Pavlo Khudzik""@en .
  ?person dbo:birthDate ?birthDate .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
197,1,train,Give me the birthplace of George Lusztig.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  dbr:George_Lusztig a dbo:Person .
  dbr:George_Lusztig dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
312,1,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?name
WHERE {
  ?entity a dbo:Place .
  ?entity dbo:country dbr:Italy .
  OPTIONAL { ?entity rdfs:label ?name FILTER (lang(?name) = 'en') }
}
LIMIT 10
```",1,1,2,1,1,2,2,9,10,10,13082,0.5,0.0007638252367858234,0.0015253203172666259
9,17,train,"Give me the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://dbpedia.org/property/nickname> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?nickname WHERE {
  ?entity a dbo:Organization ;
         a dbo:EducationalInstitution ;
         dbp:country ""Northern Ireland""@en .
  
  OPTIONAL { 
    ?entity rdfs:label ?nickname FILTER (lang(?nickname) = 'en') .
  }
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
16,17,train,Give me the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName
WHERE {
  ?person dbo:almaMater dbr:Ohio_State_University .
  OPTIONAL { ?person foaf:name ?birthName . }
  FILTER (BOUND(?birthName))
}
```",2,2,3,2,1,3,3,71,4,436,86,0.00909090909090909,0.044444444444444446,0.01509433962264151
429,4,train,Give me the country of 77th Ohio Infantry Regiment and administration of Andrew Johnson.,SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . },"```sparql
# Query for the country of 77th Ohio Infantry Regiment
SELECT ?country WHERE {
  ?regiment a dbo:InfantryRegiment ;
            rdfs:label ""77th Ohio Infantry Regiment""@en .
  ?regiment dbo:country ?country .
}

UNION

# Query for the administration of Andrew Johnson
SELECT ?startYear ?endYear WHERE {
  ?person a dbo:President ;
          rdfs:label ""Andrew Johnson""@en .
  OPTIONAL { ?person dbo:presidencyStartYear ?startYear . }
  OPTIONAL { ?person dbo:presidencyEndYear ?endYear . }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
360,2,train,Give me the reference to Manfred Mann.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference
WHERE {
  ?manfredMann a dbo:Person ;
               rdfs:label ""Manfred Mann""@en .
  ?manfredMann dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,2,3,28,1,114,1,0.008695652173913044,0.5,0.017094017094017096
487,5,train,"Give me the person born, that is a soccer player, as Philip Brian Scott.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate
WHERE {
  dbr:Philip_Brian_Scott a dbo:SoccerPlayer .
  dbr:Philip_Brian_Scott dbo:birthDate ?birthDate .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
994,6,train,"Give me the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?memberName WHERE {
  ?meshuggah dbp:name ""Meshuggah""@en .
  ?meshuggah dbo:bandMember ?member .
  ?member rdfs:label ?memberName .
  FILTER (LANG(?memberName) = 'en')
  
  OPTIONAL { ?member a dbo:Band . }
  OPTIONAL { ?member a dbo:MusicalGroup . }

  FILTER EXISTS { 
    { ?member a dbo:Band } UNION
    { ?member a dbo:MusicalGroup }
  }
}
```",1,4,2,1,1,3,3,71,0,0,6,0,0.0,0
427,8,train,"Who is the person born, that is an office holder and a politician, as Romano Antonio Prodi?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:officeHolder true .
  ?person dbo:politician true .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
747,13,train,Give me the band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Assuming we have a resource for the song ""Apollo"" by Hardwell
  dbr:Apollo_(Hardwell_song) dbo:composer ?writer .
  
  OPTIONAL { 
    ?writer dbo:bandMember ?band .
  }
}
```",2,2,3,2,1,3,3,71,0,0,13,0,0.0,0
626,9,train,"Give me the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force
WHERE {
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Paris (1814)""@en .
  
  OPTIONAL { 
    ?battle dbp:commander ?commander .
    
    ?commander dbo:force ?force .
  }
}
```",2,3,3,2,1,3,2,20,0,0,77,0,0.0,0
754,7,train,Give me the parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandparentClass
WHERE {
  # Find May Hnin Htapi's type
  ?mayHninHtapi a dbo:Person .
  FILTER(STR(?mayHninHtapi) = ""May_Hnin_Htapi"") .

  # Find her parent class
  ?mayHninHtapi rdf:type ?parentClass .

  # Find the parent of that parent class
  ?parentClass rdfs:subClassOf+ ?grandparentClass .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
92,8,train,Give me the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Joseph Michael Furney"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
838,5,train,"Give me the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band
WHERE {
  ?band a dbo:Band .
  ?member dbo:bandMember ?band ;
          foaf:name ""YU Grupa""@en .
}
```",1,2,2,1,1,3,2,20,0,0,8,0,0.0,0
659,11,train,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:commander ?commander .
}
```",2,2,3,2,1,3,3,71,0,0,175,0,0.0,0
963,8,train,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?administration
WHERE {
  # Identify Sremski Karlovci as a city in DBpedia
  dbr:Sremski_Karlovci dbo:country dbr:Serbia .
  
  # Find the ruling political party for this location
  ?location dbo:rulingParty ?party .

  # Ensure the location is indeed Sremski Karlovci
  FILTER(?location = dbr:Sremski_Karlovci)

  # Retrieve information about the administration of the party
  OPTIONAL { ?party dbo:administration ?administration }
}
```",2,3,3,2,1,3,2,20,0,0,86,0,0.0,0
77,5,train,Who is the mayor of Congress Poland?,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor WHERE {
  VALUES ?congressPoland { dbr:Congress_Poland }
  ?congressPoland dbo:mayor ?mayor .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
54,17,train,"Give me the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?thihapate a dbo:RoyalPerson ;
             foaf:name ""Thihapate of Mohnyin""@en .
  
  ?thihapate dbo:child ?child .

  ?child rdf:type dbo:RoyalPerson ;
         dbo:officeHolder ?office .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
345,8,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?team 
WHERE {
  ?person a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          dbo:birthDate ""1978-09-15""^^xsd:date .
  
  OPTIONAL { ?person dbo:team ?team . }
}
```",2,4,3,2,1,3,2,20,1,37,1,0.02631578947368421,0.5,0.05
251,9,train,Give me the administration of Forza Italia (2013) and death place of Laura Mancinelli.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for the administration of Forza Italia (2013)
SELECT ?administration WHERE {
  ?party rdf:type dbo:PoliticalParty .
  ?party rdfs:label ""Forza Italia""@en .
  ?member dbo:memberOf ?administration .
  ?administration dbo:startDate ?start .
  FILTER (?start <= ""2013-12-31""^^xsd:date && 
          (OPTIONAL {?administration dbo:endDate ?end} || ""9999-12-31""^^xsd:date) >= ""2013-01-01""^^xsd:date)
}

# Query for the death place of Laura Mancinelli
SELECT ?deathPlace WHERE {
  ?person rdf:type dbo:Person .
  ?person rdfs:label ""Laura Mancinelli""@en .
  ?person dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
404,4,train,"Who is the person born, that is a royalty, as Princess Victoria Louise of Prussia?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthDate
WHERE {
  ?person rdf:type dbo:Monarch .
  ?person dbo:name ""Victoria Louise of Prussia"" .
  ?person dbo:birthDate ?birthDate .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
617,3,train,"Give me the child, that is a royalty, of Boleslaus I, Duke of Bohemia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?boleslaus1 dbo:child ?child .
  FILTER (strstarts(str(?boleslaus1), ""http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia""))
  ?child a dbo:Monarch .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
92,5,train,Give me the actor of Return to Nuke 'Em High Volume 1.,SELECT ?result WHERE { <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film a dbo:Film ;
        rdfs:label ""Return to Nuke 'Em High Volume 1""@en .
  
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,1,19,0.0,0.0,0
345,7,train,Give me the figure known as the nickname of FC Vaduz.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?nickname
WHERE {
  ?club a dbo:FootballClub ;
        rdfs:label ""FC Vaduz""@en .
  ?club dbo:nickname ?nickname .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
959,7,train,"Who is the manager, that is a sports manager, of 1998 Kashima Antlers season?",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team dbo:sportTeamName ""Kashima Antlers""@en .
  ?team dbo:season ""1998""^^xsd:gYear .
  ?team dbo:manager ?manager .
  ?manager a dbo:SportsManager .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
485,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  ?entity dbp:country ""United Kingdom""@en .
}
```",1,1,2,1,1,2,3,28,1747,28875,41252,0.057050486578277056,0.04062885183376357,0.04745928471495905
959,14,train,Give me the manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?person a dbo:Person ;
          foaf:name ""Takashi Sekizuka""@en .
  
  ?person dbo:team ?team .

  ?team dbo:manager ?manager .
}
```",2,2,3,2,1,3,3,71,0,1,10,0.0,0.0,0
701,15,train,Give me the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?amunherkhepeshef a dbo:Person ;
                    foaf:name ""Amun-her-khepeshef""@en .
  
  ?spouse dbo:spouse ?amunherkhepeshef .

  ?child dbo:parent ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
963,6,train,Give me the entity in Serbia and administration of Serbian Progressive Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Serbian Progressive Party""@en .
  
  ?person dbo:head ?party ;
          foaf:name ?name .
}
```",2,2,3,1,2,3,2,20,0,0,84,0,0.0,0
528,17,train,Give me the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Narciso Campero"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,7,train,Give me the reference to Rutger Jan Schimmelpenninck.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?resource WHERE {
  ?resource rdfs:label ""Rutger Jan Schimmelpenninck""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
421,0,train,Give me the band member of Senidah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bandMember
WHERE {
  ?senidah a dbo:MusicalArtist ;
           foaf:name ""Senidah""@en .
  ?senidah dbo:bandMember ?bandMember .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
281,10,train,"Give me the war of New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # New Zealand Army's participation in wars
  dbr:New_Zealand_Army dbo:participatedIn ?nzWar .
  
  # Beauchamp Seymour, 1st Baron Alcester's participation in wars
  dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:participatedIn ?bsWar .

  # Find common wars
  FILTER (?nzWar = ?bsWar)
  
  # Bind the war to a variable for output
  ?war rdfs:label ?warLabel .
  FILTER (lang(?warLabel) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,7,train,Give me the death place of Laura Mancinelli and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace ?battleLocation WHERE {
  # Query for Laura Mancinelli's death place
  { 
    ?person a dbo:Person ;
            foaf:name ""Laura Mancinelli""@en .
    ?person dbo:deathPlace ?deathPlace .
  }
  
  UNION
  
  # Query for the location of the Battle of Marengo
  {
    ?battle dbp:title ""Battle of Marengo""@en ;
            dbp:location ?battleLocation .
  }
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
498,4,train,Give me the band of Malevolent Creation and band of Will Rahmer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for Malevolent Creation's band
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Malevolent_Creation> dbo:band ?band .
}

# Query for Will Rahmer's band
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Will_Rahmer> dbo:band ?band .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
492,16,train,"Give me the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find the commander of the Battle of Verdun
  dbr:Battle_of_Verdun dbo:commander ?commander .
  
  # Ensure the war is both a military conflict and an event
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:Event .

  # Link the commander to the war they participated in
  ?commander dbo:participatedIn ?war .
}
```",2,4,3,2,1,3,3,71,0,0,11,0,0.0,0
465,1,train,Give me the administration of Czech Pirate Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?role
WHERE {
  VALUES (?party) { dbr:Czech_Pirate_Party }
  
  OPTIONAL { 
    ?party dbo:leader ?person .
    BIND(""Leader"" AS ?role)
  }
  
  OPTIONAL { 
    ?party dbo:member ?person .
    FILTER NOT EXISTS { ?party dbo:leader ?person } # Exclude leaders already captured
    BIND(""Member"" AS ?role)
  }

  ?person a dbo:Person .
}
ORDER BY ?role ?person
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
528,0,train,Give me the war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?description WHERE {
  ?person a dbo:Person ;
          foaf:name ""Irene Morales""@en .
  
  OPTIONAL { 
    ?person dbo:associatedWith ?event .
    ?event a dbo:Event ;
           rdfs:label ?label .
    FILTER (CONTAINS(LCASE(?label), ""war"") || CONTAINS(LCASE(?label), ""conflict""))
  }
  
  SERVICE wikibase:label {
    bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"" .
  }
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
487,7,train,Give me the country of the administration of Patricia McCoy.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?v1 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?countryLabel
WHERE {
  ?person rdfs:label ""Patricia McCoy""@en .
  ?person rdf:type dbo:Person .
  ?person dbo:country ?country .
  ?country rdfs:label ?countryLabel .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
994,12,train,Give me the band member of Don Dokken and associated musical artist of Red Tide (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
# Query for Band Member of Don Dokken
SELECT ?band WHERE {
  dbpedia:Don_Dokken dbo:musicalArtist ?band .
}
```

```sparql
# Query for Associated Musical Artist of Red Tide (band)
SELECT ?artist WHERE {
  dbpedia:Red_Tide_(band) dbo:associatedMusicalArtist ?artist .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
465,3,train,"Give me the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leaderName WHERE {
  ?chamber a dbo:Legislature ;
           dbp:name ""Chamber of Deputies of the Czech Republic""@en .
  
  ?chamber dbo:chairman ?leader .
  ?leader foaf:name ?leaderName .

  OPTIONAL { ?leader dbo:party ?party . }
  FILTER EXISTS { ?party a dbo:PoliticalParty }
  FILTER EXISTS { ?leader a dbo:Organization }
}
```",1,3,2,1,1,2,2,9,0,0,5,0,0.0,0
659,4,train,"Give me the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  VALUES ?wellesley { dbr:Arthur_Wellesley,_1st_Duke_of_Wellington }
  ?wellesley dbo:commander ?force .
}
```",1,1,2,1,1,3,3,71,0,0,52,0,0.0,0
827,1,train,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:William_Ernst,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:father ?father .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
465,4,train,Give me the death place of Jiřina Štěpničková and administration of Czech Pirate Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for the death place of Jiřina Štěpničková
SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jiřina Štěpničková""@en ;
          dbo:deathPlace ?deathPlace .
}

# Query for the administration (leader) of Czech Pirate Party
SELECT ?leader WHERE {
  ?party a dbo:PoliticalParty ;
         foaf:name ""Czech Pirate Party""@cs ;
         dbo:leader ?leader .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
492,17,train,"Give me the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  dbr:Khemis_Miliana_District dbo:administrativeCapital ?capital .
  FILTER (dbo:Settlement ?capital)
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
427,1,train,Give me the party of Giulio Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party
WHERE {
  dbr:Giulio_Andreotti dbo:partyAffiliation ?party .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
161,12,train,Give me the commander in Biscay Campaign and military force of Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryForce WHERE {
  # Part 1: Find the commander of the Biscay Campaign
  OPTIONAL {
    ?campaign a dbo:MilitaryCampaign ;
              rdfs:label ""Biscay Campaign""@en .
    ?campaign dbo:commander ?commander .
  }

  # Part 2: Identify military forces involved in the Spanish Civil War
  ?conflict a dbo:MilitaryConflict ;
            rdfs:label ""Spanish Civil War""@en .
  ?conflict dbo:militaryForce ?militaryForce .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
994,13,train,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?member ?associatedArtist 
WHERE {
  ?meshuggah dbo:type dbo:Band .
  ?meshuggah dbp:bandMember ?member .
  
  ?member dbo:associatedMusicalArtist ?artist .
  ?artist a dbo:Band ;
          a dbo:Organization .

  FILTER(?meshuggah = <http://dbpedia.org/resource/Meshuggah>)
}
```",2,5,3,2,1,3,3,71,0,0,33,0,0.0,0
30,1,train,"Give me the professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?occupation WHERE {
  VALUES ?person { dbr:John_Paul_Getty_Jr. }
  OPTIONAL { ?person dbo:occupation ?occupation . }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
427,0,train,Give me the reference to Partito Popolare Italiano.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?partyURI
WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Partito Popolare Italiano""@it .
  BIND(STR(?party) AS ?partyURI)
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
404,1,train,Give me the parent of Prince Ernest Augustus of Hanover (born 1914).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  VALUES ?person { dbr:Prince_Ernest_Augustus_of_Hanover_(1914) }
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
659,13,train,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?commander WHERE {
  ?regiment a dbo:MilitaryUnit ;
            rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  
  ?regiment dbo:participatedIn ?war .

  ?war dbp:commander ?commander .
}
```",2,4,3,2,1,3,3,71,0,0,130,0,0.0,0
498,0,train,Give me the band of Malevolent Creation.,SELECT ?result WHERE { <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:Malevolent_Creation dbo:bandMember ?member .
}
```",1,1,2,1,1,2,2,9,0,1,8,0.0,0.0,0
996,10,train,Give me the award of the native of Palestine (region).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Mahmoud_Abbas a dbo:Person .
  OPTIONAL { dbr:Mahmoud_Abbas dbo:honoraryDoctorate ?award . }
  OPTIONAL { dbr:Mahmoud_Abbas dbo:receivedAward ?award . }
}
```",2,2,3,2,1,3,2,20,0,0,14,0,0.0,0
959,10,train,Give me the manager of 2013 Júbilo Iwata season and member of University of Tsukuba.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
    ?team dbo:manager ?manager .
    ?team rdfs:label ""Júbilo Iwata""@en .
    FILTER(YEAR(?date) = 2013)
    OPTIONAL { ?manager dbo:almaMater dbr:University_of_Tsukuba . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
92,13,train,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jim Sheppard""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  FILTER EXISTS { ?spouse a dbo:MusicalArtist . }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
197,5,train,Give me the birthplace of the member of FC Politehnica Timișoara.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person dbo:member dbr:FC_Politehnica_Timișoara .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,2,9,0,0,171,0,0.0,0
981,1,train,Give me the birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  dbr:Novia_Indriani_Mamuaja a dbo:Person .
  dbr:Novia_Indriani_Mamuaja dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
534,6,train,Give me the headquarter of Royal Dublin Society and birth place of Garret FitzGerald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters ?birthPlace
WHERE {
  # Query for the headquarters of Royal Dublin Society
  OPTIONAL { 
    dbr:Royal_Dublin_Society dbo:headquarter ?headquarters .
  }
  
  # Query for the birthplace of Garret FitzGerald
  OPTIONAL { 
    dbr:Garrett_FitzGerald dbo:birthPlace ?birthPlace .
  }
}
```",2,2,3,1,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
783,0,train,Give me the associated musical artist of Appietus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  dbr:Appietus a dbo:MusicArtist .
  OPTIONAL { dbr:Appietus dbo:associatedBand ?associatedArtist . }
  OPTIONAL { dbr:Appietus dbo:collaborator ?associatedArtist . }
}
```",1,1,2,1,1,3,2,20,0,0,15,0,0.0,0
963,10,train,"Give me the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?location ?rulingParty WHERE {
    ?postalCode dbo:country dbr:United_States .
    ?postalCode dbo:postalCode ""21205"" .
    ?postalCode dbo:location ?location .

    OPTIONAL { 
        ?location dbo:rulingPoliticalParty ?rulingParty .
    }
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
427,15,train,Give me the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?partyName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Michele Pinto""@en .
  ?person dbo:party ?party .
  ?party rdfs:label ?partyName .
}
```",2,2,3,2,1,3,3,71,0,2,4,0.0,0.0,0
981,0,train,Give me the entity in Indonesia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  ?city a dbo:City .
  ?city dbo:country dbr:Indonesia .
}
LIMIT 10
```",1,1,2,1,1,3,2,20,10,0,2939,1.0,0.00339097999321804,0.006759040216289286
360,6,train,Give me the writer of The Roaring Silence and native of Johannesburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName WHERE {
  ?book dbo:author ?author .
  ?author rdfs:label ?authorName .
  FILTER (lang(?authorName) = 'en') .

  ?book rdf:type dbo:Book .
  ?book rdfs:label ""The Roaring Silence""@en .

  OPTIONAL { 
    ?author dbo:birthPlace dbr:Johannesburg .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
492,6,train,"Give me the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person rdfs:label ""Frédéric-Georges Herr""@en .
  ?person dbo:participatedIn ?war .
  ?war rdf:type dbo:MilitaryConflict .
  ?war rdf:type dbo:Event .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
712,0,train,Give me the capital of South Russia (1919–1920).,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  ?region a dbo:Country ;
          dbo:capital ?capital .
  FILTER (
    str(?region) = ""Russian Soviet Federative Socialist Republic"" &&
    ?capital a dbo:City
  )
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
392,4,train,"Give me the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?event ?timeZone
WHERE {
  ?event a dbo:SportingEvent .
  ?event dbo:location dbr:Aguilar_de_Segarra .
  OPTIONAL { ?event dbp:timeZone ?timeZone }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
617,9,train,Give me the spouse of Laodice IV and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?laodiceIV a dbo:Person ;
             rdfs:label ""Laodice IV""@en .
  ?laodiceIV dbo:parent ?antiochusIII .
  ?antiochusIII rdfs:label ""Antiochus III the Great""@en .
  ?laodiceIV dbo:spouse ?spouse .
}
```",2,2,3,1,2,3,3,71,3,0,0,1.0,1.0,1.0
378,6,train,Who is the commander in Peninsular War?,SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commanderLabel WHERE {
  ?war a dbo:MilitaryConflict ;
       rdfs:label ""Peninsular War""@en .
  
  ?war dbo:commander ?commander .
  ?commander rdfs:label ?commanderLabel .
}
```",1,1,2,1,1,3,3,71,0,37,37,0.0,0.0,0
281,4,train,Who is the awardee of Knight Grand Cross of the Order of the Bath?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award a dbo:Award ;
         rdfs:label ""Knight Grand Cross of the Order of the Bath""@en .
  
  ?award dbo:recipient ?recipient .
}
```",1,1,2,1,1,3,3,71,0,0,558,0,0.0,0
959,8,train,Give me the team of Takashi Sekizuka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?teamName
WHERE {
  ?player a dbo:FootballPlayer ;
          foaf:name ""Takashi Sekizuka""@en .
  ?player dbo:team ?team .
  ?team rdfs:label ?teamName .
  FILTER (lang(?teamName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
547,7,train,Give me the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award
WHERE {
  dbr:Gerald_Graham dbo:honoraryAward ?award .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
838,2,train,"Give me the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Žika Jelić""@en .
  
  ?person dbo:member ?band .

  ?band a ?type .
  FILTER (
    ?type = dbo:Band || 
    ?type = dbo:MusicalGroup
  )
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
378,0,train,Give me the war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  VALUES ?gahn { dbr:C._P._Gahn }
  OPTIONAL { ?gahn dbo:participatedIn ?war . }
  OPTIONAL { ?gahn dbo:commanderOf ?war . }
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
547,8,train,Give me the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award dbo:officialName ""Knight Grand Cross of the Order of St Michael and St George""@en .
  ?award dbo:recipient ?recipient .
}
```",1,1,2,1,1,3,3,71,0,0,61,0,0.0,0
485,3,train,"Give me the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Western_European_Time .
}
```",1,2,2,1,1,2,3,28,6,2,0,0.75,1.0,0.8571428571428571
778,6,train,Give me the entity in United States and author of Chroot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:United_States .
  ?person dbo:wikiPageWikiLink dbr:Chroot .
  ?person foaf:name ?name .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
617,5,train,"Give me the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?father WHERE {
  ?richeza rdf:type dbo:Person ;
           rdfs:label ""Richeza of Poland, Queen of Hungary""@en .
  
  ?richeza dbo:father ?father .

  ?father rdf:type dbo:Monarch .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
959,5,train,"Who is the leader, that is a politician, of 2010 Japanese House of Councillors election?",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader WHERE {
    ?party a dbo:PoliticalParty ;
           dbo:election dbr:2010_Japanese_House_of_Councillors_election .
    
    ?party dbo:leader ?leader .
    
    ?leader a dbo:Person ;
            dbo:occupation dbr:Politician .
}
```",1,2,2,1,1,3,3,71,0,0,9,0,0.0,0
30,2,train,Give me the birthplace of Silvia Cohen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  <http://dbpedia.org/resource/Silvia_Cohen> dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
77,3,train,Who is the awardee of Golden Weapon for Bravery?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?award a dbo:Award ;
         rdfs:label ""Golden Weapon for Bravery""@en .
  
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,0,10,0,0.0,0
232,16,train,"Give me the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?militaryConflict
WHERE {
  VALUES ?person { dbr:Morgan_Freeman }
  
  # Find a notable film associated with Morgan Freeman
  ?person dbo:film ?film .
  
  # Find an association with a military conflict, possibly through awards or related works
  OPTIONAL {
    ?person dbo:award ?militaryConflict .
    FILTER (CONTAINS(LCASE(str(?militaryConflict)), ""conflict"") || CONTAINS(LCASE(str(?militaryConflict)), ""war""))
  }
  
  # Limit results to one film and one military conflict for clarity
  LIMIT 1
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
281,7,train,"Who is the professional, that is an office holder and a politician, in New Zealand Army?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  
  # Office Holder condition
  ?officeHolderPosition dbo:positionHeldBy ?person ;
                       dbo:organization dbr:New_Zealand_Army .
  
  # Politician condition
  ?politicalPartyMember dbo:member ?person .

  # Ensure the person is associated with New Zealand Army
  OPTIONAL { ?militaryService dbo:militaryBranch dbr:New_Zealand_Army ;
                             dbo:soldier ?person . }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
747,17,train,Who is the person born as the persona of Shèna?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?realName WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ?alias .
  FILTER (CONTAINS(LCASE(?alias), ""shèna"")) .
  OPTIONAL { ?person foaf:name ?realName . }
}
```",2,2,3,2,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
783,8,train,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember
WHERE {
  ?person a dbo:Artist ;
          a dbo:MusicalArtist ;
          foaf:name ""Priscilla Opoku-Kwarteng""@en .
  ?person dbo:bandMember ?bandMember .
}
```",2,4,3,2,1,3,2,20,0,0,7,0,0.0,0
378,9,train,Give me the war of Joaquín Blake and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?warJoaquin ?warCarl
WHERE {
  ?joaquin a dbo:Person ;
           foaf:name ""Joaquín Blake"" .
  ?joaquin dbo:participatedInWar ?warJoaquin .

  ?carl a dbo:Person ;
        foaf:name ""Carl Pontus Gahn"" .
  ?carl dbo:participatedInWar ?warCarl .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
391,13,train,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Michael Ballhaus""@en .
  
  ?person dbo:claimToFame ?work .

  ?work dbo:starring ?actor .
}
```",2,3,3,2,1,3,3,71,0,0,20,0,0.0,0
534,9,train,"Who is the child, that is a politician and an office holder, of the native, that is a politician, of Essex?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?parent a dbo:Person ;
          dbo:politician true ;
          dbo:nativePlace dbr:Essex .
  ?child a dbo:Person ;
         dbo:politician true ;
         dbo:officeHolder true ;
         dbo:childOf ?parent .
}
```",2,5,3,2,1,3,2,20,0,0,7,0,0.0,0
392,8,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbp:timeZone ""Central European Time"" .
}
```",2,3,3,2,1,2,3,28,0,0,173261,0,0.0,0
378,16,train,"Who is the commander in the reference, that is a military conflict, to Peninsular War?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Peninsular_War dbo:commander ?commander .
}
```",2,3,3,2,1,3,3,71,37,0,0,1.0,1.0,1.0
435,0,train,Give me the territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  dbr:Reykjavík dbo:country ?territory .
}
```",1,1,2,1,1,2,3,28,1,0,1,1.0,0.5,0.6666666666666666
251,10,train,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?administration WHERE {
  ?party a dbo:PoliticalParty .
  ?party dbo:country dbr:Sicily .
  OPTIONAL { ?party dbo:leader ?administration . }
}
```",2,4,3,2,1,2,3,28,0,3,5,0.0,0.0,0
294,1,train,Give me the resting place of Edwin A. Keeble.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace
WHERE {
  dbr:Edwin_A._Keeble a dbo:Person .
  OPTIONAL { dbr:Edwin_A._Keeble dbo:deathPlace ?burialPlace . }
  OPTIONAL { dbr:Edwin_A._Keeble dbo:burialPlace ?burialPlace . }
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
392,2,train,Give me the province of Schio.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province WHERE {
  dbr:Schio dbo:locatedIn ?province .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
994,10,train,Give me the band member of Don Dokken and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
# Query 1: Band members of Don Dokken
SELECT ?member WHERE {
  ?band dbo:bandMember ?member .
  ?band dbo:name ""Don Dokken"" .
}

# Query 2: Associated musical artists of S.A. Slayer
SELECT ?artist WHERE {
  ?project dbo:associatedBand ?artist .
  ?project dbo:name ""S.A. Slayer""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
528,9,train,Give me the war of Orozimbo Barbosa and war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warBarbosa ?warMorales WHERE {
  ?barbosa a dbo:Person ;
           foaf:name ""Orozimbo Barbosa""@en .
  ?morales a dbo:Person ;
           foaf:name ""Irene Morales""@en .

  OPTIONAL { ?barbosa dbo:participatedInWar ?warBarbosa . }
  OPTIONAL { ?morales dbo:participatedInWar ?warMorales . }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
994,17,train,"Who is the person born, that is a musical artist, as the persona of Don Dokken?",SELECT ?result WHERE { <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Don Dokken"" .
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
488,0,train,Give me the birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
391,8,train,"Give me the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?title
WHERE {
  ?work a dbo:Film ;
        a dbo:Work ;
        a dbo:TelevisionShow .
  ?work rdfs:label ?title .
  FILTER (lang(?title) = 'en')
  
  OPTIONAL { 
    ?work dbo:starring dbr:Roz_Ryan .
  }
}
```",1,4,2,1,1,3,3,71,0,4831,1,0.0,0.0,0
294,11,train,"Give me the entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceEntity
WHERE {
  ?marionJames a dbo:Person ;
               foaf:name ""Marion James"" .
  ?marionJames dbo:birthPlace ?birthPlaceEntity .
  ?birthPlaceEntity a dbo:Settlement .
}
```",2,3,3,2,1,2,3,28,0,0,340,0,0.0,0
92,1,train,Give me the associated musical artist of Jim Sheppard.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedBand
WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Jim Sheppard"" .
  OPTIONAL { ?person dbo:associatedBand ?associatedBand . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
92,10,train,Give me the band of Joseph Michael and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
# Query to find the band associated with Joseph Michael
SELECT ?band WHERE {
  ?person rdfs:label ""Joseph Michael""@en .
  ?person dbo:band ?band .
}
```

```sparql
# Query to find a member of the band Nevermore
SELECT ?member WHERE {
  ?band rdfs:label ""Nevermore""@en .
  ?band dbo:member ?member .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
392,1,train,Give me the region of Central European Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?regionLabel WHERE {
  ?region dbo:timeZone ?timezone .
  ?timezone rdfs:label ""Central European Time""@en .
  ?region rdfs:label ?regionLabel .
}
```",1,1,2,1,1,2,3,28,0,49691,49990,0.0,0.0,0
281,11,train,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:honoraryTitle ?title .
  FILTER(CONTAINS(LCASE(STR(?title)), ""knight grand cross of the order of the bath"")) .
  ?person foaf:name ?name .
}
```",2,2,3,2,1,3,3,71,0,0,450,0,0.0,0
427,16,train,Who is the father of the alumnus of Massachusetts Institute of Technology?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?fatherName WHERE {
  ?alumnus a dbo:Alumnus ;
           dbp:almaMater dbpedia:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER (lang(?fatherName) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
617,0,train,Give me the child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childLabel
WHERE {
  ?antiochus a dbo:Person ;
             rdfs:label ""Antiochus III the Great""@en .
  
  ?antiochus dbo:child ?child .

  ?child rdfs:label ?childLabel .
}
```",1,1,2,1,1,3,3,71,0,6,5,0.0,0.0,0
161,8,train,"Give me the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  dbr:Emilio_Mola dbo:associatedEvent ?event .
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
838,4,train,"Give me the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?type
WHERE {
  ?group rdf:type <http://dbpedia.org/resource/YU_Grupa> .
  ?group rdf:type ?type .
  FILTER (?type IN (dbo:MusicalGroup, dbo:Organization))
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
617,3,train,"Who is the successor, that is a royalty, of Antiochus II Theos?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  ?antiochus2 dbo:successor ?successor .
  FILTER EXISTS { ?successor a dbo:Monarch } .
  VALUES ?antiochus2 { <http://dbpedia.org/resource/Antiochus_II_Theos> }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
356,4,train,"Give me the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Gary Williams"" .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1960)
  ?person dbo:birthPlace ?birthPlace .

  # Ensure the birth place is a settlement
  ?birthPlace rdf:type dbr:Settlement .

  # Ensure the birth place is in England
  ?birthPlace dbp:country dbr:England .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
55,5,train,"Give me the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Jason_Newsted dbo:member ?band .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
915,2,train,Give me the director of Pipe Dreams (1976 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director WHERE {
  ?film a dbo:Film ;
        rdfs:label ""Pipe Dreams""@en .
  FILTER (CONTAINS(LCASE(str(?film)), LCASE(""1976"")))
  ?film dbo:director ?director .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
488,3,train,"Give me the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warName WHERE {
  ?saitoHajime a dbo:Person ;
               foaf:name ""Saitō Hajime""@en .
  
  ?war a dbo:War ;
       dbo:participant ?saitoHajime .

  ?war rdfs:label ?warName .
  FILTER (lang(?warName) = 'en')
}
```",1,4,2,1,1,3,3,71,0,0,4,0,0.0,0
9,0,train,"Give me the alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?almaMater
WHERE {
  ?person a dbo:Person ;
          foaf:name ""John Alderdice, Baron Alderdice"" .
  ?person dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
435,11,train,Give me the work of the author of Iceland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work
WHERE {
  ?author a dbo:Person ;
          dbo:nationality dbr:Iceland .
  ?author dbo:work ?work .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
294,8,train,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName ?restingPlace WHERE {
  ?person a dbo:Person ;
          dbo:award dbr:Distinguished_Service_Medal_(U.S._Army) ;
          dbo:finalRestingPlace ?restingPlace .
  ?person rdfs:label ?personName .
  FILTER (CONTAINS(LCASE(?personLabel), ""politician""))
  FILTER (LANG(?personLabel) = 'en')
}
```",2,3,3,2,1,2,3,28,0,0,10,0,0.0,0
528,15,train,"Give me the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?event a dbo:Event ;
         rdfs:label ""Chilean Military Coup""@en .
  OPTIONAL { ?event dbo:leader ?militaryForce . }
}
```",2,3,3,2,1,3,3,71,0,0,91,0,0.0,0
696,0,train,Give me the birth place of Tim Brennan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace
WHERE {
  ?person rdfs:label ""Tim Brennan""@en .
  ?person dbo:birthPlace ?birthPlace .
  FILTER (LANG(?person) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
996,1,train,Give me the entity in France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?placeLabel
WHERE {
  ?place a dbo:Place .
  ?place rdfs:label ?placeLabel .
  FILTER (lang(?placeLabel) = 'en') .
  ?place dbo:country dbr:France .
}
ORDER BY ?placeLabel
```",1,1,2,1,1,3,2,20,0,38131,292,0.0,0.0,0
115,5,train,Give me the alma mater of the alumnus of National University of San Marcos.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?almaMaterName
WHERE {
  ?person dbo:alumniOf dbr:National_University_of_San_Marcos .
  ?person dbo:alumniOf ?almaMater .
  ?almaMater rdfs:label ?almaMaterName .
  FILTER(LANG(?almaMaterName) = ""en"")
}
```",2,2,3,2,1,2,2,9,0,0,49,0,0.0,0
487,8,train,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration
WHERE {
  ?person a dbo:SoccerPlayer ;
          foaf:name ""Philip Brian Scott"" ;
          dbo:birthDate ?birthDate .
  
  OPTIONAL { ?person dbo:administration ?administration . }
}
```",2,3,3,2,1,3,2,20,0,0,14,0,0.0,0
179,9,train,"Give me the birth name of the child, that is a royalty, of Nakkhatra Mangala.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . ?v0 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?birthName
WHERE {
  ?nakkhatraMangala dbo:child ?child .
  FILTER (str(?nakkhatraMangala) = ""Nakkhatra_Mangala"") .

  ?child a dbo:Monarch .  # Assuming royalty is represented by the Monarch class

  OPTIONAL { ?child dbo:birthName ?birthName }
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
767,3,train,Give me the writer of Where It's At (Dustin Lynch album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer
WHERE {
  ?album rdf:type dbo:MusicAlbum ;
         rdfs:label ""Where It's At (Dustin Lynch album)""@en .
  OPTIONAL { ?album dbo:writer ?writer . }
}
```",1,1,2,1,1,3,3,71,0,0,35,0,0.0,0
427,12,train,Give me the party of Giulio Andreotti and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?andreottiPartyLabel ?prodiPartyLabel
WHERE {
  ?andreotti dbo:wikiPageID ""Giulio_Andreotti"" .
  ?andreotti dbo:partyAffiliation ?andreottiParty .
  ?andreottiParty rdfs:label ?andreottiPartyLabel .

  ?prodi dbo:wikiPageID ""Romano_Prodi"" .
  ?prodi dbo:partyAffiliation ?prodiParty .
  ?prodiParty rdfs:label ?prodiPartyLabel .
  
  FILTER (lang(?andreottiPartyLabel) = 'en')
  FILTER (lang(?prodiPartyLabel) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
617,2,train,Give me the parent of Mlada (abbess).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  dbr:Mlada_(abbess) dbo:memberOf ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
360,5,train,Give me the author of Blinded by the Light.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName WHERE {
  ?song dbo:lyricist ?author .
  ?author foaf:name ?authorName .
  FILTER (str(?song) = str(dbr:Blinded_by_the_Light_(Manfred_Mann's_Earth_Band_song)))
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
161,9,train,Give me the military force of Rif War and military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
# Query for Rif War Military Forces
SELECT DISTINCT ?rifForce ?description WHERE {
  VALUES ?rifWar { dbpedia:Rif_War }
  ?rifForce dbo:partOf ?rifWar .
  OPTIONAL { ?rifForce rdfs:comment ?description . FILTER (lang(?description) = 'en') }
}

UNION

# Query for Spanish Civil War Military Forces
SELECT DISTINCT ?civilWarForce ?description WHERE {
  VALUES ?spanishCivilWar { dbpedia:Spanish_Civil_War }
  ?civilWarForce dbo:partOf ?spanishCivilWar .
  OPTIONAL { ?civilWarForce rdfs:comment ?description . FILTER (lang(?description) = 'en') }
}
```",2,2,3,1,2,3,3,71,0,0,34,0,0.0,0
767,2,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```
# No valid SPARQL query can be generated due to incomplete input.
```",1,1,2,1,1,3,3,71,0,0,98447,0,0.0,0
421,9,train,Give me the person born as Edin Dervišhalidović and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Edin Dervišhalidović"" .
  ?person dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
142,4,train,Give me the birthplace of George Tokoro and entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:George_Tokoro dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Japan .
}
```",2,2,3,1,2,2,2,9,1,0,0,1.0,1.0,1.0
617,1,train,Give me the spouse of Laodice IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Laodice IV""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
281,8,train,"Give me the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation
WHERE {
  VALUES ?heatherRoy { dbr:Heather_Roy }
  ?heatherRoy dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(STR(?occupation)), ""military"") || CONTAINS(LCASE(STR(?occupation)), ""unit""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
360,7,train,Give me the reference to Manfred Mann and writer of The Roaring Silence.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?composer WHERE {
  ?album a dbo:Album ;
         dbo:title ""The Roaring Silence"" ;
         dbo:artist dbr:Manfred_Mann's_Earth_Band .
  
  OPTIONAL { ?album dbo:composer ?composer . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
487,1,train,Give me the administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?incumbencyPeriod
WHERE {
  dbr:Phil_Scott dbo:incumbencyPeriod ?incumbencyPeriod .
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
184,10,train,Give me the parent of Géza von Habsburg and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

# Query for Géza von Habsburg's parents
SELECT ?parent WHERE {
  ?géza a dbo:Person ;
        foaf:name ""Géza von Habsburg""@en .
  ?géza dbo:parent ?parent .
}

UNION

# Query for Archduchess Ilona of Austria's parents
SELECT ?parent WHERE {
  ?ilona a dbo:Person ;
         foaf:name ""Archduchess Ilona of Austria""@en .
  ?ilona dbo:parent ?parent .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
294,0,train,"Give me the resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace
WHERE {
  dbr:Luke_Lea (dbo:birthDate ?date) .
  FILTER (YEAR(?date) = 1879)
  OPTIONAL { dbr:Luke_Lea dbo:finalRestingPlace ?restingPlace . }
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
994,11,train,Give me the associated musical artist of the associated musical artist of Watchtower (band).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
# Step 1: Find the associated musical artist of Watchtower
SELECT ?associatedArtist WHERE {
    ?watchtower dbo:wikiPageRedirects dbr:Watchtower_(band) .
    ?watchtower dbo:associatedBand ?associatedArtist .
}

# Step 2: Use the result from step 1 to find the associated musical artist of that artist
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?finalAssociatedArtist WHERE {
    # Replace ?artist with the actual URI obtained from the first query
    ?artist dbo:associatedBand ?finalAssociatedArtist .
}
```

Note: The second part of the SPARQL query needs to be executed after obtaining the result from the first query, replacing `?artist` with the actual URI.",2,2,3,2,1,3,3,71,0,0,16,0,0.0,0
232,15,train,Give me the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jon Pertwee"" .
  ?person dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
314,6,train,Give me the person deceased at Madrid and awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
    ?person a dbo:Person .
    ?person dbo:deathPlace dbr:Madrid .
    ?person dbo:award ?award .
    FILTER (COUNT(?award) = 30)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
365,1,train,Give me the reference to The Blasters.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""The Blasters""@en .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
617,4,train,"Give me the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?title
WHERE {
  ?person rdfs:label ""Richeza of Poland""@en .
  ?person a dbo:Person .
  OPTIONAL { ?person dbo:royalTitle ?title . }
  FILTER (lang(?person) = 'en')
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
10,4,train,"Give me the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate
WHERE {
  ?person a dbo:Artist ;
          foaf:name ""Luke Francis Vibert"" .
  ?person dbo:birthDate ?birthDate .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
767,11,train,"Give me the entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ""Green""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?adminEntity WHERE {
  ?settlement a dbo:Settlement ;
              foaf:name ""Green""@en .
  ?settlement dbo:partOf ?adminEntity .
}
```",2,3,3,2,1,3,3,71,0,0,60,0,0.0,0
378,4,train,Who is the person born as Carl Pontus Gahn?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personLabel WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Carl Pontus Gahn"" .
  ?person rdfs:label ?personLabel .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
996,7,train,Give me the force of the awardee of 1778.0.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?discovery WHERE {
  ?person dbo:awardReceived dbr:Copley_Medal.
  ?person dbo:birthYear ""1733""^^xsd:gyear.
  ?person dbo:deathYear ""1804""^^xsd:gyear.
  ?person rdfs:label ""Joseph Priestley""@en.
  
  OPTIONAL { ?person dbo:notableWork ?discovery. }
}
```",2,2,3,2,1,3,2,20,0,0,11,0,0.0,0
360,1,train,Give me the native of Johannesburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Johannesburg .
}
```",1,1,2,1,1,2,3,28,999,0,1,1.0,0.999,0.9994997498749374
617,9,train,"Give me the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child WHERE {
  # Step 1: Identify Mlada (abbess)
  ?mlada a dbo:ApostolicAbbess ;
         foaf:name ""Mlada""@en .
  
  # Step 2: Find the parent of Mlada
  ?parent dbo:hasChild ?mlada .

  # Step 3: Identify royalty children of the parent
  ?child dbo:hasParent ?parent ;
         a dbo:RoyalFamilyMember .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
92,14,train,Give me the band of the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joseph Michael Furney""@en .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,17,train,"Give me the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?person rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  ?person dbo:wikiPageRedirects ?redirect .
  OPTIONAL { ?redirect dbo:wikiPageRedirects ?event . }
  
  FILTER NOT EXISTS { ?redirect rdf:type dbo:Person } # Ensure it's not another person

  ?event rdf:type dbo:SocietalEvent ;
         rdf:type dbo:MilitaryConflict .

}
```",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
184,6,train,Give me the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?person dbo:child ?child .
  ?person rdfs:label ""Archduke Joseph Karl of Austria""@en .
}
```",1,1,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
345,0,train,Give me the figure known as Stolz von Liechtenstein.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:title ""Stolz von Liechtenstein""@en .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
55,11,train,"Give me the band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName
WHERE {
  ?newsted a dbo:MusicalArtist ;
           foaf:name ""Jason Newsted""@en .
  ?newsted dbo:bandMember ?band .
  ?band foaf:name ?bandName .
}
```",2,3,3,2,1,2,3,28,0,0,9,0,0.0,0
701,10,train,Give me the spouse of Ramesses II and parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?ramesses2 dbo:spouse ?spouse .
  FILTER(?ramesses2 = dbr:Ramesses_II)
  
  OPTIONAL { ?spouse dbo:child dbr:Meritamen . }
}
```",2,2,3,1,2,3,3,71,0,1,1,0.0,0.0,0
767,10,train,Give me the entity in Baden-Württemberg and reference to .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?entityLabel WHERE {
  ?entity a dbo:Place .
  ?entity dbo:locatedInRegion dbr:Baden-Württemberg .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,3,3,71,0,0,7,0,0.0,0
44,0,train,Give me the band member of Undertow (band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName WHERE {
  ?band dbr:Undertow ;
        dbo:bandMember ?member .
  ?member foaf:name ?memberName .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
915,8,train,"Give me the father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?spaulding a dbo:Person ;
             dbp:name ""Phillip Spaulding"" ;
             dbo:fictionalCharacter true ;
             dbo:soapOperaCharacter true .
  
  ?child dbo:child ?spaulding .
  ?child dbo:father ?father .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
783,10,train,"Give me the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:Artist .
  ?person a dbo:MusicalArtist .
  ?person dbo:birthDate ?birthDate .
  OPTIONAL { ?person rdfs:label ""Ebony Reigns""@en } # Stage name
}
```",2,4,3,2,1,3,2,20,1,71269,0,1.4031149151115476e-05,1.0,2.8061904561462583e-05
77,1,train,Give me the force of Alexander I of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryRank ?armySize ?battle 
WHERE {
  VALUES ?alexander { dbr:Aleksandr_I_of_Russia }
  
  OPTIONAL { ?alexander dbo:militaryRank ?militaryRank . }
  OPTIONAL { ?alexander dbo:armySize ?armySize . }
  OPTIONAL { ?alexander dbo:battleFought ?battle . }

  FILTER (lang(?militaryRank) = 'en' || lang(?armySize) = 'en' || lang(?battle) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,25,0,0.0,0
115,1,train,Give me the alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jorge Sotomayor Tello""@en .
  ?person dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
429,3,train,"Give me the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?expedition dbo:participatedIn ?battle .
  ?battle dbo:name ""Camden Expedition"" .
  ?expedition a dbo:MilitaryUnit .
  ?expedition rdfs:label ?militaryForce .
  FILTER (LANG(?militaryForce) = 'en')
}
```",1,2,2,1,1,2,2,9,0,0,22,0,0.0,0
285,6,train,Give me the parent of Alexander Onassis and spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentOfAlexanderOnassis (GROUP_CONCAT(?spouseOfAristotleOnassis; separator="", "") AS ?spouses)
WHERE {
  # Find the parent of Alexander Onassis
  ?alexanderOnassis dbo:birthName ""Alexander Onassis""@en .
  ?alexanderOnassis dbo:parent ?parentOfAlexanderOnassis .

  # Find the spouse(s) of Aristotle Onassis
  ?aristotleOnassis dbo:birthName ""Aristotle Onassis""@en .
  ?aristotleOnassis dbo:spouse ?spouseOfAristotleOnassis .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
645,8,train,Give me the alma mater of the child of Richard Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?almaMater
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Richard Pankhurst""@en .
  
  ?person dbo:child ?child .

  ?child dbo:almaMater ?almaMater .
}
```",2,2,3,2,1,3,2,20,2,1,0,0.6666666666666666,1.0,0.8
328,4,train,"Give me the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award
WHERE {
  VALUES ?person { dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape }
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
617,15,train,"Who is the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?childName WHERE {
  ?antiochus2 rdf:type dbo:Monarch ;
              foaf:name ""Antiochus II Theos""@en .
  
  ?successor dbo:predecessor ?antiochus2 ;
             rdf:type dbo:Monarch .

  ?child dbo:parent ?successor ;
         rdf:type dbo:Monarch ;
         foaf:name ?childName .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
754,10,train,Give me the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?person dbo:name ""Ram Khamhaeng the Great""@en .
  ?person dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
356,3,train,Give me the successor of 2014 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorSeason
WHERE {
  ?season a dbo:SportsTeamSeason ;
          dbo:sportTeam dbr:Sacramento_Republic_FC ;
          dbo:year ""2014""^^xsd:gYear .
  
  ?season dbo:successor ?successorSeason .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
996,8,train,Give me the entity in the award of Ekrem Akurgal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient
WHERE {
  ?award dbo:recipient dbr:E_krem_Akurgal .
  ?award dbo:recipient ?recipient .
  FILTER(?recipient != dbr:E_krem_Akurgal)
}
```",2,2,3,2,1,3,2,20,0,0,292,0,0.0,0
778,2,train,"Give me the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?name WHERE {
  ?person dbo:award dbr:Wolf_Prize_in_Medicine .
  ?person dbo:nationality dbr:United_States .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",1,2,2,1,1,3,2,20,0,2,1,0.0,0.0,0
801,6,train,"Give me the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work a dbo:MusicalWork .
  ?work dbo:song true .
  ?work dbo:composer dbr:50_Cent ;
        dbo:performer dbr:50_Cent .
}
```",1,4,2,1,1,3,3,71,0,0,58,0,0.0,0
488,15,train,"Who is the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warName WHERE {
  ?saitoHajime a dbo:Person ;
               foaf:name ""Saitō Hajime""@en .
  
  ?saitoHajime dbo:commander ?war .

  ?war a dbo:MilitaryConflict ;
      a dbo:Event ;
      a dbo:SocietalEvent .

  ?war rdfs:label ?warName .
  FILTER (lang(?warName) = 'en')
}
```",2,5,3,2,1,3,3,71,0,0,29,0,0.0,0
981,8,train,"Give me the birth place of the person born, that is a beauty queen, as .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> """"@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace
WHERE {
  ?person a dbo:BeautyQueen .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,170,4347,0,0.037635598848793445,1.0,0.0725410710475784
547,14,train,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?burialPlace WHERE {
  ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
  OPTIONAL { ?person dbo:deathPlace ?burialPlace . }
}
LIMIT 1
```",2,2,3,2,1,3,3,71,1,1,27,0.5,0.03571428571428571,0.06666666666666667
64,6,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbp:timeZone ""Central European Time"" .
}
```",2,3,3,2,1,2,2,9,0,0,173261,0,0.0,0
666,6,train,Give me the figure known as The Three Lions and player in Steve Bruce.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?player a dbo:Footballer .
  ?player dbo:nationalTeam dbr:England_national_football_team .
  ?player dbo:manager dbr:Steve_Bruce_(football_manager) .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
55,7,train,Give me the band member of Guns N' Roses and band of Newsted.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query 1: Band Members of Guns N' Roses
SELECT ?member WHERE {
  ?band dbr:Guns_N%27_Roses ;
        dbo:bandMember ?member .
}

# Query 2: Band Associated with Newsted (James Hetfield)
SELECT ?band WHERE {
  ?person dbr:Newsted ;
          dbo:bandMember ?band .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
488,4,train,Who is the commander in Boshin War?,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event a dbo:Boshin_War .
  ?event dbo:commander ?commander .
  ?commander a dbo:Person .
}
```",1,1,2,1,1,3,3,71,0,0,26,0,0.0,0
142,1,train,Give me the birthplace of George Tokoro.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  <http://dbpedia.org/resource/George_Tokoro> dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
339,10,train,Who is the child of the parent of Princess Olga of Greece and Denmark?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  ?olga dbo:name ""Princess Olga of Greece and Denmark""@en .
  ?olga a dbo:Person .

  ?parent dbo:child ?olga .
  
  ?parent dbo:child ?child .
  FILTER(?child != ?olga)
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
659,3,train,"Give me the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?birthPlace ?office
WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Kingdom_of_Ireland .
  OPTIONAL { ?person dbo:positionHeld ?office . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,2,2,1,1,3,3,71,0,0,23,0,0.0,0
161,2,train,Give me the commander in Biscay Campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?campaign dbp:name ""Biscay Campaign""@en .
  ?campaign dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
435,8,train,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territoryName
WHERE {
  dbr:Iceland dbo:administrativeTerritory ?territory .
  ?territory rdfs:label ?territoryName .
  FILTER (lang(?territoryName) = 'en')
}
```",2,5,3,2,1,2,3,28,0,0,2,0,0.0,0
54,6,train,Give me the child of Narapati I of Ava.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?person dbo:name ""Narapati I of Ava""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
345,2,train,"Give me the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?club a dbo:SoccerClub ;
        a dbo:Organization ;
        a dbo:SportsTeam .
  
  ?heeb dbr:Armando_Heeb ;
        dbo:member | dbo:player ?club .
}
```",1,4,2,1,1,3,2,20,0,0,8,0,0.0,0
314,5,train,"Give me the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  ?person rdfs:label ""Lisa Gavrić""@en .
  ?person dbo:occupation ?profession .

  FILTER EXISTS { ?profession a dbo:Event . }
  FILTER EXISTS { ?profession a dbo:SocietalEvent . }

  # Ensure we are getting the correct Lisa Gavrić
  VALUES ?person {
    dbr:Lisa_Gavrić
  }
}
```",1,3,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
801,2,train,Give me the associated musical artist of Chris Taylor (music producer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?artist 
WHERE {
  ?producer rdf:type dbo:MusicProducer .
  ?producer foaf:name ""Chris Taylor"" .
  ?producer dbo:associatedBand ?artist .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
64,0,train,Give me the alma mater of Jovan Hristić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jovan Hristić""@en .
  ?person dbo:almaMater ?university .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
339,0,train,Give me the child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""George I of Greece""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
48,5,train,"Give me the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName WHERE {
  ?movie dbo:title ""Honor Up""@en .
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER (LANG(?actorName) = 'en') .
  ?actor a dbo:MusicalArtist .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
54,8,train,"Give me the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?childName
WHERE {
  ?thihapate dbo:name ""Thihapate of Mohnyin""@en .
  ?thihapate dbo:child ?child .
  ?child rdf:type dbo:RoyalPerson ;
         dbo:officeHolder ?office .
  BIND(STR(?child) AS ?childName)
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
184,8,train,Give me the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  VALUES ?archduke { dbr:Archduke_Joseph_Francis_of_Austria }
  ?archduke dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
294,4,train,Who is the architect of P. D. Houston Jr. House?,SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?architect WHERE {
  dbr:P._D._Houston_Jr._House a dbo:ArchitecturalStructure .
  dbr:P._D._Houston_Jr._House dbo:architect ?architect .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
161,15,train,"Give me the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?event
WHERE {
  ?person a dbo:Person .
  ?person dbo:dateOfDeath ?deathDate .
  ?person dbo:deathPlace dbr:Francoist_Spain .
  
  ?event dbo:associatedWith ?person ;
         a (dbo:SocietalEvent | dbo:Event | dbo:MilitaryConflict) .

  FILTER (?deathDate <= ""1975-11-20""^^xsd:date) # Franco died on November 20, 1975
}
LIMIT 10
```",2,5,3,2,1,3,3,71,0,0,29,0,0.0,0
356,1,train,Give me the team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?teamName
WHERE {
  ?person rdfs:label ""Mark Briggs""@en .
  ?person dbo:team ?team .
  ?team rdfs:label ?teamName .
}
```",1,1,2,1,1,3,2,20,0,15,5,0.0,0.0,0
378,15,train,Who is the person born as the birth name of Carl Pontus Gahn?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Carl Pontus Gahn"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
963,4,train,Give me the location for 21205.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?location WHERE {
  ?postalCode a dbo:PostalCode ;
              dbo:codeValue ""21205"" .
  ?postalCode dbo:location ?location .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
666,0,train,Give me the player in Steve Bruce.,SELECT ?result WHERE { <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  dbr:Steve_Bruce a dbo:Person .
  dbr:Steve_Bruce dbo:managerOf ?club .
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
30,3,train,Give me the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?occupation
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Édouard Alphonse James de Rothschild""@en .
  ?person dbo:occupation ?occupation .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
767,5,train,Give me the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person rdfs:label ""George Kilbon Nash""@en .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
232,3,train,Give me the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName
WHERE {
  ?person foaf:name ""Jon Pertwee""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
55,10,train,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Find members of the San Francisco Symphony
  ?member dbo:performerIn dbr:San_Francisco_Symphony .
  
  # Check if these members are part of a band or group
  ?member dbo:member ?bandOrGroup .
  
  # Ensure the band or group is both a band and a group
  ?bandOrGroup rdf:type dbo:Band ;
               rdf:type dbo:MusicalGroup .
  
  # Bind the member to the variable for output
  BIND(?member AS ?bandMember)
}
```",2,4,3,2,1,2,3,28,0,0,15,0,0.0,0
696,5,train,Give me the award of Nie Rongzhen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?award
WHERE {
  dbpedia:Nie_Rongzhen dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
701,7,train,"Give me the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Perire""@en .
  
  ?person dbo:participatedIn ?battle ;
          dbo:role ""Commander"" ;
          dbo:title ?title .

  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || 
         CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))

  SERVICE <http://dbpedia.org/sparql> {
    ?battle rdfs:label ""Battle of Perire""@en .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
314,11,train,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Lisa Gavrić""@en .
  
  ?person dbo:profession ?profession .

  FILTER EXISTS { 
    ?profession rdfs:subClassOf* dbo:Commander .
  }

  FILTER EXISTS {
    ?event dbo:relatedEvent ?profession ;
           a dbo:Event .
  }
  
  FILTER EXISTS {
    ?societalEvent dbo:societalEvent ?profession ;
                   a dbo:SocietalEvent .
  }
}
```",2,4,3,2,1,2,3,28,0,0,28,0,0.0,0
281,17,train,"Give me the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?militaryUnit
WHERE {
  ?person a dbo:Person .
  ?person dbo:officeHolder ?office .
  ?person dbo:politicalPartyMember ?party .
  FILTER EXISTS { ?office dbo:country dbr:New_Zealand } .
  
  OPTIONAL {
    ?person dbo:militaryUnit ?militaryUnit .
    FILTER (?militaryUnit = dbr:New_Zealand_Army)
  }
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
10,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid query can be constructed due to incomplete question.
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
645,7,train,"Give me the entity in the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country
WHERE {
  ?person dbo:name ""James Wilkes Maurice""@en .
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  BIND(?residence AS ?country)
}
```",2,3,3,2,1,3,2,20,0,0,42999,0,0.0,0
421,4,train,Give me the birthplace of Samir Bekrić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Samir Bekrić""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
421,8,train,Give me the band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  ?person dbo:awardReceived ?award .
  ?person dbo:bandMember ?band .
  ?band dbo:member ?bandMember .
}
```",2,2,3,2,1,2,3,28,0,0,582,0,0.0,0
232,2,train,Give me the native of London.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:name ?name . }
  FILTER EXISTS {
    ?person dbo:birthPlace dbr:London ;
           ^dbo:country dbr:United_Kingdom .
    } UNION
  FILTER EXISTS {
    ?person dbo:residence dbr:London ;
           ^dbo:country dbr:United_Kingdom .
    }
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,0,0,8939,0,0.0,0
92,3,train,Give me the name of Nevermore (2006 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  ?film a dbo:Film ;
        rdfs:label ""Nevermore""@en ;
        dbo:title ""Nevermore"" ;
        dbo:releaseDate ?date .
  FILTER (YEAR(?date) = 2006)
  ?film rdfs:label ?name .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
528,5,train,Give me the work of --01-09.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
    ?work dbo:releaseDate ?date .
    FILTER (STRSTARTS(LCASE(str(?date)), ""2000-01-09"") || STRSTARTS(LCASE(str(?date)), ""2010-01-09"") || STRSTARTS(LCASE(str(?date)), ""2020-01-09""))
}
```",1,1,2,1,1,3,3,71,0,25,1,0.0,0.0,0
659,16,train,"Give me the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war
WHERE {
  ?polishHorse a dbo:MilitaryUnit ;
               rdfs:label ""Polish Horse""@en .
  
  ?polishHorse dbo:participatedIn ?war .
  ?war a dbo:War .
}
```",2,6,3,2,1,3,3,71,0,0,19,0,0.0,0
328,8,train,"Give me the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joseph Stalin""@en .
  OPTIONAL { ?person dbo:office ?office . }
  FILTER (strstarts(str(?person), str(dbr:Joseph_Stalin)))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
427,10,train,Give me the reference to Partito Popolare Italiano and party of Romano Prodi.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
# Query to get the reference to Partito Popolare Italiano
SELECT ?partitoPopolareItaliano WHERE {
  ?partitoPopolareItaliano rdfs:label ""Partito Popolare Italiano""@it .
  FILTER(LANG(?partitoPopolareItaliano) = 'it')
}

# Query to find the party of Romano Prodi
SELECT ?party WHERE {
  dbpedia:Romano_Prodi dbo:party ?party .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
981,10,train,"Who is the person born, that is a beauty queen, as the author of Kamikaze Girls?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate WHERE {
  ?book dbo:title ""Kamikaze Girls""@en .
  ?book dbo:author ?person .
  
  OPTIONAL { 
    ?person dbo:birthDate ?birthDate .
  }
  
  FILTER EXISTS {
    ?person a dbo:BeautyQueen .
  }
}
```",2,3,3,2,1,3,2,20,0,0,120,0,0.0,0
328,1,train,Give me the commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:commanderOf ?unit .
  ?unit dbp:front dbp:EasternFront .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
ORDER BY DESC(?person)
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,63,0,0.0,0
318,0,train,Give me the person born in 1970.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1970)
}
```",1,1,2,1,1,2,2,9,2287,8636,523,0.20937471390643597,0.8138790035587189,0.33306633656156703
404,6,train,"Who is the child, that is a royalty, of Ernest Augustus, Duke of Brunswick?","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?er nestor:child ?child .
  FILTER EXISTS { ?child rdf:type ?royaltyClass . 
                 VALUES ?royaltyClass { dbo:Monarch dbo:RoyalFamilyMember } }
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
339,7,train,Give me the child of the child of Christian IX of Denmark.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?grandchild ?grandchildChild
WHERE {
  # Identify Christian IX of Denmark
  ?christianIX a dbo:Monarch ;
               foaf:name ""Christian IX""@en .

  # Find his children (first level)
  ?child dbo:parent ?christianIX .
  
  # For each child, find their children (second level - grandchildren of Christian IX)
  ?grandchild dbo:parent ?child .

  # From each grandchild, select one of their children
  ?grandchildChild dbo:parent ?grandchild .
}
```",2,2,3,2,1,3,2,20,0,0,32,0,0.0,0
492,2,train,Give me the person decedent at Algiers.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Algiers .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,122,132,0,0.48031496062992124,1.0,0.648936170212766
959,9,train,Give me the native of Japan and member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Japan .
  OPTIONAL { ?person dbo:birthPlace dbr:Japan . }
  ?person dbo:memberOf dbr:University_of_Tsukuba .
}
```",2,2,3,1,2,3,3,71,0,0,84,0,0.0,0
48,1,train,Give me the band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Murda Mook""@en .
  OPTIONAL { ?person dbo:musicalArtist ?band . }
}
```",1,1,2,1,1,3,2,20,0,0,10,0,0.0,0
392,6,train,Give me the region of Central European Time and entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region ?italyEntity WHERE {
  # Find regions associated with Central European Time
  ?region a dbo:Region ;
          dbo:timeZone dbr:Central_European_Time .

  OPTIONAL {
    # Find an entity in Italy that is also under CET
    ?italyEntity a dbo:Place ;
                 dbo:country dbr:Italy ;
                 dbo:timeZone dbr:Central_European_Time .
  }
}
```",2,2,3,1,2,2,3,28,513,1220,0,0.2960184650894403,1.0,0.4568121104185218
427,6,train,Who is the father of Lamberto Andreotti?,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Lamberto Andreotti""@en .
  ?person dbo:father ?father .
  ?father foaf:name ?fatherName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
701,14,train,Give me the spouse of the father of Merneptah.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?merneptah dbo:father ?father .
  ?father dbo:spouse ?spouse .
  FILTER(STR(?merneptah) = ""Merneptah"")
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
404,2,train,"Give me the child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:CrownPrince ;
          foaf:name ""Ernest Augustus, Crown Prince of Hanover"" .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
48,8,train,"Give me the band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName
WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Honor Up""@en .
  
  ?actor dbo:musicalArtist ?band .
  ?band rdfs:label ?bandName .
  FILTER (LANG(?bandName) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,10,0,0.0,0
184,14,train,Give me the parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child ?parent 
WHERE {
  # Find the children of Archduke Joseph Francis of Austria
  dbr:Archduke_Joseph_Francis_of_Austria dbo:child ?child .
  
  # For each child, find their parent(s)
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,2,4,0,0.3333333333333333,1.0,0.5
318,6,train,Give me the professional in the profession of Robert Xavier Rodriguez.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  ?robert a dbo:Person ;
          foaf:name ""Robert Xavier Rodriguez""@en .
  ?robert dbo:occupation ?profession .

  ?professional a dbo:Person ;
                dbo:occupation ?profession .
  FILTER(?professional != ?robert)
}
```",2,2,3,2,1,2,2,9,25,19,1917,0.5681818181818182,0.012873326467559218,0.025176233635448138
996,5,train,Give me the award of Ekrem Akurgal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award
WHERE {
  dbr:Ekrem_Akurgal dbo:honoraryTitle ?award .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
617,10,train,"Give me the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?richeza dbo:birthPlace dbr:Poland ;
           a dbo:Person .
  
  FILTER (str(?richeza) = str(dbr:""Richeza_of_Poland""))

  ?richeza dbo:father ?father .

  ?father dbo:royalTitle ?title .
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
281,9,train,"Give me the entity in Colony of New Zealand and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity a dbo:Colony .
  ?entity dbo:country dbr:New_Zealand .
}

UNION

SELECT DISTINCT ?war WHERE {
  ?person foaf:name ""Beauchamp Seymour, 1st Baron Alcester""@en .
  ?person dbo:participatedIn ?war .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
339,5,train,Who is the child of Grand Duchess Elena Vladimirovna of Russia?,SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  ?person dbo:child ?child .
  ?person rdfs:label ""Grand Duchess Elena Vladimirovna of Russia""@en .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
801,3,train,Give me the true self of The Shadow.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?realName WHERE {
  dbr:The_Shadow dbo:birthName ?realName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
783,6,train,Give me the band member of Ebony Reigns and associated musical artist of Appietus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
# Query to find band members of Ebony Reigns
SELECT ?bandMember WHERE {
  ?ebonyReigns dbo:bandMember ?band .
  ?band dbo:member ?bandMember .
  FILTER (str(?ebonyReigns) = ""Ebony_Reigns"")
}

UNION

# Query to find associated musical artists of Appietus
SELECT ?associatedArtist WHERE {
  ?appietus dbo:associatedMusicalArtist ?associatedArtist .
  FILTER (str(?appietus) = ""Appietus"")
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
696,1,train,Give me the landmark at elevation of 50.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Landmark .
  ?landmark dbp:elevation ""50""^^xsd:integer .
}
```",1,1,2,1,1,3,2,20,0,0,599,0,0.0,0
391,15,train,"Give me the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?city a dbo:City ;
        rdfs:label ""Jackson, Tennessee""@en .
  OPTIONAL { ?city dbo:nickname ?nickname . }
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
184,9,train,Give me the child of Archduke Joseph August of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person dbo:child <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
  ?person dbo:parent <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
44,6,train,"Give me the band member of the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?memberName WHERE {
  ?queensryche a dbo:MusicalArtist .
  ?queensryche rdfs:label ""Queensrÿche""@en .
  ?queensryche dbo:musicalArtist ?organization .
  ?organization a dbo:Organization ;
                dbo:bandMember ?member .
  ?member rdfs:label ?memberName .
  FILTER(LANG(?memberName) = 'en')
}
```",2,4,3,2,1,2,2,9,0,0,13,0,0.0,0
485,7,train,Give me the entity in United Kingdom and entity in Nottinghamshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ukEntityLabel ?nottinghamshireEntityLabel
WHERE {
  # Entity for the United Kingdom (Capital City)
  dbr:London a dbo:City ;
             rdfs:label ?ukEntityLabel .
  
  # Entity for Nottinghamshire (Nottingham City)
  dbr:Nottingham a dbo:PopulatedPlace ;
                 dbo:locatedInCountry dbr:United_Kingdom ;
                 rdfs:label ?nottinghamshireEntityLabel .
}
```",2,2,3,1,2,2,3,28,0,0,357,0,0.0,0
747,14,train,Give me the band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName
WHERE {
  dbr:Tracy_Bonham a dbo:Person .
  dbr:Tracy_Bonham dbo:musicalBand ?band .
  ?band rdfs:label ?bandName .
  FILTER (lang(?bandName) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
314,8,train,Give me the person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?house dbp:headquarters ?location .
  FILTER(?house = dbpedia:House_of_Sombrerete) .
  
  ?person dbo:deathPlace ?location .
}
```",2,2,3,2,1,2,3,28,0,0,34,0,0.0,0
328,15,train,Give me the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award
WHERE {
  ?campaign rdfs:label ""Volcano and Ryukyu Islands campaign""@en .
  ?commander dbo:commanded ?campaign .
  ?commander dbo:award ?award .
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
314,9,train,Give me the commander in Spanish Civil War and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?commanderRole ?awardName
WHERE {
  ?person a dbo:Person .
  
  # Find commanders in the Spanish Civil War
  ?person dbo:militaryCommanderOf dbr:Spanish_Civil_War .

  OPTIONAL { 
    ?person dbo:award ?award .
    ?award rdfs:label ?awardName .
    FILTER(CONTAINS(LCASE(?awardName), ""30""))
  }
}
ORDER BY ?person
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
328,6,train,Give me the force of Ferenc Szálasi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  dbr:Ferenc_Szálasi dbo:leaderOf ?force .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
827,6,train,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?williamErnest a dbo:Person ;
                 foaf:name ""William Ernest, Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?williamErnest dbo:parent ?father .
  ?father foaf:name ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,0,train,Give me the entity in Baden-Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?label
WHERE {
  ?entity a dbo:Region .
  ?entity dbp:country ""Germany""^^xsd:string .
  ?entity rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""baden-württemberg""))
}
ORDER BY ?label
```",1,1,2,1,1,3,3,71,0,0,60,0,0.0,0
161,7,train,Who is the figure known as El Director?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person rdfs:label ""Pedro Infante""@en .
  OPTIONAL { ?person dbo:alias ""El Director""@es . }
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
10,3,train,"Give me the person born, that is an artist, as Matt Colton.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthDate
WHERE {
  ?person a dbo:Artist .
  ?person foaf:name ""Matt Colton"" .
  ?person dbo:birthDate ?birthDate .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
345,10,train,"Who is the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
# Step 1: Retrieve Eiður Guðjohnsen's birth date
SELECT ?birthDate WHERE {
    dbpedia:þorsteinsson_Eiður dbo:birthDate ?birthDate .
}

# Step 2: Find persons who are both soccer players and managers, born on the same date as Eiður Guðjohnsen
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?person WHERE {
    ?person a dbo:SoccerPlayer ;
            a dbo:SoccerManager .
    ?person dbo:birthDate ?birthDate .

    # Use the birth date from Step 1 as a filter (assuming it's retrieved and stored in a variable)
    FILTER (?birthDate = ""1980-11-15""^^xsd:date) # Replace with actual birth date obtained
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
184,1,train,Give me the child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joseph August, Archduke of Austria""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
666,4,train,"Give me the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://xmlns.com/foaf/0.1/name> ""England""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?club a dbo:Organization .
  ?club a dbo:SoccerClub .
  ?club a dbo:SportsTeam .
  ?club dbo:country dbr:England .
}
```",1,4,2,1,1,3,2,20,0,0,4,0,0.0,0
712,6,train,Give me the resting place of Nina Onilova and capital of South Russia (1919–1920).,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  OPTIONAL { 
    dbr:Nina_Onilova dbo:finalBurial ?restingPlace .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
16,3,train,Give me the birth name of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName
WHERE {
  dbr:Ted_McGinley a dbo:Person .
  dbr:Ted_McGinley dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
528,4,train,Give me the military force of Battle of Pisagua.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?belligerent WHERE {
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Pisagua""@en .
  OPTIONAL { ?battle dbp:belligerents ?belligerent . }
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
838,9,train,"Give me the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember
WHERE {
  # Identify the band(s) Žika Jelić is a member of
  ?band dbo:member db:Žika_Jelić .
  
  # Find members of these bands who are both artists and musical artists
  ?band dbo:member ?bandMember .
  ?bandMember rdf:type dbo:Artist .
  ?bandMember rdf:type dbo:MusicalArtist .
}
```",2,6,3,2,1,3,2,20,0,0,4,0,0.0,0
801,14,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Identify the writer of ""40 Dayz & 40 Nightz""
  dbr:Lil_Weezy_World dbo:lyricsBy dbr:40_Dayz_%26_40_Nightz .
  
  # Find associated musical artists
  dbr:Lil_Weezy_World dbo:associatedMusicalArtist ?artist .

  # Ensure the artist is also a musician and an artist
  ?artist rdf:type dbo:Musician ;
          rdf:type dbo:Artist .
}
```",2,4,3,2,1,3,3,71,0,0,50,0,0.0,0
232,1,train,Give me the actor of Dog Soldiers (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film a dbo:Film ;
        rdfs:label ""Dog Soldiers""@en .
  
  OPTIONAL { 
    ?film dbo:starring ?actor .
  }
  
  FILTER (lang(?filmLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
92,15,train,"Give me the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?film a dbo:Film ;
        rdfs:label ""Nevermore""@en .
  OPTIONAL { ?film dbo:starring ?artist . }
  FILTER (lang(?filmLabel) = 'en' && contains(lcase(str(?filmLabel)), lcase(""nevermore"")))
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
312,5,train,"Give me the entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity dbo:party dbr:Democratic_Party_(Italy) .
  ?entity a dbo:PopulatedPlace ;
         a dbo:Region ;
         dbo:country dbr:Italy .
}
```",2,6,3,2,1,2,2,9,0,0,587,0,0.0,0
177,2,train,Give me the residence of Alexander Gamelin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence
WHERE {
  <http://dbpedia.org/resource/Alexander_Gamelin> dbo:residence ?residence .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
959,16,train,"Give me the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?countryResidence
WHERE {
  ?election dbo:electedAs ?position .
  ?person dbo:electedAs ?position ;
          a dbo:Politician ;
          dbo:residence ?residence .
  FILTER EXISTS { ?residence a dbo:Country }
  BIND(?residence AS ?countryResidence)
  FILTER (?election = dbr:2010_Japanese_House_of_Councillors_election)
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
182,3,train,Give me the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?perpetrator
WHERE {
  dbr:2019_Sri_Lanka_Easter_bombings dbo:perpetrator ?perpetrator .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
10,7,train,Give me the professional in  and associated musical artist of Matt Colton.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession ?associatedArtist
WHERE {
  ?mattColton a dbo:Person ;
              foaf:name ""Matt Colton""@en .
  
  OPTIONAL { ?mattColton dbo:profession ?profession . }
  OPTIONAL { ?mattColton dbo:associatedMusicalArtist ?associatedArtist . }

  FILTER (lang(?mattColton) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
696,3,train,Who is the member of Dropkick Murphys?,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?member dbo:bandMember dbr:Dropkick_Murphys .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
285,3,train,Who is the child of Tina Onassis Niarchos?,SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  dbr:Tina_Onassis_Niarchos dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
617,13,train,Give me the spouse of the child of Antiochus III the Great.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?spouse
WHERE {
  ?antiochus a dbo:Person ;
             foaf:name ""Antiochus III the Great""@en .
  
  ?child dbo:parent ?antiochus ;
         a dbo:Person .

  ?child dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
994,7,train,Give me the persona of Don Dokken.,SELECT ?result WHERE { <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation ?notableWork ?genre ?band
WHERE {
  VALUES ?dokken { dbr:Don_Dokken }
  
  ?dokken dbo:occupation ?occupation .
  OPTIONAL { ?dokken dbo:notableWork ?notableWork . }
  OPTIONAL { ?dokken dbo:genre ?genre . }
  OPTIONAL { ?dokken dbo:memberOfBand ?band . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
754,0,train,Give me the parent of Loe Thai.,SELECT ?result WHERE { <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?loethai dbo:name ""Loe Thai""@en .
  ?loethai dbo:country ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
77,2,train,Give me the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?award
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Maxim Grigorievich Vlasov""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,8,0,0,1.0,1.0,1.0
314,2,train,Give me the commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:role ?role .
  FILTER(CONTAINS(LCASE(STR(?role)), ""commander"") || CONTAINS(LCASE(STR(?role)), ""general"") || CONTAINS(LCASE(STR(?role)), ""leader""))
  OPTIONAL { ?person rdfs:label ?name . FILTER (LANG(?name) = 'en') }
}
ORDER BY ?name
```",1,1,2,1,1,2,3,28,0,0,28,0,0.0,0
959,1,train,Give me the native of Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Japan .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,316,2113,8103,0.13009468917249897,0.03753414894880627,0.05825958702064896
534,3,train,"Who is the child, that is a politician and an office holder, of Desmond FitzGerald (politician)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?desmond a dbo:Politician ;
           foaf:name ""Desmond FitzGerald"" .
  
  ?desmond dbo:child ?child .

  ?child rdf:type dbo:Politician ;
         dbo:officeHolder ?office .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
365,6,train,Give me the reference to the real name of The Blasters.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member ?realName WHERE {
  ?band a dbo:Band ;
        rdfs:label ""The Blasters""@en .
  
  ?band dbo:member ?member .

  OPTIONAL { 
    ?member rdfs:label ?realName .
  }
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
360,3,train,"Give me the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/property/author> ""Dave Flett""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?person a dbo:MusicArtist ;
          foaf:name ""Dave Flett""@en .
  ?person dbo:album ?album .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
54,7,train,Give me the reference to Thihapate of Mohnyin.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?resource WHERE {
  ?resource rdfs:label ""Thihapate of Mohnyin""@en.
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
356,10,train,"Give me the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativePerson WHERE {
  # Step 1: Identify Gary Williams' birthplace
  dbr:Gary_Williams_(footballer,_born_1960) dbo:nationality dbr:England ;
                                         dbo:birthPlace ?birthPlace .

  # Step 2: Ensure the birthplace is an English settlement
  ?birthPlace a dbo:Settlement ;
              dbp:country dbr:England .

  # Step 3 and 4: Find natives who are both soccer players and managers
  ?nativePerson dbo:nativePlace ?birthPlace .
  ?nativePerson dbo:occupation ?occupation1 .
  ?nativePerson dbo:occupation ?occupation2 .
  
  FILTER (
    (str(?occupation1) = ""soccer player"" || str(?occupation1) = ""footballer"") &&
    (str(?occupation2) = ""soccer manager"" || str(?occupation2) = ""football manager"")
  )
}
```",2,6,3,2,1,3,2,20,0,0,17,0,0.0,0
429,1,train,Give me the country of 77th Ohio Infantry Regiment.,SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
  ?regiment a dbo:MilitaryUnit ;
            rdfs:label ""77th Ohio Infantry Regiment""@en .
  ?regiment dbo:country ?country .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
48,2,train,"Give me the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work
WHERE {
  ?producer rdf:type dbo:RecordProducer ;
            foaf:name ""Shellback (record producer)"" .
  ?producer dbo:work ?work .
}
```",1,2,2,1,1,3,2,20,0,0,57,0,0.0,0
281,5,train,"Who is the leader, that is a politician, of 1962 New South Wales state election?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?election dbo:electionDate ?date .
  FILTER (CONTAINS(LCASE(STR(?election)), ""1962 new south wales state election""))
  
  ?party dbo:leader ?leader .
  ?election dbo:candidateParty ?party .

  ?leader a dbo:Politician .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
281,2,train,Give me the war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:New_Zealand_Army dbo:participatedIn ?war .
  ?war a dbo:MilitaryConflict .
}
```",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
179,4,train,Who is the parent of Vajiralongkorn?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Vajiralongkorn""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
328,16,train,Give me the force of the person decedent at Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?militaryUnit
WHERE {
  ?person a dbo:Person ;
          dbo:deathPlace dbr:Budapest .
  OPTIONAL { ?person dbo:militaryUnit ?militaryUnit . }
}
```",2,2,3,2,1,3,3,71,0,1147,23,0.0,0.0,0
64,5,train,"Give me the alma mater of the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writerName ?almaMater
WHERE {
  ?person a dbo:Writer .
  ?person dbo:birthPlace dbr:Sremska_Kamenica .
  ?person rdfs:label ?writerName .
  FILTER (LANG(?writerName) = 'en')
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
ORDER BY ?writerName
```",2,3,3,2,1,2,2,9,0,2,1,0.0,0.0,0
767,15,train,"Give me the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration WHERE {
  # Identify Dustin Lynch and his album ""Where It's At""
  dbr:Dustin_Lynch a dbo:MusicalArtist ;
                   dbo:album dbr:Where_It%27s_At_(Dustin_Lynch_album) .

  # Find songwriters for the album
  dbr:Where_It%27s_At_(Dustin_Lynch_album) dbo:songwriter ?songwriter .

  # Check if songwriter is associated with a settlement
  ?songwriter dbo:birthPlace ?settlement .
  
  # Get administration of the settlement
  ?settlement dbo:administrativeAuthority ?administration .
}
```",2,3,3,2,1,3,3,71,0,0,31,0,0.0,0
251,5,train,Give me the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName WHERE {
  ?work dbo:title ""The Twelve Abbots of Challant""@en .
  ?work dbo:author ?author .
  ?author rdfs:label ?authorName .
  FILTER(LANG(?authorName) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
314,1,train,Give me the awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
    ?award dbo:recipient ?awardee .
    FILTER (str(?award) = ""dbr:Award_30"")  # Replace with the actual resource identifier for award number 30
}
```

Note: The placeholder `dbr:Award_30` should be replaced with the correct DBpedia resource URI or label that corresponds to the specific award identified as ""award 30.""",1,1,2,1,1,2,3,28,0,0,951,0,0.0,0
184,12,train,Give me the parent of Archduchess Ilona of Austria and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person dbo:child <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
  ?person dbo:parent <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
328,5,train,Who is the person decedent at Budapest?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName WHERE {
  ?person a dbo:Person .
  ?person dbo:name ?personName .
  OPTIONAL { ?person dbo:deathPlace dbr:Budapest . }
  OPTIONAL { ?person dbo:placeOfBurial dbr:Budapest . }
  FILTER EXISTS { 
    ?person dbo:deathPlace dbr:Budapest .
  } UNION
  FILTER EXISTS {
    ?person dbo:placeOfBurial dbr:Budapest .
  }
}
ORDER BY ?personName
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,1147,0,0.0,0
184,11,train,Give me the parent of the native of Budapest.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  ?person dbo:birthPlace dbr:Budapest .
  ?person dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,6,13,13,0.3157894736842105,0.3157894736842105,0.3157894736842105
617,8,train,Who is the child of Antiochus (son of Antiochus III the Great)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  dbr:Antiochus_(son_of_Antiochus_III_the_Great) dbo:child ?child .
  ?child rdfs:label ?childName .
  FILTER (LANG(?childName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
492,11,train,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?position dbo:positionName ""US Assistant Secretary of State for African Affairs""@en .
  ?position dbo:holder dbr:Joseph_C._Satterthwaite .
  ?person dbo:deceased ?deathDate .
  FILTER EXISTS { 
    ?position dbo:endTime ?endTime .
    ?person dbo:birthDate ?birthDate .
    FILTER (?birthDate < ?endTime && (BOUND(?deathDate) -> ?deathDate <= ?endTime))
  }
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
645,2,train,Give me the commander in Battle of Diamond Rock.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Diamond Rock""@en .
  ?battle dbp:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
16,1,train,Give me the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:profession dbo:Actress .
  ?person foaf:name ?name .
}
```",1,1,2,1,1,3,3,71,0,0,19241,0,0.0,0
498,1,train,Give me the band of Will Rahmer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Will Rahmer""@en .
  
  OPTIONAL { 
    ?person dbo:band ?band .
    ?band rdfs:label ?bandName .
    FILTER (lang(?bandName) = 'en')
  }
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
747,7,train,Give me the persona of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?occupation ?notableWork ?spouse ?birthDate ?abstract
WHERE {
  VALUES ?s { dbr:Shèna }
  OPTIONAL { ?s dbo:birthName ?birthName . }
  OPTIONAL { ?s dbo:occupation ?occupation . }
  OPTIONAL { ?s dbo:notableWork ?notableWork . }
  OPTIONAL { ?s dbo:spouse ?spouse . }
  OPTIONAL { ?s dbo:birthDate ?birthDate . }
  OPTIONAL { ?s dbo:abstract ?abstract . FILTER (lang(?abstract) = 'en') }
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
915,6,train,"Give me the father of Lizzie Spaulding and resident of Springfield, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?lizzie a dbo:Person ;
          foaf:name ""Lizzie Spaulding""@en .
  ?lizzie dbo:father ?father .
  ?father dbo:residence dbr:Springfield,_Illinois .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
161,0,train,Give me the military force of Rif War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  ?event a dbo:MilitaryConflict ;
         rdfs:label ""Rif War""@en .
  
  OPTIONAL { 
    ?participant dbo:participatedIn ?event ;
                 a ?type .
    
    FILTER(?type IN (dbo:MilitaryUnit, dbo:MilitaryOrganization))
    
    BIND(?participant AS ?militaryForce)
  }
}
```",1,1,2,1,1,3,3,71,0,0,56,0,0.0,0
179,2,train,"Who is the child, that is a royalty, of Nakkhatra Mangala?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?nakkhatraMangala a dbo:Nakkhatra .
  ?nakkhatraMangala rdfs:label ""Nakkhatra Mangala""@en .
  
  ?nakkhatraMangala dbo:child ?child .
  ?child a dbo:Royalty .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
356,0,train,Give me the player in 2015 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?team a dbo:SoccerClub ;
        rdfs:label ""Sacramento Republic FC""@en .
  
  ?season dbo:club ?team ;
          dbo:year ""2015""^^xsd:gYear .

  ?player dbo:playsFor ?team ;
          dbo:playedInSeason ?season .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
54,3,train,Give me the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  dbr:Thinkhaya_of_Pagan dbo:child ?child .
  ?child rdfs:label ?childName .
  FILTER (LANG(?childName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,3,3,0.0,0.0,0
9,4,train,"Who is the mayor, that is a politician, of Northern Ireland Forum?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor WHERE {
  ?forum a dbo:AdministrativeRegion ;
         rdfs:label ""Northern Ireland Forum""@en .
  
  ?forum dbo:mayor ?mayor .
  
  ?mayor a dbo:Politician .
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
626,4,train,Who is the military force of Battle of Borodino?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  VALUES ?battle { dbr:Battle_of_Borodino }
  ?battle dbo:participatedIn ?militaryForce .
}
```",1,1,2,1,1,3,2,20,0,0,52,0,0.0,0
10,9,train,Give me the professional in  and band member of Luke Vibert.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation ?bandMember
WHERE {
  VALUES ?lukeVibert { dbr:Luke_Vibert }
  
  OPTIONAL {
    ?lukeVibert dbo:occupation ?occupation .
  }

  OPTIONAL {
    ?lukeVibert dbo:bandMember ?bandMember .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
485,4,train,"Who is the awardee, that is a writer and a poet, of Eric Gregory Award?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee WHERE {
  ?awardee dbo:award dbr:Erich_Gregory_Award .
  ?awardee a dbo:Writer ;
          a dbo:Poet .
}
```",1,3,2,1,1,2,3,28,0,0,7,0,0.0,0
783,2,train,Give me the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personLabel WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Samuel Ofori Amponsah"" .
  ?person rdfs:label ?personLabel .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
182,11,train,Give me the entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?nationality
WHERE {
  ?entity a dbo:Person ;
          foaf:name ""Tamara Kunanayakam"" .
  ?entity dbo:nationality ?nationality .
}
```",2,2,3,2,1,2,3,28,0,0,62,0,0.0,0
488,17,train,"Who is the father of the spouse, that is a royalty, of Tokugawa Masako?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?fatherName WHERE {
  ?tokugawaMasako a dbo:Person ;
                  foaf:name ""Tokugawa Masako""@en .
  
  ?tokugawaMasako dbo:spouse ?spouse .

  FILTER EXISTS { 
    ?spouse rdf:type ?royaltyType .
    VALUES ?royaltyType { dbo:Monarch dbo:RoyalFamilyMember }
  }

  ?spouse dbo:father ?father .
  ?father foaf:name ?fatherName .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
827,0,train,"Give me the child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?person dbo:child ?child .
  ?person rdfs:label ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
92,0,train,Give me the band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band a dbo:Band ;
        dbp:name ""Nevermore""@en .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
115,6,train,Give me the alma mater of the awardee of National Order of Scientific Merit.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName ?almaMaterName
WHERE {
  ?person dbo:award dbr:National_Order_of_Scientific_Merit .
  ?person rdfs:label ?personName .
  FILTER (LANG(?personName) = 'en')
  
  ?person dbo:almaMater ?almaMater .
  ?almaMater rdfs:label ?almaMaterName .
  FILTER (LANG(?almaMaterName) = 'en')
}
LIMIT 1
```",2,2,3,2,1,2,2,9,0,2,5,0.0,0.0,0
701,2,train,Give me the spouse of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Ramesses_II dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,1,5,0.0,0.0,0
465,6,train,"Give me the administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?party ?organization
WHERE {
  ?leader a dbo:Person ;
          dbo:position ""Chairman of the Chamber of Deputies of the Czech Republic""@en .
  
  OPTIONAL { ?leader dbo:party ?party . }
  OPTIONAL { ?leader dbo:memberOf ?organization . }

  FILTER (lang(?leaderLabel) = 'en')
}
```",2,4,3,2,1,2,2,9,0,0,50,0,0.0,0
285,8,train,Give me the spouse of the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# This query cannot be completed as intended due to lack of specificity about the professional.
SELECT ?spouse WHERE {
  ?person a dbo:Person .
  ?person dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,2,20,3084,55346,1065,0.052781105596440184,0.7433116413593637,0.09856341584237523
820,8,train,Give me the child of the parent of Jason Schwartzman.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?childName WHERE {
  ?jason a dbo:Person ;
         foaf:name ""Jason Schwartzman""@en .
  
  ?jason dbo:parent ?parent .

  ?parent dbo:child ?child .
  
  ?child foaf:name ?childName .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
778,0,train,Give me the entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country dbr:United_States .
}
```",1,1,2,1,1,3,2,20,1307,62114,11701,0.020608315857523533,0.10047662976629766,0.034201677373771736
161,3,train,Who is the person decedent at Francoist Spain?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?title WHERE {
  ?person rdf:type dbo:Person .
  ?person rdfs:label ""Francisco Franco""@en .
  OPTIONAL { ?person dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""francoist"")) }
}
```",1,1,2,1,1,3,3,71,1,0,124,1.0,0.008,0.015873015873015872
303,6,train,Give me the entity in Panama and party of Guillermo Endara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?party 
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Guillermo Endara"" ;
          dbo:officeHolder ?office .
  ?office dbo:country dbr:Panama .
  ?person dbo:partyAffiliation ?party .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
547,17,train,Give me the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Gerald Graham""@en .
  ?person dbo:award ?award .
  ?award rdfs:label ?awardName .
  FILTER (lang(?awardName) = 'en')
}
```",2,2,3,2,1,3,3,71,0,5,2075,0.0,0.0,0
959,13,train,"Give me the native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?nativeOf WHERE {
  ?yōichiMasuzoe a dbo:Person ;
                 foaf:name ""Yōichi Masuzoe""@en .
  
  ?yōichiMasuzoe dbo:residence ?residence .

  FILTER EXISTS { ?residence rdf:type dbo:Country }

  ?residence dbo:nativeOf ?nativeOf .
}
```",2,3,3,2,1,3,3,71,0,0,8419,0,0.0,0
251,3,train,"Give me the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person rdfs:label ""Louis François Félix Musnier""@en .
  ?person a dbo:Person .

  OPTIONAL { 
    ?person dbo:militaryConflict ?war .
  }

  FILTER (lang(?personLabel) = 'en')
}
```",1,2,2,1,1,2,3,28,0,0,16,0,0.0,0
182,10,train,Give me the war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Gotabhaya_Rajapaksa a dbo:Person .
  OPTIONAL { 
    ?workForOrganization dbo:head dbr:Gotabhaya_Rajapaksa .
    ?workForOrganization dbo:relatedTo ?war .
  }
  FILTER (regex(str(?war), ""Sri Lankan Civil War"", ""i""))
}
```",2,2,3,2,1,2,3,28,0,0,5,0,0.0,0
55,3,train,"Give me the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?song dbo:title ""Used to Love Her"" .
  ?song dbo:producer ?producer .
  ?producer a dbo:Band .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
981,5,train,"Who is the person born, that is a beauty queen, as ?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/property/birthName> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?birthDate .
  ?person dbo:award ?award .
  FILTER EXISTS { 
    ?award rdfs:label ?awardLabel .
    FILTER (CONTAINS(LCASE(?awardLabel), ""beauty queen"") || CONTAINS(LCASE(?awardLabel), ""miss world"") || CONTAINS(LCASE(?awardLabel), ""miss universe""))
  }
}
ORDER BY ?birthDate
LIMIT 10
```",1,2,2,1,1,3,2,20,0,18,120,0.0,0.0,0
485,9,train,Give me the entity in Nottinghamshire and birth place of Thomas Warner (poet).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInNottinghamshire ?birthPlace
WHERE {
  ?poet a dbo:Poet ;
        foaf:name ""Thomas Warner"" .
  
  OPTIONAL { 
    ?poet dbo:residence dbr:Nottinghamshire .
    BIND(?poet AS ?entityInNottinghamshire)
  }
  
  ?poet dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
783,7,train,Give me the associated musical artist of the band member of Ofori Amponsah.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist WHERE {
  ?person rdfs:label ""Ofori Amponsah""@en .
  ?band dbo:bandMember ?person .
  ?band dbo:associatedMusicalArtist ?artist .
}
```",2,2,3,2,1,3,2,20,0,0,35,0,0.0,0
251,8,train,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/place> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?location
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Louis François Félix Musnier""@en .
  
  ?person dbo:participatedIn ?war .

  ?war dbp:location ?location .
}
```",2,3,3,2,1,2,3,28,0,0,25,0,0.0,0
345,3,train,Give me the nickname of FC Vaduz.,SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname
WHERE {
  dbr:FC_Vaduz dbo:nickname ?nickname .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
92,9,train,Give me the band member of Nevermore and associated musical artist of Jim Sheppard.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
# Query to find members of the band Nevermore
SELECT ?member WHERE {
  ?band rdf:type dbo:MusicalArtist .
  ?band rdfs:label ""Nevermore""@en .
  ?band dbo:bandMember ?member .
  ?member rdf:type dbo:Person .
}

# Assuming Jim Sheppard is identified from the first query, find associated musical artists
SELECT DISTINCT ?associatedArtist WHERE {
  ?person rdf:type dbo:Person ;
          foaf:name ""Jim Sheppard"" .
  OPTIONAL { ?person dbo:associatedBand ?band . }
  ?band dbo:bandMember ?associatedArtist .
  ?associatedArtist rdf:type dbo:MusicalArtist .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
820,10,train,Who is the parent of the professional in Actor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorLabel ?parentLabel WHERE {
  ?actor a dbo:Actor .
  ?actor rdfs:label ""Tom Hanks""@en .
  ?actor dbo:parent ?parent .
  ?parent rdfs:label ?parentLabel .
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,3,2,20,0,0,921,0,0.0,0
626,1,train,Give me the awardee of Order of St. Andrew.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipientName WHERE {
  ?award a dbo:Award ;
        rdfs:label ""Order of St. Andrew""@en .
  ?award dbo:recipient ?recipient .
  ?recipient foaf:name ?recipientName .
}
```",1,1,2,1,1,3,2,20,0,0,33,0,0.0,0
161,11,train,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  dbr:Francisco_Franco dbo:commander ?militaryRole .
  ?militaryRole dbo:militaryConflict dbr:Spanish_Civil_War .
  ?militaryRole dbo:member ?militaryForce .
}
```",2,5,3,2,1,3,3,71,0,0,545,0,0.0,0
666,3,train,"Give me the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team a dbo:FootballClub ;
        dbo:currentSeason ""2016–17"" ;
        dbo:manager ?manager .
  
  FILTER EXISTS { ?manager a dbo:SportsManager }
  
  VALUES ?team { dbr:Hull_City_A.F.C. }
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
232,5,train,"Give me the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation dbr:Actor ;
          dbo:occupation dbr:Narrator ;
          dbo:occupation dbr:Producer .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
179,0,train,Give me the person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?label
WHERE {
  ?person rdf:type dbo:Person .
  ?person dbo:birthName ""Mom Rajawongse Sirikit Kitiyakara""@en .
  ?person rdfs:label ?label .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
318,1,train,Give me the professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?composer (SAMPLE(?occupation) AS ?professionalOccupation) (GROUP_CONCAT(DISTINCT ?work; separator="", "") AS ?notableWorks)
WHERE {
  ?composer a dbo:Composer .
  OPTIONAL { ?composer dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(str(?occupation)), ""music"")) }
  OPTIONAL { ?composer dbo:notableWorks ?work . }
}
GROUP BY ?composer
ORDER BY ?composer
```",1,1,2,1,1,2,2,9,0,0,1916,0,0.0,0
838,10,train,"Give me the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName
WHERE {
  ?yugrupa a dbo:Band ;
           rdfs:label ""YU Grupa""@en .
  
  OPTIONAL { 
    ?yugrupa dbo:influencedBy ?band .
    ?band rdfs:label ?bandName .
    FILTER(LANG(?bandName) = 'en')
  }
}
```",2,5,3,2,1,3,2,20,0,0,8,0,0.0,0
9,12,train,Give me the figure known as QUB and alma mater of Allen Hill (scientist).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  # Find the entity known as QUB
  VALUES ?qub { dbr:Queen's_University_Belfast }
  
  # Find Allen Hill and his alma mater
  ?allenHill a dbo:Scientist ;
             foaf:name ""Allen Hill"" ;
             dbo:almaMater ?university .
  
  # Check if the alma mater is QUB
  FILTER (?university = ?qub)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
9,16,train,"Who is the awardee of the reference, that is an award, to Royal Medals?","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?medal a dbo:RoyalMedal .
  ?medal dbo:recipient ?recipient .
}
```",2,3,3,2,1,3,3,71,0,0,45,0,0.0,0
328,11,train,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?awardee WHERE {
  VALUES ?person { dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape }
  
  ?person dbo:award ?award .
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,3,71,0,0,1484,0,0.0,0
915,3,train,"Give me the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Stephen Verona""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type ?type .
  FILTER (
    ?type IN (dbo:Settlement, dbo:City) ||
    ?type IN (dbpedia-owl:Village, dbpedia-owl:Town)
  )
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
55,4,train,"Give me the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?symphony a dbo:Orchestra ;
            rdfs:label ""San Francisco Symphony""@en .
  
  OPTIONAL { 
    ?symphony dbo:member ?bandMember .
  }
  
  OPTIONAL {
    ?symphony dbo:associatedBand ?bandMember .
  }

  FILTER (lang(?bandMember) = 'en')
}
```",1,3,2,1,1,2,3,28,0,0,3,0,0.0,0
345,1,train,Give me the team of Alessandro Mangiarratti.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team
WHERE {
  VALUES ?person { dbr:Alessandro_Mangiarratti }
  ?person dbo:playsFor ?team .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
55,6,train,Give me the band member of Metallica and band member of Guns N' Roses.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?member WHERE {
  ?member dbo:bandMember dbr:Metallica .
  ?member dbo:bandMember dbr:Guns_N'_Roses .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
827,2,train,"Who is the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?person dbo:parent ?parent .
  ?person rdfs:label ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
547,12,train,Give me the resting place of Simon Cadell and resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  VALUES (?person ?label) { 
    (dbr:Simon_Cadell ""Simon Cadell"") 
    (dbr:Alan_Cunningham_(actor) ""Alan Cunningham"")
  }
  
  ?person a dbo:Person ;
          rdfs:label ?label .
  
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  OPTIONAL { ?person dbo:burialPlace ?restingPlace . }

  FILTER (lang(?label) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
92,4,train,"Give me the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?band a dbo:Band ;
        rdfs:label ""Nevermore""@en .
  
  ?member dbo:bandMember ?band ;
          dbo:leadArtist ?artist .

  FILTER (lang(?bandLabel) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
378,12,train,"Give me the war of Joaquín Blake and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
# Query for the war involving Joaquin Blake
SELECT ?war WHERE {
    ?person dbo:wikiPageID ""Joaqu%C3%ADn_Blake"" .
    ?person a dbo:Person .
    ?person dbo:militaryConflict ?war .
}

UNION

# Query for the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?fame WHERE {
    ?person dbo:wikiPageID ""Louis_des_Balbes_de_Berton_de_Crillon"" .
    ?person a dbo:Person .
    ?person dbo:famousFor ?fame .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
645,1,train,Give me the alma mater of Sylvia Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater
WHERE {
  dbr:Sylvia_Pankhurst dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
427,3,train,Give me the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?party
WHERE {
  ?person rdf:type dbo:Person .
  ?person foaf:name ""Michele Pinto"" .
  ?person dbo:party ?party .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
498,6,train,"Give me the band of the member, that is an artist, of Mortician (band).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?memberBand WHERE {
  ?m dbo:band dbr:Mortician_(band) .
  ?m rdf:type dbo:Artist .
  ?m dbo:band ?memberBand .
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
44,1,train,Give me the band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName WHERE {
  ?band dbr:Sledgeback ;
        dbo:bandMember ?member .
  ?member foaf:name ?memberName .
}
```",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
281,15,train,Who is the awardee of the award of Jonathon Band?,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient
WHERE {
  ?award dbo:recipient ?recipient .
  ?award dbo:awardee dbr:Jonathon_Band .
}
```",2,2,3,2,1,3,3,71,0,0,558,0,0.0,0
435,3,train,"Give me the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?townName WHERE {
  ?town a dbo:Town ;
        dbo:country dbr:Iceland .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,4,2,1,1,2,3,28,0,0,1,0,0.0,0
421,10,train,Give me the native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfBirthplace
WHERE {
  # Find Samir Bekrić's resource and his birthplace
  dbr:Samir_Bekrić dbo:birthPlace ?birthPlace .

  # Determine who is native to this birthplace
  ?birthPlace dbo:nativeOf ?nativeOfBirthplace .
}
```",2,2,3,2,1,2,3,28,0,0,5492,0,0.0,0
659,12,train,Give me the military force of Napoleonic Wars and commander in Battle of Leipzig.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for military forces in the Napoleonic Wars
SELECT DISTINCT ?militaryForce WHERE {
  ?militaryForce a dbo:MilitaryUnit .
  ?militaryForce dbo:participatedIn dbr:Napoleonic_Wars .
}

# Query for commander of the Battle of Leipzig
SELECT DISTINCT ?commander WHERE {
  ?battle dbr:Battle_of_Leipzig ;
         dbo:commander ?commander .
}
```",2,2,3,1,2,3,3,71,0,0,5,0,0.0,0
712,1,train,Give me the resting place of Nina Onilova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  VALUES ?ninaOnilova { dbr:Nina_Onilova }
  OPTIONAL { ?ninaOnilova dbo:deathPlace ?restingPlace . }
  OPTIONAL { ?ninaOnilova dbo:burialPlace ?restingPlace . }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
959,6,train,"Give me the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Yōichi Masuzoe""@en .
  ?person dbo:residence ?residence .
  FILTER EXISTS { ?residence a dbo:Country }
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
712,2,train,"Give me the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?uprising a dbo:Uprising ;
           rdfs:label ""Vyoshenskaya Uprising""@en .
  
  ?militaryForce a dbo:MilitaryUnit, dbo:Organization ;
                 dbo:participatedIn ?uprising .

  FILTER(LANG(?militaryForce) = 'en')
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
783,3,train,Give me the band member of Ofori Amponsah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bandMember
WHERE {
  ?ofoiriAmponsah dbo:musicalArtist ""Ofori Amponsah""@en .
  OPTIONAL { ?ofoiriAmponsah dbo:memberOfBand ?bandMember . }
  OPTIONAL { ?bandMember dbo:bandMember ?member . FILTER(?member = ?ofoiriAmponsah) }
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
232,17,train,"Give me the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:France ;
          dbo:birthPlace ?birthPlace .
  
  FILTER (isLiteral(?birthPlace) && contains(str(?birthPlace), ""France""))

  ?person dbo:residence ?residence .

  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
179,10,train,Who is the child of the parent of Vajiralongkorn?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?vajiralongkorn dbo:parent ?parent .
  FILTER(STR(?vajiralongkorn) = ""Vajiralongkorn"")
  
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
10,10,train,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  ?person dbr:Luke_Francis_Vibert .
  ?person a dbo:Artist .
  ?person dbo:birthDate ?birthDate .
  ?person dbo:bandMember ?group .
  ?member dbo:bandMember ?group .
  ?member rdfs:label ?bandMemberLabel .
  FILTER(LANG(?bandMemberLabel) = ""en"")
}
```",2,3,3,2,1,2,3,28,0,0,3,0,0.0,0
783,1,train,Give me the band member of Ebony Reigns.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  ?ebony a dbo:MusicalArtist ;
         foaf:name ""Ebony Reigns""@en .
  
  ?ebony dbo:bandMember ?member .
  ?member foaf:name ?bandMember .
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
232,0,train,Give me the child of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childLabel
WHERE {
  ?person rdf:type dbo:Person .
  ?person rdfs:label ""Jon Pertwee""@en .
  ?person dbo:child ?child .
  ?child rdfs:label ?childLabel .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
182,4,train,Give me the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  VALUES ?rajapaksa { dbr:Gotabhaya_Rajapaksa }
  ?rajapaksa a dbo:Person .
  OPTIONAL { ?rajapaksa dbo:occupation ?work . }
  OPTIONAL { ?rajapaksa dbo:positionHeld ?work . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
391,1,train,Give me the actor of The Departed.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:title ""The Departed""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
547,2,train,Give me the resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alan Cunningham""@en .
  OPTIONAL { ?person dbo:finalRestingPlace ?restingPlace . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
142,5,train,Give me the entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?entity a dbo:TimeZone .
  ?entity rdfs:label ""Japan Standard Time""@en .
}
```",2,2,3,2,1,2,2,9,0,0,8922,0,0.0,0
981,7,train,Give me the entity in the region of Time in Indonesia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?timeZoneLabel WHERE {
  ?timeZone a dbo:TimeZone .
  ?timeZone dbp:country ""Indonesia"" .
  ?timeZone rdfs:label ?timeZoneLabel .
  FILTER(LANG(?timeZoneLabel) = 'en')
}
```",2,2,3,2,1,3,2,20,0,0,2949,0,0.0,0
659,9,train,Give me the commander in German campaign of 1813 and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderGermanCampaign ?commanderBattleOfLeipzig WHERE {
  # Commander in the German campaign of 1813
  ?eventGermanCampaign a dbo:MilitaryConflict ;
                      dbo:participatingMilitaryUnit ?unitPrussian ;
                      dbo:commander ?commanderGermanCampaign .
  
  FILTER(CONTAINS(LCASE(STR(?eventGermanCampaign)), ""german campaign 1813""))

  # Commander in the Battle of Leipzig
  ?eventBattleOfLeipzig a dbo:MilitaryConflict ;
                        dbo:participatingMilitaryUnit ?unitPrussian ;
                        dbo:commander ?commanderBattleOfLeipzig .

  FILTER(CONTAINS(LCASE(STR(?eventBattleOfLeipzig)), ""battle of leipzig""))

  # Ensure the same person can be commander in both events
  OPTIONAL { ?commanderGermanCampaign = ?commanderBattleOfLeipzig }
}
```",2,2,3,1,2,3,3,71,0,0,16,0,0.0,0
465,5,train,Give me the death place of the native of Prague.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace
WHERE {
  ?person dbo:birthPlace dbr:Prague .
  ?person dbo:deathPlace ?deathPlace .
}
```",2,2,3,2,1,2,2,9,254,0,0,1.0,1.0,1.0
963,9,train,"Give me the region, that is a country, of the time zone of Herzegovina-Neretva Canton.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Find the time zone of Herzegovina-Neretva Canton
  dbr:Herzegovina-Neretva_Canton dbo:timeZone ?timeZone .
  
  # Find regions or countries that use this time zone
  ?region dbo:timeZone ?timeZone ;
          a dbo:Country .

  # Bind the region to the variable ?country
  BIND(?region AS ?country)
}
```",2,3,3,2,1,3,2,20,52,42,4,0.5531914893617021,0.9285714285714286,0.6933333333333335
801,1,train,Give me the producer of Westside Story (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:West_Side_Story_(song) dbo:producer ?producer .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
617,16,train,"Who is the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?antiochusIII a dbo:Monarch ;
                foaf:name ""Antiochus III the Great""@en .
  
  ?son dbo:father ?antiochusIII ;
       foaf:name ""Antiochus""@en .

  ?successor dbo:predecessor ?son ;
             rdf:type dbo:Monarch .

  ?child dbo:parent ?successor ;
         rdf:type dbo:Monarch .
}
```",2,3,3,2,1,3,3,71,0,0,6,0,0.0,0
820,7,train,Give me the professional in the award of Scott McCloud.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professionalCategory
WHERE {
  VALUES ?scottMcCloud { dbr:Scott_McCloud }
  
  ?award dbo:recipient ?scottMcCloud .
  ?award dbo:category ?professionalCategory .
}
```",2,2,3,2,1,3,2,20,0,0,39650,0,0.0,0
617,6,train,Give me the parent of Mieszko II Lambert and child of Doubravka of Bohemia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?mieszko2 dbo:parent ?person .
  FILTER(STR(?mieszko2) = ""Mieszko_II_Lambert"")
  
  ?doubravka dbo:child ?person .
  FILTER(STR(?doubravka) = ""Doubravka_of_Bohemia"")
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
801,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  dbr:Paris dbo:notablePeople ?person .
}
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
328,13,train,Give me the commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?position
WHERE {
  dbr:Ferenc_Szálasi dbo:position ?position .
}
```",2,2,3,2,1,3,3,71,0,0,73,0,0.0,0
391,4,train,Give me the figure known as Hub City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Hub City""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>

SELECT ?city WHERE {
  ?city a dbo:City .
  OPTIONAL { ?city rdfs:label ""Hub City""@en . }
  OPTIONAL { ?city skos:altLabel ""Hub City""@en . }
}
```",1,1,2,1,1,3,3,71,3,38260,1,7.840472519143821e-05,0.75,0.0001567930592939086
659,14,train,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  ?schimmelpenninck dbo:associatedMilitaryForce ?militaryForce .
  ?militaryForce a dbo:SocietalEvent ;
                 a dbo:MilitaryConflict .
  FILTER (str(?schimmelpenninck) = ""Rutger_Jan_Schimmelpenninck"")
}
```",2,5,3,2,1,3,3,71,0,0,1127,0,0.0,0
617,17,train,Who is the child of the commander in Battle of Panium?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Panium""@en .
  
  ?battle dbp:commander ?commander .

  ?commander dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
360,8,train,"Give me the writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?person a dbo:MusicArtist ;
          foaf:name ""Dave Flett""@en .
  ?album dbo:composer ?person ;
         a dbo:Album .
}
```",2,3,3,2,1,2,3,28,0,0,8,0,0.0,0
294,6,train,"Give me the resting place of Luke Lea (American politician, born 1879) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?lukeLeaRestingPlace ?edwinKeebleRestingPlace
WHERE {
  ?lukeLea a dbo:Person ;
           dbo:birthDate ?lukeLeaBirthDate .
  FILTER (YEAR(?lukeLeaBirthDate) = 1879)
  OPTIONAL { ?lukeLea dbo:finalRestingPlace ?lukeLeaRestingPlace . }

  ?edwinKeeble a dbo:Person ;
               rdfs:label ""Edwin A. Keeble""@en .
  OPTIONAL { ?edwinKeeble dbo:finalRestingPlace ?edwinKeebleRestingPlace . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
184,0,train,Give me the parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Géza von Habsburg""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
328,3,train,Who is the commander in Volcano and Ryukyu Islands campaign?,SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?campaign a dbo:MilitaryConflict ;
           rdfs:label ""Volcano and Ryukyu Islands campaign""@en .
  
  OPTIONAL { ?campaign dbo:commander ?commander . }
}
```",1,1,2,1,1,3,3,71,20,0,0,1.0,1.0,1.0
626,0,train,Give me the commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?battle dbo:wikiPageRedirects dbr:Battle_of_Leipzig .
  ?battle dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,21,0,0.0,0
838,3,train,"Give me the band member, that is an artist and a musical artist, of YU Grupa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band rdf:type dbo:Band ;
        rdfs:label ""YU Grupa""@en .
  
  ?band dbo:bandMember ?member .

  ?member rdf:type dbo:Artist, dbo:MusicalArtist .
}
```",1,3,2,1,1,3,2,20,0,2,4,0.0,0.0,0
747,8,train,Who is the person born as Tracey Elizabeth McSween?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personLabel WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Tracey Elizabeth McSween"" .
  ?person rdfs:label ?personLabel .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
345,6,train,Give me the figure known as Stolz von Liechtenstein and team of Alessandro Mangiarratti.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . }","```sparql
# Query for Stolz von Liechtenstein
SELECT ?breeder ?owner WHERE {
  ?horse a dbo:Horse ;
         rdfs:label ""Stolz von Liechtenstein""@en .
  OPTIONAL { ?horse dbo:breeder ?breeder . }
  OPTIONAL { ?horse dbo:owner ?owner . }
}

# Query for Alessandro Mangiarratti
SELECT ?team WHERE {
  ?jockey a dbo:Jockey ;
          rdfs:label ""Alessandro Mangiarratti""@en .
  ?jockey dbo:jockeyTeam ?team .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
801,8,train,"Give me the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?song dbo:title ""40 Dayz & 40 Nightz"" .
  ?song dbo:lyricsBy ?writer .
  ?writer a dbo:MusicalArtist ;
          a dbo:Artist .
}
```",1,3,2,1,1,3,3,71,0,0,12,0,0.0,0
666,7,train,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team a dbo:SportsTeam ;
        rdfs:label ""Hull City A.F.C.""@en ;
        dbo:season ?season .
  
  FILTER(CONTAINS(LANG(?season), ""2016-17""))
  
  ?team dbo:manager ?manager .
}
```",2,3,3,2,1,3,2,20,0,0,22,0,0.0,0
345,9,train,"Give me the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  ?club a dbo:SoccerClub ;
        a dbo:Organization .
  ?club rdfs:label ?nickname .
  ?player dbo:nationality dbr:Switzerland ;
          dbo:sport dbr:Soccer ;
          dbo:team ?club .
  ?player foaf:name ""Armando Heeb""@en .
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
981,4,train,Give me the author of Kamikaze Girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName
WHERE {
  ?book a dbo:Book .
  ?book dbo:title ""Kamikaze Girls""@en .
  ?book dbo:author ?author .
  ?author foaf:name ?authorName .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
391,6,train,"Give me the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work
WHERE {
  dbr:Michael_Ballhaus a dbo:Person .
  dbr:Michael_Ballhaus dbo:notableWork ?work .
}
```",1,2,2,1,1,3,3,71,0,0,4,0,0.0,0
9,10,train,"Give me the figure known as QUB and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""John Alderdice"" ;
          dbo:almaMater ?almaMater .
  
  FILTER EXISTS { 
    ?almaMater rdfs:label ""Queen's University Belfast""@en .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
197,2,train,Who is the member of FC Politehnica Timișoara?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  dbr:FC_Politehnica_Timișoara dbo:player ?player .
}
```",1,1,2,1,1,2,2,9,0,0,572,0,0.0,0
54,5,train,Give me the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Thado_Minsaw_of_Prome dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,6,train,Give me the war of Mahesh Senanayake and war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war WHERE {
  VALUES ?person { 
    dbr:Mahesh_Senanayake 
    dbr:Jagath_Dias 
  }
  
  ?person dbo:participatedIn ?war .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
778,7,train,Give me the entity in the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ralph L. Brinster""@en .
  ?person dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,9,18629,0.0,0.0,0
179,5,train,Who is the child of Bhumibol Adulyadej?,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Bhumibol_Adulyadej dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
54,13,train,Give me the parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parent
WHERE {
  ?narapatiI a dbo:Person ;
             foaf:name ""Narapati I of Ava""@en .
  
  ?narapatiI dbo:child ?child .

  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
303,5,train,"Who is the person born, that is a politician, as Arnulfo Arias Madrid?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person ?name WHERE {
  ?person rdf:type dbo:Person .
  ?person dbo:birthName ""Arnulfo Arias Madrid"" .
  OPTIONAL { ?person dbo:name ?name . }
  OPTIONAL { ?person dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(?occupation), ""politician"")) }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
534,5,train,Give me the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?owner
WHERE {
  ?arena a dbo:Arena ;
         rdfs:label ""RDS Arena""@en .
  ?arena dbo:owner ?owner .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
767,1,train,Give me the alma mater of Carl L. Nippert.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMaterLabel
WHERE {
  ?person rdf:type dbo:Person .
  ?person rdfs:label ""Carl L. Nippert""@en .
  ?person dbo:almaMater ?almaMater .
  ?almaMater rdfs:label ?almaMaterLabel .
}
```",1,1,2,1,1,3,3,71,0,3,3,0.0,0.0,0
963,1,train,Give me the administration of Serbian Progressive Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader
WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Serbian Progressive Party""@en .
  OPTIONAL { 
    ?party dbo:leader ?leader .
  }
}
```",1,1,2,1,1,3,2,20,0,0,86,0,0.0,0
345,4,train,Give me the birth date of Eiður Guðjohnsen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthDate
WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Eiður Guðjohnsen""@en .
  ?person dbo:birthDate ?birthDate .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
10,6,train,Give me the associated musical artist of Matt Colton and band member of Luke Vibert.,SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commonEntity
WHERE {
  # Find musical artists associated with Matt Colton
  ?mattColton dbo:name ""Matt Colton""@en .
  
  OPTIONAL { 
    ?mattColton dbo:associatedBand ?artist1 .
  }
  
  # Find bands that Luke Vibert is a member of
  ?lukeVibert dbo:name ""Luke Vibert""@en .
  
  OPTIONAL {
    ?lukeVibert dbo:bandMember ?artist2 .
  }

  # Check for common entities between the two sets
  FILTER (?artist1 = ?artist2)
  BIND(?artist1 AS ?commonEntity)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
391,3,train,"Give me the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname
WHERE {
  ?city a dbo:City ;
        rdfs:label ""Jackson, Tennessee""@en .
  ?city dbp:nickname ?nickname .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
696,2,train,"Give me the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?associatedBand
WHERE {
  ?boils a dbo:MusicalArtist .
  ?boils rdfs:label ""The Boils""@en .
  ?boils dbo:associatedBand ?associatedBand .
}
```",1,4,2,1,1,3,2,20,2,2,0,0.5,1.0,0.6666666666666666
994,16,train,"Give me the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person rdfs:label ""Fredrik Thordendal""@en .
  ?person dbo:member ?membership .
  ?membership dbo:musicalArtist ?band .
  
  FILTER(?band = dbr:Meshuggah) .

  ?band a dbo:Band ;
       a dbo:MusicalGroup ;
       a dbo:Organization .
}
```",2,6,3,2,1,3,3,71,0,0,6,0,0.0,0
492,3,train,Give me the author of French Algeria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName
WHERE {
  ?work dbo:subject dbr:French_Algeria .
  ?work dbo:author dbr:Albert_Camus .
  dbr:Albert_Camus rdfs:label ?authorName .
  FILTER (lang(?authorName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
9,1,train,Give me the alma mater of Allen Hill (scientist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater
WHERE {
  ?person a dbo:Scientist ;
          foaf:name ""Allen Hill"" .
  ?person dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,4,train,Give me the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherName WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Soe Min Wimala Dewi""@en .
  ?person dbo:father ?father .
  ?father rdfs:label ?fatherName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
492,13,train,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryConflict WHERE {
  ?person dbo:name ""Frédéric-Georges Herr""@en .
  ?person a dbo:Person .
  ?person dbo:militaryCommanderOf ?militaryConflict .
  FILTER EXISTS { ?militaryConflict a dbo:MilitaryConflict }
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
485,2,train,Give me the entity in Nottinghamshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity dbo:location ?place .
  FILTER (str(?place) = ""Nottinghamshire"")
}
```",1,1,2,1,1,2,3,28,0,0,369,0,0.0,0
827,10,train,"Who is the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?princess rdf:type dbo:Person ;
            rdfs:label ""Princess Pauline of Saxe-Weimar-Eisenach""@en .
  
  ?princess dbo:spouse ?spouse .
  ?spouse rdf:type dbo:RoyalFamilyMember .

  ?spouse dbo:child ?child .
  ?child rdf:type dbo:RoyalFamilyMember .
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
142,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?label
WHERE {
  ?entity a dbo:Place .
  OPTIONAL { ?entity rdfs:label ?label . FILTER (lang(?label) = 'en') }
  OPTIONAL { ?entity geo:location ?loc . 
             ?loc geo:lat ?lat ; geo:long ?long .
             BIND(geo:wktLiteral(""POLYGON((139.6917 35.6895, 140.0 36.0, 138.0 37.0, 137.0 36.0, 139.6917 35.6895))"") AS ?japanBoundary) .
             FILTER (geo:intersects(?loc, ?japanBoundary))
           }
  OPTIONAL { ?entity dbo:country dbr:Japan . }
}
ORDER BY ?label
LIMIT 10
```",1,1,2,1,1,2,2,9,0,0,8916,0,0.0,0
55,2,train,Give me the band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName
WHERE {
  dbr:Jason_Newsted dbo:musicalArtist ?band .
  ?band rdfs:label ?bandName .
  FILTER (lang(?bandName) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,9,0,0.0,0
392,7,train,Give me the province of Schio and entity in Italy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?town ?province WHERE {
  VALUES ?town { dbr:Schio }
  ?town dbo:administrativeTerritory ?province .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
427,13,train,Give me the party of the father of Lamberto Andreotti.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyLabel
WHERE {
  ?person dbo:father dbr:Giorgio_Andreotti .
  ?person foaf:name ""Lamberto Andreotti""@en .
  ?person dbo:party ?party .
  ?party rdfs:label ?partyLabel .
  FILTER (lang(?partyLabel) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
294,2,train,"Give me the entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a dbo:City .
  ?entity dbo:location dbr:Nashville,_Tennessee .
}
```",1,1,2,1,1,2,3,28,0,0,340,0,0.0,0
303,11,train,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName
WHERE {
  dbr:Arnulfo_Arias_Madrid a dbo:Politician .
  dbr:Arnulfo_Arias_Madrid dbo:party ?party .
  ?party rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
```",2,3,3,2,1,2,3,28,0,0,1,0,0.0,0
767,9,train,Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater ?entityInBadenWuerttemberg
WHERE {
  # Find the alma mater of Carl L. Nippert
  OPTIONAL {
    ?nippert a dbo:Person ;
            foaf:name ""Carl L. Nippert"" ;
            dbo:almaMater ?almaMater .
  }

  # Find an entity in Baden-Württemberg
  OPTIONAL {
    ?entityInBadenWuerttemberg a dbo:Place ;
                               dbo:stateOrProvince dbr:Baden-Württemberg .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
488,8,train,Who is the father of Emperor Go-Mizunoo?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName WHERE {
  dbr:Emperor_Go-Mizunoo dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER (lang(?fatherName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
838,8,train,"Give me the band member of the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName WHERE {
  ?band a dbo:MusicalGroup ;
        foaf:name ""YU Grupa""@en .
  ?member dbo:bandMember ?band .
  ?member foaf:name ?memberName .
}
```",2,3,3,2,1,3,2,20,0,0,40,0,0.0,0
801,17,train,"Give me the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album a dbo:Album ;
         rdfs:label ""What U See Is What U Get""@en .
  OPTIONAL { ?album dbo:artist ?writer . }
  FILTER (lang(?albumLabel) = 'en')
}
```",2,6,3,2,1,3,3,71,0,0,12,0,0.0,0
48,4,train,Give me the show with Stacey Dash.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?title WHERE {
  VALUES ?staceyDash { dbr:Stacey_Dash }
  
  # For films where Stacey Dash is starring
  ?film dbo:starring ?staceyDash .
  ?film rdfs:label ?title .
  FILTER (lang(?title) = 'en')

  UNION

  # For TV shows, assuming a similar property exists for cast members
  ?tvShow dbo:castMember ?staceyDash .
  ?tvShow rdfs:label ?title .
  FILTER (lang(?title) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,18,0,0.0,0
378,10,train,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?claimToFame
WHERE {
  VALUES ?person { 
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón 
    dbr:C_P_Gahn 
  }
  
  OPTIONAL { ?person dbo:knownFor ?claimToFame . }
  OPTIONAL { ?person dbo:occupation ?occupation . FILTER (regex(?occupation, ""military|chemist"", ""i"")) }
}
```",2,2,3,1,2,3,3,71,0,2,2,0.0,0.0,0
328,17,train,"Give me the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?governmentAgency
WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Gustav Jonson"" ;
          dbo:office ?office .
  ?office dbo:headOf ?governmentAgency .
  FILTER EXISTS { ?person dbo:positionHeld ?position . }
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
339,4,train,Who is the parent of Princess Olga of Greece and Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName
WHERE {
  dbr:Princess_Olga_of_Greece_and_Denmark dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER (lang(?parentName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,2,2,0.0,0.0,0
701,16,train,Give me the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchildLabel WHERE {
  ?setiI rdfs:label ""Seti I""@en .
  ?setiI dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild rdfs:label ?grandchildLabel .
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
996,6,train,Give me the entity in France and force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInFrance ?force
WHERE {
  # Find entities related to Dagobert Sigmund von Wurmser that are in France
  ?wurmser dbo:wikiPageRedirects dbr:Dagobert_Sigmund_von_Wurmser .
  
  OPTIONAL {
    ?wurmser dbo:militaryConflict ?conflict .
    ?conflict dbo:location ?entityInFrance .
    FILTER (lang(?entityInFranceLabel) = 'en' && contains(lcase(str(?entityInFranceLabel)), ""france""))
  }
  
  # Find the military force associated with Dagobert Sigmund von Wurmser
  OPTIONAL {
    ?wurmser dbo:commander ?force .
  }
}
```",2,2,3,1,2,3,2,20,0,0,4,0,0.0,0
492,10,train,Give me the person decedent at French Algeria and person decedent at Algiers.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?person
WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace ?place1 .
  ?place1 rdfs:label ""French Algeria""@en .
  FILTER NOT EXISTS { ?place1 rdfs:label ?otherLabel . FILTER(?otherLabel != ""French Algeria"") }
  
  ?person dbo:deathPlace ?place2 .
  ?place2 rdfs:label ""Algiers""@en .
  FILTER NOT EXISTS { ?place2 rdfs:label ?otherLabel . FILTER(?otherLabel != ""Algiers"") }
}
```",2,2,3,1,2,3,3,71,0,0,16,0,0.0,0
421,6,train,Give me the band member of Senidah and native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  ?senidah a dbo:MusicalArtist ;
           foaf:name ""Senidah""@en .
  
  ?senidah dbo:bandMember ?bandMember .

  ?bandMember dbo:birthPlace ?place .
  ?place rdfs:label ?placeLabel .
  
  FILTER (CONTAINS(LCASE(?placeLabel), ""socialist federal republic of yugoslavia""))
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
487,4,train,Give me the birth name of Phil Scott.,SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName
WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Phil Scott""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
827,3,train,"Who is the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  ?person dbr:Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859) .
  ?person dbo:child ?child .
  ?child rdfs:label ?childName .
  FILTER (LANG(?childName) = ""en"")
  
  OPTIONAL { 
    ?child a dbo:RoyalFamilyMember .
  }
  
  FILTER EXISTS {
    ?child a dbo:RoyalFamilyMember .
  }
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
435,9,train,"Give me the region of Greenwich Mean Time and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . }","```sparql
# Query for the region of Greenwich Mean Time
SELECT DISTINCT ?region WHERE {
  ?timeZone a dbo:TimeZone ;
            rdfs:label ""Greenwich Mean Time""@en .
  ?location dbo:timeZone ?timeZone ;
            dbo:administrativeRegion ?region .
}

UNION

# Query for the work of Article 62, Section IV of Constitution of Iceland
SELECT DISTINCT ?description WHERE {
  ?constitution a dbo:Constitution ;
                rdfs:label ""Constitution of Iceland""@en ;
                dbp:article ?article .
  ?article rdfs:label ""Article 62"" .
  ?section rdfs:label ""Section IV"" ;
           dbo:partOf ?article .
  ?section dbo:description ?description .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
488,12,train,Give me the administration of Emperor Go-Yōzei and death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?deathPlace
WHERE {
  # Administration period of Emperor Go-Yōzei
  dbr:Emperor_Go-Yōzei a dbo:Monarch ;
    dbo:reign ?administration .

  # Death place of Tokugawa Ieyasu
  dbr:Tokugawa_Ieyasu a dbo:Person ;
    dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
666,2,train,"Give me the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team ?season
WHERE {
  ?coach dbo:birthName ""Leonid Vladimirovich Slutsky""@en .
  ?coach a dbo:FootballManager .
  ?coach dbo:coach ?team .
  ?team a dbo:SoccerClub .
  OPTIONAL { ?team dbo:season ?season }
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
767,8,train,Give me the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo
WHERE {
  dbr:Black_Hood dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
9,9,train,"Give me the alma mater of Allen Hill (scientist) and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?almaMaterName
WHERE {
  VALUES (?person ?personLabel) { 
    (dbr:Allen_Hill_(scientist) ""Allen Hill (scientist)"") 
    (dbr:John_Alderdice_Baron_Alderdice ""John Alderdice, Baron Alderdice"")
  }
  
  ?person rdfs:label ?personLabel .
  ?person dbo:almaMater ?almaMater .
  ?almaMater rdfs:label ?almaMaterName .
}
ORDER BY ?name
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
281,1,train,Give me the entity in Colony of New Zealand.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?property ?value
WHERE {
  VALUES (?colony) { dbr:Colony_of_New_Zealand }
  
  ?colony a dbo:Country .
  ?colony ?property ?entity .

  OPTIONAL {
    ?entity rdfs:label ?value .
    FILTER (lang(?value) = 'en')
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
179,8,train,Give me the parent of the child of Bhumibol Adulyadej.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parent
WHERE {
  ?bhumibol a dbo:Person ;
            foaf:name ""Bhumibol Adulyadej""@en .
  
  ?bhumibol dbo:child ?child .
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,2,20,3,0,0,1.0,1.0,1.0
142,6,train,Give me the birthplace of the actor of Papa wa Newscaster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?actor dbo:role <http://dbpedia.org/resource/Papa_wa_Newscaster#Papa> .
  ?actor dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,2,9,0,0,3,0,0.0,0
778,8,train,"Give me the author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v0 <http://dbpedia.org/ontology/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?author dbr:Bill_Joy .
  ?author dbo:creator ?work .
  ?work a dbo:Software .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
378,8,train,Who is the commander in Great Siege of Gibraltar?,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?event a dbo:Event ;
         dbp:name ""Great Siege of Gibraltar""@en .
  ?event dbp:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
360,10,train,"Give me the native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native
WHERE {
  ?person dbo:deathPlace ?deathPlace .
  FILTER (?person = dbr:Winnie_Madikizela-Mandela) .

  ?deathPlace rdf:type dbo:Settlement .

  ?deathPlace dbo:native ?native .
}
```",2,3,3,2,1,2,3,28,0,0,1099,0,0.0,0
391,0,train,"Give me the native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Compton,_California .
}
```",1,1,2,1,1,3,3,71,0,0,97,0,0.0,0
534,0,train,Give me the birth place of Garret FitzGerald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Garret FitzGerald""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
528,10,train,Give me the force of Narciso Campero and war of Irene Morales.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query to find the military rank of Narciso Campero
SELECT ?rank WHERE {
  ?campero a dbo:Person ;
           foaf:name ""Narciso Campero""@en .
  OPTIONAL { ?campero dbo:militaryRank ?rank . }
}

# Query to find wars associated with Irene Morales
SELECT DISTINCT ?war WHERE {
  ?morales a dbo:Person ;
           foaf:name ""Irene Morales""@en .
  OPTIONAL { ?morales dbo:participatedIn ?war . }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
303,3,train,"Who is the commander, that is a politician, in United States invasion of Panama?",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?operation dbo:commander ?person .
  ?person a dbo:MilitaryPerson ;
          dbo:politicalAffiliation ?affiliation .
  FILTER EXISTS { ?person dbo:officeHolder ?office } .
  
  # Filter for the specific operation
  VALUES ?operation { dbr:Operation_Just_Cause }
  
  # Get the name of the person
  ?person rdfs:label ?name .
  
  # Ensure English language labels
  FILTER (lang(?name) = 'en')
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
492,7,train,Give me the country of Khemis Miliana District.,SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
  dbr:Khemis_Miliana_District dbo:country ?country .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
427,9,train,Give me the reference to Partito Popolare Italiano and party of Giulio Andreotti.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . }","```sparql
# Query to get the reference (URI) of Partito Popolare Italiano
SELECT ?party WHERE {
  ?party rdfs:label ""Partito Popolare Italiano""@it .
  FILTER(LANG(?party) = 'it')
}

# Query to find the political party associated with Giulio Andreotti
SELECT ?party WHERE {
  ?andreotti dbo:birthName ""Giulio Andreotti"" ;
             dbo:party ?party .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
9,11,train,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater
WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf dbr:Northern_Ireland_Forum_Mayor ;
          dbo:almaMater ?almaMater .
}
```",2,3,3,2,1,3,3,71,0,0,6,0,0.0,0
427,4,train,Give me the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>

SELECT ?label
WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ?label ;
         dbo:foundingDate ?foundingDate .
  
  FILTER (CONTAINS(LCASE(?label), ""italian people's party"") && 
          year(?foundingDate) <= 1994 &&
          year(?foundingDate) >= 1989)
}
ORDER BY ?label
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,2,train,Give me the entity in Sri Lanka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label WHERE {
  VALUES ?country { dbr:Sri_Lanka }
  
  ?entity a dbo:City ;
          dbo:country dbr:Sri_Lanka .
  OPTIONAL { ?entity rdfs:label ?label . FILTER (lang(?label) = 'en') }

  UNION

  ?entity a dbo:Place ;
          dbo:location dbr:Sri_Lanka .
  OPTIONAL { ?entity rdfs:label ?label . FILTER (lang(?label) = 'en') }
}
ORDER BY ?label
LIMIT 10
```",1,1,2,1,1,2,3,28,0,0,62,0,0.0,0
528,2,train,Give me the force of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?position
WHERE {
  VALUES ?campero { dbr:Narciso_Campero }
  ?campero dbo:militaryRank ?position .
  UNION
  ?campero dbo:office ?position .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
645,9,train,"Give me the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?battle dbo:eventLocation dbr:Diamond_Rock ;
          dbo:commander ?commander .
  
  FILTER (str(?battle) = ""Battle of Diamond Rock"")
  
  ?commander dbo:residence ?residence .
  
  ?residence rdf:type dbo:Country
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
801,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo
WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
547,15,train,Give me the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild WHERE {
  ?williamHaliburton a dbo:Person ;
                     foaf:name ""William Haliburton""@en .
  
  ?williamHaliburton dbo:child ?child .
  
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
10,0,train,Give me the associated musical artist of Matt Colton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?mattColton a dbo:Person ;
              foaf:name ""Matt Colton""@en .
  
  OPTIONAL { ?mattColton dbo:associatedBand ?artist . }
  OPTIONAL { ?mattColton dbo:collaborator ?artist . }

  FILTER (lang(?mattColtonLabel) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
528,6,train,Give me the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Battle_of_La_Rinconada_de_Ate dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
294,7,train,"Give me the entity in Nashville, Tennessee and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInNashville ?restingPlace WHERE {
  # Find the entity in Nashville associated with Luke Lea
  OPTIONAL {
    ?lukeLea a dbo:Person ;
             foaf:name ""Luke Lea"" .
    ?lukeLea dbo:honoredWith ?entityInNashville .
    ?entityInNashville dbo:location dbr:Nashville_Tennessee .
  }

  # Find the resting place of Luke Lea
  OPTIONAL {
    ?lukeLea dbo:deathPlace ?restingPlace .
  }
  
  FILTER (regex(str(?lukeLea), ""Luke Lea""))
}
```",2,2,3,1,2,2,3,28,0,54441,1,0.0,0.0,0
754,8,train,Give me the parent of the child of Ram Khamhaeng.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?otherParent
WHERE {
  ?ramKhamhaeng a dbo:Person ;
                foaf:name ""Ram Khamhaeng""@en .
  
  ?child dbo:parent ?ramKhamhaeng ;
         dbo:parent ?otherParent .

}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
54,1,train,Give me the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Thado_Minsaw_of_Prome dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
360,9,train,Give me the native of Johannesburg and reference to Manfred Mann.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native ?manfredMannConnection
WHERE {
  # Find natives of Johannesburg
  ?native dbo:nativePlace dbr:Johannesburg .
  
  # Check if Manfred Mann has any connection to these individuals
  OPTIONAL {
    ?manfredMann dbo:nativePlace ?place .
    FILTER (?place = dbr:Johannesburg)
    BIND(dbr:Manfred_Mann AS ?manfredMannConnection)
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
645,5,train,Give me the child of Richard Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Richard Pankhurst""@en .
  ?person dbo:child ?child .
  ?child foaf:name ?childName .
}
```",1,1,2,1,1,3,2,20,0,3,3,0.0,0.0,0
161,6,train,"Give me the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?event (IF(STRSTARTS(LCASE(?eventType), ""societal""), ""Societal Event"", IF(STRSTARTS(LCASE(?eventType), ""military""), ""Military Conflict"", """")) AS ?type)
WHERE {
  VALUES ?person { dbr:Francisco_Largo_Caballero }
  
  ?person dbo:participatedIn ?event .
  ?event a ?eventType .

  FILTER (LCASE(?eventType) ENDSWITH ""event"" || LCASE(?eventType) ENDSWITH ""conflict"")
}
ORDER BY ?type
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
251,2,train,Give me the death place of Laura Mancinelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace
WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Laura Mancinelli""@en .
  ?person dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
314,0,train,Give me the person deceased at Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Madrid .
}
```",1,1,2,1,1,2,3,28,12,1334,8,0.008915304606240713,0.6,0.017569546120058566
391,14,train,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie (GROUP_CONCAT(?actor; separator="", "") AS ?actors)
WHERE {
  ?movie a dbo:Film ;
         a dbo:Work ;
         a dbo:TelevisionShow .
  
  ?movie dbo:starring ?person .
  ?person foaf:name ""Roz Ryan""@en .

  OPTIONAL { 
    ?movie dbo:starring ?actor .
    FILTER(?actor != ?person)
  }
}
GROUP BY ?movie
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
712,7,train,Give me the capital of the country of Armed Forces of South Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  VALUES ?country { dbr:Ukraine }
  ?country dbo:capital ?capital .
}
```",2,2,3,2,1,3,2,20,0,1,3,0.0,0.0,0
312,2,train,"Give me the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?administration a dbo:Settlement .
  ?administration a dbo:Region .
  ?administration dbo:country dbr:Italy .
  ?administration a dbo:State .
  ?partyAffiliation dbo:affiliatedParty dbr:Democratic_Party_(Italy) .
  ?administration dbo:partyAffiliation ?partyAffiliation .
}
```",1,5,2,1,1,2,2,9,0,0,14,0,0.0,0
801,9,train,Give me the producer of Westside Story (song) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer
WHERE {
  dbr:West_Side_Story_(song) dbo:producer ?producer .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
404,15,train,"Who is the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia?",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName
WHERE {
  dbr:Princess_Victoria_Louise_of_Prussia dbo:birthName ?birthName .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
294,10,train,Give me the resting place of the architect of P. D. Houston Jr. House.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?architectRestingPlace WHERE {
  ?house dbo:architect ?architect .
  FILTER(STRSTARTS(STR(?house), ""http://dbpedia.org/resource/P._D._Houston_Jr._House""))
  ?architect dbo:deathPlace ?architectRestingPlace .
}
```",2,2,3,2,1,2,3,28,0,1,1,0.0,0.0,0
339,1,train,Give me the father of Princess Elizabeth of Greece and Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?person dbo:father ?father .
  ?person rdfs:label ""Princess Elizabeth of Greece and Denmark""@en .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
963,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country ?region
WHERE {
  ?country a dbo:Country .
  ?country dbp:timeZone ""Central European Time"" .
  OPTIONAL { ?country dbo:region ?region . }
}
```",1,2,2,1,1,3,2,20,0,0,56,0,0.0,0
820,5,train,Who is the parent of Jason Schwartzman?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  VALUES ?jasonSchwartzman { dbr:Jason_Schwartzman }
  ?jasonSchwartzman dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER (LANG(?parentName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
994,5,train,"Give me the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Fredrik Thordendal""@en .
  ?membership dbo:member ?person ;
              dbo:organization ?band .
  FILTER (?band a dbo:Band)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
617,0,train,Give me the child of Doubravka of Bohemia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?s dbo:child ?child .
  ?s foaf:name ""Doubravka of Bohemia""@en .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
16,9,train,Give me the professional in Actress and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actress WHERE {
  ?actress dbo:occupation dbp:Actress .
  ?actress dbo:spouse ?ted .
  ?ted foaf:name ""Ted McGinley""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
915,9,train,"Give me the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?directorName ?birthPlaceLabel WHERE {
  # Find the director of the film ""Pipe Dreams""
  ?film dbo:director ?director .
  ?film rdfs:label ""Pipe Dreams""@en .

  # Get the name of the director
  ?director foaf:name ?directorName .

  # Get the birthplace of the director, ensuring it is a settlement
  ?director dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement .

  # Filter to ensure we are looking at English labels
  FILTER(LANG(?directorName) = 'en')
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
115,4,train,Give me the alma mater of Vladimir Cerrón and alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?name ?almaMaterLabel WHERE {
  VALUES ?person { 
    dbpedia:Vladimir_Cerr%C3%B3n 
    dbpedia:Jorge_Sotomayor_Tello 
  }
  
  ?person dbo:name ?name .
  ?person dbo:almaMater ?almaMater .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

} ORDER BY ?person
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
184,4,train,Give me the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personLabel WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Budapest .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,2751,0,0.0,0
801,7,train,"Give me the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?album a dbo:Album .
  ?album rdfs:label ""What U See Is What U Get""@en .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
427,5,train,Who is the alumnus of Massachusetts Institute of Technology?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:almaMater dbpedia:Massachusetts_Institute_of_Technology .
}
```",1,1,2,1,1,3,3,71,0,0,1559,0,0.0,0
16,12,train,Give me the professional in Actress and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Georgeanne Marie Rice"" .
  ?person dbo:occupation dbr:Actress .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
16,14,train,Give me the person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName
WHERE {
  ?person rdfs:label ""Gigi Rice""@en .
  ?person dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
959,0,train,Give me the member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  ?university a dbo:University ;
              rdfs:label ""University of Tsukuba""@en .
  
  OPTIONAL { ?university dbo:alumni ?person . }
  OPTIONAL { ?university dbo:member ?person . }

  FILTER(LANG(?universityLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,267,0,0.0,0
712,8,train,Give me the resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?restingPlace WHERE {
  ?person dbo:award dbr:Hero_of_the_Soviet_Union .
  OPTIONAL { ?person dbo:finalRestingPlace ?restingPlace . }
}
```",2,2,3,2,1,3,2,20,0,887,49,0.0,0.0,0
767,17,train,"Give me the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  VALUES ?burland { dbr:Matthew_Burland }
  OPTIONAL {
    ?work dbo:creator ?burland .
    ?work dbo:name ?alterEgo .
  }
  UNION
  {
    ?burland dbo:pseudonym ?alterEgo .
  }
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
356,6,train,Give me the player in 2015 Sacramento Republic FC season and team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teamName WHERE {
    ?player a dbo:Player ;
            foaf:name ""Mark Briggs"" .
    
    ?player dbo:team ?team .
    ?team dbo:season ?season .
    ?season dbo:year ""2015""^^xsd:gYear .

    ?team rdfs:label ?teamName .
    FILTER(LANG(?teamName) = 'en')
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
55,1,train,Give me the band member of Metallica.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName WHERE {
  ?bandMember dbo:band dbr:Metallica .
  ?bandMember foaf:name ?memberName .
}
```",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
77,8,train,Give me the force of the mayor of Congress Poland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?force
WHERE {
  ?congressPoland a dbo:AdministrativeRegion ;
                  rdfs:label ""Congress Poland""@en .
  
  OPTIONAL { 
    ?congressPoland dbo:headOfState ?mayor .
    ?mayor dbo:militaryForce ?force .
  }
}
```",2,2,3,2,1,3,2,20,0,0,33,0,0.0,0
696,8,train,Give me the landmark at elevation of the award of Nie Rongzhen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v0 . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark ?elevation WHERE {
  # Step 1: Identify awards associated with Nie Rongzhen
  ?nie a dbo:Person ;
      foaf:name ""Nie Rongzhen""@en ;
      dbo:honoraryTitle ?award .

  # Assuming the award has an elevation property (hypothetical)
  OPTIONAL { ?award dbo:elevation ?elevation . }

  FILTER(?elevation != """")

  # Step 2: Find landmarks at this elevation
  ?landmark a dbo:Landmark ;
            dbo:elevation ?elevation .
}
```",2,2,3,2,1,3,2,20,0,0,599,0,0.0,0
427,14,train,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?partyLabel
WHERE {
  ?person a dbo:OfficeHolder ;
          a dbo:Politician ;
          dbo:birthName ""Romano Antonio Prodi""@en .
  ?person dbo:party ?party .
  ?party rdfs:label ?partyLabel .
}
```",2,4,3,2,1,3,3,71,0,7,7,0.0,0.0,0
77,4,train,"Give me the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization WHERE {
  ?organization a dbo:Organization .
  ?organization dbo:headquarter dbr:Warsaw .
}
```",1,2,2,1,1,3,2,20,0,0,7,0,0.0,0
281,16,train,"Give me the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?election dbo:eventType dbr:New_South_Wales_state_election,_1962 .
  ?candidate dbo:electedDuring ?election ;
              a dbo:Politician .
  ?candidate dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?birthPlace a dbo:Country }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
801,12,train,Give me the associated musical artist of Chris Taylor (music producer) and producer of Westside Story (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist ?producer 
WHERE {
  # Find the associated musical artist of Chris Taylor
  OPTIONAL {
    ?chris a dbo:MusicProducer ;
           foaf:name ""Chris Taylor"" .
    ?chris dbo:associatedBand ?artist .
  }
  
  # Find the producer of the song Westside Story
  ?song a dbo:Songs ;
        rdfs:label ""Westside Story (song)""@en .
  ?song dbo:producer ?producer .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
184,16,train,"Give me the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child WHERE {
  # Identify the resource for Archduke Ladislaus Philipp of Austria
  wd:Q1234567 dbo:parent ?parent . 

  # For each parent, find their children who are royalty
  ?parent dbo:child ?child .
  
  FILTER EXISTS { 
    ?child a dbo:RoyalFamilyMember .
  }
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia resource identifier for Archduke Ladislaus Philipp of Austria.",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
391,11,train,Give me the native of the figure known as Hub City.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nativeName
WHERE {
  ?city rdfs:label ""Columbia, South Carolina""@en.
  ?city rdfs:label ?nativeName.
}
```",2,2,3,2,1,3,3,71,0,1,176,0.0,0.0,0
77,9,train,Who is the awardee of the award of Maxim Grigorievich Vlasov?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?awardee
WHERE {
  VALUES ?maxim { dbr:Maxim_Grigorievich_Vlasov }
  ?maxim dbo:award ?award .
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,416,0,0.0,0
16,7,train,Who is the alumnus of Ohio State University?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  ?alumnus dbo:almaMater dbr:Ohio_State_University .
}
```",1,1,2,1,1,3,3,71,467,0,0,1.0,1.0,1.0
92,6,train,"Give me the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthDate
WHERE {
  ?person rdf:type dbo:Person .
  ?person foaf:name ""Jim Sheppard"" .
  ?person dbo:birthDate ?birthDate .
  ?person rdf:type dbo:Artist .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
981,3,train,Give me the region of Time in Indonesia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region
WHERE {
  dbr:Time_Magazine dbo:country dbr:Indonesia .
  OPTIONAL { dbr:Time_Magazine dbo:headquartersLocation ?location . }
  OPTIONAL { ?location dbo:administrativeRegion ?region . FILTER (lang(?region) = ""en"") }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
