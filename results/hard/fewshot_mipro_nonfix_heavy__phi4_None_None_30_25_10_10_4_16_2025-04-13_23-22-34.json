{
  "predictor": {
    "traces": [],
    "train": [],
    "demos": [
      {
        "augmented": true,
        "question": "Give me the band of Phil Alvin.",
        "sparql_query": "SELECT ?result WHERE { <http:\/\/dbpedia.org\/resource\/Phil_Alvin> <http:\/\/dbpedia.org\/ontology\/associatedMusicalArtist> ?result . }"
      },
      {
        "augmented": true,
        "question": "Give me the writer of The Roaring Silence.",
        "sparql_query": "SELECT ?result WHERE { <http:\/\/dbpedia.org\/resource\/The_Roaring_Silence> <http:\/\/dbpedia.org\/property\/writer> ?result . }"
      },
      {
        "question": "Give me the birth place, that is a settlement, of Marion James.",
        "sparql_query": "SELECT ?result WHERE { <http:\/\/dbpedia.org\/resource\/Marion_James> <http:\/\/dbpedia.org\/ontology\/birthPlace> ?result . ?result <http:\/\/www.w3.org\/1999\/02\/22-rdf-syntax-ns#type> <http:\/\/dbpedia.org\/ontology\/Settlement>. }",
        "id": 294,
        "subid": 5,
        "split": "train",
        "num_edges": 1,
        "num_edges_full": 2,
        "num_nodes": 2,
        "depth": 1,
        "breadth": 1,
        "base_depth": 2,
        "base_breadth": 3,
        "subgraphs": 28
      },
      {
        "question": "Give me the person born in 1970 and professional in Composer.",
        "sparql_query": "SELECT ?result WHERE { ?result <http:\/\/dbpedia.org\/property\/occupation> <http:\/\/dbpedia.org\/resource\/Composer> . ?result <http:\/\/dbpedia.org\/ontology\/birthYear> \"1970\"^^<http:\/\/www.w3.org\/2001\/XMLSchema#gYear> . }",
        "id": 318,
        "subid": 4,
        "split": "train",
        "num_edges": 2,
        "num_edges_full": 2,
        "num_nodes": 3,
        "depth": 1,
        "breadth": 2,
        "base_depth": 2,
        "base_breadth": 2,
        "subgraphs": 9
      },
      {
        "question": "Give me the father of the child of Thinkhaya of Pagan.",
        "sparql_query": "SELECT ?result WHERE { <http:\/\/dbpedia.org\/resource\/Thinkhaya_of_Pagan> <http:\/\/dbpedia.org\/ontology\/child> ?v1 . ?v1 <http:\/\/dbpedia.org\/property\/father> ?result . }",
        "id": 54,
        "subid": 15,
        "split": "train",
        "num_edges": 2,
        "num_edges_full": 2,
        "num_nodes": 3,
        "depth": 2,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 3,
        "subgraphs": 71
      },
      {
        "question": "Give me the spouse of the person born as Ted Martin McGinley.",
        "sparql_query": "SELECT ?result WHERE { ?v0 <http:\/\/dbpedia.org\/property\/birthName> \"Ted Martin McGinley\"@en . ?v0 <http:\/\/dbpedia.org\/ontology\/spouse> ?result . }",
        "id": 16,
        "subid": 11,
        "split": "train",
        "num_edges": 2,
        "num_edges_full": 2,
        "num_nodes": 3,
        "depth": 2,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 3,
        "subgraphs": 71
      },
      {
        "question": "Give me the commander in German campaign of 1813.",
        "sparql_query": "SELECT ?result WHERE { <http:\/\/dbpedia.org\/resource\/German_campaign_of_1813> <http:\/\/dbpedia.org\/ontology\/commander> ?result . }",
        "id": 659,
        "subid": 0,
        "split": "train",
        "num_edges": 1,
        "num_edges_full": 1,
        "num_nodes": 2,
        "depth": 1,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 3,
        "subgraphs": 71
      },
      {
        "question": "Give me the birthplace of the awardee of Leroy P. Steele Prize.",
        "sparql_query": "SELECT ?result WHERE { ?v0 <http:\/\/dbpedia.org\/ontology\/birthPlace> ?result . ?v0 <http:\/\/dbpedia.org\/property\/awards> \"Leroy P. Steele Prize\"@en . }",
        "id": 197,
        "subid": 6,
        "split": "train",
        "num_edges": 2,
        "num_edges_full": 2,
        "num_nodes": 3,
        "depth": 2,
        "breadth": 1,
        "base_depth": 2,
        "base_breadth": 2,
        "subgraphs": 9
      },
      {
        "question": "Give me the award of Jonathon Band.",
        "sparql_query": "SELECT ?result WHERE { <http:\/\/dbpedia.org\/resource\/Jonathon_Band> <http:\/\/dbpedia.org\/property\/awards> ?result . }",
        "id": 281,
        "subid": 3,
        "split": "train",
        "num_edges": 1,
        "num_edges_full": 1,
        "num_nodes": 2,
        "depth": 1,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 3,
        "subgraphs": 71
      },
      {
        "question": "Give me the country, that is a country, of El Valle de Ant\u00f3n.",
        "sparql_query": "SELECT ?result WHERE { ?result <http:\/\/www.w3.org\/1999\/02\/22-rdf-syntax-ns#type> <http:\/\/dbpedia.org\/ontology\/Country>. <http:\/\/dbpedia.org\/resource\/El_Valle_de_Ant\u00f3n> <http:\/\/dbpedia.org\/ontology\/country> ?result . }",
        "id": 303,
        "subid": 4,
        "split": "train",
        "num_edges": 1,
        "num_edges_full": 2,
        "num_nodes": 2,
        "depth": 1,
        "breadth": 1,
        "base_depth": 2,
        "base_breadth": 3,
        "subgraphs": 28
      },
      {
        "question": "Give me the headquarter of Royal Dublin Society.",
        "sparql_query": "SELECT ?result WHERE { <http:\/\/dbpedia.org\/resource\/Royal_Dublin_Society> <http:\/\/dbpedia.org\/ontology\/headquarter> ?result . }",
        "id": 534,
        "subid": 1,
        "split": "train",
        "num_edges": 1,
        "num_edges_full": 1,
        "num_nodes": 2,
        "depth": 1,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 2,
        "subgraphs": 20
      },
      {
        "question": "Give me the father of Lizzie Spaulding.",
        "sparql_query": "SELECT ?result WHERE { <http:\/\/dbpedia.org\/resource\/Lizzie_Spaulding> <http:\/\/dbpedia.org\/property\/father> ?result . }",
        "id": 915,
        "subid": 1,
        "split": "train",
        "num_edges": 1,
        "num_edges_full": 1,
        "num_nodes": 2,
        "depth": 1,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 2,
        "subgraphs": 20
      },
      {
        "question": "Give me the band of Sh\u00e8na and band of Amba Shepherd.",
        "sparql_query": "SELECT ?result WHERE { <http:\/\/dbpedia.org\/resource\/Amba_Shepherd> <http:\/\/dbpedia.org\/ontology\/associatedMusicalArtist> ?result . <http:\/\/dbpedia.org\/resource\/Sh\u00e8na> <http:\/\/dbpedia.org\/ontology\/associatedMusicalArtist> ?result . }",
        "id": 747,
        "subid": 12,
        "split": "train",
        "num_edges": 2,
        "num_edges_full": 2,
        "num_nodes": 3,
        "depth": 1,
        "breadth": 2,
        "base_depth": 3,
        "base_breadth": 3,
        "subgraphs": 71
      },
      {
        "question": "Give me the party of Romano Prodi.",
        "sparql_query": "SELECT ?result WHERE { <http:\/\/dbpedia.org\/resource\/Romano_Prodi> <http:\/\/dbpedia.org\/ontology\/party> ?result . }",
        "id": 427,
        "subid": 2,
        "split": "train",
        "num_edges": 1,
        "num_edges_full": 1,
        "num_nodes": 2,
        "depth": 1,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 3,
        "subgraphs": 71
      },
      {
        "question": "Give me the entity in Indonesia and birth place of Novia Indriani Mamuaja.",
        "sparql_query": "SELECT ?result WHERE { ?result <http:\/\/dbpedia.org\/ontology\/country> <http:\/\/dbpedia.org\/resource\/Indonesia> . <http:\/\/dbpedia.org\/resource\/Novia_Indriani_Mamuaja> <http:\/\/dbpedia.org\/ontology\/birthPlace> ?result . }",
        "id": 981,
        "subid": 6,
        "split": "train",
        "num_edges": 2,
        "num_edges_full": 2,
        "num_nodes": 3,
        "depth": 1,
        "breadth": 2,
        "base_depth": 3,
        "base_breadth": 2,
        "subgraphs": 20
      },
      {
        "question": "Give me the birth name of Sharon Kao.",
        "sparql_query": "SELECT ?result WHERE { <http:\/\/dbpedia.org\/resource\/Sharon_Kao> <http:\/\/dbpedia.org\/property\/birthName> ?result . }",
        "id": 10,
        "subid": 5,
        "split": "train",
        "num_edges": 1,
        "num_edges_full": 1,
        "num_nodes": 2,
        "depth": 1,
        "breadth": 1,
        "base_depth": 2,
        "base_breadth": 3,
        "subgraphs": 28
      }
    ],
    "signature": {
      "instructions": "As an AI assistant specialized in translating natural language questions into SPARQL queries for DBpedia, your task is to generate accurate SPARQL queries based on given questions. You will utilize a straightforward prediction approach without additional reasoning or programming techniques.\n\nWhen provided with a question about relationships between entities (e.g., \"Give me the child of Ram Khamhaeng\"), produce a corresponding SPARQL query that retrieves this information from DBpedia. Ensure your output is in the format: `SELECT ?result WHERE { <entity_uri> <property_path> ?result . }`, where `<entity_uri>` and `<property_path>` are derived from the question.\n\nFor example:\n- Question: \"Give me the child of Ram Khamhaeng.\"\n  - Sparql Query: `SELECT ?result WHERE { <http:\/\/dbpedia.org\/resource\/Ram_Khamhaeng> <http:\/\/dbpedia.org\/ontology\/child> ?result . }`\n\nRemember, your focus is on mapping natural language inputs to structured query components effectively and efficiently.",
      "fields": [
        {
          "prefix": "Question:",
          "description": "question about something"
        },
        {
          "prefix": "Sparql Query:",
          "description": "sparql query for DBpedia"
        }
      ]
    },
    "lm": null
  },
  "metadata": {
    "dependency_versions": {
      "python": "3.10",
      "dspy": "2.6.12",
      "cloudpickle": "3.1"
    }
  }
}