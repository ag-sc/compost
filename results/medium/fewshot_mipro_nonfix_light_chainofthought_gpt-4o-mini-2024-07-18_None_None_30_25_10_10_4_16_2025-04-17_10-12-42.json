{
  "predictor.predict": {
    "traces": [],
    "train": [],
    "demos": [
      {
        "augmented": true,
        "question": "Give me the alma mater of Daniil Yegorov.",
        "reasoning": "The question asks for the alma mater of Daniil Yegorov, which refers to the educational institution he attended. To find this information, we can query DBpedia for the specific property related to his alma mater.",
        "sparql_query": "SELECT ?result WHERE { <http:\/\/dbpedia.org\/resource\/Daniil_Yegorov> <http:\/\/dbpedia.org\/ontology\/almaMater> ?result . }"
      },
      {
        "augmented": true,
        "question": "Give me the father of the parent of Princess Catherine of W\u00fcrttemberg.",
        "reasoning": "To find the father of the parent of Princess Catherine of W\u00fcrttemberg, we need to first identify the parent of Princess Catherine and then retrieve their father. This involves querying the relationships in the DBpedia ontology related to family connections.",
        "sparql_query": "SELECT ?result WHERE { <http:\/\/dbpedia.org\/resource\/Princess_Catherine_of_W\u00fcrttemberg> <http:\/\/dbpedia.org\/ontology\/parent> ?parent . ?parent <http:\/\/dbpedia.org\/property\/father> ?result . }"
      },
      {
        "augmented": true,
        "question": "Give me the player, that is a soccer club, in Rasoul Khatibi.",
        "reasoning": "Not supplied for this particular example.",
        "sparql_query": "SELECT ?result WHERE { <http:\/\/dbpedia.org\/resource\/Rasoul_Khatibi> <http:\/\/dbpedia.org\/ontology\/team> ?result . ?result a <http:\/\/dbpedia.org\/ontology\/SoccerClub> . }"
      },
      {
        "question": "Give me the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.",
        "sparql_query": "SELECT ?result WHERE { ?result <http:\/\/www.w3.org\/1999\/02\/22-rdf-syntax-ns#type> <http:\/\/dbpedia.org\/ontology\/SocietalEvent>. ?result <http:\/\/www.w3.org\/1999\/02\/22-rdf-syntax-ns#type> <http:\/\/dbpedia.org\/ontology\/MilitaryConflict>. ?result <http:\/\/dbpedia.org\/ontology\/commander> <http:\/\/dbpedia.org\/resource\/Herbert_Kitchener,_1st_Earl_Kitchener> . }",
        "id": 124,
        "subid": 8,
        "split": "train",
        "num_edges": 1,
        "num_edges_full": 3,
        "num_nodes": 2,
        "depth": 1,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 3,
        "subgraphs": 71
      },
      {
        "question": "Give me the parent of the professional in Actress and alumnus of Marymount College, Tarrytown.",
        "sparql_query": "SELECT ?result WHERE { ?v2 <http:\/\/dbpedia.org\/property\/occupation> \"Actress\"@en . ?result <http:\/\/dbpedia.org\/ontology\/child> ?v2 . ?result <http:\/\/dbpedia.org\/ontology\/almaMater> <http:\/\/dbpedia.org\/resource\/Marymount_College,_Tarrytown> . }",
        "id": 18,
        "subid": 17,
        "split": "train",
        "num_edges": 3,
        "num_edges_full": 3,
        "num_nodes": 4,
        "depth": 2,
        "breadth": 2,
        "base_depth": 2,
        "base_breadth": 3,
        "subgraphs": 28
      },
      {
        "question": "Who is the professional in Musician?",
        "sparql_query": "SELECT ?result WHERE { ?result <http:\/\/dbpedia.org\/property\/occupation> <http:\/\/dbpedia.org\/resource\/Musician> . }",
        "id": 933,
        "subid": 5,
        "split": "train",
        "num_edges": 1,
        "num_edges_full": 1,
        "num_nodes": 2,
        "depth": 1,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 3,
        "subgraphs": 71
      },
      {
        "question": "Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",
        "sparql_query": "SELECT ?result WHERE { ?v2 <http:\/\/www.w3.org\/1999\/02\/22-rdf-syntax-ns#type> <http:\/\/dbpedia.org\/ontology\/Athlete>. ?v1 <http:\/\/dbpedia.org\/property\/father> <http:\/\/dbpedia.org\/resource\/Kazuaki_Nagasawa> . ?v2 <http:\/\/www.w3.org\/1999\/02\/22-rdf-syntax-ns#type> <http:\/\/dbpedia.org\/ontology\/SportsManager>. ?v2 <http:\/\/www.w3.org\/1999\/02\/22-rdf-syntax-ns#type> <http:\/\/dbpedia.org\/ontology\/SoccerManager>. ?v2 <http:\/\/dbpedia.org\/ontology\/team> ?result . ?v1 <http:\/\/dbpedia.org\/property\/father> ?v2 . }",
        "id": 582,
        "subid": 26,
        "split": "train",
        "num_edges": 3,
        "num_edges_full": 6,
        "num_nodes": 4,
        "depth": 3,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 3,
        "subgraphs": 71
      },
      {
        "question": "Give me the death place of Patrick Moore and entity in the residence, that is a country, of Anna Sharkey.",
        "sparql_query": "SELECT ?result WHERE { ?v0 <http:\/\/www.w3.org\/1999\/02\/22-rdf-syntax-ns#type> <http:\/\/dbpedia.org\/ontology\/Country>. ?result <http:\/\/dbpedia.org\/ontology\/location> ?v0 . <http:\/\/dbpedia.org\/resource\/Patrick_Moore> <http:\/\/dbpedia.org\/ontology\/deathPlace> ?result . <http:\/\/dbpedia.org\/resource\/Anna_Sharkey> <http:\/\/dbpedia.org\/property\/residence> ?v0 . }",
        "id": 445,
        "subid": 19,
        "split": "train",
        "num_edges": 3,
        "num_edges_full": 4,
        "num_nodes": 4,
        "depth": 2,
        "breadth": 2,
        "base_depth": 3,
        "base_breadth": 3,
        "subgraphs": 71
      },
      {
        "question": "Give me the awardee of Medal bar and awardee of Volunteer Decoration.",
        "sparql_query": "SELECT ?result WHERE { ?result <http:\/\/dbpedia.org\/property\/awards> <http:\/\/dbpedia.org\/resource\/Volunteer_Decoration> . ?result <http:\/\/dbpedia.org\/property\/awards> <http:\/\/dbpedia.org\/resource\/Medal_bar> . }",
        "id": 281,
        "subid": 9,
        "split": "train",
        "num_edges": 2,
        "num_edges_full": 2,
        "num_nodes": 3,
        "depth": 1,
        "breadth": 2,
        "base_depth": 2,
        "base_breadth": 3,
        "subgraphs": 28
      },
      {
        "question": "Give me the child of Frederick I of W\u00fcrttemberg.",
        "sparql_query": "SELECT ?result WHERE { ?result <http:\/\/dbpedia.org\/property\/father> <http:\/\/dbpedia.org\/resource\/Frederick_I_of_W\u00fcrttemberg> . }",
        "id": 495,
        "subid": 0,
        "split": "train",
        "num_edges": 1,
        "num_edges_full": 1,
        "num_nodes": 2,
        "depth": 1,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 2,
        "subgraphs": 20
      },
      {
        "question": "Give me the child of Edoardo Agnelli (1831-1871).",
        "sparql_query": "SELECT ?result WHERE { ?result <http:\/\/dbpedia.org\/ontology\/parent> <http:\/\/dbpedia.org\/resource\/Edoardo_Agnelli_(1831-1871)> . }",
        "id": 273,
        "subid": 2,
        "split": "train",
        "num_edges": 1,
        "num_edges_full": 1,
        "num_nodes": 2,
        "depth": 1,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 2,
        "subgraphs": 20
      },
      {
        "question": "Give me the military force of War in Donbas (2014\u20132022).",
        "sparql_query": "SELECT ?result WHERE { ?result <http:\/\/dbpedia.org\/ontology\/battle> <http:\/\/dbpedia.org\/resource\/War_in_Donbas_(2014\u20132022)> . }",
        "id": 888,
        "subid": 2,
        "split": "train",
        "num_edges": 1,
        "num_edges_full": 1,
        "num_nodes": 2,
        "depth": 1,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 2,
        "subgraphs": 20
      },
      {
        "question": "Give me the person born as Isobel Jane Miller Richard.",
        "sparql_query": "SELECT ?result WHERE { ?result <http:\/\/dbpedia.org\/property\/birthName> \"Isobel Jane Miller Richard\"@en . }",
        "id": 579,
        "subid": 1,
        "split": "train",
        "num_edges": 1,
        "num_edges_full": 1,
        "num_nodes": 2,
        "depth": 1,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 2,
        "subgraphs": 20
      },
      {
        "question": "Give me the landmark at elevation of 5.",
        "sparql_query": "SELECT ?result WHERE { ?result <http:\/\/dbpedia.org\/ontology\/elevation> \"5\"^^<http:\/\/www.w3.org\/2001\/XMLSchema#integer> . }",
        "id": 136,
        "subid": 1,
        "split": "train",
        "num_edges": 1,
        "num_edges_full": 1,
        "num_nodes": 2,
        "depth": 1,
        "breadth": 1,
        "base_depth": 2,
        "base_breadth": 2,
        "subgraphs": 9
      },
      {
        "question": "Give me the band, that is a group and a band and an organisation, of Alan Warner (musician).",
        "sparql_query": "SELECT ?result WHERE { ?result <http:\/\/www.w3.org\/1999\/02\/22-rdf-syntax-ns#type> <http:\/\/dbpedia.org\/ontology\/Group>. <http:\/\/dbpedia.org\/resource\/Alan_Warner_(musician)> <http:\/\/dbpedia.org\/ontology\/associatedMusicalArtist> ?result . ?result <http:\/\/www.w3.org\/1999\/02\/22-rdf-syntax-ns#type> <http:\/\/dbpedia.org\/ontology\/Band>. ?result <http:\/\/www.w3.org\/1999\/02\/22-rdf-syntax-ns#type> <http:\/\/dbpedia.org\/ontology\/Organisation>. }",
        "id": 933,
        "subid": 8,
        "split": "train",
        "num_edges": 1,
        "num_edges_full": 4,
        "num_nodes": 2,
        "depth": 1,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 3,
        "subgraphs": 71
      },
      {
        "question": "Give me the actor of Being Mrs Elliot and person born in 1971.",
        "sparql_query": "SELECT ?result WHERE { ?result <http:\/\/dbpedia.org\/ontology\/birthYear> \"1971\"^^<http:\/\/www.w3.org\/2001\/XMLSchema#gYear> . <http:\/\/dbpedia.org\/resource\/Being_Mrs_Elliot> <http:\/\/dbpedia.org\/ontology\/starring> ?result . }",
        "id": 36,
        "subid": 6,
        "split": "train",
        "num_edges": 2,
        "num_edges_full": 2,
        "num_nodes": 3,
        "depth": 1,
        "breadth": 2,
        "base_depth": 2,
        "base_breadth": 3,
        "subgraphs": 28
      }
    ],
    "signature": {
      "instructions": "Using the natural language `question`, generate a detailed `reasoning` process that outlines the steps needed to derive the appropriate `sparql_query`. The `sparql_query` should accurately reflect the relationships and entities mentioned in the question, ensuring that the query can effectively retrieve relevant information from the DBpedia knowledge base.",
      "fields": [
        {
          "prefix": "Question:",
          "description": "question about something"
        },
        {
          "prefix": "Reasoning: Let's think step by step in order to",
          "description": "${reasoning}"
        },
        {
          "prefix": "Sparql Query:",
          "description": "sparql query for DBpedia"
        }
      ]
    },
    "lm": null
  },
  "metadata": {
    "dependency_versions": {
      "python": "3.12",
      "dspy": "2.6.13",
      "cloudpickle": "3.1"
    }
  }
}